[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8748571276664734, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2257304191589355, 1.8795742988586426, 1.4002149105072021, 1.0845156908035278, 0.9352409243583679, 0.8323283195495605, 0.7702773213386536, 0.7239602208137512, 0.6890323162078857, 0.6605302095413208, 0.6405627727508545, 0.618780791759491, 0.5953121185302734, 0.5723647475242615, 0.5688818097114563, 0.5402939915657043, 0.5230716466903687, 0.5185339450836182, 0.5055860877037048, 0.49823811650276184, 0.48530110716819763, 0.4731071889400482, 0.4742107689380646, 0.4618343412876129, 0.45226407051086426, 0.43923208117485046, 0.42923814058303833, 0.4224671423435211, 0.4132537245750427, 0.4171052873134613, 0.40286657214164734, 0.401645690202713, 0.3904517590999603, 0.3879532814025879, 0.3833983242511749, 0.3733660578727722, 0.3682907521724701, 0.3621160089969635, 0.3541252911090851, 0.35348233580589294, 0.34747570753097534, 0.3413771390914917, 0.33653727173805237, 0.3308607339859009, 0.32244059443473816, 0.3230111598968506, 0.31718727946281433, 0.3173046112060547, 0.3139379322528839, 0.3081393241882324, 0.3043934404850006, 0.29838016629219055, 0.28782740235328674, 0.28089746832847595, 0.27577802538871765, 0.27998772263526917, 0.2814391553401947, 0.2731642425060272, 0.2675051689147949, 0.25949910283088684, 0.25661787390708923, 0.2519060969352722, 0.2506949305534363, 0.24650299549102783, 0.24389494955539703, 0.2343333512544632, 0.22960200905799866, 0.2354428470134735, 0.23220930993556976, 0.2245044708251953, 0.22387441992759705, 0.22017037868499756, 0.21408002078533173, 0.20792903006076813, 0.209246426820755, 0.2106911689043045, 0.2036212831735611, 0.1993311047554016], "accuracy": [0.2793554365634918, 0.4865935742855072, 0.5695416927337646, 0.6186765432357788, 0.666358470916748, 0.7003037929534912, 0.7259278893470764, 0.7296261787414551, 0.748778223991394, 0.7600052952766418, 0.7647602558135986, 0.7684586048126221, 0.7815347909927368, 0.7957997918128967, 0.7957997918128967, 0.8035926818847656, 0.8074230551719666, 0.8078193068504333, 0.8131026029586792, 0.8224804997444153, 0.8222163319587708, 0.8245938420295715, 0.8298771381378174, 0.8335754871368408, 0.8360850811004639, 0.844010055065155, 0.8426892161369324, 0.8448025584220886, 0.8471800088882446, 0.8491612672805786, 0.8574824929237366, 0.8543124794960022, 0.858671247959137, 0.859199583530426, 0.858671247959137, 0.8667283058166504, 0.863558292388916, 0.8702945709228516, 0.8681812286376953, 0.8706908226013184, 0.8689737319946289, 0.8739928603172302, 0.8782195448875427, 0.8821820020675659, 0.8841632604598999, 0.8782195448875427, 0.8869370222091675, 0.8794082403182983, 0.8840311765670776, 0.8815215826034546, 0.8944657444953918, 0.8912957310676575, 0.8919561505317688, 0.8926165699958801, 0.8949940800666809, 0.897899866104126, 0.8994848728179932, 0.898428201675415, 0.9041078090667725, 0.9046360850334167, 0.9060890078544617, 0.9095231890678406, 0.9060890078544617, 0.9108440279960632, 0.9080702662467957, 0.9149385690689087, 0.9140139818191528, 0.9083344340324402, 0.915070652961731, 0.915070652961731, 0.9159952402114868, 0.921938955783844, 0.9198256731033325, 0.9210143685340881, 0.9228635430335999, 0.9196935892105103, 0.9269581437110901, 0.926429808139801], "val_loss": [2.045520782470703, 1.521894097328186, 1.045864224433899, 0.8405641317367554, 0.7541571259498596, 0.6997856497764587, 0.6578887701034546, 0.6186016201972961, 0.5940539836883545, 0.5707026124000549, 0.547885000705719, 0.5374830365180969, 0.5198137760162354, 0.5039316415786743, 0.5027194023132324, 0.4843730330467224, 0.4730151891708374, 0.46506747603416443, 0.45391303300857544, 0.454712837934494, 0.44479256868362427, 0.4381479024887085, 0.4374189078807831, 0.43261051177978516, 0.42431265115737915, 0.41918185353279114, 0.41278308629989624, 0.4116319715976715, 0.4080835282802582, 0.4041145443916321, 0.40467435121536255, 0.4004606008529663, 0.39678290486335754, 0.3894149661064148, 0.3937996029853821, 0.3846401274204254, 0.38279345631599426, 0.38769441843032837, 0.3774288296699524, 0.3818838596343994, 0.37320321798324585, 0.3775084614753723, 0.3697284460067749, 0.37272608280181885, 0.3658878207206726, 0.3662434220314026, 0.36805737018585205, 0.36323216557502747, 0.36421117186546326, 0.35865551233291626, 0.3593340516090393, 0.3540715277194977, 0.35871216654777527, 0.35692235827445984, 0.3546740710735321, 0.35243961215019226, 0.349816232919693, 0.35567015409469604, 0.35231485962867737, 0.3486785590648651, 0.35001054406166077, 0.34874990582466125, 0.35194164514541626, 0.3539067804813385, 0.348347544670105, 0.35494935512542725, 0.35152509808540344, 0.34135204553604126, 0.3479156792163849, 0.34889012575149536, 0.3503827452659607, 0.3495117723941803, 0.3451566994190216, 0.34634536504745483, 0.34823745489120483, 0.34743717312812805, 0.35348641872406006, 0.34741130471229553], "val_accuracy": [0.5426666736602783, 0.6576666831970215, 0.6840000152587891, 0.7020000219345093, 0.7226666808128357, 0.737333357334137, 0.750333309173584, 0.7616666555404663, 0.7689999938011169, 0.7879999876022339, 0.7933333516120911, 0.7963333129882812, 0.8073333501815796, 0.8169999718666077, 0.8173333406448364, 0.8223333358764648, 0.8309999704360962, 0.8333333134651184, 0.8413333296775818, 0.8453333377838135, 0.8383333086967468, 0.8453333377838135, 0.8489999771118164, 0.8456666469573975, 0.8539999723434448, 0.8519999980926514, 0.8550000190734863, 0.8566666841506958, 0.859666645526886, 0.8576666712760925, 0.8603333234786987, 0.8579999804496765, 0.8613333106040955, 0.8656666874885559, 0.8640000224113464, 0.8653333187103271, 0.8663333058357239, 0.8640000224113464, 0.8696666955947876, 0.8663333058357239, 0.8700000047683716, 0.8663333058357239, 0.8690000176429749, 0.8690000176429749, 0.8706666827201843, 0.8693333268165588, 0.8690000176429749, 0.871666669845581, 0.875, 0.8740000128746033, 0.8730000257492065, 0.875333309173584, 0.8763333559036255, 0.874666690826416, 0.8769999742507935, 0.8790000081062317, 0.8790000081062317, 0.8793333172798157, 0.878000020980835, 0.8763333559036255, 0.8816666603088379, 0.878333330154419, 0.8813333511352539, 0.8786666393280029, 0.8820000290870667, 0.875, 0.8796666860580444, 0.8826666474342346, 0.8796666860580444, 0.8813333511352539, 0.8793333172798157, 0.8823333382606506, 0.8856666684150696, 0.8840000033378601, 0.8856666684150696, 0.8823333382606506, 0.8820000290870667, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8505714535713196, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223468542098999, 1.8646577596664429, 1.3896132707595825, 1.0966898202896118, 0.9316871166229248, 0.8320264220237732, 0.7661293148994446, 0.7209510207176208, 0.6879935264587402, 0.6623897552490234, 0.6274514198303223, 0.6080165505409241, 0.5881180763244629, 0.5639541745185852, 0.548005998134613, 0.5369958877563477, 0.5180974006652832, 0.5101543664932251, 0.4986344873905182, 0.4857357144355774, 0.46877506375312805, 0.4665380120277405, 0.4510728418827057, 0.44139760732650757, 0.4374650716781616, 0.43159380555152893, 0.42464032769203186, 0.4210713505744934, 0.41500920057296753, 0.3994854986667633, 0.3918526768684387, 0.38304054737091064, 0.3832681179046631, 0.38025209307670593, 0.3673684895038605, 0.36596909165382385, 0.36347687244415283, 0.35940685868263245, 0.3567724823951721, 0.3587340712547302, 0.34175199270248413, 0.33313071727752686, 0.33298948407173157, 0.32334908843040466, 0.3193584978580475, 0.31640878319740295, 0.3107087016105652, 0.30312904715538025], "accuracy": [0.2673358917236328, 0.4939902126789093, 0.5628054141998291, 0.6152423620223999, 0.6639809608459473, 0.6983225345611572, 0.7236824631690979, 0.7368907928466797, 0.7456082701683044, 0.7573636174201965, 0.7721568942070007, 0.7773081660270691, 0.7858935594558716, 0.7960638999938965, 0.7979130744934082, 0.8025360107421875, 0.8150838613510132, 0.8162726163864136, 0.8212917447090149, 0.8273676037788391, 0.8354246616363525, 0.8329150676727295, 0.8401796221733093, 0.8467837572097778, 0.8446704745292664, 0.8479725122451782, 0.8512746095657349, 0.8490291833877563, 0.8536521196365356, 0.8584070801734924, 0.863558292388916, 0.8642187118530273, 0.8667283058166504, 0.8659358024597168, 0.8720116019248962, 0.868049144744873, 0.8708229064941406, 0.8716153502464294, 0.8721436858177185, 0.8765024542808533, 0.8780874609947205, 0.8840311765670776, 0.8824461698532104, 0.8825782537460327, 0.887201189994812, 0.8897107243537903, 0.8905032277107239, 0.8920882344245911], "val_loss": [2.0394070148468018, 1.5101149082183838, 1.0421043634414673, 0.8374251127243042, 0.7534008622169495, 0.6996284127235413, 0.6495898365974426, 0.6192871332168579, 0.5900338292121887, 0.5705060362815857, 0.547225296497345, 0.5280880331993103, 0.5135085582733154, 0.5034987926483154, 0.4914120137691498, 0.48154857754707336, 0.4687512516975403, 0.4578050971031189, 0.45714741945266724, 0.4443865120410919, 0.43833863735198975, 0.43557748198509216, 0.4331563413143158, 0.4207479655742645, 0.41446906328201294, 0.41377344727516174, 0.41477489471435547, 0.40658503770828247, 0.4043339788913727, 0.3985883891582489, 0.3946402668952942, 0.39144837856292725, 0.3889758288860321, 0.38392147421836853, 0.3833549916744232, 0.38015803694725037, 0.38699910044670105, 0.38360369205474854, 0.3784509301185608, 0.37491291761398315, 0.37397220730781555, 0.3749833106994629, 0.3661974370479584, 0.36817675828933716, 0.3669060170650482, 0.36997079849243164, 0.3622165620326996, 0.3635905683040619], "val_accuracy": [0.5383333563804626, 0.6610000133514404, 0.6756666898727417, 0.7083333134651184, 0.7356666922569275, 0.7483333349227905, 0.7639999985694885, 0.7699999809265137, 0.7853333353996277, 0.7903333306312561, 0.796999990940094, 0.8076666593551636, 0.8090000152587891, 0.8163333535194397, 0.8169999718666077, 0.8230000138282776, 0.8266666531562805, 0.8353333473205566, 0.8343333601951599, 0.8383333086967468, 0.8370000123977661, 0.8433333039283752, 0.8420000076293945, 0.8489999771118164, 0.8506666421890259, 0.8496666550636292, 0.8473333120346069, 0.8519999980926514, 0.8586666584014893, 0.8550000190734863, 0.8560000061988831, 0.859666645526886, 0.8603333234786987, 0.8633333444595337, 0.8629999756813049, 0.8640000224113464, 0.862333357334137, 0.8616666793823242, 0.8640000224113464, 0.8629999756813049, 0.8669999837875366, 0.8693333268165588, 0.8726666569709778, 0.8703333139419556, 0.8723333477973938, 0.8650000095367432, 0.8726666569709778, 0.8723333477973938]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 3, 0, 5], [0, 1, 0, 0], [39, 39, 45], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 6, 6, 8, 2, 4, 1, 4, 2, 9], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 28, 1]], "fitness": -0.3774285614490509, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.245786190032959, 2.1895153522491455, 2.1035728454589844, 2.400857925415039, 2.304029703140259, 2.445354700088501, 2.2878708839416504, 2.3324406147003174], "accuracy": [0.20353981852531433, 0.17012283205986023, 0.2432967871427536, 0.1806894689798355, 0.1002509593963623, 0.14053626358509064, 0.12772421538829803, 0.11253467202186584], "val_loss": [2.311734914779663, 2.2298078536987305, 1.8758330345153809, 2.306413412094116, 2.2989821434020996, 2.3056232929229736, 2.0853114128112793, 2.3030543327331543], "val_accuracy": [0.1003333330154419, 0.17233332991600037, 0.375, 0.0976666659116745, 0.10300000011920929, 0.09933333098888397, 0.2486666738986969, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 3, 0], [80, 99, 96, 23, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035683631896973, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 2, 3, 2, 3, 5, 9, 9], [0, 2, 0, 3], [16, 16, 26, 11], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 7, 3, 2, 2, 0, 8, 4, 5, 8, 2, 1, 1, 1, 4, 0, 3, 8, 2, 6, 7, 7, 2, 1, 7, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 2, 6, 3, 4, 6, 3, 0, 0, 3, 4, 1, 3, 7, 5, 6, 0, 6, 2, 0], [16, 99, 96, 99, 61, 1, 82, 37, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 8, 3, 4, 2, 1, 1, 1, 66, 37, 29, 9], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.sqrt(beta)), tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.square(grad), tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.subtract(beta, tf.math.subtract(grad, sigma)), grad), grad))))), tf.math.pow(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, alpha), sigma), grad))), tf.math.add(grad, grad)))), tf.math.subtract(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.subtract(grad, beta)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 1, 2, 1, 0], [0, 2, 0, 3, 5, 1, 0], [16, 16, 92], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0974285677075386, "mapping_values": [1, 2, 1, 1, 1, 16, 9, 7, 3, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(tf.math.subtract(grad, alpha), tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.square(alpha)))))), grad)", "other_info": {"loss": [1.4910708038762496e+16, 1.8200639028854784e+16, 1.7599244823166976e+16, 1.7516098551283712e+16, 1.8052653783187456e+16, 1.7289676465373184e+16], "accuracy": [0.10500594228506088, 0.10910051316022873, 0.11161009222269058, 0.10579843819141388, 0.10408136248588562, 0.10817593336105347], "val_loss": [1.5206630211715072e+16, 1.5206630211715072e+16, 1.5206630211715072e+16, 1.5206630211715072e+16, 1.5206630211715072e+16, 1.5206630211715072e+16], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]