[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225029468536377, 1.8726168870925903, 1.3959453105926514, 1.1201804876327515, 0.946966290473938, 0.8453482389450073, 0.77896648645401, 0.7224372029304504, 0.6887335181236267, 0.6448937058448792, 0.6282784938812256, 0.6068383455276489, 0.5877639055252075, 0.562202513217926, 0.5507447719573975, 0.5350222587585449, 0.5212753415107727, 0.5017713904380798, 0.5007228851318359, 0.4874933362007141, 0.4789086580276489, 0.46066704392433167, 0.46222078800201416, 0.4470815062522888, 0.444482684135437, 0.4314408004283905, 0.42363864183425903, 0.42120060324668884, 0.4112063944339752, 0.407444030046463, 0.39541327953338623, 0.3900633454322815, 0.38717249035835266, 0.3802122175693512, 0.3715495765209198, 0.37792256474494934, 0.3714039623737335, 0.35706275701522827, 0.35936683416366577, 0.34835004806518555, 0.35212019085884094, 0.33870595693588257, 0.33793243765830994, 0.33520305156707764, 0.3239934742450714, 0.32224729657173157, 0.319282591342926, 0.31494030356407166, 0.3133156895637512, 0.30589741468429565, 0.3061267137527466, 0.2966468632221222, 0.2938665449619293, 0.2873496115207672, 0.2854176461696625, 0.2752707004547119, 0.28124967217445374, 0.27585023641586304, 0.26466286182403564, 0.26918989419937134, 0.26945969462394714, 0.26461687684059143, 0.253897100687027, 0.2551586627960205, 0.24532723426818848, 0.25224339962005615, 0.24596469104290009, 0.23842817544937134, 0.2375270575284958, 0.23302344977855682, 0.2324158102273941, 0.22474320232868195, 0.2192043960094452, 0.21501675248146057, 0.21985259652137756], "accuracy": [0.2822612524032593, 0.4777440130710602, 0.5753533244132996, 0.6087703108787537, 0.6629242897033691, 0.6964733600616455, 0.718399167060852, 0.7347774505615234, 0.744419515132904, 0.7648923397064209, 0.7677981853485107, 0.7754589915275574, 0.7845727205276489, 0.7915731072425842, 0.7998943328857422, 0.8068947196006775, 0.8115176558494568, 0.8152159452438354, 0.8182538747787476, 0.8234050869941711, 0.8304054737091064, 0.8330471515655518, 0.830669641494751, 0.8359529972076416, 0.841500461101532, 0.8416325449943542, 0.8494254350662231, 0.8502179384231567, 0.8514066934585571, 0.8555012345314026, 0.8584070801734924, 0.8561616539955139, 0.8610487580299377, 0.8613129258155823, 0.8658037185668945, 0.8669924736022949, 0.8684453964233398, 0.8702945709228516, 0.8710870146751404, 0.8757099509239197, 0.8739928603172302, 0.8790120482444763, 0.8775591254234314, 0.8816536664962769, 0.8833707571029663, 0.8860124349594116, 0.8868049383163452, 0.886672854423523, 0.887201189994812, 0.8908994793891907, 0.8922203183174133, 0.8922203183174133, 0.8980319499969482, 0.8981640338897705, 0.8961827754974365, 0.8976356983184814, 0.8960506916046143, 0.8981640338897705, 0.9026548862457275, 0.9009377956390381, 0.9019944667816162, 0.8997490406036377, 0.9063531756401062, 0.9064852595329285, 0.9115044474601746, 0.9078060984611511, 0.9116365313529968, 0.9115044474601746, 0.9141460657119751, 0.9159952402114868, 0.9134856462478638, 0.9192973375320435, 0.9178444147109985, 0.9171839952468872, 0.9208822846412659], "val_loss": [2.0397467613220215, 1.5155420303344727, 1.0418089628219604, 0.8366773128509521, 0.7447459101676941, 0.6887534260749817, 0.6419872045516968, 0.6160181760787964, 0.5849496126174927, 0.5624701976776123, 0.5559534430503845, 0.5347789525985718, 0.5230827927589417, 0.5082788467407227, 0.5020701289176941, 0.49307677149772644, 0.48286160826683044, 0.47011619806289673, 0.46759232878685, 0.46224597096443176, 0.45690974593162537, 0.4561181664466858, 0.44498884677886963, 0.44555217027664185, 0.4357057213783264, 0.42993149161338806, 0.4271405041217804, 0.42358267307281494, 0.4165486693382263, 0.4140162467956543, 0.4111243486404419, 0.4070465862751007, 0.4084501266479492, 0.40469107031822205, 0.4010453224182129, 0.40039172768592834, 0.3966895639896393, 0.3993253707885742, 0.39154908061027527, 0.3963257670402527, 0.3847590386867523, 0.3862585127353668, 0.3837507367134094, 0.38464486598968506, 0.3797961473464966, 0.38133907318115234, 0.3787086308002472, 0.37599217891693115, 0.3764435350894928, 0.37743741273880005, 0.37535160779953003, 0.3711380958557129, 0.3732580542564392, 0.37197640538215637, 0.37529894709587097, 0.3711226284503937, 0.3707369267940521, 0.36797916889190674, 0.3696168065071106, 0.36908218264579773, 0.3659267723560333, 0.366751492023468, 0.36657023429870605, 0.3654922544956207, 0.3613284230232239, 0.36245590448379517, 0.35899612307548523, 0.3645390570163727, 0.3597773313522339, 0.358384370803833, 0.3601098656654358, 0.3603011965751648, 0.3651463985443115, 0.3622363805770874, 0.3611501455307007], "val_accuracy": [0.5393333435058594, 0.668666660785675, 0.6916666626930237, 0.7139999866485596, 0.7396666407585144, 0.7573333382606506, 0.7713333368301392, 0.7770000100135803, 0.79666668176651, 0.8036666512489319, 0.7993333339691162, 0.8103333115577698, 0.8133333325386047, 0.8196666836738586, 0.8226666450500488, 0.8293333053588867, 0.8316666483879089, 0.8356666564941406, 0.8333333134651184, 0.8396666646003723, 0.8410000205039978, 0.8376666903495789, 0.8403333425521851, 0.8420000076293945, 0.8446666598320007, 0.8473333120346069, 0.8526666760444641, 0.8479999899864197, 0.8496666550636292, 0.8519999980926514, 0.8519999980926514, 0.8539999723434448, 0.8546666502952576, 0.8536666631698608, 0.856333315372467, 0.859000027179718, 0.859666645526886, 0.859333336353302, 0.8600000143051147, 0.8586666584014893, 0.8629999756813049, 0.8686666488647461, 0.8643333315849304, 0.8633333444595337, 0.8676666617393494, 0.8679999709129333, 0.8703333139419556, 0.8709999918937683, 0.8713333606719971, 0.8679999709129333, 0.8706666827201843, 0.8723333477973938, 0.8706666827201843, 0.8726666569709778, 0.8686666488647461, 0.8736666440963745, 0.874666690826416, 0.8759999871253967, 0.8709999918937683, 0.874666690826416, 0.8773333430290222, 0.8773333430290222, 0.8756666779518127, 0.878000020980835, 0.8786666393280029, 0.8799999952316284, 0.8813333511352539, 0.8776666522026062, 0.8759999871253967, 0.8833333253860474, 0.8786666393280029, 0.8813333511352539, 0.8806666731834412, 0.8796666860580444, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 3, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 14, 7, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3100883960723877, 2.3099749088287354, 2.3090264797210693, 2.3091797828674316, 2.3080973625183105, 2.306915283203125, 2.3047373294830322, 2.303152322769165, 2.302588939666748, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0882314071059227, 0.09008057415485382, 0.08942015469074249, 0.09034473448991776, 0.08625016361474991, 0.09351472556591034, 0.08994849026203156, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308412790298462, 2.3082191944122314, 2.307960033416748, 2.3075478076934814, 2.306849241256714, 2.3055217266082764, 2.303424596786499, 2.3025906085968018, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08799999952316284, 0.0860000029206276, 0.07833333313465118, 0.06866666674613953, 0.07966666668653488, 0.10000000149011612, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 6], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [14], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 95, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303422212600708, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [9], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 4, 3, 4, 2, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), grad)))), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 4, 7, 3, 6, 1, 5, 1, 0, 3, 2, 6, 9], [0, 1, 0, 2, 3, 1, 3, 0, 1, 1, 1, 0], [39, 39, 9, 33, 3], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 2], [0, 2, 0, 3, 4, 0], [16, 16, 37], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08942857384681702, "mapping_values": [1, 29, 17, 12, 5, 12, 6, 6, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(grad, grad))), tf.math.negative(alpha)), grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), alpha), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha), alpha), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)))", "other_info": {"loss": [2.3090341091156006, 2.309706449508667, 2.3104493618011475, 2.3080127239227295, 2.307356357574463, 2.3065683841705322], "accuracy": [0.09206181764602661, 0.0882314071059227, 0.08889182657003403, 0.08994849026203156, 0.08968432247638702, 0.08770307898521423], "val_loss": [2.308586359024048, 2.3083548545837402, 2.308044672012329, 2.307607650756836, 2.3068859577178955, 2.3056325912475586], "val_accuracy": [0.08666666597127914, 0.08399999886751175, 0.08299999684095383, 0.07900000363588333, 0.07666666805744171, 0.06800000369548798]}}]