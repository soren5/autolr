[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234394550323486, 1.8665744066238403, 1.4014818668365479, 1.101260781288147, 0.9489616751670837, 0.8488402366638184, 0.7785016894340515, 0.7345598936080933, 0.695188045501709, 0.6696704626083374, 0.6420495510101318, 0.6159260272979736, 0.60425865650177, 0.5875306725502014, 0.5669086575508118, 0.5572812557220459, 0.5376800894737244, 0.5264577865600586, 0.5084179043769836, 0.5062693357467651, 0.49269339442253113, 0.4801848828792572, 0.4716678559780121, 0.4647397994995117, 0.4620976746082306, 0.44824427366256714, 0.43823936581611633, 0.43603894114494324, 0.4262521266937256, 0.41982194781303406, 0.40909579396247864, 0.40667641162872314, 0.40001794695854187, 0.39382994174957275, 0.3887859880924225, 0.3867972791194916, 0.37498411536216736, 0.3684506118297577, 0.37154078483581543, 0.3608415424823761, 0.35349929332733154, 0.35339415073394775, 0.3462681770324707, 0.3401114046573639, 0.33064886927604675, 0.3264636993408203, 0.3260016441345215, 0.32411184906959534, 0.3194923996925354, 0.316647469997406, 0.3125278055667877, 0.308978796005249, 0.3064388930797577, 0.3011581003665924, 0.2882392406463623, 0.28927376866340637, 0.28540700674057007, 0.2804660499095917, 0.2825276851654053, 0.2757929563522339, 0.2771987318992615, 0.26974907517433167, 0.2637358605861664, 0.2642912268638611, 0.25528448820114136], "accuracy": [0.2739400267601013, 0.49491479992866516, 0.5563333630561829, 0.6152423620223999, 0.6583014130592346, 0.6900013089179993, 0.7172104120254517, 0.7327961921691895, 0.7436270117759705, 0.757099449634552, 0.7633073329925537, 0.7709681391716003, 0.7791573405265808, 0.7845727205276489, 0.7947431206703186, 0.7985734939575195, 0.8031964302062988, 0.8049134612083435, 0.8131026029586792, 0.8104609847068787, 0.8222163319587708, 0.8278959393501282, 0.8278959393501282, 0.8364813327789307, 0.8350284099578857, 0.8352925777435303, 0.8444063067436218, 0.8401796221733093, 0.8436138033866882, 0.8495575189590454, 0.8568220734596252, 0.8544445633888245, 0.8569541573524475, 0.858671247959137, 0.8577466607093811, 0.8598600029945374, 0.8642187118530273, 0.8689737319946289, 0.8665962219238281, 0.8702945709228516, 0.8708229064941406, 0.8717474341392517, 0.8757099509239197, 0.8755778670310974, 0.8792761564254761, 0.880729079246521, 0.8840311765670776, 0.8816536664962769, 0.8854840993881226, 0.8856161832809448, 0.8894465565681458, 0.8901069760322571, 0.8893144726753235, 0.8910315632820129, 0.8969752788543701, 0.8948619961738586, 0.89988112449646, 0.9017302989959717, 0.8956544995307922, 0.9005415439605713, 0.8993527889251709, 0.902390718460083, 0.9022586345672607, 0.9033153057098389, 0.91124027967453], "val_loss": [2.0358951091766357, 1.507833480834961, 1.037217140197754, 0.8301334381103516, 0.744063138961792, 0.6840811371803284, 0.6333760023117065, 0.6071257591247559, 0.576200008392334, 0.5508403182029724, 0.5332348942756653, 0.513616681098938, 0.503347635269165, 0.4900931119918823, 0.4858768582344055, 0.46696585416793823, 0.46038660407066345, 0.45155078172683716, 0.4482077658176422, 0.4346913695335388, 0.4269956350326538, 0.4221232533454895, 0.4157849848270416, 0.4124106466770172, 0.409548819065094, 0.39999285340309143, 0.39888912439346313, 0.3983633518218994, 0.3928776979446411, 0.39154690504074097, 0.3820895254611969, 0.38201746344566345, 0.37948817014694214, 0.374112993478775, 0.3730318546295166, 0.3715682923793793, 0.36736300587654114, 0.36819303035736084, 0.3676462769508362, 0.3612624406814575, 0.35755398869514465, 0.36066094040870667, 0.3590892255306244, 0.3565417528152466, 0.35731151700019836, 0.35700756311416626, 0.3458840250968933, 0.3529181182384491, 0.35004857182502747, 0.3497164845466614, 0.3505954444408417, 0.34382539987564087, 0.3419201672077179, 0.35121122002601624, 0.3396724760532379, 0.34206777811050415, 0.34245118498802185, 0.34435147047042847, 0.3449389636516571, 0.3415611982345581, 0.339208722114563, 0.3425050973892212, 0.3431391716003418, 0.33348819613456726, 0.3416350781917572], "val_accuracy": [0.5616666674613953, 0.6620000004768372, 0.6933333277702332, 0.7133333086967468, 0.7369999885559082, 0.762666642665863, 0.7736666798591614, 0.7713333368301392, 0.7863333225250244, 0.7990000247955322, 0.8033333420753479, 0.812666654586792, 0.8163333535194397, 0.8223333358764648, 0.8206666707992554, 0.8276666402816772, 0.8293333053588867, 0.8346666693687439, 0.8333333134651184, 0.8386666774749756, 0.8373333215713501, 0.8416666388511658, 0.8446666598320007, 0.8473333120346069, 0.847000002861023, 0.8556666374206543, 0.8519999980926514, 0.8556666374206543, 0.8566666841506958, 0.8550000190734863, 0.8543333411216736, 0.8586666584014893, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.862333357334137, 0.8633333444595337, 0.8610000014305115, 0.8633333444595337, 0.8679999709129333, 0.8683333396911621, 0.8640000224113464, 0.8679999709129333, 0.8666666746139526, 0.8686666488647461, 0.8696666955947876, 0.8703333139419556, 0.8700000047683716, 0.871666669845581, 0.8683333396911621, 0.8679999709129333, 0.8713333606719971, 0.8723333477973938, 0.871666669845581, 0.8769999742507935, 0.8743333220481873, 0.8763333559036255, 0.875333309173584, 0.8763333559036255, 0.8796666860580444, 0.8740000128746033, 0.875, 0.875, 0.8763333559036255, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [19, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3, 3], [16, 45], [0, 1], [0], [0], [16], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 5, 1], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7994285821914673, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad))), sigma)), tf.math.subtract(alpha, beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3095791339874268, 2.3059492111206055, 2.2956125736236572, 2.283876419067383, 2.266421318054199, 2.241405487060547, 2.2025458812713623, 2.1295831203460693, 1.9920802116394043, 1.7521817684173584, 1.4605882167816162, 1.243948221206665, 1.114532470703125, 1.0172797441482544, 0.9620577692985535, 0.9145258069038391, 0.8674459457397461, 0.8387453556060791, 0.8151335120201111, 0.7863121628761292, 0.7675493359565735, 0.7557027339935303, 0.7560124397277832, 0.7301698923110962, 0.7183334827423096, 0.7172089219093323, 0.6924594044685364, 0.6998911499977112, 0.6818290948867798, 0.6683357954025269, 0.6550251841545105, 0.6519080996513367, 0.6476501226425171, 0.6581417918205261, 0.6407970786094666, 0.628587543964386, 0.6072614789009094, 0.6108006238937378, NaN, NaN], "accuracy": [0.09787346422672272, 0.0940430611371994, 0.1200634017586708, 0.14859332144260406, 0.1916523575782776, 0.25584468245506287, 0.31462156772613525, 0.3774930536746979, 0.41830670833587646, 0.4640074074268341, 0.5299167633056641, 0.5732399821281433, 0.6096948981285095, 0.6436402201652527, 0.6551313996315002, 0.6754721999168396, 0.6811517477035522, 0.6936996579170227, 0.702681303024292, 0.7120591998100281, 0.7206445932388306, 0.7213049530982971, 0.7148329019546509, 0.7313432693481445, 0.7351737022399902, 0.7327961921691895, 0.7403249144554138, 0.7382115721702576, 0.7417778372764587, 0.748249888420105, 0.7556465268135071, 0.7556465268135071, 0.7630431652069092, 0.7580240368843079, 0.7564390301704407, 0.7625148296356201, 0.774270236492157, 0.7717606425285339, 0.5449742674827576, 0.09998679161071777], "val_loss": [2.3054776191711426, 2.2975761890411377, 2.2855868339538574, 2.2693095207214355, 2.2472665309906006, 2.2126433849334717, 2.1535933017730713, 2.0399272441864014, 1.8148466348648071, 1.471498966217041, 1.1599516868591309, 0.9877569079399109, 0.8912723064422607, 0.8393405675888062, 0.7684996724128723, 0.7318282723426819, 0.7064619064331055, 0.6763403415679932, 0.6741907000541687, 0.6549370288848877, 0.639460563659668, 0.6236748695373535, 0.6144933700561523, 0.6092410683631897, 0.5959152579307556, 0.5904979705810547, 0.6772195100784302, 0.6037676334381104, 0.5754777789115906, 0.5624538660049438, 0.5758062601089478, 0.5511481165885925, 0.5686322450637817, 0.5479819774627686, 0.5364279747009277, 0.5446020364761353, 0.5529548525810242, 0.526925265789032, NaN, NaN], "val_accuracy": [0.09033333510160446, 0.10300000011920929, 0.15166667103767395, 0.2409999966621399, 0.3786666691303253, 0.42266666889190674, 0.4659999907016754, 0.5346666574478149, 0.5706666707992554, 0.637333333492279, 0.6566666960716248, 0.6743333339691162, 0.687333345413208, 0.6909999847412109, 0.7210000157356262, 0.7369999885559082, 0.7289999723434448, 0.7463333606719971, 0.753333330154419, 0.7586666941642761, 0.7509999871253967, 0.75, 0.7603333592414856, 0.7720000147819519, 0.7760000228881836, 0.7806666493415833, 0.7336666584014893, 0.7693333625793457, 0.7670000195503235, 0.7900000214576721, 0.7736666798591614, 0.7879999876022339, 0.7946666479110718, 0.7963333129882812, 0.7986666560173035, 0.7923333048820496, 0.7889999747276306, 0.7940000295639038, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [4, 2, 3, 0, 3, 5, 0], [0, 2, 0, 3, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 2, 0, 0, 3, 1, 2, 0], [68, 99, 87, 99, 61, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 12, 7, 5, 2, 1, 0, 1, 1, 11, 6, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3917931.75, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08691058307886124, 0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.7852905520635576e+18, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 62], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [57, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 5, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 49], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 0, 3, 6, 8, 5, 4, 3, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 6, 30, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303830862045288, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]