[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229812145233154, 1.8658479452133179, 1.3995717763900757, 1.1112481355667114, 0.9456603527069092, 0.8464238047599792, 0.790287435054779, 0.7399673461914062, 0.7012057900428772, 0.6779450178146362, 0.6393545269966125, 0.6189010143280029, 0.5997477173805237, 0.5875092148780823, 0.5724053978919983, 0.5485770106315613, 0.542080283164978, 0.534509003162384, 0.5250093340873718, 0.5136767625808716, 0.49624231457710266, 0.4917072355747223, 0.48211029171943665, 0.467281699180603, 0.4638557732105255, 0.4553041160106659, 0.453141987323761, 0.44678381085395813, 0.4391750991344452, 0.42730453610420227, 0.42541104555130005, 0.4159267544746399, 0.4109509587287903, 0.41067516803741455, 0.3940223753452301, 0.39301761984825134, 0.3851189911365509, 0.37311163544654846, 0.3810105621814728, 0.3670174181461334, 0.3621436357498169, 0.34763163328170776, 0.35267582535743713, 0.34995970129966736, 0.3401348292827606, 0.3440989553928375, 0.3409644663333893, 0.3324841260910034, 0.32737794518470764, 0.32244962453842163, 0.31652772426605225, 0.3090410828590393, 0.30755266547203064, 0.30087706446647644, 0.3009364604949951, 0.2991487681865692, 0.2897017300128937, 0.2845737338066101, 0.28549402952194214, 0.2769586443901062, 0.277649462223053, 0.27059492468833923, 0.26626020669937134, 0.2640862762928009, 0.25633639097213745, 0.25416380167007446, 0.24749614298343658, 0.24567878246307373], "accuracy": [0.2748646140098572, 0.48131024837493896, 0.5587108731269836, 0.6078457236289978, 0.6619997620582581, 0.6954167485237122, 0.7129837274551392, 0.7326641082763672, 0.7500990629196167, 0.7556465268135071, 0.7696473598480225, 0.7759873270988464, 0.7845727205276489, 0.7880068421363831, 0.7909126877784729, 0.8033285140991211, 0.8050455451011658, 0.8079513907432556, 0.8100647330284119, 0.8133667707443237, 0.8181217908859253, 0.8227446675300598, 0.828292191028595, 0.8355567455291748, 0.8335754871368408, 0.8379341959953308, 0.8385946154594421, 0.8425571322441101, 0.8425571322441101, 0.8436138033866882, 0.850350022315979, 0.8487650156021118, 0.8510104417800903, 0.8518029451370239, 0.8584070801734924, 0.8602562546730042, 0.8623695969581604, 0.8681812286376953, 0.8594637513160706, 0.8692378997802734, 0.8673887252807617, 0.8787478804588318, 0.8758420348167419, 0.8776912093162537, 0.8772949576377869, 0.8753136992454529, 0.8770307898521423, 0.8808611631393433, 0.8815215826034546, 0.8829745054244995, 0.8883898854255676, 0.8906353116035461, 0.8907673954963684, 0.889578640460968, 0.889578640460968, 0.8932769894599915, 0.8947299122810364, 0.8972394466400146, 0.9015982151031494, 0.8992207050323486, 0.9002773761749268, 0.901862382888794, 0.9050323367118835, 0.9015982151031494, 0.9076740145683289, 0.9100515246391296, 0.9063531756401062, 0.9120327830314636], "val_loss": [2.036407947540283, 1.5079251527786255, 1.0322277545928955, 0.8258524537086487, 0.7407556772232056, 0.6814191937446594, 0.6355546116828918, 0.5979965925216675, 0.5752013921737671, 0.5545995831489563, 0.5324133038520813, 0.513999342918396, 0.4964311420917511, 0.49434855580329895, 0.4808354079723358, 0.464305579662323, 0.4580540657043457, 0.4478392004966736, 0.44649210572242737, 0.43437260389328003, 0.426861971616745, 0.41932812333106995, 0.4113171100616455, 0.4089636206626892, 0.4046735465526581, 0.4011530876159668, 0.39363929629325867, 0.39353686571121216, 0.3876940906047821, 0.39063501358032227, 0.3819062411785126, 0.3763637840747833, 0.38183289766311646, 0.3704756796360016, 0.36436471343040466, 0.3602965474128723, 0.35868170857429504, 0.359344482421875, 0.3514636754989624, 0.35082104802131653, 0.34701234102249146, 0.3472830355167389, 0.3475503623485565, 0.3459608554840088, 0.3440665602684021, 0.3409685492515564, 0.33670976758003235, 0.33744654059410095, 0.33661335706710815, 0.330366849899292, 0.32748162746429443, 0.3283274471759796, 0.3296842873096466, 0.3253067135810852, 0.32062292098999023, 0.3311915695667267, 0.32035672664642334, 0.3180404603481293, 0.31854012608528137, 0.3169841170310974, 0.3161107301712036, 0.3198670744895935, 0.31059908866882324, 0.31192249059677124, 0.3165378272533417, 0.31265756487846375, 0.3062450885772705, 0.3091186583042145], "val_accuracy": [0.5243333578109741, 0.6520000100135803, 0.6763333082199097, 0.7153333425521851, 0.7273333072662354, 0.7519999742507935, 0.762666642665863, 0.7760000228881836, 0.7803333401679993, 0.7900000214576721, 0.8026666641235352, 0.8116666674613953, 0.8166666626930237, 0.8136666417121887, 0.8243333101272583, 0.8276666402816772, 0.8349999785423279, 0.8366666436195374, 0.8363333344459534, 0.840666651725769, 0.8443333506584167, 0.8519999980926514, 0.8489999771118164, 0.8533333539962769, 0.8516666889190674, 0.859666645526886, 0.856333315372467, 0.8560000061988831, 0.862666666507721, 0.8566666841506958, 0.8629999756813049, 0.862333357334137, 0.859000027179718, 0.8646666407585144, 0.8650000095367432, 0.8723333477973938, 0.8740000128746033, 0.8686666488647461, 0.8733333349227905, 0.875333309173584, 0.8730000257492065, 0.8726666569709778, 0.875, 0.8740000128746033, 0.8759999871253967, 0.8736666440963745, 0.8756666779518127, 0.874666690826416, 0.8793333172798157, 0.8796666860580444, 0.8790000081062317, 0.8816666603088379, 0.8806666731834412, 0.8803333044052124, 0.8820000290870667, 0.8793333172798157, 0.8809999823570251, 0.8833333253860474, 0.8843333125114441, 0.8856666684150696, 0.8836666941642761, 0.8816666603088379, 0.887666642665863, 0.8843333125114441, 0.8853333592414856, 0.8840000033378601, 0.8863333463668823, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 5, 3, 0, 3, 6], [0, 2, 0, 3], [16, 55], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 1, 0, 0, 4, 1, 2, 0], [16, 13, 96, 99, 63, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 8, 3, 0, 3, 5], [0, 3, 3, 3], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 8, 2, 8, 6, 7, 4, 4, 1, 5, 1, 3, 6], [0, 0, 4, 3, 0, 0, 3, 1, 2, 4, 7, 1, 3, 6, 3, 1, 7], [16, 79, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 1, 1, 0, 1, 37, 20, 17, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta))), tf.math.add(tf.math.pow(tf.math.pow(grad, grad), tf.math.subtract(alpha, tf.math.square(sigma))), tf.math.subtract(tf.math.multiply(grad, tf.math.divide_no_nan(sigma, alpha)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 5], [0, 1, 0, 2], [88, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [81, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 1, 8, 5, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7], [16, 99, 96, 99, 61, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 24, 13, 11, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.square(alpha)))))), beta), tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 3, 2, 3, 5], [0, 2, 0, 3, 2, 0], [2, 74, 65], [0, 1, 0, 1, 1], [6, 6], [0, 2, 4], [39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 4, 6, 0, 1, 4, 1, 4, 4, 8, 7, 2, 6, 9, 1], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 7, 3, 4], [16, 99, 96, 69, 61, 1, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 6, 6, 3, 5, 2, 3, 1, 29, 16, 13, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(sigma, tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.add(alpha, beta))), tf.math.add(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, sigma))))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]