[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233312129974365, 1.867501139640808, 1.387716293334961, 1.085947036743164, 0.9376376867294312, 0.8332089781761169, 0.7798251509666443, 0.7300199866294861, 0.6895886063575745, 0.6502898335456848, 0.6226540803909302, 0.6103108525276184, 0.5847413539886475, 0.5701629519462585, 0.5474971532821655, 0.5390976071357727, 0.526298999786377, 0.505336344242096, 0.49994000792503357, 0.49855491518974304, 0.4823380708694458, 0.46840858459472656, 0.4651449918746948, 0.45296382904052734, 0.4530118405818939, 0.4294700622558594, 0.4336662292480469, 0.42788130044937134, 0.41575703024864197, 0.4038377106189728, 0.40036895871162415, 0.3979642689228058, 0.3912067115306854, 0.39358848333358765, 0.3813960552215576, 0.37540507316589355, 0.3691670596599579, 0.36424726247787476, 0.3601599931716919, 0.3515617847442627, 0.3520415723323822, 0.3428930640220642, 0.3302951455116272, 0.3363634943962097, 0.32999080419540405, 0.3282574415206909, 0.321170449256897, 0.3170962631702423, 0.30975979566574097, 0.31491756439208984, 0.30917295813560486], "accuracy": [0.2681283950805664, 0.48949941992759705, 0.5647866725921631, 0.6276581883430481, 0.6625280380249023, 0.7010962963104248, 0.7252674698829651, 0.7322678565979004, 0.7519482374191284, 0.7676661014556885, 0.7753269076347351, 0.7810064554214478, 0.7905164361000061, 0.7977809906005859, 0.8053097128868103, 0.807158887386322, 0.8149517774581909, 0.8197067975997925, 0.8220842480659485, 0.8289526104927063, 0.8297450542449951, 0.8379341959953308, 0.8417646288871765, 0.8411042094230652, 0.8417646288871765, 0.8502179384231567, 0.8477083444595337, 0.8532558679580688, 0.858671247959137, 0.8603883385658264, 0.8634262084960938, 0.8615770936012268, 0.8631620407104492, 0.8639545440673828, 0.8689737319946289, 0.8708229064941406, 0.8720116019248962, 0.871879518032074, 0.8737286925315857, 0.8802007436752319, 0.8774270415306091, 0.8803328275680542, 0.8799365758895874, 0.8854840993881226, 0.8804649114608765, 0.8865407705307007, 0.8838990926742554, 0.8848236799240112, 0.8902390599250793, 0.887597382068634, 0.891559898853302], "val_loss": [2.039808511734009, 1.521101713180542, 1.053158164024353, 0.8484799861907959, 0.7582334280014038, 0.698910653591156, 0.6568170785903931, 0.6234545111656189, 0.5908698439598083, 0.5705341100692749, 0.5492810606956482, 0.5355937480926514, 0.5160163044929504, 0.5125767588615417, 0.49614688754081726, 0.49348893761634827, 0.47656118869781494, 0.47083890438079834, 0.46335744857788086, 0.4591388404369354, 0.44994741678237915, 0.44552865624427795, 0.4383883476257324, 0.4367949962615967, 0.4299207627773285, 0.42585912346839905, 0.42017021775245667, 0.41315820813179016, 0.4139423966407776, 0.4066227972507477, 0.40175169706344604, 0.4047200381755829, 0.39800021052360535, 0.3999638557434082, 0.3933992385864258, 0.3910551071166992, 0.3910822868347168, 0.3904053270816803, 0.3824264407157898, 0.38166365027427673, 0.379058301448822, 0.37554287910461426, 0.3776417374610901, 0.37363705039024353, 0.3792232275009155, 0.3749631345272064, 0.37024134397506714, 0.3758770227432251, 0.3732667565345764, 0.3728146255016327, 0.3723783791065216], "val_accuracy": [0.5199999809265137, 0.6579999923706055, 0.6786666512489319, 0.6943333148956299, 0.7286666631698608, 0.7446666955947876, 0.7613333463668823, 0.765999972820282, 0.7863333225250244, 0.7876666784286499, 0.7963333129882812, 0.8050000071525574, 0.8143333196640015, 0.8183333277702332, 0.8266666531562805, 0.8243333101272583, 0.8379999995231628, 0.8346666693687439, 0.8366666436195374, 0.8366666436195374, 0.8453333377838135, 0.8429999947547913, 0.843666672706604, 0.8450000286102295, 0.8533333539962769, 0.8476666808128357, 0.8543333411216736, 0.8513333201408386, 0.8533333539962769, 0.8550000190734863, 0.8586666584014893, 0.8560000061988831, 0.862333357334137, 0.859666645526886, 0.8629999756813049, 0.8646666407585144, 0.8636666536331177, 0.862666666507721, 0.8633333444595337, 0.8636666536331177, 0.8663333058357239, 0.8669999837875366, 0.8673333525657654, 0.8646666407585144, 0.8656666874885559, 0.8690000176429749, 0.8690000176429749, 0.8629999756813049, 0.8640000224113464, 0.8683333396911621, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 3, 3], [0, 0, 2, 0], [39, 39, 91], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 2], [1, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 50, 1]], "fitness": -0.7971428632736206, "mapping_values": [1, 8, 4, 4, 3, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.289226770401001, 2.226787805557251, 2.120112657546997, 1.8977525234222412, 1.5647740364074707, 1.296021580696106, 1.1471291780471802, 1.0522804260253906, 0.9806956648826599, 0.93781977891922, 0.9035770893096924, 0.8644607663154602, 0.8404508829116821, 0.8187615275382996, 0.802157461643219, 0.7852240204811096, 0.7677798867225647, 0.7532673478126526, 0.734484076499939, 0.7307795286178589, 0.7162275910377502, 0.7136569023132324, 0.7060821056365967, 0.6910386085510254, 0.6984230279922485, 0.6803959608078003, 0.6791622638702393, 0.6707000732421875, 0.6587480306625366, 0.657209575176239, 0.6632831692695618, 0.6537243723869324, 0.6380792856216431, 0.6359793543815613, 0.6348362565040588, 0.6313424706459045, 0.6299925446510315, 0.6208773851394653, 0.613089919090271, 0.6142276525497437, 0.6104142069816589, 0.6151794791221619, 0.6075326204299927, 0.5903831720352173, 0.5996513366699219, 0.5864162445068359, 0.5839328169822693, 0.5816700458526611, 0.5921034216880798, 0.5887113809585571], "accuracy": [0.13697001338005066, 0.2806762754917145, 0.366530179977417, 0.4451195299625397, 0.5102364420890808, 0.5617488026618958, 0.5974111557006836, 0.6350548267364502, 0.6507726907730103, 0.6660943031311035, 0.6707172393798828, 0.6823405027389526, 0.6929071545600891, 0.7043983340263367, 0.707568347454071, 0.7150970697402954, 0.7218332886695862, 0.7223616242408752, 0.7268524765968323, 0.7363624572753906, 0.7423061728477478, 0.7349095344543457, 0.739400327205658, 0.7453441023826599, 0.7416457533836365, 0.7511557340621948, 0.7436270117759705, 0.7528728246688843, 0.7593448758125305, 0.7553823590278625, 0.7547219395637512, 0.7557786107063293, 0.7672698497772217, 0.7652885913848877, 0.7675340175628662, 0.7667415142059326, 0.7697794437408447, 0.7725531458854675, 0.7700436115264893, 0.7784969210624695, 0.7693831920623779, 0.7774402499198914, 0.7798177003860474, 0.7810064554214478, 0.7741381525993347, 0.7862898111343384, 0.7820631265640259, 0.7864218950271606, 0.7825914621353149, 0.7853652238845825], "val_loss": [2.250600576400757, 2.1672792434692383, 1.9893630743026733, 1.633245825767517, 1.254616379737854, 1.0297685861587524, 0.9103463292121887, 0.8434094190597534, 0.7949897646903992, 0.7572839260101318, 0.726479172706604, 0.702646791934967, 0.683060884475708, 0.6956263184547424, 0.6599053740501404, 0.6389907002449036, 0.6288710832595825, 0.6172252893447876, 0.6094028353691101, 0.605056643486023, 0.5984911918640137, 0.596961498260498, 0.6007789373397827, 0.5884472727775574, 0.5734807252883911, 0.5743381381034851, 0.5637279748916626, 0.5615474581718445, 0.5523511171340942, 0.5533187389373779, 0.5761961340904236, 0.546967625617981, 0.541028618812561, 0.5438258647918701, 0.5354732871055603, 0.5341822504997253, 0.534466564655304, 0.5238842964172363, 0.5283799767494202, 0.5248432159423828, 0.5323925614356995, 0.5207777619361877, 0.5171671509742737, 0.5222939252853394, 0.5140531659126282, 0.5120428204536438, 0.5086842775344849, 0.5095816850662231, 0.5054014921188354, 0.5073537826538086], "val_accuracy": [0.3813333213329315, 0.43166667222976685, 0.5149999856948853, 0.6159999966621399, 0.6499999761581421, 0.6740000247955322, 0.6949999928474426, 0.6993333101272583, 0.7170000076293945, 0.734000027179718, 0.7400000095367432, 0.7413333058357239, 0.7450000047683716, 0.7253333330154419, 0.7543333172798157, 0.7699999809265137, 0.7699999809265137, 0.7749999761581421, 0.7743333578109741, 0.7699999809265137, 0.7803333401679993, 0.7743333578109741, 0.7710000276565552, 0.7786666750907898, 0.7823333144187927, 0.7833333611488342, 0.7856666445732117, 0.7963333129882812, 0.7863333225250244, 0.7906666398048401, 0.7666666507720947, 0.7956666946411133, 0.8023333549499512, 0.7990000247955322, 0.8026666641235352, 0.8006666898727417, 0.8100000023841858, 0.8113333582878113, 0.8103333115577698, 0.8066666722297668, 0.8046666383743286, 0.8136666417121887, 0.8190000057220459, 0.8146666884422302, 0.8203333616256714, 0.8136666417121887, 0.8163333535194397, 0.8166666626930237, 0.8166666626930237, 0.8183333277702332]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [2, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 10], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 4, 4, 0, 0, 3, 1, 2, 1], [16, 99, 96, 65, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303823471069336, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 0], [0, 2, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 4, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 9, 1, 4, 2, 8, 4], [0, 0, 0, 3, 1, 0, 3, 1, 2, 4], [16, 99, 96, 99, 43, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 6, 4, 2, 1, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(alpha, tf.math.pow(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.pow(alpha, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 4, 3, 3, 6, 3, 1, 9, 1, 9, 5, 4, 5, 6, 9, 1, 2, 0, 8], [0, 2, 0, 3, 2, 4, 2, 0, 4, 2, 3, 1], [16, 16, 50, 48, 50, 30], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 4, 1, 4, 1, 9, 6, 8], [0, 0, 0, 3, 0, 4, 3, 1, 4, 2], [18, 99, 96, 99, 49, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 35, 23, 12, 6, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(beta, grad), beta), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.math.negative(tf.math.sqrt(grad))))))), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), grad)), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}]