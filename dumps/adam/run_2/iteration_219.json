[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222419261932373, 1.8650645017623901, 1.373866319656372, 1.0861588716506958, 0.9414006471633911, 0.8456431031227112, 0.7735719680786133, 0.729793131351471, 0.6994885206222534, 0.6642200350761414, 0.6386165022850037, 0.6135527491569519, 0.59995436668396, 0.5740782022476196, 0.5733421444892883, 0.545731246471405, 0.540825366973877, 0.5283985137939453, 0.5180497169494629, 0.5117877125740051, 0.4934815466403961, 0.4817937910556793, 0.4799478352069855, 0.46792569756507874, 0.46737927198410034, 0.45580437779426575, 0.4538820683956146, 0.4435328245162964, 0.44041708111763, 0.42670467495918274, 0.419471800327301, 0.4096227288246155, 0.4030938148498535, 0.39979293942451477, 0.3890827000141144, 0.3857705891132355, 0.38403767347335815, 0.3800022006034851, 0.36137673258781433, 0.36507248878479004, 0.3611295223236084, 0.3565477728843689, 0.3544848561286926, 0.347551167011261, 0.33977630734443665, 0.3291967809200287, 0.32381102442741394, 0.3258291184902191, 0.3157930374145508, 0.3202759325504303, 0.31349965929985046, 0.30473166704177856, 0.3027203381061554, 0.30109894275665283, 0.29881611466407776, 0.2876063883304596, 0.28314995765686035, 0.289669007062912, 0.29142552614212036, 0.27521058917045593, 0.2745444178581238, 0.26874110102653503, 0.26450690627098083, 0.26092246174812317, 0.25745004415512085, 0.25230738520622253, 0.25500863790512085, 0.24879515171051025, 0.2475321888923645, 0.24116840958595276, 0.2376907914876938, 0.23431673645973206], "accuracy": [0.2716946303844452, 0.4807819426059723, 0.5727116465568542, 0.6196011304855347, 0.6571126580238342, 0.6976621150970459, 0.7205125093460083, 0.7371549606323242, 0.7458723783493042, 0.7559106945991516, 0.7695152759552002, 0.7713643908500671, 0.7769119143486023, 0.7903843522071838, 0.7915731072425842, 0.8026680946350098, 0.8006868362426758, 0.8050455451011658, 0.8119139075279236, 0.8092722296714783, 0.8207634687423706, 0.8272355198860168, 0.8286884427070618, 0.8289526104927063, 0.8335754871368408, 0.8350284099578857, 0.8380662798881531, 0.8364813327789307, 0.8355567455291748, 0.8449346423149109, 0.8496896028518677, 0.8516708612442017, 0.8536521196365356, 0.8582749962806702, 0.8574824929237366, 0.8577466607093811, 0.8582749962806702, 0.8693699836730957, 0.8697662353515625, 0.8636903762817383, 0.8709549307823181, 0.8716153502464294, 0.8681812286376953, 0.8753136992454529, 0.8782195448875427, 0.8809932470321655, 0.8824461698532104, 0.8816536664962769, 0.887597382068634, 0.8833707571029663, 0.8878615498542786, 0.8902390599250793, 0.8944657444953918, 0.8916919827461243, 0.8947299122810364, 0.8989565372467041, 0.9014661312103271, 0.8945978283882141, 0.8916919827461243, 0.9005415439605713, 0.9001452922821045, 0.901862382888794, 0.9038436412811279, 0.9075419306755066, 0.9079381823539734, 0.908730685710907, 0.9082023501396179, 0.9068815112113953, 0.9119006991386414, 0.9141460657119751, 0.915070652961731, 0.9129573106765747], "val_loss": [2.040865659713745, 1.510409951210022, 1.0401719808578491, 0.8328940272331238, 0.7429172396659851, 0.6889172196388245, 0.6381735801696777, 0.6025626063346863, 0.583929181098938, 0.5563212633132935, 0.5421721339225769, 0.5263231992721558, 0.5126679539680481, 0.4986339509487152, 0.49260953068733215, 0.48001107573509216, 0.4843745827674866, 0.4627572298049927, 0.4626433551311493, 0.4506949186325073, 0.4445270299911499, 0.4388428032398224, 0.4334251582622528, 0.42894914746284485, 0.42447882890701294, 0.42178675532341003, 0.4157036244869232, 0.41693395376205444, 0.40732771158218384, 0.4022268056869507, 0.39886048436164856, 0.3985627293586731, 0.3921256363391876, 0.3913493752479553, 0.3844119608402252, 0.38942182064056396, 0.3792172372341156, 0.37437474727630615, 0.3791126608848572, 0.3731306195259094, 0.3694235384464264, 0.37005582451820374, 0.3703651428222656, 0.36750105023384094, 0.35923925042152405, 0.35865139961242676, 0.3593200147151947, 0.3557848036289215, 0.35793089866638184, 0.35205981135368347, 0.3566948175430298, 0.3510497510433197, 0.3475474417209625, 0.34943974018096924, 0.3479806184768677, 0.34336987137794495, 0.3446299731731415, 0.34009620547294617, 0.3441612124443054, 0.3415701985359192, 0.33551448583602905, 0.3388696610927582, 0.33940762281417847, 0.3355286121368408, 0.3373357653617859, 0.33797183632850647, 0.3324442207813263, 0.33501437306404114, 0.33355459570884705, 0.33504989743232727, 0.3309289216995239, 0.3337685465812683], "val_accuracy": [0.5103333592414856, 0.6623333096504211, 0.6793333292007446, 0.7023333311080933, 0.734666645526886, 0.7570000290870667, 0.7689999938011169, 0.7746666669845581, 0.7886666655540466, 0.7953333258628845, 0.7953333258628845, 0.8090000152587891, 0.8059999942779541, 0.8159999847412109, 0.815666675567627, 0.8213333487510681, 0.8209999799728394, 0.831333339214325, 0.8330000042915344, 0.8376666903495789, 0.8346666693687439, 0.8376666903495789, 0.8450000286102295, 0.8443333506584167, 0.8476666808128357, 0.8453333377838135, 0.846666693687439, 0.847000002861023, 0.8510000109672546, 0.8526666760444641, 0.8533333539962769, 0.8516666889190674, 0.8573333621025085, 0.8556666374206543, 0.8613333106040955, 0.8576666712760925, 0.8633333444595337, 0.8636666536331177, 0.8619999885559082, 0.8636666536331177, 0.8706666827201843, 0.8659999966621399, 0.8646666407585144, 0.8653333187103271, 0.8696666955947876, 0.8709999918937683, 0.8693333268165588, 0.8700000047683716, 0.8713333606719971, 0.875, 0.8700000047683716, 0.8676666617393494, 0.8723333477973938, 0.8773333430290222, 0.8776666522026062, 0.8786666393280029, 0.8776666522026062, 0.8799999952316284, 0.8759999871253967, 0.8756666779518127, 0.8806666731834412, 0.878333330154419, 0.8803333044052124, 0.8813333511352539, 0.8813333511352539, 0.8793333172798157, 0.8843333125114441, 0.8830000162124634, 0.878333330154419, 0.8796666860580444, 0.8806666731834412, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 95, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 7, 4, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3039236068725586, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2, 3], [39, 28], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 4, 2, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035683631896973, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 1], [3, 2], [0, 0, 5], [99, 60], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 64, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 2, 2, 0, 1, 5, 2, 3, 2, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.square(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 6], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 8, 5, 1, 4, 2, 8, 2], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09399999678134918, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 2, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(sigma, tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.add(alpha, beta)))", "other_info": {"loss": [2.309521198272705, 2.3095717430114746, 2.3097009658813477, 2.30896258354187, 2.3107147216796875, 2.3105289936065674], "accuracy": [0.09153348207473755, 0.09285431355237961, 0.08968432247638702, 0.0886276587843895, 0.08809932321310043, 0.0882314071059227], "val_loss": [2.3089208602905273, 2.3089208602905273, 2.3089208602905273, 2.3089208602905273, 2.3089208602905273, 2.3089208602905273], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]