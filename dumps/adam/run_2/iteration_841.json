[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221813917160034, 1.8693950176239014, 1.3935344219207764, 1.0928484201431274, 0.9453369379043579, 0.8412741422653198, 0.7824996709823608, 0.7260595560073853, 0.7035920023918152, 0.6659223437309265, 0.6435661315917969, 0.6138920187950134, 0.6021605730056763, 0.5810917019844055, 0.5658267140388489, 0.555380642414093, 0.5413101315498352, 0.5251805782318115, 0.514443039894104, 0.5013694763183594, 0.488582044839859, 0.479787677526474, 0.47925716638565063, 0.4589146673679352, 0.4604352116584778, 0.4464412033557892, 0.44271567463874817, 0.43969547748565674, 0.4299294948577881, 0.4204542934894562, 0.4168339669704437, 0.41568151116371155, 0.4048290252685547, 0.3922177255153656, 0.39463216066360474, 0.38766828179359436, 0.3799803853034973, 0.382379412651062, 0.37258976697921753, 0.366203248500824, 0.36155539751052856, 0.35432904958724976, 0.3456621468067169, 0.3445238769054413, 0.3379545509815216, 0.32790565490722656, 0.3238603472709656, 0.3229353129863739, 0.3210144340991974, 0.3191887438297272, 0.31245872378349304, 0.31037062406539917, 0.3027753233909607, 0.29494139552116394, 0.29559364914894104, 0.2838921844959259], "accuracy": [0.27143046259880066, 0.4826310873031616, 0.5601637959480286, 0.6264694333076477, 0.6543388962745667, 0.6995112895965576, 0.7190595865249634, 0.7273808121681213, 0.7457403540611267, 0.759609043598175, 0.7648923397064209, 0.778761088848114, 0.780610203742981, 0.7872143983840942, 0.7959318161010742, 0.8006868362426758, 0.8013472557067871, 0.8138951063156128, 0.8162726163864136, 0.8220842480659485, 0.8251221776008606, 0.82683926820755, 0.830669641494751, 0.8355567455291748, 0.8337075710296631, 0.8428213000297546, 0.8389908671379089, 0.8388587832450867, 0.8449346423149109, 0.8532558679580688, 0.8512746095657349, 0.850350022315979, 0.8556333184242249, 0.8594637513160706, 0.8593316674232483, 0.8638224601745605, 0.8667283058166504, 0.8660678863525391, 0.8701624870300293, 0.867520809173584, 0.8713511824607849, 0.8730682730674744, 0.8742570281028748, 0.8747853636741638, 0.8765024542808533, 0.8824461698532104, 0.8820499181747437, 0.8829745054244995, 0.8833707571029663, 0.8870691061019897, 0.8838990926742554, 0.8905032277107239, 0.8878615498542786, 0.8947299122810364, 0.8931449055671692, 0.8944657444953918], "val_loss": [2.0372676849365234, 1.5202815532684326, 1.0568000078201294, 0.8504289388656616, 0.7635694742202759, 0.7115227580070496, 0.6625133752822876, 0.6286627054214478, 0.6020545363426208, 0.5783949494361877, 0.5597035884857178, 0.5416874289512634, 0.5282458662986755, 0.5150206089019775, 0.5044336915016174, 0.4956500232219696, 0.48785164952278137, 0.4742397964000702, 0.4675271809101105, 0.45773229002952576, 0.45155876874923706, 0.4436858594417572, 0.4421408772468567, 0.43381375074386597, 0.4268752336502075, 0.42274942994117737, 0.41440457105636597, 0.4233461916446686, 0.41442906856536865, 0.40871068835258484, 0.402213454246521, 0.39640161395072937, 0.39859113097190857, 0.390984445810318, 0.3873547315597534, 0.3855459690093994, 0.3794933259487152, 0.38337406516075134, 0.3781510293483734, 0.3798680007457733, 0.3737789988517761, 0.36930835247039795, 0.3684731125831604, 0.3652556836605072, 0.36408281326293945, 0.36526522040367126, 0.3622002899646759, 0.36630725860595703, 0.3654930293560028, 0.37061747908592224, 0.3566626310348511, 0.35987943410873413, 0.35335472226142883, 0.35304296016693115, 0.34983333945274353, 0.35309624671936035], "val_accuracy": [0.5183333158493042, 0.6489999890327454, 0.6700000166893005, 0.6946666836738586, 0.7196666598320007, 0.7306666374206543, 0.7490000128746033, 0.7570000290870667, 0.768666684627533, 0.7766666412353516, 0.7929999828338623, 0.7900000214576721, 0.8016666769981384, 0.8130000233650208, 0.815666675567627, 0.815666675567627, 0.8196666836738586, 0.8293333053588867, 0.8293333053588867, 0.8339999914169312, 0.8366666436195374, 0.8429999947547913, 0.8413333296775818, 0.840666651725769, 0.8456666469573975, 0.8516666889190674, 0.8493333458900452, 0.8433333039283752, 0.8510000109672546, 0.8566666841506958, 0.8519999980926514, 0.8573333621025085, 0.8619999885559082, 0.8606666922569275, 0.8640000224113464, 0.8629999756813049, 0.862666666507721, 0.862666666507721, 0.8643333315849304, 0.8663333058357239, 0.8653333187103271, 0.8703333139419556, 0.8683333396911621, 0.8700000047683716, 0.8706666827201843, 0.8736666440963745, 0.8709999918937683, 0.8669999837875366, 0.8690000176429749, 0.8676666617393494, 0.8790000081062317, 0.8676666617393494, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 2, 3, 0, 3, 9, 9], [0, 1, 0, 2], [39, 43, 96], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 3, 1, 2, 1, 4, 2, 8, 2, 9, 3, 8, 1, 8, 0, 0, 1, 0], [0, 0, 0, 3, 1, 0, 3, 1, 0, 0, 7, 6, 1, 2], [16, 99, 96, 99, 61, 1, 59]], "fitness": -0.24714285135269165, "mapping_values": [1, 9, 7, 2, 3, 2, 1, 1, 1, 2, 1, 1, 1, 35, 21, 14, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, grad))), tf.math.negative(alpha))), beta)", "other_info": {"loss": [2.50678161791999e+19, 8.987276104045691e+19, 3.5783825828295475e+20, 1.8266837934970052e+21, 2.2236160057421867e+21, 3.243496392281905e+21, 3.5105986937317617e+21, 4.229133659054912e+21, 5.214712153852782e+22, 5.23067741453181e+22, 5.303743814886269e+22, 5.507812272281569e+22], "accuracy": [0.09813763201236725, 0.09074098616838455, 0.10408136248588562, 0.13630960881710052, 0.12613920867443085, 0.13419628143310547, 0.14595165848731995, 0.15202747285366058, 0.09998679161071777, 0.09681680053472519, 0.057456083595752716, 0.09589222073554993], "val_loss": [3.4072794420452786e+19, 2.859950954007222e+20, 6.162051597524565e+20, 1.92286520041392e+21, 2.644453747021916e+21, 2.557277850509882e+21, 2.491760327555826e+21, 5.202288073560755e+22, 5.1799596769682146e+22, 5.075617128281556e+22, 4.8605977180323415e+22, 4.6347980413550906e+22], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.02566666714847088, 0.12966667115688324, 0.11166666448116302, 0.2293333262205124, 0.2409999966621399, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.027666667476296425, 0.14499999582767487]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 0], [39, 39, 46], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [68, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha)", "other_info": {"loss": [2.303445816040039, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [5, 2, 3, 0, 3, 4, 2, 9], [0, 2, 0, 3, 1], [16, 16, 23], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 1, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 8, 5, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.311060905456543, 2.3103272914886475, 2.3103272914886475, 2.3103272914886475, 2.3103275299072266, 2.3103275299072266], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3101420402526855, 2.3101415634155273, 2.3101415634155273, 2.3101415634155273, 2.3101415634155273, 2.3101415634155273], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 2, 6, 2], [0, 2, 0, 2, 3, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [69], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [288108.15625, 4098301.25, 12587359.0, 19466608.0, 25286530.0, 30400974.0, 35704400.0], "accuracy": [0.09840179979801178, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [802992.625, 9394550.0, 16905358.0, 23102810.0, 28644472.0, 33808664.0, 38790000.0], "val_accuracy": [0.09700000286102295, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 12, 6, 6, 2, 10, 6, 4, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18}]