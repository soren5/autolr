[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225006580352783, 1.8782225847244263, 1.4065978527069092, 1.1067355871200562, 0.9502549171447754, 0.8485280275344849, 0.7717829346656799, 0.7431669235229492, 0.6979653835296631, 0.655324399471283, 0.6353569626808167, 0.6208217144012451, 0.599783718585968, 0.57720947265625, 0.5615479350090027, 0.5525201559066772, 0.5348172187805176, 0.5228270292282104, 0.5060607194900513, 0.4938603937625885, 0.484819233417511, 0.478924959897995, 0.46674293279647827, 0.45654982328414917, 0.4522683918476105, 0.4444667398929596, 0.4353560507297516, 0.430018812417984, 0.42128610610961914, 0.4128084182739258, 0.3988690674304962, 0.4007512331008911, 0.38725411891937256, 0.38361912965774536, 0.37776273488998413, 0.3751574754714966, 0.3619620203971863, 0.3642473518848419, 0.3572006821632385], "accuracy": [0.27143046259880066, 0.4831594228744507, 0.5692775249481201, 0.6254127621650696, 0.6646413803100586, 0.7022850513458252, 0.7202483415603638, 0.7317395210266113, 0.7481178045272827, 0.763439416885376, 0.7700436115264893, 0.7774402499198914, 0.7884030938148499, 0.7956677079200745, 0.7991018295288086, 0.7993659973144531, 0.8123101592063904, 0.8166688680648804, 0.8219521641731262, 0.8197067975997925, 0.8318583965301514, 0.826310932636261, 0.8354246616363525, 0.8352925777435303, 0.8388587832450867, 0.8430854678153992, 0.8454629778862, 0.8492933511734009, 0.8561616539955139, 0.8565579056739807, 0.8603883385658264, 0.857218325138092, 0.8658037185668945, 0.8710870146751404, 0.868049144744873, 0.869502067565918, 0.8762382864952087, 0.8705587387084961, 0.8735966086387634], "val_loss": [2.040395736694336, 1.5175312757492065, 1.0398250818252563, 0.8311780691146851, 0.7276017069816589, 0.6767433881759644, 0.6260059475898743, 0.5945753455162048, 0.5663861632347107, 0.5446793437004089, 0.5245324969291687, 0.5062428116798401, 0.49544286727905273, 0.48556676506996155, 0.4757193326950073, 0.4627954065799713, 0.45378610491752625, 0.4468139708042145, 0.4374024271965027, 0.4306413531303406, 0.42629358172416687, 0.42353564500808716, 0.4132785499095917, 0.4185327887535095, 0.4089066982269287, 0.4051307439804077, 0.39760106801986694, 0.3905085027217865, 0.38897380232810974, 0.38403064012527466, 0.3853394389152527, 0.38478612899780273, 0.37730032205581665, 0.37072741985321045, 0.37074893712997437, 0.3686925768852234, 0.36629870533943176, 0.3647814095020294, 0.3637581467628479], "val_accuracy": [0.5609999895095825, 0.6639999747276306, 0.6983333230018616, 0.7123333215713501, 0.737666666507721, 0.7573333382606506, 0.7699999809265137, 0.7776666879653931, 0.7923333048820496, 0.796999990940094, 0.8073333501815796, 0.8213333487510681, 0.8236666917800903, 0.8243333101272583, 0.8270000219345093, 0.8343333601951599, 0.8376666903495789, 0.8416666388511658, 0.8460000157356262, 0.843666672706604, 0.8496666550636292, 0.8489999771118164, 0.8560000061988831, 0.8489999771118164, 0.8539999723434448, 0.8533333539962769, 0.8579999804496765, 0.859000027179718, 0.862666666507721, 0.8666666746139526, 0.8613333106040955, 0.8666666746139526, 0.8666666746139526, 0.8730000257492065, 0.8663333058357239, 0.8683333396911621, 0.8723333477973938, 0.871666669845581, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 3], [50, 64], [0, 1], [0], [0], [59], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 0, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 32, 70, 61, 1]], "fitness": -0.10514285415410995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303271770477295, 2.3026437759399414, 2.30269718170166, 2.302762746810913, 2.302931308746338, 2.303021192550659, 2.303112030029297, 2.3032279014587402, 2.3034212589263916, 2.303417444229126, 2.303701162338257], "accuracy": [0.09998679161071777, 0.10051512718200684, 0.10091137140989304, 0.1014397069811821, 0.09972262382507324, 0.10210011899471283, 0.10381719470024109, 0.09919429570436478, 0.09430722147226334, 0.0952318087220192, 0.09074098616838455], "val_loss": [2.302584648132324, 2.302586078643799, 2.3026115894317627, 2.302664041519165, 2.302734375, 2.302818536758423, 2.302913188934326, 2.303016185760498, 2.303126573562622, 2.3032386302948, 2.3033533096313477], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10233332961797714, 0.1066666692495346, 0.1106666699051857, 0.1120000034570694, 0.109333336353302, 0.1066666692495346, 0.10199999809265137, 0.09333333373069763, 0.09033333510160446]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 1, 5, 6, 2, 7, 4, 2, 4, 8, 7, 6, 1, 6, 4, 7, 6, 7, 2, 9, 1, 4, 9], [0, 2, 0, 3, 4, 1, 3, 1, 1, 3, 5, 2, 0, 1, 2, 4, 1, 0, 5], [16, 16, 92, 47, 55, 4], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 56, 96, 99, 79, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 45, 26, 19, 6, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.add(tf.math.pow(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.pow(alpha, alpha), tf.math.add(tf.math.divide_no_nan(grad, grad), beta))), tf.math.add(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), alpha))))), beta), grad)), tf.math.subtract(alpha, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303602457046509, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 25], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 65, 53]], "fitness": -0.09428571164608002, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.square(alpha)))), beta), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309575319290161, 2.309230089187622, 2.309812068939209, 2.309809684753418, 2.309485673904419, 2.3099026679992676, 2.3097472190856934, 2.3089170455932617, 2.308788776397705], "accuracy": [0.09589222073554993, 0.09245806187391281, 0.09140139818191528, 0.08585391938686371, 0.08915598690509796, 0.09351472556591034, 0.08677849918603897, 0.0886276587843895, 0.09219389408826828], "val_loss": [2.3086278438568115, 2.308624267578125, 2.3086390495300293, 2.308614730834961, 2.3086230754852295, 2.3086190223693848, 2.3085720539093018, 2.308471918106079, 2.30808687210083], "val_accuracy": [0.0963333323597908, 0.09666666388511658, 0.09733333438634872, 0.0976666659116745, 0.0963333323597908, 0.09666666388511658, 0.09566666930913925, 0.09566666930913925, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 4], [0, 1, 0, 2], [39, 20], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 4], [0, 2, 0, 3, 1], [16, 98], [0, 1], [0], [0], [37], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 3, 4, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [0, 99, 96, 94, 61, 1]], "fitness": -0.08914285898208618, "mapping_values": [1, 5, 4, 1, 2, 12, 7, 5, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.3104004859924316, 2.309384346008301, 2.3113322257995605, 2.3100569248199463, 2.3091936111450195, 2.3105340003967285], "accuracy": [0.08928807079792023, 0.0948355570435524, 0.08955223858356476, 0.09087307006120682, 0.09417514503002167, 0.09259014576673508], "val_loss": [2.3087565898895264, 2.3087565898895264, 2.3087565898895264, 2.3087565898895264, 2.3087565898895264, 2.3087565898895264], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]