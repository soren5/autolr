[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222180366516113, 1.8660147190093994, 1.391784906387329, 1.0972901582717896, 0.946249783039093, 0.8385043740272522, 0.7764012217521667, 0.730008065700531, 0.6847037672996521, 0.6642804741859436, 0.6423894166946411, 0.6148448586463928, 0.6007709503173828, 0.5819708704948425, 0.5564215779304504, 0.5465203523635864, 0.5269029140472412, 0.518858015537262, 0.5112767815589905, 0.5067970156669617, 0.48970481753349304, 0.4819852411746979, 0.46906203031539917, 0.46994921565055847, 0.4576524794101715, 0.4409519135951996, 0.44330093264579773, 0.4330180287361145, 0.42722365260124207, 0.41720619797706604, 0.410552442073822, 0.41591647267341614, 0.40027663111686707, 0.4002159535884857, 0.38728418946266174, 0.38607755303382874, 0.3750564455986023, 0.36642491817474365, 0.36738088726997375, 0.3580065667629242, 0.3493148386478424, 0.35491272807121277, 0.35634422302246094, 0.343001127243042, 0.3387822210788727, 0.3304009735584259, 0.32723379135131836, 0.3260408937931061, 0.3161778748035431, 0.311520516872406, 0.3051038384437561, 0.30085134506225586, 0.29707470536231995, 0.2953394651412964, 0.2864561975002289, 0.28751206398010254, 0.2898526191711426, 0.279487282037735, 0.2720535397529602, 0.2681749761104584, 0.2688632011413574, 0.2599310278892517, 0.26280808448791504, 0.2542724311351776], "accuracy": [0.28384625911712646, 0.4839519262313843, 0.5649187564849854, 0.614317774772644, 0.6530181169509888, 0.6992471218109131, 0.7177387475967407, 0.7321357727050781, 0.7441553473472595, 0.7539294958114624, 0.7617223858833313, 0.7750627398490906, 0.7800818681716919, 0.7876105904579163, 0.7948752045631409, 0.8029322624206543, 0.8123101592063904, 0.8080834746360779, 0.8120459914207458, 0.8142913579940796, 0.8245938420295715, 0.826310932636261, 0.8255184292793274, 0.832650899887085, 0.8374059200286865, 0.8388587832450867, 0.8426892161369324, 0.8409721255302429, 0.8485008478164673, 0.8492933511734009, 0.8515387773513794, 0.8524633646011353, 0.8570862412452698, 0.8537842035293579, 0.8590674996376038, 0.8573504090309143, 0.8660678863525391, 0.8650112152099609, 0.8717474341392517, 0.8712190985679626, 0.8710870146751404, 0.8721436858177185, 0.8696341514587402, 0.8733324408531189, 0.8779553771018982, 0.8798044919967651, 0.8842953443527222, 0.8800686597824097, 0.8856161832809448, 0.8856161832809448, 0.8869370222091675, 0.8908994793891907, 0.8905032277107239, 0.8943336606025696, 0.8971073627471924, 0.8928807377815247, 0.8931449055671692, 0.8957865834236145, 0.8988244533538818, 0.902390718460083, 0.9025228023529053, 0.9068815112113953, 0.9037115573883057, 0.9051644206047058], "val_loss": [2.0358197689056396, 1.5049803256988525, 1.0310653448104858, 0.8223639130592346, 0.7286232113838196, 0.6694421172142029, 0.6229999661445618, 0.5929334163665771, 0.5617767572402954, 0.542718231678009, 0.5245468020439148, 0.5115054249763489, 0.49505090713500977, 0.48607566952705383, 0.4711281359195709, 0.46142399311065674, 0.4507853090763092, 0.4444516599178314, 0.44243425130844116, 0.43257853388786316, 0.42281779646873474, 0.41860491037368774, 0.4097473621368408, 0.4078463613986969, 0.4016166925430298, 0.3962808847427368, 0.3911556005477905, 0.38553592562675476, 0.38733378052711487, 0.37556448578834534, 0.37958016991615295, 0.37070390582084656, 0.36877384781837463, 0.37232401967048645, 0.3622306287288666, 0.36200764775276184, 0.35306301712989807, 0.35299578309059143, 0.3562396764755249, 0.3448072373867035, 0.34745651483535767, 0.3480725586414337, 0.3466717004776001, 0.34435006976127625, 0.3446291983127594, 0.33992892503738403, 0.33718106150627136, 0.330989271402359, 0.32966363430023193, 0.3303109407424927, 0.32808738946914673, 0.32504913210868835, 0.3257777690887451, 0.32829904556274414, 0.32211190462112427, 0.32461267709732056, 0.3306035101413727, 0.3168123662471771, 0.3171730041503906, 0.319687157869339, 0.3126228451728821, 0.31878235936164856, 0.3144724667072296, 0.31734994053840637], "val_accuracy": [0.5483333468437195, 0.6596666574478149, 0.6903333067893982, 0.7203333377838135, 0.7403333187103271, 0.753000020980835, 0.765999972820282, 0.7760000228881836, 0.7953333258628845, 0.8040000200271606, 0.8059999942779541, 0.8140000104904175, 0.8169999718666077, 0.8243333101272583, 0.8286666870117188, 0.8349999785423279, 0.8389999866485596, 0.8399999737739563, 0.8363333344459534, 0.8410000205039978, 0.847000002861023, 0.8496666550636292, 0.8526666760444641, 0.8553333282470703, 0.8529999852180481, 0.8506666421890259, 0.856333315372467, 0.8613333106040955, 0.8576666712760925, 0.862666666507721, 0.8650000095367432, 0.8643333315849304, 0.8616666793823242, 0.8646666407585144, 0.8679999709129333, 0.8686666488647461, 0.871666669845581, 0.8723333477973938, 0.871666669845581, 0.8723333477973938, 0.8730000257492065, 0.8709999918937683, 0.8669999837875366, 0.8766666650772095, 0.8769999742507935, 0.8723333477973938, 0.874666690826416, 0.8790000081062317, 0.8809999823570251, 0.8799999952316284, 0.8806666731834412, 0.8813333511352539, 0.8853333592414856, 0.8843333125114441, 0.8849999904632568, 0.8856666684150696, 0.8816666603088379, 0.8849999904632568, 0.8883333206176758, 0.8856666684150696, 0.8870000243186951, 0.8840000033378601, 0.8880000114440918, 0.8880000114440918]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6], [0, 1, 0, 2, 0], [39, 39, 3], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [5, 5, 2, 0, 3, 5], [0, 2, 2, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [72, 99, 96, 36, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 6, 4, 2, 1, 1, 0, 1, 1, 14, 7, 7, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 3, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 2], [3, 2, 0, 3], [16, 16], [0, 1], [0], [4], [78], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 36, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 1, 2, 1, 1, 0, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3032963275909424, 2.3025951385498047, 2.302593231201172, 2.302605390548706, 2.3026058673858643, 2.3026106357574463, 2.302643299102783, 2.302607536315918, 2.302600145339966], "accuracy": [0.09536388516426086, 0.0936468094587326, 0.09813763201236725, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.0940430611371994, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025963306427, 2.302595615386963, 2.302600383758545, 2.3026092052459717, 2.302581787109375, 2.3025877475738525, 2.302621841430664, 2.3026044368743896, 2.3025918006896973], "val_accuracy": [0.09666666388511658, 0.10166666656732559, 0.0989999994635582, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 2, 3, 0, 3], [0, 0, 1, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 4], [3, 2, 0, 3], [16, 16], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 7, 3, 2], [0, 2, 1, 7, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 3], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.add(alpha, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3118369579315186, 2.320277690887451, 2.3531479835510254, 2.4062259197235107, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.0948355570435524, 0.09893012791872025, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.309769630432129, 2.3156325817108154, 2.344719171524048, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 10, 5, 5, 1, 13, 7, 6, 5], "tree_depth": 16}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 24], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [115.36312866210938, 85964.390625, 6687567.5, 222023568.0, 4878857728.0, 80111902720.0], "accuracy": [0.09747721254825592, 0.10157178342342377, 0.10711926966905594, 0.10196803510189056, 0.10196803510189056, 0.10210011899471283], "val_loss": [1678.6666259765625, 519083.65625, 28024968.0, 763624960.0, 14607281152.0, 226131771392.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]