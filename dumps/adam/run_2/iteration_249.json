[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2265098094940186, 1.8721503019332886, 1.3984827995300293, 1.117445468902588, 0.9441321492195129, 0.8490297198295593, 0.7875983715057373, 0.7317997217178345, 0.7000525593757629, 0.663927435874939, 0.643722414970398, 0.6097301244735718, 0.5944814682006836, 0.5781223773956299, 0.5639631152153015, 0.5498732328414917, 0.5393624305725098, 0.5265620350837708, 0.5131880640983582, 0.5003659129142761, 0.4949418008327484, 0.481071799993515, 0.47124218940734863, 0.46102842688560486, 0.4597831964492798, 0.44668304920196533, 0.44744762778282166, 0.43089309334754944, 0.42607101798057556, 0.42102187871932983, 0.4159153997898102, 0.41169431805610657, 0.40339648723602295, 0.3970722258090973, 0.3906615376472473, 0.3779182434082031, 0.37370800971984863, 0.36982300877571106, 0.36616382002830505, 0.3636820316314697, 0.354230672121048, 0.3568194806575775, 0.3487842381000519, 0.34391283988952637, 0.3335968852043152, 0.32992684841156006, 0.32211926579475403, 0.3198937773704529, 0.3140128552913666, 0.3127996027469635, 0.30744215846061707, 0.3055223524570465, 0.3035338521003723, 0.29394856095314026, 0.2973896861076355, 0.2935112416744232, 0.28144773840904236, 0.279786080121994, 0.27206557989120483, 0.26769137382507324, 0.26954302191734314, 0.2655089199542999, 0.26286962628364563, 0.25453197956085205, 0.25767382979393005, 0.25280481576919556, 0.2468421310186386, 0.2429964691400528, 0.23847630620002747, 0.23465435206890106, 0.23732654750347137, 0.2312602996826172, 0.21878615021705627, 0.2219259887933731], "accuracy": [0.26020342111587524, 0.4974243938922882, 0.5658433437347412, 0.6112799048423767, 0.6682076454162598, 0.6939638257026672, 0.7190595865249634, 0.733588695526123, 0.7453441023826599, 0.7586844563484192, 0.7671377658843994, 0.7803460359573364, 0.7792893648147583, 0.7885351777076721, 0.7960638999938965, 0.8010830879211426, 0.8061022162437439, 0.8105930685997009, 0.8150838613510132, 0.8204993009567261, 0.8198388814926147, 0.8319904804229736, 0.829216718673706, 0.8323867321014404, 0.8397833704948425, 0.8378021121025085, 0.8383304476737976, 0.8471800088882446, 0.8448025584220886, 0.8536521196365356, 0.8506141901016235, 0.852859616279602, 0.852859616279602, 0.8576145768165588, 0.8609166741371155, 0.863029956817627, 0.8661999702453613, 0.86553955078125, 0.8679170608520508, 0.8689737319946289, 0.8679170608520508, 0.8709549307823181, 0.8732003569602966, 0.8775591254234314, 0.8768987059593201, 0.8819178342819214, 0.8828424215316772, 0.8857482671737671, 0.8886540532112122, 0.8877294659614563, 0.8873332738876343, 0.8879936337471008, 0.8914278149604797, 0.8927486538887024, 0.894069492816925, 0.8944657444953918, 0.8943336606025696, 0.9012019634246826, 0.8993527889251709, 0.9033153057098389, 0.9035794734954834, 0.9010698795318604, 0.9058248400688171, 0.9082023501396179, 0.9063531756401062, 0.9056927561759949, 0.9105798602104187, 0.9084665179252625, 0.9163914918899536, 0.915070652961731, 0.9116365313529968, 0.9158631563186646, 0.9203540086746216, 0.9189010858535767], "val_loss": [2.046447515487671, 1.5214807987213135, 1.0386358499526978, 0.8247901797294617, 0.7308253645896912, 0.6794449687004089, 0.6322970986366272, 0.6071879863739014, 0.5750872492790222, 0.5561320781707764, 0.5378324389457703, 0.5227140188217163, 0.5115389227867126, 0.49950456619262695, 0.4905206561088562, 0.4875409007072449, 0.4742167294025421, 0.4654904901981354, 0.45825833082199097, 0.4527305066585541, 0.44389086961746216, 0.4378618896007538, 0.4349750876426697, 0.4290110766887665, 0.423615038394928, 0.4255441427230835, 0.41579732298851013, 0.41154390573501587, 0.40809765458106995, 0.4062531590461731, 0.39881494641304016, 0.4047224819660187, 0.40567129850387573, 0.4009236693382263, 0.39190414547920227, 0.38720667362213135, 0.3815629780292511, 0.38006627559661865, 0.3793494403362274, 0.379543662071228, 0.390107661485672, 0.3737809360027313, 0.3780163526535034, 0.36984121799468994, 0.3679829239845276, 0.36467495560646057, 0.3648475706577301, 0.35760077834129333, 0.36044731736183167, 0.3571512997150421, 0.36235693097114563, 0.3621698021888733, 0.354015052318573, 0.35291555523872375, 0.35207316279411316, 0.3542206883430481, 0.35771501064300537, 0.35077986121177673, 0.3451492488384247, 0.3472552001476288, 0.3483201861381531, 0.3397581875324249, 0.3440822660923004, 0.34746700525283813, 0.348313570022583, 0.34690603613853455, 0.34307870268821716, 0.34107154607772827, 0.34585416316986084, 0.34208688139915466, 0.3431890904903412, 0.3395822048187256, 0.34081798791885376, 0.34202098846435547], "val_accuracy": [0.5443333387374878, 0.6546666622161865, 0.6949999928474426, 0.721666693687439, 0.7486666440963745, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7873333096504211, 0.8019999861717224, 0.8029999732971191, 0.8069999814033508, 0.8090000152587891, 0.8196666836738586, 0.8273333311080933, 0.824999988079071, 0.8273333311080933, 0.8343333601951599, 0.8366666436195374, 0.8366666436195374, 0.843666672706604, 0.8463333249092102, 0.8486666679382324, 0.8533333539962769, 0.8506666421890259, 0.8463333249092102, 0.8536666631698608, 0.8526666760444641, 0.8573333621025085, 0.8569999933242798, 0.8583333492279053, 0.8546666502952576, 0.8546666502952576, 0.8519999980926514, 0.859333336353302, 0.8629999756813049, 0.8656666874885559, 0.8650000095367432, 0.8653333187103271, 0.8669999837875366, 0.8583333492279053, 0.8690000176429749, 0.8633333444595337, 0.8713333606719971, 0.8679999709129333, 0.8679999709129333, 0.8693333268165588, 0.8726666569709778, 0.8723333477973938, 0.871999979019165, 0.871666669845581, 0.8700000047683716, 0.8730000257492065, 0.874666690826416, 0.8743333220481873, 0.871999979019165, 0.8756666779518127, 0.8769999742507935, 0.8786666393280029, 0.878000020980835, 0.878000020980835, 0.8786666393280029, 0.8776666522026062, 0.8816666603088379, 0.878333330154419, 0.8773333430290222, 0.8759999871253967, 0.8816666603088379, 0.8833333253860474, 0.8796666860580444, 0.8806666731834412, 0.8799999952316284, 0.8813333511352539, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 6, 5], [0, 2, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5, 8], [3, 2, 3, 3, 1], [16, 16], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 4, 4, 5, 7, 1], [2, 6, 0, 2, 7, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [6, 4, 3, 6, 0, 1, 4, 1, 4, 2, 8, 8, 1, 8, 0, 0, 9], [4, 3, 0, 4, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 12, 7, 5, 0, 12, 6, 6, 1, 27, 17, 10, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, beta), tf.math.multiply(grad, tf.math.square(grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.subtract(beta, grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.math.sqrt(tf.math.subtract(sigma, alpha))), beta)))), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 3, 3, 5], [1, 3, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 6, 1, 6, 8, 1, 8, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 11, 6, 5, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 64, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 0, 10, 6, 4, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [82, 39], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 97], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 22, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.304030418395996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]