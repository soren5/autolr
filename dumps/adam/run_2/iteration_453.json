[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222895622253418, 1.868343472480774, 1.402085781097412, 1.103902816772461, 0.9425383806228638, 0.8403527140617371, 0.7807102799415588, 0.737066924571991, 0.6860185861587524, 0.6737529635429382, 0.6391695141792297, 0.6088039875030518, 0.6017062067985535, 0.571744441986084, 0.5650708675384521, 0.5470179915428162, 0.5415796041488647, 0.5218780636787415, 0.513072669506073, 0.5057547688484192, 0.49549153447151184, 0.4845524728298187, 0.4770814776420593, 0.4680180847644806, 0.46082982420921326, 0.44344791769981384, 0.44636937975883484, 0.43801939487457275, 0.42438969016075134, 0.4231068193912506, 0.41488614678382874, 0.41146305203437805, 0.40279632806777954, 0.39940425753593445, 0.39178410172462463, 0.3854464292526245, 0.37709787487983704, 0.36934301257133484, 0.36935240030288696, 0.35702645778656006, 0.3474460542201996, 0.35316070914268494, 0.3500840663909912, 0.3421598970890045, 0.33712515234947205, 0.3386050760746002, 0.331046998500824, 0.3236576020717621, 0.3205811679363251, 0.3176994025707245, 0.3087017238140106, 0.3033835291862488, 0.3010304272174835, 0.3034466505050659, 0.2955287992954254, 0.2889704704284668, 0.2918130159378052, 0.29052960872650146], "accuracy": [0.2685246467590332, 0.4690265357494354, 0.5517104864120483, 0.6132611036300659, 0.6622639298439026, 0.7012283802032471, 0.7217012047767639, 0.7316074371337891, 0.750759482383728, 0.7557786107063293, 0.7689869403839111, 0.7814027070999146, 0.7815347909927368, 0.7940827012062073, 0.7952714562416077, 0.8030643463134766, 0.8067626357078552, 0.8109893202781677, 0.8138951063156128, 0.8206313848495483, 0.822348415851593, 0.8222163319587708, 0.8265751004219055, 0.830669641494751, 0.8329150676727295, 0.842028796672821, 0.8380662798881531, 0.8424250483512878, 0.8477083444595337, 0.8477083444595337, 0.8551049828529358, 0.8506141901016235, 0.8589354157447815, 0.8541803956031799, 0.8577466607093811, 0.8607845902442932, 0.8654074668884277, 0.86553955078125, 0.8705587387084961, 0.8714832663536072, 0.8737286925315857, 0.8746532797813416, 0.8746532797813416, 0.8768987059593201, 0.8813894987106323, 0.8791441321372986, 0.8828424215316772, 0.8840311765670776, 0.8824461698532104, 0.884691596031189, 0.889578640460968, 0.8914278149604797, 0.8893144726753235, 0.8957865834236145, 0.8963148593902588, 0.8969752788543701, 0.896446943283081, 0.8953903317451477], "val_loss": [2.039975643157959, 1.5213351249694824, 1.0506258010864258, 0.8425744771957397, 0.7492824792861938, 0.6883665919303894, 0.6498890519142151, 0.616596519947052, 0.5830833911895752, 0.562179684638977, 0.5445259213447571, 0.5246092677116394, 0.5095770955085754, 0.4966353476047516, 0.4836496114730835, 0.478494793176651, 0.4637165665626526, 0.45832115411758423, 0.4575680196285248, 0.4407244324684143, 0.4319984018802643, 0.4279727339744568, 0.4198625385761261, 0.41413185000419617, 0.4101223945617676, 0.4052165150642395, 0.40659016370773315, 0.3944183886051178, 0.3918675482273102, 0.38868004083633423, 0.38580241799354553, 0.3801908791065216, 0.38306084275245667, 0.37781766057014465, 0.3693351149559021, 0.3684519827365875, 0.36247265338897705, 0.3600306510925293, 0.3586421012878418, 0.3571724593639374, 0.36065900325775146, 0.3541320860385895, 0.3477485477924347, 0.3480566143989563, 0.34851300716400146, 0.34582194685935974, 0.34520581364631653, 0.34634390473365784, 0.3401617705821991, 0.340518593788147, 0.33798888325691223, 0.33722513914108276, 0.33395349979400635, 0.33063748478889465, 0.33578944206237793, 0.3353099524974823, 0.32981497049331665, 0.3352983891963959], "val_accuracy": [0.5083333253860474, 0.6443333625793457, 0.6880000233650208, 0.7059999704360962, 0.7276666760444641, 0.7463333606719971, 0.7563333511352539, 0.7696666717529297, 0.7760000228881836, 0.7910000085830688, 0.7986666560173035, 0.8069999814033508, 0.8166666626930237, 0.8270000219345093, 0.8270000219345093, 0.8303333520889282, 0.8363333344459534, 0.8376666903495789, 0.8396666646003723, 0.847000002861023, 0.8516666889190674, 0.8516666889190674, 0.8556666374206543, 0.8579999804496765, 0.8550000190734863, 0.8576666712760925, 0.8579999804496765, 0.859333336353302, 0.8659999966621399, 0.8636666536331177, 0.8613333106040955, 0.8679999709129333, 0.8643333315849304, 0.8659999966621399, 0.8706666827201843, 0.8696666955947876, 0.8666666746139526, 0.8706666827201843, 0.8713333606719971, 0.8743333220481873, 0.8713333606719971, 0.8736666440963745, 0.875, 0.875, 0.8743333220481873, 0.8776666522026062, 0.878333330154419, 0.8806666731834412, 0.8766666650772095, 0.8790000081062317, 0.8743333220481873, 0.8820000290870667, 0.8833333253860474, 0.8833333253860474, 0.8823333382606506, 0.8799999952316284, 0.8823333382606506, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 5, 3, 0, 3, 3], [0, 1, 0, 2, 0], [39, 39, 97], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 4, 5, 9], [0, 2, 0, 3], [16, 16, 42], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 6, 3, 6, 9, 9, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 4, 4, 0], [79, 99, 96, 99, 61, 1]], "fitness": -0.12542857229709625, "mapping_values": [1, 11, 6, 5, 3, 12, 8, 4, 3, 2, 1, 1, 1, 11, 7, 4, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [1.0402784541690996e+27, 1.3150204234801623e+27, 1.266920907242846e+27, 1.2845832957585415e+27, 1.2510006292374718e+27, 1.2071004036080712e+27], "accuracy": [0.1154404953122139, 0.11068551242351532, 0.107647605240345, 0.108440101146698, 0.11002509295940399, 0.11081759631633759], "val_loss": [1.105100829352949e+27, 1.105100829352949e+27, 1.105100829352949e+27, 1.105100829352949e+27, 1.105100829352949e+27, 1.105100829352949e+27], "val_accuracy": [0.12399999797344208, 0.12399999797344208, 0.12399999797344208, 0.12399999797344208, 0.12399999797344208, 0.12399999797344208]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 4, 6, 8, 5, 4, 1, 4, 4, 4], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 25, 17, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 0, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), alpha)", "other_info": {"loss": [2.309872627258301, 2.3133537769317627, 2.3147215843200684, 2.3156650066375732, 2.3136239051818848, 2.317697525024414], "accuracy": [0.09153348207473755, 0.0952318087220192, 0.0952318087220192, 0.09021265059709549, 0.09642054885625839, 0.09945846349000931], "val_loss": [2.306912422180176, 2.3070693016052246, 2.3072376251220703, 2.3073863983154297, 2.3075318336486816, 2.3076789379119873], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 1, 3, 4, 5, 1, 7, 6, 8, 8], [0, 1, 0, 2, 3, 0, 2, 2, 2, 0], [39, 39, 64, 89], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 4, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 4, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), grad))))), tf.math.sqrt(grad)), grad), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 60], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [0, 2, 0, 3], [27, 16], [0, 0, 0, 1, 0, 0, 1], [8, 3, 0, 0, 0], [0, 3], [30], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.09399999678134918, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 7, 5, 2, 1, 11, 7, 4, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.309861660003662, 2.310598373413086, 2.3096673488616943, 2.310368299484253, 2.309892177581787, 2.310469388961792], "accuracy": [0.08981640636920929, 0.09272222965955734, 0.08981640636920929, 0.0870426595211029, 0.09192973375320435, 0.09113723784685135], "val_loss": [2.3092193603515625, 2.3092193603515625, 2.3092193603515625, 2.3092193603515625, 2.3092193603515625, 2.3092193603515625], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]