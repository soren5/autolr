[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2240874767303467, 1.8650035858154297, 1.3885178565979004, 1.0941452980041504, 0.9407484531402588, 0.8472844362258911, 0.7696287631988525, 0.7332963943481445, 0.6880741715431213, 0.6681725978851318, 0.6339622139930725, 0.6131359338760376, 0.5954194068908691, 0.5741563439369202, 0.5563604235649109, 0.5463225245475769, 0.5450900197029114, 0.5146608948707581, 0.5060923099517822, 0.4958738088607788, 0.4818488359451294, 0.48316457867622375, 0.47273749113082886, 0.4610216021537781, 0.45645517110824585, 0.4460713863372803, 0.4383540451526642, 0.4329990744590759, 0.42067864537239075, 0.4175257980823517, 0.4143417775630951, 0.40512603521347046, 0.3999895751476288, 0.39312005043029785, 0.38582757115364075, 0.3735062777996063, 0.3755180537700653, 0.3698226809501648, 0.36378616094589233, 0.3592163026332855, 0.3425233066082001, 0.3477800190448761, 0.34356075525283813, 0.33022481203079224, 0.3357703983783722, 0.32302382588386536, 0.32636186480522156, 0.3212079405784607, 0.3138398826122284, 0.310136616230011, 0.3107653260231018, 0.30666178464889526, 0.29937347769737244, 0.29694879055023193, 0.2947466969490051, 0.2831000089645386, 0.2843452990055084, 0.2857595980167389, 0.27573007345199585, 0.2664317488670349, 0.268890380859375, 0.2629939317703247, 0.264933317899704, 0.2528992295265198, 0.25050562620162964, 0.2525676488876343, 0.23729853332042694, 0.24090369045734406, 0.23825429379940033, 0.2362598031759262, 0.23887501657009125, 0.22913387417793274, 0.21769359707832336, 0.21602289378643036, 0.2148982286453247, 0.21930398046970367, 0.21324804425239563, 0.20761750638484955, 0.20723752677440643, 0.20473705232143402, 0.2043718546628952, 0.19764447212219238, 0.19559070467948914, 0.19147448241710663], "accuracy": [0.26641130447387695, 0.5017831325531006, 0.5661075115203857, 0.6217144131660461, 0.6690001487731934, 0.6930392384529114, 0.7283053994178772, 0.7288337349891663, 0.7547219395637512, 0.7563069462776184, 0.7744023203849792, 0.7783648371696472, 0.7816668748855591, 0.7876105904579163, 0.7944789528846741, 0.8047813773155212, 0.8063663840293884, 0.817989706993103, 0.8157442808151245, 0.8227446675300598, 0.8267071843147278, 0.8267071843147278, 0.8372738361358643, 0.8334434032440186, 0.8384625315666199, 0.8421608805656433, 0.8432175517082214, 0.8498216867446899, 0.8521991968154907, 0.8511425256729126, 0.8508783578872681, 0.8557654023170471, 0.8561616539955139, 0.8589354157447815, 0.86553955078125, 0.8651432991027832, 0.8643507957458496, 0.8648791313171387, 0.8684453964233398, 0.8705587387084961, 0.8780874609947205, 0.8721436858177185, 0.8771628737449646, 0.8813894987106323, 0.8770307898521423, 0.8845595121383667, 0.8809932470321655, 0.8865407705307007, 0.8841632604598999, 0.8906353116035461, 0.8905032277107239, 0.8894465565681458, 0.8942015767097473, 0.8928807377815247, 0.8914278149604797, 0.896446943283081, 0.8969752788543701, 0.8985602855682373, 0.898428201675415, 0.9027869701385498, 0.9045040011405945, 0.9017302989959717, 0.8993527889251709, 0.9050323367118835, 0.9068815112113953, 0.9080702662467957, 0.9133535623550415, 0.9117686152458191, 0.9099194407463074, 0.9116365313529968, 0.9132214784622192, 0.9163914918899536, 0.920089840888977, 0.9204860925674438, 0.9202219247817993, 0.9191652536392212, 0.9204860925674438, 0.9196935892105103, 0.9235239624977112, 0.9261656403541565, 0.9228635430335999, 0.9269581437110901, 0.9297318458557129, 0.9276185631752014], "val_loss": [2.0396530628204346, 1.5103421211242676, 1.039899468421936, 0.8363622426986694, 0.7502343058586121, 0.6937756538391113, 0.6494916677474976, 0.6152116656303406, 0.5858862996101379, 0.5656910538673401, 0.5498213171958923, 0.5303193926811218, 0.5154505968093872, 0.49865633249282837, 0.4902958869934082, 0.4780464768409729, 0.469625324010849, 0.4650094509124756, 0.4537180960178375, 0.4430646300315857, 0.43493229150772095, 0.43169164657592773, 0.4258825182914734, 0.42301106452941895, 0.4187707006931305, 0.41039952635765076, 0.4043341875076294, 0.40026164054870605, 0.39667952060699463, 0.39596542716026306, 0.39096763730049133, 0.3859296441078186, 0.38573870062828064, 0.3873341977596283, 0.3763200640678406, 0.37755513191223145, 0.3721480369567871, 0.3666422963142395, 0.37009087204933167, 0.3649042844772339, 0.36110323667526245, 0.3560059070587158, 0.35799089074134827, 0.3560543656349182, 0.35595446825027466, 0.3547009229660034, 0.35410767793655396, 0.3521740734577179, 0.3481298089027405, 0.34521833062171936, 0.34353670477867126, 0.341503381729126, 0.3396203815937042, 0.34173184633255005, 0.34269702434539795, 0.3440810441970825, 0.33676981925964355, 0.339206337928772, 0.33652666211128235, 0.32990404963493347, 0.33057695627212524, 0.3383345603942871, 0.3300231695175171, 0.3346864879131317, 0.3282429575920105, 0.3279207646846771, 0.33196160197257996, 0.32250848412513733, 0.32530561089515686, 0.3351278007030487, 0.32268884778022766, 0.3239520490169525, 0.32173997163772583, 0.3207705020904541, 0.3233407735824585, 0.3277142643928528, 0.3332787752151489, 0.33371609449386597, 0.32482773065567017, 0.3214474320411682, 0.32062265276908875, 0.32614901661872864, 0.32144060730934143, 0.323108971118927], "val_accuracy": [0.5323333144187927, 0.6573333144187927, 0.6819999814033508, 0.7149999737739563, 0.7383333444595337, 0.746666669845581, 0.7616666555404663, 0.765333354473114, 0.7829999923706055, 0.7873333096504211, 0.800000011920929, 0.8033333420753479, 0.8109999895095825, 0.815666675567627, 0.8183333277702332, 0.8253333568572998, 0.8259999752044678, 0.8270000219345093, 0.8330000042915344, 0.8366666436195374, 0.8389999866485596, 0.8386666774749756, 0.8410000205039978, 0.8460000157356262, 0.8476666808128357, 0.847000002861023, 0.8496666550636292, 0.8519999980926514, 0.8573333621025085, 0.8579999804496765, 0.8513333201408386, 0.8613333106040955, 0.8576666712760925, 0.8560000061988831, 0.8586666584014893, 0.859666645526886, 0.8659999966621399, 0.8643333315849304, 0.8633333444595337, 0.8663333058357239, 0.8683333396911621, 0.8683333396911621, 0.8700000047683716, 0.8686666488647461, 0.8669999837875366, 0.8703333139419556, 0.8706666827201843, 0.8703333139419556, 0.8709999918937683, 0.8733333349227905, 0.8733333349227905, 0.8723333477973938, 0.874666690826416, 0.8766666650772095, 0.874666690826416, 0.8756666779518127, 0.8743333220481873, 0.8776666522026062, 0.8766666650772095, 0.8786666393280029, 0.8763333559036255, 0.874666690826416, 0.8773333430290222, 0.8743333220481873, 0.8809999823570251, 0.8790000081062317, 0.874666690826416, 0.8836666941642761, 0.8826666474342346, 0.8773333430290222, 0.8833333253860474, 0.8830000162124634, 0.8846666812896729, 0.8849999904632568, 0.8796666860580444, 0.8809999823570251, 0.8806666731834412, 0.878333330154419, 0.887333333492279, 0.8830000162124634, 0.8843333125114441, 0.8849999904632568, 0.8840000033378601, 0.8826666474342346]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 10], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 2, 3, 4, 8, 5, 3, 5, 9], [0, 2, 0, 3], [16, 16, 10], [0, 1], [0], [0], [22], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 8, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 9, 4, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.multiply(tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303480386734009, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [86, 99, 56, 99, 33, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), sigma))), beta)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3036961555480957, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 8], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6, 6, 0, 1, 9, 4, 3], [0, 2, 0, 3, 4, 4, 4, 0], [16, 16, 93, 56], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 1, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 92, 97, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 21, 13, 8, 4, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.multiply(grad, grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.304563045501709, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 5, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 2, 3, 0, 6, 5, 2, 1, 5, 4, 1, 2, 4, 4, 9, 7, 4, 4, 0, 2, 9, 4, 3, 3, 5, 6, 0, 3, 5, 6, 8, 0], [0, 2, 0, 3, 5, 5, 2, 0, 0, 4, 2, 3, 1, 3, 1, 3, 2, 5, 2, 4], [16, 16, 64, 44, 75, 76], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 3, 8], [2, 4, 1, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 52, 32, 20, 6, 2, 1, 1, 1, 13, 7, 6, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), grad), tf.math.subtract(tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.pow(grad, beta), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, beta), grad)))), tf.math.pow(tf.math.negative(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.multiply(tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(alpha, grad)), tf.math.square(tf.math.divide_no_nan(beta, grad)))), tf.math.sqrt(tf.math.negative(beta)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(alpha, sigma))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]