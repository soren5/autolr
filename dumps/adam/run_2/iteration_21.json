[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8748571276664734, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2257304191589355, 1.8795742988586426, 1.4002149105072021, 1.0845156908035278, 0.9352409243583679, 0.8323283195495605, 0.7702773213386536, 0.7239602208137512, 0.6890323162078857, 0.6605302095413208, 0.6405627727508545, 0.618780791759491, 0.5953121185302734, 0.5723647475242615, 0.5688818097114563, 0.5402939915657043, 0.5230716466903687, 0.5185339450836182, 0.5055860877037048, 0.49823811650276184, 0.48530110716819763, 0.4731071889400482, 0.4742107689380646, 0.4618343412876129, 0.45226407051086426, 0.43923208117485046, 0.42923814058303833, 0.4224671423435211, 0.4132537245750427, 0.4171052873134613, 0.40286657214164734, 0.401645690202713, 0.3904517590999603, 0.3879532814025879, 0.3833983242511749, 0.3733660578727722, 0.3682907521724701, 0.3621160089969635, 0.3541252911090851, 0.35348233580589294, 0.34747570753097534, 0.3413771390914917, 0.33653727173805237, 0.3308607339859009, 0.32244059443473816, 0.3230111598968506, 0.31718727946281433, 0.3173046112060547, 0.3139379322528839, 0.3081393241882324, 0.3043934404850006, 0.29838016629219055, 0.28782740235328674, 0.28089746832847595, 0.27577802538871765, 0.27998772263526917, 0.2814391553401947, 0.2731642425060272, 0.2675051689147949, 0.25949910283088684, 0.25661787390708923, 0.2519060969352722, 0.2506949305534363, 0.24650299549102783, 0.24389494955539703, 0.2343333512544632, 0.22960200905799866, 0.2354428470134735, 0.23220930993556976, 0.2245044708251953, 0.22387441992759705, 0.22017037868499756, 0.21408002078533173, 0.20792903006076813, 0.209246426820755, 0.2106911689043045, 0.2036212831735611, 0.1993311047554016], "accuracy": [0.2793554365634918, 0.4865935742855072, 0.5695416927337646, 0.6186765432357788, 0.666358470916748, 0.7003037929534912, 0.7259278893470764, 0.7296261787414551, 0.748778223991394, 0.7600052952766418, 0.7647602558135986, 0.7684586048126221, 0.7815347909927368, 0.7957997918128967, 0.7957997918128967, 0.8035926818847656, 0.8074230551719666, 0.8078193068504333, 0.8131026029586792, 0.8224804997444153, 0.8222163319587708, 0.8245938420295715, 0.8298771381378174, 0.8335754871368408, 0.8360850811004639, 0.844010055065155, 0.8426892161369324, 0.8448025584220886, 0.8471800088882446, 0.8491612672805786, 0.8574824929237366, 0.8543124794960022, 0.858671247959137, 0.859199583530426, 0.858671247959137, 0.8667283058166504, 0.863558292388916, 0.8702945709228516, 0.8681812286376953, 0.8706908226013184, 0.8689737319946289, 0.8739928603172302, 0.8782195448875427, 0.8821820020675659, 0.8841632604598999, 0.8782195448875427, 0.8869370222091675, 0.8794082403182983, 0.8840311765670776, 0.8815215826034546, 0.8944657444953918, 0.8912957310676575, 0.8919561505317688, 0.8926165699958801, 0.8949940800666809, 0.897899866104126, 0.8994848728179932, 0.898428201675415, 0.9041078090667725, 0.9046360850334167, 0.9060890078544617, 0.9095231890678406, 0.9060890078544617, 0.9108440279960632, 0.9080702662467957, 0.9149385690689087, 0.9140139818191528, 0.9083344340324402, 0.915070652961731, 0.915070652961731, 0.9159952402114868, 0.921938955783844, 0.9198256731033325, 0.9210143685340881, 0.9228635430335999, 0.9196935892105103, 0.9269581437110901, 0.926429808139801], "val_loss": [2.045520782470703, 1.521894097328186, 1.045864224433899, 0.8405641317367554, 0.7541571259498596, 0.6997856497764587, 0.6578887701034546, 0.6186016201972961, 0.5940539836883545, 0.5707026124000549, 0.547885000705719, 0.5374830365180969, 0.5198137760162354, 0.5039316415786743, 0.5027194023132324, 0.4843730330467224, 0.4730151891708374, 0.46506747603416443, 0.45391303300857544, 0.454712837934494, 0.44479256868362427, 0.4381479024887085, 0.4374189078807831, 0.43261051177978516, 0.42431265115737915, 0.41918185353279114, 0.41278308629989624, 0.4116319715976715, 0.4080835282802582, 0.4041145443916321, 0.40467435121536255, 0.4004606008529663, 0.39678290486335754, 0.3894149661064148, 0.3937996029853821, 0.3846401274204254, 0.38279345631599426, 0.38769441843032837, 0.3774288296699524, 0.3818838596343994, 0.37320321798324585, 0.3775084614753723, 0.3697284460067749, 0.37272608280181885, 0.3658878207206726, 0.3662434220314026, 0.36805737018585205, 0.36323216557502747, 0.36421117186546326, 0.35865551233291626, 0.3593340516090393, 0.3540715277194977, 0.35871216654777527, 0.35692235827445984, 0.3546740710735321, 0.35243961215019226, 0.349816232919693, 0.35567015409469604, 0.35231485962867737, 0.3486785590648651, 0.35001054406166077, 0.34874990582466125, 0.35194164514541626, 0.3539067804813385, 0.348347544670105, 0.35494935512542725, 0.35152509808540344, 0.34135204553604126, 0.3479156792163849, 0.34889012575149536, 0.3503827452659607, 0.3495117723941803, 0.3451566994190216, 0.34634536504745483, 0.34823745489120483, 0.34743717312812805, 0.35348641872406006, 0.34741130471229553], "val_accuracy": [0.5426666736602783, 0.6576666831970215, 0.6840000152587891, 0.7020000219345093, 0.7226666808128357, 0.737333357334137, 0.750333309173584, 0.7616666555404663, 0.7689999938011169, 0.7879999876022339, 0.7933333516120911, 0.7963333129882812, 0.8073333501815796, 0.8169999718666077, 0.8173333406448364, 0.8223333358764648, 0.8309999704360962, 0.8333333134651184, 0.8413333296775818, 0.8453333377838135, 0.8383333086967468, 0.8453333377838135, 0.8489999771118164, 0.8456666469573975, 0.8539999723434448, 0.8519999980926514, 0.8550000190734863, 0.8566666841506958, 0.859666645526886, 0.8576666712760925, 0.8603333234786987, 0.8579999804496765, 0.8613333106040955, 0.8656666874885559, 0.8640000224113464, 0.8653333187103271, 0.8663333058357239, 0.8640000224113464, 0.8696666955947876, 0.8663333058357239, 0.8700000047683716, 0.8663333058357239, 0.8690000176429749, 0.8690000176429749, 0.8706666827201843, 0.8693333268165588, 0.8690000176429749, 0.871666669845581, 0.875, 0.8740000128746033, 0.8730000257492065, 0.875333309173584, 0.8763333559036255, 0.874666690826416, 0.8769999742507935, 0.8790000081062317, 0.8790000081062317, 0.8793333172798157, 0.878000020980835, 0.8763333559036255, 0.8816666603088379, 0.878333330154419, 0.8813333511352539, 0.8786666393280029, 0.8820000290870667, 0.875, 0.8796666860580444, 0.8826666474342346, 0.8796666860580444, 0.8813333511352539, 0.8793333172798157, 0.8823333382606506, 0.8856666684150696, 0.8840000033378601, 0.8856666684150696, 0.8823333382606506, 0.8820000290870667, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222768783569336, 1.8743406534194946, 1.3895608186721802, 1.1035882234573364, 0.9446147680282593, 0.8438730835914612, 0.7725760340690613, 0.7243121862411499, 0.6867929100990295, 0.6617404222488403, 0.6388382315635681, 0.6187350153923035, 0.589730441570282, 0.5833219885826111, 0.5640323162078857, 0.5503424406051636, 0.5309637188911438, 0.5233429670333862, 0.5191783905029297, 0.5001410841941833, 0.495246022939682, 0.47402194142341614, 0.4758319556713104, 0.459002822637558, 0.4662597179412842, 0.4540892541408539, 0.4473312199115753, 0.4348316192626953, 0.43032264709472656, 0.4227774143218994, 0.42261481285095215, 0.4111439287662506, 0.40640443563461304, 0.3971182107925415, 0.39750489592552185, 0.39037206768989563, 0.3828640580177307, 0.3771415948867798, 0.37119486927986145, 0.3673664927482605, 0.3573690950870514, 0.36311694979667664, 0.3583143353462219, 0.3443387448787689, 0.3368489146232605, 0.33489736914634705, 0.3312433958053589, 0.32633042335510254, 0.3214092552661896, 0.30757421255111694, 0.3116142451763153, 0.3085792362689972, 0.3098355233669281, 0.30362483859062195, 0.29289528727531433, 0.28768807649612427, 0.28629425168037415, 0.27759942412376404, 0.27789029479026794, 0.27722907066345215, 0.2706378996372223], "accuracy": [0.2818650007247925, 0.4831594228744507, 0.5620129704475403, 0.6111478209495544, 0.6616035103797913, 0.6983225345611572, 0.7215691208839417, 0.7349095344543457, 0.7552502751350403, 0.7573636174201965, 0.7693831920623779, 0.7713643908500671, 0.7827235460281372, 0.7886672616004944, 0.7992339134216309, 0.8009510040283203, 0.8083476424217224, 0.8120459914207458, 0.816008448600769, 0.8253863453865051, 0.8247259259223938, 0.8277638554573059, 0.8293488025665283, 0.8378021121025085, 0.8330471515655518, 0.8363492488861084, 0.8389908671379089, 0.8477083444595337, 0.8477083444595337, 0.8498216867446899, 0.8499537706375122, 0.852331280708313, 0.8529917001724243, 0.8581429123878479, 0.8553691506385803, 0.8570862412452698, 0.8610487580299377, 0.8638224601745605, 0.8640866279602051, 0.8631620407104492, 0.8692378997802734, 0.8688416481018066, 0.871879518032074, 0.8755778670310974, 0.8799365758895874, 0.8803328275680542, 0.8828424215316772, 0.8813894987106323, 0.8829745054244995, 0.8860124349594116, 0.8850878477096558, 0.887597382068634, 0.8914278149604797, 0.8914278149604797, 0.8914278149604797, 0.8975036144256592, 0.8971073627471924, 0.9029190540313721, 0.8975036144256592, 0.9030511379241943, 0.9014661312103271], "val_loss": [2.0402040481567383, 1.5073456764221191, 1.024938941001892, 0.8146907687187195, 0.7221124768257141, 0.6604065895080566, 0.6158155798912048, 0.5855931639671326, 0.555533766746521, 0.5373826622962952, 0.5222203731536865, 0.5112482309341431, 0.48811450600624084, 0.478814035654068, 0.47348126769065857, 0.45502713322639465, 0.4551456570625305, 0.4443885087966919, 0.4312652051448822, 0.43030139803886414, 0.4193798303604126, 0.413269579410553, 0.4064558148384094, 0.4029604494571686, 0.4056870639324188, 0.3963479697704315, 0.38719359040260315, 0.3897937834262848, 0.3818952739238739, 0.3709346652030945, 0.3754374086856842, 0.3723478615283966, 0.3646671175956726, 0.36310046911239624, 0.3590821623802185, 0.358004629611969, 0.35345762968063354, 0.3476472496986389, 0.3504416048526764, 0.34955066442489624, 0.35218051075935364, 0.3409420847892761, 0.337898850440979, 0.33483508229255676, 0.33440324664115906, 0.333518922328949, 0.3242926001548767, 0.324881374835968, 0.32765018939971924, 0.32005444169044495, 0.3213537931442261, 0.3157482147216797, 0.3242119550704956, 0.31864023208618164, 0.31250104308128357, 0.31137996912002563, 0.3125426769256592, 0.3103350102901459, 0.3112671375274658, 0.3073849380016327, 0.3129195272922516], "val_accuracy": [0.5443333387374878, 0.6663333177566528, 0.6883333325386047, 0.718999981880188, 0.7356666922569275, 0.7519999742507935, 0.7670000195503235, 0.7789999842643738, 0.7889999747276306, 0.796999990940094, 0.7986666560173035, 0.812666654586792, 0.8166666626930237, 0.8253333568572998, 0.8233333230018616, 0.8316666483879089, 0.8253333568572998, 0.8293333053588867, 0.8416666388511658, 0.8383333086967468, 0.8446666598320007, 0.8483333587646484, 0.8500000238418579, 0.8489999771118164, 0.8486666679382324, 0.8483333587646484, 0.859000027179718, 0.8546666502952576, 0.856333315372467, 0.859666645526886, 0.8586666584014893, 0.8610000014305115, 0.8606666922569275, 0.8633333444595337, 0.8633333444595337, 0.8636666536331177, 0.8650000095367432, 0.8673333525657654, 0.8673333525657654, 0.8679999709129333, 0.8633333444595337, 0.8733333349227905, 0.8733333349227905, 0.8709999918937683, 0.8726666569709778, 0.8736666440963745, 0.8743333220481873, 0.8773333430290222, 0.875, 0.8793333172798157, 0.8790000081062317, 0.8830000162124634, 0.8766666650772095, 0.8790000081062317, 0.8836666941642761, 0.8870000243186951, 0.8826666474342346, 0.8830000162124634, 0.8809999823570251, 0.8863333463668823, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [19, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 6, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 76, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [36.19424057006836, 46.071266174316406, 2985523412992.0, 6368587153408.0, 6377716580352.0, 6369403469824.0], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.10117553919553757, 0.1002509593963623, 0.09840179979801178], "val_loss": [45.68303680419922, 44.774845123291016, 5501081354240.0, 5501079781376.0, 5501079781376.0, 5501079257088.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [21, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 23, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(alpha))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 7], [16, 99, 96, 99, 80, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 6, 3, 3, 2, 1, 0, 1, 1, 25, 13, 12, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.subtract(alpha, beta)))))), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [24, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 29], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 3, 4, 2, 8, 7, 2, 0], [0, 0, 0, 3, 4, 0, 3, 1, 4, 0, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 0, 2, 1, 1, 1, 25, 14, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.multiply(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [2.3103294372558594, 2.3110764026641846, 2.3107733726501465, 2.3101797103881836, 2.3106472492218018, 2.3092000484466553], "accuracy": [0.0952318087220192, 0.09259014576673508, 0.09259014576673508, 0.09008057415485382, 0.08809932321310043, 0.09179764986038208], "val_loss": [2.3083622455596924, 2.308364152908325, 2.3083655834198, 2.308365821838379, 2.308366537094116, 2.308366537094116], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]