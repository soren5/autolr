[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222787380218506, 1.8758602142333984, 1.4000293016433716, 1.1011073589324951, 0.9486643075942993, 0.8511971831321716, 0.7819984555244446, 0.7389312982559204, 0.7112964987754822, 0.671590268611908, 0.6477304100990295, 0.6330472826957703, 0.6093582510948181, 0.5929384231567383, 0.5710738897323608, 0.5635525584220886, 0.5542349219322205, 0.5231378078460693, 0.528389036655426, 0.5143072605133057, 0.4964807629585266, 0.491860568523407, 0.48442408442497253, 0.4759599268436432, 0.46624475717544556, 0.46131420135498047, 0.4517427384853363, 0.4439321756362915, 0.4313071072101593, 0.4394264221191406, 0.4213530421257019, 0.42319923639297485, 0.4067622125148773, 0.4053191542625427, 0.397544264793396, 0.3864179849624634, 0.38845574855804443, 0.38438454270362854, 0.380531370639801, 0.3681288957595825, 0.368328720331192, 0.35679396986961365, 0.3515380620956421, 0.3515227437019348, 0.34646281599998474, 0.344907283782959, 0.3428330719470978, 0.33383461833000183, 0.32962024211883545, 0.32731759548187256, 0.31992557644844055, 0.32149046659469604, 0.3073805570602417, 0.3082672953605652, 0.2984090745449066, 0.30251258611679077, 0.2893378436565399, 0.2962914705276489, 0.28475987911224365, 0.2786383032798767, 0.2776535749435425, 0.2744223475456238, 0.2727535367012024, 0.26024284958839417, 0.2601485848426819, 0.2657950520515442, 0.256820946931839, 0.25106969475746155, 0.24809640645980835], "accuracy": [0.2744683623313904, 0.483819842338562, 0.5679566860198975, 0.6133931875228882, 0.6585655808448792, 0.6896050572395325, 0.7140403985977173, 0.7284374833106995, 0.7408532500267029, 0.7512878179550171, 0.7635715007781982, 0.7681944370269775, 0.7773081660270691, 0.7884030938148499, 0.7873464822769165, 0.7981772422790527, 0.7981772422790527, 0.8121780753135681, 0.8078193068504333, 0.8173292875289917, 0.8169330358505249, 0.8227446675300598, 0.8278959393501282, 0.8297450542449951, 0.8310658931732178, 0.8354246616363525, 0.8387266993522644, 0.8422929644584656, 0.8442742228507996, 0.8418967127799988, 0.852331280708313, 0.8502179384231567, 0.8549728989601135, 0.8560295701026917, 0.8549728989601135, 0.8621054291725159, 0.86118084192276, 0.8661999702453613, 0.8634262084960938, 0.8677849769592285, 0.8659358024597168, 0.8751816153526306, 0.8745211958885193, 0.8714832663536072, 0.8778232932090759, 0.8751816153526306, 0.8787478804588318, 0.878879964351654, 0.8802007436752319, 0.8809932470321655, 0.889578640460968, 0.8848236799240112, 0.8899748921394348, 0.8881257176399231, 0.8949940800666809, 0.889578640460968, 0.895918607711792, 0.8907673954963684, 0.8981640338897705, 0.8990886211395264, 0.8980319499969482, 0.9010698795318604, 0.8973715305328369, 0.9062210917472839, 0.9062210917472839, 0.9033153057098389, 0.9076740145683289, 0.9079381823539734, 0.9099194407463074], "val_loss": [2.0382626056671143, 1.514527678489685, 1.0275144577026367, 0.8126822710037231, 0.7162815928459167, 0.6645535230636597, 0.6276463270187378, 0.5879903435707092, 0.5636552572250366, 0.5465078949928284, 0.5349131226539612, 0.5136988162994385, 0.49728426337242126, 0.48748812079429626, 0.4756222665309906, 0.4676326811313629, 0.4553849399089813, 0.44333574175834656, 0.4406628906726837, 0.43662509322166443, 0.42223039269447327, 0.4185963273048401, 0.4149234890937805, 0.4098252058029175, 0.4048844277858734, 0.3998308479785919, 0.40015479922294617, 0.39139899611473083, 0.38413119316101074, 0.38420841097831726, 0.3805696666240692, 0.3785153925418854, 0.37628939747810364, 0.3686911165714264, 0.36595040559768677, 0.364901602268219, 0.3610322177410126, 0.35604092478752136, 0.35863247513771057, 0.3550872504711151, 0.35844355821609497, 0.34982648491859436, 0.35023167729377747, 0.3519342541694641, 0.34713566303253174, 0.35332295298576355, 0.35010889172554016, 0.34555843472480774, 0.3447018265724182, 0.3371720314025879, 0.341018944978714, 0.3383965790271759, 0.3359196186065674, 0.33134210109710693, 0.33237797021865845, 0.32861921191215515, 0.3292258679866791, 0.33247506618499756, 0.32724612951278687, 0.32396405935287476, 0.3224131762981415, 0.32492274045944214, 0.3232182562351227, 0.3205130100250244, 0.3194276690483093, 0.3220032751560211, 0.32062554359436035, 0.3199455440044403, 0.32214197516441345], "val_accuracy": [0.5239999890327454, 0.6710000038146973, 0.6949999928474426, 0.7129999995231628, 0.7406666874885559, 0.7616666555404663, 0.7736666798591614, 0.7846666574478149, 0.7906666398048401, 0.7950000166893005, 0.8033333420753479, 0.8083333373069763, 0.8163333535194397, 0.824999988079071, 0.8240000009536743, 0.8289999961853027, 0.8356666564941406, 0.8389999866485596, 0.8356666564941406, 0.846666693687439, 0.846666693687439, 0.8443333506584167, 0.8510000109672546, 0.8556666374206543, 0.8576666712760925, 0.8536666631698608, 0.8526666760444641, 0.8600000143051147, 0.8629999756813049, 0.8613333106040955, 0.8643333315849304, 0.8636666536331177, 0.8629999756813049, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8730000257492065, 0.871666669845581, 0.8756666779518127, 0.8730000257492065, 0.8743333220481873, 0.8763333559036255, 0.8773333430290222, 0.8773333430290222, 0.8759999871253967, 0.8736666440963745, 0.878000020980835, 0.8790000081062317, 0.8776666522026062, 0.8776666522026062, 0.8820000290870667, 0.8796666860580444, 0.878000020980835, 0.8799999952316284, 0.8809999823570251, 0.8833333253860474, 0.8806666731834412, 0.8806666731834412, 0.8856666684150696, 0.8843333125114441, 0.8853333592414856, 0.8826666474342346, 0.8846666812896729, 0.887333333492279, 0.8853333592414856, 0.8863333463668823, 0.8846666812896729, 0.8866666555404663, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 1], [49, 16], [0, 1], [0], [0], [80], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 6, 6, 4, 1, 4, 2, 2], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0, 1], [16, 27, 96, 99, 61, 1]], "fitness": -0.20000000298023224, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 1, 2, 1, 1, 1, 21, 10, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), beta), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [11.19885540008545, 12.359430313110352, 11.994739532470703, 28.12248992919922, 489.803466796875, 541019.625, 4361730.5, 23533562.0, 126445840.0, 213913419776.0, 19297791377408.0, 33185538768896.0, 40922016382976.0, 105790069276672.0, 190539982962688.0], "accuracy": [0.10249637067317963, 0.0956280529499054, 0.1018359512090683, 0.10949676483869553, 0.10936468094587326, 0.11213842034339905, 0.06987188011407852, 0.10038304328918457, 0.09298639744520187, 0.09642054885625839, 0.13155461847782135, 0.1434420794248581, 0.14449875056743622, 0.1368379294872284, 0.12574297189712524], "val_loss": [10.03099250793457, 9.983135223388672, 11.974466323852539, 100.64769744873047, 5721.08544921875, 2117842.25, 10689460.0, 34417688.0, 991719936.0, 791272816640.0, 25679768846336.0, 25655781621760.0, 67011648421888.0, 69779389939712.0, 387796925677568.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.10166666656732559, 0.10199999809265137, 0.020999999716877937, 0.1263333261013031, 0.16333332657814026, 0.0976666659116745, 0.18766666948795319, 0.15933333337306976, 0.1616666615009308, 0.1446666717529297, 0.12600000202655792, 0.12700000405311584]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 7, 8], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 0, 3], [83, 8], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [75, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 6, 4, 2, 1, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [2, 2, 3, 0, 3, 8, 8, 8], [0, 2, 0, 3, 4], [16, 16], [1, 0], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 6, 4, 6, 4, 2, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 34, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 8, 5, 2, 1, 0, 1, 1, 21, 12, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), sigma))))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.square(alpha)))))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 2, 9, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [43], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 44, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 9, 5, 4, 1, 6, 4, 2, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.pow(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3104703426361084, 2.310535192489624, 2.310986042022705, 2.309671640396118, 2.3108174800872803, 2.310452938079834], "accuracy": [0.09166556596755981, 0.08466517180204391, 0.09166556596755981, 0.0874389111995697, 0.09206181764602661, 0.09813763201236725], "val_loss": [2.309082269668579, 2.309082269668579, 2.309082269668579, 2.309082269668579, 2.309082269668579, 2.309082269668579], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]