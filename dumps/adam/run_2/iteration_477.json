[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226853370666504, 1.865287184715271, 1.3886784315109253, 1.0875111818313599, 0.9403291344642639, 0.8377897143363953, 0.7760051488876343, 0.7205173373222351, 0.6910128593444824, 0.655657947063446, 0.6276493072509766, 0.6165291666984558, 0.5942516922950745, 0.5773038864135742, 0.5605528354644775, 0.5496165156364441, 0.5326184630393982, 0.5244207978248596, 0.5002613663673401, 0.4898054897785187, 0.48803964257240295, 0.47319814562797546, 0.4725308120250702, 0.46101444959640503, 0.4436228573322296, 0.4429989755153656, 0.4330945909023285, 0.425525963306427, 0.4158579409122467, 0.39470940828323364, 0.40123969316482544, 0.39967748522758484, 0.3930615782737732, 0.38132932782173157, 0.38151684403419495, 0.37065398693084717, 0.366624653339386, 0.3534086346626282, 0.35198506712913513, 0.3550659418106079, 0.3422483205795288, 0.34163177013397217, 0.341016560792923, 0.33335649967193604, 0.32771623134613037, 0.32350954413414, 0.3169980049133301, 0.313068151473999, 0.3098154067993164, 0.3062075972557068, 0.2964901030063629, 0.2992306053638458, 0.2901092767715454, 0.2851299047470093, 0.28506696224212646, 0.2937166094779968, 0.28172820806503296, 0.27489012479782104, 0.2657068073749542, 0.26826176047325134, 0.26014119386672974, 0.2554948627948761, 0.25316745042800903, 0.2511149048805237, 0.2451370656490326, 0.24167661368846893], "accuracy": [0.2677321434020996, 0.48949941992759705, 0.5620129704475403, 0.6199973821640015, 0.6612072587013245, 0.6935675740242004, 0.7194558382034302, 0.737022876739502, 0.7449478507041931, 0.7600052952766418, 0.7681944370269775, 0.7712323069572449, 0.778761088848114, 0.7862898111343384, 0.7967243194580078, 0.7979130744934082, 0.802800178527832, 0.8070268034934998, 0.8144234418869019, 0.8244617581367493, 0.8236692547798157, 0.8272355198860168, 0.8249900937080383, 0.8338396549224854, 0.8392550349235535, 0.8368775844573975, 0.8413683772087097, 0.8465195894241333, 0.8486329317092896, 0.8569541573524475, 0.8584070801734924, 0.8496896028518677, 0.8573504090309143, 0.859199583530426, 0.8597279191017151, 0.86553955078125, 0.8650112152099609, 0.8710870146751404, 0.869502067565918, 0.8722757697105408, 0.8761062026023865, 0.8776912093162537, 0.8762382864952087, 0.8791441321372986, 0.8815215826034546, 0.8804649114608765, 0.885219931602478, 0.8877294659614563, 0.887201189994812, 0.8854840993881226, 0.8956544995307922, 0.8891823887825012, 0.8939374089241028, 0.8945978283882141, 0.8971073627471924, 0.8898428082466125, 0.8961827754974365, 0.8986923694610596, 0.9014661312103271, 0.897899866104126, 0.9034473896026611, 0.9064852595329285, 0.9054285883903503, 0.9059569239616394, 0.909259021282196, 0.9138818979263306], "val_loss": [2.0379738807678223, 1.510541558265686, 1.0435158014297485, 0.8303458094596863, 0.7422086596488953, 0.680502712726593, 0.6349539756774902, 0.5986922383308411, 0.571138858795166, 0.5547038912773132, 0.5316498279571533, 0.5246272087097168, 0.5025956630706787, 0.493804007768631, 0.48139137029647827, 0.47181636095046997, 0.4600641131401062, 0.4520024359226227, 0.4436899423599243, 0.4384545385837555, 0.43344420194625854, 0.4233669340610504, 0.4222608208656311, 0.4108619689941406, 0.4037690758705139, 0.4039904475212097, 0.39721378684043884, 0.3926580548286438, 0.3840516209602356, 0.3833950459957123, 0.3813234865665436, 0.3812057673931122, 0.3795580565929413, 0.3727829158306122, 0.3671099543571472, 0.36446142196655273, 0.36261507868766785, 0.36152157187461853, 0.35818684101104736, 0.3529798090457916, 0.35567179322242737, 0.34790682792663574, 0.3461233675479889, 0.34749478101730347, 0.3438578248023987, 0.34183576703071594, 0.3381992280483246, 0.33874380588531494, 0.33830299973487854, 0.3344305753707886, 0.33211544156074524, 0.33424198627471924, 0.3312956690788269, 0.33176302909851074, 0.33138370513916016, 0.3267022371292114, 0.325391560792923, 0.32957586646080017, 0.32649561762809753, 0.3223215639591217, 0.3217889368534088, 0.3203074038028717, 0.32484233379364014, 0.31843212246894836, 0.32039135694503784, 0.32036855816841125], "val_accuracy": [0.5366666913032532, 0.6660000085830688, 0.6823333501815796, 0.7093333601951599, 0.7363333106040955, 0.753000020980835, 0.765333354473114, 0.7793333530426025, 0.7910000085830688, 0.7973333597183228, 0.8119999766349792, 0.8083333373069763, 0.8236666917800903, 0.8263333439826965, 0.8303333520889282, 0.8323333263397217, 0.8360000252723694, 0.8416666388511658, 0.8403333425521851, 0.843666672706604, 0.8506666421890259, 0.8460000157356262, 0.847000002861023, 0.8513333201408386, 0.8523333072662354, 0.8546666502952576, 0.856333315372467, 0.8546666502952576, 0.859000027179718, 0.859000027179718, 0.8583333492279053, 0.8573333621025085, 0.8566666841506958, 0.8610000014305115, 0.8659999966621399, 0.8659999966621399, 0.8646666407585144, 0.8676666617393494, 0.8669999837875366, 0.8663333058357239, 0.8669999837875366, 0.8703333139419556, 0.8700000047683716, 0.8693333268165588, 0.8703333139419556, 0.8690000176429749, 0.8713333606719971, 0.8730000257492065, 0.871666669845581, 0.8730000257492065, 0.8769999742507935, 0.874666690826416, 0.8773333430290222, 0.8773333430290222, 0.8766666650772095, 0.8790000081062317, 0.8793333172798157, 0.8723333477973938, 0.8769999742507935, 0.878333330154419, 0.8813333511352539, 0.8809999823570251, 0.878000020980835, 0.8799999952316284, 0.8803333044052124, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 53], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 0, 2, 8, 1, 9], [0, 0, 0, 3, 0, 0, 3, 1, 4, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 3, 2, 1, 1, 1, 22, 13, 9, 6], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))), alpha), grad)", "other_info": {"loss": [1889222144.0, 2116179456.0, 2051477376.0, 2046459648.0, 2130230784.0, 2146132608.0, 2165390848.0, 2241304320.0, 2244796928.0, 3900022784.0, 6397514240.0], "accuracy": [0.10857218503952026, 0.09853387624025345, 0.09734513610601425, 0.10091137140989304, 0.09866596013307571, 0.10513802617788315, 0.10698718577623367, 0.10579843819141388, 0.10738343745470047, 0.10460969805717468, 0.10051512718200684], "val_loss": [1413728384.0, 1414986752.0, 1415232256.0, 1419646848.0, 1418583808.0, 1507714432.0, 1508655360.0, 1529379072.0, 1759983744.0, 5804985856.0, 5793504256.0], "val_accuracy": [0.10300000011920929, 0.10266666859388351, 0.10300000011920929, 0.10233332961797714, 0.10000000149011612, 0.11033333092927933, 0.10899999737739563, 0.0949999988079071, 0.09966666996479034, 0.09566666930913925, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 38, 99, 29, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 8, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), grad)), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 4, 8, 1, 7, 0, 9, 5, 2, 6, 6, 1, 7, 8, 7, 3, 5, 5, 2, 9, 3, 8], [0, 1, 0, 2, 2, 0, 3, 3, 1, 0, 3, 3, 2, 3, 3], [39, 39, 83, 55, 77, 67], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 4, 0, 3, 1, 2, 0], [16, 99, 60, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 26, 15, 6, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(grad, tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), alpha))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.multiply(tf.math.sqrt(grad), grad))), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303391218185425, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3], [97, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 0, 3, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 67, 91, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 6, 4, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.3097681999206543, 2.3099780082702637, 2.309922695159912, 2.3107006549835205, 2.3101377487182617, 2.311387300491333], "accuracy": [0.09681680053472519, 0.08994849026203156, 0.09589222073554993, 0.09140139818191528, 0.08902391046285629, 0.09311848133802414], "val_loss": [2.3086376190185547, 2.3086376190185547, 2.3086376190185547, 2.3086376190185547, 2.3086376190185547, 2.3086376190185547], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]