[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2203328609466553, 1.8627580404281616, 1.3879103660583496, 1.094252586364746, 0.9353088140487671, 0.8428205847740173, 0.7786295413970947, 0.7212619185447693, 0.6846958994865417, 0.656891942024231, 0.6359596252441406, 0.6112194061279297, 0.592021107673645, 0.5725070238113403, 0.5645143389701843, 0.5464820265769958, 0.5325731039047241, 0.5216688513755798, 0.5101510882377625, 0.4975201487541199, 0.490278035402298, 0.48110345005989075, 0.4704114496707916, 0.46597203612327576, 0.4544883072376251, 0.45034611225128174, 0.4371984302997589, 0.43095889687538147, 0.41933581233024597, 0.4088250696659088, 0.4172639548778534, 0.4038674533367157, 0.4044065773487091, 0.3868536055088043, 0.3853375315666199, 0.37956565618515015, 0.37209200859069824, 0.3705381453037262, 0.3650055527687073, 0.36126792430877686, 0.354805588722229, 0.3513815402984619, 0.3526896834373474, 0.34627050161361694, 0.34798499941825867, 0.32983601093292236], "accuracy": [0.2793554365634918, 0.47629112005233765, 0.563730001449585, 0.609430730342865, 0.6584334969520569, 0.7010962963104248, 0.7145687341690063, 0.7333245277404785, 0.746268630027771, 0.7577598690986633, 0.76542067527771, 0.7786290049552917, 0.7837802171707153, 0.7924976944923401, 0.791441023349762, 0.8001585006713867, 0.8012151718139648, 0.8098005652427673, 0.8140271902084351, 0.8187822103500366, 0.8187822103500366, 0.822348415851593, 0.8313300609588623, 0.8261788487434387, 0.8393871188163757, 0.839519202709198, 0.8422929644584656, 0.8459912538528442, 0.847840428352356, 0.8539162874221802, 0.8477083444595337, 0.8508783578872681, 0.8533879518508911, 0.8615770936012268, 0.8595958352088928, 0.8660678863525391, 0.8659358024597168, 0.8640866279602051, 0.8681812286376953, 0.8676528930664062, 0.8685774803161621, 0.8734645247459412, 0.8706908226013184, 0.8813894987106323, 0.8708229064941406, 0.8823140859603882], "val_loss": [2.033627986907959, 1.5013418197631836, 1.0263822078704834, 0.8192285299301147, 0.7221152186393738, 0.6703346967697144, 0.6246464848518372, 0.5832111835479736, 0.5542564392089844, 0.5456740856170654, 0.5174413919448853, 0.5059437155723572, 0.4883270561695099, 0.47756510972976685, 0.46551331877708435, 0.4562179446220398, 0.4510236382484436, 0.4426628053188324, 0.4336315393447876, 0.4278316795825958, 0.4180618226528168, 0.4150131940841675, 0.40518173575401306, 0.40280118584632874, 0.3950543701648712, 0.3858776390552521, 0.3881547152996063, 0.3832228481769562, 0.3767351806163788, 0.3720954954624176, 0.37675684690475464, 0.3645685613155365, 0.3648284375667572, 0.3644002676010132, 0.3672817349433899, 0.35454699397087097, 0.3588446378707886, 0.3522692024707794, 0.3506195545196533, 0.34848856925964355, 0.3469217121601105, 0.3435685932636261, 0.34962916374206543, 0.3511904180049896, 0.34288981556892395, 0.3397552967071533], "val_accuracy": [0.5210000276565552, 0.6543333530426025, 0.6850000023841858, 0.7139999866485596, 0.7413333058357239, 0.7613333463668823, 0.7636666893959045, 0.7883333563804626, 0.7973333597183228, 0.7913333177566528, 0.8106666803359985, 0.8140000104904175, 0.8186666369438171, 0.8253333568572998, 0.8303333520889282, 0.8343333601951599, 0.8339999914169312, 0.8456666469573975, 0.843999981880188, 0.8479999899864197, 0.8529999852180481, 0.8533333539962769, 0.8573333621025085, 0.862666666507721, 0.8663333058357239, 0.8703333139419556, 0.8673333525657654, 0.8706666827201843, 0.8693333268165588, 0.8740000128746033, 0.8766666650772095, 0.8763333559036255, 0.8766666650772095, 0.8769999742507935, 0.8766666650772095, 0.8840000033378601, 0.8796666860580444, 0.8836666941642761, 0.8806666731834412, 0.8826666474342346, 0.8859999775886536, 0.8806666731834412, 0.8803333044052124, 0.8786666393280029, 0.8836666941642761, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 55, 96, 99, 61, 1]], "fitness": -0.8002856969833374, "mapping_values": [1, 7, 4, 3, 2, 10, 7, 3, 3, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.30849027633667, 2.2963109016418457, 2.2700741291046143, 2.2185792922973633, 2.073800563812256, 1.6606634855270386, 1.2523068189620972, 1.0700513124465942, 0.9615267515182495, 0.9396213293075562, 0.8363797068595886, 0.8085552453994751, 0.8020437955856323, 0.7893422842025757, 0.735568642616272, 0.7403139472007751, 0.6911481022834778, 0.7364947199821472, 0.6847978830337524, 0.6704153418540955, 0.6638330817222595, 0.6138137578964233, 0.5983071327209473, 0.5959547162055969, 0.624596118927002, 0.6043375730514526, 0.5660502910614014], "accuracy": [0.09285431355237961, 0.1146479994058609, 0.186104878783226, 0.28741249442100525, 0.3803988993167877, 0.4920089840888977, 0.5669000148773193, 0.6205257177352905, 0.6560559868812561, 0.6493197679519653, 0.6948884129524231, 0.6966054439544678, 0.6968696117401123, 0.7034738063812256, 0.7201162576675415, 0.7166820764541626, 0.7405890822410583, 0.718399167060852, 0.7427024245262146, 0.7464007139205933, 0.7464007139205933, 0.7664773464202881, 0.7740060687065125, 0.7711002230644226, 0.7578919529914856, 0.7660810947418213, 0.7778365015983582], "val_loss": [2.301279067993164, 2.2790205478668213, 2.2392539978027344, 2.1447360515594482, 1.8393443822860718, 1.2140337228775024, 0.9374538660049438, 0.9235815405845642, 0.8057299256324768, 0.7254445552825928, 0.6874895691871643, 0.7006500363349915, 0.8163724541664124, 0.6216010451316833, 0.6728527545928955, 0.6133727431297302, 0.7775105237960815, 0.6160205602645874, 0.5913816690444946, 0.6128999590873718, 0.5652561783790588, 0.5507209300994873, 0.5676683783531189, 0.5886619687080383, 0.5486816167831421, 0.5107957124710083, 0.5403440594673157], "val_accuracy": [0.09833333641290665, 0.18333333730697632, 0.4143333435058594, 0.4736666679382324, 0.6036666631698608, 0.6516666412353516, 0.6736666560173035, 0.6733333468437195, 0.6836666464805603, 0.7333333492279053, 0.7310000061988831, 0.7239999771118164, 0.7003333568572998, 0.7593333125114441, 0.7286666631698608, 0.7639999985694885, 0.706333339214325, 0.7566666603088379, 0.7786666750907898, 0.7419999837875366, 0.7773333191871643, 0.8059999942779541, 0.7839999794960022, 0.781000018119812, 0.7860000133514404, 0.7929999828338623, 0.7733333110809326]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 3, 0, 3], [1, 1, 2, 2], [76, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 8, 6, 8, 2, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 48, 21, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1125995520.0, 21014775808.0, 100107493376.0, 276059553792.0, 600079794176.0, 1093612929024.0], "accuracy": [0.09879804402589798, 0.09694888442754745, 0.09721305221319199, 0.09932637959718704, 0.10051512718200684, 0.09549596905708313], "val_loss": [5094125056.0, 40747745280.0, 137517727744.0, 325958139904.0, 636626075648.0, 1100087033856.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 3, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 3, 3, 6, 2, 9, 4, 1, 4, 2, 8, 4, 3, 7, 7, 2, 3, 6, 3, 5, 7, 1, 3, 0, 4, 3, 5, 6, 3, 6, 6, 0, 9, 9, 6, 5, 3, 3, 7, 2, 9, 0, 2, 6, 2, 8, 9, 5, 4, 1, 9, 6, 5, 0, 4, 6, 7, 3, 0, 4, 0, 5, 6, 9], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 3, 3, 4, 7, 6, 0, 4, 5, 0, 1, 0, 3, 2, 3, 5, 7, 1, 4, 7, 3, 7, 6, 0, 5, 3, 6, 1], [16, 99, 96, 39, 61, 1, 58, 6, 63, 81, 28, 60, 32, 39, 35, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 1, 101, 64, 37, 16], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), grad)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(sigma, alpha), beta))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.add(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.square(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.multiply(grad, grad), grad)), tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), grad), tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), sigma), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), beta), sigma))))))), tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.pow(tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(alpha), grad)))), grad)))), tf.math.negative(sigma)), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.pow(grad, tf.math.negative(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), grad), tf.math.divide_no_nan(sigma, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 9], [0, 1, 0, 2], [39, 39, 47], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [5, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [90, 99, 96, 3, 29, 49, 11]], "fitness": -0.09228571504354477, "mapping_values": [1, 10, 6, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 23, 12, 11, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.309410333633423, 2.3098769187927246, 2.308499336242676, 2.3100595474243164, 2.3099863529205322, 2.3091554641723633], "accuracy": [0.09602430462837219, 0.0878351628780365, 0.09298639744520187, 0.09206181764602661, 0.09377889335155487, 0.09668471664190292], "val_loss": [2.3085405826568604, 2.308537006378174, 2.308535099029541, 2.3085339069366455, 2.308532953262329, 2.308532476425171], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]