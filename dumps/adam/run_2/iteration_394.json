[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8754285573959351, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224275827407837, 1.8690781593322754, 1.3951828479766846, 1.0928083658218384, 0.9452720880508423, 0.832719087600708, 0.7719327807426453, 0.7296327352523804, 0.6815130114555359, 0.6528843641281128, 0.6286609768867493, 0.6070294976234436, 0.5880885720252991, 0.5709679126739502, 0.5564236044883728, 0.5353382229804993, 0.5272123217582703, 0.5158330798149109, 0.5064612627029419, 0.49218544363975525, 0.47564104199409485, 0.4684104323387146, 0.45860350131988525, 0.45706647634506226, 0.44458821415901184, 0.4346112608909607, 0.43049585819244385, 0.41009509563446045, 0.4132250249385834, 0.41005468368530273, 0.39611896872520447, 0.3910692632198334, 0.3919721245765686, 0.38397157192230225, 0.37990039587020874, 0.3773559629917145, 0.3671843409538269, 0.3686547577381134, 0.36411455273628235, 0.35596734285354614, 0.3463257849216461, 0.34398889541625977, 0.33526021242141724, 0.32769250869750977, 0.3257249891757965, 0.3135601580142975, 0.3176308572292328, 0.311887264251709, 0.30415862798690796, 0.30191847681999207, 0.2987566590309143, 0.29574111104011536, 0.2941434979438782, 0.28543296456336975, 0.28241288661956787, 0.28442227840423584, 0.2673691213130951, 0.2740088999271393, 0.2690180540084839, 0.2737399935722351, 0.2574497163295746, 0.2505947947502136, 0.25250014662742615, 0.25092026591300964, 0.24356217682361603, 0.24524380266666412, 0.24078591167926788, 0.2376953810453415, 0.22801075875759125, 0.22609548270702362, 0.22818061709403992, 0.22069129347801208, 0.20754462480545044, 0.2181364893913269, 0.21492059528827667, 0.21021246910095215, 0.20821471512317657, 0.2055811583995819, 0.19956345856189728, 0.19626976549625397, 0.1919938623905182], "accuracy": [0.27816668152809143, 0.49227315187454224, 0.563730001449585, 0.6235635876655579, 0.6653017997741699, 0.6992471218109131, 0.7214370369911194, 0.7347774505615234, 0.7523444890975952, 0.7541936039924622, 0.767930269241333, 0.7820631265640259, 0.789988100528717, 0.7950072884559631, 0.8001585006713867, 0.8049134612083435, 0.8084797263145447, 0.816008448600769, 0.8175934553146362, 0.8235371708869934, 0.8278959393501282, 0.8290846943855286, 0.8383304476737976, 0.833179235458374, 0.8397833704948425, 0.8448025584220886, 0.8479725122451782, 0.8535200357437134, 0.8490291833877563, 0.8508783578872681, 0.8599920868873596, 0.8634262084960938, 0.8590674996376038, 0.8660678863525391, 0.8647470474243164, 0.8647470474243164, 0.8693699836730957, 0.8725399374961853, 0.8739928603172302, 0.8737286925315857, 0.8791441321372986, 0.8772949576377869, 0.8792761564254761, 0.8823140859603882, 0.8812574148178101, 0.8903711438179016, 0.8889182209968567, 0.8837670087814331, 0.8911636471748352, 0.8905032277107239, 0.8923524022102356, 0.893541157245636, 0.8968431949615479, 0.8943336606025696, 0.900409460067749, 0.8967111110687256, 0.9035794734954834, 0.8996169567108154, 0.9030511379241943, 0.8996169567108154, 0.9072777628898621, 0.9083344340324402, 0.9096552729606628, 0.9091269373893738, 0.9126931428909302, 0.9119006991386414, 0.910711944103241, 0.9145423173904419, 0.9183727502822876, 0.9171839952468872, 0.9134856462478638, 0.9214106202125549, 0.9249768853187561, 0.9203540086746216, 0.9220710396766663, 0.9225993752479553, 0.9236560463905334, 0.9245806336402893, 0.9256373047828674, 0.9292035102844238, 0.9310526847839355], "val_loss": [2.0425570011138916, 1.5207477807998657, 1.0504634380340576, 0.8395442962646484, 0.7558345794677734, 0.6962432265281677, 0.6561276912689209, 0.6243109703063965, 0.5961668491363525, 0.5771206021308899, 0.5629559755325317, 0.5476718544960022, 0.5297608375549316, 0.519799530506134, 0.5053470730781555, 0.5010336637496948, 0.4915705621242523, 0.49080225825309753, 0.4791164696216583, 0.4658413827419281, 0.4626391530036926, 0.45491838455200195, 0.4492132067680359, 0.4532184302806854, 0.4438886046409607, 0.43845561146736145, 0.4334966242313385, 0.4275161027908325, 0.4205852150917053, 0.4190165102481842, 0.4174363613128662, 0.4190729856491089, 0.4126730263233185, 0.40258634090423584, 0.4070439040660858, 0.3989892899990082, 0.3997824192047119, 0.39477071166038513, 0.39471378922462463, 0.39168021082878113, 0.38889098167419434, 0.38498392701148987, 0.3818286657333374, 0.38283056020736694, 0.37774690985679626, 0.37923160195350647, 0.3755723834037781, 0.37340593338012695, 0.37243205308914185, 0.36971965432167053, 0.37113258242607117, 0.36559346318244934, 0.36714574694633484, 0.3699501156806946, 0.363631010055542, 0.3615860939025879, 0.36401063203811646, 0.3602050244808197, 0.35930150747299194, 0.36280786991119385, 0.36249399185180664, 0.3613726496696472, 0.35516178607940674, 0.35422754287719727, 0.35458284616470337, 0.3587481379508972, 0.3557634949684143, 0.3640120327472687, 0.3511325716972351, 0.3551754653453827, 0.35309094190597534, 0.35055622458457947, 0.35714301466941833, 0.3531690239906311, 0.35168153047561646, 0.35282251238822937, 0.35136398673057556, 0.34909895062446594, 0.35418686270713806, 0.3492056429386139, 0.35416820645332336], "val_accuracy": [0.5220000147819519, 0.6633333563804626, 0.6773333549499512, 0.7076666951179504, 0.7260000109672546, 0.7390000224113464, 0.7556666731834412, 0.7606666684150696, 0.7726666927337646, 0.784333348274231, 0.7913333177566528, 0.7943333387374878, 0.8113333582878113, 0.8050000071525574, 0.8183333277702332, 0.8146666884422302, 0.8180000185966492, 0.8169999718666077, 0.8243333101272583, 0.8286666870117188, 0.8349999785423279, 0.8376666903495789, 0.831333339214325, 0.8360000252723694, 0.846666693687439, 0.8399999737739563, 0.8463333249092102, 0.8423333168029785, 0.8529999852180481, 0.8539999723434448, 0.8503333330154419, 0.8536666631698608, 0.8510000109672546, 0.8560000061988831, 0.8550000190734863, 0.8550000190734863, 0.8519999980926514, 0.8579999804496765, 0.8546666502952576, 0.8533333539962769, 0.8576666712760925, 0.862333357334137, 0.8619999885559082, 0.8643333315849304, 0.8640000224113464, 0.8603333234786987, 0.8643333315849304, 0.8666666746139526, 0.8683333396911621, 0.8659999966621399, 0.8683333396911621, 0.8686666488647461, 0.8679999709129333, 0.8706666827201843, 0.8709999918937683, 0.8700000047683716, 0.8713333606719971, 0.8733333349227905, 0.8743333220481873, 0.871999979019165, 0.871999979019165, 0.8713333606719971, 0.871999979019165, 0.8776666522026062, 0.8743333220481873, 0.8709999918937683, 0.8733333349227905, 0.8740000128746033, 0.878000020980835, 0.8756666779518127, 0.8763333559036255, 0.8743333220481873, 0.8733333349227905, 0.878333330154419, 0.8786666393280029, 0.8793333172798157, 0.8773333430290222, 0.8773333430290222, 0.8776666522026062, 0.875333309173584, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 77], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 4, 2, 0], [16, 99, 96, 99, 61, 86]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303402900695801, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 4, 2, 2, 1, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [6, 3, 3, 1, 8, 1, 4, 1, 4, 5, 8], [0, 0, 1, 3, 4, 0, 3, 1, 2, 0], [85, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303922414779663, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 8, 5], [0, 3, 0, 3], [16, 65], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 23, 50, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 8, 4, 2, 2, 1, 1, 1, 13, 6, 7, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), grad), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12415797263383865, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 2, 3, 6, 3, 8, 9, 9], [2, 1, 0, 2], [39, 39, 44], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [7], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 2, 3, 1, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 4, 3, 3, 2, 0, 1], [16, 99, 96, 77, 61, 93]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), sigma)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 11, 8, 3, 3, 6, 3, 3, 2, 2, 1, 1, 1, 22, 11, 11, 5], "tree_depth": 18}]