[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223548412322998, 1.8680698871612549, 1.4011391401290894, 1.1075546741485596, 0.9481746554374695, 0.8513335585594177, 0.78058922290802, 0.7409090399742126, 0.7026236653327942, 0.6664222478866577, 0.6485580205917358, 0.6197550296783447, 0.6112886667251587, 0.5901209712028503, 0.5739980936050415, 0.5596075654029846, 0.5470370650291443, 0.5385435223579407, 0.5238093137741089, 0.5113366842269897, 0.49527204036712646, 0.48276230692863464, 0.483358770608902, 0.46986624598503113, 0.4646031856536865, 0.46143269538879395, 0.44402217864990234, 0.4415302574634552, 0.43856897950172424, 0.42571714520454407, 0.42092061042785645, 0.40877291560173035, 0.4085714817047119, 0.3975837230682373, 0.395944744348526, 0.39482831954956055, 0.38702666759490967, 0.3760533630847931, 0.3767392039299011, 0.3705829977989197, 0.36391884088516235, 0.3527805507183075, 0.35466939210891724, 0.3510855436325073, 0.3424813449382782, 0.34156376123428345, 0.328529417514801, 0.33165180683135986, 0.32988908886909485, 0.31755170226097107, 0.3133592903614044, 0.3152139484882355, 0.30331099033355713, 0.3048137426376343, 0.3046071529388428, 0.3018605411052704, 0.29454246163368225], "accuracy": [0.27063795924186707, 0.5033681392669678, 0.5542200207710266, 0.6122044920921326, 0.6605468392372131, 0.696209192276001, 0.7140403985977173, 0.7260599732398987, 0.7409853339195251, 0.759609043598175, 0.7597411274909973, 0.7685906887054443, 0.7726852297782898, 0.7853652238845825, 0.7872143983840942, 0.7961959838867188, 0.800818920135498, 0.8029322624206543, 0.8105930685997009, 0.8133667707443237, 0.8181217908859253, 0.8245938420295715, 0.8219521641731262, 0.8333113193511963, 0.8322546482086182, 0.8343679904937744, 0.8413683772087097, 0.8432175517082214, 0.8444063067436218, 0.8473120927810669, 0.8488970994949341, 0.8553691506385803, 0.854708731174469, 0.8595958352088928, 0.859199583530426, 0.8582749962806702, 0.8651432991027832, 0.8689737319946289, 0.8647470474243164, 0.8684453964233398, 0.869502067565918, 0.8716153502464294, 0.8776912093162537, 0.8730682730674744, 0.8755778670310974, 0.8791441321372986, 0.8862766027450562, 0.878351628780365, 0.8809932470321655, 0.8902390599250793, 0.8878615498542786, 0.8873332738876343, 0.8912957310676575, 0.8902390599250793, 0.8910315632820129, 0.893541157245636, 0.8949940800666809], "val_loss": [2.0349977016448975, 1.5010182857513428, 1.0290250778198242, 0.8238246440887451, 0.7391377687454224, 0.6725403070449829, 0.6265605688095093, 0.598868191242218, 0.5694462656974792, 0.5444573760032654, 0.53022301197052, 0.5147504806518555, 0.5013952851295471, 0.49201154708862305, 0.47288069128990173, 0.47130608558654785, 0.4567543566226959, 0.45523324608802795, 0.4423495829105377, 0.4379698932170868, 0.42858967185020447, 0.4197395145893097, 0.4211997389793396, 0.4093262553215027, 0.40716752409935, 0.4001079201698303, 0.3957863748073578, 0.390674352645874, 0.39394643902778625, 0.38715022802352905, 0.3827609717845917, 0.3790414333343506, 0.37565359473228455, 0.37220919132232666, 0.37060990929603577, 0.36780786514282227, 0.36262258887290955, 0.36352571845054626, 0.3576204478740692, 0.35786139965057373, 0.35257747769355774, 0.35232022404670715, 0.3493371605873108, 0.348869264125824, 0.34712445735931396, 0.3436132073402405, 0.34623250365257263, 0.34142160415649414, 0.3405429422855377, 0.344698965549469, 0.3383486568927765, 0.333583265542984, 0.3358305096626282, 0.3366754651069641, 0.33495891094207764, 0.3314608037471771, 0.33104199171066284], "val_accuracy": [0.5803333520889282, 0.6576666831970215, 0.690666675567627, 0.7143333554267883, 0.737333357334137, 0.7633333206176758, 0.777999997138977, 0.7753333449363708, 0.8016666769981384, 0.8069999814033508, 0.8043333292007446, 0.8203333616256714, 0.8306666612625122, 0.8256666660308838, 0.8336666822433472, 0.8339999914169312, 0.843666672706604, 0.8339999914169312, 0.8446666598320007, 0.8493333458900452, 0.856333315372467, 0.8500000238418579, 0.8516666889190674, 0.8543333411216736, 0.8536666631698608, 0.8579999804496765, 0.859333336353302, 0.8643333315849304, 0.8610000014305115, 0.8586666584014893, 0.8633333444595337, 0.8640000224113464, 0.8676666617393494, 0.8676666617393494, 0.8676666617393494, 0.8679999709129333, 0.8730000257492065, 0.8696666955947876, 0.8726666569709778, 0.8733333349227905, 0.875, 0.8759999871253967, 0.8736666440963745, 0.8740000128746033, 0.8763333559036255, 0.8786666393280029, 0.875, 0.8766666650772095, 0.8790000081062317, 0.8730000257492065, 0.8796666860580444, 0.8820000290870667, 0.8786666393280029, 0.8799999952316284, 0.8793333172798157, 0.8796666860580444, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 6, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 2, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 59, 61, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7.384900093078613, 58.768463134765625, 203.582275390625, 495.5464782714844, 998.9114379882812, 1765.2716064453125], "accuracy": [0.10091137140989304, 0.09813763201236725, 0.1022322028875351, 0.1026284471154213, 0.09906221181154251, 0.09998679161071777], "val_loss": [20.566158294677734, 95.98477935791016, 265.5211181640625, 577.9501953125, 1081.74072265625, 1825.80029296875], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 31], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 0, 3, 5], [3, 3, 3, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 2, 6, 8, 9], [0, 0, 0, 3, 0, 0, 3, 3, 2, 4, 7], [16, 75, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 0, 2, 1, 1, 0, 25, 14, 11, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.add(tf.math.divide_no_nan(sigma, beta), grad)), grad), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 1], [0, 2, 0, 3, 1, 4], [16, 55], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 3, 2, 1, 4, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08942857384681702, "mapping_values": [1, 9, 5, 4, 1, 13, 7, 6, 2, 2, 1, 1, 0, 4, 2, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310495138168335, 2.310486316680908, 2.310577630996704, 2.30953049659729, 2.3102617263793945, 2.3094401359558105], "accuracy": [0.09219389408826828, 0.08955223858356476, 0.09034473448991776, 0.09391097724437714, 0.09153348207473755, 0.0948355570435524], "val_loss": [2.3087258338928223, 2.3086178302764893, 2.308499336242676, 2.3083744049072266, 2.3082478046417236, 2.308117628097534], "val_accuracy": [0.09200000017881393, 0.09099999815225601, 0.08933333307504654, 0.08766666799783707, 0.08366666734218597, 0.08366666734218597]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 3, 3, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [6], [0, 2], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 4, 96, 27, 49, 1]], "fitness": -0.08857142925262451, "mapping_values": [1, 5, 2, 3, 2, 10, 6, 4, 2, 3, 1, 2, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3106210231781006, 2.309720754623413, 2.3095364570617676, 2.309230327606201, 2.311147451400757, 2.311440944671631], "accuracy": [0.09509972482919693, 0.09866596013307571, 0.09259014576673508, 0.0952318087220192, 0.08730682730674744, 0.09285431355237961], "val_loss": [2.308960199356079, 2.308960199356079, 2.308959722518921, 2.3089592456817627, 2.3089590072631836, 2.3089587688446045], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]