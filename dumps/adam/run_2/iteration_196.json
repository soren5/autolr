[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2254185676574707, 1.867496371269226, 1.3939286470413208, 1.075742244720459, 0.92762690782547, 0.842509925365448, 0.7700946927070618, 0.726783275604248, 0.6864787340164185, 0.669318675994873, 0.6392647624015808, 0.6127266883850098, 0.5919713973999023, 0.5891600251197815, 0.5641294717788696, 0.54057377576828, 0.5347325801849365, 0.514805793762207, 0.5052743554115295, 0.4923231899738312, 0.48386508226394653, 0.4834151268005371, 0.4688321650028229, 0.4627673923969269, 0.45427602529525757, 0.4476650655269623, 0.4361018240451813, 0.4260111153125763, 0.4267074167728424, 0.41557395458221436, 0.40956902503967285, 0.40698927640914917, 0.4027997851371765, 0.3955758810043335, 0.3915490210056305, 0.3789817988872528, 0.3861314058303833, 0.36587458848953247, 0.3657251298427582, 0.359895259141922, 0.355085551738739, 0.3525402843952179, 0.34621185064315796, 0.33673131465911865, 0.3321630358695984, 0.32770228385925293], "accuracy": [0.2769779562950134, 0.49214106798171997, 0.5650508403778076, 0.6256769299507141, 0.6691322326660156, 0.7005679607391357, 0.7228899598121643, 0.7359662055969238, 0.7481178045272827, 0.7526086568832397, 0.7676661014556885, 0.778761088848114, 0.7832518815994263, 0.7869502305984497, 0.7967243194580078, 0.8025360107421875, 0.8047813773155212, 0.811649739742279, 0.8164047002792358, 0.8241975903511047, 0.8249900937080383, 0.8302733898162842, 0.834632158279419, 0.8339717388153076, 0.8397833704948425, 0.8438779711723328, 0.8430854678153992, 0.846387505531311, 0.8512746095657349, 0.857218325138092, 0.8562937378883362, 0.8565579056739807, 0.856689989566803, 0.8599920868873596, 0.8618412613868713, 0.8651432991027832, 0.8622375130653381, 0.8665962219238281, 0.8706908226013184, 0.8721436858177185, 0.869502067565918, 0.8698983192443848, 0.8761062026023865, 0.8787478804588318, 0.8821820020675659, 0.8854840993881226], "val_loss": [2.0425074100494385, 1.5247647762298584, 1.0556923151016235, 0.8425934910774231, 0.7563233971595764, 0.6983150839805603, 0.6529701948165894, 0.6160812973976135, 0.5916393399238586, 0.5674172639846802, 0.5533460974693298, 0.5307015776634216, 0.5166329145431519, 0.5083162784576416, 0.49030575156211853, 0.48155805468559265, 0.4752589464187622, 0.4662528336048126, 0.45263248682022095, 0.44679200649261475, 0.44013574719429016, 0.4365307688713074, 0.4281909465789795, 0.424825519323349, 0.41831403970718384, 0.41359764337539673, 0.4120762050151825, 0.4121898114681244, 0.3992435038089752, 0.399362176656723, 0.393210232257843, 0.39480122923851013, 0.3959519565105438, 0.38799911737442017, 0.38401785492897034, 0.3838482201099396, 0.37968558073043823, 0.3768036365509033, 0.375735342502594, 0.37551411986351013, 0.3680351674556732, 0.37054920196533203, 0.3638297915458679, 0.3646373748779297, 0.3668188750743866, 0.359764963388443], "val_accuracy": [0.5293333530426025, 0.6470000147819519, 0.6756666898727417, 0.6993333101272583, 0.7279999852180481, 0.7463333606719971, 0.7606666684150696, 0.768666684627533, 0.7820000052452087, 0.7866666913032532, 0.7929999828338623, 0.8009999990463257, 0.8169999718666077, 0.8213333487510681, 0.8236666917800903, 0.8263333439826965, 0.8266666531562805, 0.8349999785423279, 0.8393333554267883, 0.8379999995231628, 0.8433333039283752, 0.8423333168029785, 0.8496666550636292, 0.846666693687439, 0.8486666679382324, 0.8506666421890259, 0.8473333120346069, 0.8500000238418579, 0.859333336353302, 0.8553333282470703, 0.8543333411216736, 0.8573333621025085, 0.8556666374206543, 0.8600000143051147, 0.859666645526886, 0.8640000224113464, 0.8679999709129333, 0.8693333268165588, 0.8673333525657654, 0.8683333396911621, 0.871666669845581, 0.862666666507721, 0.8636666536331177, 0.8696666955947876, 0.8690000176429749, 0.8706666827201843]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 6, 0, 3, 9], [0, 1, 0, 2], [39, 13], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 1, 5], [1, 2, 0, 3], [16, 63], [0, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7977142930030823, "mapping_values": [1, 8, 6, 2, 2, 7, 4, 3, 1, 2, 1, 1, 0, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3076977729797363, 2.2958319187164307, 2.2716996669769287, 2.241856336593628, 2.198662519454956, 2.1223390102386475, 1.9922175407409668, 1.7719361782073975, 1.5264250040054321, 1.3304497003555298, 1.337296485900879, 1.2938213348388672, 1.2129347324371338, 1.0366922616958618, 0.8962697982788086, 0.8918137550354004, 0.9105085134506226, 0.8709163069725037, 0.8323213458061218, 0.8238909840583801, 0.8149445652961731, 0.8085829019546509, 0.786232590675354, 0.775010347366333, 0.74583899974823, 0.7378278374671936, 0.7212596535682678, 0.7215826511383057, 0.7084605693817139, 0.706924319267273, 0.6994349360466003, 0.6806187629699707, 0.6677677035331726, 0.6536939740180969, 0.6546249985694885, 0.6520545482635498, 0.6393741965293884, 0.6255446672439575, 0.6259475946426392, 0.6315367221832275, 0.6070519685745239, 0.6001819372177124, 0.6014278531074524, 0.6003256440162659], "accuracy": [0.09325055778026581, 0.11676132678985596, 0.18663319945335388, 0.2685246467590332, 0.3357548415660858, 0.3815876245498657, 0.4189670979976654, 0.443798691034317, 0.4756307005882263, 0.5263505578041077, 0.5462950468063354, 0.5849953889846802, 0.6169594526290894, 0.6518293619155884, 0.6647734642028809, 0.6696605682373047, 0.6729626059532166, 0.6752080321311951, 0.6951525807380676, 0.6996433734893799, 0.709021270275116, 0.7017567157745361, 0.7185312509536743, 0.7176066637039185, 0.7141724824905396, 0.7150970697402954, 0.7209087014198303, 0.7248712182044983, 0.7263241410255432, 0.7300224304199219, 0.733588695526123, 0.7366266250610352, 0.7441553473472595, 0.7498348951339722, 0.7483819723129272, 0.750231146812439, 0.7576277852058411, 0.7569673657417297, 0.7609298825263977, 0.7594769597053528, 0.7711002230644226, 0.7741381525993347, 0.7711002230644226, 0.7691190242767334], "val_loss": [2.3004138469696045, 2.280104875564575, 2.2514548301696777, 2.2121644020080566, 2.151747703552246, 2.046279191970825, 1.8531584739685059, 1.5422433614730835, 1.2022650241851807, 1.0172913074493408, 0.9650320410728455, 0.9284732937812805, 0.8651118278503418, 0.7935530543327332, 0.763278067111969, 0.8059982061386108, 0.7909156680107117, 0.7300551533699036, 0.7004697322845459, 0.6962224245071411, 0.7018815279006958, 0.7056919932365417, 0.694595217704773, 0.6748557090759277, 0.6538172364234924, 0.6437995433807373, 0.6340276002883911, 0.6272186040878296, 0.6176478862762451, 0.6057434678077698, 0.5979994535446167, 0.5907943248748779, 0.5795589685440063, 0.5711801052093506, 0.5669198036193848, 0.5598180890083313, 0.5549452900886536, 0.5507892370223999, 0.5449055433273315, 0.5406240224838257, 0.5359472036361694, 0.5308400988578796, 0.5305511355400085, 0.528623104095459], "val_accuracy": [0.10000000149011612, 0.19200000166893005, 0.40433332324028015, 0.4386666715145111, 0.4436666667461395, 0.45233333110809326, 0.5040000081062317, 0.5773333311080933, 0.628000020980835, 0.6430000066757202, 0.6570000052452087, 0.6786666512489319, 0.6886666417121887, 0.7026666402816772, 0.7110000252723694, 0.7146666646003723, 0.7196666598320007, 0.7239999771118164, 0.7316666841506958, 0.7396666407585144, 0.7366666793823242, 0.7353333234786987, 0.7423333525657654, 0.746666669845581, 0.7480000257492065, 0.7463333606719971, 0.7583333253860474, 0.7606666684150696, 0.7596666812896729, 0.7603333592414856, 0.7576666474342346, 0.7643333077430725, 0.7689999938011169, 0.7673333287239075, 0.7703333497047424, 0.7723333239555359, 0.7749999761581421, 0.7846666574478149, 0.7853333353996277, 0.7836666703224182, 0.7846666574478149, 0.7829999923706055, 0.781000018119812, 0.7833333611488342]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [80, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 6, 8, 8, 4, 1, 5, 5, 8, 5, 8, 1, 2, 7], [0, 0, 0, 3, 2, 0, 3, 3, 2, 0, 2, 7, 0, 3, 7], [16, 99, 96, 93, 61, 1, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 10, 6, 4, 2, 1, 0, 1, 1, 40, 25, 15, 7], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(beta, tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.divide_no_nan(sigma, sigma), tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.square(tf.math.sqrt(beta))), tf.math.square(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(beta, tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))))), tf.math.add(sigma, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 5, 3, 0, 3, 5], [0, 2, 0, 3], [43, 11], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 4, 4, 3, 7, 6, 5, 0, 2, 2, 4, 2, 5, 3], [0, 3, 5, 6, 0, 5, 3, 1, 5, 4, 4], [99, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 4, 1, 2, 0], [16, 99, 53, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 1, 0, 1, 1, 25, 14, 11, 2, 16, 8, 8, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(sigma, tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), tf.math.negative(tf.math.add(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.add(tf.math.square(grad), sigma), alpha), grad))), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(tf.math.pow(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7, 3, 5], [0, 1, 0, 2, 1, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 1, 1], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 11, 6, 5, 2, 2, 1, 1, 1, 16, 8, 8, 6], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), alpha))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.303659677505493, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]