[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8742856979370117, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219486236572266, 1.864558458328247, 1.3880044221878052, 1.0952141284942627, 0.9498565793037415, 0.8420847058296204, 0.7794898152351379, 0.7384892702102661, 0.7073806524276733, 0.6739045977592468, 0.6454405188560486, 0.6270478367805481, 0.6087595224380493, 0.579901933670044, 0.569416880607605, 0.5546358823776245, 0.5493543744087219, 0.5355986952781677, 0.5168867111206055, 0.5160964727401733, 0.5026349425315857, 0.48385876417160034, 0.48250970244407654, 0.47429409623146057, 0.4622645974159241, 0.45590415596961975, 0.44539588689804077, 0.43964651226997375, 0.43122613430023193, 0.42776599526405334, 0.42391344904899597, 0.41592204570770264, 0.41251158714294434, 0.40447041392326355, 0.39730891585350037, 0.38849905133247375, 0.38567039370536804, 0.3792943060398102, 0.38197076320648193, 0.36999207735061646, 0.36092787981033325, 0.36033517122268677, 0.35494256019592285, 0.34954556822776794, 0.35010337829589844, 0.33933591842651367, 0.3319460451602936, 0.3344106674194336, 0.3241378962993622, 0.3175522983074188, 0.3152807354927063, 0.3160351514816284, 0.30111682415008545, 0.3082718551158905, 0.29940828680992126, 0.29520371556282043, 0.30111563205718994, 0.28827762603759766, 0.2814379334449768, 0.2840755581855774, 0.27756306529045105, 0.27369776368141174, 0.2610747218132019, 0.2660719156265259, 0.26339563727378845, 0.2556036710739136, 0.246970996260643, 0.25561633706092834, 0.24921369552612305, 0.23709872364997864, 0.23878365755081177, 0.23384270071983337, 0.22638384997844696, 0.2297978550195694, 0.21639500558376312, 0.21982333064079285, 0.21333348751068115, 0.21471132338047028, 0.20955568552017212, 0.21579046547412872, 0.2083858698606491], "accuracy": [0.27578920125961304, 0.4839519262313843, 0.5742966532707214, 0.6104874014854431, 0.6606789231300354, 0.6935675740242004, 0.7174745798110962, 0.7318716049194336, 0.7411174178123474, 0.7543256878852844, 0.7613261342048645, 0.7675340175628662, 0.7798177003860474, 0.7862898111343384, 0.7878747582435608, 0.7960638999938965, 0.800290584564209, 0.8042530417442322, 0.8123101592063904, 0.8109893202781677, 0.816008448600769, 0.8230088353157043, 0.8239334225654602, 0.8348963260650635, 0.8360850811004639, 0.8347642421722412, 0.8383304476737976, 0.8409721255302429, 0.8465195894241333, 0.8455950617790222, 0.8437458872795105, 0.8470479249954224, 0.8496896028518677, 0.8525954484939575, 0.856689989566803, 0.8609166741371155, 0.8589354157447815, 0.8614450097084045, 0.8623695969581604, 0.8665962219238281, 0.8729361891746521, 0.8685774803161621, 0.8708229064941406, 0.8693699836730957, 0.8737286925315857, 0.8771628737449646, 0.8808611631393433, 0.8766345381736755, 0.8835028409957886, 0.8825782537460327, 0.8828424215316772, 0.8858803510665894, 0.8945978283882141, 0.8836349248886108, 0.8886540532112122, 0.8897107243537903, 0.8936732411384583, 0.8939374089241028, 0.8967111110687256, 0.8973715305328369, 0.8997490406036377, 0.9022586345672607, 0.9058248400688171, 0.9035794734954834, 0.9038436412811279, 0.9049002528190613, 0.9078060984611511, 0.9072777628898621, 0.9108440279960632, 0.9138818979263306, 0.9119006991386414, 0.9162594079971313, 0.9194294214248657, 0.9137498140335083, 0.9215427041053772, 0.9173160791397095, 0.9211464524269104, 0.9202219247817993, 0.9208822846412659, 0.9206181764602661, 0.9252410531044006], "val_loss": [2.039196014404297, 1.5142918825149536, 1.046053171157837, 0.8368827104568481, 0.7545260190963745, 0.6928821802139282, 0.6458936929702759, 0.6132770776748657, 0.5872079133987427, 0.5672251582145691, 0.5395931601524353, 0.5281874537467957, 0.5131068229675293, 0.5023250579833984, 0.4866994619369507, 0.4818316102027893, 0.4728136360645294, 0.4590269923210144, 0.45005810260772705, 0.4478691816329956, 0.43326130509376526, 0.4277251064777374, 0.4261525869369507, 0.4182819128036499, 0.41565799713134766, 0.41256389021873474, 0.40237563848495483, 0.397317498922348, 0.39427945017814636, 0.38994282484054565, 0.39246997237205505, 0.38280993700027466, 0.38645631074905396, 0.377219557762146, 0.375295490026474, 0.37129613757133484, 0.36982738971710205, 0.37255868315696716, 0.365884393453598, 0.36216503381729126, 0.36292529106140137, 0.3585350215435028, 0.357271283864975, 0.3602689206600189, 0.3497951924800873, 0.347523033618927, 0.3460474908351898, 0.3491152226924896, 0.3460831642150879, 0.3413008749485016, 0.3372505009174347, 0.3402228057384491, 0.3497011363506317, 0.33261874318122864, 0.34277090430259705, 0.3336433172225952, 0.3319787383079529, 0.3296913206577301, 0.33263224363327026, 0.3304321765899658, 0.3293735086917877, 0.3262447416782379, 0.3255173861980438, 0.3272877335548401, 0.32905805110931396, 0.324441522359848, 0.3272411823272705, 0.3251321613788605, 0.3223689794540405, 0.32013052701950073, 0.318431556224823, 0.31881749629974365, 0.3200048506259918, 0.32359007000923157, 0.32097628712654114, 0.32346826791763306, 0.3205936551094055, 0.31869786977767944, 0.31604036688804626, 0.3163122236728668, 0.3181876242160797], "val_accuracy": [0.5533333420753479, 0.6570000052452087, 0.6803333163261414, 0.7070000171661377, 0.7266666889190674, 0.7436666488647461, 0.7549999952316284, 0.7716666460037231, 0.7850000262260437, 0.7956666946411133, 0.8080000281333923, 0.8100000023841858, 0.8209999799728394, 0.8169999718666077, 0.8276666402816772, 0.8240000009536743, 0.8339999914169312, 0.8416666388511658, 0.8420000076293945, 0.8389999866485596, 0.8450000286102295, 0.8463333249092102, 0.8460000157356262, 0.8506666421890259, 0.8513333201408386, 0.8573333621025085, 0.8536666631698608, 0.8529999852180481, 0.8576666712760925, 0.8586666584014893, 0.859000027179718, 0.862333357334137, 0.8610000014305115, 0.8656666874885559, 0.8656666874885559, 0.8636666536331177, 0.8659999966621399, 0.8669999837875366, 0.871999979019165, 0.8696666955947876, 0.8690000176429749, 0.8723333477973938, 0.875333309173584, 0.8730000257492065, 0.8763333559036255, 0.875333309173584, 0.874666690826416, 0.875, 0.8766666650772095, 0.8776666522026062, 0.8806666731834412, 0.878333330154419, 0.8740000128746033, 0.8796666860580444, 0.878000020980835, 0.8809999823570251, 0.8806666731834412, 0.8790000081062317, 0.8823333382606506, 0.8830000162124634, 0.8833333253860474, 0.8796666860580444, 0.8849999904632568, 0.8806666731834412, 0.8843333125114441, 0.8849999904632568, 0.8853333592414856, 0.8866666555404663, 0.8863333463668823, 0.8830000162124634, 0.887333333492279, 0.8863333463668823, 0.8856666684150696, 0.8856666684150696, 0.8863333463668823, 0.8886666893959045, 0.8870000243186951, 0.8863333463668823, 0.8886666893959045, 0.8856666684150696, 0.8833333253860474]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 9, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 0, 0, 3, 4, 0, 4, 1, 2, 4], [16, 46, 96, 99, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))))), grad), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [53, 96], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 95, 61, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3038341999053955, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 2, 2, 3, 5, 4], [0, 2, 0, 3, 5, 2], [69, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [74, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 7, 6, 2, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.pow(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]