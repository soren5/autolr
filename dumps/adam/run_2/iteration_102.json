[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2243571281433105, 1.866790533065796, 1.3915393352508545, 1.0844327211380005, 0.9367959499359131, 0.8400959968566895, 0.7687581181526184, 0.718421220779419, 0.6816734075546265, 0.6574118733406067, 0.6302586793899536, 0.6108964085578918, 0.5859739184379578, 0.5793479681015015, 0.5531224608421326, 0.541061282157898, 0.5267911553382874, 0.5152329206466675, 0.5089017152786255, 0.489433616399765, 0.48755383491516113, 0.4734697639942169, 0.46319594979286194, 0.45859989523887634, 0.456608384847641, 0.44440698623657227, 0.4356621205806732, 0.4294407069683075, 0.4138639271259308, 0.4129776060581207, 0.3973538279533386, 0.3979519009590149, 0.388603538274765, 0.3923649489879608, 0.3782716393470764, 0.3686680197715759, 0.37054407596588135, 0.3680356740951538, 0.36265015602111816, 0.3583882451057434, 0.3496616780757904, 0.34331628680229187, 0.3327431380748749, 0.33847248554229736, 0.3344593048095703, 0.32433369755744934, 0.32289186120033264, 0.3210488259792328, 0.31578683853149414, 0.3061741292476654, 0.30217504501342773, 0.3022919297218323, 0.29937034845352173, 0.2898056209087372, 0.2850882112979889, 0.28060463070869446, 0.27659159898757935, 0.2744719386100769, 0.26794856786727905], "accuracy": [0.2583542466163635, 0.4935939908027649, 0.5645225048065186, 0.6254127621650696, 0.6656980514526367, 0.6988508701324463, 0.7206445932388306, 0.7421740889549255, 0.7541936039924622, 0.759080708026886, 0.7696473598480225, 0.7774402499198914, 0.7861577272415161, 0.7884030938148499, 0.8000264167785645, 0.802800178527832, 0.8133667707443237, 0.8096684813499451, 0.81548011302948, 0.8247259259223938, 0.826310932636261, 0.8251221776008606, 0.8343679904937744, 0.832650899887085, 0.8333113193511963, 0.8359529972076416, 0.8436138033866882, 0.8442742228507996, 0.8491612672805786, 0.8516708612442017, 0.8581429123878479, 0.8537842035293579, 0.8617091774940491, 0.8562937378883362, 0.8648791313171387, 0.8663320541381836, 0.8652753829956055, 0.8663320541381836, 0.869502067565918, 0.8659358024597168, 0.8722757697105408, 0.8745211958885193, 0.8762382864952087, 0.8812574148178101, 0.8805969953536987, 0.8811253309249878, 0.8828424215316772, 0.880729079246521, 0.8853520154953003, 0.8885219693183899, 0.8882578015327454, 0.8902390599250793, 0.8911636471748352, 0.8922203183174133, 0.8972394466400146, 0.8980319499969482, 0.9019944667816162, 0.9041078090667725, 0.9058248400688171], "val_loss": [2.0417723655700684, 1.5219919681549072, 1.0541648864746094, 0.8488240838050842, 0.7602027058601379, 0.7051990628242493, 0.6583418250083923, 0.6248670220375061, 0.6035367846488953, 0.5750238299369812, 0.5556198954582214, 0.5432429909706116, 0.5286623239517212, 0.5113356113433838, 0.498039186000824, 0.5002103447914124, 0.4761489927768707, 0.4721124768257141, 0.4673168659210205, 0.45407140254974365, 0.4450828731060028, 0.4390721023082733, 0.44120553135871887, 0.431875079870224, 0.4298470914363861, 0.4221721291542053, 0.41713160276412964, 0.4085840582847595, 0.40649861097335815, 0.40486687421798706, 0.40013623237609863, 0.39725133776664734, 0.38905656337738037, 0.38689225912094116, 0.3882567882537842, 0.38008326292037964, 0.385255366563797, 0.375230073928833, 0.3709368407726288, 0.3732243776321411, 0.3660571277141571, 0.36847344040870667, 0.3692329227924347, 0.36304330825805664, 0.36186426877975464, 0.3632418215274811, 0.3562667965888977, 0.3580104112625122, 0.35685083270072937, 0.35145360231399536, 0.3489890992641449, 0.3483746349811554, 0.3473187983036041, 0.34751245379447937, 0.35270360112190247, 0.34144115447998047, 0.3466331362724304, 0.3428198993206024, 0.34382370114326477], "val_accuracy": [0.5260000228881836, 0.6443333625793457, 0.6690000295639038, 0.6980000138282776, 0.7233333587646484, 0.7403333187103271, 0.7480000257492065, 0.765333354473114, 0.768666684627533, 0.7856666445732117, 0.7906666398048401, 0.7993333339691162, 0.7996666431427002, 0.8106666803359985, 0.8146666884422302, 0.8176666498184204, 0.8266666531562805, 0.8286666870117188, 0.831333339214325, 0.8360000252723694, 0.8423333168029785, 0.8463333249092102, 0.8423333168029785, 0.8443333506584167, 0.8456666469573975, 0.8536666631698608, 0.8543333411216736, 0.8576666712760925, 0.8546666502952576, 0.8629999756813049, 0.8600000143051147, 0.8610000014305115, 0.862333357334137, 0.8656666874885559, 0.8653333187103271, 0.8656666874885559, 0.8603333234786987, 0.8676666617393494, 0.8650000095367432, 0.8679999709129333, 0.8656666874885559, 0.8673333525657654, 0.8636666536331177, 0.8693333268165588, 0.8723333477973938, 0.8700000047683716, 0.8703333139419556, 0.8696666955947876, 0.8730000257492065, 0.8763333559036255, 0.871999979019165, 0.871666669845581, 0.874666690826416, 0.8790000081062317, 0.8733333349227905, 0.8740000128746033, 0.878333330154419, 0.8766666650772095, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 1, 0, 3, 0], [16, 16, 17], [1, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [4, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7451428771018982, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 3, 1, 0, 1, 1, 13, 7, 6, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad)), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3077569007873535, 2.295450448989868, 2.271803379058838, 2.226522207260132, 2.1163172721862793, 1.7966443300247192, 1.3468083143234253, 1.1317811012268066, 1.0045071840286255, 0.9451715350151062, 0.89003986120224, 0.8360582590103149, 0.8220887184143066, 0.7757871747016907, 0.7462583780288696, 0.7577299475669861], "accuracy": [0.09787346422672272, 0.1208558976650238, 0.18438778817653656, 0.2716946303844452, 0.36785101890563965, 0.45344075560569763, 0.5460308790206909, 0.6042794585227966, 0.6415268778800964, 0.6662263870239258, 0.6720380187034607, 0.6927750706672668, 0.7000396251678467, 0.7125874757766724, 0.7214370369911194, 0.7206445932388306], "val_loss": [2.3005850315093994, 2.2793848514556885, 2.2437565326690674, 2.166707754135132, 1.9414560794830322, 1.3796979188919067, 1.0100997686386108, 0.9339710474014282, 0.7959764003753662, 0.7402639985084534, 0.6909371614456177, 0.7123476266860962, 0.6766901612281799, 0.6880123019218445, 0.6967036128044128, 0.6811935901641846], "val_accuracy": [0.0989999994635582, 0.18199999630451202, 0.38866665959358215, 0.44966667890548706, 0.5486666560173035, 0.6323333382606506, 0.6596666574478149, 0.6736666560173035, 0.7043333053588867, 0.7363333106040955, 0.7486666440963745, 0.7233333587646484, 0.7329999804496765, 0.7400000095367432, 0.7233333587646484, 0.7243333458900452]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 6, 3, 0, 3, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 9, 2, 5, 7, 6, 6, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 5, 5, 2, 2, 1, 1, 1, 27, 15, 12, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.divide_no_nan(sigma, alpha), tf.math.divide_no_nan(beta, sigma))), tf.math.pow(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 1, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 1, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 1], [16, 99, 96, 99, 61, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 27], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 9, 5, 4, 1, 2, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3092005252838135, 2.309354305267334, 2.310555934906006, 2.310622453689575, 2.3097341060638428, 2.3094661235809326], "accuracy": [0.09206181764602661, 0.0936468094587326, 0.0936468094587326, 0.09509972482919693, 0.09879804402589798, 0.09549596905708313], "val_loss": [2.3083407878875732, 2.3083407878875732, 2.3083407878875732, 2.3083407878875732, 2.3083407878875732, 2.3083407878875732], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]