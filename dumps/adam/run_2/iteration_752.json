[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2244315147399902, 1.8688921928405762, 1.3909499645233154, 1.0901505947113037, 0.9411460757255554, 0.8403223156929016, 0.7724497318267822, 0.7249462604522705, 0.6847367882728577, 0.6648470163345337, 0.6299738883972168, 0.6060358881950378, 0.5854844450950623, 0.577572226524353, 0.5590046644210815, 0.5340883731842041, 0.528992772102356, 0.51192706823349, 0.5057104825973511, 0.495728999376297, 0.48745495080947876, 0.4813079535961151, 0.4692060053348541, 0.45771223306655884, 0.4583545923233032, 0.44909194111824036, 0.44030359387397766, 0.4244332015514374, 0.4250267446041107, 0.4206635057926178, 0.40514156222343445, 0.39515286684036255, 0.4006240963935852, 0.3878779709339142, 0.3849930167198181, 0.3771616518497467, 0.3728398382663727, 0.3583697974681854, 0.36728614568710327, 0.3577021658420563, 0.350385457277298, 0.3453114628791809, 0.3393048346042633, 0.3323858976364136, 0.33174243569374084, 0.3177700936794281, 0.3204537630081177, 0.31581762433052063, 0.3118703365325928, 0.3132070004940033, 0.29858797788619995, 0.30327463150024414, 0.2894146144390106, 0.28924673795700073, 0.28170156478881836, 0.28279566764831543, 0.27194520831108093, 0.2690063714981079, 0.27274441719055176, 0.25926777720451355, 0.25168007612228394, 0.2593141794204712], "accuracy": [0.2705058753490448, 0.47549861669540405, 0.568220853805542, 0.6230352520942688, 0.6626601219177246, 0.6934354901313782, 0.72672039270401, 0.7380794882774353, 0.7528728246688843, 0.761590301990509, 0.7737419009208679, 0.7792893648147583, 0.7866860628128052, 0.7909126877784729, 0.7973847389221191, 0.8076872229576111, 0.8098005652427673, 0.8150838613510132, 0.8201030492782593, 0.8169330358505249, 0.8333113193511963, 0.82683926820755, 0.835160493850708, 0.8388587832450867, 0.8360850811004639, 0.839519202709198, 0.8475762605667114, 0.8461233377456665, 0.847840428352356, 0.8500858545303345, 0.86118084192276, 0.8589354157447815, 0.858671247959137, 0.8615770936012268, 0.863558292388916, 0.8632941246032715, 0.8656716346740723, 0.8768987059593201, 0.8725399374961853, 0.8734645247459412, 0.8808611631393433, 0.8772949576377869, 0.8803328275680542, 0.883238673210144, 0.8823140859603882, 0.8901069760322571, 0.8842953443527222, 0.8899748921394348, 0.8864086866378784, 0.8899748921394348, 0.8908994793891907, 0.891559898853302, 0.8996169567108154, 0.8968431949615479, 0.9008057117462158, 0.8982961177825928, 0.9038436412811279, 0.9033153057098389, 0.9038436412811279, 0.9103156924247742, 0.9111081957817078, 0.9079381823539734], "val_loss": [2.039900064468384, 1.5182842016220093, 1.0507447719573975, 0.8500826954841614, 0.7593084573745728, 0.7042271494865417, 0.6545245051383972, 0.6259961128234863, 0.5935349464416504, 0.5741545557975769, 0.5501322150230408, 0.5352348685264587, 0.5227019190788269, 0.5114635229110718, 0.5019860863685608, 0.485225111246109, 0.47513043880462646, 0.4690104126930237, 0.4582785964012146, 0.451244056224823, 0.45347920060157776, 0.4396991431713104, 0.4338007867336273, 0.4259820580482483, 0.4230131506919861, 0.417233407497406, 0.41758668422698975, 0.40620487928390503, 0.4073541760444641, 0.40388211607933044, 0.39624738693237305, 0.3898888826370239, 0.38803157210350037, 0.3883441984653473, 0.3835463523864746, 0.3814145624637604, 0.37578141689300537, 0.3722568452358246, 0.37382566928863525, 0.3671715557575226, 0.36958977580070496, 0.3670419454574585, 0.3633723258972168, 0.3593090772628784, 0.3578740954399109, 0.36147090792655945, 0.3614790439605713, 0.35849490761756897, 0.3644460439682007, 0.34894901514053345, 0.35119205713272095, 0.35156893730163574, 0.34700247645378113, 0.3496630787849426, 0.3470107316970825, 0.34798362851142883, 0.3427870273590088, 0.3458399772644043, 0.3394112288951874, 0.34619516134262085, 0.34357258677482605, 0.3470182716846466], "val_accuracy": [0.5296666622161865, 0.6503333449363708, 0.6740000247955322, 0.6980000138282776, 0.7223333120346069, 0.7416666746139526, 0.749666690826416, 0.7630000114440918, 0.7789999842643738, 0.7906666398048401, 0.8029999732971191, 0.7976666688919067, 0.8116666674613953, 0.8143333196640015, 0.8173333406448364, 0.8220000267028809, 0.8246666789054871, 0.8320000171661377, 0.831333339214325, 0.8316666483879089, 0.8320000171661377, 0.840666651725769, 0.8460000157356262, 0.8446666598320007, 0.846666693687439, 0.8479999899864197, 0.8453333377838135, 0.8519999980926514, 0.8496666550636292, 0.8516666889190674, 0.8576666712760925, 0.8566666841506958, 0.8586666584014893, 0.8569999933242798, 0.862666666507721, 0.859666645526886, 0.8610000014305115, 0.8610000014305115, 0.8619999885559082, 0.8676666617393494, 0.8683333396911621, 0.862666666507721, 0.8666666746139526, 0.8693333268165588, 0.8666666746139526, 0.8663333058357239, 0.8706666827201843, 0.8676666617393494, 0.8646666407585144, 0.8700000047683716, 0.8756666779518127, 0.8759999871253967, 0.8769999742507935, 0.871999979019165, 0.8723333477973938, 0.8743333220481873, 0.8776666522026062, 0.874666690826416, 0.875333309173584, 0.8776666522026062, 0.8743333220481873, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 39, 96, 99, 61, 79]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 4, 4, 2, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.negative(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5, 4, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [77], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 9], [1, 0, 0, 3, 0, 0, 0, 1, 2, 0], [16, 99, 96, 83, 61, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 13, 8, 5, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(tf.math.multiply(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, tf.math.square(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 3, 3], [16, 16], [0, 1, 0, 1, 1], [2, 1], [0, 2, 4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 23, 99, 61, 1]], "fitness": -0.09142857044935226, "mapping_values": [1, 9, 5, 4, 2, 8, 5, 3, 1, 5, 2, 3, 1, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha)", "other_info": {"loss": [2.3086905479431152, 2.3105573654174805, 2.3091349601745605, 2.309201717376709, 2.3104312419891357, 2.3112854957580566], "accuracy": [0.0956280529499054, 0.0870426595211029, 0.09919429570436478, 0.0956280529499054, 0.09008057415485382, 0.08928807079792023], "val_loss": [2.3086905479431152, 2.3086905479431152, 2.3086905479431152, 2.3086905479431152, 2.3086905479431152, 2.3086905479431152], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [3, 8, 4, 5, 8, 2, 6, 8, 1, 1, 5, 8], [0, 1, 7, 2, 6, 6, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 8, 3, 0, 2, 1, 4, 8], [0, 0, 0, 2, 0, 0, 4, 4, 4, 0, 3, 6, 2, 2], [33, 99, 96, 99, 61, 93]], "fitness": -0.0908571407198906, "mapping_values": [1, 6, 4, 2, 1, 8, 4, 4, 2, 19, 12, 7, 1, 31, 17, 14, 6], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.sqrt(grad)), tf.math.subtract(tf.math.subtract(tf.math.square(beta), grad), grad)))), tf.math.sqrt(sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), tf.math.add(tf.math.subtract(grad, grad), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)))))))), grad)), beta), beta)", "other_info": {"loss": [2.3101744651794434, 2.3094303607940674, 2.309852361679077, 2.3098058700561523, 2.310711145401001, 2.3091349601745605], "accuracy": [0.09311848133802414, 0.0936468094587326, 0.08928807079792023, 0.09100515395402908, 0.08757099509239197, 0.09470347315073013], "val_loss": [2.309274196624756, 2.309274196624756, 2.309274196624756, 2.309274196624756, 2.309274196624756, 2.309274196624756], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]