[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2241079807281494, 1.8608152866363525, 1.3941254615783691, 1.0897181034088135, 0.9340996742248535, 0.8192071914672852, 0.7651033997535706, 0.7168228626251221, 0.6869643330574036, 0.6482120156288147, 0.6370106339454651, 0.6039392948150635, 0.5906334519386292, 0.5673621892929077, 0.5575640797615051, 0.5349025130271912, 0.515651524066925, 0.5125293135643005, 0.4943816661834717, 0.4878724217414856, 0.48181140422821045, 0.4699627459049225, 0.4544505476951599, 0.44622543454170227, 0.4445745646953583, 0.43461546301841736, 0.429277241230011, 0.4260435998439789, 0.41665852069854736, 0.4038284718990326, 0.4039002060890198, 0.39760103821754456, 0.382972776889801, 0.38160014152526855, 0.3727762699127197, 0.3735519051551819, 0.3642567992210388, 0.36326858401298523, 0.3570635914802551, 0.36033865809440613, 0.3480099141597748, 0.33836138248443604, 0.337577760219574, 0.33344170451164246, 0.33018121123313904, 0.3244820535182953, 0.3151921033859253, 0.313599556684494, 0.3045760989189148, 0.30355963110923767, 0.30076590180397034, 0.30446305871009827, 0.2942464351654053, 0.2857726216316223, 0.2814652919769287, 0.28185519576072693, 0.28061702847480774], "accuracy": [0.26535463333129883, 0.49451854825019836, 0.5601637959480286, 0.6172236204147339, 0.6675472259521484, 0.7063795924186707, 0.7255316376686096, 0.739400327205658, 0.7534011602401733, 0.7625148296356201, 0.7684586048126221, 0.7802139520645142, 0.7857614755630493, 0.7924976944923401, 0.7998943328857422, 0.8098005652427673, 0.8171972036361694, 0.8169330358505249, 0.8203672170639038, 0.8238013386726379, 0.8272355198860168, 0.8337075710296631, 0.837537944316864, 0.8370096683502197, 0.8424250483512878, 0.8425571322441101, 0.848368763923645, 0.8485008478164673, 0.8506141901016235, 0.8556333184242249, 0.8557654023170471, 0.8562937378883362, 0.8621054291725159, 0.8647470474243164, 0.8688416481018066, 0.8642187118530273, 0.8701624870300293, 0.8679170608520508, 0.8732003569602966, 0.869502067565918, 0.8768987059593201, 0.878351628780365, 0.8758420348167419, 0.8809932470321655, 0.8825782537460327, 0.8840311765670776, 0.8828424215316772, 0.8833707571029663, 0.8918240666389465, 0.8912957310676575, 0.8911636471748352, 0.8897107243537903, 0.8942015767097473, 0.8994848728179932, 0.8939374089241028, 0.8956544995307922, 0.8985602855682373], "val_loss": [2.035799741744995, 1.5052971839904785, 1.0327508449554443, 0.8232022523880005, 0.7370511889457703, 0.67397141456604, 0.6360899806022644, 0.6030071377754211, 0.5781590938568115, 0.5521348714828491, 0.5374305248260498, 0.5202817916870117, 0.5072157979011536, 0.49851253628730774, 0.48456332087516785, 0.47108757495880127, 0.4657955765724182, 0.457621306180954, 0.4469534158706665, 0.4432711601257324, 0.43456244468688965, 0.42901942133903503, 0.42151033878326416, 0.4138581454753876, 0.4082928001880646, 0.4040241837501526, 0.4031047224998474, 0.3981979191303253, 0.39173436164855957, 0.38624703884124756, 0.38675975799560547, 0.3834810256958008, 0.3746147155761719, 0.3790956735610962, 0.3700551390647888, 0.3676798641681671, 0.3681735098361969, 0.3659146726131439, 0.36012905836105347, 0.3636796772480011, 0.361968994140625, 0.3559504449367523, 0.3570655584335327, 0.35913342237472534, 0.3517645597457886, 0.35413601994514465, 0.3449844419956207, 0.34585216641426086, 0.34584516286849976, 0.3481205701828003, 0.3488514721393585, 0.34344929456710815, 0.33834874629974365, 0.34248682856559753, 0.33917999267578125, 0.33634400367736816, 0.3362305164337158], "val_accuracy": [0.5196666717529297, 0.6623333096504211, 0.6890000104904175, 0.7166666388511658, 0.7390000224113464, 0.7540000081062317, 0.7723333239555359, 0.7770000100135803, 0.7826666831970215, 0.8033333420753479, 0.8013333082199097, 0.8083333373069763, 0.8119999766349792, 0.8180000185966492, 0.828000009059906, 0.8316666483879089, 0.8356666564941406, 0.8366666436195374, 0.8389999866485596, 0.843999981880188, 0.8443333506584167, 0.8446666598320007, 0.8550000190734863, 0.8513333201408386, 0.8526666760444641, 0.8560000061988831, 0.8503333330154419, 0.8566666841506958, 0.8543333411216736, 0.8586666584014893, 0.8600000143051147, 0.8566666841506958, 0.8640000224113464, 0.8586666584014893, 0.862333357334137, 0.8659999966621399, 0.8673333525657654, 0.8679999709129333, 0.8669999837875366, 0.8683333396911621, 0.8659999966621399, 0.8696666955947876, 0.871666669845581, 0.8683333396911621, 0.8706666827201843, 0.871666669845581, 0.871999979019165, 0.8730000257492065, 0.8740000128746033, 0.8726666569709778, 0.871999979019165, 0.8793333172798157, 0.8773333430290222, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [6, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 4, 1], [0, 2, 0, 3, 0, 3], [16, 98, 12], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 6, 8, 5, 5], [0, 0, 2, 3, 0, 0, 3, 1, 2, 2], [16, 75, 96, 99, 84, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 8, 6, 3, 2, 1, 1, 1, 23, 13, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(beta)), tf.math.square(beta)))", "other_info": {"loss": [2.3102481365203857, 2.3092572689056396, 2.309770345687866, 2.308819532394409, 2.3070616722106934, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09021265059709549, 0.09153348207473755, 0.0944393053650856, 0.09206181764602661, 0.09047681838274002, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308605194091797, 2.308605194091797, 2.308605194091797, 2.3057198524475098, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09366666525602341, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 3, 2, 3, 2, 7, 0], [2, 1, 2, 2, 1, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [9, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 1, 10, 6, 4, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(grad, alpha), tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303506374359131, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1, 0], [3, 9], [0], [99, 10], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0, 2, 9], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 62, 88, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 3, 2, 1, 2, 23, 13, 10, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.add(alpha, beta))))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303870439529419, 2.302553176879883, 2.3025429248809814, 2.3024752140045166, 2.3020544052124023, 165.6262969970703], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.10328886657953262, 0.10830801725387573, 0.10394927859306335, 0.10328886657953262], "val_loss": [2.302584648132324, 2.3025896549224854, 2.3025898933410645, 2.302621364593506, 2.3047354221343994, 2774.5], "val_accuracy": [0.10199999809265137, 0.09966666996479034, 0.09733333438634872, 0.1003333330154419, 0.10100000351667404, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 6, 4, 5, 9], [0, 2, 0, 2, 2], [39, 39, 12], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 20, 96, 99, 61, 1]], "fitness": -0.07028571516275406, "mapping_values": [1, 14, 9, 5, 3, 2, 2, 0, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), sigma)", "other_info": {"loss": [2.3077831268310547, 2.3062398433685303, 2.3057658672332764, 2.305363416671753, 2.3055315017700195, 2.3054089546203613, 2.305534839630127, 2.3056282997131348, 2.305604934692383, 2.30541729927063, 2.3055427074432373, 2.305044174194336, 2.305424213409424, 2.3052713871002197, 2.3052291870117188, 2.305325508117676, 2.3050355911254883], "accuracy": [0.08849557489156723, 0.08492933213710785, 0.08942015469074249, 0.09008057415485382, 0.08730682730674744, 0.08519349992275238, 0.08492933213710785, 0.08321225643157959, 0.08942015469074249, 0.08611807972192764, 0.09245806187391281, 0.08902391046285629, 0.08677849918603897, 0.08942015469074249, 0.08228767663240433, 0.08492933213710785, 0.08796724677085876], "val_loss": [2.3059873580932617, 2.305527448654175, 2.305323839187622, 2.305213212966919, 2.305147409439087, 2.305102586746216, 2.305069923400879, 2.3050456047058105, 2.3050267696380615, 2.305011510848999, 2.3049988746643066, 2.3049886226654053, 2.3049798011779785, 2.3049724102020264, 2.3049654960632324, 2.304960250854492, 2.304955005645752], "val_accuracy": [0.0689999982714653, 0.06833333522081375, 0.06800000369548798, 0.06866666674613953, 0.06866666674613953, 0.06966666877269745, 0.0689999982714653, 0.07000000029802322, 0.06933332979679108, 0.06933332979679108, 0.06966666877269745, 0.070333331823349, 0.07000000029802322, 0.06933332979679108, 0.06933332979679108, 0.06933332979679108, 0.07000000029802322]}}]