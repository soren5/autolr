[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224989175796509, 1.8665133714675903, 1.3911192417144775, 1.0921812057495117, 0.9416163563728333, 0.8236730694770813, 0.7732471227645874, 0.7164488434791565, 0.6792704463005066, 0.6489954590797424, 0.6203761100769043, 0.611175000667572, 0.5884723663330078, 0.5654509663581848, 0.5519381165504456, 0.5395709872245789, 0.5178458094596863, 0.511773407459259, 0.49918368458747864, 0.49600642919540405, 0.47803524136543274, 0.4701734781265259, 0.46352094411849976, 0.4562598168849945, 0.44635435938835144, 0.4330767095088959, 0.4326646029949188, 0.42736130952835083, 0.4236675798892975, 0.4159468710422516, 0.4073413908481598, 0.39759567379951477, 0.3856774568557739, 0.3900194466114044, 0.38229554891586304, 0.3775043189525604, 0.36958032846450806, 0.3653591275215149, 0.3575701117515564, 0.3584687113761902, 0.34958648681640625, 0.3417185842990875, 0.3438558280467987, 0.33997541666030884, 0.34020423889160156, 0.3325049877166748, 0.32940468192100525, 0.3167874813079834, 0.3200099468231201, 0.3164437711238861, 0.30653733015060425, 0.300599068403244, 0.2959413230419159, 0.2884436249732971, 0.29310286045074463, 0.28517621755599976, 0.2736301124095917, 0.28129884600639343, 0.2725052833557129, 0.2737523019313812, 0.270205557346344, 0.2593843936920166, 0.2645770013332367, 0.2579416334629059, 0.25239452719688416, 0.25385525822639465, 0.24358558654785156, 0.24017980694770813, 0.2418033480644226, 0.23491689562797546, 0.2276802361011505, 0.2327314168214798, 0.2232612520456314, 0.22105933725833893, 0.21943503618240356, 0.21389640867710114, 0.21173441410064697, 0.20650042593479156, 0.2035893350839615, 0.210946723818779, 0.19920536875724792, 0.19710804522037506, 0.19557170569896698], "accuracy": [0.27037379145622253, 0.486989825963974, 0.5616167187690735, 0.6166952848434448, 0.661471426486969, 0.7003037929534912, 0.720380425453186, 0.7392682433128357, 0.7465327978134155, 0.7585523724555969, 0.7705719470977783, 0.7700436115264893, 0.7878747582435608, 0.7954035401344299, 0.798309326171875, 0.805177628993988, 0.8140271902084351, 0.8165367841720581, 0.8234050869941711, 0.8222163319587708, 0.8272355198860168, 0.8304054737091064, 0.8343679904937744, 0.8359529972076416, 0.8396512866020203, 0.848368763923645, 0.8462554216384888, 0.8496896028518677, 0.8465195894241333, 0.8535200357437134, 0.852331280708313, 0.8610487580299377, 0.8622375130653381, 0.8603883385658264, 0.863029956817627, 0.8664641380310059, 0.8689737319946289, 0.8734645247459412, 0.8689737319946289, 0.871879518032074, 0.8775591254234314, 0.8798044919967651, 0.8775591254234314, 0.8794082403182983, 0.8761062026023865, 0.8798044919967651, 0.882710337638855, 0.8865407705307007, 0.8833707571029663, 0.8861445188522339, 0.8914278149604797, 0.8939374089241028, 0.8934090733528137, 0.8967111110687256, 0.8936732411384583, 0.895918607711792, 0.9014661312103271, 0.8996169567108154, 0.9022586345672607, 0.9019944667816162, 0.9021265506744385, 0.9045040011405945, 0.901862382888794, 0.9084665179252625, 0.9105798602104187, 0.9121648669242859, 0.913089394569397, 0.9121648669242859, 0.9108440279960632, 0.9126931428909302, 0.9189010858535767, 0.9140139818191528, 0.9183727502822876, 0.9178444147109985, 0.9174481630325317, 0.9220710396766663, 0.9243164658546448, 0.9257693886756897, 0.9285431504249573, 0.9220710396766663, 0.9265618920326233, 0.9292035102844238, 0.9277506470680237], "val_loss": [2.041775703430176, 1.5120306015014648, 1.039189338684082, 0.8319379687309265, 0.7417865991592407, 0.6898429989814758, 0.6434626579284668, 0.6069023609161377, 0.5811201930046082, 0.5600765943527222, 0.5448644161224365, 0.5279237031936646, 0.5120295286178589, 0.5008302330970764, 0.48783019185066223, 0.48278459906578064, 0.4662882387638092, 0.4607774317264557, 0.45520341396331787, 0.44501087069511414, 0.4394960403442383, 0.4308282732963562, 0.4297814965248108, 0.42179131507873535, 0.416464626789093, 0.4100571274757385, 0.4076513648033142, 0.407266229391098, 0.3992770314216614, 0.39170271158218384, 0.388295441865921, 0.38292691111564636, 0.385520875453949, 0.37955331802368164, 0.37439244985580444, 0.37141042947769165, 0.36844730377197266, 0.37440550327301025, 0.36142024397850037, 0.3621743619441986, 0.3584991991519928, 0.358197957277298, 0.35207104682922363, 0.3532787263393402, 0.34922051429748535, 0.3504590690135956, 0.34810107946395874, 0.3501872420310974, 0.34293636679649353, 0.340207040309906, 0.33973270654678345, 0.33598580956459045, 0.33503350615501404, 0.3346184492111206, 0.333857923746109, 0.32702815532684326, 0.3303239047527313, 0.3317258656024933, 0.3274787962436676, 0.32676851749420166, 0.3298683166503906, 0.3255135118961334, 0.319192111492157, 0.3204653859138489, 0.32285240292549133, 0.3142962157726288, 0.31888192892074585, 0.31602123379707336, 0.3191230595111847, 0.3137734830379486, 0.3169766962528229, 0.3145016133785248, 0.31250566244125366, 0.3133794665336609, 0.31150782108306885, 0.3146897852420807, 0.31062063574790955, 0.3065319061279297, 0.3106808364391327, 0.30981990694999695, 0.30888277292251587, 0.3066737949848175, 0.3096555471420288], "val_accuracy": [0.534333348274231, 0.6633333563804626, 0.690666675567627, 0.7056666612625122, 0.737666666507721, 0.7506666779518127, 0.7509999871253967, 0.7693333625793457, 0.7766666412353516, 0.7806666493415833, 0.7896666526794434, 0.7976666688919067, 0.8130000233650208, 0.8066666722297668, 0.8169999718666077, 0.8203333616256714, 0.82833331823349, 0.82833331823349, 0.8303333520889282, 0.8353333473205566, 0.8426666855812073, 0.8423333168029785, 0.8463333249092102, 0.8489999771118164, 0.8536666631698608, 0.8496666550636292, 0.8533333539962769, 0.8529999852180481, 0.8550000190734863, 0.8600000143051147, 0.8600000143051147, 0.8610000014305115, 0.8613333106040955, 0.8643333315849304, 0.8669999837875366, 0.8669999837875366, 0.8709999918937683, 0.8666666746139526, 0.871666669845581, 0.8693333268165588, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.8703333139419556, 0.8730000257492065, 0.878333330154419, 0.8786666393280029, 0.8740000128746033, 0.8769999742507935, 0.878333330154419, 0.8790000081062317, 0.878000020980835, 0.8823333382606506, 0.8806666731834412, 0.8809999823570251, 0.8853333592414856, 0.8833333253860474, 0.8826666474342346, 0.8853333592414856, 0.8859999775886536, 0.8849999904632568, 0.8859999775886536, 0.890999972820282, 0.8893333077430725, 0.8893333077430725, 0.8930000066757202, 0.887333333492279, 0.8926666378974915, 0.890666663646698, 0.8916666507720947, 0.8933333158493042, 0.8939999938011169, 0.8960000276565552, 0.8930000066757202, 0.8953333497047424, 0.8930000066757202, 0.8970000147819519, 0.8989999890327454, 0.8943333625793457, 0.8966666460037231, 0.8976666927337646, 0.8970000147819519, 0.8970000147819519]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 72], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 4, 1, 4, 0, 5], [16, 99, 96, 93, 3, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.sqrt(alpha)))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 8, 3, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 0, 0, 1, 0, 0, 1, 1], [0, 4, 8, 0, 7], [0, 5, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 48, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 5, 5, 2, 8, 5, 3, 1, 13, 7, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.736719608306885, 43.397823333740234, 149.9478759765625, 371.5954895019531, 750.6033325195312, 1339.75634765625], "accuracy": [0.09800554811954498, 0.09734513610601425, 0.10817593336105347, 0.0940430611371994, 0.09826971590518951, 0.10117553919553757], "val_loss": [15.271031379699707, 72.19329833984375, 198.62646484375, 430.51116943359375, 804.4556884765625, 1357.2978515625], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 4, 5, 8], [0, 1, 0, 2, 2], [44, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 2], [16, 16], [0, 1], [0], [0], [19], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.square(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 4], [0, 0, 4, 3, 0, 0, 3, 1, 0, 0], [16, 40, 96, 99, 61, 1]], "fitness": -0.02742857113480568, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [5.5444571476558086e+20, 7.734094268265671e+20, 7.228924090688639e+20, 7.650081024591958e+20, 7.555195106255354e+20, 7.527875145015818e+20], "accuracy": [0.07951393723487854, 0.08334434032440186, 0.08096684515476227, 0.07845727354288101, 0.0754193663597107, 0.0734381154179573], "val_loss": [7.788148722793185e+20, 7.788148722793185e+20, 7.788148722793185e+20, 7.788148722793185e+20, 7.788148722793185e+20, 7.788148722793185e+20], "val_accuracy": [0.02500000037252903, 0.02500000037252903, 0.02500000037252903, 0.02500000037252903, 0.02500000037252903, 0.02500000037252903]}}]