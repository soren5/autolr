[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22353196144104, 1.8613026142120361, 1.3834478855133057, 1.089060664176941, 0.931610643863678, 0.8353099226951599, 0.7813636660575867, 0.7309186458587646, 0.6929793953895569, 0.6741541028022766, 0.6403616666793823, 0.6232964396476746, 0.5951632261276245, 0.5811456441879272, 0.5688022375106812, 0.5545415282249451, 0.5420552492141724, 0.5253766179084778, 0.5150694847106934, 0.50584477186203, 0.49468713998794556, 0.48418328166007996, 0.4699295461177826, 0.46162575483322144, 0.4555988013744354, 0.444282591342926, 0.44438716769218445, 0.4333993196487427, 0.4260669946670532, 0.4231831431388855, 0.40626224875450134, 0.4004366397857666, 0.40254664421081543, 0.38293910026550293, 0.3905370533466339, 0.39244958758354187, 0.3713758587837219, 0.3741540312767029, 0.36910292506217957, 0.357400119304657, 0.3575983941555023, 0.3495486080646515, 0.3448813855648041, 0.3359922468662262, 0.3357902467250824, 0.3319394886493683, 0.3302322030067444, 0.3211939036846161, 0.30988046526908875, 0.30832403898239136, 0.30427613854408264, 0.3046399652957916, 0.296509712934494, 0.29838404059410095, 0.299119770526886, 0.2932227849960327, 0.2819176912307739, 0.2851015627384186, 0.2811983823776245, 0.27187877893447876, 0.2628525495529175, 0.2643054127693176, 0.26647669076919556, 0.2614060342311859, 0.25466910004615784, 0.24198368191719055, 0.24411897361278534, 0.24567651748657227, 0.24167980253696442, 0.24062170088291168, 0.23279857635498047, 0.2315167784690857, 0.2307599037885666, 0.21896731853485107, 0.21756140887737274, 0.21914879977703094, 0.21706536412239075, 0.21456927061080933, 0.20837002992630005, 0.2056814432144165, 0.2051476389169693, 0.19720827043056488, 0.19651784002780914, 0.19124256074428558, 0.19098727405071259, 0.19364722073078156, 0.1945655643939972], "accuracy": [0.27658170461654663, 0.5011227130889893, 0.5691454410552979, 0.6155065298080444, 0.6682076454162598, 0.6991150379180908, 0.7181349992752075, 0.7322678565979004, 0.7493065595626831, 0.7531369924545288, 0.7675340175628662, 0.7696473598480225, 0.7865539789199829, 0.7907806038856506, 0.7918372750282288, 0.798309326171875, 0.8033285140991211, 0.8127063512802124, 0.8149517774581909, 0.8183859586715698, 0.8207634687423706, 0.826310932636261, 0.830669641494751, 0.8325188159942627, 0.8401796221733093, 0.839519202709198, 0.842028796672821, 0.8451988101005554, 0.8495575189590454, 0.8451988101005554, 0.8557654023170471, 0.8548408150672913, 0.8556333184242249, 0.8638224601745605, 0.8570862412452698, 0.8615770936012268, 0.8668603897094727, 0.8667283058166504, 0.8671245574951172, 0.8728041052818298, 0.8732003569602966, 0.8750495314598083, 0.8741249442100525, 0.8790120482444763, 0.878879964351654, 0.8841632604598999, 0.8811253309249878, 0.8850878477096558, 0.8906353116035461, 0.886672854423523, 0.8902390599250793, 0.8918240666389465, 0.893541157245636, 0.8920882344245911, 0.8887861371040344, 0.8943336606025696, 0.9017302989959717, 0.8972394466400146, 0.895918607711792, 0.9012019634246826, 0.9056927561759949, 0.9045040011405945, 0.9068815112113953, 0.9035794734954834, 0.9103156924247742, 0.9125610589981079, 0.9148064851760864, 0.9101836085319519, 0.9128252267837524, 0.9133535623550415, 0.9144102334976196, 0.9185048341751099, 0.9166556596755981, 0.9211464524269104, 0.9207502603530884, 0.9208822846412659, 0.921938955783844, 0.9190331697463989, 0.9232597947120667, 0.9216747879981995, 0.9262977242469788, 0.9293355941772461, 0.9294676780700684, 0.9270902276039124, 0.9332981109619141, 0.9289394021034241, 0.9273543953895569], "val_loss": [2.042205333709717, 1.5157262086868286, 1.0453369617462158, 0.8427632451057434, 0.748232901096344, 0.6912879943847656, 0.6445457935333252, 0.6098049283027649, 0.5801382064819336, 0.5611590147018433, 0.5401967763900757, 0.5252072215080261, 0.5058016180992126, 0.49698764085769653, 0.4906095266342163, 0.4748097360134125, 0.45929452776908875, 0.4525248110294342, 0.444582998752594, 0.43760693073272705, 0.43328166007995605, 0.4318617880344391, 0.42663484811782837, 0.4154708683490753, 0.4110633134841919, 0.4045008420944214, 0.4007350206375122, 0.39734920859336853, 0.39735090732574463, 0.38568001985549927, 0.3882214426994324, 0.3813062608242035, 0.380814790725708, 0.37329748272895813, 0.3779076039791107, 0.372580885887146, 0.3703172206878662, 0.36740177869796753, 0.3679001033306122, 0.36271268129348755, 0.36685872077941895, 0.360166996717453, 0.357544869184494, 0.3581520915031433, 0.35417288541793823, 0.35763806104660034, 0.3502885699272156, 0.3508014678955078, 0.3487081825733185, 0.34831932187080383, 0.35155555605888367, 0.34601646661758423, 0.34995973110198975, 0.34629806876182556, 0.3416980803012848, 0.34004154801368713, 0.3472681939601898, 0.34376636147499084, 0.3398226797580719, 0.33602088689804077, 0.34115198254585266, 0.3365570902824402, 0.3356216847896576, 0.34032848477363586, 0.3335244357585907, 0.3375720679759979, 0.3336362838745117, 0.3386295437812805, 0.3389156758785248, 0.3348332941532135, 0.3336573839187622, 0.33729317784309387, 0.3326186239719391, 0.33763158321380615, 0.33422109484672546, 0.33480143547058105, 0.33422309160232544, 0.33570393919944763, 0.3391683101654053, 0.33564236760139465, 0.34239983558654785, 0.3350079357624054, 0.33967125415802, 0.3376631736755371, 0.3347545564174652, 0.3447575271129608, 0.33660784363746643], "val_accuracy": [0.5479999780654907, 0.6496666669845581, 0.6776666641235352, 0.7066666483879089, 0.7279999852180481, 0.7450000047683716, 0.7586666941642761, 0.7799999713897705, 0.7879999876022339, 0.796999990940094, 0.8066666722297668, 0.8149999976158142, 0.8186666369438171, 0.8196666836738586, 0.8209999799728394, 0.8383333086967468, 0.8420000076293945, 0.8443333506584167, 0.8473333120346069, 0.8483333587646484, 0.8500000238418579, 0.8450000286102295, 0.8486666679382324, 0.8539999723434448, 0.8569999933242798, 0.8573333621025085, 0.859333336353302, 0.862666666507721, 0.8650000095367432, 0.8673333525657654, 0.862333357334137, 0.8693333268165588, 0.8713333606719971, 0.8709999918937683, 0.8730000257492065, 0.8713333606719971, 0.8740000128746033, 0.8756666779518127, 0.8683333396911621, 0.8740000128746033, 0.8766666650772095, 0.8743333220481873, 0.8759999871253967, 0.8769999742507935, 0.8773333430290222, 0.878000020980835, 0.8809999823570251, 0.8790000081062317, 0.8793333172798157, 0.8813333511352539, 0.8806666731834412, 0.8816666603088379, 0.8823333382606506, 0.8803333044052124, 0.8823333382606506, 0.8866666555404663, 0.8836666941642761, 0.8816666603088379, 0.8846666812896729, 0.8840000033378601, 0.887666642665863, 0.8833333253860474, 0.8856666684150696, 0.8863333463668823, 0.8870000243186951, 0.8889999985694885, 0.8896666765213013, 0.8880000114440918, 0.887666642665863, 0.890666663646698, 0.8896666765213013, 0.890333354473114, 0.8923333287239075, 0.8916666507720947, 0.8893333077430725, 0.8920000195503235, 0.8926666378974915, 0.8886666893959045, 0.8933333158493042, 0.8893333077430725, 0.8883333206176758, 0.8966666460037231, 0.8920000195503235, 0.8923333287239075, 0.8939999938011169, 0.8930000066757202, 0.8943333625793457]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [2, 16], [0, 1], [0], [0], [96], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 2, 4, 2, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 23, 11, 12, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha))), tf.math.pow(tf.math.add(tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3, 5, 1, 8, 5, 7, 9], [0, 2, 0, 3, 1], [16, 16, 30], [1, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 4, 4, 0], [16, 99, 59, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 16, 11, 5, 3, 1, 0, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.subtract(tf.math.sqrt(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad))))", "other_info": {"loss": [2.3070743083953857, 2.3033246994018555, 2.3031442165374756, 2.3059794902801514, 9.109820365905762, 2325.826416015625, 15066736.0, 618652659351552.0], "accuracy": [0.09430722147226334, 0.09906221181154251, 0.09655263274908066, 0.09681680053472519, 0.09417514503002167, 0.09945846349000931, 0.09589222073554993, 0.09708096832036972], "val_loss": [2.304018259048462, 2.3032994270324707, 2.3026089668273926, 2.317051649093628, 81.49701690673828, 30534.5390625, 761310976.0, 1.7931677439361024e+17], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.10133333504199982, 0.0989999994635582, 0.09733333438634872, 0.10133333504199982, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 4], [16, 65, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032567501068115, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 6, 5], [0, 2, 3, 3], [85, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 2, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]