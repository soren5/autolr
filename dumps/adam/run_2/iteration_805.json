[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226065158843994, 1.8783951997756958, 1.4063587188720703, 1.108428716659546, 0.9440714716911316, 0.8483091592788696, 0.7663167715072632, 0.734382152557373, 0.7030930519104004, 0.6611657738685608, 0.6338829398155212, 0.6168509721755981, 0.5989726781845093, 0.5809417963027954, 0.5677691102027893, 0.5485333800315857, 0.5281573534011841, 0.5230225920677185, 0.505856454372406, 0.5004345774650574, 0.48330140113830566, 0.4769311845302582, 0.473207026720047, 0.4552226960659027, 0.4502922594547272, 0.4367004632949829, 0.4407944977283478, 0.42184945940971375, 0.42282727360725403, 0.4137306213378906, 0.4094884693622589, 0.3992016911506653, 0.3925711512565613, 0.38456133008003235, 0.38950929045677185, 0.37892770767211914, 0.3672793507575989, 0.37106987833976746, 0.3625508248806, 0.3563237488269806, 0.3455706238746643, 0.34852084517478943, 0.34322094917297363, 0.3436327278614044, 0.3320619463920593, 0.32552462816238403, 0.32425615191459656, 0.3140719532966614, 0.31465157866477966, 0.3091181516647339, 0.30078399181365967, 0.2974057197570801, 0.29711610078811646, 0.2860124409198761, 0.2874206304550171, 0.27800261974334717, 0.2830347418785095, 0.2765643298625946, 0.26777663826942444, 0.2722671926021576, 0.2613063156604767, 0.2577436566352844, 0.25150066614151, 0.25140875577926636, 0.2409437596797943, 0.2473517209291458, 0.24404162168502808, 0.2406759113073349, 0.23591844737529755, 0.2350509613752365, 0.2259436994791031, 0.22428621351718903, 0.22158998250961304, 0.2211650162935257, 0.2148297131061554, 0.21161377429962158, 0.20844128727912903, 0.2050907164812088, 0.2073095440864563, 0.20020751655101776, 0.19964373111724854], "accuracy": [0.2576938271522522, 0.48527276515960693, 0.5567296147346497, 0.6166952848434448, 0.6623960137367249, 0.693831741809845, 0.7234182953834534, 0.7337207794189453, 0.7452120184898376, 0.7668735980987549, 0.7701756954193115, 0.7786290049552917, 0.7835160493850708, 0.7954035401344299, 0.8013472557067871, 0.7996301651000977, 0.8095363974571228, 0.816008448600769, 0.824329674243927, 0.8222163319587708, 0.826310932636261, 0.8259146809577942, 0.8358209133148193, 0.8409721255302429, 0.8385946154594421, 0.8466516733169556, 0.8388587832450867, 0.8498216867446899, 0.8482366800308228, 0.8512746095657349, 0.8585391640663147, 0.8613129258155823, 0.8639545440673828, 0.8602562546730042, 0.8609166741371155, 0.8632941246032715, 0.8691058158874512, 0.8672566413879395, 0.8737286925315857, 0.8692378997802734, 0.873860776424408, 0.8782195448875427, 0.8798044919967651, 0.8776912093162537, 0.8802007436752319, 0.8844274282455444, 0.8840311765670776, 0.8885219693183899, 0.8856161832809448, 0.8858803510665894, 0.8934090733528137, 0.8908994793891907, 0.895918607711792, 0.8977677822113037, 0.8965790271759033, 0.9026548862457275, 0.8989565372467041, 0.8981640338897705, 0.9034473896026611, 0.8965790271759033, 0.9056927561759949, 0.9051644206047058, 0.9071456789970398, 0.9100515246391296, 0.9134856462478638, 0.9095231890678406, 0.9111081957817078, 0.9116365313529968, 0.9140139818191528, 0.9144102334976196, 0.9162594079971313, 0.9179764986038208, 0.9208822846412659, 0.9161273241043091, 0.9220710396766663, 0.9220710396766663, 0.9237881302833557, 0.9268260598182678, 0.928411066532135, 0.927882730960846, 0.9269581437110901], "val_loss": [2.0377626419067383, 1.5183268785476685, 1.0354021787643433, 0.825166642665863, 0.7374962568283081, 0.6775062084197998, 0.6316247582435608, 0.5973194241523743, 0.5750383138656616, 0.549015998840332, 0.5307987928390503, 0.5161396265029907, 0.5015751719474792, 0.4848369061946869, 0.4751608371734619, 0.4620040953159332, 0.4543296694755554, 0.4419795274734497, 0.4411909878253937, 0.4294969439506531, 0.42710062861442566, 0.4165596067905426, 0.41253671050071716, 0.4060590863227844, 0.39893198013305664, 0.4058564007282257, 0.3898697793483734, 0.3844969868659973, 0.3787808418273926, 0.37761104106903076, 0.371204674243927, 0.368825763463974, 0.36531248688697815, 0.36721932888031006, 0.36239421367645264, 0.35963886976242065, 0.3584473133087158, 0.3553883731365204, 0.3501702845096588, 0.3516225218772888, 0.3490065038204193, 0.3511122167110443, 0.34243181347846985, 0.3422459363937378, 0.3415941894054413, 0.33754706382751465, 0.33941540122032166, 0.3347284495830536, 0.3321243226528168, 0.32998403906822205, 0.33148419857025146, 0.32964032888412476, 0.3274022340774536, 0.32805368304252625, 0.3295292854309082, 0.32497406005859375, 0.32233932614326477, 0.31951016187667847, 0.32243525981903076, 0.3165852725505829, 0.32097354531288147, 0.3179791569709778, 0.3163452446460724, 0.3172932267189026, 0.31834810972213745, 0.321809321641922, 0.31615880131721497, 0.3188316226005554, 0.31548038125038147, 0.3134968876838684, 0.31458011269569397, 0.31517618894577026, 0.31196820735931396, 0.31880807876586914, 0.3090677261352539, 0.3114873170852661, 0.3156387507915497, 0.3134990632534027, 0.30905771255493164, 0.316005140542984, 0.30791163444519043], "val_accuracy": [0.5293333530426025, 0.6646666526794434, 0.6946666836738586, 0.7206666469573975, 0.7413333058357239, 0.7590000033378601, 0.7716666460037231, 0.7766666412353516, 0.7889999747276306, 0.7973333597183228, 0.8059999942779541, 0.8096666932106018, 0.815666675567627, 0.8273333311080933, 0.8270000219345093, 0.8303333520889282, 0.8360000252723694, 0.8363333344459534, 0.8396666646003723, 0.8403333425521851, 0.8446666598320007, 0.8460000157356262, 0.8473333120346069, 0.8496666550636292, 0.8503333330154419, 0.8489999771118164, 0.8543333411216736, 0.8566666841506958, 0.859333336353302, 0.8633333444595337, 0.8640000224113464, 0.8586666584014893, 0.8619999885559082, 0.862333357334137, 0.8666666746139526, 0.8673333525657654, 0.8640000224113464, 0.8683333396911621, 0.871666669845581, 0.8666666746139526, 0.871666669845581, 0.8693333268165588, 0.8740000128746033, 0.8733333349227905, 0.8726666569709778, 0.875, 0.8743333220481873, 0.8776666522026062, 0.8759999871253967, 0.8793333172798157, 0.878000020980835, 0.8793333172798157, 0.8809999823570251, 0.8809999823570251, 0.8796666860580444, 0.8813333511352539, 0.8793333172798157, 0.8809999823570251, 0.8799999952316284, 0.8833333253860474, 0.8806666731834412, 0.8846666812896729, 0.8849999904632568, 0.8849999904632568, 0.8880000114440918, 0.8863333463668823, 0.8826666474342346, 0.8866666555404663, 0.8836666941642761, 0.8883333206176758, 0.8870000243186951, 0.8883333206176758, 0.887333333492279, 0.8870000243186951, 0.890999972820282, 0.8939999938011169, 0.890666663646698, 0.8926666378974915, 0.8896666765213013, 0.890999972820282, 0.8916666507720947]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [67, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 3, 9, 4, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 19, 11, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [20, 52], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 50], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [0, 4, 4, 1, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 2, 1]], "fitness": -0.09285714477300644, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 11, 6, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, grad)), alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3090431690216064, 2.3101325035095215, 2.3098013401031494, 2.309995174407959, 2.3099241256713867, 2.310579538345337], "accuracy": [0.09457138925790787, 0.09576013684272766, 0.08691058307886124, 0.08796724677085876, 0.09457138925790787, 0.09100515395402908], "val_loss": [2.3093531131744385, 2.3093531131744385, 2.3093531131744385, 2.3093531131744385, 2.3093531131744385, 2.3093531131744385], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 3, 2, 4, 8, 4, 9, 4, 3, 7, 3, 5, 5], [0, 1, 0, 2, 0, 0, 0, 3, 1, 1, 1], [39, 39, 99, 93, 72, 84], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [88, 58, 19, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 28, 17, 11, 6, 7, 4, 3, 2, 2, 1, 1, 1, 18, 9, 9, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), grad), alpha)), tf.math.multiply(tf.math.square(alpha), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [2.3088057041168213, 2.3087098598480225, 2.309919595718384, 2.3097074031829834, 2.3109042644500732, 2.310736656188965], "accuracy": [0.0948355570435524, 0.09919429570436478, 0.09351472556591034, 0.09840179979801178, 0.09272222965955734, 0.09087307006120682], "val_loss": [2.308896064758301, 2.308896064758301, 2.308896064758301, 2.308896064758301, 2.308896064758301, 2.308896064758301], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 1, 0], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 2, 3, 8, 3, 5, 2, 9, 2, 6, 9, 2, 8], [0, 2, 0, 3, 4, 0, 0], [16, 83, 19, 11, 12, 90], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [1, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08857142925262451, "mapping_values": [1, 12, 7, 5, 2, 20, 13, 7, 6, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3097076416015625, 2.3112716674804688, 2.310417652130127, 2.310141086578369, 2.3103079795837402, 2.3104846477508545], "accuracy": [0.09391097724437714, 0.09232597798109055, 0.09113723784685135, 0.0886276587843895, 0.09298639744520187, 0.09747721254825592], "val_loss": [2.3084514141082764, 2.3084182739257812, 2.3083996772766113, 2.3083879947662354, 2.308379650115967, 2.30837345123291], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]