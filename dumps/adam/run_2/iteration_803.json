[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238452434539795, 1.8675061464309692, 1.4049327373504639, 1.1021161079406738, 0.9407080411911011, 0.8469270467758179, 0.7805481553077698, 0.724736750125885, 0.6885574460029602, 0.6628749966621399, 0.6297563910484314, 0.6056496500968933, 0.58827143907547, 0.5690708756446838, 0.5537155270576477, 0.5420441627502441, 0.5315752625465393, 0.5195335745811462, 0.5027403235435486, 0.4891739785671234, 0.4815083146095276, 0.480105996131897, 0.46138855814933777, 0.462627112865448, 0.4511951506137848, 0.4497641623020172, 0.43130096793174744, 0.43102148175239563, 0.4235180616378784, 0.41504138708114624, 0.4090660512447357, 0.40354353189468384, 0.3974018096923828, 0.39057737588882446, 0.38216978311538696, 0.3775624930858612, 0.3708896040916443, 0.3701658248901367, 0.3594585955142975, 0.353996604681015, 0.3573378622531891, 0.34772154688835144, 0.33620184659957886, 0.33671438694000244, 0.3357868492603302, 0.32193318009376526, 0.3245452344417572, 0.31729355454444885, 0.30753085017204285, 0.3142384886741638, 0.30511683225631714, 0.29362913966178894, 0.29271677136421204, 0.2934962809085846, 0.2865309417247772, 0.28851553797721863, 0.2766968905925751, 0.27499252557754517, 0.2744581997394562, 0.2720913887023926, 0.2660825848579407, 0.2645752727985382, 0.2576243579387665, 0.2543627917766571, 0.25483793020248413, 0.25085315108299255, 0.23965531587600708, 0.23599524796009064, 0.23205514252185822, 0.2344130128622055, 0.22359664738178253, 0.2206508219242096, 0.21641221642494202, 0.21478340029716492, 0.21295440196990967, 0.21981443464756012, 0.2092132270336151], "accuracy": [0.27063795924186707, 0.49425438046455383, 0.5550125241279602, 0.6136573553085327, 0.6654338836669922, 0.7030775547027588, 0.7148329019546509, 0.7376832365989685, 0.7494386434555054, 0.7565711140632629, 0.7725531458854675, 0.78113853931427, 0.7862898111343384, 0.8014793395996094, 0.8004226684570312, 0.807158887386322, 0.8148196935653687, 0.8137630224227905, 0.8222163319587708, 0.8302733898162842, 0.8313300609588623, 0.8310658931732178, 0.8396512866020203, 0.837141752243042, 0.8453308939933777, 0.8465195894241333, 0.8519350290298462, 0.8492933511734009, 0.8545766472816467, 0.8540483713150024, 0.8562937378883362, 0.8598600029945374, 0.863029956817627, 0.8631620407104492, 0.8642187118530273, 0.8696341514587402, 0.8689737319946289, 0.8693699836730957, 0.871879518032074, 0.8813894987106323, 0.8755778670310974, 0.8759741187095642, 0.8849557638168335, 0.8845595121383667, 0.8840311765670776, 0.889578640460968, 0.8849557638168335, 0.8894465565681458, 0.8943336606025696, 0.8893144726753235, 0.8952582478523254, 0.897899866104126, 0.8961827754974365, 0.8968431949615479, 0.9001452922821045, 0.8986923694610596, 0.9026548862457275, 0.9000132083892822, 0.9030511379241943, 0.9030511379241943, 0.9075419306755066, 0.9066173434257507, 0.9093911051750183, 0.9119006991386414, 0.9103156924247742, 0.9149385690689087, 0.9158631563186646, 0.9182406663894653, 0.9157310724258423, 0.9161273241043091, 0.9249768853187561, 0.9236560463905334, 0.9253731369972229, 0.9241843819618225, 0.9237881302833557, 0.9228635430335999, 0.924448549747467], "val_loss": [2.0417394638061523, 1.520650029182434, 1.0565099716186523, 0.8481935858726501, 0.7598034143447876, 0.7002421021461487, 0.6575125455856323, 0.6234126091003418, 0.5948185920715332, 0.5728632211685181, 0.5553942322731018, 0.5388999581336975, 0.5284088850021362, 0.5222439169883728, 0.5125543475151062, 0.5011782050132751, 0.4898392856121063, 0.4801478683948517, 0.47250986099243164, 0.4599379897117615, 0.4607113301753998, 0.45773494243621826, 0.45378702878952026, 0.44281819462776184, 0.4394996464252472, 0.43484896421432495, 0.43280014395713806, 0.42646825313568115, 0.4208315908908844, 0.41925424337387085, 0.41319921612739563, 0.4105842411518097, 0.4075690507888794, 0.405554860830307, 0.4035431444644928, 0.3998188376426697, 0.39717918634414673, 0.3979223370552063, 0.398750901222229, 0.3923279643058777, 0.3870830535888672, 0.3849889039993286, 0.386425256729126, 0.3891233801841736, 0.3792685568332672, 0.38041529059410095, 0.3761349320411682, 0.37636348605155945, 0.37700405716896057, 0.3731996715068817, 0.36851510405540466, 0.3719198405742645, 0.3722287714481354, 0.37244758009910583, 0.37346401810646057, 0.3672468662261963, 0.36920222640037537, 0.36699244379997253, 0.3666834235191345, 0.3598407804965973, 0.36304405331611633, 0.3646896183490753, 0.36122453212738037, 0.3588635325431824, 0.3588055968284607, 0.35648053884506226, 0.3533819317817688, 0.3569660782814026, 0.35140690207481384, 0.3548262417316437, 0.35717615485191345, 0.3544078767299652, 0.354160875082016, 0.35278844833374023, 0.3540070056915283, 0.35852140188217163, 0.35354357957839966], "val_accuracy": [0.5580000281333923, 0.6489999890327454, 0.6756666898727417, 0.7036666870117188, 0.7239999771118164, 0.7413333058357239, 0.7526666522026062, 0.7710000276565552, 0.7789999842643738, 0.7926666736602783, 0.796999990940094, 0.8026666641235352, 0.8063333630561829, 0.8063333630561829, 0.8103333115577698, 0.8166666626930237, 0.8259999752044678, 0.8293333053588867, 0.8323333263397217, 0.8336666822433472, 0.8396666646003723, 0.8363333344459534, 0.8379999995231628, 0.8389999866485596, 0.8443333506584167, 0.843999981880188, 0.8453333377838135, 0.8500000238418579, 0.8493333458900452, 0.8539999723434448, 0.8543333411216736, 0.8546666502952576, 0.8526666760444641, 0.8566666841506958, 0.8576666712760925, 0.8550000190734863, 0.8586666584014893, 0.8553333282470703, 0.859666645526886, 0.8610000014305115, 0.8610000014305115, 0.8636666536331177, 0.8640000224113464, 0.859000027179718, 0.8650000095367432, 0.8659999966621399, 0.8656666874885559, 0.8629999756813049, 0.8650000095367432, 0.8679999709129333, 0.8683333396911621, 0.8653333187103271, 0.8659999966621399, 0.8613333106040955, 0.8690000176429749, 0.8723333477973938, 0.8696666955947876, 0.8693333268165588, 0.8709999918937683, 0.8713333606719971, 0.8726666569709778, 0.8713333606719971, 0.8726666569709778, 0.875, 0.8696666955947876, 0.875, 0.8769999742507935, 0.8763333559036255, 0.878000020980835, 0.875, 0.8709999918937683, 0.8790000081062317, 0.8736666440963745, 0.8766666650772095, 0.8786666393280029, 0.874666690826416, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 31], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 9, 6, 2], [0, 2, 0, 3, 0], [16, 16, 64, 39], [0, 1], [0], [4], [39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 4, 0, 3, 1, 4, 0], [45, 99, 96, 99, 16, 1]], "fitness": -0.5488571524620056, "mapping_values": [1, 6, 3, 3, 2, 13, 8, 5, 4, 2, 1, 1, 0, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad)), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.0989997386932373, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2681283950805664, 0.17461365461349487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.6634175777435303, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5550000071525574, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 0, 3, 9], [0, 1, 1, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [83, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, alpha), tf.math.add(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 8, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 37, 52, 99, 61, 49]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.sqrt(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 2], [1, 1, 0, 2], [39, 6], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 58, 99, 61, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), alpha)", "other_info": {"loss": [2.309769868850708, 2.310344934463501, 2.3102633953094482, 2.310925245285034, 2.310786724090576, 2.310244560241699], "accuracy": [0.09047681838274002, 0.09298639744520187, 0.0886276587843895, 0.08928807079792023, 0.0878351628780365, 0.09272222965955734], "val_loss": [2.3086884021759033, 2.3086884021759033, 2.3086884021759033, 2.3086884021759033, 2.3086884021759033, 2.3086884021759033], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]