[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222820997238159, 1.8650850057601929, 1.3969630002975464, 1.0894358158111572, 0.9366998672485352, 0.8360902667045593, 0.7701194882392883, 0.709517240524292, 0.6849685311317444, 0.6545320153236389, 0.621120274066925, 0.5997431874275208, 0.5724648833274841, 0.5615236759185791, 0.5517687201499939, 0.5417925119400024, 0.523685872554779, 0.5064932107925415, 0.4967000484466553, 0.48403048515319824, 0.47962871193885803, 0.4747590124607086, 0.46167275309562683, 0.44501712918281555, 0.44516104459762573, 0.4352858066558838, 0.419123113155365, 0.4191897213459015, 0.41860339045524597, 0.41163569688796997, 0.3981856107711792, 0.3951666057109833, 0.3900440037250519, 0.383667528629303, 0.3731083571910858, 0.3669905364513397, 0.3609187602996826, 0.35627445578575134, 0.3560788333415985, 0.34722569584846497], "accuracy": [0.28199708461761475, 0.49214106798171997, 0.5669000148773193, 0.6219785809516907, 0.6633205413818359, 0.7033417224884033, 0.7209087014198303, 0.739928662776947, 0.7478536367416382, 0.7567031979560852, 0.7714964747428894, 0.7821952104568481, 0.7902522683143616, 0.7969884872436523, 0.7997622489929199, 0.8024039268493652, 0.8094043135643005, 0.8182538747787476, 0.8228767514228821, 0.8234050869941711, 0.8285563588142395, 0.8302733898162842, 0.8372738361358643, 0.8379341959953308, 0.842028796672821, 0.8462554216384888, 0.8487650156021118, 0.852859616279602, 0.8524633646011353, 0.8535200357437134, 0.8573504090309143, 0.8599920868873596, 0.8621054291725159, 0.8618412613868713, 0.8681812286376953, 0.871879518032074, 0.8712190985679626, 0.8741249442100525, 0.8720116019248962, 0.8753136992454529], "val_loss": [2.039357900619507, 1.518686056137085, 1.0471832752227783, 0.8494892716407776, 0.7563981413841248, 0.7029759287834167, 0.6614062786102295, 0.6258901953697205, 0.6021665334701538, 0.5760621428489685, 0.557793378829956, 0.5408616662025452, 0.5217052698135376, 0.5154356956481934, 0.5050062537193298, 0.5007489323616028, 0.48016470670700073, 0.4712764620780945, 0.4649684727191925, 0.45655208826065063, 0.45405644178390503, 0.44675588607788086, 0.4378763735294342, 0.43369579315185547, 0.42700353264808655, 0.4225996136665344, 0.4174046218395233, 0.41172948479652405, 0.40955936908721924, 0.4060439169406891, 0.40538540482521057, 0.4001844823360443, 0.3972312808036804, 0.3926512897014618, 0.3887762129306793, 0.389375239610672, 0.38598865270614624, 0.38183578848838806, 0.38153019547462463, 0.38103461265563965], "val_accuracy": [0.5426666736602783, 0.6399999856948853, 0.6790000200271606, 0.7020000219345093, 0.7256666421890259, 0.7443333268165588, 0.7586666941642761, 0.7693333625793457, 0.7753333449363708, 0.7916666865348816, 0.796999990940094, 0.8043333292007446, 0.8146666884422302, 0.8186666369438171, 0.8169999718666077, 0.8169999718666077, 0.8346666693687439, 0.8330000042915344, 0.8399999737739563, 0.8410000205039978, 0.8420000076293945, 0.8420000076293945, 0.8493333458900452, 0.8519999980926514, 0.8483333587646484, 0.8476666808128357, 0.8566666841506958, 0.8586666584014893, 0.8583333492279053, 0.8606666922569275, 0.859333336353302, 0.862666666507721, 0.8636666536331177, 0.8659999966621399, 0.8690000176429749, 0.8666666746139526, 0.8643333315849304, 0.8646666407585144, 0.8679999709129333, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 16], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8, 8], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 1, 0, 1, 1, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.sqrt(beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 2, 3, 2, 3, 1, 3, 0, 4, 1, 4, 9, 3, 5, 9], [0, 1, 2, 2, 1, 1, 2, 3, 0], [39, 39, 20, 60], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 4], [16, 2, 96, 99, 11, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 15, 9, 4, 8, 5, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.math.negative(grad)), tf.math.pow(alpha, tf.math.subtract(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad))), tf.math.multiply(grad, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 8, 6, 2, 9, 4, 2, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 60, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 4, 2, 1, 2, 1, 1, 1, 20, 12, 8, 6], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.sqrt(alpha))))))", "other_info": {"loss": [2.303478717803955, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5, 1], [0, 2, 0, 3, 2, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [4, 0, 0, 4, 0, 0, 4, 1, 1, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.09971428662538528, "mapping_values": [1, 9, 5, 4, 1, 13, 7, 6, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))))", "other_info": {"loss": [2.3098437786102295, 2.3125178813934326, 2.314142942428589, 2.3152339458465576, 2.316929578781128, 2.3193655014038086, 2.3207945823669434, 2.321791172027588, 2.325296640396118, 2.3254988193511963, 2.328526735305786, 2.32958984375, 2.332185745239258, 2.333782434463501, 2.3358426094055176, 2.3392045497894287, 2.340608835220337, 2.343313217163086, 2.3438360691070557, 2.3477091789245605, 2.3488895893096924, 2.351426124572754, 2.3552968502044678, 2.3575034141540527, 2.3585684299468994, 2.3618128299713135, 2.3672516345977783, 2.3677713871002197, 2.36960506439209, 2.3722238540649414, 2.375159978866577, 2.3799309730529785, 2.383347272872925, 2.3880062103271484, 2.391871690750122, 2.3954458236694336, 2.3997671604156494, 2.4041848182678223, 2.4057657718658447, 2.4094393253326416, 2.4144155979156494, 2.422544002532959, 2.427384853363037, 2.4307944774627686, 2.4370884895324707, 2.4445366859436035, 2.4498236179351807, 2.456193208694458, 2.464655637741089, 2.4694108963012695, 2.478893280029297, 2.49161434173584, 2.4995157718658447], "accuracy": [0.09721305221319199, 0.08334434032440186, 0.08638224750757217, 0.08149518072605133, 0.08492933213710785, 0.08466517180204391, 0.08440100401639938, 0.08321225643157959, 0.07634394615888596, 0.07713644206523895, 0.07792893797159195, 0.0754193663597107, 0.07674019038677216, 0.07528728246688843, 0.07594769448041916, 0.07053229212760925, 0.07251353561878204, 0.07357019931077957, 0.07092854380607605, 0.07634394615888596, 0.0758156105875969, 0.07211729139089584, 0.06828688085079193, 0.07013604789972305, 0.07475894689559937, 0.07172103971242905, 0.068022720515728, 0.0746268630027771, 0.07330603897571564, 0.07806102186441422, 0.07119271159172058, 0.06921146810054779, 0.07475894689559937, 0.07145687192678452, 0.07040020823478699, 0.07449477910995483, 0.07092854380607605, 0.07119271159172058, 0.07066437602043152, 0.07185312360525131, 0.07409853488206863, 0.07357019931077957, 0.07211729139089584, 0.0742306187748909, 0.07568352669477463, 0.07449477910995483, 0.07528728246688843, 0.07594769448041916, 0.07674019038677216, 0.07555144280195236, 0.07700435817241669, 0.0754193663597107, 0.07792893797159195], "val_loss": [2.3108112812042236, 2.3126237392425537, 2.314471960067749, 2.31630802154541, 2.318183660507202, 2.3200948238372803, 2.3220152854919434, 2.3239564895629883, 2.325941801071167, 2.3279125690460205, 2.3299331665039062, 2.3320014476776123, 2.334066152572632, 2.3361854553222656, 2.3383431434631348, 2.340566635131836, 2.342801332473755, 2.34509015083313, 2.3474109172821045, 2.3497824668884277, 2.352217435836792, 2.354703664779663, 2.3572800159454346, 2.359891176223755, 2.3625669479370117, 2.365293264389038, 2.3681869506835938, 2.3711278438568115, 2.3741164207458496, 2.377213478088379, 2.380368232727051, 2.383702516555786, 2.3871216773986816, 2.3907113075256348, 2.3944551944732666, 2.3983137607574463, 2.4023489952087402, 2.406555652618408, 2.4109268188476562, 2.4154322147369385, 2.4201269149780273, 2.4251620769500732, 2.430387258529663, 2.4358818531036377, 2.441671133041382, 2.4478516578674316, 2.4543070793151855, 2.4611434936523438, 2.4684488773345947, 2.4761970043182373, 2.4845008850097656, 2.493497133255005, 2.5031628608703613], "val_accuracy": [0.08733333647251129, 0.08633333444595337, 0.0860000029206276, 0.08666666597127914, 0.08766666799783707, 0.08766666799783707, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08833333104848862, 0.08866667002439499, 0.08900000154972076, 0.09000000357627869, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09033333510160446, 0.09099999815225601, 0.09066666662693024, 0.09166666865348816, 0.09233333170413971, 0.09200000017881393, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09266666322946548, 0.09300000220537186, 0.09300000220537186, 0.09333333373069763, 0.09333333373069763, 0.09366666525602341, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09433333575725555, 0.09466666728258133, 0.09466666728258133, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.09533333033323288, 0.09533333033323288, 0.09566666930913925, 0.09600000083446503, 0.09666666388511658, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]