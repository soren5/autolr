[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2240653038024902, 1.8707908391952515, 1.4005138874053955, 1.1001993417739868, 0.9477531909942627, 0.838967502117157, 0.7810404896736145, 0.7389895915985107, 0.6913326978683472, 0.6648432612419128, 0.6504512429237366, 0.6178522109985352, 0.6072387099266052, 0.5839203596115112, 0.5641985535621643, 0.553048849105835, 0.5429518818855286, 0.5279821753501892, 0.5156735181808472, 0.5031889081001282, 0.48849621415138245, 0.4910781681537628, 0.4781791567802429, 0.4649825990200043, 0.45835116505622864, 0.4468810558319092, 0.4458307921886444, 0.4384544789791107, 0.42627790570259094, 0.42642468214035034, 0.4190967082977295, 0.4112268388271332, 0.40747958421707153, 0.40155813097953796, 0.3876761496067047, 0.3838530480861664, 0.37984275817871094, 0.37061911821365356, 0.3713272511959076, 0.36732974648475647, 0.3632351756095886, 0.35992056131362915, 0.35166135430336, 0.3443136513233185, 0.3393530547618866, 0.3345341384410858, 0.3384742736816406, 0.32454854249954224, 0.3253798186779022, 0.31696033477783203, 0.31412091851234436, 0.3062436282634735, 0.3063091039657593, 0.3024679720401764, 0.29652169346809387, 0.2917774021625519, 0.2928973138332367, 0.286425918340683, 0.2880772352218628, 0.27705398201942444, 0.2739504873752594, 0.26480600237846375, 0.26218289136886597, 0.26280033588409424, 0.2565251290798187, 0.25249847769737244, 0.2609725296497345, 0.25014498829841614, 0.24617768824100494], "accuracy": [0.27116629481315613, 0.4859331548213959, 0.5655791759490967, 0.6144498586654663, 0.6647734642028809, 0.6975300312042236, 0.7189275026321411, 0.7285695672035217, 0.7467969655990601, 0.7597411274909973, 0.763439416885376, 0.7753269076347351, 0.7798177003860474, 0.7874785661697388, 0.7960638999938965, 0.7987055778503418, 0.8016114234924316, 0.8088759779930115, 0.8146876096725464, 0.8195747137069702, 0.8261788487434387, 0.8248580098152161, 0.8337075710296631, 0.8334434032440186, 0.8397833704948425, 0.8424250483512878, 0.8397833704948425, 0.8446704745292664, 0.8462554216384888, 0.8486329317092896, 0.8510104417800903, 0.8520671129226685, 0.8527275323867798, 0.8568220734596252, 0.8613129258155823, 0.86553955078125, 0.8658037185668945, 0.8702945709228516, 0.8688416481018066, 0.8676528930664062, 0.8676528930664062, 0.8746532797813416, 0.8706908226013184, 0.878351628780365, 0.8796724081039429, 0.8825782537460327, 0.8819178342819214, 0.883238673210144, 0.8836349248886108, 0.8829745054244995, 0.8873332738876343, 0.8910315632820129, 0.8914278149604797, 0.889578640460968, 0.8945978283882141, 0.8956544995307922, 0.8945978283882141, 0.89552241563797, 0.8967111110687256, 0.9001452922821045, 0.9045040011405945, 0.9055606722831726, 0.9017302989959717, 0.9052965044975281, 0.9089948534965515, 0.9083344340324402, 0.9093911051750183, 0.9096552729606628, 0.913089394569397], "val_loss": [2.0436830520629883, 1.5251530408859253, 1.0625654458999634, 0.8519353866577148, 0.7647684216499329, 0.7027919292449951, 0.6573296785354614, 0.6309675574302673, 0.5932512283325195, 0.5777317881584167, 0.5653566718101501, 0.5431583523750305, 0.5256314873695374, 0.514589250087738, 0.5050023794174194, 0.4916999936103821, 0.48964306712150574, 0.47727879881858826, 0.46921876072883606, 0.45747509598731995, 0.45235100388526917, 0.44879376888275146, 0.44062894582748413, 0.43471261858940125, 0.4289102256298065, 0.4228362739086151, 0.42385193705558777, 0.4221760332584381, 0.41803157329559326, 0.40611982345581055, 0.40587764978408813, 0.4069978892803192, 0.4010865390300751, 0.3940258026123047, 0.3963448405265808, 0.3919235169887543, 0.39308154582977295, 0.3823857307434082, 0.3826617896556854, 0.38173356652259827, 0.3842557370662689, 0.3771911561489105, 0.3730640113353729, 0.3767579197883606, 0.36847755312919617, 0.3724209666252136, 0.3733999729156494, 0.37161076068878174, 0.3660041093826294, 0.3638518750667572, 0.365481972694397, 0.36348021030426025, 0.357758492231369, 0.367927610874176, 0.35994768142700195, 0.35716351866722107, 0.3625243306159973, 0.35437971353530884, 0.35890087485313416, 0.3547365665435791, 0.3561646640300751, 0.3548433780670166, 0.3564252555370331, 0.35647252202033997, 0.35474175214767456, 0.35771143436431885, 0.34986230731010437, 0.3527722954750061, 0.35609784722328186], "val_accuracy": [0.5176666378974915, 0.6576666831970215, 0.6669999957084656, 0.7113333344459534, 0.7329999804496765, 0.746666669845581, 0.7599999904632568, 0.7616666555404663, 0.7850000262260437, 0.7826666831970215, 0.7876666784286499, 0.7983333468437195, 0.8086666464805603, 0.8169999718666077, 0.812666654586792, 0.8233333230018616, 0.8166666626930237, 0.8316666483879089, 0.8330000042915344, 0.8346666693687439, 0.8389999866485596, 0.8403333425521851, 0.8370000123977661, 0.843666672706604, 0.846666693687439, 0.8476666808128357, 0.8496666550636292, 0.8486666679382324, 0.8493333458900452, 0.8560000061988831, 0.8566666841506958, 0.8573333621025085, 0.8550000190734863, 0.8586666584014893, 0.859666645526886, 0.862666666507721, 0.859000027179718, 0.8629999756813049, 0.8646666407585144, 0.8659999966621399, 0.8629999756813049, 0.8650000095367432, 0.8679999709129333, 0.8663333058357239, 0.8693333268165588, 0.8690000176429749, 0.8676666617393494, 0.8690000176429749, 0.8656666874885559, 0.8723333477973938, 0.8709999918937683, 0.8703333139419556, 0.8726666569709778, 0.8706666827201843, 0.8693333268165588, 0.8723333477973938, 0.8709999918937683, 0.8743333220481873, 0.8723333477973938, 0.8736666440963745, 0.8733333349227905, 0.875, 0.875333309173584, 0.8776666522026062, 0.875, 0.8776666522026062, 0.8763333559036255, 0.8740000128746033, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [3, 0, 0, 3], [78, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 4, 0], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 8, 5, 3, 2, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)))), alpha))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 4, 1, 3, 3, 0, 3, 1, 2, 0], [18, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 2, 1, 1, 1, 21, 11, 10, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, grad), tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(sigma, sigma))), tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 3, 9, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 4, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 9, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [3, 2, 3, 0, 3, 3, 9], [0, 2, 0, 2, 0], [37, 39, 21, 87], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [6, 3, 4, 6, 8, 1, 4, 1, 3, 2, 8, 5, 3, 3, 0, 7, 4, 3, 3, 9, 3, 8, 0, 8, 5, 9, 3, 9, 0, 1, 1, 5, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 4, 7, 7, 4, 4], [16, 99, 96, 99, 61, 1, 12, 73, 64, 88]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.square(alpha))))))), beta), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), tf.math.sqrt(grad))), tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.subtract(tf.math.subtract(grad, grad), tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 12, 7, 5, 4, 2, 1, 1, 1, 2, 1, 1, 1, 49, 33, 16, 10], "tree_depth": 25}]