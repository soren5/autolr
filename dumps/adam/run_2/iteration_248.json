[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2263104915618896, 1.8635873794555664, 1.3850115537643433, 1.09027898311615, 0.9308066964149475, 0.8374701738357544, 0.7748795747756958, 0.7244716882705688, 0.6803468465805054, 0.6566000580787659, 0.6379275918006897, 0.6170966029167175, 0.5940912365913391, 0.5746504068374634, 0.5658765435218811, 0.5460633635520935, 0.5248836278915405, 0.5215489268302917, 0.5012627243995667, 0.501011848449707, 0.4862462878227234, 0.48136553168296814, 0.47069835662841797, 0.4611044228076935, 0.4559018313884735, 0.44126859307289124, 0.4398990273475647, 0.4280426502227783, 0.41900020837783813, 0.4089468717575073, 0.3960655927658081, 0.3979021906852722, 0.3959827423095703, 0.3887697756290436, 0.3838796317577362, 0.3798920810222626, 0.3717647194862366, 0.36756664514541626, 0.3674071729183197, 0.35912108421325684, 0.34940266609191895, 0.3456587493419647, 0.34187614917755127, 0.33654412627220154, 0.3250146210193634, 0.3248731791973114, 0.32368555665016174, 0.3172675371170044, 0.31311705708503723, 0.2985687255859375, 0.29611003398895264, 0.2931627929210663, 0.2977560758590698, 0.2919836938381195, 0.2800355553627014, 0.27843794226646423, 0.26978597044944763, 0.26909223198890686, 0.26791736483573914, 0.26585230231285095, 0.2610287666320801, 0.2592769265174866, 0.25095894932746887, 0.24904745817184448, 0.24383136630058289, 0.24556338787078857, 0.23774252831935883, 0.23380494117736816, 0.22808852791786194, 0.2305326908826828, 0.22241440415382385, 0.22244594991207123], "accuracy": [0.2657508850097656, 0.5011227130889893, 0.5764099955558777, 0.6147140264511108, 0.6629242897033691, 0.6985867023468018, 0.7209087014198303, 0.7395324110984802, 0.7532690763473511, 0.7625148296356201, 0.7692511081695557, 0.7759873270988464, 0.785629391670227, 0.7898560166358948, 0.7956677079200745, 0.8070268034934998, 0.8129705190658569, 0.813498854637146, 0.8198388814926147, 0.8224804997444153, 0.8234050869941711, 0.8274996876716614, 0.8322546482086182, 0.8370096683502197, 0.8397833704948425, 0.8388587832450867, 0.8411042094230652, 0.8495575189590454, 0.8502179384231567, 0.8535200357437134, 0.8599920868873596, 0.858671247959137, 0.8570862412452698, 0.8578787446022034, 0.8594637513160706, 0.8642187118530273, 0.8663320541381836, 0.8691058158874512, 0.8698983192443848, 0.8704266548156738, 0.8758420348167419, 0.8786157965660095, 0.8742570281028748, 0.8808611631393433, 0.8860124349594116, 0.8838990926742554, 0.8815215826034546, 0.8861445188522339, 0.886672854423523, 0.8899748921394348, 0.8965790271759033, 0.8952582478523254, 0.8930128216743469, 0.8942015767097473, 0.89988112449646, 0.9021265506744385, 0.906749427318573, 0.897899866104126, 0.9060890078544617, 0.9031832218170166, 0.9091269373893738, 0.9063531756401062, 0.9128252267837524, 0.9117686152458191, 0.9133535623550415, 0.9093911051750183, 0.9133535623550415, 0.9161273241043091, 0.9161273241043091, 0.9162594079971313, 0.9199577569961548, 0.9212785363197327], "val_loss": [2.042139768600464, 1.512467622756958, 1.0417296886444092, 0.8321261405944824, 0.747983455657959, 0.689707338809967, 0.6436509490013123, 0.6132125854492188, 0.5829548239707947, 0.5586852431297302, 0.543481707572937, 0.5245836973190308, 0.5127643942832947, 0.49712133407592773, 0.4841763377189636, 0.4775894284248352, 0.46250951290130615, 0.4534856081008911, 0.44438436627388, 0.43845394253730774, 0.43609508872032166, 0.42450928688049316, 0.4208073616027832, 0.41278937458992004, 0.41399815678596497, 0.40426358580589294, 0.40202710032463074, 0.4001034200191498, 0.3930608630180359, 0.3884701728820801, 0.38762110471725464, 0.3834078907966614, 0.381130576133728, 0.37844428420066833, 0.3774004578590393, 0.37594035267829895, 0.3709811568260193, 0.3688620626926422, 0.36820727586746216, 0.364431232213974, 0.36334213614463806, 0.357222318649292, 0.35529032349586487, 0.35655438899993896, 0.3511608839035034, 0.34967485070228577, 0.35477954149246216, 0.3499867022037506, 0.3453690707683563, 0.34422120451927185, 0.3441111743450165, 0.3415968418121338, 0.34007740020751953, 0.3415176272392273, 0.3402976989746094, 0.33629199862480164, 0.3398922085762024, 0.3402526378631592, 0.3422043025493622, 0.33518144488334656, 0.33613547682762146, 0.33275991678237915, 0.33445852994918823, 0.3308637738227844, 0.3317742347717285, 0.3283977806568146, 0.33297353982925415, 0.3314986228942871, 0.3338466286659241, 0.32732975482940674, 0.3345584571361542, 0.3297312557697296], "val_accuracy": [0.527999997138977, 0.6546666622161865, 0.6773333549499512, 0.7143333554267883, 0.7300000190734863, 0.7413333058357239, 0.7536666393280029, 0.7636666893959045, 0.7793333530426025, 0.7863333225250244, 0.7990000247955322, 0.8063333630561829, 0.8090000152587891, 0.8163333535194397, 0.8243333101272583, 0.82833331823349, 0.8316666483879089, 0.8343333601951599, 0.8383333086967468, 0.840666651725769, 0.8416666388511658, 0.8453333377838135, 0.8450000286102295, 0.8479999899864197, 0.8496666550636292, 0.8513333201408386, 0.8513333201408386, 0.8560000061988831, 0.8543333411216736, 0.859666645526886, 0.856333315372467, 0.8586666584014893, 0.8616666793823242, 0.8586666584014893, 0.859000027179718, 0.8633333444595337, 0.8643333315849304, 0.8616666793823242, 0.8633333444595337, 0.8669999837875366, 0.8663333058357239, 0.8683333396911621, 0.871666669845581, 0.8696666955947876, 0.8706666827201843, 0.8690000176429749, 0.8693333268165588, 0.8730000257492065, 0.8740000128746033, 0.8743333220481873, 0.8763333559036255, 0.8773333430290222, 0.875333309173584, 0.8733333349227905, 0.8759999871253967, 0.8806666731834412, 0.8763333559036255, 0.8766666650772095, 0.878333330154419, 0.8813333511352539, 0.8799999952316284, 0.8820000290870667, 0.8796666860580444, 0.8826666474342346, 0.8813333511352539, 0.8826666474342346, 0.8843333125114441, 0.8830000162124634, 0.8796666860580444, 0.8833333253860474, 0.8793333172798157, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 17], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [73], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [6, 3, 6, 6, 8, 3, 4, 1, 5, 2, 8, 4, 2, 0, 0, 6, 5, 7, 6, 4, 6, 6, 3, 3, 1, 8, 8], [0, 4, 0, 3, 0, 3, 3, 1, 2, 0, 4, 0, 4, 1, 7, 1, 4, 5, 6, 2], [16, 99, 96, 99, 77, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 0, 2, 1, 1, 1, 47, 27, 20, 5], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(beta)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(grad), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.pow(sigma, tf.math.add(alpha, beta))), tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(grad))))), tf.math.add(tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, grad), alpha), tf.math.subtract(grad, tf.math.sqrt(grad))), grad))), tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [14, 16, 7], [0, 1, 0, 0, 1, 1], [4, 0, 2], [0, 3, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 3, 6, 3, 3, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.negative(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [4, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [9, 3, 6, 2, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [59, 99, 96, 99, 61, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036160469055176, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 1], [96, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 4], [16, 65, 4, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 13, 7, 6, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3115222454071045, 2.3101115226745605, 2.3096537590026855, 2.310823440551758, 2.310708999633789, 2.311189651489258], "accuracy": [0.08809932321310043, 0.09034473448991776, 0.08902391046285629, 0.09087307006120682, 0.09509972482919693, 0.09642054885625839], "val_loss": [2.3089749813079834, 2.3089683055877686, 2.308962345123291, 2.3089561462402344, 2.3089494705200195, 2.308943033218384], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09200000017881393]}}]