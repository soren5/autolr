[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218408584594727, 1.8673683404922485, 1.3883206844329834, 1.0860650539398193, 0.9212484955787659, 0.8274204730987549, 0.7609474062919617, 0.713394284248352, 0.6843510866165161, 0.6520055532455444, 0.6201840043067932, 0.6036330461502075, 0.584424614906311, 0.5704463124275208, 0.5504078269004822, 0.5344928503036499, 0.5267500281333923, 0.5125886797904968, 0.5070359706878662, 0.49728918075561523, 0.4822373688220978, 0.4713984727859497, 0.4632749557495117, 0.45191529393196106, 0.450359582901001, 0.44394999742507935, 0.43148189783096313, 0.4308212399482727, 0.4182594418525696, 0.4053553640842438, 0.41029468178749084, 0.3991692364215851, 0.3892149031162262, 0.391496479511261, 0.38391193747520447, 0.3794413208961487, 0.36850494146347046, 0.3620118796825409, 0.3553360104560852, 0.352146714925766, 0.34817880392074585, 0.3526532053947449, 0.3376489281654358, 0.341297447681427, 0.33803051710128784, 0.32442599534988403, 0.3282727003097534, 0.32085075974464417, 0.3155919909477234, 0.3084089159965515, 0.3093881607055664, 0.3045538067817688, 0.3017042875289917, 0.29197368025779724, 0.2841176688671112, 0.28863754868507385, 0.2822125256061554, 0.2783478796482086, 0.27662643790245056, 0.27501681447029114, 0.2697691321372986, 0.26346516609191895, 0.26722973585128784, 0.25539249181747437, 0.25995999574661255, 0.2517012357711792, 0.24339281022548676, 0.24257737398147583, 0.23957973718643188, 0.23888348042964935, 0.2321300208568573, 0.2337382733821869, 0.22603370249271393, 0.2234019786119461, 0.22122913599014282, 0.22218859195709229, 0.2179436832666397, 0.21063637733459473, 0.21454590559005737, 0.20891396701335907, 0.1968376338481903, 0.20241446793079376, 0.19623048603534698, 0.1941537857055664, 0.18681849539279938, 0.19632543623447418, 0.19230100512504578, 0.181091770529747], "accuracy": [0.2794875204563141, 0.4877823293209076, 0.5737683176994324, 0.6252806782722473, 0.674679696559906, 0.7041342258453369, 0.7277770638465881, 0.7436270117759705, 0.7503632307052612, 0.7680623531341553, 0.77677983045578, 0.7802139520645142, 0.783119797706604, 0.7977809906005859, 0.8035926818847656, 0.8124422430992126, 0.8127063512802124, 0.8148196935653687, 0.8201030492782593, 0.8236692547798157, 0.8325188159942627, 0.8322546482086182, 0.8366134166717529, 0.839519202709198, 0.8396512866020203, 0.8413683772087097, 0.8486329317092896, 0.8470479249954224, 0.8533879518508911, 0.8564258217811584, 0.8570862412452698, 0.8622375130653381, 0.8610487580299377, 0.8610487580299377, 0.86553955078125, 0.8651432991027832, 0.8702945709228516, 0.8758420348167419, 0.8717474341392517, 0.8739928603172302, 0.8787478804588318, 0.8766345381736755, 0.8816536664962769, 0.8794082403182983, 0.8796724081039429, 0.8849557638168335, 0.8831065893173218, 0.8874653577804565, 0.8864086866378784, 0.8897107243537903, 0.8870691061019897, 0.8908994793891907, 0.8930128216743469, 0.8948619961738586, 0.9010698795318604, 0.89552241563797, 0.9006736278533936, 0.902390718460083, 0.9038436412811279, 0.9005415439605713, 0.9038436412811279, 0.9078060984611511, 0.9071456789970398, 0.9070135951042175, 0.9078060984611511, 0.9100515246391296, 0.9133535623550415, 0.9132214784622192, 0.9152027368545532, 0.917580246925354, 0.9173160791397095, 0.9149385690689087, 0.9224672913551331, 0.920089840888977, 0.9235239624977112, 0.9211464524269104, 0.9231277108192444, 0.9224672913551331, 0.9203540086746216, 0.9252410531044006, 0.9306564331054688, 0.9286752343177795, 0.9297318458557129, 0.9326376914978027, 0.9340906143188477, 0.9270902276039124, 0.9351472854614258, 0.935279369354248], "val_loss": [2.036958694458008, 1.5029412508010864, 1.031322956085205, 0.8260842561721802, 0.741279125213623, 0.6907783150672913, 0.6529949903488159, 0.618314266204834, 0.6118663549423218, 0.5797596573829651, 0.562055230140686, 0.5445016026496887, 0.5404651761054993, 0.5203510522842407, 0.5157777070999146, 0.5059391856193542, 0.4977763593196869, 0.48719221353530884, 0.4795578718185425, 0.4740241765975952, 0.4618604779243469, 0.45818671584129333, 0.45265907049179077, 0.4542718827724457, 0.44082388281822205, 0.43568360805511475, 0.4317583441734314, 0.4369248151779175, 0.4246937930583954, 0.4244788885116577, 0.4177180528640747, 0.4147509038448334, 0.411052405834198, 0.4084632694721222, 0.41066813468933105, 0.40285953879356384, 0.4017810821533203, 0.3930759131908417, 0.3937344551086426, 0.39515218138694763, 0.3919881284236908, 0.38741907477378845, 0.38949406147003174, 0.389868825674057, 0.380301833152771, 0.38232874870300293, 0.3776872456073761, 0.38145187497138977, 0.3805564343929291, 0.3779016137123108, 0.37716665863990784, 0.37381404638290405, 0.37221312522888184, 0.37154731154441833, 0.3740380108356476, 0.3708081841468811, 0.37707164883613586, 0.3622854948043823, 0.36247706413269043, 0.3671169579029083, 0.3628999888896942, 0.367333322763443, 0.36938127875328064, 0.36054369807243347, 0.36344897747039795, 0.3594580888748169, 0.3595993220806122, 0.361472487449646, 0.35768482089042664, 0.35923826694488525, 0.3545264005661011, 0.35384437441825867, 0.3641349971294403, 0.35641297698020935, 0.35777124762535095, 0.3534650504589081, 0.3587917387485504, 0.3581582307815552, 0.35581737756729126, 0.35508260130882263, 0.35716816782951355, 0.3554920554161072, 0.35999244451522827, 0.3617253303527832, 0.35684943199157715, 0.35898151993751526, 0.35796764492988586, 0.3615773022174835], "val_accuracy": [0.562666654586792, 0.6586666703224182, 0.6806666851043701, 0.7120000123977661, 0.7316666841506958, 0.7429999709129333, 0.7556666731834412, 0.7733333110809326, 0.7713333368301392, 0.7886666655540466, 0.7960000038146973, 0.8046666383743286, 0.8163333535194397, 0.8180000185966492, 0.8153333067893982, 0.8196666836738586, 0.8259999752044678, 0.8303333520889282, 0.8336666822433472, 0.8339999914169312, 0.8370000123977661, 0.8386666774749756, 0.8386666774749756, 0.8426666855812073, 0.8446666598320007, 0.846666693687439, 0.8523333072662354, 0.846666693687439, 0.846666693687439, 0.8476666808128357, 0.8536666631698608, 0.8546666502952576, 0.8536666631698608, 0.856333315372467, 0.8556666374206543, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8619999885559082, 0.8573333621025085, 0.859000027179718, 0.8613333106040955, 0.859666645526886, 0.862333357334137, 0.8656666874885559, 0.8619999885559082, 0.8656666874885559, 0.8650000095367432, 0.8673333525657654, 0.8666666746139526, 0.8679999709129333, 0.8696666955947876, 0.8663333058357239, 0.8709999918937683, 0.8696666955947876, 0.8706666827201843, 0.871999979019165, 0.871999979019165, 0.8733333349227905, 0.8733333349227905, 0.8756666779518127, 0.8766666650772095, 0.8723333477973938, 0.8796666860580444, 0.8776666522026062, 0.878333330154419, 0.8790000081062317, 0.8809999823570251, 0.8799999952316284, 0.8809999823570251, 0.8799999952316284, 0.878000020980835, 0.8823333382606506, 0.8823333382606506, 0.8823333382606506, 0.8823333382606506, 0.8833333253860474, 0.8809999823570251, 0.8840000033378601, 0.8853333592414856, 0.8856666684150696, 0.8859999775886536, 0.8870000243186951, 0.8840000033378601, 0.8859999775886536, 0.8830000162124634, 0.8866666555404663, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3], [2, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 2, 3, 0, 3, 5, 4], [0, 2, 0, 3, 5, 5], [16, 16], [0, 0], [0, 9], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 1, 8, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 53, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 13, 7, 6, 2, 2, 2, 0, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.pow(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [52525176.0, 251601168.0, 424602624.0, 571883968.0, 692646400.0, 799363712.0], "accuracy": [0.0948355570435524, 0.10315678268671036, 0.1026284471154213, 0.09998679161071777, 0.10276053100824356, 0.10170386731624603], "val_loss": [132870616.0, 278439712.0, 396830432.0, 497720896.0, 586410304.0, 666026304.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6], [0, 1, 0, 2, 0], [32, 39, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 1, 1, 9, 1, 4, 2, 8, 3, 6, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 39, 96, 99, 34, 1, 56, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 2, 1, 0, 1, 1, 25, 15, 10, 8], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.multiply(alpha, beta))), tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [52, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 6, 0, 3, 5], [0, 2, 0, 3], [0, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 1, 3, 6, 4, 1, 4, 3, 4, 2, 6, 4, 4, 9, 4, 2, 7, 9, 4, 2, 7, 0, 7, 0, 1, 9, 8, 8, 1, 9, 7, 3, 1, 3], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0, 4, 2, 2, 7, 3, 6, 6, 5, 4, 5, 1, 3, 6], [16, 99, 96, 99, 99, 1, 2, 70, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 57, 34, 23, 9], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(beta, tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), grad))), grad))))), tf.math.add(tf.math.multiply(grad, tf.math.subtract(grad, alpha)), tf.math.multiply(sigma, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 0, 7, 7, 4, 4], [0, 2, 0, 3, 5, 4, 5, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 6, 8, 5, 6, 4, 5], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0, 2], [16, 99, 96, 99, 34, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(grad, tf.math.pow(grad, grad)), tf.math.pow(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))))), sigma)), tf.math.sqrt(tf.math.square(alpha))), tf.math.divide_no_nan(tf.math.pow(tf.math.square(beta), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 9, 5, 4, 2, 19, 11, 8, 2, 2, 1, 1, 1, 26, 15, 11, 5], "tree_depth": 22}]