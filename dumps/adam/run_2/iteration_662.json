[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8734285831451416, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2204959392547607, 1.8596785068511963, 1.38285231590271, 1.0814822912216187, 0.9249075055122375, 0.8278157711029053, 0.7666053175926208, 0.7220613956451416, 0.6863534450531006, 0.6477894186973572, 0.6256287097930908, 0.6098998785018921, 0.5876802206039429, 0.5745416879653931, 0.5590247511863708, 0.544562816619873, 0.5284097790718079, 0.5125228762626648, 0.5040968060493469, 0.5017302632331848, 0.48125678300857544, 0.48077210783958435, 0.4682713747024536, 0.4561934173107147, 0.4475567638874054, 0.44153204560279846, 0.4257778227329254, 0.43975383043289185, 0.41967159509658813, 0.4081135392189026, 0.4116292893886566, 0.40623873472213745, 0.3945994973182678, 0.3893910050392151, 0.37849682569503784, 0.37739038467407227, 0.37090426683425903, 0.3680373430252075, 0.3641281723976135, 0.35530728101730347, 0.34947723150253296, 0.3510483205318451, 0.33768969774246216, 0.32893121242523193, 0.32936298847198486, 0.32906538248062134, 0.31825754046440125, 0.31835654377937317, 0.3174382448196411, 0.30867260694503784, 0.31465014815330505, 0.30293574929237366, 0.2959596514701843, 0.2975776195526123, 0.2951295077800751, 0.2853200435638428, 0.27794697880744934, 0.27947455644607544, 0.27846503257751465, 0.2659877836704254, 0.2682242691516876, 0.26860544085502625, 0.2598643898963928, 0.26065894961357117, 0.25007686018943787, 0.24586878716945648, 0.24576206505298615, 0.2457130402326584, 0.2415391206741333, 0.2376249134540558, 0.22814272344112396, 0.22769570350646973, 0.22157618403434753, 0.21934427320957184, 0.21863260865211487, 0.21651732921600342, 0.21711403131484985, 0.2111348807811737, 0.20728294551372528, 0.20782971382141113, 0.19907747209072113, 0.20152531564235687], "accuracy": [0.26403382420539856, 0.49570730328559875, 0.5649187564849854, 0.6248844265937805, 0.670320987701416, 0.7051908373832703, 0.7230220437049866, 0.7382115721702576, 0.7466648817062378, 0.7640998363494873, 0.7703077793121338, 0.7777044177055359, 0.7833839654922485, 0.789988100528717, 0.7973847389221191, 0.8005547523498535, 0.8067626357078552, 0.8187822103500366, 0.8202351331710815, 0.8224804997444153, 0.8264430165290833, 0.8251221776008606, 0.8378021121025085, 0.8393871188163757, 0.8392550349235535, 0.843481719493866, 0.8475762605667114, 0.8430854678153992, 0.8565579056739807, 0.8589354157447815, 0.8570862412452698, 0.8623695969581604, 0.8642187118530273, 0.8628978729248047, 0.8709549307823181, 0.8660678863525391, 0.8660678863525391, 0.8702945709228516, 0.8751816153526306, 0.8758420348167419, 0.8791441321372986, 0.8782195448875427, 0.8805969953536987, 0.8868049383163452, 0.8848236799240112, 0.8835028409957886, 0.8857482671737671, 0.8865407705307007, 0.8914278149604797, 0.8926165699958801, 0.8848236799240112, 0.895918607711792, 0.896446943283081, 0.8916919827461243, 0.8919561505317688, 0.8992207050323486, 0.9014661312103271, 0.8989565372467041, 0.8990886211395264, 0.9037115573883057, 0.9050323367118835, 0.9035794734954834, 0.9056927561759949, 0.9084665179252625, 0.9128252267837524, 0.9140139818191528, 0.9108440279960632, 0.9126931428909302, 0.9166556596755981, 0.9145423173904419, 0.9167877435684204, 0.915070652961731, 0.9227314591407776, 0.9208822846412659, 0.919561505317688, 0.9224672913551331, 0.9224672913551331, 0.9228635430335999, 0.9272223114967346, 0.9237881302833557, 0.9289394021034241, 0.926429808139801], "val_loss": [2.0371274948120117, 1.5186586380004883, 1.0527011156082153, 0.840990424156189, 0.7500187754631042, 0.6933393478393555, 0.6484057307243347, 0.6221828460693359, 0.5941216349601746, 0.5673988461494446, 0.5609163045883179, 0.5384897589683533, 0.5247296690940857, 0.5128806829452515, 0.5003764033317566, 0.49072420597076416, 0.4800128638744354, 0.46918684244155884, 0.4640493094921112, 0.4571114480495453, 0.4521121084690094, 0.44055044651031494, 0.4361092150211334, 0.4331723153591156, 0.42821988463401794, 0.420521080493927, 0.41771411895751953, 0.4173155128955841, 0.40637093782424927, 0.40496039390563965, 0.4060037434101105, 0.40061241388320923, 0.3926885724067688, 0.3959023356437683, 0.38828417658805847, 0.3914221227169037, 0.38401082158088684, 0.3871527910232544, 0.3811659812927246, 0.3753565549850464, 0.3750305473804474, 0.37262555956840515, 0.3689405918121338, 0.37053999304771423, 0.36949583888053894, 0.37311238050460815, 0.36156165599823, 0.3636581599712372, 0.3642246127128601, 0.3608722686767578, 0.36290961503982544, 0.3639084994792938, 0.3639797866344452, 0.36124706268310547, 0.357506662607193, 0.3597126007080078, 0.3567063808441162, 0.3569149672985077, 0.3536432981491089, 0.35521361231803894, 0.35715097188949585, 0.3515167534351349, 0.3561249077320099, 0.34891441464424133, 0.35898420214653015, 0.3536894619464874, 0.34893858432769775, 0.3538907766342163, 0.3495277464389801, 0.35207003355026245, 0.3525153398513794, 0.35092252492904663, 0.3544735610485077, 0.3556942939758301, 0.3483516573905945, 0.34791508316993713, 0.35522156953811646, 0.34824812412261963, 0.3591523766517639, 0.3463973104953766, 0.3466635048389435, 0.35292455554008484], "val_accuracy": [0.5443333387374878, 0.6439999938011169, 0.6673333048820496, 0.6970000267028809, 0.7170000076293945, 0.7423333525657654, 0.7523333430290222, 0.7586666941642761, 0.7703333497047424, 0.7853333353996277, 0.7846666574478149, 0.800000011920929, 0.8119999766349792, 0.8109999895095825, 0.8159999847412109, 0.8236666917800903, 0.8266666531562805, 0.8339999914169312, 0.8373333215713501, 0.8393333554267883, 0.8410000205039978, 0.8423333168029785, 0.8476666808128357, 0.8483333587646484, 0.8456666469573975, 0.8546666502952576, 0.8529999852180481, 0.8546666502952576, 0.8576666712760925, 0.8553333282470703, 0.859666645526886, 0.8613333106040955, 0.8656666874885559, 0.8629999756813049, 0.8616666793823242, 0.859666645526886, 0.8646666407585144, 0.8676666617393494, 0.8703333139419556, 0.8650000095367432, 0.8666666746139526, 0.8726666569709778, 0.871666669845581, 0.871666669845581, 0.8706666827201843, 0.8713333606719971, 0.8756666779518127, 0.871999979019165, 0.874666690826416, 0.8730000257492065, 0.8733333349227905, 0.878000020980835, 0.871666669845581, 0.874666690826416, 0.875, 0.8796666860580444, 0.874666690826416, 0.871999979019165, 0.8813333511352539, 0.8803333044052124, 0.8806666731834412, 0.878000020980835, 0.8766666650772095, 0.8823333382606506, 0.8769999742507935, 0.8830000162124634, 0.8830000162124634, 0.8813333511352539, 0.8849999904632568, 0.8866666555404663, 0.8840000033378601, 0.8849999904632568, 0.8833333253860474, 0.8870000243186951, 0.887666642665863, 0.8856666684150696, 0.890999972820282, 0.8896666765213013, 0.8870000243186951, 0.8893333077430725, 0.890666663646698, 0.8893333077430725]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 5, 2, 7, 4], [0, 1, 0, 2, 3, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(grad, grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 28]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031928539276123, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [5, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 0, 15, 8, 7, 4], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 2], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 0, 8, 1, 7, 4, 0, 8], [0, 6, 2, 6, 0], [52, 41], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 14, 9, 5, 2, 23, 12, 11, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.negative(grad), beta), tf.math.sqrt(grad)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), sigma)), tf.math.sqrt(tf.math.multiply(alpha, beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3096566200256348, 2.3099372386932373, 2.310455322265625, 2.3095686435699463, 2.3102405071258545, 2.311267614364624], "accuracy": [0.09192973375320435, 0.09496764093637466, 0.08955223858356476, 0.09192973375320435, 0.08651433140039444, 0.0886276587843895], "val_loss": [2.3085250854492188, 2.3085250854492188, 2.3085250854492188, 2.3085250854492188, 2.3085250854492188, 2.3085250854492188], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]