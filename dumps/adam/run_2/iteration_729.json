[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 98], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [85], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 46, 1]], "fitness": -0.8791428804397583, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.076040744781494, 1.1055463552474976, 0.7767775058746338, 0.6582133173942566, 0.572337806224823, 0.5216885209083557, 0.4671643376350403, 0.43501561880111694, 0.41559898853302, 0.39134499430656433, 0.36007753014564514, 0.34363505244255066, 0.3356229364871979, 0.31343212723731995, 0.296464204788208, 0.2807483375072479, 0.2741149961948395, 0.24840031564235687, 0.23323743045330048, 0.23458121716976166, 0.2224036157131195, 0.21393869817256927, 0.20496822893619537, 0.1859605759382248, 0.1764804869890213, 0.17219682037830353, 0.1594717800617218, 0.16108126938343048, 0.1497337520122528, 0.14787781238555908, 0.14176824688911438, 0.12948861718177795], "accuracy": [0.3327169418334961, 0.6078457236289978, 0.7160216569900513, 0.750231146812439, 0.7862898111343384, 0.8117818236351013, 0.8251221776008606, 0.8397833704948425, 0.8536521196365356, 0.8632941246032715, 0.8689737319946289, 0.8803328275680542, 0.8767666220664978, 0.8850878477096558, 0.8936732411384583, 0.8982961177825928, 0.8990886211395264, 0.9088627696037292, 0.9117686152458191, 0.9129573106765747, 0.9128252267837524, 0.9178444147109985, 0.9268260598182678, 0.9310526847839355, 0.9346189498901367, 0.9331660270690918, 0.9380530714988708, 0.936732292175293, 0.9425439238548279, 0.9470347166061401, 0.9445251822471619, 0.9491480588912964], "val_loss": [1.243466854095459, 0.7060533761978149, 0.6004955172538757, 0.5514273643493652, 0.502814531326294, 0.4537771940231323, 0.4200498163700104, 0.4013083875179291, 0.38996565341949463, 0.3732544779777527, 0.365729421377182, 0.3523532748222351, 0.3466704487800598, 0.35075557231903076, 0.3452940285205841, 0.3350745737552643, 0.33073270320892334, 0.33722394704818726, 0.3331669867038727, 0.33885374665260315, 0.3280620872974396, 0.3454340696334839, 0.34681424498558044, 0.3360474109649658, 0.33298254013061523, 0.34401464462280273, 0.35224398970603943, 0.34364521503448486, 0.3543228209018707, 0.3493155241012573, 0.3578282594680786, 0.35315635800361633], "val_accuracy": [0.6466666460037231, 0.7236666679382324, 0.7620000243186951, 0.7836666703224182, 0.8090000152587891, 0.8343333601951599, 0.8463333249092102, 0.8556666374206543, 0.862666666507721, 0.8656666874885559, 0.8706666827201843, 0.8773333430290222, 0.8730000257492065, 0.8759999871253967, 0.8796666860580444, 0.8816666603088379, 0.8846666812896729, 0.8830000162124634, 0.8883333206176758, 0.8896666765213013, 0.8893333077430725, 0.8846666812896729, 0.8916666507720947, 0.8913333415985107, 0.8893333077430725, 0.890333354473114, 0.8943333625793457, 0.890333354473114, 0.887333333492279, 0.8923333287239075, 0.8899999856948853, 0.8923333287239075]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237658500671387, 1.8624151945114136, 1.3867141008377075, 1.0919922590255737, 0.9279136061668396, 0.8474010229110718, 0.7747225761413574, 0.7300317883491516, 0.6973342895507812, 0.6585784554481506, 0.6453496217727661, 0.6150763630867004, 0.5960974097251892, 0.5759302377700806, 0.559756338596344, 0.545661211013794, 0.5322559475898743, 0.5214018821716309, 0.5045566558837891, 0.49626168608665466, 0.48519206047058105, 0.4746508300304413, 0.4687638580799103, 0.46100226044654846, 0.4492499530315399, 0.44326427578926086, 0.4344162344932556, 0.4302665889263153, 0.42671844363212585, 0.407161682844162, 0.404183566570282, 0.40020468831062317, 0.39804163575172424, 0.3940678536891937, 0.38953810930252075, 0.3769828975200653, 0.37268415093421936, 0.3663865029811859, 0.3594917058944702], "accuracy": [0.2751287817955017, 0.48685774207115173, 0.5653150081634521, 0.6188086271286011, 0.6745476126670837, 0.6995112895965576, 0.7193237543106079, 0.7351737022399902, 0.7493065595626831, 0.7585523724555969, 0.7604015469551086, 0.7734777331352234, 0.7845727205276489, 0.7881389260292053, 0.7961959838867188, 0.8041210174560547, 0.8061022162437439, 0.805177628993988, 0.8156121969223022, 0.8232730031013489, 0.822348415851593, 0.828820526599884, 0.8304054737091064, 0.8321225643157959, 0.8343679904937744, 0.8401796221733093, 0.8425571322441101, 0.8404437899589539, 0.8455950617790222, 0.852331280708313, 0.8524633646011353, 0.8520671129226685, 0.8543124794960022, 0.8574824929237366, 0.8618412613868713, 0.8628978729248047, 0.8658037185668945, 0.8654074668884277, 0.8696341514587402], "val_loss": [2.033966302871704, 1.5010201930999756, 1.031662106513977, 0.8278270959854126, 0.7314595580101013, 0.6757464408874512, 0.6331112384796143, 0.5966423153877258, 0.5714043974876404, 0.5445528030395508, 0.5310800671577454, 0.5112656354904175, 0.493468701839447, 0.4838683605194092, 0.4730580151081085, 0.4713267385959625, 0.45268750190734863, 0.44742804765701294, 0.44492021203041077, 0.4366958737373352, 0.42349934577941895, 0.41881632804870605, 0.4146095812320709, 0.4230564832687378, 0.40527084469795227, 0.40056973695755005, 0.39664000272750854, 0.3928177058696747, 0.38881388306617737, 0.38378268480300903, 0.3816717565059662, 0.37819787859916687, 0.3814401924610138, 0.3762381970882416, 0.3752777576446533, 0.372419148683548, 0.3631872236728668, 0.3614887297153473, 0.3618714213371277], "val_accuracy": [0.49900001287460327, 0.6596666574478149, 0.6890000104904175, 0.6973333358764648, 0.7333333492279053, 0.7516666650772095, 0.7680000066757202, 0.7793333530426025, 0.7823333144187927, 0.79666668176651, 0.8046666383743286, 0.8119999766349792, 0.8213333487510681, 0.8299999833106995, 0.8306666612625122, 0.8309999704360962, 0.8379999995231628, 0.8433333039283752, 0.8376666903495789, 0.8416666388511658, 0.8486666679382324, 0.8550000190734863, 0.8526666760444641, 0.8483333587646484, 0.856333315372467, 0.8576666712760925, 0.8573333621025085, 0.8616666793823242, 0.8573333621025085, 0.8619999885559082, 0.859000027179718, 0.8619999885559082, 0.8603333234786987, 0.8676666617393494, 0.862333357334137, 0.8663333058357239, 0.8663333058357239, 0.8673333525657654, 0.8653333187103271]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 3, 3, 0, 3, 5, 1, 5], [0, 2, 0, 3, 0, 0], [16, 16, 58, 90], [0, 1], [9], [0], [52], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 9, 1, 3, 1, 3, 9, 8], [0, 4, 0, 4, 0, 0, 4, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 14, 8, 6, 4, 1, 1, 0, 1, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.square(grad), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 37], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 70], [0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 4, 2, 4, 9], [0, 4, 5, 3], [99, 42], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 6, 7, 8, 4, 7, 8, 4, 2, 5, 5, 0, 7, 8, 9, 2, 7, 2, 8, 2, 5, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 6, 4, 7, 1, 6, 7, 0, 3, 0], [16, 99, 96, 99, 61, 1, 11, 9, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 6, 3, 2, 9, 5, 4, 2, 51, 31, 20, 9], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), tf.math.pow(tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.square(sigma), tf.math.square(grad)), grad))), tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad))))), alpha), tf.math.add(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(grad), grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.square(sigma)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [8, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 3, 5], [0, 2, 0, 3], [16, 52], [0, 1], [0], [0], [12], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09857142716646194, "mapping_values": [1, 1, 0, 1, 1, 5, 4, 1, 2, 2, 1, 1, 1, 20, 11, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), alpha))), tf.math.sqrt(sigma))", "other_info": {"loss": [2.3099300861358643, 2.309657573699951, 2.3119568824768066, 2.3121497631073, 2.313962459564209, 2.3187596797943115, 2.316758871078491, 2.3227624893188477, 2.32576584815979], "accuracy": [0.09126931428909302, 0.0956280529499054, 0.09377889335155487, 0.0956280529499054, 0.0940430611371994, 0.0940430611371994, 0.09734513610601425, 0.0956280529499054, 0.09853387624025345], "val_loss": [2.3087680339813232, 2.308886766433716, 2.309030532836914, 2.3091447353363037, 2.3092753887176514, 2.309573173522949, 2.3102362155914307, 2.3116283416748047, 2.313967227935791], "val_accuracy": [0.09700000286102295, 0.0989999994635582, 0.10100000351667404, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]