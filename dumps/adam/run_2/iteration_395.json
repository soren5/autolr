[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.849142849445343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222531795501709, 1.8573780059814453, 1.3742467164993286, 1.077008605003357, 0.9294406175613403, 0.8305671811103821, 0.7618843913078308, 0.711800217628479, 0.6737363338470459, 0.6464894413948059, 0.6291741728782654, 0.6056591272354126, 0.5880822539329529, 0.5713062286376953, 0.5526944398880005, 0.5319265127182007, 0.5301802158355713, 0.5121482014656067, 0.4967440366744995, 0.4923430383205414, 0.48977386951446533, 0.4755356013774872, 0.4610181152820587, 0.4635249972343445, 0.4446984827518463, 0.4442039728164673, 0.4361966550350189, 0.4210379421710968, 0.4193051755428314, 0.41055887937545776, 0.40796440839767456, 0.3974934220314026, 0.3904564380645752, 0.38280943036079407, 0.37464627623558044, 0.37713363766670227, 0.36765873432159424, 0.3703801929950714, 0.35217151045799255, 0.34841784834861755, 0.34294453263282776, 0.3434322476387024, 0.3351591229438782, 0.33373337984085083, 0.32629287242889404, 0.32374104857444763, 0.3252063989639282, 0.320649117231369, 0.3118060529232025, 0.30209338665008545, 0.3099091351032257, 0.2972351312637329, 0.2985023260116577, 0.29507142305374146, 0.2890036702156067, 0.29016363620758057, 0.2842627465724945, 0.27100467681884766, 0.2700974643230438, 0.2661299407482147, 0.2671089470386505, 0.2590092420578003, 0.26046738028526306, 0.2555747926235199, 0.24951539933681488, 0.25605112314224243, 0.2505178153514862, 0.2441607266664505], "accuracy": [0.2751287817955017, 0.4877823293209076, 0.5761458277702332, 0.6189407110214233, 0.6691322326660156, 0.700700044631958, 0.724210798740387, 0.744419515132904, 0.7530049085617065, 0.7652885913848877, 0.7709681391716003, 0.7796856164932251, 0.7854973077774048, 0.7928939461708069, 0.7964601516723633, 0.806630551815033, 0.8086118102073669, 0.81548011302948, 0.8207634687423706, 0.8230088353157043, 0.8245938420295715, 0.834632158279419, 0.8356888294219971, 0.834632158279419, 0.8367455005645752, 0.8416325449943542, 0.8426892161369324, 0.8558974862098694, 0.8510104417800903, 0.8543124794960022, 0.8529917001724243, 0.859199583530426, 0.8602562546730042, 0.8646149635314941, 0.8647470474243164, 0.8667283058166504, 0.86553955078125, 0.867520809173584, 0.8709549307823181, 0.876370370388031, 0.8750495314598083, 0.8742570281028748, 0.8780874609947205, 0.8798044919967651, 0.8809932470321655, 0.8853520154953003, 0.8842953443527222, 0.8853520154953003, 0.8840311765670776, 0.8879936337471008, 0.8848236799240112, 0.8931449055671692, 0.8930128216743469, 0.8908994793891907, 0.8975036144256592, 0.8960506916046143, 0.897899866104126, 0.9008057117462158, 0.9038436412811279, 0.9027869701385498, 0.9045040011405945, 0.9063531756401062, 0.9052965044975281, 0.9091269373893738, 0.9068815112113953, 0.910711944103241, 0.9080702662467957, 0.91124027967453], "val_loss": [2.038644552230835, 1.5098847150802612, 1.036728858947754, 0.8308769464492798, 0.7413684725761414, 0.6787712574005127, 0.6271701455116272, 0.586131751537323, 0.5592430233955383, 0.5364344716072083, 0.5204944014549255, 0.5036504864692688, 0.4902227520942688, 0.475667268037796, 0.46209728717803955, 0.45610105991363525, 0.44424930214881897, 0.4344167411327362, 0.43024593591690063, 0.4234953224658966, 0.4153890013694763, 0.4118945300579071, 0.4059501886367798, 0.406991183757782, 0.394957035779953, 0.3975025713443756, 0.3876743018627167, 0.3830244243144989, 0.38676130771636963, 0.3773430585861206, 0.3737489879131317, 0.3773807883262634, 0.365457147359848, 0.36388111114501953, 0.36498332023620605, 0.3582379221916199, 0.3581385910511017, 0.3532613217830658, 0.36057019233703613, 0.34805744886398315, 0.3487517833709717, 0.3409743309020996, 0.3473736047744751, 0.34247782826423645, 0.3392820954322815, 0.33916983008384705, 0.3402676284313202, 0.3398682177066803, 0.3345399498939514, 0.34102165699005127, 0.33065328001976013, 0.3332676589488983, 0.33176541328430176, 0.33585450053215027, 0.3262192904949188, 0.33070772886276245, 0.32530394196510315, 0.32568156719207764, 0.3238425850868225, 0.3211855888366699, 0.33338212966918945, 0.32014384865760803, 0.3198516070842743, 0.322875052690506, 0.3297760784626007, 0.3154120147228241, 0.3175964653491974, 0.3190436065196991], "val_accuracy": [0.5419999957084656, 0.6690000295639038, 0.687333345413208, 0.7176666855812073, 0.7383333444595337, 0.7620000243186951, 0.7749999761581421, 0.7829999923706055, 0.7926666736602783, 0.7979999780654907, 0.809333324432373, 0.8183333277702332, 0.8216666579246521, 0.824999988079071, 0.831333339214325, 0.8343333601951599, 0.8386666774749756, 0.847000002861023, 0.8429999947547913, 0.8473333120346069, 0.8476666808128357, 0.8510000109672546, 0.856333315372467, 0.8586666584014893, 0.8606666922569275, 0.856333315372467, 0.8619999885559082, 0.8663333058357239, 0.862333357334137, 0.8646666407585144, 0.8656666874885559, 0.8696666955947876, 0.8693333268165588, 0.8700000047683716, 0.875333309173584, 0.871666669845581, 0.8706666827201843, 0.875, 0.8763333559036255, 0.8773333430290222, 0.8759999871253967, 0.8793333172798157, 0.875333309173584, 0.8809999823570251, 0.8806666731834412, 0.8830000162124634, 0.8856666684150696, 0.8826666474342346, 0.8820000290870667, 0.8836666941642761, 0.8859999775886536, 0.8826666474342346, 0.8866666555404663, 0.8856666684150696, 0.8843333125114441, 0.8840000033378601, 0.8883333206176758, 0.8883333206176758, 0.8899999856948853, 0.8920000195503235, 0.8859999775886536, 0.890666663646698, 0.8933333158493042, 0.887333333492279, 0.8870000243186951, 0.8933333158493042, 0.8920000195503235, 0.8930000066757202]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [58, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 2, 5], [0, 3, 3, 3], [16, 96], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 6, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 4, 2, 0], [54, 99, 96, 99, 20, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [4, 2, 3, 0, 3, 2, 9], [0, 1, 0, 2, 3], [39, 45, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 5, 2], [0, 2, 3, 3, 5, 3], [16, 16], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 3, 8, 1, 6], [2, 3, 0, 6], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 13, 7, 6, 1, 9, 5, 4, 1, 11, 6, 5, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(grad, tf.math.square(grad))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(beta, sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0], [0, 8, 9], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 2, 2, 0], [16, 99, 96, 99, 21, 20]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 3, 3, 0, 1, 12, 6, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, beta)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303619861602783, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 3, 8, 6, 1, 3, 6, 7, 1, 3, 7, 4, 3, 6, 0, 9, 0, 1, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 0, 2, 7, 7, 6, 7, 2, 6, 5, 6, 5], [16, 89, 96, 29, 61, 1, 7, 93]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 2, 0, 1, 10, 6, 4, 2, 2, 1, 1, 1, 49, 27, 22, 8], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(sigma, alpha), tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(beta, grad), grad)))), grad), tf.math.add(grad, tf.math.pow(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(grad, tf.math.add(grad, grad)))), grad))))", "other_info": {"loss": [2.3107879161834717, 2.3100364208221436, 2.3104944229125977, 2.307985782623291, 2.3106613159179688, 2.3109445571899414], "accuracy": [0.09021265059709549, 0.09206181764602661, 0.08875974267721176, 0.09338264167308807, 0.09391097724437714, 0.09298639744520187], "val_loss": [2.3083889484405518, 2.3083889484405518, 2.3083889484405518, 2.3083889484405518, 2.3083889484405518, 2.3083889484405518], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]