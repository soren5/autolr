[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220115661621094, 1.867738962173462, 1.4033989906311035, 1.1067020893096924, 0.9446679949760437, 0.853561282157898, 0.7865093350410461, 0.7363830804824829, 0.6966771483421326, 0.6785503029823303, 0.6356971859931946, 0.6251453161239624, 0.600525438785553, 0.5818994641304016, 0.573218584060669, 0.5477314591407776, 0.5380450487136841, 0.5183311104774475, 0.5123396515846252, 0.5070438981056213, 0.49233847856521606, 0.4831196963787079, 0.47017383575439453, 0.4732123911380768, 0.46142494678497314, 0.4553411602973938, 0.4474639296531677, 0.4309088885784149, 0.4292334318161011, 0.42144525051116943, 0.4152069389820099, 0.4103167951107025, 0.39813581109046936, 0.39352521300315857, 0.3901076018810272, 0.3820202648639679, 0.37355759739875793, 0.371258944272995, 0.3647976219654083, 0.36382442712783813, 0.36219117045402527, 0.3577095866203308, 0.351676344871521, 0.34523776173591614, 0.3363538086414337, 0.3333182632923126, 0.3221502900123596, 0.32681357860565186, 0.32468122243881226, 0.310714453458786, 0.31769755482673645, 0.3131992816925049, 0.30824124813079834, 0.3005898892879486, 0.2923942506313324, 0.28970271348953247, 0.288472056388855, 0.2792297899723053, 0.28189757466316223, 0.27388280630111694], "accuracy": [0.2665433883666992, 0.4784044325351715, 0.5605600476264954, 0.6089023947715759, 0.6664905548095703, 0.6964733600616455, 0.7116629481315613, 0.7353057861328125, 0.7409853339195251, 0.7514199018478394, 0.7697794437408447, 0.7725531458854675, 0.78113853931427, 0.7917051911354065, 0.7952714562416077, 0.8012151718139648, 0.8041210174560547, 0.8129705190658569, 0.8115176558494568, 0.819970965385437, 0.8193105459213257, 0.82683926820755, 0.8310658931732178, 0.8315942287445068, 0.8362171649932861, 0.833179235458374, 0.8428213000297546, 0.8459912538528442, 0.8459912538528442, 0.8494254350662231, 0.8520671129226685, 0.8495575189590454, 0.8568220734596252, 0.8573504090309143, 0.8597279191017151, 0.8589354157447815, 0.8677849769592285, 0.8664641380310059, 0.8684453964233398, 0.8679170608520508, 0.867520809173584, 0.8709549307823181, 0.8761062026023865, 0.8751816153526306, 0.8803328275680542, 0.8820499181747437, 0.8836349248886108, 0.8802007436752319, 0.8794082403182983, 0.8864086866378784, 0.8860124349594116, 0.8868049383163452, 0.8858803510665894, 0.8927486538887024, 0.8967111110687256, 0.895918607711792, 0.8951261639595032, 0.8971073627471924, 0.8993527889251709, 0.9009377956390381], "val_loss": [2.039444923400879, 1.5307852029800415, 1.0687702894210815, 0.8585299253463745, 0.7652456760406494, 0.7137531042098999, 0.6683899164199829, 0.632354736328125, 0.6000304222106934, 0.5779929757118225, 0.5581902861595154, 0.5429166555404663, 0.5264297723770142, 0.520211398601532, 0.5084921717643738, 0.49455270171165466, 0.48145219683647156, 0.4754067361354828, 0.46496593952178955, 0.4602355659008026, 0.4550119638442993, 0.44887322187423706, 0.441813588142395, 0.44375908374786377, 0.4335179328918457, 0.4292055666446686, 0.42169392108917236, 0.424695760011673, 0.4193827211856842, 0.4132964611053467, 0.4075658917427063, 0.4088693857192993, 0.4020043611526489, 0.4001440703868866, 0.3970765471458435, 0.39257946610450745, 0.39444082975387573, 0.39056462049484253, 0.38792040944099426, 0.38932210206985474, 0.38152939081192017, 0.38462838530540466, 0.38201406598091125, 0.37807589769363403, 0.3788517117500305, 0.37149205803871155, 0.3728257715702057, 0.3718051314353943, 0.368740975856781, 0.3713991641998291, 0.36070185899734497, 0.3649855852127075, 0.3634733557701111, 0.3595140278339386, 0.3594911992549896, 0.36346450448036194, 0.355861097574234, 0.35480594635009766, 0.3557967245578766, 0.3584672808647156], "val_accuracy": [0.5266666412353516, 0.6449999809265137, 0.6816666722297668, 0.7056666612625122, 0.7263333201408386, 0.7416666746139526, 0.7519999742507935, 0.7663333415985107, 0.7753333449363708, 0.7839999794960022, 0.7896666526794434, 0.8009999990463257, 0.8040000200271606, 0.8109999895095825, 0.812333345413208, 0.8240000009536743, 0.8266666531562805, 0.824999988079071, 0.8273333311080933, 0.8336666822433472, 0.8349999785423279, 0.8403333425521851, 0.8393333554267883, 0.8396666646003723, 0.8426666855812073, 0.8416666388511658, 0.8473333120346069, 0.8423333168029785, 0.8463333249092102, 0.846666693687439, 0.8546666502952576, 0.847000002861023, 0.8543333411216736, 0.8546666502952576, 0.8566666841506958, 0.8566666841506958, 0.8550000190734863, 0.856333315372467, 0.8616666793823242, 0.859000027179718, 0.859333336353302, 0.8619999885559082, 0.862666666507721, 0.8646666407585144, 0.8636666536331177, 0.8690000176429749, 0.8629999756813049, 0.8706666827201843, 0.8713333606719971, 0.8706666827201843, 0.8730000257492065, 0.8756666779518127, 0.8766666650772095, 0.8723333477973938, 0.8773333430290222, 0.8723333477973938, 0.8713333606719971, 0.8766666650772095, 0.8756666779518127, 0.8723333477973938]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 5, 5, 2, 6, 5], [0, 2, 0, 2, 0, 0, 0], [39, 39, 99, 91, 71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [9, 22], [0, 1, 0, 1], [6, 5], [0, 3], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6], [4, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 11, 1]], "fitness": -0.30000001192092896, "mapping_values": [1, 18, 11, 7, 5, 10, 6, 4, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2509899139404297, 2.268373966217041, 2.700486421585083, 2.3458709716796875, 2.303804874420166, 2.2500176429748535, 2.4268598556518555, 2.304335117340088, 2.30098557472229, 2.2758805751800537, 2.304413080215454, 2.3039050102233887, 2.3039889335632324, 2.3036911487579346], "accuracy": [0.21054022014141083, 0.17738740146160126, 0.1795007288455963, 0.09985470771789551, 0.10606260597705841, 0.21437062323093414, 0.0956280529499054, 0.09774138033390045, 0.10976093262434006, 0.15572579205036163, 0.09549596905708313, 0.0940430611371994, 0.0936468094587326, 0.09351472556591034], "val_loss": [2.2518203258514404, 2.8980252742767334, 2.4318861961364746, 2.306776523590088, 2.2879974842071533, 2.9284634590148926, 2.3045647144317627, 2.3025970458984375, 2.2854928970336914, 2.3044724464416504, 2.3029282093048096, 2.303044319152832, 2.3028414249420166, 2.3027827739715576], "val_accuracy": [0.13433332741260529, 0.20033332705497742, 0.10100000351667404, 0.0963333323597908, 0.28166666626930237, 0.10300000011920929, 0.10100000351667404, 0.10233332961797714, 0.3036666810512543, 0.10266666859388351, 0.1003333330154419, 0.10000000149011612, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [85, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 1, 3, 9], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 1, 1, 8, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1], [37, 99, 96, 99, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303687572479248, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [4, 2, 3, 0, 3, 4, 9, 4], [0, 1, 0, 2, 1, 2], [39, 39, 80], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [6], [0, 5], [60], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 2, 6, 1, 4, 6, 9], [0, 0, 0, 3, 0, 0, 3, 0, 2, 4], [16, 99, 96, 99, 61, 1, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 10, 6, 4, 2, 3, 1, 2, 1, 20, 11, 9, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [9, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 4, 2, 4, 1, 4, 2, 8, 7, 1, 2, 4, 6, 6, 1, 8, 9, 0, 4, 4, 0, 1, 1, 5, 5, 5, 4, 9], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 6, 6, 7, 6, 4, 2, 4, 4, 6, 6, 6], [16, 83, 96, 99, 61, 1, 40]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1, 52, 31, 21, 7], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), sigma), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)), tf.math.pow(grad, tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.subtract(grad, tf.math.square(beta)), tf.math.square(grad))), tf.math.square(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))))))), grad)), grad), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]