[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2221567630767822, 1.8600727319717407, 1.3833390474319458, 1.0899838209152222, 0.9285173416137695, 0.8309873342514038, 0.768517255783081, 0.7209204435348511, 0.6838169097900391, 0.6650382280349731, 0.634267270565033, 0.6098238825798035, 0.5937201380729675, 0.5828657150268555, 0.5605718493461609, 0.5469357371330261, 0.5383314490318298, 0.5208499431610107, 0.5075150728225708, 0.49715137481689453, 0.49349090456962585, 0.4806370735168457, 0.47664764523506165, 0.4631097614765167, 0.46126532554626465, 0.4447914659976959, 0.440306693315506, 0.4322546720504761, 0.4251011908054352, 0.42329782247543335, 0.4117446839809418, 0.40915942192077637, 0.3984168767929077, 0.3987683653831482, 0.3904801607131958, 0.3821169137954712, 0.3789217174053192, 0.3740788400173187, 0.3712354600429535, 0.3604044020175934, 0.36063191294670105, 0.35310548543930054, 0.3535459637641907, 0.3438345789909363, 0.3393617570400238, 0.33924177289009094, 0.334824800491333, 0.3251051902770996, 0.31665268540382385, 0.3235662281513214, 0.30799052119255066, 0.3101816773414612], "accuracy": [0.2674679756164551, 0.49808478355407715, 0.5683529376983643, 0.6217144131660461, 0.6700568199157715, 0.7047945857048035, 0.7214370369911194, 0.7403249144554138, 0.7474573850631714, 0.7552502751350403, 0.769911527633667, 0.7796856164932251, 0.7847048044204712, 0.7931581139564514, 0.7973847389221191, 0.8058380484580994, 0.8050455451011658, 0.8145555257797241, 0.8137630224227905, 0.8177255392074585, 0.8211596608161926, 0.8342359066009521, 0.8286884427070618, 0.8356888294219971, 0.8337075710296631, 0.839519202709198, 0.8422929644584656, 0.846387505531311, 0.8506141901016235, 0.8487650156021118, 0.8535200357437134, 0.8536521196365356, 0.8597279191017151, 0.8553691506385803, 0.8602562546730042, 0.8613129258155823, 0.8632941246032715, 0.86553955078125, 0.869502067565918, 0.8720116019248962, 0.8714832663536072, 0.8698983192443848, 0.8746532797813416, 0.8790120482444763, 0.8825782537460327, 0.8794082403182983, 0.8796724081039429, 0.8894465565681458, 0.8848236799240112, 0.8878615498542786, 0.8930128216743469, 0.8914278149604797], "val_loss": [2.033536672592163, 1.4937647581100464, 1.0113861560821533, 0.8135801553726196, 0.7236074209213257, 0.6707713603973389, 0.6293713450431824, 0.5958012938499451, 0.5689406991004944, 0.5545880794525146, 0.5364969372749329, 0.5164504051208496, 0.5062552094459534, 0.4981518089771271, 0.48685407638549805, 0.47892847657203674, 0.4740590751171112, 0.46149685978889465, 0.4569433331489563, 0.44721654057502747, 0.44154849648475647, 0.43717965483665466, 0.4315303564071655, 0.4286107122898102, 0.42422839999198914, 0.4207910895347595, 0.4151344895362854, 0.4108782410621643, 0.40860065817832947, 0.40649178624153137, 0.40349462628364563, 0.3987058997154236, 0.3974161744117737, 0.3943139910697937, 0.38727185130119324, 0.386921226978302, 0.3860156536102295, 0.3858639597892761, 0.3813495635986328, 0.38238778710365295, 0.37929800152778625, 0.3785088360309601, 0.37892743945121765, 0.37778589129447937, 0.3754137456417084, 0.37475162744522095, 0.3681820333003998, 0.3654140532016754, 0.36875098943710327, 0.3650602102279663, 0.3658360540866852, 0.35876911878585815], "val_accuracy": [0.57833331823349, 0.671999990940094, 0.6993333101272583, 0.718666672706604, 0.7423333525657654, 0.7546666860580444, 0.7710000276565552, 0.7746666669845581, 0.7896666526794434, 0.7913333177566528, 0.8029999732971191, 0.812666654586792, 0.815666675567627, 0.8223333358764648, 0.8190000057220459, 0.8266666531562805, 0.8363333344459534, 0.8320000171661377, 0.8360000252723694, 0.8420000076293945, 0.847000002861023, 0.846666693687439, 0.8476666808128357, 0.8503333330154419, 0.8523333072662354, 0.8510000109672546, 0.8560000061988831, 0.8586666584014893, 0.8613333106040955, 0.8583333492279053, 0.8600000143051147, 0.8619999885559082, 0.8600000143051147, 0.8646666407585144, 0.8659999966621399, 0.8700000047683716, 0.8673333525657654, 0.8659999966621399, 0.8693333268165588, 0.8706666827201843, 0.8646666407585144, 0.8723333477973938, 0.8690000176429749, 0.8730000257492065, 0.8690000176429749, 0.8693333268165588, 0.8790000081062317, 0.8766666650772095, 0.8709999918937683, 0.8740000128746033, 0.875, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 3, 2], [0, 2, 3, 3], [16, 41], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 3, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, sigma)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [23.855838775634766, 23.836746215820312, 709427.1875, 298.9661865234375, 749.1905517578125, 1017.3424072265625, 1035.1651611328125], "accuracy": [0.10210011899471283, 0.10130762308835983, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.245792388916016, 16.27814292907715, 175.32960510253906, 292.8559875488281, 845.4031372070312, 838.2105712890625, 3442.314453125], "val_accuracy": [0.09833333641290665, 0.10166666656732559, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 83], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 2], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 23, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 7, 4, 3, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))))", "other_info": {"loss": [2.3051767349243164, 2.302572011947632, 2.302555799484253, 2.3025577068328857, 2.3025310039520264, 2.3025052547454834, 2.3025169372558594, 2.302595615386963, 2.3025903701782227], "accuracy": [0.09549596905708313, 0.10157178342342377, 0.10011887550354004, 0.09826971590518951, 0.10302469879388809, 0.10460969805717468, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025941848754883, 2.3025901317596436, 2.302565097808838, 2.3025474548339844, 2.3025519847869873, 2.302586078643799, 2.3026676177978516, 2.3026957511901855], "val_accuracy": [0.10100000351667404, 0.09733333438634872, 0.09866666793823242, 0.10300000011920929, 0.10300000011920929, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3, 2, 6], [0, 1, 0, 2, 3, 2], [39, 4], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 1, 0, 5], [0, 2, 0, 2, 4, 0], [16, 16, 15], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 6, 1, 4, 6, 4, 2, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 50, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 15, 9, 6, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(beta))), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302884101867676, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 45], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 5, 6, 1, 5], [0, 2, 0, 3, 5, 2], [75, 22], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 10, 96, 99, 61, 1]], "fitness": -0.09971428662538528, "mapping_values": [1, 9, 5, 4, 2, 16, 10, 6, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.square(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad))))", "other_info": {"loss": [2.3104443550109863, 2.3110463619232178, 2.3105576038360596, 2.3099961280822754, 2.3094120025634766, 2.309513568878174, 2.3108623027801514, 2.3102569580078125, 2.3117868900299072, 2.309880495071411, 2.3103084564208984, 2.310582399368286, 2.3110923767089844, 2.310353994369507, 2.3098578453063965, 2.3103606700897217, 2.3091225624084473, 2.31024169921875, 2.310500383377075, 2.3094542026519775, 2.3110132217407227, 2.3103790283203125, 2.310366630554199, 2.309985876083374, 2.3110694885253906, 2.3106441497802734, 2.3109192848205566, 2.3100459575653076, 2.3105266094207764, 2.307750701904297, 2.3085837364196777, 2.3095743656158447, 2.309705972671509, 2.31046199798584, 2.3091506958007812, 2.308253526687622, 2.3102285861968994, 2.30679988861084, 2.3087565898895264, 2.3091650009155273, 2.30879282951355, 2.3112576007843018, 2.3087732791900635], "accuracy": [0.08928807079792023, 0.0936468094587326, 0.09245806187391281, 0.09747721254825592, 0.09470347315073013, 0.08968432247638702, 0.09219389408826828, 0.0940430611371994, 0.08625016361474991, 0.09113723784685135, 0.09232597798109055, 0.09417514503002167, 0.0886276587843895, 0.09615638852119446, 0.0940430611371994, 0.0948355570435524, 0.09760929644107819, 0.09589222073554993, 0.09034473448991776, 0.0956280529499054, 0.09100515395402908, 0.09232597798109055, 0.09747721254825592, 0.09417514503002167, 0.09259014576673508, 0.09338264167308807, 0.09285431355237961, 0.09576013684272766, 0.09602430462837219, 0.09906221181154251, 0.09655263274908066, 0.09536388516426086, 0.09311848133802414, 0.0944393053650856, 0.09906221181154251, 0.09655263274908066, 0.0956280529499054, 0.10130762308835983, 0.0948355570435524, 0.10157178342342377, 0.09417514503002167, 0.09787346422672272, 0.09628847241401672], "val_loss": [2.3086836338043213, 2.308688163757324, 2.3086884021759033, 2.3086838722229004, 2.308673858642578, 2.3086609840393066, 2.3086447715759277, 2.3086228370666504, 2.3085949420928955, 2.308563470840454, 2.3085272312164307, 2.3084864616394043, 2.308438777923584, 2.308384418487549, 2.3083229064941406, 2.3082566261291504, 2.308182954788208, 2.30810284614563, 2.308016538619995, 2.307924270629883, 2.3078250885009766, 2.30772066116333, 2.3076093196868896, 2.307490587234497, 2.307363510131836, 2.30722975730896, 2.307088613510132, 2.3069398403167725, 2.3067827224731445, 2.30661940574646, 2.3064496517181396, 2.3062744140625, 2.306093454360962, 2.305905818939209, 2.3057093620300293, 2.305504560470581, 2.3052914142608643, 2.305070400238037, 2.304840326309204, 2.30460262298584, 2.304356098175049, 2.3041019439697266, 2.3038394451141357], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09333333373069763, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09466666728258133, 0.09466666728258133, 0.0949999988079071, 0.09533333033323288, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.0976666659116745, 0.09799999743700027, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.09866666793823242, 0.09866666793823242, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]