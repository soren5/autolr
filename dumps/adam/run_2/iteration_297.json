[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233593463897705, 1.8665027618408203, 1.387961506843567, 1.0859882831573486, 0.9389150738716125, 0.8369697332382202, 0.7688866853713989, 0.7349943518638611, 0.6898801326751709, 0.6623668074607849, 0.6431468725204468, 0.614215075969696, 0.5970134139060974, 0.5761283040046692, 0.5519205927848816, 0.5487911701202393, 0.5350143909454346, 0.5213913917541504, 0.5065291523933411, 0.49967649579048157, 0.49129343032836914, 0.48280999064445496, 0.46985509991645813, 0.46454209089279175, 0.4549519419670105, 0.4440922737121582, 0.43234339356422424, 0.43474650382995605, 0.4200049638748169, 0.4151844084262848, 0.4149477183818817, 0.40655574202537537, 0.4009069800376892, 0.3852095305919647, 0.39111998677253723, 0.38739606738090515, 0.3816234767436981, 0.37025004625320435, 0.3659648597240448, 0.361152321100235, 0.3489675521850586, 0.34076839685440063, 0.340565025806427, 0.3368765413761139, 0.3405263423919678, 0.33139026165008545, 0.3153507113456726, 0.3221755027770996, 0.31092047691345215, 0.30097144842147827, 0.3104572892189026, 0.3022542893886566, 0.30310875177383423, 0.2931683361530304, 0.29300636053085327, 0.2920273244380951, 0.2815310060977936, 0.28397226333618164, 0.2773115634918213, 0.27631625533103943, 0.2693786919116974, 0.2578800320625305, 0.25967633724212646, 0.259388267993927, 0.2515886127948761], "accuracy": [0.27182671427726746, 0.5032360553741455, 0.5676925182342529, 0.6180161237716675, 0.6606789231300354, 0.7000396251678467, 0.7253995537757874, 0.7357020378112793, 0.7466648817062378, 0.7584202885627747, 0.7700436115264893, 0.7736098170280457, 0.7790252566337585, 0.7880068421363831, 0.8039889335632324, 0.800818920135498, 0.8094043135643005, 0.8140271902084351, 0.8175934553146362, 0.8236692547798157, 0.8257825970649719, 0.8278959393501282, 0.828820526599884, 0.8321225643157959, 0.8388587832450867, 0.8428213000297546, 0.845859169960022, 0.8437458872795105, 0.8504821062088013, 0.8531237840652466, 0.8543124794960022, 0.8573504090309143, 0.8573504090309143, 0.8602562546730042, 0.8549728989601135, 0.8614450097084045, 0.8634262084960938, 0.8683133125305176, 0.8706908226013184, 0.8732003569602966, 0.8745211958885193, 0.8730682730674744, 0.876370370388031, 0.878351628780365, 0.8765024542808533, 0.8795403242111206, 0.8873332738876343, 0.882710337638855, 0.8882578015327454, 0.893541157245636, 0.8887861371040344, 0.8874653577804565, 0.8916919827461243, 0.894069492816925, 0.8965790271759033, 0.8947299122810364, 0.8990886211395264, 0.8953903317451477, 0.9008057117462158, 0.9000132083892822, 0.8989565372467041, 0.9091269373893738, 0.9045040011405945, 0.9062210917472839, 0.9100515246391296], "val_loss": [2.0379889011383057, 1.5071442127227783, 1.0348764657974243, 0.8249266147613525, 0.7356244325637817, 0.6783172488212585, 0.6311874389648438, 0.599521815776825, 0.573268473148346, 0.5463939905166626, 0.5340542197227478, 0.5182191729545593, 0.4979862570762634, 0.4865064322948456, 0.4756239056587219, 0.4658741056919098, 0.45733317732810974, 0.4459972381591797, 0.4395201504230499, 0.43046459555625916, 0.4207448661327362, 0.4211825728416443, 0.40979352593421936, 0.4076118469238281, 0.40234676003456116, 0.3919251263141632, 0.3878527879714966, 0.3859034776687622, 0.38026440143585205, 0.3746378719806671, 0.3729434013366699, 0.36746227741241455, 0.36790379881858826, 0.36218610405921936, 0.3578745126724243, 0.35784223675727844, 0.3532482087612152, 0.35452717542648315, 0.35000085830688477, 0.3432953357696533, 0.3425622582435608, 0.3377484083175659, 0.33847057819366455, 0.3372248709201813, 0.3348037302494049, 0.33510419726371765, 0.33580082654953003, 0.3276919722557068, 0.32910019159317017, 0.3289982080459595, 0.320370078086853, 0.32198819518089294, 0.3241918683052063, 0.3252524137496948, 0.3172166347503662, 0.31473737955093384, 0.31397420167922974, 0.3144271969795227, 0.31785666942596436, 0.31313997507095337, 0.3090195655822754, 0.31355035305023193, 0.3146941661834717, 0.31274378299713135, 0.3119051158428192], "val_accuracy": [0.5366666913032532, 0.6690000295639038, 0.6886666417121887, 0.7203333377838135, 0.7353333234786987, 0.7596666812896729, 0.7756666541099548, 0.7876666784286499, 0.7916666865348816, 0.8029999732971191, 0.812666654586792, 0.8199999928474426, 0.8226666450500488, 0.82833331823349, 0.8320000171661377, 0.8339999914169312, 0.8386666774749756, 0.8373333215713501, 0.8426666855812073, 0.8510000109672546, 0.8513333201408386, 0.8506666421890259, 0.8526666760444641, 0.8556666374206543, 0.8510000109672546, 0.8613333106040955, 0.8613333106040955, 0.8659999966621399, 0.862333357334137, 0.8673333525657654, 0.8666666746139526, 0.8690000176429749, 0.8696666955947876, 0.8679999709129333, 0.871666669845581, 0.8700000047683716, 0.8703333139419556, 0.8736666440963745, 0.8730000257492065, 0.875333309173584, 0.8793333172798157, 0.878333330154419, 0.874666690826416, 0.8763333559036255, 0.8806666731834412, 0.875333309173584, 0.8769999742507935, 0.8826666474342346, 0.8806666731834412, 0.8830000162124634, 0.8816666603088379, 0.8823333382606506, 0.8803333044052124, 0.8836666941642761, 0.8853333592414856, 0.8806666731834412, 0.8870000243186951, 0.8853333592414856, 0.8843333125114441, 0.887666642665863, 0.887666642665863, 0.8833333253860474, 0.8840000033378601, 0.8866666555404663, 0.8866666555404663]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2, 0], [39, 39, 18], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [12, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 5, 8, 4, 4, 1, 4, 3, 2], [0, 4, 0, 3, 0, 0, 3, 2, 2, 4], [5, 99, 96, 99, 8, 1]], "fitness": -0.1411428600549698, "mapping_values": [1, 10, 5, 5, 3, 9, 5, 4, 2, 2, 1, 1, 1, 4, 2, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [1246534565888.0, 1475285352448.0, 1494762520576.0, 1491178225664.0, 1486417166336.0, 1527706943488.0], "accuracy": [0.10910051316022873, 0.11715757846832275, 0.11240258812904358, 0.10368511080741882, 0.10817593336105347, 0.11042134463787079], "val_loss": [1170319474688.0, 1170319605760.0, 1170319605760.0, 1170319605760.0, 1170319605760.0, 1170319605760.0], "val_accuracy": [0.12966667115688324, 0.12966667115688324, 0.12966667115688324, 0.12966667115688324, 0.12966667115688324, 0.12966667115688324]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [42, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 4, 2, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 2, 0, 3, 1, 4, 4, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(beta, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(grad), grad)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 22, 11, 11, 3], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 2], [0, 1, 2, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [22, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 1, 1, 0, 1, 1, 15, 8, 7, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(grad, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))", "other_info": {"loss": [92.86487579345703, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [815.5825805664062, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [6, 2, 3, 0, 2], [0, 1, 0, 2], [39, 77], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [41], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [69.64108276367188, 2.4120712280273438, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.742455005645752, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]