[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234551906585693, 1.8650375604629517, 1.39165461063385, 1.0858395099639893, 0.9404013752937317, 0.8464247584342957, 0.7698635458946228, 0.7325441837310791, 0.6869866251945496, 0.6584469079971313, 0.6352091431617737, 0.6139922738075256, 0.5932134985923767, 0.5767409205436707, 0.5623140931129456, 0.5490064024925232, 0.5386990308761597, 0.5267927050590515, 0.5088637471199036, 0.5039938688278198, 0.4911927580833435, 0.4770393967628479, 0.4645801782608032, 0.4686078429222107, 0.4462907910346985, 0.4458349347114563, 0.4350501596927643, 0.43507272005081177, 0.42226874828338623, 0.41686055064201355, 0.40942880511283875, 0.40386563539505005, 0.39697182178497314, 0.38885512948036194, 0.38461610674858093, 0.37598153948783875, 0.3725261986255646, 0.371784508228302, 0.3612985908985138, 0.35194146633148193, 0.357913613319397, 0.35135912895202637, 0.3389294743537903, 0.3459925353527069, 0.33175164461135864, 0.32609131932258606, 0.3248338997364044, 0.3156341016292572, 0.3130699098110199, 0.3126668334007263, 0.31071239709854126, 0.3039279580116272, 0.29624414443969727, 0.28977131843566895, 0.2889750897884369, 0.28026628494262695, 0.27652281522750854, 0.28096655011177063, 0.27119991183280945, 0.26852646470069885, 0.2677643895149231, 0.2614783048629761, 0.2520141899585724, 0.2528511881828308, 0.2504187524318695, 0.2488880306482315, 0.2360028177499771, 0.23377631604671478, 0.23262734711170197, 0.22928555309772491, 0.2258894443511963, 0.2278015911579132, 0.2202858179807663, 0.22131584584712982, 0.21638020873069763, 0.21012604236602783, 0.20507046580314636, 0.20739631354808807, 0.19968613982200623, 0.19482266902923584, 0.20503929257392883, 0.1935235857963562, 0.1829950362443924, 0.18737392127513885, 0.18159474432468414, 0.18317781388759613, 0.17986838519573212, 0.17481978237628937, 0.17342962324619293, 0.16665464639663696, 0.1692580282688141], "accuracy": [0.27578920125961304, 0.4905560612678528, 0.5624092221260071, 0.6244881749153137, 0.6655659675598145, 0.689869225025177, 0.726192057132721, 0.7323999404907227, 0.7544577717781067, 0.7648923397064209, 0.7695152759552002, 0.7774402499198914, 0.7873464822769165, 0.7873464822769165, 0.7961959838867188, 0.8026680946350098, 0.8082155585289001, 0.8120459914207458, 0.8189142942428589, 0.8169330358505249, 0.8251221776008606, 0.8301413059234619, 0.837537944316864, 0.8322546482086182, 0.8445383906364441, 0.8477083444595337, 0.8461233377456665, 0.847840428352356, 0.8548408150672913, 0.8518029451370239, 0.8541803956031799, 0.8593316674232483, 0.859199583530426, 0.8626337051391602, 0.8650112152099609, 0.8676528930664062, 0.86553955078125, 0.8660678863525391, 0.870030403137207, 0.8765024542808533, 0.8728041052818298, 0.8739928603172302, 0.8794082403182983, 0.8766345381736755, 0.8774270415306091, 0.8870691061019897, 0.8833707571029663, 0.8853520154953003, 0.8868049383163452, 0.8868049383163452, 0.8903711438179016, 0.8905032277107239, 0.8945978283882141, 0.8961827754974365, 0.8967111110687256, 0.8996169567108154, 0.9021265506744385, 0.8961827754974365, 0.9027869701385498, 0.9021265506744385, 0.9012019634246826, 0.9054285883903503, 0.9071456789970398, 0.9099194407463074, 0.9078060984611511, 0.9093911051750183, 0.9158631563186646, 0.9105798602104187, 0.9141460657119751, 0.9189010858535767, 0.9183727502822876, 0.9189010858535767, 0.9220710396766663, 0.9207502603530884, 0.9224672913551331, 0.9241843819618225, 0.9273543953895569, 0.9269581437110901, 0.9305243492126465, 0.9338264465332031, 0.9270902276039124, 0.9305243492126465, 0.9311847686767578, 0.930260181427002, 0.9363360404968262, 0.9344868659973145, 0.9369964599609375, 0.9348831176757812, 0.934751033782959, 0.9402984976768494, 0.9401664137840271], "val_loss": [2.0396289825439453, 1.5203874111175537, 1.050379753112793, 0.8443537354469299, 0.7501989006996155, 0.6989048719406128, 0.6536112427711487, 0.6121304631233215, 0.5867934226989746, 0.5664350986480713, 0.5453831553459167, 0.5260835886001587, 0.5179842114448547, 0.5055208206176758, 0.49308666586875916, 0.47951826453208923, 0.47021886706352234, 0.4626019299030304, 0.4538033902645111, 0.44804784655570984, 0.448790967464447, 0.4360639750957489, 0.42694568634033203, 0.42158204317092896, 0.4192905128002167, 0.4123145341873169, 0.40958163142204285, 0.4048602283000946, 0.39617887139320374, 0.39648860692977905, 0.3900168836116791, 0.38369619846343994, 0.3856382668018341, 0.38037556409835815, 0.3821374773979187, 0.3772399127483368, 0.37199047207832336, 0.37088510394096375, 0.3780016303062439, 0.3701539635658264, 0.36693501472473145, 0.359701007604599, 0.3634497821331024, 0.3678356409072876, 0.3544459939002991, 0.3542572557926178, 0.3558824062347412, 0.3535480499267578, 0.35256436467170715, 0.3489903211593628, 0.35114404559135437, 0.35218164324760437, 0.3424983322620392, 0.3439389765262604, 0.3400770127773285, 0.3467785716056824, 0.3402908742427826, 0.3417697846889496, 0.34320324659347534, 0.34127938747406006, 0.33698537945747375, 0.3410067558288574, 0.3393762707710266, 0.33914095163345337, 0.3448367118835449, 0.34605175256729126, 0.3424318730831146, 0.3363463282585144, 0.3338223397731781, 0.3390580117702484, 0.33559849858283997, 0.33808574080467224, 0.3339848816394806, 0.3293822705745697, 0.33798640966415405, 0.34214088320732117, 0.3323459327220917, 0.33300381898880005, 0.34123262763023376, 0.33897948265075684, 0.33168238401412964, 0.33843937516212463, 0.3384935259819031, 0.34280529618263245, 0.33766913414001465, 0.33378836512565613, 0.34082287549972534, 0.33980095386505127, 0.3447704315185547, 0.33960455656051636, 0.34120818972587585], "val_accuracy": [0.5276666879653931, 0.6513333320617676, 0.6826666593551636, 0.7056666612625122, 0.737666666507721, 0.7513333559036255, 0.7646666765213013, 0.7710000276565552, 0.778333306312561, 0.7913333177566528, 0.8013333082199097, 0.8066666722297668, 0.8080000281333923, 0.8180000185966492, 0.8240000009536743, 0.8309999704360962, 0.82833331823349, 0.8386666774749756, 0.8403333425521851, 0.8416666388511658, 0.8399999737739563, 0.8460000157356262, 0.8526666760444641, 0.8523333072662354, 0.8550000190734863, 0.8550000190734863, 0.8553333282470703, 0.8586666584014893, 0.8603333234786987, 0.8603333234786987, 0.8636666536331177, 0.8650000095367432, 0.862666666507721, 0.8646666407585144, 0.8659999966621399, 0.8643333315849304, 0.8643333315849304, 0.8653333187103271, 0.8656666874885559, 0.8690000176429749, 0.8679999709129333, 0.8700000047683716, 0.8653333187103271, 0.862666666507721, 0.871999979019165, 0.8726666569709778, 0.8663333058357239, 0.871666669845581, 0.8706666827201843, 0.871666669845581, 0.8773333430290222, 0.8740000128746033, 0.8759999871253967, 0.878000020980835, 0.878333330154419, 0.8773333430290222, 0.875, 0.8786666393280029, 0.8756666779518127, 0.8793333172798157, 0.8769999742507935, 0.8790000081062317, 0.8786666393280029, 0.8790000081062317, 0.8796666860580444, 0.8796666860580444, 0.878333330154419, 0.8809999823570251, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506, 0.8826666474342346, 0.8820000290870667, 0.8816666603088379, 0.8833333253860474, 0.8823333382606506, 0.8826666474342346, 0.8826666474342346, 0.8836666941642761, 0.8820000290870667, 0.8826666474342346, 0.8840000033378601, 0.8823333382606506, 0.8816666603088379, 0.8843333125114441, 0.8863333463668823, 0.8843333125114441, 0.8816666603088379, 0.8833333253860474, 0.8836666941642761, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [2, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [25, 16], [0, 0, 1, 0], [0, 3, 9], [0], [99, 25], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 4, 6, 1, 1, 4, 1, 4, 2, 8, 1, 2, 3, 5, 5, 2, 5, 7, 5, 0, 5, 0, 7, 8, 6], [2, 2, 0, 3, 3, 4, 3, 1, 2, 0, 5, 1, 6, 0, 1, 0, 2, 3], [16, 66, 96, 99, 61, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 4, 3, 1, 2, 44, 26, 18, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(sigma), grad))), tf.math.subtract(tf.math.add(sigma, alpha), tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(tf.math.square(grad), alpha))))), grad), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.negative(alpha))), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), beta)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 3, 9, 6, 9], [0, 2], [99, 50, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 10, 6, 4, 2, 8, 6, 2, 3, 11, 6, 5, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3123087882995605, 2.3159286975860596, 2.3134515285491943, 2.313979148864746, 2.31546950340271, 2.3147292137145996], "accuracy": [0.09694888442754745, 0.09615638852119446, 0.09734513610601425, 0.09998679161071777, 0.0948355570435524, 0.0956280529499054], "val_loss": [2.3102352619171143, 2.3103179931640625, 2.310347557067871, 2.310361862182617, 2.310370683670044, 2.3103764057159424], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [62, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 6], [0, 2, 0, 3, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8, 9, 4, 9, 3, 2, 3], [0, 3, 0, 3, 0, 0, 3, 1, 2, 4, 0], [14, 99, 96, 99, 61, 1, 91, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 7, 6, 2, 2, 1, 1, 1, 28, 17, 11, 8], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), sigma))), tf.math.multiply(alpha, tf.math.add(beta, tf.math.multiply(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 9, 6, 2, 8, 0], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 70]], "fitness": -0.09228571504354477, "mapping_values": [1, 9, 5, 4, 1, 7, 4, 3, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.negative(alpha)), beta)", "other_info": {"loss": [2.310816526412964, 2.3104665279388428, 2.3118269443511963, 2.3110015392303467, 2.310378313064575, 2.3108081817626953], "accuracy": [0.08928807079792023, 0.0878351628780365, 0.08175934851169586, 0.09021265059709549, 0.09192973375320435, 0.09153348207473755], "val_loss": [2.3086376190185547, 2.3086376190185547, 2.3086376190185547, 2.3086376190185547, 2.3086376190185547, 2.3086376190185547], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]