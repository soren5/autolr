[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224888324737549, 1.8733786344528198, 1.4057613611221313, 1.1087113618850708, 0.9397230744361877, 0.8559622764587402, 0.7837888598442078, 0.7444755434989929, 0.6892437934875488, 0.6699710488319397, 0.6397956013679504, 0.619486391544342, 0.5939702987670898, 0.5734031200408936, 0.5670766830444336, 0.5516794919967651, 0.5406241416931152, 0.5187515020370483, 0.5119659900665283, 0.4991473853588104, 0.48945352435112, 0.4833112359046936, 0.4658026099205017, 0.4633035957813263, 0.4574570953845978, 0.44897761940956116, 0.43163323402404785, 0.43044257164001465, 0.42162206768989563, 0.42202961444854736, 0.4127320945262909, 0.4053214192390442, 0.39992237091064453, 0.38934674859046936, 0.3863045275211334, 0.374716192483902, 0.36536017060279846, 0.3667241632938385, 0.3664974272251129, 0.3622644245624542, 0.34637096524238586, 0.34613510966300964, 0.3411286473274231, 0.3325549364089966, 0.34169915318489075, 0.3320768475532532, 0.32159778475761414, 0.32158133387565613, 0.31409433484077454, 0.3098047375679016, 0.3086608052253723, 0.2971147298812866, 0.2989882826805115, 0.29433318972587585, 0.28981471061706543, 0.2881815433502197, 0.2800899147987366, 0.28080061078071594, 0.2805498540401459, 0.2732974588871002, 0.27075010538101196, 0.2616389989852905, 0.26650285720825195, 0.25292178988456726, 0.2523878514766693, 0.24882422387599945, 0.24844183027744293, 0.2394542396068573, 0.2428445667028427, 0.233333021402359, 0.23402667045593262, 0.2278994470834732, 0.2237098217010498, 0.22088798880577087, 0.21359549462795258, 0.21356640756130219, 0.2132694274187088, 0.21126088500022888, 0.20852278172969818, 0.20123495161533356, 0.19632063806056976, 0.19839827716350555, 0.19303640723228455, 0.18841558694839478, 0.18828041851520538, 0.18331429362297058, 0.17992150783538818, 0.180485337972641, 0.17281454801559448, 0.17249366641044617, 0.1678229719400406, 0.16507956385612488, 0.1727794110774994, 0.16643114387989044, 0.16340264678001404, 0.1678551733493805], "accuracy": [0.2767137885093689, 0.48170650005340576, 0.5634658336639404, 0.6188086271286011, 0.666358470916748, 0.6940959095954895, 0.7150970697402954, 0.7285695672035217, 0.7428345084190369, 0.7580240368843079, 0.7670056819915771, 0.7774402499198914, 0.7862898111343384, 0.7895918488502502, 0.7964601516723633, 0.8021397590637207, 0.806630551815033, 0.8092722296714783, 0.8170651197433472, 0.8219521641731262, 0.8267071843147278, 0.8245938420295715, 0.82683926820755, 0.8358209133148193, 0.8407079577445984, 0.8392550349235535, 0.8445383906364441, 0.8445383906364441, 0.8512746095657349, 0.8506141901016235, 0.8491612672805786, 0.8529917001724243, 0.8590674996376038, 0.8588033318519592, 0.8631620407104492, 0.8668603897094727, 0.8698983192443848, 0.8685774803161621, 0.8692378997802734, 0.8705587387084961, 0.8739928603172302, 0.8794082403182983, 0.8761062026023865, 0.8803328275680542, 0.8766345381736755, 0.8809932470321655, 0.8865407705307007, 0.8860124349594116, 0.8891823887825012, 0.8853520154953003, 0.886672854423523, 0.8936732411384583, 0.891559898853302, 0.8926165699958801, 0.89552241563797, 0.8961827754974365, 0.9013340473175049, 0.900409460067749, 0.895918607711792, 0.9037115573883057, 0.9001452922821045, 0.9068815112113953, 0.9006736278533936, 0.9095231890678406, 0.906749427318573, 0.9088627696037292, 0.9076740145683289, 0.9115044474601746, 0.9124290347099304, 0.9171839952468872, 0.9121648669242859, 0.9153348207473755, 0.9167877435684204, 0.9183727502822876, 0.920089840888977, 0.9216747879981995, 0.9207502603530884, 0.9218068718910217, 0.9240522980690002, 0.9268260598182678, 0.9268260598182678, 0.9268260598182678, 0.925901472568512, 0.9295997619628906, 0.9289394021034241, 0.9301280975341797, 0.9343547821044922, 0.9338264465332031, 0.935279369354248, 0.9388455748558044, 0.9392418265342712, 0.9397701621055603, 0.9399022459983826, 0.9397701621055603, 0.937260627746582, 0.9388455748558044], "val_loss": [2.0369625091552734, 1.5113493204116821, 1.0392687320709229, 0.8289456963539124, 0.7337178587913513, 0.6824068427085876, 0.6394333243370056, 0.5986796617507935, 0.5744180679321289, 0.5473193526268005, 0.5368602871894836, 0.5205448269844055, 0.5016342401504517, 0.4916633665561676, 0.4824334979057312, 0.4725804328918457, 0.4611975848674774, 0.45191967487335205, 0.44477835297584534, 0.4358881115913391, 0.4389384388923645, 0.4250045716762543, 0.4261665940284729, 0.4102269411087036, 0.41294601559638977, 0.4029097855091095, 0.39609766006469727, 0.3922438621520996, 0.3895711600780487, 0.3850253224372864, 0.3893522620201111, 0.3845292925834656, 0.38009390234947205, 0.3774232268333435, 0.37149038910865784, 0.364124596118927, 0.36524268984794617, 0.3606258034706116, 0.3667268455028534, 0.35838228464126587, 0.35762983560562134, 0.3580995202064514, 0.3531500995159149, 0.3502158224582672, 0.35444706678390503, 0.35316604375839233, 0.3436952233314514, 0.34405237436294556, 0.3413199186325073, 0.33957812190055847, 0.3398955166339874, 0.33606448769569397, 0.3401831388473511, 0.3391970098018646, 0.3361393213272095, 0.3289412260055542, 0.3313611149787903, 0.33645549416542053, 0.327024906873703, 0.33268240094184875, 0.3265487849712372, 0.33319970965385437, 0.3299911618232727, 0.3284834325313568, 0.3250959813594818, 0.3302548825740814, 0.3208913505077362, 0.3242785334587097, 0.32387155294418335, 0.31966906785964966, 0.32456517219543457, 0.3238525092601776, 0.32606685161590576, 0.31960347294807434, 0.325215607881546, 0.3253926634788513, 0.3189733922481537, 0.32049039006233215, 0.31947100162506104, 0.3221680819988251, 0.3246246874332428, 0.3264824151992798, 0.324916273355484, 0.3254442512989044, 0.3192928731441498, 0.3257920742034912, 0.32598361372947693, 0.32203370332717896, 0.3297237753868103, 0.32394206523895264, 0.3257220387458801, 0.33140838146209717, 0.3194825351238251, 0.3327360153198242, 0.3332168757915497, 0.3242672383785248], "val_accuracy": [0.5723333358764648, 0.6536666750907898, 0.690666675567627, 0.7106666564941406, 0.7416666746139526, 0.7559999823570251, 0.7680000066757202, 0.7826666831970215, 0.7946666479110718, 0.8019999861717224, 0.8019999861717224, 0.8180000185966492, 0.8246666789054871, 0.8233333230018616, 0.8343333601951599, 0.8263333439826965, 0.8383333086967468, 0.8416666388511658, 0.8450000286102295, 0.847000002861023, 0.8453333377838135, 0.8533333539962769, 0.8523333072662354, 0.8610000014305115, 0.8566666841506958, 0.8656666874885559, 0.8653333187103271, 0.8673333525657654, 0.8659999966621399, 0.8636666536331177, 0.8656666874885559, 0.8676666617393494, 0.8693333268165588, 0.8669999837875366, 0.8740000128746033, 0.8733333349227905, 0.8730000257492065, 0.875, 0.8736666440963745, 0.8740000128746033, 0.8769999742507935, 0.8769999742507935, 0.8790000081062317, 0.8803333044052124, 0.8730000257492065, 0.8790000081062317, 0.8816666603088379, 0.8799999952316284, 0.8806666731834412, 0.8803333044052124, 0.8790000081062317, 0.8840000033378601, 0.878000020980835, 0.8809999823570251, 0.8823333382606506, 0.8863333463668823, 0.8830000162124634, 0.8833333253860474, 0.8866666555404663, 0.8823333382606506, 0.8856666684150696, 0.8840000033378601, 0.8883333206176758, 0.8870000243186951, 0.887333333492279, 0.8803333044052124, 0.8883333206176758, 0.8889999985694885, 0.8856666684150696, 0.8896666765213013, 0.887333333492279, 0.8883333206176758, 0.8896666765213013, 0.8896666765213013, 0.890333354473114, 0.8870000243186951, 0.8893333077430725, 0.8883333206176758, 0.890999972820282, 0.8913333415985107, 0.8916666507720947, 0.8893333077430725, 0.8913333415985107, 0.8920000195503235, 0.8893333077430725, 0.8923333287239075, 0.8913333415985107, 0.8930000066757202, 0.8899999856948853, 0.8899999856948853, 0.893666684627533, 0.8920000195503235, 0.8899999856948853, 0.8896666765213013, 0.8889999985694885, 0.890333354473114]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 3, 0, 3, 6, 2, 3, 1, 0, 9, 7, 2, 3, 7, 3, 5, 9], [0, 1, 0, 2, 0, 2, 2, 3, 0, 1, 1, 0], [39, 39, 30, 1, 0, 99, 91], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 74], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 18, 12, 7, 10, 6, 4, 2, 1, 0, 1, 1, 11, 7, 4, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(grad, grad), tf.math.multiply(grad, tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)))))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 2, 2], [39, 85], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 7], [0, 2, 0, 2, 1, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 3, 8, 1], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 7, 5, 0], [16, 99, 96, 99, 61, 56, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 13, 7, 6, 2, 2, 1, 1, 1, 28, 15, 13, 7], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(grad, alpha), beta)))), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, grad)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2, 2], [39, 42], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5, 0, 3, 0, 4, 7, 0], [0, 2, 0, 3, 3, 1, 3, 1], [16, 16], [0, 1], [0], [0], [65], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 4, 3, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 17, 99, 61, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 20, 12, 8, 2, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, grad)), tf.math.negative(tf.math.pow(alpha, tf.math.add(grad, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2, 0], [39, 39, 50], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 32], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [55, 99, 32, 68, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 2, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.subtract(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]