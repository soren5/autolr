[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2252674102783203, 1.875038743019104, 1.3963987827301025, 1.1050618886947632, 0.9512748718261719, 0.8456809520721436, 0.7724891304969788, 0.7187255024909973, 0.6857445240020752, 0.656551718711853, 0.6398314833641052, 0.6142513751983643, 0.5857687592506409, 0.5667416453361511, 0.5584819912910461, 0.540928065776825, 0.5370804667472839, 0.5158360004425049, 0.5080983638763428, 0.4892948865890503, 0.4942358434200287, 0.482854962348938, 0.4637947082519531, 0.4513036608695984, 0.44480016827583313, 0.43596547842025757, 0.42635416984558105, 0.4258138835430145, 0.41137972474098206, 0.41251975297927856, 0.40920236706733704, 0.4018496572971344, 0.39733126759529114, 0.38678666949272156, 0.3843963146209717, 0.37470412254333496, 0.3738331198692322, 0.36020776629447937, 0.36005714535713196, 0.35015422105789185, 0.34640422463417053, 0.34223636984825134, 0.3329501450061798, 0.33896690607070923, 0.33482399582862854, 0.3220403492450714, 0.3210563063621521, 0.31278809905052185, 0.3109722435474396, 0.3007432818412781, 0.29515281319618225, 0.2908565402030945, 0.2961256802082062, 0.28983932733535767, 0.282885879278183, 0.2820381224155426, 0.2775198221206665, 0.27133825421333313, 0.267331600189209, 0.26740193367004395, 0.26480087637901306, 0.26022252440452576, 0.2502896785736084, 0.24465516209602356, 0.24514785408973694, 0.2444467693567276, 0.23289909958839417, 0.24104681611061096, 0.23767685890197754, 0.23136621713638306, 0.23071587085723877, 0.22664868831634521, 0.2181318700313568, 0.21324457228183746, 0.21194994449615479, 0.21422895789146423, 0.2073359340429306, 0.2013917863368988, 0.20205746591091156, 0.2013547569513321, 0.19536879658699036], "accuracy": [0.2681283950805664, 0.4896314740180969, 0.5643904209136963, 0.6151102781295776, 0.6610751748085022, 0.6985867023468018, 0.7252674698829651, 0.7353057861328125, 0.7503632307052612, 0.7630431652069092, 0.7662131786346436, 0.778761088848114, 0.7877426743507385, 0.7954035401344299, 0.7980451583862305, 0.802800178527832, 0.8042530417442322, 0.8117818236351013, 0.8165367841720581, 0.8251221776008606, 0.8185180425643921, 0.8298771381378174, 0.83119797706604, 0.8359529972076416, 0.8393871188163757, 0.8469158411026001, 0.8457271456718445, 0.846387505531311, 0.8487650156021118, 0.8555012345314026, 0.8582749962806702, 0.8555012345314026, 0.8595958352088928, 0.8599920868873596, 0.8640866279602051, 0.8644828796386719, 0.8627657890319824, 0.8673887252807617, 0.8651432991027832, 0.8750495314598083, 0.8747853636741638, 0.8802007436752319, 0.8815215826034546, 0.8757099509239197, 0.8779553771018982, 0.8841632604598999, 0.8838990926742554, 0.8882578015327454, 0.8870691061019897, 0.8928807377815247, 0.8918240666389465, 0.8905032277107239, 0.8961827754974365, 0.8928807377815247, 0.8969752788543701, 0.8975036144256592, 0.9006736278533936, 0.9013340473175049, 0.9014661312103271, 0.9015982151031494, 0.8994848728179932, 0.9039757251739502, 0.9072777628898621, 0.9093911051750183, 0.9108440279960632, 0.9088627696037292, 0.9148064851760864, 0.9101836085319519, 0.913089394569397, 0.91559898853302, 0.91559898853302, 0.9177123308181763, 0.9229956269264221, 0.9210143685340881, 0.9223352074623108, 0.9218068718910217, 0.9256373047828674, 0.9237881302833557, 0.9252410531044006, 0.9261656403541565, 0.9276185631752014], "val_loss": [2.0421700477600098, 1.5199713706970215, 1.0343890190124512, 0.8195543885231018, 0.7289423942565918, 0.6721727848052979, 0.6247189044952393, 0.5930773019790649, 0.5681765675544739, 0.5446887016296387, 0.5298956632614136, 0.5206090211868286, 0.5030518174171448, 0.48845174908638, 0.4770542085170746, 0.47006696462631226, 0.46396493911743164, 0.4527237117290497, 0.4463212192058563, 0.4407685399055481, 0.44107258319854736, 0.4302399158477783, 0.4275108277797699, 0.4185290038585663, 0.4158242642879486, 0.4048064053058624, 0.4038933515548706, 0.40137165784835815, 0.40087422728538513, 0.39383381605148315, 0.3939734697341919, 0.3902907371520996, 0.38572824001312256, 0.3846234679222107, 0.385298490524292, 0.3786666691303253, 0.38250023126602173, 0.38051551580429077, 0.36873891949653625, 0.3693999946117401, 0.36553701758384705, 0.3617526888847351, 0.3659430742263794, 0.37083661556243896, 0.35801830887794495, 0.36958977580070496, 0.3575349450111389, 0.358305960893631, 0.3519214689731598, 0.3548671007156372, 0.35104990005493164, 0.3527626097202301, 0.3543612062931061, 0.35014835000038147, 0.3504617214202881, 0.34369778633117676, 0.3483661413192749, 0.3459653854370117, 0.3483257591724396, 0.3420718312263489, 0.34376510977745056, 0.3416864275932312, 0.3421456813812256, 0.34527266025543213, 0.3403754234313965, 0.34177255630493164, 0.34438419342041016, 0.33946529030799866, 0.33877938985824585, 0.34110283851623535, 0.3418137729167938, 0.3339892029762268, 0.3400563895702362, 0.3385702967643738, 0.34020113945007324, 0.33201587200164795, 0.34264034032821655, 0.33819645643234253, 0.3395509421825409, 0.3382347524166107, 0.3415883481502533], "val_accuracy": [0.5203333497047424, 0.6480000019073486, 0.687666654586792, 0.715666651725769, 0.7400000095367432, 0.7570000290870667, 0.7696666717529297, 0.7739999890327454, 0.7900000214576721, 0.8019999861717224, 0.8029999732971191, 0.8056666851043701, 0.8130000233650208, 0.8176666498184204, 0.8263333439826965, 0.8286666870117188, 0.8253333568572998, 0.8379999995231628, 0.8336666822433472, 0.8376666903495789, 0.8360000252723694, 0.840666651725769, 0.8503333330154419, 0.8443333506584167, 0.846666693687439, 0.8486666679382324, 0.8510000109672546, 0.8523333072662354, 0.8533333539962769, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8560000061988831, 0.8613333106040955, 0.8566666841506958, 0.862333357334137, 0.862666666507721, 0.8546666502952576, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.8636666536331177, 0.8653333187103271, 0.8619999885559082, 0.8676666617393494, 0.8629999756813049, 0.8673333525657654, 0.8693333268165588, 0.8700000047683716, 0.8706666827201843, 0.8723333477973938, 0.8743333220481873, 0.871999979019165, 0.871999979019165, 0.8743333220481873, 0.8759999871253967, 0.8723333477973938, 0.8756666779518127, 0.8759999871253967, 0.8743333220481873, 0.8769999742507935, 0.8786666393280029, 0.878333330154419, 0.8773333430290222, 0.8796666860580444, 0.878333330154419, 0.8830000162124634, 0.8776666522026062, 0.878000020980835, 0.8809999823570251, 0.8813333511352539, 0.8836666941642761, 0.8830000162124634, 0.8826666474342346, 0.8793333172798157, 0.8880000114440918, 0.8830000162124634, 0.8809999823570251, 0.8823333382606506, 0.8880000114440918, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 7, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 3, 1, 2, 1, 21, 12, 9, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(alpha, beta))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 6, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 4, 1, 4, 1, 4, 6, 3], [0, 2, 4, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 87, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 5, 4, 1, 1, 2, 1, 1, 1, 17, 8, 9, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.subtract(beta, tf.math.pow(grad, sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 48], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 77, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.3045971393585205, 2.302583932876587, 2.3025810718536377, 2.302574396133423, 2.302560329437256, 2.3025033473968506, 2.3024609088897705, 2.3055062294006348, 3.782874584197998, 66.92716217041016, 357.8422546386719], "accuracy": [0.09906221181154251, 0.10408136248588562, 0.10315678268671036, 0.10276053100824356, 0.1022322028875351, 0.10487385839223862, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025898933410645, 2.302583694458008, 2.3026034832000732, 2.30313777923584, 2.3298544883728027, 17.556068420410156, 184.30838012695312, 712.4811401367188], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10100000351667404, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]