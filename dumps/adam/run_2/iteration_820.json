[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220840454101562, 1.8673532009124756, 1.3945777416229248, 1.0816949605941772, 0.9274606704711914, 0.8325135111808777, 0.7635183334350586, 0.729153037071228, 0.6799448132514954, 0.6484884023666382, 0.6409246325492859, 0.6116158962249756, 0.596555233001709, 0.5762948393821716, 0.560496985912323, 0.5449227690696716, 0.5317310690879822, 0.5220286846160889, 0.5031352043151855, 0.49653154611587524, 0.4836442470550537, 0.47200730443000793, 0.4598471522331238, 0.4628499746322632, 0.44625186920166016, 0.4429541528224945, 0.4291759729385376, 0.43185946345329285, 0.41748493909835815, 0.4164701998233795, 0.40613090991973877, 0.4108927547931671, 0.3904166519641876, 0.384810209274292, 0.3799990713596344, 0.37715384364128113, 0.3690441846847534, 0.3687514066696167, 0.3600764572620392, 0.35280734300613403, 0.35461002588272095, 0.3445932865142822, 0.3453715443611145, 0.33352169394493103, 0.330205500125885, 0.33373168110847473, 0.32427743077278137, 0.3123849034309387, 0.31120380759239197, 0.3059231638908386, 0.29594504833221436, 0.3021387457847595, 0.2946741282939911, 0.2902730107307434, 0.28744930028915405, 0.2859228849411011, 0.27844861149787903, 0.27248692512512207, 0.27688106894493103, 0.26828059554100037, 0.2605559825897217, 0.2631528377532959, 0.2538820207118988, 0.24851535260677338, 0.2513458728790283, 0.24184180796146393, 0.24392938613891602, 0.23511645197868347, 0.23807193338871002, 0.2352093607187271, 0.22950606048107147, 0.22844494879245758, 0.21477775275707245, 0.21396905183792114, 0.21092873811721802, 0.21506570279598236, 0.21005630493164062, 0.20157107710838318, 0.20197530090808868, 0.1986813098192215, 0.19590316712856293, 0.19312283396720886, 0.19222041964530945, 0.19391010701656342], "accuracy": [0.27618545293807983, 0.4893673360347748, 0.5612204670906067, 0.6190727949142456, 0.665830135345459, 0.7012283802032471, 0.7205125093460083, 0.7371549606323242, 0.754589855670929, 0.7574957013130188, 0.7697794437408447, 0.778232753276825, 0.7829877138137817, 0.7923656105995178, 0.7980451583862305, 0.8033285140991211, 0.8086118102073669, 0.8173292875289917, 0.8208954930305481, 0.8198388814926147, 0.8255184292793274, 0.8321225643157959, 0.8354246616363525, 0.8368775844573975, 0.8417646288871765, 0.841500461101532, 0.8446704745292664, 0.844010055065155, 0.8549728989601135, 0.8536521196365356, 0.8568220734596252, 0.852331280708313, 0.8605204224586487, 0.8644828796386719, 0.8642187118530273, 0.8648791313171387, 0.8669924736022949, 0.870030403137207, 0.8698983192443848, 0.8749174475669861, 0.8712190985679626, 0.8759741187095642, 0.8751816153526306, 0.8823140859603882, 0.8798044919967651, 0.8790120482444763, 0.8811253309249878, 0.8889182209968567, 0.8920882344245911, 0.8898428082466125, 0.8938053250312805, 0.8908994793891907, 0.894069492816925, 0.8942015767097473, 0.8973715305328369, 0.8934090733528137, 0.901862382888794, 0.9008057117462158, 0.9009377956390381, 0.9021265506744385, 0.9059569239616394, 0.9017302989959717, 0.9089948534965515, 0.9120327830314636, 0.9082023501396179, 0.9154669046401978, 0.9128252267837524, 0.9152027368545532, 0.913089394569397, 0.9179764986038208, 0.9161273241043091, 0.9199577569961548, 0.9235239624977112, 0.9235239624977112, 0.9220710396766663, 0.9211464524269104, 0.9268260598182678, 0.9266939759254456, 0.927882730960846, 0.927882730960846, 0.9299960136413574, 0.9314489364624023, 0.9317131042480469, 0.9281468987464905], "val_loss": [2.0402965545654297, 1.520533800125122, 1.048830270767212, 0.8368370532989502, 0.7481555938720703, 0.6900721192359924, 0.6519319415092468, 0.6175993084907532, 0.5907100439071655, 0.5699601769447327, 0.5522433519363403, 0.5376243591308594, 0.5241275429725647, 0.5140846371650696, 0.4982380270957947, 0.49092671275138855, 0.48253896832466125, 0.4701440930366516, 0.4697507619857788, 0.45721590518951416, 0.4522862136363983, 0.4477097690105438, 0.43872976303100586, 0.43276140093803406, 0.434925377368927, 0.42413270473480225, 0.4207524061203003, 0.4145365059375763, 0.41374772787094116, 0.40930119156837463, 0.406951367855072, 0.39986005425453186, 0.39627277851104736, 0.39133694767951965, 0.39176058769226074, 0.38634154200553894, 0.38648366928100586, 0.38428327441215515, 0.37884521484375, 0.3777797818183899, 0.38339823484420776, 0.3725842237472534, 0.3720996379852295, 0.3698015809059143, 0.3706161677837372, 0.3682955801486969, 0.3621254861354828, 0.3637027144432068, 0.3604774475097656, 0.3597540557384491, 0.35810163617134094, 0.35377588868141174, 0.3546799421310425, 0.35312211513519287, 0.3555021584033966, 0.3508593738079071, 0.3510071635246277, 0.3470097780227661, 0.34694597125053406, 0.35091984272003174, 0.3484433591365814, 0.3490500748157501, 0.34474727511405945, 0.34384801983833313, 0.34227225184440613, 0.35011395812034607, 0.34546223282814026, 0.3378009498119354, 0.3434710204601288, 0.34345170855522156, 0.34889334440231323, 0.3422452509403229, 0.3445949852466583, 0.34200572967529297, 0.3384581208229065, 0.34149640798568726, 0.3381621241569519, 0.3452932834625244, 0.3421512544155121, 0.3401370346546173, 0.34214794635772705, 0.34189340472221375, 0.34022876620292664, 0.3389192819595337], "val_accuracy": [0.5529999732971191, 0.6600000262260437, 0.684333324432373, 0.7103333473205566, 0.7306666374206543, 0.750333309173584, 0.762666642665863, 0.7713333368301392, 0.7856666445732117, 0.7963333129882812, 0.8006666898727417, 0.8066666722297668, 0.8163333535194397, 0.8173333406448364, 0.8226666450500488, 0.8289999961853027, 0.8306666612625122, 0.8373333215713501, 0.8330000042915344, 0.8396666646003723, 0.8416666388511658, 0.8386666774749756, 0.8456666469573975, 0.8463333249092102, 0.843666672706604, 0.8456666469573975, 0.8516666889190674, 0.8500000238418579, 0.8523333072662354, 0.8510000109672546, 0.8506666421890259, 0.8573333621025085, 0.8569999933242798, 0.8579999804496765, 0.8583333492279053, 0.8613333106040955, 0.8619999885559082, 0.8550000190734863, 0.8606666922569275, 0.8586666584014893, 0.859666645526886, 0.8656666874885559, 0.8656666874885559, 0.8650000095367432, 0.8650000095367432, 0.8610000014305115, 0.8690000176429749, 0.8650000095367432, 0.8696666955947876, 0.8696666955947876, 0.8690000176429749, 0.8696666955947876, 0.8690000176429749, 0.8703333139419556, 0.8700000047683716, 0.8723333477973938, 0.8730000257492065, 0.8726666569709778, 0.8766666650772095, 0.8713333606719971, 0.874666690826416, 0.8769999742507935, 0.8793333172798157, 0.8769999742507935, 0.878000020980835, 0.8756666779518127, 0.875, 0.8796666860580444, 0.8793333172798157, 0.8766666650772095, 0.878333330154419, 0.8803333044052124, 0.8790000081062317, 0.8809999823570251, 0.8759999871253967, 0.8809999823570251, 0.8823333382606506, 0.8830000162124634, 0.8863333463668823, 0.8846666812896729, 0.8830000162124634, 0.8826666474342346, 0.8856666684150696, 0.8849999904632568]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 81, 43, 61, 17]], "fitness": -0.10514285415410995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3095505237579346, 2.30778169631958, 2.3090169429779053, 2.3148772716522217, 2.3166134357452393, 2.3177151679992676, 2.319329261779785], "accuracy": [0.09219389408826828, 0.09298639744520187, 0.0956280529499054, 0.09008057415485382, 0.08849557489156723, 0.08453308790922165, 0.08717474341392517], "val_loss": [2.3077776432037354, 2.2982370853424072, 2.3123629093170166, 2.3153042793273926, 2.317387580871582, 2.3191139698028564, 2.320647716522217], "val_accuracy": [0.09366666525602341, 0.10899999737739563, 0.09366666525602341, 0.09333333373069763, 0.09399999678134918, 0.09366666525602341, 0.09366666525602341]}, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 0, 3], [66, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0], [28, 99, 96, 67, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 14, 8, 6, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303598165512085, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [4, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 3, 3, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 5, 3, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3038947582244873, 2.302584409713745, 2.302584409713745, 2.302584648132324, 2.302584648132324, 2.302584648132324], "accuracy": [0.10645885765552521, 0.09998679161071777, 0.10210011899471283, 0.10553427785634995, 0.1018359512090683, 0.10236428678035736], "val_loss": [2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025848865509033, 2.3025851249694824], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [59, 99, 96, 99, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [1.1576812257464659e+25, 1.3463794272368667e+25, 1.3606605506222812e+25, 1.3696965729146374e+25, 1.4002743570598202e+25, 1.3612398936783462e+25], "accuracy": [0.1014397069811821, 0.10381719470024109, 0.10487385839223862, 0.10421344637870789, 0.1022322028875351, 0.10593052208423615], "val_loss": [8.867385616798824e+24, 8.867385616798824e+24, 8.867385616798824e+24, 8.867385616798824e+24, 8.867385616798824e+24, 8.867385616798824e+24], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]