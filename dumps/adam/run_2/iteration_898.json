[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221818685531616, 1.8578952550888062, 1.3878755569458008, 1.0852245092391968, 0.9312866926193237, 0.8359991908073425, 0.7759721875190735, 0.7334645986557007, 0.6964094638824463, 0.6630942821502686, 0.6403137445449829, 0.620944619178772, 0.5958670973777771, 0.5854317545890808, 0.5589610934257507, 0.541804313659668, 0.5349157452583313, 0.5190151929855347, 0.5134028196334839, 0.49785685539245605, 0.4924145042896271, 0.4737508296966553, 0.473869264125824, 0.46841514110565186, 0.45560672879219055, 0.45260149240493774, 0.4379384517669678, 0.42958417534828186, 0.42662012577056885, 0.41774705052375793, 0.4132636785507202, 0.4088726341724396, 0.3992999196052551, 0.38778090476989746, 0.3901825547218323, 0.3789578974246979, 0.3748455345630646, 0.3692989647388458, 0.36587879061698914, 0.3596620261669159, 0.3515767753124237, 0.3486233949661255, 0.3472176790237427, 0.33126458525657654, 0.33713170886039734, 0.3263888657093048, 0.3195868134498596, 0.3246733844280243, 0.3105173408985138, 0.3096386194229126, 0.30809804797172546, 0.29795339703559875, 0.29809364676475525, 0.28995439410209656, 0.29656296968460083, 0.2875995934009552, 0.2833653390407562, 0.27720606327056885, 0.27038678526878357, 0.27299243211746216, 0.26609718799591064, 0.2596120536327362, 0.2564506232738495, 0.2533709406852722, 0.2532239556312561], "accuracy": [0.2744683623313904, 0.497820645570755, 0.5572579503059387, 0.6178840398788452, 0.6736230254173279, 0.7018887996673584, 0.724210798740387, 0.7375511527061462, 0.7457403540611267, 0.7618544697761536, 0.7667415142059326, 0.7766477465629578, 0.7880068421363831, 0.7915731072425842, 0.8014793395996094, 0.8084797263145447, 0.8127063512802124, 0.8178576231002808, 0.8150838613510132, 0.8230088353157043, 0.8280280232429504, 0.8334434032440186, 0.834632158279419, 0.833179235458374, 0.837141752243042, 0.8374059200286865, 0.8465195894241333, 0.8487650156021118, 0.8475762605667114, 0.8457271456718445, 0.8549728989601135, 0.8573504090309143, 0.8615770936012268, 0.8643507957458496, 0.863558292388916, 0.8663320541381836, 0.8685774803161621, 0.867520809173584, 0.8732003569602966, 0.8722757697105408, 0.8751816153526306, 0.8762382864952087, 0.8706908226013184, 0.8768987059593201, 0.8786157965660095, 0.8844274282455444, 0.8840311765670776, 0.8849557638168335, 0.8924844861030579, 0.8927486538887024, 0.8897107243537903, 0.8932769894599915, 0.8927486538887024, 0.8956544995307922, 0.8963148593902588, 0.8968431949615479, 0.8980319499969482, 0.8993527889251709, 0.9031832218170166, 0.9000132083892822, 0.9059569239616394, 0.9043719172477722, 0.9030511379241943, 0.906749427318573, 0.91124027967453], "val_loss": [2.033944606781006, 1.5016818046569824, 1.0337917804718018, 0.8233489394187927, 0.7337904572486877, 0.6747090816497803, 0.6331880688667297, 0.6040375232696533, 0.5764447450637817, 0.5547548532485962, 0.5366823077201843, 0.5260889530181885, 0.5060548782348633, 0.4931657016277313, 0.48469847440719604, 0.4696401357650757, 0.46375003457069397, 0.4510161876678467, 0.45119884610176086, 0.44440022110939026, 0.4341428279876709, 0.42911580204963684, 0.4219398498535156, 0.41679292917251587, 0.41909563541412354, 0.40969860553741455, 0.4064640998840332, 0.39861923456192017, 0.39543360471725464, 0.3916202783584595, 0.396630197763443, 0.3853326141834259, 0.38411837816238403, 0.380860298871994, 0.37630704045295715, 0.37380823493003845, 0.3707866966724396, 0.3693711757659912, 0.369540274143219, 0.3659206032752991, 0.36180612444877625, 0.36205965280532837, 0.35954874753952026, 0.35790446400642395, 0.35547876358032227, 0.35490939021110535, 0.3527128994464874, 0.3491750955581665, 0.3495735824108124, 0.35633084177970886, 0.34983938932418823, 0.3497037887573242, 0.34736368060112, 0.3449077010154724, 0.3426974415779114, 0.3442571759223938, 0.34440910816192627, 0.3371286690235138, 0.33896589279174805, 0.33505702018737793, 0.3361777663230896, 0.3385481834411621, 0.33126553893089294, 0.3340485394001007, 0.33611151576042175], "val_accuracy": [0.5526666641235352, 0.6433333158493042, 0.684333324432373, 0.7126666903495789, 0.7393333315849304, 0.7643333077430725, 0.7739999890327454, 0.7760000228881836, 0.7986666560173035, 0.8036666512489319, 0.8083333373069763, 0.8116666674613953, 0.8196666836738586, 0.8183333277702332, 0.8266666531562805, 0.828000009059906, 0.8339999914169312, 0.8363333344459534, 0.8346666693687439, 0.8403333425521851, 0.8433333039283752, 0.8423333168029785, 0.8500000238418579, 0.8496666550636292, 0.8496666550636292, 0.8546666502952576, 0.8513333201408386, 0.856333315372467, 0.8573333621025085, 0.8610000014305115, 0.8569999933242798, 0.8633333444595337, 0.8616666793823242, 0.8613333106040955, 0.8679999709129333, 0.8659999966621399, 0.8683333396911621, 0.8700000047683716, 0.8683333396911621, 0.8706666827201843, 0.8683333396911621, 0.8663333058357239, 0.8736666440963745, 0.871666669845581, 0.8723333477973938, 0.8693333268165588, 0.8743333220481873, 0.8709999918937683, 0.8743333220481873, 0.8740000128746033, 0.8713333606719971, 0.875333309173584, 0.871999979019165, 0.8723333477973938, 0.878333330154419, 0.8773333430290222, 0.878333330154419, 0.8763333559036255, 0.8793333172798157, 0.8813333511352539, 0.878000020980835, 0.8813333511352539, 0.8793333172798157, 0.8813333511352539, 0.8793333172798157]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 26], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 4, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 4, 4, 0, 4, 1, 2, 0], [6, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, grad)), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 4, 0, 3, 5, 4, 5, 6, 5], [2, 1, 0, 2, 0, 0], [39, 66, 69], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 2, 0, 3, 5], [0, 2, 0, 3], [16, 21], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 3], [4, 0, 0, 2, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 1, 0, 1, 1, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.math.multiply(grad, tf.math.square(alpha))), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 2, 3, 0, 3, 8, 2], [0, 1, 0, 2, 1, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 9, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09000000357627869, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(alpha)))", "other_info": {"loss": [2.309586524963379, 2.30983567237854, 2.3102970123291016, 2.3110413551330566, 2.311030626296997, 2.309199333190918], "accuracy": [0.0948355570435524, 0.09259014576673508, 0.09060890227556229, 0.09166556596755981, 0.09034473448991776, 0.09311848133802414], "val_loss": [2.3093197345733643, 2.3093197345733643, 2.3093197345733643, 2.3093197345733643, 2.3093197345733643, 2.3093197345733643], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}, "mapping_values": [1, 13, 7, 6, 2, 10, 6, 4, 2, 2, 1, 1, 1, 20, 12, 8, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 15], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 9, 3, 1, 3, 5], [0, 2, 2, 1], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 4, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08799999952316284, "mapping_values": [1, 9, 5, 4, 3, 2, 2, 0, 1, 2, 1, 1, 0, 16, 9, 7, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.negative(grad))), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [2.3094820976257324, 2.3097829818725586, 2.3097057342529297, 2.3101720809936523, 2.310396194458008, 2.308723211288452], "accuracy": [0.09615638852119446, 0.09179764986038208, 0.09747721254825592, 0.09325055778026581, 0.09232597798109055, 0.09628847241401672], "val_loss": [2.308779239654541, 2.308779239654541, 2.308779239654541, 2.308779239654541, 2.308779239654541, 2.308779239654541], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]