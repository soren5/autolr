[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224403142929077, 1.8726226091384888, 1.4028750658035278, 1.0970252752304077, 0.9379977583885193, 0.8334918022155762, 0.7710944414138794, 0.731714129447937, 0.6857289671897888, 0.6547830700874329, 0.6229365468025208, 0.6045807003974915, 0.5921241641044617, 0.5745278596878052, 0.5591498017311096, 0.5413264036178589, 0.5274195075035095, 0.5165541768074036, 0.5085589289665222, 0.4925228953361511, 0.4931350350379944, 0.48228585720062256, 0.4662697911262512, 0.46261581778526306, 0.4552554488182068, 0.45054903626441956, 0.43337053060531616, 0.42829081416130066, 0.4222315847873688, 0.4075896441936493, 0.40453749895095825, 0.3968700170516968, 0.393488347530365, 0.38746878504753113, 0.38813409209251404, 0.3691795766353607, 0.37540605664253235, 0.36787933111190796, 0.3652019202709198, 0.35482439398765564, 0.3455280065536499, 0.35582783818244934, 0.34555143117904663, 0.3354266285896301, 0.33832165598869324, 0.33143889904022217, 0.32399818301200867, 0.32195889949798584, 0.31890082359313965, 0.3085312843322754, 0.30301547050476074, 0.2993597984313965, 0.2921159863471985, 0.29680871963500977, 0.2883917987346649, 0.2844749987125397, 0.2800179719924927, 0.2787117660045624, 0.269734650850296, 0.27241674065589905, 0.26879703998565674, 0.2639051377773285, 0.26037925481796265, 0.26115313172340393, 0.24942904710769653, 0.2505454421043396, 0.24499687552452087, 0.24362516403198242, 0.23946207761764526, 0.2365107536315918, 0.23053960502147675, 0.22703425586223602, 0.22818541526794434, 0.217063769698143, 0.21496786177158356, 0.21709956228733063, 0.21100538969039917, 0.21248281002044678, 0.20774810016155243], "accuracy": [0.28926166892051697, 0.495839387178421, 0.5690133571624756, 0.6252806782722473, 0.6682076454162598, 0.6999075412750244, 0.7239466309547424, 0.7337207794189453, 0.7503632307052612, 0.7626469135284424, 0.7750627398490906, 0.7821952104568481, 0.7854973077774048, 0.791969358921051, 0.7997622489929199, 0.8047813773155212, 0.8087438941001892, 0.8140271902084351, 0.8164047002792358, 0.8239334225654602, 0.8235371708869934, 0.8302733898162842, 0.8392550349235535, 0.8409721255302429, 0.8384625315666199, 0.8399154543876648, 0.8491612672805786, 0.8457271456718445, 0.8514066934585571, 0.8556333184242249, 0.8582749962806702, 0.8636903762817383, 0.8636903762817383, 0.8614450097084045, 0.8663320541381836, 0.8705587387084961, 0.8677849769592285, 0.8745211958885193, 0.8732003569602966, 0.8745211958885193, 0.8751816153526306, 0.8745211958885193, 0.8746532797813416, 0.8816536664962769, 0.880729079246521, 0.8800686597824097, 0.8853520154953003, 0.8874653577804565, 0.8873332738876343, 0.8911636471748352, 0.8956544995307922, 0.8989565372467041, 0.8949940800666809, 0.8951261639595032, 0.900409460067749, 0.89988112449646, 0.9031832218170166, 0.9045040011405945, 0.9043719172477722, 0.9041078090667725, 0.9039757251739502, 0.9089948534965515, 0.9088627696037292, 0.9066173434257507, 0.9100515246391296, 0.913617730140686, 0.9148064851760864, 0.915070652961731, 0.9149385690689087, 0.913089394569397, 0.9214106202125549, 0.9182406663894653, 0.9183727502822876, 0.921938955783844, 0.9235239624977112, 0.9243164658546448, 0.9249768853187561, 0.924448549747467, 0.9265618920326233], "val_loss": [2.0386273860931396, 1.507431149482727, 1.032530426979065, 0.8180863261222839, 0.7316865921020508, 0.677375316619873, 0.6345369219779968, 0.6077768802642822, 0.581267237663269, 0.5599586367607117, 0.5448732376098633, 0.527765154838562, 0.5159072875976562, 0.5065923929214478, 0.4894339144229889, 0.4828243553638458, 0.4715358018875122, 0.4668583273887634, 0.4577591121196747, 0.46381494402885437, 0.4463351368904114, 0.44067972898483276, 0.4381558895111084, 0.4298655688762665, 0.42131274938583374, 0.4256274700164795, 0.41328004002571106, 0.4125499725341797, 0.4070889949798584, 0.40218082070350647, 0.4015016257762909, 0.39907339215278625, 0.3934515714645386, 0.3906932771205902, 0.395751953125, 0.3876267373561859, 0.3846929669380188, 0.38467058539390564, 0.37954989075660706, 0.3775774836540222, 0.3767155706882477, 0.3842461407184601, 0.3719325363636017, 0.3688763976097107, 0.3714330792427063, 0.3685322403907776, 0.36869490146636963, 0.36681514978408813, 0.364968478679657, 0.36870279908180237, 0.3588778078556061, 0.36784806847572327, 0.3584732115268707, 0.36355817317962646, 0.35684773325920105, 0.35788196325302124, 0.35433265566825867, 0.35671526193618774, 0.3559788465499878, 0.35475191473960876, 0.35776546597480774, 0.358933687210083, 0.35437798500061035, 0.356281578540802, 0.3577302098274231, 0.354075163602829, 0.3561048209667206, 0.3507900536060333, 0.3534744381904602, 0.35759395360946655, 0.3525087535381317, 0.36074739694595337, 0.3586333692073822, 0.3574794828891754, 0.3556632101535797, 0.3568369448184967, 0.3548824191093445, 0.35687124729156494, 0.3623914420604706], "val_accuracy": [0.5659999847412109, 0.6786666512489319, 0.6926666498184204, 0.7166666388511658, 0.7366666793823242, 0.7620000243186951, 0.7646666765213013, 0.7773333191871643, 0.7866666913032532, 0.796999990940094, 0.7910000085830688, 0.8143333196640015, 0.8163333535194397, 0.815666675567627, 0.8240000009536743, 0.8296666741371155, 0.8363333344459534, 0.8379999995231628, 0.8349999785423279, 0.8306666612625122, 0.8450000286102295, 0.8486666679382324, 0.8496666550636292, 0.8506666421890259, 0.8543333411216736, 0.8556666374206543, 0.8573333621025085, 0.8560000061988831, 0.8550000190734863, 0.8606666922569275, 0.856333315372467, 0.8606666922569275, 0.859666645526886, 0.8659999966621399, 0.8646666407585144, 0.862333357334137, 0.8679999709129333, 0.8676666617393494, 0.8663333058357239, 0.8690000176429749, 0.8659999966621399, 0.8613333106040955, 0.8700000047683716, 0.8706666827201843, 0.8686666488647461, 0.8696666955947876, 0.871666669845581, 0.8730000257492065, 0.8733333349227905, 0.8700000047683716, 0.8736666440963745, 0.8733333349227905, 0.875, 0.8703333139419556, 0.8769999742507935, 0.8769999742507935, 0.8759999871253967, 0.8743333220481873, 0.8776666522026062, 0.875, 0.8776666522026062, 0.875333309173584, 0.874666690826416, 0.8786666393280029, 0.8769999742507935, 0.8790000081062317, 0.878333330154419, 0.8786666393280029, 0.8806666731834412, 0.8796666860580444, 0.8803333044052124, 0.8763333559036255, 0.8790000081062317, 0.8823333382606506, 0.8796666860580444, 0.8790000081062317, 0.8799999952316284, 0.8790000081062317, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 52], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 0, 4], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 5, 6, 2, 8, 1, 4, 1, 4, 3, 8], [0, 0, 0, 3, 0, 0, 3, 0, 4, 0], [66, 64, 96, 99, 2, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303037166595459, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 9, 5, 4, 0, 2, 1, 1, 1, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 11}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 2, 3, 0, 3, 7, 8], [0, 1, 0, 2, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 1, 0, 3], [45, 16], [0, 1], [0], [0], [19], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 0, 1, 8, 1, 6, 2, 7, 6, 3, 8, 4, 7], [0, 0, 0, 3, 0, 0, 0, 1, 2, 4, 4, 6, 7, 7, 2, 3, 2, 0, 5], [16, 99, 96, 99, 61, 1, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 7, 4, 3, 2, 2, 1, 1, 1, 43, 24, 19, 7], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.sqrt(grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), tf.math.subtract(beta, grad))), tf.math.sqrt(tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.pow(grad, beta))), sigma), beta), tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 2, 3, 0, 3, 6, 7, 2, 2], [0, 1, 0, 2, 2, 0, 3, 2, 1], [39, 39, 15], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 95], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 4, 1, 4, 1, 8, 2, 8], [4, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 18, 9, 9, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(grad, tf.math.add(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad)), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.311056613922119, 2.310720682144165, 2.3106954097747803, 2.3108603954315186, 2.309939384460449, 2.309366464614868], "accuracy": [0.08717474341392517, 0.09074098616838455, 0.08532558381557465, 0.09549596905708313, 0.09140139818191528, 0.09140139818191528], "val_loss": [2.3088631629943848, 2.308863639831543, 2.308863878250122, 2.3088645935058594, 2.3088648319244385, 2.308865547180176], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 15, 84]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [2.309819221496582, 2.3093676567077637, 2.311213731765747, 2.30998158454895, 2.3101987838745117, 2.3113036155700684], "accuracy": [0.09034473448991776, 0.09021265059709549, 0.09034473448991776, 0.09351472556591034, 0.09549596905708313, 0.09259014576673508], "val_loss": [2.3086793422698975, 2.3086793422698975, 2.3086793422698975, 2.3086793422698975, 2.3086793422698975, 2.3086793422698975], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]