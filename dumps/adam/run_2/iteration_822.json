[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8482857346534729, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221100091934204, 1.8652836084365845, 1.3902544975280762, 1.0936945676803589, 0.9473551511764526, 0.8548807501792908, 0.7799384593963623, 0.7254628539085388, 0.7006467580795288, 0.6586494445800781, 0.636668860912323, 0.6181080341339111, 0.604669988155365, 0.5756711363792419, 0.5663986206054688, 0.5473361015319824, 0.5399029850959778, 0.520634651184082, 0.5113720893859863, 0.500734806060791, 0.48944148421287537, 0.4821442663669586, 0.47311511635780334, 0.4646691679954529, 0.46037420630455017, 0.44351863861083984, 0.4318884313106537, 0.4284200072288513, 0.42099910974502563, 0.41716116666793823, 0.4091740846633911, 0.4049455225467682, 0.4010286331176758, 0.39373114705085754, 0.38318195939064026, 0.3791406750679016, 0.3691704571247101, 0.3674478232860565, 0.36111053824424744, 0.36583709716796875, 0.3611898124217987, 0.35632818937301636, 0.34563353657722473, 0.34149447083473206, 0.3326348066329956, 0.33257874846458435, 0.326247900724411, 0.31506669521331787, 0.31928977370262146, 0.3120022118091583, 0.30736157298088074, 0.3007502853870392, 0.2968115508556366, 0.2953990697860718, 0.2859456539154053, 0.2919882833957672, 0.27989956736564636, 0.2823029160499573, 0.2729823589324951, 0.27123329043388367, 0.2599916458129883, 0.26588869094848633, 0.2619251608848572], "accuracy": [0.2719587981700897, 0.4928014874458313, 0.5655791759490967, 0.617751955986023, 0.6654338836669922, 0.6948884129524231, 0.72672039270401, 0.7388719916343689, 0.7466648817062378, 0.7626469135284424, 0.7695152759552002, 0.7796856164932251, 0.7825914621353149, 0.7944789528846741, 0.7989697456359863, 0.8064984679222107, 0.8053097128868103, 0.8128384351730347, 0.8142913579940796, 0.8215559124946594, 0.8264430165290833, 0.8273676037788391, 0.8318583965301514, 0.8339717388153076, 0.8391229510307312, 0.8407079577445984, 0.8467837572097778, 0.8485008478164673, 0.8536521196365356, 0.8532558679580688, 0.8553691506385803, 0.8549728989601135, 0.856689989566803, 0.8590674996376038, 0.8647470474243164, 0.8638224601745605, 0.8730682730674744, 0.8697662353515625, 0.8730682730674744, 0.8683133125305176, 0.8717474341392517, 0.8747853636741638, 0.8774270415306091, 0.8816536664962769, 0.8784837126731873, 0.8804649114608765, 0.883238673210144, 0.8858803510665894, 0.8849557638168335, 0.8910315632820129, 0.8899748921394348, 0.891559898853302, 0.8924844861030579, 0.89552241563797, 0.8953903317451477, 0.8953903317451477, 0.8972394466400146, 0.900409460067749, 0.9022586345672607, 0.9008057117462158, 0.9066173434257507, 0.904768168926239, 0.9054285883903503], "val_loss": [2.0333175659179688, 1.4990094900131226, 1.0246376991271973, 0.8314824104309082, 0.7395052313804626, 0.689405620098114, 0.6434748768806458, 0.6080567836761475, 0.586156964302063, 0.5716550946235657, 0.5465088486671448, 0.5320401191711426, 0.5204389095306396, 0.5050790905952454, 0.5011821985244751, 0.4829626977443695, 0.4732486307621002, 0.4730983078479767, 0.4595614969730377, 0.45379796624183655, 0.4448341429233551, 0.4409654140472412, 0.43276944756507874, 0.4339514672756195, 0.42296501994132996, 0.4209536015987396, 0.4186432361602783, 0.4092555642127991, 0.4062964618206024, 0.4064089059829712, 0.4015474021434784, 0.40194448828697205, 0.3959904909133911, 0.3939396142959595, 0.38839954137802124, 0.3902260661125183, 0.38634616136550903, 0.3896034359931946, 0.3824106454849243, 0.3765317499637604, 0.38056111335754395, 0.3727366030216217, 0.3729609251022339, 0.36765214800834656, 0.3719189763069153, 0.3655470311641693, 0.36467045545578003, 0.36253654956817627, 0.3612324595451355, 0.35951876640319824, 0.35713961720466614, 0.36177384853363037, 0.365155965089798, 0.3526790738105774, 0.3542259931564331, 0.34927141666412354, 0.3513905704021454, 0.3465169668197632, 0.3469579219818115, 0.34384265542030334, 0.35664916038513184, 0.34506914019584656, 0.3465072810649872], "val_accuracy": [0.5603333115577698, 0.6539999842643738, 0.6830000281333923, 0.6976666450500488, 0.7383333444595337, 0.750333309173584, 0.7586666941642761, 0.7693333625793457, 0.784333348274231, 0.7876666784286499, 0.7946666479110718, 0.8009999990463257, 0.812333345413208, 0.8183333277702332, 0.8180000185966492, 0.8223333358764648, 0.8276666402816772, 0.8233333230018616, 0.8303333520889282, 0.8370000123977661, 0.8330000042915344, 0.8370000123977661, 0.843999981880188, 0.8393333554267883, 0.8476666808128357, 0.8423333168029785, 0.8433333039283752, 0.8516666889190674, 0.8523333072662354, 0.8513333201408386, 0.8543333411216736, 0.8529999852180481, 0.8556666374206543, 0.8516666889190674, 0.8576666712760925, 0.8536666631698608, 0.8560000061988831, 0.8543333411216736, 0.8566666841506958, 0.8610000014305115, 0.8610000014305115, 0.8586666584014893, 0.8659999966621399, 0.8646666407585144, 0.8619999885559082, 0.8663333058357239, 0.8640000224113464, 0.8679999709129333, 0.8650000095367432, 0.8669999837875366, 0.8683333396911621, 0.8706666827201843, 0.8669999837875366, 0.8706666827201843, 0.874666690826416, 0.8723333477973938, 0.8743333220481873, 0.8756666779518127, 0.8756666779518127, 0.8709999918937683, 0.8733333349227905, 0.8743333220481873, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 1, 2], [39, 20], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 2, 3, 0, 3, 5, 4, 4, 4, 5, 8, 7], [0, 2, 0, 3, 2, 4, 1, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 3, 3, 6, 8, 1, 4, 0, 5, 2, 8], [0, 4, 0, 3, 0, 0, 4, 1, 2, 0], [16, 71, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 21, 12, 9, 2, 2, 1, 1, 1, 15, 9, 6, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.pow(tf.math.pow(beta, tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(grad, alpha))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 6], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 1, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 36, 1]], "fitness": -0.09314285963773727, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.subtract(tf.math.sqrt(beta), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310297727584839, 2.3115315437316895, 2.311274766921997, 2.310645341873169, 2.3109092712402344, 2.3104681968688965], "accuracy": [0.09351472556591034, 0.08955223858356476, 0.08691058307886124, 0.08928807079792023, 0.09179764986038208, 0.08506141602993011], "val_loss": [2.309145212173462, 2.309145212173462, 2.309145212173462, 2.309145212173462, 2.309145212173462, 2.309145212173462], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}, "mapping_values": [1, 6, 4, 2, 1, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 1, 0, 3, 4, 2], [0, 0, 0, 2, 3, 2], [47, 39, 14], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 6, 4, 4, 9, 4, 2, 8], [4, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 13, 7, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1, 15, 8, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.309011936187744, 2.3112237453460693, 2.310007333755493, 2.309488296508789, 2.309328556060791, 2.309004545211792], "accuracy": [0.09721305221319199, 0.08611807972192764, 0.09813763201236725, 0.09298639744520187, 0.09008057415485382, 0.09311848133802414], "val_loss": [2.3081533908843994, 2.3080153465270996, 2.3079335689544678, 2.3078746795654297, 2.3078298568725586, 2.3077919483184814], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 8, 8], [0, 2, 0, 3], [0, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08485714346170425, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.308626651763916, 2.308732032775879, 2.3086998462677, 2.307551622390747, 2.3075695037841797, 2.3072445392608643], "accuracy": [0.09285431355237961, 0.09245806187391281, 0.09219389408826828, 0.08849557489156723, 0.09113723784685135, 0.09285431355237961], "val_loss": [2.3083655834198, 2.3082170486450195, 2.308013439178467, 2.3077385425567627, 2.307297945022583, 2.3065035343170166], "val_accuracy": [0.09099999815225601, 0.09066666662693024, 0.08933333307504654, 0.08500000089406967, 0.07900000363588333, 0.07599999755620956]}}]