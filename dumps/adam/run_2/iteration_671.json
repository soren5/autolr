[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8725714087486267, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223104953765869, 1.8740257024765015, 1.3964958190917969, 1.0906832218170166, 0.9268110394477844, 0.8233461380004883, 0.7592145204544067, 0.7164979577064514, 0.6802999377250671, 0.646083652973175, 0.6209272146224976, 0.5953865647315979, 0.5768134593963623, 0.5557214617729187, 0.5408234000205994, 0.5224366188049316, 0.5230069160461426, 0.5053743124008179, 0.49121758341789246, 0.4838036000728607, 0.4740210175514221, 0.47001171112060547, 0.4594978094100952, 0.4607977569103241, 0.4422788918018341, 0.43890953063964844, 0.430359810590744, 0.41397303342819214, 0.4136938750743866, 0.4045988917350769, 0.4016411602497101, 0.39893680810928345, 0.3940378427505493, 0.3848746418952942, 0.3780624270439148, 0.37136805057525635, 0.3672047257423401, 0.3636752665042877, 0.3644242286682129, 0.34559765458106995, 0.35056909918785095, 0.3496207594871521, 0.34122157096862793, 0.33580997586250305, 0.33489444851875305, 0.33743396401405334, 0.3238411843776703, 0.3128388524055481, 0.3114868700504303, 0.3049118220806122, 0.30988481640815735, 0.30123934149742126, 0.3010910749435425, 0.2935315668582916, 0.291586309671402, 0.28421667218208313, 0.2796326279640198, 0.27018046379089355, 0.2709253430366516, 0.26041316986083984, 0.26326891779899597, 0.2617906630039215, 0.2558651268482208, 0.2518484592437744, 0.2518294155597687, 0.2502267062664032, 0.2453746199607849, 0.24060647189617157, 0.23918122053146362], "accuracy": [0.280940443277359, 0.48474442958831787, 0.5674283504486084, 0.6206578016281128, 0.6733588576316833, 0.7054550051689148, 0.7223616242408752, 0.7420420050621033, 0.7539294958114624, 0.7675340175628662, 0.78113853931427, 0.7845727205276489, 0.7907806038856506, 0.7993659973144531, 0.8095363974571228, 0.8124422430992126, 0.8144234418869019, 0.8202351331710815, 0.8310658931732178, 0.8323867321014404, 0.8339717388153076, 0.835160493850708, 0.8426892161369324, 0.8354246616363525, 0.846387505531311, 0.8461233377456665, 0.8492933511734009, 0.8545766472816467, 0.8537842035293579, 0.8607845902442932, 0.8618412613868713, 0.8610487580299377, 0.8578787446022034, 0.8643507957458496, 0.86553955078125, 0.8702945709228516, 0.8656716346740723, 0.8721436858177185, 0.8708229064941406, 0.8776912093162537, 0.8805969953536987, 0.8782195448875427, 0.8776912093162537, 0.8795403242111206, 0.8796724081039429, 0.8770307898521423, 0.8873332738876343, 0.8889182209968567, 0.8893144726753235, 0.8939374089241028, 0.8908994793891907, 0.8951261639595032, 0.8951261639595032, 0.8969752788543701, 0.8960506916046143, 0.9026548862457275, 0.8992207050323486, 0.9059569239616394, 0.9037115573883057, 0.9054285883903503, 0.9054285883903503, 0.9078060984611511, 0.9104477763175964, 0.9082023501396179, 0.9116365313529968, 0.9095231890678406, 0.9111081957817078, 0.9162594079971313, 0.915070652961731], "val_loss": [2.0410189628601074, 1.5237853527069092, 1.0489959716796875, 0.845937967300415, 0.7386411428451538, 0.6862620711326599, 0.6404697895050049, 0.6036909222602844, 0.5837923884391785, 0.5555793642997742, 0.538393497467041, 0.5257389545440674, 0.5158434510231018, 0.49911239743232727, 0.4850653111934662, 0.47672364115715027, 0.468163400888443, 0.45942798256874084, 0.4500713348388672, 0.447171151638031, 0.4372287094593048, 0.433978796005249, 0.44027405977249146, 0.4246003329753876, 0.4180402457714081, 0.41531047224998474, 0.4193911850452423, 0.41043081879615784, 0.4034045934677124, 0.3984259366989136, 0.3960675895214081, 0.39150112867355347, 0.3900100588798523, 0.3915388286113739, 0.38196027278900146, 0.3830489218235016, 0.3786260187625885, 0.379585862159729, 0.3726559579372406, 0.3703559637069702, 0.37262821197509766, 0.36949604749679565, 0.36423957347869873, 0.36650651693344116, 0.36086612939834595, 0.36396533250808716, 0.35740506649017334, 0.35498425364494324, 0.35481688380241394, 0.35441330075263977, 0.34960514307022095, 0.348244845867157, 0.35221636295318604, 0.34620401263237, 0.3488290309906006, 0.34266728162765503, 0.3408474028110504, 0.34020018577575684, 0.33890819549560547, 0.339671790599823, 0.3397670388221741, 0.3399210572242737, 0.33524638414382935, 0.3387548327445984, 0.33484211564064026, 0.33265140652656555, 0.3343849182128906, 0.3343554735183716, 0.33569005131721497], "val_accuracy": [0.5193333625793457, 0.6573333144187927, 0.6769999861717224, 0.7036666870117188, 0.7356666922569275, 0.7486666440963745, 0.7606666684150696, 0.7749999761581421, 0.7836666703224182, 0.7926666736602783, 0.8006666898727417, 0.8073333501815796, 0.8140000104904175, 0.8166666626930237, 0.8226666450500488, 0.8296666741371155, 0.8356666564941406, 0.8316666483879089, 0.8399999737739563, 0.8450000286102295, 0.8476666808128357, 0.8433333039283752, 0.8396666646003723, 0.8513333201408386, 0.8529999852180481, 0.8550000190734863, 0.8473333120346069, 0.8569999933242798, 0.8586666584014893, 0.8600000143051147, 0.8603333234786987, 0.859333336353302, 0.8616666793823242, 0.8636666536331177, 0.8650000095367432, 0.8636666536331177, 0.8663333058357239, 0.8703333139419556, 0.8683333396911621, 0.8693333268165588, 0.8696666955947876, 0.8679999709129333, 0.8743333220481873, 0.8700000047683716, 0.871999979019165, 0.8743333220481873, 0.8730000257492065, 0.874666690826416, 0.8766666650772095, 0.8773333430290222, 0.8776666522026062, 0.8759999871253967, 0.874666690826416, 0.8796666860580444, 0.8806666731834412, 0.8806666731834412, 0.8853333592414856, 0.8856666684150696, 0.8806666731834412, 0.8843333125114441, 0.8799999952316284, 0.8843333125114441, 0.8859999775886536, 0.8896666765213013, 0.8843333125114441, 0.8856666684150696, 0.887333333492279, 0.8866666555404663, 0.8889999985694885]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [29, 39], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 5, 3, 0, 8, 6], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [54], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 5, 6, 6, 4, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [73, 99, 96, 36, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 0, 4, 2, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3038687705993652, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [65, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 3], [3, 3, 0, 3, 2], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2, 1, 6, 9, 8, 1, 2, 6, 1, 2, 0, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1, 6, 5, 6, 5, 4, 1, 3, 1], [16, 34, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 1, 2, 1, 1, 0, 40, 22, 18, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.square(grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(alpha, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))))), tf.math.subtract(grad, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, grad), tf.math.negative(tf.math.divide_no_nan(grad, grad))), alpha), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 1, 0], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [3, 2, 6, 0, 3, 5, 2, 6, 2, 7, 0, 6, 6, 3, 1, 0, 9, 8, 9], [0, 2, 0, 3, 3, 0, 1, 2, 5, 2, 2], [16, 16, 92, 29, 15], [0, 1], [0], [0], [1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 3, 9, 4, 0, 8], [1, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 78, 96, 51, 61, 40]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 30, 19, 11, 5, 2, 1, 1, 1, 14, 8, 6, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(beta))), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.subtract(beta, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.312612295150757, 3.9126436710357666, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08638224750757217, 0.07885351777076721, 0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.329042673110962, 68.7051010131836, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09133332967758179, 0.10233332961797714, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 1, 8], [0, 0, 0, 4, 0, 0, 2, 1, 2, 0], [16, 99, 96, 22, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3266255855560303, 2.3542585372924805, 2.3611092567443848, 2.3647260665893555, 2.3652992248535156, 2.367342233657837, 2.366170883178711], "accuracy": [0.07911768555641174, 0.07594769448041916, 0.07079645991325378, 0.07264561951160431, 0.07224937528371811, 0.06709814071655273, 0.0668339729309082], "val_loss": [2.3512370586395264, 2.365842580795288, 2.3701584339141846, 2.3714184761047363, 2.3717257976531982, 2.371783494949341, 2.3717916011810303], "val_accuracy": [0.08966666460037231, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]