[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223461389541626, 1.8735584020614624, 1.3969531059265137, 1.0932183265686035, 0.9589236378669739, 0.8540147542953491, 0.7792695760726929, 0.7525712251663208, 0.7005897760391235, 0.6720831990242004, 0.6447546482086182, 0.6173062324523926, 0.5947830677032471, 0.5758145451545715, 0.5634902715682983, 0.5539661645889282, 0.5378466844558716, 0.522165834903717, 0.5084709525108337, 0.5012897253036499, 0.4913020431995392, 0.479870080947876, 0.470824271440506, 0.47015079855918884, 0.4642399549484253, 0.45766010880470276, 0.45458370447158813, 0.4390830099582672, 0.4318038821220398, 0.42721322178840637, 0.41708919405937195, 0.40835636854171753, 0.40875598788261414, 0.39794984459877014], "accuracy": [0.2631092369556427, 0.4865935742855072, 0.55791836977005, 0.617751955986023, 0.6584334969520569, 0.6922467350959778, 0.7214370369911194, 0.7235503792762756, 0.7449478507041931, 0.7495707273483276, 0.7687227725982666, 0.7792893648147583, 0.78113853931427, 0.793422281742096, 0.7973847389221191, 0.8055738806724548, 0.8041210174560547, 0.8100647330284119, 0.8198388814926147, 0.8186501264572144, 0.8289526104927063, 0.8269713521003723, 0.8323867321014404, 0.8347642421722412, 0.8364813327789307, 0.8413683772087097, 0.8399154543876648, 0.8473120927810669, 0.8492933511734009, 0.8461233377456665, 0.8512746095657349, 0.8555012345314026, 0.8541803956031799, 0.8557654023170471], "val_loss": [2.039262056350708, 1.5166184902191162, 1.0472772121429443, 0.8419659733772278, 0.7553792595863342, 0.6983751058578491, 0.6519448161125183, 0.619894802570343, 0.5940279960632324, 0.5732210874557495, 0.552272379398346, 0.535683274269104, 0.5233274698257446, 0.509075939655304, 0.5006131529808044, 0.49551692605018616, 0.47876542806625366, 0.4697876274585724, 0.4622434973716736, 0.45885294675827026, 0.44865429401397705, 0.4422350227832794, 0.4445459842681885, 0.43578553199768066, 0.43011054396629333, 0.42881566286087036, 0.4221058487892151, 0.41248390078544617, 0.40965425968170166, 0.40784716606140137, 0.4080873131752014, 0.40141454339027405, 0.4030109941959381, 0.39808863401412964], "val_accuracy": [0.5196666717529297, 0.656333327293396, 0.6863333582878113, 0.7046666741371155, 0.7353333234786987, 0.7516666650772095, 0.7616666555404663, 0.7746666669845581, 0.7770000100135803, 0.7839999794960022, 0.8036666512489319, 0.8073333501815796, 0.8116666674613953, 0.8253333568572998, 0.8273333311080933, 0.828000009059906, 0.8323333263397217, 0.8379999995231628, 0.8413333296775818, 0.8376666903495789, 0.8446666598320007, 0.8510000109672546, 0.8433333039283752, 0.8453333377838135, 0.8539999723434448, 0.8566666841506958, 0.8536666631698608, 0.8566666841506958, 0.8633333444595337, 0.8573333621025085, 0.8610000014305115, 0.8603333234786987, 0.859333336353302, 0.8619999885559082]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 2], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [11], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 53, 59, 61, 1]], "fitness": -0.7602857351303101, "mapping_values": [1, 9, 5, 4, 1, 6, 4, 2, 1, 2, 1, 1, 1, 13, 6, 7, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, alpha), tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), grad), sigma)", "other_info": {"loss": [1.8041267395019531, 1.0799793004989624, 0.9465543031692505, 0.9075522422790527, 0.8740730881690979, 0.8523017764091492, 0.8329727649688721, 0.8159514665603638, 0.8142209053039551, 0.7966192364692688, 0.7921048402786255, 0.788009762763977, 0.7778792977333069, 0.7847771644592285, 0.7720399498939514, 0.7637309432029724, 0.7696930170059204, 0.7547787427902222, 0.7553115487098694, 0.7566729187965393, 0.7411530613899231, 0.7498572468757629, 0.7480714917182922, 0.7495954036712646, 0.7435380816459656, 0.7382068634033203, 0.7441665530204773, 0.735710084438324, 0.7308000922203064, 0.7338337898254395, 0.7295946478843689, 0.7233951687812805, 0.7194295525550842, 0.7254331707954407, 0.719456672668457, 0.7179096341133118, 0.7281910181045532, 0.718134343624115, 0.7205978035926819, 0.705785870552063, 0.7135799527168274], "accuracy": [0.38660678267478943, 0.6194690465927124, 0.6618676781654358, 0.6729626059532166, 0.687491774559021, 0.6919825673103333, 0.695813000202179, 0.7013604640960693, 0.7018887996673584, 0.7077004313468933, 0.7135120630264282, 0.7107383608818054, 0.7195879220962524, 0.7174745798110962, 0.7201162576675415, 0.7177387475967407, 0.7177387475967407, 0.7214370369911194, 0.7260599732398987, 0.7206445932388306, 0.7308149337768555, 0.7260599732398987, 0.7268524765968323, 0.7280412316322327, 0.7272487282752991, 0.7323999404907227, 0.7293620109558105, 0.7281733155250549, 0.7334566116333008, 0.7359662055969238, 0.7351737022399902, 0.739928662776947, 0.7285695672035217, 0.7313432693481445, 0.7347774505615234, 0.7368907928466797, 0.7294940948486328, 0.7349095344543457, 0.7285695672035217, 0.7411174178123474, 0.7388719916343689], "val_loss": [1.0295019149780273, 0.8653382062911987, 0.8022269010543823, 0.7676276564598083, 0.7486495971679688, 0.733937680721283, 0.720919668674469, 0.7128109335899353, 0.7049435377120972, 0.7000866532325745, 0.6936382055282593, 0.6903729438781738, 0.6850680112838745, 0.6809134483337402, 0.6777823567390442, 0.6741809248924255, 0.673494815826416, 0.66977459192276, 0.6674422025680542, 0.6653909683227539, 0.6627262234687805, 0.6619220972061157, 0.6595301032066345, 0.6573168039321899, 0.6553254127502441, 0.6540952324867249, 0.6527320742607117, 0.6509851217269897, 0.648786187171936, 0.6478652954101562, 0.6457621455192566, 0.6453124284744263, 0.6444122195243835, 0.64304518699646, 0.6419548392295837, 0.6405432820320129, 0.6398827433586121, 0.6387078762054443, 0.6375514268875122, 0.6364195346832275, 0.6348301768302917], "val_accuracy": [0.6583333611488342, 0.6836666464805603, 0.6993333101272583, 0.7206666469573975, 0.718999981880188, 0.7293333411216736, 0.7310000061988831, 0.7300000190734863, 0.737666666507721, 0.7336666584014893, 0.737666666507721, 0.7390000224113464, 0.7403333187103271, 0.7453333139419556, 0.7450000047683716, 0.746666669845581, 0.7443333268165588, 0.7476666569709778, 0.7486666440963745, 0.746999979019165, 0.749666690826416, 0.7476666569709778, 0.7473333477973938, 0.7519999742507935, 0.7523333430290222, 0.7523333430290222, 0.7526666522026062, 0.7536666393280029, 0.7580000162124634, 0.753333330154419, 0.7566666603088379, 0.7573333382606506, 0.7576666474342346, 0.7590000033378601, 0.7570000290870667, 0.7599999904632568, 0.7586666941642761, 0.7593333125114441, 0.7596666812896729, 0.7590000033378601, 0.7590000033378601]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 5, 4, 2, 0, 9, 3, 9, 5, 1, 7, 5], [0, 1, 0, 2, 0, 3, 0, 3], [39, 39, 4, 2, 81, 38], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 5, 9], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 16, 8, 6, 1, 0, 1, 1, 2, 1, 1, 1, 23, 13, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), grad))))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(sigma))), alpha), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 3, 0, 1], [67, 18], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 3, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [28, 99, 63, 1, 61, 1]], "fitness": -0.09971428662538528, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 1, 2, 1, 1, 0, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.7118662499288094e+21, 4.412886434826139e+21, 4.1849640427595225e+21, 4.4082302757613915e+21, 4.392749433517282e+21, 3.983376449513955e+21], "accuracy": [0.10421344637870789, 0.10289261490106583, 0.10051512718200684, 0.09985470771789551, 0.10236428678035736, 0.10632677376270294], "val_loss": [4.280172953631902e+21, 4.280172953631902e+21, 4.280172953631902e+21, 4.280172953631902e+21, 4.280172953631902e+21, 4.280172953631902e+21], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5, 6, 9], [0, 2, 0, 3], [16, 16, 0], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 5, 3, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 4], [16, 86, 96, 99, 61, 1]], "fitness": -0.08828571438789368, "mapping_values": [1, 9, 5, 4, 2, 12, 8, 4, 3, 2, 1, 1, 1, 27, 15, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)))), tf.math.square(grad))))", "other_info": {"loss": [2.3104066848754883, 2.309216260910034, 2.3099026679992676, 2.3082275390625, 2.3096463680267334, 2.3093223571777344], "accuracy": [0.08479725569486618, 0.09087307006120682, 0.09232597798109055, 0.09008057415485382, 0.08770307898521423, 0.09628847241401672], "val_loss": [2.3090410232543945, 2.3090410232543945, 2.3090410232543945, 2.3090410232543945, 2.3090410232543945, 2.3090410232543945], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]