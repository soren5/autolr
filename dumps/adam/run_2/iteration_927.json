[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8671428561210632, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223439931869507, 1.8684300184249878, 1.4011621475219727, 1.0963720083236694, 0.9276119470596313, 0.8328621983528137, 0.7736222743988037, 0.7198641896247864, 0.6844301223754883, 0.6512854695320129, 0.6354896426200867, 0.6101927161216736, 0.587106466293335, 0.5790908336639404, 0.5431851148605347, 0.5387189388275146, 0.5226625204086304, 0.5205726623535156, 0.5004695057868958, 0.492384135723114, 0.47867724299430847, 0.47234681248664856, 0.4576210379600525, 0.4539349675178528, 0.45077943801879883, 0.4385998547077179, 0.42398959398269653, 0.4266676902770996, 0.4161538779735565, 0.4112416207790375, 0.4037088453769684, 0.3933548927307129, 0.38619935512542725, 0.386182963848114, 0.37617260217666626, 0.3719404935836792, 0.36987751722335815, 0.36231565475463867, 0.3565973937511444, 0.34880173206329346, 0.3449203073978424, 0.34140023589134216, 0.33862876892089844, 0.333359956741333, 0.33010604977607727, 0.3277309536933899, 0.3154888153076172, 0.31729239225387573, 0.30747121572494507, 0.30320799350738525, 0.29971325397491455, 0.29343944787979126, 0.2885061502456665, 0.2875940799713135, 0.28621020913124084, 0.2823907732963562, 0.27760037779808044, 0.27752023935317993, 0.26936474442481995, 0.26741302013397217, 0.265990287065506, 0.25340357422828674, 0.2571559250354767, 0.2543084919452667], "accuracy": [0.2635054886341095, 0.49425438046455383, 0.5576542019844055, 0.6206578016281128, 0.6682076454162598, 0.7069079279899597, 0.7252674698829651, 0.7388719916343689, 0.750759482383728, 0.7631752490997314, 0.763439416885376, 0.7796856164932251, 0.7877426743507385, 0.7927618622779846, 0.8084797263145447, 0.8121780753135681, 0.8170651197433472, 0.8152159452438354, 0.8222163319587708, 0.8265751004219055, 0.8335754871368408, 0.8327829837799072, 0.8355567455291748, 0.8448025584220886, 0.8457271456718445, 0.847840428352356, 0.8502179384231567, 0.8537842035293579, 0.8516708612442017, 0.8577466607093811, 0.8617091774940491, 0.8617091774940491, 0.8625016212463379, 0.8651432991027832, 0.8709549307823181, 0.8714832663536072, 0.8735966086387634, 0.8734645247459412, 0.8750495314598083, 0.8757099509239197, 0.8794082403182983, 0.882710337638855, 0.8813894987106323, 0.8825782537460327, 0.8817857503890991, 0.885219931602478, 0.8886540532112122, 0.8869370222091675, 0.8916919827461243, 0.8908994793891907, 0.8908994793891907, 0.8975036144256592, 0.8975036144256592, 0.9027869701385498, 0.8968431949615479, 0.9029190540313721, 0.900409460067749, 0.9000132083892822, 0.9013340473175049, 0.9025228023529053, 0.9062210917472839, 0.9109761118888855, 0.9062210917472839, 0.9124290347099304], "val_loss": [2.038773775100708, 1.5150138139724731, 1.0470385551452637, 0.8354041576385498, 0.7433184385299683, 0.6860857605934143, 0.6378505229949951, 0.6034188866615295, 0.573260486125946, 0.5499515533447266, 0.5391007661819458, 0.5195848941802979, 0.5048484802246094, 0.4873766601085663, 0.47654393315315247, 0.463499516248703, 0.45546045899391174, 0.45137906074523926, 0.4394814372062683, 0.4389839768409729, 0.429574579000473, 0.41800186038017273, 0.4164796471595764, 0.4117347002029419, 0.40586066246032715, 0.39824023842811584, 0.3981383442878723, 0.3954888582229614, 0.39430150389671326, 0.3845062553882599, 0.3826982378959656, 0.38054588437080383, 0.3725445568561554, 0.3741670846939087, 0.36972811818122864, 0.365217924118042, 0.36251962184906006, 0.3582829535007477, 0.3593403697013855, 0.3615092635154724, 0.35420551896095276, 0.3557533025741577, 0.3531530797481537, 0.34992489218711853, 0.348764568567276, 0.34614264965057373, 0.34202221035957336, 0.3429408669471741, 0.3376522362232208, 0.3399648368358612, 0.33532193303108215, 0.33459609746932983, 0.34025561809539795, 0.3340315520763397, 0.3316505253314972, 0.33394041657447815, 0.33150890469551086, 0.3317827880382538, 0.3306947946548462, 0.3243824541568756, 0.3238702118396759, 0.3358432352542877, 0.3287617564201355, 0.3289180099964142], "val_accuracy": [0.5690000057220459, 0.6633333563804626, 0.6793333292007446, 0.7099999785423279, 0.7283333539962769, 0.7443333268165588, 0.7576666474342346, 0.7743333578109741, 0.7850000262260437, 0.7886666655540466, 0.796999990940094, 0.8086666464805603, 0.8190000057220459, 0.8233333230018616, 0.8193333148956299, 0.8306666612625122, 0.8393333554267883, 0.8363333344459534, 0.8410000205039978, 0.8410000205039978, 0.8433333039283752, 0.8489999771118164, 0.8523333072662354, 0.8546666502952576, 0.8556666374206543, 0.8576666712760925, 0.8503333330154419, 0.8556666374206543, 0.859000027179718, 0.862333357334137, 0.8606666922569275, 0.8636666536331177, 0.8686666488647461, 0.8640000224113464, 0.859666645526886, 0.8673333525657654, 0.8690000176429749, 0.8713333606719971, 0.8709999918937683, 0.8686666488647461, 0.871999979019165, 0.8700000047683716, 0.8723333477973938, 0.8756666779518127, 0.8756666779518127, 0.875, 0.8776666522026062, 0.8769999742507935, 0.8809999823570251, 0.8769999742507935, 0.8830000162124634, 0.8806666731834412, 0.8763333559036255, 0.8820000290870667, 0.8816666603088379, 0.8840000033378601, 0.8833333253860474, 0.8813333511352539, 0.8846666812896729, 0.8799999952316284, 0.8846666812896729, 0.8793333172798157, 0.8809999823570251, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [0, 2, 3, 4, 3, 5, 0, 9], [0, 1, 0, 2], [39, 39, 72], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8, 1, 3, 0, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 51, 61, 4, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 25, 15, 10, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.negative(sigma), alpha), tf.math.negative(beta)))))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [98], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [93, 99, 96, 99, 61, 1, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 20, 10, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029544353485107, 2.3025851249694824, 2.3025856018066406, 2.3025829792022705, 2.3025825023651123, 2.3025963306427, 2.3026347160339355], "accuracy": [0.1026284471154213, 0.10051512718200684, 0.09985470771789551, 0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025848865509033, 2.302584648132324, 2.3025858402252197, 2.3025870323181152, 2.30259108543396, 2.3026111125946045, 2.302644968032837], "val_accuracy": [0.10166666656732559, 0.10266666859388351, 0.10266666859388351, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 51], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 6, 3, 0, 3, 4, 5, 4, 1], [0, 2, 0, 3, 0, 5, 5], [35, 16, 85], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 0, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 3, 0], [16, 99, 46, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 16, 9, 7, 3, 1, 0, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.pow(tf.math.subtract(grad, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(sigma, alpha))))", "other_info": {"loss": [2.4038357734680176, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.5359315872192383, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 6, 3, 3, 6, 0], [0, 1, 0, 2, 0, 3, 3], [39, 39, 23], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 15, 8, 7, 3, 10, 6, 4, 1, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3101422786712646, 2.310246706008911, 2.30924654006958, 2.309321165084839, 2.310464859008789, 2.3100991249084473], "accuracy": [0.09206181764602661, 0.09391097724437714, 0.09377889335155487, 0.09219389408826828, 0.09179764986038208, 0.09179764986038208], "val_loss": [2.3087809085845947, 2.3087809085845947, 2.3087809085845947, 2.3087801933288574, 2.3087801933288574, 2.308779716491699], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]