[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8605714440345764, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2221763134002686, 1.8632493019104004, 1.3739992380142212, 1.0755304098129272, 0.9270909428596497, 0.8234335780143738, 0.753062903881073, 0.7269338965415955, 0.6837958097457886, 0.6383227109909058, 0.6230388879776001, 0.5903458595275879, 0.5735032558441162, 0.5593389868736267, 0.5359464287757874, 0.5346068143844604, 0.5190190672874451, 0.508911669254303, 0.4939914643764496, 0.47169744968414307, 0.4727257490158081, 0.4584851861000061, 0.44656258821487427, 0.4424855411052704, 0.4371882677078247, 0.42129483819007874, 0.4172861576080322, 0.40322795510292053, 0.40068957209587097, 0.3875616192817688, 0.3895599842071533, 0.3934204578399658, 0.3762359619140625, 0.3658444285392761, 0.36182069778442383, 0.3630408048629761, 0.35576796531677246, 0.3513752818107605, 0.3391656279563904, 0.3367404043674469, 0.3369397819042206, 0.33414140343666077, 0.3261680006980896, 0.3181469440460205, 0.3206479847431183, 0.31025952100753784, 0.3083679676055908, 0.3010347783565521, 0.2973969280719757, 0.2933323085308075, 0.28734511137008667, 0.288333922624588, 0.28422319889068604, 0.2839067280292511, 0.2788975238800049, 0.2720102369785309, 0.27059584856033325, 0.26323598623275757, 0.2631353735923767, 0.2655925750732422, 0.2572108507156372, 0.24870865046977997, 0.250454306602478, 0.24720114469528198], "accuracy": [0.2661471366882324, 0.49649980664253235, 0.5757495760917664, 0.6269977688789368, 0.659490168094635, 0.7065116763114929, 0.7296261787414551, 0.7384757399559021, 0.7510236501693726, 0.767401933670044, 0.7740060687065125, 0.7812706232070923, 0.7921014428138733, 0.7981772422790527, 0.8030643463134766, 0.8064984679222107, 0.8152159452438354, 0.8171972036361694, 0.8202351331710815, 0.828820526599884, 0.8293488025665283, 0.8339717388153076, 0.8408400416374207, 0.845859169960022, 0.8425571322441101, 0.8514066934585571, 0.8499537706375122, 0.8603883385658264, 0.8537842035293579, 0.8593316674232483, 0.8581429123878479, 0.8599920868873596, 0.8638224601745605, 0.8647470474243164, 0.8684453964233398, 0.871879518032074, 0.8709549307823181, 0.8706908226013184, 0.878879964351654, 0.876370370388031, 0.8808611631393433, 0.8800686597824097, 0.8838990926742554, 0.8819178342819214, 0.8836349248886108, 0.8858803510665894, 0.8868049383163452, 0.8894465565681458, 0.8908994793891907, 0.8911636471748352, 0.89552241563797, 0.8960506916046143, 0.8976356983184814, 0.8938053250312805, 0.9015982151031494, 0.9031832218170166, 0.9022586345672607, 0.9026548862457275, 0.9052965044975281, 0.9026548862457275, 0.9066173434257507, 0.9113723635673523, 0.9064852595329285, 0.909259021282196], "val_loss": [2.0345563888549805, 1.5016545057296753, 1.0252232551574707, 0.8108903765678406, 0.7218925952911377, 0.6678622961044312, 0.6252995133399963, 0.5963858366012573, 0.5660671591758728, 0.5423932075500488, 0.5264735221862793, 0.5094255805015564, 0.49651655554771423, 0.4856572151184082, 0.4752040505409241, 0.46979427337646484, 0.4575005769729614, 0.4557487666606903, 0.4404800534248352, 0.43436697125434875, 0.43443188071250916, 0.4265570342540741, 0.4194777011871338, 0.41431066393852234, 0.4062327444553375, 0.40838688611984253, 0.39698144793510437, 0.39745181798934937, 0.3947540819644928, 0.39163342118263245, 0.3863966166973114, 0.38249340653419495, 0.38195541501045227, 0.3780389130115509, 0.3718445897102356, 0.3736136853694916, 0.37762394547462463, 0.36677882075309753, 0.3643127977848053, 0.3635096848011017, 0.3588898479938507, 0.35754427313804626, 0.3562321662902832, 0.3602353632450104, 0.3576239347457886, 0.35512417554855347, 0.3480701446533203, 0.34935852885246277, 0.3474864363670349, 0.3457363247871399, 0.34441491961479187, 0.33834323287010193, 0.34027478098869324, 0.3419646918773651, 0.34364205598831177, 0.33707496523857117, 0.3362768888473511, 0.33424893021583557, 0.33395543694496155, 0.3335399925708771, 0.3368125855922699, 0.32998067140579224, 0.3331117033958435, 0.3332473039627075], "val_accuracy": [0.5183333158493042, 0.6639999747276306, 0.6936666369438171, 0.7170000076293945, 0.7390000224113464, 0.762333333492279, 0.7716666460037231, 0.778333306312561, 0.7903333306312561, 0.8006666898727417, 0.809333324432373, 0.8100000023841858, 0.815666675567627, 0.8263333439826965, 0.8230000138282776, 0.8309999704360962, 0.8339999914169312, 0.8330000042915344, 0.8460000157356262, 0.8410000205039978, 0.8496666550636292, 0.8433333039283752, 0.8503333330154419, 0.8513333201408386, 0.8556666374206543, 0.8560000061988831, 0.8579999804496765, 0.8576666712760925, 0.8619999885559082, 0.862333357334137, 0.8643333315849304, 0.8669999837875366, 0.8619999885559082, 0.8686666488647461, 0.8676666617393494, 0.8683333396911621, 0.862666666507721, 0.8700000047683716, 0.8740000128746033, 0.8726666569709778, 0.8736666440963745, 0.871666669845581, 0.8700000047683716, 0.875333309173584, 0.8730000257492065, 0.8736666440963745, 0.8776666522026062, 0.8803333044052124, 0.878333330154419, 0.8766666650772095, 0.878000020980835, 0.8790000081062317, 0.8816666603088379, 0.8806666731834412, 0.8840000033378601, 0.8809999823570251, 0.8833333253860474, 0.8849999904632568, 0.8856666684150696, 0.8796666860580444, 0.8820000290870667, 0.8823333382606506, 0.8833333253860474, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 5, 2, 8], [1, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.math.subtract(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 17}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3], [2, 1, 0, 2], [35, 39], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3], [0, 2, 0, 0], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8], [0, 2, 0, 1], [16, 27], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 5, 8, 4, 1, 4, 1, 4], [4, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 96, 99, 61, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 2, 2, 1, 1, 1, 16, 9, 7, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [1.174879808897478e+31, 3746.605224609375, 6679.185546875, 9611.4638671875, 12545.9375, 15476.39453125], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2531.50927734375, 5458.6806640625, 8385.2578125, 11314.6142578125, 14239.654296875, 17163.779296875], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 2, 3, 8, 3, 0, 3, 0, 8], [1, 1, 0, 1, 1, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [75, 99, 96, 99, 42, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 1, 9, 5, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.sqrt(alpha)), alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303403615951538, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]