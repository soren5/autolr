[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222404956817627, 1.859899640083313, 1.3775410652160645, 1.092565894126892, 0.9339991807937622, 0.8459115028381348, 0.7821548581123352, 0.7323962450027466, 0.6975433826446533, 0.6623862981796265, 0.6445580124855042, 0.620723307132721, 0.5963590741157532, 0.5840374827384949, 0.570345401763916, 0.5532426238059998, 0.5396938323974609, 0.5220779180526733, 0.5151298642158508, 0.5040601491928101, 0.4989229440689087, 0.47944769263267517, 0.47223344445228577, 0.4789913594722748, 0.46150511503219604, 0.45685574412345886, 0.449008584022522, 0.43671515583992004, 0.4273015856742859, 0.4176389276981354, 0.4200423061847687, 0.4098205268383026, 0.4068181812763214, 0.4041118621826172, 0.3933335840702057, 0.39322152733802795, 0.388319730758667, 0.38330015540122986, 0.3727750778198242, 0.3650437593460083, 0.3645612597465515, 0.35561928153038025, 0.34886860847473145, 0.3470834195613861, 0.33645179867744446, 0.32942718267440796, 0.3345595896244049, 0.3295380771160126, 0.3244086503982544, 0.3240155875682831, 0.3153245449066162, 0.3044501841068268, 0.30039098858833313], "accuracy": [0.2685246467590332, 0.49953770637512207, 0.5758816599845886, 0.6203936338424683, 0.6705851554870605, 0.6984546184539795, 0.7206445932388306, 0.737022876739502, 0.7473253011703491, 0.7598732113838196, 0.7667415142059326, 0.776251494884491, 0.7864218950271606, 0.793950617313385, 0.7957997918128967, 0.8029322624206543, 0.8082155585289001, 0.811649739742279, 0.817461371421814, 0.8204993009567261, 0.821820080280304, 0.8298771381378174, 0.8296129703521729, 0.8334434032440186, 0.8347642421722412, 0.8366134166717529, 0.8391229510307312, 0.8454629778862, 0.8511425256729126, 0.8508783578872681, 0.8471800088882446, 0.8535200357437134, 0.8540483713150024, 0.8590674996376038, 0.8617091774940491, 0.8573504090309143, 0.8618412613868713, 0.8648791313171387, 0.8688416481018066, 0.8691058158874512, 0.8668603897094727, 0.8728041052818298, 0.872407853603363, 0.8770307898521423, 0.8796724081039429, 0.8815215826034546, 0.8809932470321655, 0.8821820020675659, 0.8812574148178101, 0.8831065893173218, 0.8870691061019897, 0.891559898853302, 0.8894465565681458], "val_loss": [2.037705421447754, 1.5022475719451904, 1.0339857339859009, 0.8285009860992432, 0.7463492751121521, 0.6824151873588562, 0.6367337107658386, 0.6054236888885498, 0.5719091296195984, 0.550344705581665, 0.5302756428718567, 0.5126297473907471, 0.4983275234699249, 0.4910975694656372, 0.47155994176864624, 0.466519296169281, 0.4521024227142334, 0.44347289204597473, 0.4373791515827179, 0.4318380057811737, 0.42657604813575745, 0.4170340597629547, 0.411385715007782, 0.4068981111049652, 0.40272223949432373, 0.3933092951774597, 0.3912275433540344, 0.38424691557884216, 0.38958147168159485, 0.3804541528224945, 0.3761531710624695, 0.3771700859069824, 0.3688459098339081, 0.36120283603668213, 0.36266621947288513, 0.36379891633987427, 0.3602735996246338, 0.3546597361564636, 0.351466566324234, 0.34964972734451294, 0.35035738348960876, 0.35124343633651733, 0.3433467149734497, 0.34276294708251953, 0.33977627754211426, 0.34029310941696167, 0.33726781606674194, 0.33482006192207336, 0.3363052010536194, 0.3326049745082855, 0.3366437554359436, 0.3342348039150238, 0.32922887802124023], "val_accuracy": [0.5503333210945129, 0.6543333530426025, 0.6753333210945129, 0.7020000219345093, 0.7253333330154419, 0.7419999837875366, 0.7649999856948853, 0.768666684627533, 0.7916666865348816, 0.79666668176651, 0.8056666851043701, 0.8159999847412109, 0.8180000185966492, 0.8240000009536743, 0.8246666789054871, 0.8309999704360962, 0.8326666951179504, 0.8349999785423279, 0.8336666822433472, 0.8379999995231628, 0.840666651725769, 0.8463333249092102, 0.8523333072662354, 0.8516666889190674, 0.8493333458900452, 0.8560000061988831, 0.8569999933242798, 0.8600000143051147, 0.8550000190734863, 0.862333357334137, 0.8586666584014893, 0.8613333106040955, 0.8673333525657654, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8676666617393494, 0.871999979019165, 0.8733333349227905, 0.8693333268165588, 0.871999979019165, 0.8683333396911621, 0.8756666779518127, 0.8733333349227905, 0.8723333477973938, 0.8743333220481873, 0.8773333430290222, 0.8790000081062317, 0.8730000257492065, 0.875333309173584, 0.8730000257492065, 0.875333309173584, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 0, 11, 7, 4, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.303431987762451, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [49, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [2.304839611053467, 2.3499667644500732, 3.008951187133789, 5.9164814949035645, 10.675885200500488, 16.323514938354492], "accuracy": [0.10315678268671036, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3124258518218994, 2.506901979446411, 4.303691387176514, 8.546775817871094, 13.944381713867188, 19.7762508392334], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [34, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 3, 8], [0, 3, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, grad)), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(tf.math.square(tf.math.multiply(tf.math.sqrt(alpha), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.304227352142334, 2.302581310272217, 2.3025739192962646, 2.302572250366211, 2.3025641441345215, 2.302565097808838, 2.30256724357605], "accuracy": [0.10011887550354004, 0.10619468986988068, 0.10487385839223862, 0.10381719470024109, 0.10593052208423615, 0.10342095047235489, 0.11174217611551285], "val_loss": [2.3025848865509033, 2.3025834560394287, 2.302584409713745, 2.302584648132324, 2.3025827407836914, 2.3025853633880615, 2.3025858402252197], "val_accuracy": [0.10100000351667404, 0.10166666656732559, 0.10166666656732559, 0.09733333438634872, 0.10100000351667404, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 9], [2, 1, 2, 2], [39, 99], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [93, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 9, 3, 6, 8, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09628571569919586, "mapping_values": [1, 9, 6, 3, 1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3101515769958496, 2.308929204940796, 2.310032844543457, 2.3081796169281006, 2.3094987869262695, 2.3096401691436768], "accuracy": [0.09113723784685135, 0.09774138033390045, 0.09642054885625839, 0.10170386731624603, 0.09074098616838455, 0.09047681838274002], "val_loss": [2.3083443641662598, 2.308260202407837, 2.3081657886505127, 2.3080668449401855, 2.307966470718384, 2.3078646659851074], "val_accuracy": [0.08866667002439499, 0.08699999749660492, 0.08866667002439499, 0.08733333647251129, 0.08699999749660492, 0.08799999952316284]}}]