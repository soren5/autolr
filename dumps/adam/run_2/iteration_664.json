[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229273319244385, 1.8655837774276733, 1.3922592401504517, 1.1044048070907593, 0.9441145658493042, 0.8400080800056458, 0.7659055590629578, 0.724069356918335, 0.6986027359962463, 0.6609477400779724, 0.6385490894317627, 0.6063533425331116, 0.591385543346405, 0.5764805674552917, 0.5541785359382629, 0.5399193167686462, 0.5401742458343506, 0.5176706314086914, 0.5043865442276001, 0.5001507997512817, 0.4807133376598358, 0.4781196415424347, 0.46610334515571594, 0.4533705413341522, 0.4479183256626129, 0.43962597846984863, 0.4301123321056366, 0.4305744767189026, 0.41747936606407166, 0.40775665640830994, 0.41358262300491333, 0.40070098638534546, 0.3985489308834076, 0.39002156257629395, 0.38616496324539185, 0.3827173709869385, 0.3652689754962921, 0.36982256174087524, 0.36024150252342224, 0.3567429184913635, 0.3520219624042511, 0.3462311923503876, 0.33781498670578003, 0.3328961730003357, 0.33045703172683716, 0.3252728581428528, 0.32187798619270325, 0.3136643171310425, 0.31273308396339417, 0.3095357120037079, 0.2992212474346161, 0.3028711676597595, 0.2925502359867096, 0.2903740704059601, 0.28940942883491516, 0.286057710647583, 0.2764534056186676, 0.27288705110549927, 0.2717309594154358, 0.26221582293510437, 0.2669510543346405, 0.2516818046569824, 0.254392147064209, 0.25458940863609314, 0.25405824184417725, 0.24386608600616455, 0.24342837929725647, 0.23452003300189972, 0.22940978407859802, 0.23153023421764374, 0.2226155400276184, 0.22546619176864624, 0.22019125521183014, 0.21680264174938202, 0.210347980260849, 0.21279080212116241, 0.20358887314796448, 0.205841064453125, 0.20318876206874847], "accuracy": [0.2802800238132477, 0.48831066489219666, 0.5620129704475403, 0.6166952848434448, 0.6642451286315918, 0.6976621150970459, 0.720380425453186, 0.7318716049194336, 0.7421740889549255, 0.7555144429206848, 0.765949010848999, 0.7769119143486023, 0.7839123010635376, 0.7893276810646057, 0.7979130744934082, 0.800290584564209, 0.8092722296714783, 0.8113855719566345, 0.8138951063156128, 0.8164047002792358, 0.8261788487434387, 0.8260467648506165, 0.8338396549224854, 0.8399154543876648, 0.8396512866020203, 0.8383304476737976, 0.8448025584220886, 0.846387505531311, 0.852331280708313, 0.8539162874221802, 0.8519350290298462, 0.8570862412452698, 0.8555012345314026, 0.8601241707801819, 0.8617091774940491, 0.8601241707801819, 0.8708229064941406, 0.8638224601745605, 0.8692378997802734, 0.8735966086387634, 0.8721436858177185, 0.873860776424408, 0.8791441321372986, 0.8833707571029663, 0.8804649114608765, 0.8825782537460327, 0.882710337638855, 0.8841632604598999, 0.8877294659614563, 0.889050304889679, 0.8922203183174133, 0.8887861371040344, 0.897899866104126, 0.8951261639595032, 0.8957865834236145, 0.8972394466400146, 0.900409460067749, 0.9031832218170166, 0.9070135951042175, 0.9064852595329285, 0.9063531756401062, 0.9120327830314636, 0.9093911051750183, 0.9075419306755066, 0.9093911051750183, 0.9119006991386414, 0.913617730140686, 0.9178444147109985, 0.9138818979263306, 0.9177123308181763, 0.921938955783844, 0.9181085824966431, 0.9224672913551331, 0.9189010858535767, 0.9249768853187561, 0.9255052208900452, 0.9281468987464905, 0.9233918786048889, 0.9268260598182678], "val_loss": [2.035691022872925, 1.5058579444885254, 1.0271645784378052, 0.8187746405601501, 0.7373082637786865, 0.6812474131584167, 0.6314141154289246, 0.5970333218574524, 0.569939136505127, 0.5482177734375, 0.5336100459098816, 0.5107294321060181, 0.5012986063957214, 0.48847314715385437, 0.4780266582965851, 0.4645637273788452, 0.46303823590278625, 0.449171781539917, 0.441569060087204, 0.43928492069244385, 0.43319109082221985, 0.42026588320732117, 0.41505834460258484, 0.411036878824234, 0.40357261896133423, 0.3988913297653198, 0.3999871015548706, 0.3958193361759186, 0.3966955542564392, 0.39296847581863403, 0.3859371840953827, 0.382567435503006, 0.3737552762031555, 0.37373095750808716, 0.3770292103290558, 0.36665040254592896, 0.3662834167480469, 0.3693492114543915, 0.3598339855670929, 0.36120960116386414, 0.35922789573669434, 0.3564741313457489, 0.3518945574760437, 0.35268911719322205, 0.3501529395580292, 0.3498005270957947, 0.35590648651123047, 0.3514026701450348, 0.34856152534484863, 0.347904771566391, 0.34514090418815613, 0.3506469428539276, 0.3426486551761627, 0.348656564950943, 0.3485511839389801, 0.3409242033958435, 0.33793944120407104, 0.34234097599983215, 0.33607882261276245, 0.3425396680831909, 0.33461353182792664, 0.32935938239097595, 0.33719998598098755, 0.32961350679397583, 0.3323633074760437, 0.33548980951309204, 0.33490437269210815, 0.3330325782299042, 0.3291015625, 0.3288920819759369, 0.33452099561691284, 0.3274109661579132, 0.330696702003479, 0.32769379019737244, 0.324304461479187, 0.33646461367607117, 0.33066198229789734, 0.32625263929367065, 0.33012643456459045], "val_accuracy": [0.5490000247955322, 0.6606666445732117, 0.6903333067893982, 0.718666672706604, 0.7390000224113464, 0.7559999823570251, 0.7693333625793457, 0.7866666913032532, 0.7963333129882812, 0.8086666464805603, 0.8073333501815796, 0.8209999799728394, 0.8263333439826965, 0.8263333439826965, 0.8353333473205566, 0.8349999785423279, 0.8363333344459534, 0.8453333377838135, 0.843666672706604, 0.8443333506584167, 0.847000002861023, 0.8523333072662354, 0.8583333492279053, 0.8583333492279053, 0.8610000014305115, 0.862333357334137, 0.8610000014305115, 0.8640000224113464, 0.8603333234786987, 0.8659999966621399, 0.8613333106040955, 0.8693333268165588, 0.8709999918937683, 0.8709999918937683, 0.8656666874885559, 0.8713333606719971, 0.8763333559036255, 0.8706666827201843, 0.871999979019165, 0.874666690826416, 0.8769999742507935, 0.8766666650772095, 0.874666690826416, 0.8773333430290222, 0.8769999742507935, 0.8773333430290222, 0.871666669845581, 0.8766666650772095, 0.8790000081062317, 0.8773333430290222, 0.874666690826416, 0.8763333559036255, 0.8769999742507935, 0.8796666860580444, 0.8759999871253967, 0.8799999952316284, 0.8826666474342346, 0.8816666603088379, 0.8820000290870667, 0.8756666779518127, 0.8830000162124634, 0.8813333511352539, 0.878000020980835, 0.8830000162124634, 0.8856666684150696, 0.8796666860580444, 0.8820000290870667, 0.8796666860580444, 0.8859999775886536, 0.8843333125114441, 0.8833333253860474, 0.8836666941642761, 0.8806666731834412, 0.8893333077430725, 0.887333333492279, 0.8826666474342346, 0.8849999904632568, 0.887666642665863, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [45, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 0, 8], [0, 0, 0, 3, 1, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 9, 4, 7], [0, 1, 0, 2, 1], [39, 39, 43], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 8, 8, 5], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 0], [16, 99, 96, 50, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 11, 7, 4, 2, 2, 1, 1, 1, 26, 15, 11, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.pow(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), sigma)), alpha), tf.math.square(beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310960054397583, 2.384918451309204, 2.475184679031372, 2.5358593463897705, 2.5752758979797363, 2.602640390396118], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3449556827545166, 2.4418554306030273, 2.514638900756836, 2.5611846446990967, 2.5923912525177, 2.614790439605713], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 10], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 9, 8], [0, 2, 0, 3, 0, 4, 3, 1, 2, 0], [49, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 18, 10, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 8, 4, 3], [0, 0, 0, 2], [39, 21], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 8, 40], [0, 0, 1, 1], [0, 7], [0, 3], [94], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [6, 3, 5, 8, 8, 1, 4, 1, 6, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 3, 0], [66, 99, 96, 99, 61, 1]], "fitness": -0.09571428596973419, "mapping_values": [1, 5, 3, 2, 2, 10, 6, 4, 3, 4, 2, 2, 1, 14, 8, 6, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.sqrt(tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3096256256103516, 2.307955503463745, 2.3072288036346436, 2.3063926696777344, 2.3051888942718506, 2.3052573204040527, 2.303560256958008, 2.304434061050415, 2.303908586502075], "accuracy": [0.09126931428909302, 0.09245806187391281, 0.09628847241401672, 0.09840179979801178, 0.09509972482919693, 0.09232597798109055, 0.09259014576673508, 0.09549596905708313, 0.09549596905708313], "val_loss": [2.3083560466766357, 2.307150363922119, 2.3061227798461914, 2.3054397106170654, 2.305018663406372, 2.304443359375, 2.304077625274658, 2.303772211074829, 2.3034613132476807], "val_accuracy": [0.09366666525602341, 0.09333333373069763, 0.09266666322946548, 0.09466666728258133, 0.09166666865348816, 0.09366666525602341, 0.09433333575725555, 0.09233333170413971, 0.09366666525602341]}}]