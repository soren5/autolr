[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221665859222412, 1.8648396730422974, 1.3929033279418945, 1.0858862400054932, 0.9295006990432739, 0.8323080539703369, 0.7771864533424377, 0.7247404456138611, 0.6814199686050415, 0.6547079086303711, 0.6308690905570984, 0.6096822619438171, 0.5812928080558777, 0.5724906325340271, 0.5573462247848511, 0.538672685623169, 0.5301324725151062, 0.5163071751594543, 0.4980633556842804, 0.49884381890296936, 0.48520636558532715, 0.48140949010849, 0.4678313732147217, 0.45637503266334534, 0.44785889983177185, 0.4383581578731537, 0.43016695976257324, 0.425555020570755, 0.41787445545196533, 0.4207014739513397, 0.4131331443786621, 0.40255656838417053, 0.3994942903518677, 0.37704601883888245, 0.3825621008872986, 0.3839236795902252, 0.3805353045463562, 0.36460936069488525, 0.36070725321769714, 0.35208258032798767, 0.35981112718582153, 0.3489513099193573, 0.34621870517730713, 0.33928588032722473, 0.33643925189971924, 0.3384207487106323, 0.3261486887931824, 0.3236676752567291, 0.3136252760887146, 0.31467288732528687, 0.31089386343955994, 0.30565962195396423, 0.3017580807209015, 0.30243414640426636, 0.29124152660369873, 0.2901207506656647, 0.2801873981952667, 0.28017330169677734, 0.2747078537940979, 0.27328017354011536, 0.27068179845809937, 0.26378798484802246, 0.2576129734516144, 0.26327651739120483, 0.25658300518989563, 0.2536241114139557, 0.24587872624397278, 0.24485090374946594, 0.23568789660930634], "accuracy": [0.2775062620639801, 0.5000660419464111, 0.5633337497711182, 0.6269977688789368, 0.6686038970947266, 0.7016246318817139, 0.7219653725624084, 0.7372870445251465, 0.7494386434555054, 0.7586844563484192, 0.7714964747428894, 0.7746664881706238, 0.789988100528717, 0.7932901978492737, 0.7951393723487854, 0.8012151718139648, 0.8103289008140564, 0.8090080618858337, 0.8115176558494568, 0.8173292875289917, 0.8236692547798157, 0.8224804997444153, 0.8285563588142395, 0.826310932636261, 0.834632158279419, 0.8425571322441101, 0.8429533839225769, 0.8459912538528442, 0.8490291833877563, 0.846387505531311, 0.8486329317092896, 0.8569541573524475, 0.8541803956031799, 0.8622375130653381, 0.8613129258155823, 0.8628978729248047, 0.8640866279602051, 0.8650112152099609, 0.8693699836730957, 0.8717474341392517, 0.867520809173584, 0.8751816153526306, 0.8771628737449646, 0.8784837126731873, 0.8790120482444763, 0.878351628780365, 0.8824461698532104, 0.8837670087814331, 0.8835028409957886, 0.885219931602478, 0.8870691061019897, 0.8883898854255676, 0.8894465565681458, 0.8903711438179016, 0.8953903317451477, 0.8922203183174133, 0.8971073627471924, 0.8990886211395264, 0.8960506916046143, 0.9009377956390381, 0.9033153057098389, 0.9035794734954834, 0.9078060984611511, 0.9015982151031494, 0.9045040011405945, 0.9084665179252625, 0.9122969508171082, 0.91124027967453, 0.9140139818191528], "val_loss": [2.0420713424682617, 1.5261106491088867, 1.0607956647872925, 0.8495349884033203, 0.7622785568237305, 0.6976205110549927, 0.6473888158798218, 0.6114978790283203, 0.5874887108802795, 0.5688119530677795, 0.5508372187614441, 0.5338094234466553, 0.5157058238983154, 0.5033960342407227, 0.4926804304122925, 0.4860106110572815, 0.4739311933517456, 0.4670397639274597, 0.4573019742965698, 0.4523579776287079, 0.44584921002388, 0.43686702847480774, 0.43515971302986145, 0.43295735120773315, 0.41857609152793884, 0.4193233251571655, 0.4125741720199585, 0.4129541516304016, 0.40563419461250305, 0.40530604124069214, 0.39983949065208435, 0.3958396017551422, 0.39150920510292053, 0.3913009464740753, 0.3893817067146301, 0.3855297565460205, 0.383030503988266, 0.3790006637573242, 0.377728670835495, 0.38291749358177185, 0.37968677282333374, 0.3724041283130646, 0.36848950386047363, 0.36781322956085205, 0.36343035101890564, 0.36687037348747253, 0.367339164018631, 0.3642626106739044, 0.3612561821937561, 0.3620428442955017, 0.36118289828300476, 0.3670860528945923, 0.3650307357311249, 0.35986828804016113, 0.3551100194454193, 0.3563384711742401, 0.3546759784221649, 0.35511600971221924, 0.352290540933609, 0.34994369745254517, 0.35444918274879456, 0.35016950964927673, 0.34824520349502563, 0.3501219153404236, 0.3496842384338379, 0.3473372757434845, 0.3485126197338104, 0.34920087456703186, 0.3539181351661682], "val_accuracy": [0.5246666669845581, 0.6503333449363708, 0.675000011920929, 0.7013333439826965, 0.7279999852180481, 0.7563333511352539, 0.7663333415985107, 0.7743333578109741, 0.7853333353996277, 0.7883333563804626, 0.7979999780654907, 0.8069999814033508, 0.8073333501815796, 0.8136666417121887, 0.8243333101272583, 0.8263333439826965, 0.8263333439826965, 0.8299999833106995, 0.8353333473205566, 0.8353333473205566, 0.8330000042915344, 0.847000002861023, 0.8503333330154419, 0.8443333506584167, 0.8506666421890259, 0.8503333330154419, 0.8519999980926514, 0.8473333120346069, 0.8519999980926514, 0.8523333072662354, 0.8576666712760925, 0.859000027179718, 0.8576666712760925, 0.8600000143051147, 0.862666666507721, 0.8579999804496765, 0.8633333444595337, 0.8656666874885559, 0.8663333058357239, 0.862666666507721, 0.8616666793823242, 0.8709999918937683, 0.8690000176429749, 0.871666669845581, 0.8709999918937683, 0.8690000176429749, 0.8733333349227905, 0.8726666569709778, 0.8733333349227905, 0.8726666569709778, 0.871666669845581, 0.8756666779518127, 0.8703333139419556, 0.8733333349227905, 0.8756666779518127, 0.8776666522026062, 0.8706666827201843, 0.875333309173584, 0.8790000081062317, 0.878000020980835, 0.875333309173584, 0.878333330154419, 0.878333330154419, 0.8799999952316284, 0.8763333559036255, 0.8769999742507935, 0.8763333559036255, 0.8799999952316284, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 1, 5], [0, 2, 0, 3], [44, 16], [0, 1], [0], [0], [31], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 4, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.12399999797344208, "mapping_values": [1, 10, 5, 5, 2, 9, 5, 4, 2, 2, 1, 1, 1, 12, 7, 5, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [15.387020111083984, 151.00503540039062, 331.6500549316406, 748.1128540039062, 1252.001953125, 2877.923095703125, 4902.4609375, 7088.447265625, 8309.8046875, 10500.5166015625, 13257.685546875, 14831.3984375, 17202.0, 19219.13671875, 22070.94140625, 25235.224609375, 26632.146484375, 27525.478515625, 29893.59375, 39531.234375], "accuracy": [0.0952318087220192, 0.1026284471154213, 0.1006472036242485, 0.10328886657953262, 0.10011887550354004, 0.10077928751707077, 0.09668471664190292, 0.09576013684272766, 0.08268392831087112, 0.09047681838274002, 0.09087307006120682, 0.09972262382507324, 0.09760929644107819, 0.09721305221319199, 0.10051512718200684, 0.10777968913316727, 0.10817593336105347, 0.11174217611551285, 0.11134592443704605, 0.09470347315073013], "val_loss": [67.827392578125, 235.80531311035156, 397.5679626464844, 1004.8858032226562, 1480.666015625, 2578.061279296875, 5293.9072265625, 4467.72998046875, 6556.05126953125, 8713.046875, 10186.3173828125, 10570.8203125, 12791.5283203125, 14642.095703125, 14626.40625, 14222.912109375, 14311.5224609375, 16073.9208984375, 24160.708984375, 33077.0390625], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10566666722297668, 0.10533333569765091, 0.10633333027362823, 0.10633333027362823, 0.1120000034570694, 0.10633333027362823, 0.11699999868869781, 0.10566666722297668, 0.1120000034570694, 0.1313333362340927, 0.13099999725818634, 0.12533333897590637, 0.11033333092927933, 0.09799999743700027, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 5, 3, 2, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))))", "other_info": {"loss": [2.3049631118774414, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 2], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 1, 1, 4, 2, 8], [4, 4, 4, 4, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 1, 1, 0, 1, 16, 8, 8, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.subtract(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 4, 0, 3, 5, 8, 6], [0, 2, 0, 3, 0], [64, 16, 94], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9, 6, 7, 6, 2, 3, 7, 3, 7, 5, 2, 7, 1, 0], [0, 0, 0, 3, 0, 4, 3, 4, 2, 0, 3, 5, 3, 1, 2, 4, 4, 4, 6, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 8, 5, 3, 2, 1, 1, 1, 44, 24, 20, 6], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(sigma, grad), beta), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(sigma, tf.math.add(grad, sigma))))), alpha)), beta))))), grad), tf.math.subtract(grad, grad)), grad), tf.math.negative(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]