[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221641778945923, 1.8733912706375122, 1.4031991958618164, 1.0980783700942993, 0.9353908896446228, 0.8470720648765564, 0.7751015424728394, 0.7354750037193298, 0.6950277090072632, 0.6556419730186462, 0.6368263959884644, 0.6177923679351807, 0.5878698825836182, 0.5747367143630981, 0.5549005270004272, 0.5565125942230225, 0.5337650775909424, 0.5238116979598999, 0.5133301019668579, 0.4940843880176544, 0.4927704632282257, 0.47661662101745605, 0.4673178493976593, 0.46160274744033813, 0.4590426981449127, 0.43981221318244934, 0.4336632788181305, 0.4347672760486603, 0.4237183928489685, 0.42016851902008057, 0.41086718440055847, 0.40667030215263367, 0.4028889238834381, 0.3923901319503784, 0.388995498418808, 0.37982940673828125, 0.3825894296169281, 0.3676329255104065, 0.3617068827152252, 0.36064010858535767, 0.353353887796402, 0.3448023498058319, 0.34978511929512024, 0.34158679842948914, 0.33913928270339966, 0.3266630172729492, 0.32428833842277527, 0.3258953392505646, 0.3159751296043396, 0.3076998293399811, 0.30501747131347656, 0.3012990355491638, 0.29459071159362793, 0.2971179485321045, 0.29189687967300415, 0.2817803621292114, 0.27976980805397034], "accuracy": [0.2735437750816345, 0.49029189348220825, 0.5514463186264038, 0.6184123754501343, 0.6675472259521484, 0.6995112895965576, 0.7253995537757874, 0.7285695672035217, 0.7413815855979919, 0.7626469135284424, 0.7651565074920654, 0.7759873270988464, 0.7895918488502502, 0.7918372750282288, 0.7998943328857422, 0.7967243194580078, 0.8088759779930115, 0.81548011302948, 0.8162726163864136, 0.8206313848495483, 0.8234050869941711, 0.828820526599884, 0.8356888294219971, 0.8359529972076416, 0.8347642421722412, 0.8412362933158875, 0.8466516733169556, 0.8437458872795105, 0.8514066934585571, 0.8548408150672913, 0.8519350290298462, 0.8518029451370239, 0.8552370667457581, 0.8594637513160706, 0.8632941246032715, 0.8673887252807617, 0.8619733452796936, 0.871879518032074, 0.871879518032074, 0.8728041052818298, 0.8759741187095642, 0.8770307898521423, 0.8805969953536987, 0.8804649114608765, 0.8819178342819214, 0.8828424215316772, 0.8823140859603882, 0.8845595121383667, 0.8922203183174133, 0.8912957310676575, 0.893541157245636, 0.8907673954963684, 0.8924844861030579, 0.8934090733528137, 0.8943336606025696, 0.8997490406036377, 0.9019944667816162], "val_loss": [2.040908098220825, 1.5140241384506226, 1.035251498222351, 0.8184120059013367, 0.7303722500801086, 0.6801077723503113, 0.6391003131866455, 0.6077826023101807, 0.5817750692367554, 0.5594221353530884, 0.5371876358985901, 0.5261031985282898, 0.5091015100479126, 0.5007807612419128, 0.4861154854297638, 0.47970232367515564, 0.47663068771362305, 0.46082189679145813, 0.45355844497680664, 0.44648078083992004, 0.44103702902793884, 0.43846917152404785, 0.42823803424835205, 0.42579129338264465, 0.41707751154899597, 0.4197337329387665, 0.40917035937309265, 0.40794694423675537, 0.40989866852760315, 0.40103062987327576, 0.3969355523586273, 0.39623481035232544, 0.38733789324760437, 0.39141565561294556, 0.38328397274017334, 0.38078010082244873, 0.3785015940666199, 0.37893420457839966, 0.37716081738471985, 0.37872493267059326, 0.37145406007766724, 0.36749109625816345, 0.37220069766044617, 0.36864665150642395, 0.36357182264328003, 0.36363089084625244, 0.3599568009376526, 0.35807740688323975, 0.3605453372001648, 0.3563838303089142, 0.3563181161880493, 0.3526339530944824, 0.35419344902038574, 0.3539436459541321, 0.34884944558143616, 0.3500693440437317, 0.34737804532051086], "val_accuracy": [0.5540000200271606, 0.6626666784286499, 0.6913333535194397, 0.7183333039283752, 0.7353333234786987, 0.7593333125114441, 0.7680000066757202, 0.7723333239555359, 0.7886666655540466, 0.8026666641235352, 0.8073333501815796, 0.8149999976158142, 0.8213333487510681, 0.824999988079071, 0.8296666741371155, 0.8306666612625122, 0.8333333134651184, 0.8379999995231628, 0.8456666469573975, 0.846666693687439, 0.8493333458900452, 0.8500000238418579, 0.8556666374206543, 0.8539999723434448, 0.8579999804496765, 0.8553333282470703, 0.862333357334137, 0.8603333234786987, 0.856333315372467, 0.8643333315849304, 0.8629999756813049, 0.8636666536331177, 0.8663333058357239, 0.8653333187103271, 0.8683333396911621, 0.8693333268165588, 0.8706666827201843, 0.8693333268165588, 0.8693333268165588, 0.8683333396911621, 0.8706666827201843, 0.875333309173584, 0.871666669845581, 0.8723333477973938, 0.8743333220481873, 0.871999979019165, 0.878000020980835, 0.8796666860580444, 0.8743333220481873, 0.8796666860580444, 0.8796666860580444, 0.8826666474342346, 0.8796666860580444, 0.8786666393280029, 0.8813333511352539, 0.8809999823570251, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 0], [1, 1, 0, 2], [39, 4], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 1, 0], [73, 99, 96, 99, 61, 1]], "fitness": -0.767714262008667, "mapping_values": [1, 8, 5, 3, 1, 11, 6, 5, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(alpha), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1.785711646080017, 1.0806142091751099, 0.9488292336463928, 0.9023883938789368, 0.8869001865386963, 0.8528058528900146, 0.8389344811439514, 0.8317378163337708, 0.815073549747467, 0.8089362382888794, 0.8044561743736267, 0.7959155440330505, 0.7910113334655762, 0.7908698916435242, 0.7798139452934265, 0.7836236953735352, 0.7723084092140198, 0.7853841781616211, 0.7769184708595276, 0.7759149670600891, 0.7595219612121582, 0.7695009112358093, 0.7667309641838074, 0.7539807558059692, 0.7562410235404968, 0.7608228921890259, 0.7599071264266968, 0.751412034034729, 0.7452384829521179, 0.7535315155982971, 0.7493091225624084, 0.7479507327079773, 0.7430213093757629, 0.743576169013977, 0.7470577955245972, 0.7439566254615784, 0.7464050054550171, 0.7396194934844971, 0.742622971534729, 0.7353294491767883, 0.7433396577835083, 0.7398796677589417, 0.7488284707069397, 0.7432809472084045, 0.7340434193611145, 0.7256016731262207, 0.7377445101737976, 0.7348506450653076, 0.7339396476745605, 0.7370142340660095, 0.7448413968086243, 0.7307800650596619, 0.7299160957336426, 0.7300596237182617, 0.7318722009658813, 0.7322565913200378, 0.7257716655731201, 0.7192676663398743, 0.7210659384727478, 0.7238170504570007, 0.7330837845802307, 0.7322726845741272, 0.7302501201629639, 0.7337434887886047, 0.7312957644462585, 0.7240633368492126], "accuracy": [0.392550528049469, 0.6263373494148254, 0.6700568199157715, 0.6833971738815308, 0.6837934255599976, 0.6902654767036438, 0.6983225345611572, 0.7029454708099365, 0.7066437602043152, 0.709021270275116, 0.7088891863822937, 0.7136441469192505, 0.7194558382034302, 0.7172104120254517, 0.7187954187393188, 0.7125874757766724, 0.7218332886695862, 0.7185312509536743, 0.7185312509536743, 0.7239466309547424, 0.7263241410255432, 0.7214370369911194, 0.72672039270401, 0.7290979027748108, 0.7240787148475647, 0.7253995537757874, 0.7244749665260315, 0.7259278893470764, 0.7281733155250549, 0.7275128960609436, 0.7297582626342773, 0.7240787148475647, 0.7308149337768555, 0.7276449799537659, 0.72672039270401, 0.7290979027748108, 0.7271166443824768, 0.7306828498840332, 0.7285695672035217, 0.7301545143127441, 0.7289658188819885, 0.7317395210266113, 0.7275128960609436, 0.7313432693481445, 0.7334566116333008, 0.7360982894897461, 0.7329282760620117, 0.7316074371337891, 0.7345132827758789, 0.7367587089538574, 0.7345132827758789, 0.7411174178123474, 0.7396644949913025, 0.7364945411682129, 0.7326641082763672, 0.7306828498840332, 0.7371549606323242, 0.7383436560630798, 0.739400327205658, 0.7403249144554138, 0.7349095344543457, 0.7298903465270996, 0.733588695526123, 0.7302865982055664, 0.7306828498840332, 0.739400327205658], "val_loss": [1.1025068759918213, 0.858400821685791, 0.8027942776679993, 0.7624803185462952, 0.7461637258529663, 0.7335534691810608, 0.7217524647712708, 0.7130506038665771, 0.7059600949287415, 0.699884831905365, 0.6933730244636536, 0.6889953017234802, 0.6860142946243286, 0.6824864745140076, 0.6791092753410339, 0.6775105595588684, 0.6746986508369446, 0.672463595867157, 0.6709088087081909, 0.6685495972633362, 0.6666015386581421, 0.6651052832603455, 0.6640123724937439, 0.6618209481239319, 0.6604511141777039, 0.6593511700630188, 0.6579859852790833, 0.6570518016815186, 0.6552435755729675, 0.6539647579193115, 0.6529915928840637, 0.6523266434669495, 0.6507837772369385, 0.6501032114028931, 0.6491460800170898, 0.6482898592948914, 0.6469432711601257, 0.6461716294288635, 0.6453070640563965, 0.6444353461265564, 0.643708348274231, 0.6431211233139038, 0.6426246166229248, 0.6421943306922913, 0.6414376497268677, 0.6404799222946167, 0.6403030157089233, 0.6396471858024597, 0.6389973163604736, 0.6386718153953552, 0.6382858753204346, 0.6374539732933044, 0.6371172070503235, 0.6364237070083618, 0.6359642148017883, 0.6354935765266418, 0.6349560022354126, 0.6346244215965271, 0.6339502930641174, 0.633370578289032, 0.632849931716919, 0.6326149702072144, 0.632145881652832, 0.6318433880805969, 0.6315136551856995, 0.6309994459152222], "val_accuracy": [0.6723333597183228, 0.6993333101272583, 0.7179999947547913, 0.731333315372467, 0.7360000014305115, 0.737333357334137, 0.7416666746139526, 0.7403333187103271, 0.7443333268165588, 0.7436666488647461, 0.746666669845581, 0.7513333559036255, 0.7523333430290222, 0.7516666650772095, 0.7516666650772095, 0.7543333172798157, 0.753000020980835, 0.7549999952316284, 0.7546666860580444, 0.7543333172798157, 0.7536666393280029, 0.7556666731834412, 0.7563333511352539, 0.7576666474342346, 0.7553333044052124, 0.7563333511352539, 0.7546666860580444, 0.7566666603088379, 0.7580000162124634, 0.7586666941642761, 0.7590000033378601, 0.7593333125114441, 0.7606666684150696, 0.7609999775886536, 0.7620000243186951, 0.7609999775886536, 0.7620000243186951, 0.762333333492279, 0.7636666893959045, 0.7633333206176758, 0.7639999985694885, 0.7636666893959045, 0.7639999985694885, 0.7636666893959045, 0.7636666893959045, 0.765333354473114, 0.7663333415985107, 0.7666666507720947, 0.765666663646698, 0.7639999985694885, 0.7670000195503235, 0.765666663646698, 0.765666663646698, 0.765999972820282, 0.7670000195503235, 0.7680000066757202, 0.7673333287239075, 0.7663333415985107, 0.7666666507720947, 0.7676666378974915, 0.7689999938011169, 0.768666684627533, 0.7689999938011169, 0.7680000066757202, 0.7689999938011169, 0.768666684627533]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 8, 3, 6, 3, 6, 3, 1, 3, 3, 7, 2, 2, 7, 5, 3, 2, 7, 2, 5, 4, 1, 2, 9, 2, 5, 0], [0, 0, 0, 2, 0, 0, 0, 1, 3, 3, 1, 3, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 1], [39, 39, 21, 23, 65, 77, 61, 12, 96, 7], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 5, 9, 7, 4], [0, 2, 0, 2, 1, 4], [16, 16, 19], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 5, 1, 4, 2, 8, 4, 0, 0, 0, 8, 7, 2, 2, 7, 0, 3, 7, 1, 6, 2, 7, 0, 7, 7, 4, 8, 8, 8, 8, 9, 1, 3, 0, 6, 2, 9, 3, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 1, 1, 6, 6, 7, 3, 5, 1, 6, 7, 4, 3, 7, 0, 3], [16, 99, 96, 99, 61, 1, 16, 19, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 54, 31, 23, 10, 15, 9, 6, 3, 2, 1, 1, 1, 70, 44, 26, 9], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.math.add(grad, grad), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.multiply(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), alpha)), grad)))))))), tf.math.pow(tf.math.subtract(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), alpha)), tf.math.square(tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(sigma), alpha)), tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.multiply(alpha, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, grad), grad), tf.math.negative(sigma)), tf.math.add(grad, tf.math.add(tf.math.pow(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.multiply(grad, grad), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(sigma, grad))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.negative(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 73], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2, 4], [0, 2, 0, 3, 4, 1], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 8, 1, 2, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 7, 6, 2, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [5.965201377868652, 7.467923641204834, 3.7440125942230225, 3.128204345703125, 2.9173526763916016, 2.8622708320617676], "accuracy": [0.09747721254825592, 0.10038304328918457, 0.0948355570435524, 0.09879804402589798, 0.10011887550354004, 0.09959053993225098], "val_loss": [6.219463348388672, 2.688579797744751, 2.4200096130371094, 2.3550002574920654, 2.329507827758789, 2.307297945022583], "val_accuracy": [0.10000000149011612, 0.09533333033323288, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 67, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]