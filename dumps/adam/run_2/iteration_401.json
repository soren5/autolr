[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239327430725098, 1.8640800714492798, 1.3820303678512573, 1.074861764907837, 0.9241974353790283, 0.8238756656646729, 0.7565457224845886, 0.7194315195083618, 0.6832350492477417, 0.6501292586326599, 0.6342912912368774, 0.6115415692329407, 0.5776938199996948, 0.5671783089637756, 0.5620611906051636, 0.549554169178009, 0.5225271582603455, 0.5187228322029114, 0.5010316967964172, 0.4921528995037079, 0.48298215866088867, 0.46563735604286194, 0.4622493088245392, 0.4583231210708618, 0.4477432370185852, 0.43170082569122314, 0.42854833602905273, 0.424242228269577, 0.4196266829967499, 0.4068734645843506, 0.401542991399765, 0.3990516662597656, 0.38789936900138855, 0.3833591341972351, 0.3767789304256439, 0.3718246817588806, 0.3645724952220917, 0.36369988322257996, 0.3448824882507324, 0.35123151540756226, 0.34947851300239563, 0.3377334177494049, 0.3355098366737366, 0.3327018618583679, 0.31875288486480713, 0.3188645541667938, 0.31621113419532776, 0.31879234313964844, 0.2997790575027466, 0.29998236894607544, 0.2969681918621063, 0.2925056517124176, 0.290306031703949, 0.2821389436721802, 0.2829240560531616, 0.28393834829330444, 0.2781488001346588, 0.271333247423172, 0.2694089114665985, 0.26073750853538513, 0.25855666399002075, 0.25643786787986755, 0.2525444030761719, 0.2439430207014084, 0.24768000841140747, 0.23426976799964905, 0.23279617726802826, 0.23162472248077393], "accuracy": [0.27301543951034546, 0.5025756359100342, 0.5708624720573425, 0.6240919232368469, 0.6756042838096619, 0.7084929347038269, 0.7256637215614319, 0.7413815855979919, 0.7508915662765503, 0.7662131786346436, 0.7725531458854675, 0.7794214487075806, 0.7922335267066956, 0.7903843522071838, 0.8017435073852539, 0.8025360107421875, 0.81112140417099, 0.8120459914207458, 0.821820080280304, 0.8280280232429504, 0.8227446675300598, 0.8359529972076416, 0.8362171649932861, 0.8372738361358643, 0.8400475382804871, 0.8477083444595337, 0.8494254350662231, 0.8488970994949341, 0.852331280708313, 0.8585391640663147, 0.8576145768165588, 0.8584070801734924, 0.8619733452796936, 0.8634262084960938, 0.8684453964233398, 0.8665962219238281, 0.8730682730674744, 0.8745211958885193, 0.8774270415306091, 0.8762382864952087, 0.8755778670310974, 0.880729079246521, 0.8835028409957886, 0.8820499181747437, 0.8849557638168335, 0.8833707571029663, 0.8842953443527222, 0.884691596031189, 0.8932769894599915, 0.8936732411384583, 0.8919561505317688, 0.8922203183174133, 0.8953903317451477, 0.9012019634246826, 0.8986923694610596, 0.896446943283081, 0.8981640338897705, 0.8996169567108154, 0.9022586345672607, 0.9062210917472839, 0.9052965044975281, 0.9070135951042175, 0.9096552729606628, 0.9099194407463074, 0.9085986018180847, 0.9142781496047974, 0.9116365313529968, 0.9138818979263306], "val_loss": [2.04567551612854, 1.5227824449539185, 1.0694762468338013, 0.8790862560272217, 0.7865985631942749, 0.733873188495636, 0.6884345412254333, 0.647481381893158, 0.6240687370300293, 0.5984283685684204, 0.5851373672485352, 0.5657563209533691, 0.5505177974700928, 0.5454617142677307, 0.5307417511940002, 0.5178646445274353, 0.504666268825531, 0.4965288043022156, 0.4908657371997833, 0.48159119486808777, 0.47433653473854065, 0.4650903344154358, 0.4672299921512604, 0.4542536735534668, 0.4472777247428894, 0.44421401619911194, 0.4432913064956665, 0.43342024087905884, 0.426077663898468, 0.427298903465271, 0.4211198687553406, 0.4237866699695587, 0.41991689801216125, 0.4156543016433716, 0.41379114985466003, 0.4089387059211731, 0.40206778049468994, 0.40018635988235474, 0.40452244877815247, 0.3975766599178314, 0.39329540729522705, 0.3988589644432068, 0.39301061630249023, 0.3930748701095581, 0.39062556624412537, 0.3874168395996094, 0.3976922929286957, 0.388428658246994, 0.3868647515773773, 0.38112157583236694, 0.38448214530944824, 0.3854638934135437, 0.3790510296821594, 0.38357463479042053, 0.3823719024658203, 0.376089483499527, 0.3732515871524811, 0.37660205364227295, 0.37696143984794617, 0.3819197714328766, 0.3677751123905182, 0.37099677324295044, 0.3698936700820923, 0.37151843309402466, 0.3712644577026367, 0.37034872174263, 0.3689946234226227, 0.36523592472076416], "val_accuracy": [0.5350000262260437, 0.6420000195503235, 0.6600000262260437, 0.6869999766349792, 0.7136666774749756, 0.7296666502952576, 0.7459999918937683, 0.7576666474342346, 0.7643333077430725, 0.7743333578109741, 0.7889999747276306, 0.7886666655540466, 0.7973333597183228, 0.7929999828338623, 0.8053333163261414, 0.8090000152587891, 0.8226666450500488, 0.8206666707992554, 0.8206666707992554, 0.8273333311080933, 0.831333339214325, 0.8316666483879089, 0.8289999961853027, 0.8360000252723694, 0.8403333425521851, 0.8393333554267883, 0.8366666436195374, 0.843666672706604, 0.8493333458900452, 0.847000002861023, 0.8506666421890259, 0.8496666550636292, 0.8453333377838135, 0.8483333587646484, 0.8479999899864197, 0.8539999723434448, 0.8586666584014893, 0.8569999933242798, 0.8503333330154419, 0.8583333492279053, 0.859000027179718, 0.8569999933242798, 0.8583333492279053, 0.8583333492279053, 0.8610000014305115, 0.862666666507721, 0.8600000143051147, 0.8616666793823242, 0.8629999756813049, 0.8613333106040955, 0.862666666507721, 0.8653333187103271, 0.8693333268165588, 0.862333357334137, 0.8616666793823242, 0.8679999709129333, 0.8709999918937683, 0.8669999837875366, 0.8633333444595337, 0.8676666617393494, 0.8726666569709778, 0.871666669845581, 0.8763333559036255, 0.8709999918937683, 0.871666669845581, 0.874666690826416, 0.8706666827201843, 0.874666690826416]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 3, 3, 1, 9], [0, 1, 0, 2, 1], [39, 39, 11], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3, 5, 7, 2, 1, 9], [2, 2, 0, 3, 0, 1], [16, 44, 13], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 7, 6, 3, 3, 3, 2, 0, 1, 3, 9, 7], [0, 0, 3, 7, 4, 7, 7, 3, 6, 6], [99, 53, 46], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 3, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 16, 10, 6, 3, 23, 13, 10, 3, 11, 6, 5, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.math.square(beta))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.multiply(tf.math.multiply(grad, tf.math.multiply(tf.math.add(tf.math.negative(tf.math.subtract(grad, grad)), tf.math.multiply(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(sigma, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.math.sqrt(sigma), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.310295820236206, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308950424194336, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09399999678134918, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [56, 16], [1, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 72, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 21, 12, 9, 6], "tree_depth": 20}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 5, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [28, 77, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 4, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303396224975586, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 3, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5, 0, 6, 4, 3, 6, 9], [0, 2, 0, 3, 0, 0, 1, 2], [16, 16, 17, 68, 76], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 20, 12, 8, 5, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.negative(tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, grad)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(sigma), alpha)))", "other_info": {"loss": [2.303546905517578, 2.302584409713745, 2.302584648132324, 2.302584648132324, 2.302584409713745, 2.302584648132324, 2.302584648132324, 2.302584409713745], "accuracy": [0.10751552134752274, 0.10910051316022873, 0.10157178342342377, 0.1018359512090683, 0.1026284471154213, 0.10711926966905594, 0.10381719470024109, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025851249694824, 2.3025848865509033, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]