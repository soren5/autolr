[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8511428833007812, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223498582839966, 1.866307258605957, 1.3911045789718628, 1.0855069160461426, 0.9324660301208496, 0.8325632810592651, 0.7706676125526428, 0.7177383899688721, 0.6793283224105835, 0.6527280211448669, 0.6242575645446777, 0.6173518300056458, 0.5907548666000366, 0.5707395076751709, 0.5559250712394714, 0.5506071448326111, 0.53798907995224, 0.512816846370697, 0.5006789565086365, 0.4951184391975403, 0.4813542664051056, 0.47735795378685, 0.4665878415107727, 0.4530518651008606, 0.4437253773212433, 0.44432398676872253, 0.43191826343536377, 0.4209873378276825, 0.41219398379325867, 0.40447062253952026, 0.4035167992115021, 0.40181416273117065, 0.38520297408103943, 0.38299521803855896, 0.3768026828765869, 0.3702830970287323, 0.35869812965393066, 0.3549802303314209, 0.35678815841674805, 0.34799104928970337, 0.34101614356040955, 0.33406463265419006, 0.3329835832118988, 0.3290720582008362, 0.32829785346984863, 0.3249485492706299, 0.3210718333721161, 0.30675092339515686, 0.30734944343566895, 0.30462613701820374, 0.2974250614643097, 0.2932191491127014, 0.2864907383918762, 0.2941228449344635, 0.2848077118396759, 0.28360772132873535, 0.27826687693595886, 0.26543042063713074, 0.27002158761024475, 0.2569735646247864, 0.2655259072780609, 0.25385400652885437, 0.24989429116249084, 0.25095129013061523, 0.23912492394447327, 0.23935219645500183, 0.23157157003879547, 0.22082975506782532, 0.22764384746551514, 0.22129857540130615, 0.22210317850112915, 0.2127949446439743, 0.2113669514656067, 0.21050181984901428, 0.2116536945104599, 0.207807257771492, 0.21019047498703003, 0.19568723440170288, 0.1948893964290619, 0.19690972566604614, 0.19421331584453583, 0.18818938732147217], "accuracy": [0.2786950170993805, 0.49253731966018677, 0.5628054141998291, 0.6221106648445129, 0.665830135345459, 0.7051908373832703, 0.7263241410255432, 0.7368907928466797, 0.7491744756698608, 0.7630431652069092, 0.7740060687065125, 0.7750627398490906, 0.7909126877784729, 0.793422281742096, 0.7989697456359863, 0.802800178527832, 0.8053097128868103, 0.8152159452438354, 0.8220842480659485, 0.821820080280304, 0.8294808864593506, 0.833179235458374, 0.839519202709198, 0.8400475382804871, 0.8451988101005554, 0.8400475382804871, 0.8467837572097778, 0.8533879518508911, 0.8565579056739807, 0.859199583530426, 0.8585391640663147, 0.856689989566803, 0.86118084192276, 0.8646149635314941, 0.8660678863525391, 0.86553955078125, 0.8728041052818298, 0.8709549307823181, 0.8702945709228516, 0.8708229064941406, 0.8824461698532104, 0.8804649114608765, 0.8787478804588318, 0.883238673210144, 0.8816536664962769, 0.8820499181747437, 0.8844274282455444, 0.8891823887825012, 0.8902390599250793, 0.8908994793891907, 0.8926165699958801, 0.8898428082466125, 0.8989565372467041, 0.8886540532112122, 0.8997490406036377, 0.8975036144256592, 0.9027869701385498, 0.9000132083892822, 0.900409460067749, 0.9071456789970398, 0.9008057117462158, 0.9101836085319519, 0.9115044474601746, 0.9097873568534851, 0.9122969508171082, 0.9140139818191528, 0.91559898853302, 0.9211464524269104, 0.9163914918899536, 0.9166556596755981, 0.9212785363197327, 0.9224672913551331, 0.9249768853187561, 0.925901472568512, 0.9232597947120667, 0.9269581437110901, 0.924448549747467, 0.9274864792823792, 0.9286752343177795, 0.928411066532135, 0.9297318458557129, 0.9315810203552246], "val_loss": [2.042459726333618, 1.5163695812225342, 1.0434815883636475, 0.8421265482902527, 0.7570716142654419, 0.706139326095581, 0.6575895547866821, 0.6255643963813782, 0.5949053764343262, 0.5742263197898865, 0.5581356883049011, 0.5465415716171265, 0.533631443977356, 0.5199845433235168, 0.5083978772163391, 0.49953052401542664, 0.4907216727733612, 0.47929200530052185, 0.47405752539634705, 0.46670377254486084, 0.46084949374198914, 0.4546490013599396, 0.45164600014686584, 0.44306251406669617, 0.4426533877849579, 0.43044131994247437, 0.42888644337654114, 0.4249952733516693, 0.4200308322906494, 0.4190388321876526, 0.41576671600341797, 0.4117544889450073, 0.4120531380176544, 0.4057959318161011, 0.40129879117012024, 0.40035879611968994, 0.39973095059394836, 0.4000106155872345, 0.39252352714538574, 0.39202970266342163, 0.393848180770874, 0.38903316855430603, 0.3835407793521881, 0.3837796747684479, 0.3822880983352661, 0.38023480772972107, 0.3796217441558838, 0.38569626212120056, 0.3773740530014038, 0.3748616576194763, 0.3775060772895813, 0.37549325823783875, 0.37923237681388855, 0.372209757566452, 0.3785513639450073, 0.37499183416366577, 0.3693286180496216, 0.37295129895210266, 0.37163713574409485, 0.3737504184246063, 0.36521029472351074, 0.3725804388523102, 0.3644232451915741, 0.36703571677207947, 0.36606258153915405, 0.36754393577575684, 0.3660571277141571, 0.3721552789211273, 0.3662544786930084, 0.3683946430683136, 0.3631209433078766, 0.3682258427143097, 0.3649682104587555, 0.3622341454029083, 0.3608652353286743, 0.3691556453704834, 0.3641222417354584, 0.366655558347702, 0.3682768642902374, 0.35662809014320374, 0.3697517216205597, 0.36061763763427734], "val_accuracy": [0.5653333067893982, 0.6556666493415833, 0.6753333210945129, 0.7076666951179504, 0.7246666550636292, 0.7383333444595337, 0.7540000081062317, 0.7646666765213013, 0.7736666798591614, 0.784333348274231, 0.7946666479110718, 0.8026666641235352, 0.8069999814033508, 0.8136666417121887, 0.8180000185966492, 0.824999988079071, 0.8276666402816772, 0.8343333601951599, 0.8363333344459534, 0.8299999833106995, 0.8393333554267883, 0.8399999737739563, 0.8379999995231628, 0.8420000076293945, 0.8393333554267883, 0.8479999899864197, 0.8479999899864197, 0.8476666808128357, 0.8456666469573975, 0.8456666469573975, 0.8493333458900452, 0.8526666760444641, 0.8510000109672546, 0.8506666421890259, 0.8556666374206543, 0.8569999933242798, 0.856333315372467, 0.8553333282470703, 0.8569999933242798, 0.859000027179718, 0.8576666712760925, 0.8629999756813049, 0.8610000014305115, 0.8603333234786987, 0.8650000095367432, 0.8650000095367432, 0.8613333106040955, 0.8610000014305115, 0.8640000224113464, 0.8659999966621399, 0.8646666407585144, 0.8633333444595337, 0.8633333444595337, 0.8683333396911621, 0.8653333187103271, 0.8690000176429749, 0.8643333315849304, 0.8690000176429749, 0.871666669845581, 0.8713333606719971, 0.8723333477973938, 0.8646666407585144, 0.8696666955947876, 0.871999979019165, 0.8733333349227905, 0.8703333139419556, 0.8706666827201843, 0.8733333349227905, 0.8709999918937683, 0.8766666650772095, 0.8740000128746033, 0.8763333559036255, 0.8733333349227905, 0.8793333172798157, 0.8769999742507935, 0.8756666779518127, 0.8799999952316284, 0.8759999871253967, 0.8743333220481873, 0.8793333172798157, 0.8776666522026062, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 47], [0, 1], [0], [2], [99], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8, 7, 3, 9], [0, 0, 4, 3, 4, 0, 4, 1, 2, 0, 0, 2], [16, 99, 78, 99, 90, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 1, 2, 1, 1, 0, 26, 14, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.pow(grad, sigma), tf.math.subtract(grad, tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [39, 17], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 2, 3, 0, 3, 2, 6, 9, 0, 8, 6, 1, 3, 0, 3, 1], [0, 2, 0, 3, 3, 3, 5, 3, 2, 1, 0], [16, 16, 67, 95], [0, 0, 1], [0, 0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 7, 96, 99, 61, 1, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 27, 16, 11, 4, 3, 2, 1, 0, 19, 12, 7, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad)), tf.math.divide_no_nan(grad, grad)), tf.math.subtract(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.subtract(grad, beta), alpha)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)), tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 1, 39], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [9, 2, 3, 0, 8, 2], [2, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 0, 1, 2, 0], [16, 99, 72, 99, 25, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 1, 1, 0, 1, 3, 1, 2, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), beta)), sigma)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [3.0714447498321533, 4.766611576080322, 6.045369625091553, 6.963899612426758, 7.556765556335449, 8.319356918334961], "accuracy": [0.09496764093637466, 0.1014397069811821, 0.10210011899471283, 0.10210011899471283, 0.1002509593963623, 0.09800554811954498], "val_loss": [3.4121315479278564, 4.392977237701416, 5.147617340087891, 5.763322353363037, 6.286592960357666, 6.743854999542236], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 0, 1, 0, 1, 1], [0, 4, 2], [0, 6, 3], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.895601272583008, 4.665605545043945, 5.917691707611084, 6.882622241973877, 7.706268787384033, 8.333701133728027], "accuracy": [0.09417514503002167, 0.09496764093637466, 0.09642054885625839, 0.10117553919553757, 0.10447761416435242, 0.10527011007070541], "val_loss": [3.2997043132781982, 4.341358661651611, 5.130505084991455, 5.7662224769592285, 6.301102161407471, 6.764560699462891], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1, 11, 6, 5, 4], "tree_depth": 14}]