[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239632606506348, 1.8686891794204712, 1.3953038454055786, 1.1004364490509033, 0.9339151978492737, 0.8442253470420837, 0.7714946269989014, 0.7208515405654907, 0.6810333132743835, 0.6622799634933472, 0.6227037310600281, 0.6128330230712891, 0.5886035561561584, 0.576525092124939, 0.5587223768234253, 0.5406196713447571, 0.5304949283599854, 0.5146805644035339, 0.49954596161842346, 0.493914932012558, 0.4885798692703247, 0.46714678406715393, 0.46331626176834106, 0.4574376344680786, 0.45043668150901794, 0.4390333890914917, 0.4304042160511017, 0.42361611127853394, 0.4188525080680847, 0.4010653495788574, 0.39619362354278564, 0.4015970528125763, 0.39096271991729736, 0.38294264674186707, 0.38064277172088623, 0.3788582980632782, 0.3652336299419403, 0.36649662256240845, 0.34976181387901306, 0.34984955191612244, 0.344146728515625, 0.3430452346801758, 0.33368101716041565, 0.34358716011047363, 0.33607354760169983, 0.32407239079475403, 0.31793951988220215, 0.32141315937042236, 0.3106243908405304, 0.30736711621284485, 0.3041893243789673, 0.30023908615112305, 0.29642152786254883, 0.292337030172348], "accuracy": [0.2859595715999603, 0.4931977391242981, 0.5684850215911865, 0.6214502453804016, 0.6713775992393494, 0.6997754573822021, 0.7219653725624084, 0.7397965788841248, 0.7544577717781067, 0.7594769597053528, 0.7721568942070007, 0.7763835787773132, 0.7841764688491821, 0.7891955971717834, 0.7969884872436523, 0.805177628993988, 0.8088759779930115, 0.8112534880638123, 0.8206313848495483, 0.8210275769233704, 0.8252542614936829, 0.8338396549224854, 0.8363492488861084, 0.8381983637809753, 0.8412362933158875, 0.846387505531311, 0.8482366800308228, 0.8446704745292664, 0.8520671129226685, 0.856689989566803, 0.8569541573524475, 0.8553691506385803, 0.8605204224586487, 0.8634262084960938, 0.8648791313171387, 0.8650112152099609, 0.8685774803161621, 0.8698983192443848, 0.8737286925315857, 0.8746532797813416, 0.8751816153526306, 0.8794082403182983, 0.8803328275680542, 0.8754457831382751, 0.8784837126731873, 0.8862766027450562, 0.8838990926742554, 0.8831065893173218, 0.8857482671737671, 0.8879936337471008, 0.8881257176399231, 0.8885219693183899, 0.8973715305328369, 0.8938053250312805], "val_loss": [2.0407586097717285, 1.5065206289291382, 1.026945948600769, 0.8214137554168701, 0.7344423532485962, 0.6827163100242615, 0.6439844369888306, 0.6025280356407166, 0.5776544809341431, 0.563783586025238, 0.5358343720436096, 0.5195285677909851, 0.5069383382797241, 0.5010587573051453, 0.48529791831970215, 0.47661343216896057, 0.4655982553958893, 0.452202707529068, 0.45013731718063354, 0.44026726484298706, 0.43347448110580444, 0.4270970821380615, 0.42171305418014526, 0.4168091118335724, 0.41347935795783997, 0.4069809913635254, 0.3992347717285156, 0.3981867730617523, 0.3936381936073303, 0.3877279758453369, 0.38376954197883606, 0.3844364285469055, 0.3771035969257355, 0.3819352686405182, 0.37609443068504333, 0.36991626024246216, 0.3675086796283722, 0.3666377663612366, 0.3628082275390625, 0.36169302463531494, 0.3566476106643677, 0.35602450370788574, 0.35101228952407837, 0.3548421263694763, 0.3528563678264618, 0.3472570478916168, 0.3442014157772064, 0.34357312321662903, 0.3417098820209503, 0.34104472398757935, 0.34076884388923645, 0.3354334831237793, 0.337821900844574, 0.3367958068847656], "val_accuracy": [0.5423333048820496, 0.6736666560173035, 0.6869999766349792, 0.7120000123977661, 0.7329999804496765, 0.7473333477973938, 0.749666690826416, 0.7756666541099548, 0.7803333401679993, 0.781000018119812, 0.7990000247955322, 0.8106666803359985, 0.8149999976158142, 0.8100000023841858, 0.8216666579246521, 0.8243333101272583, 0.8346666693687439, 0.8389999866485596, 0.8389999866485596, 0.843666672706604, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8519999980926514, 0.8506666421890259, 0.8529999852180481, 0.8583333492279053, 0.8619999885559082, 0.859333336353302, 0.8653333187103271, 0.8653333187103271, 0.8636666536331177, 0.8686666488647461, 0.8669999837875366, 0.8643333315849304, 0.8709999918937683, 0.8709999918937683, 0.8700000047683716, 0.8743333220481873, 0.8743333220481873, 0.875333309173584, 0.8763333559036255, 0.875333309173584, 0.8723333477973938, 0.875333309173584, 0.878000020980835, 0.8799999952316284, 0.8769999742507935, 0.8833333253860474, 0.8793333172798157, 0.8803333044052124, 0.8793333172798157, 0.878333330154419, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 8, 3, 0, 3, 5], [1, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [27, 99, 96, 99, 61, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 0, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.negative(alpha)))), beta), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 4, 3], [0, 1, 0, 2], [39, 47], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 6, 4, 1, 1, 7, 8, 3, 7, 1, 0, 7, 1, 3, 1, 6, 8, 4, 8, 0, 1, 3, 4, 3, 2, 2, 2, 1, 6, 5, 2, 9, 7, 0], [0, 2, 0, 3, 4, 5, 5, 4, 1, 3, 5, 2, 1, 5, 4, 0, 4, 3, 5, 4, 1, 3, 3, 2, 1, 5, 5, 1], [16, 16, 44, 75], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 8, 8, 0, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 67, 39, 28, 4, 2, 1, 1, 1, 13, 8, 5, 4], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.subtract(tf.math.subtract(grad, tf.math.add(grad, grad)), tf.math.sqrt(grad))))), tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.negative(alpha), tf.math.add(tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, beta)), tf.math.sqrt(tf.math.negative(alpha))), tf.math.subtract(grad, grad))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.multiply(tf.math.pow(tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.add(grad, grad), alpha), tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.square(beta)))), alpha), grad)), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [95.54452514648438, 10891.8505859375, 182829.96875, 1280944.625, 5594179.0, 18388752.0], "accuracy": [0.1002509593963623, 0.09787346422672272, 0.0944393053650856, 0.10051512718200684, 0.10077928751707077, 0.10196803510189056], "val_loss": [803.218017578125, 39431.5390625, 419024.8125, 2277586.75, 8520197.0, 25114948.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 2, 3, 5, 3, 5, 8, 7], [2, 1, 0, 2, 1, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 0, 8, 1, 2, 1, 4, 2, 0], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 1, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3089942932128906, 2.303393602371216, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.08902391046285629, 0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.30476975440979, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.06599999964237213, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 6, 0, 8, 4, 7, 5], [0, 1, 0, 0, 2, 3], [39, 39, 61], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 0, 3], [16, 54], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 2, 1, 4, 1, 9, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [84, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), grad)", "other_info": {"loss": [3.3407834892023347e+22, 3.937741249309828e+22, 3.914835491245059e+22, 3.53359317270919e+22, 3.705405948853337e+22, 3.636488940015556e+22], "accuracy": [0.09628847241401672, 0.0956280529499054, 0.10077928751707077, 0.09959053993225098, 0.09734513610601425, 0.09959053993225098], "val_loss": [3.7643065017598835e+22, 3.7643065017598835e+22, 3.7643065017598835e+22, 3.7643065017598835e+22, 3.7643065017598835e+22, 3.7643065017598835e+22], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 15, 9, 6, 3, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18}]