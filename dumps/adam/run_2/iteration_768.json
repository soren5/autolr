[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239458560943604, 1.868157982826233, 1.3939008712768555, 1.1037348508834839, 0.9558557868003845, 0.8348028063774109, 0.7844479084014893, 0.7231696844100952, 0.6930242776870728, 0.656467616558075, 0.6277198791503906, 0.5983089804649353, 0.5858327746391296, 0.5797534584999084, 0.5563202500343323, 0.5376360416412354, 0.5337569117546082, 0.5064694285392761, 0.49947890639305115, 0.48804789781570435, 0.48382407426834106, 0.4720010459423065, 0.4576728940010071, 0.45806095004081726, 0.4468521475791931, 0.43322494626045227, 0.41803160309791565, 0.4201420545578003, 0.4146037697792053, 0.4101509749889374, 0.39577367901802063, 0.3945849537849426, 0.39350587129592896, 0.3887210190296173, 0.378713458776474, 0.3759314715862274, 0.36419475078582764, 0.36244678497314453, 0.36282405257225037, 0.350116103887558, 0.34170952439308167, 0.3443145453929901, 0.33711478114128113, 0.3381253778934479, 0.32364463806152344, 0.3218463957309723, 0.3165465295314789, 0.3157937824726105, 0.30744969844818115, 0.3039607107639313, 0.2998092472553253, 0.2916828691959381, 0.29305320978164673, 0.27900275588035583, 0.2847155034542084, 0.2840428650379181, 0.27659910917282104, 0.26665085554122925, 0.2643423080444336, 0.25790488719940186, 0.2600456774234772, 0.2565532326698303, 0.25219297409057617, 0.24997268617153168], "accuracy": [0.26535463333129883, 0.4761590361595154, 0.5612204670906067, 0.6129969358444214, 0.6548672318458557, 0.6997754573822021, 0.7177387475967407, 0.7387399077415466, 0.7503632307052612, 0.7618544697761536, 0.7684586048126221, 0.7845727205276489, 0.7921014428138733, 0.7890635132789612, 0.8025360107421875, 0.809140145778656, 0.8109893202781677, 0.8181217908859253, 0.8244617581367493, 0.828820526599884, 0.8318583965301514, 0.8362171649932861, 0.8392550349235535, 0.8383304476737976, 0.8425571322441101, 0.8450667262077332, 0.8539162874221802, 0.8536521196365356, 0.8564258217811584, 0.8580108284950256, 0.8595958352088928, 0.858671247959137, 0.8659358024597168, 0.8634262084960938, 0.8644828796386719, 0.8673887252807617, 0.8728041052818298, 0.8714832663536072, 0.8728041052818298, 0.8784837126731873, 0.8779553771018982, 0.8800686597824097, 0.8848236799240112, 0.8782195448875427, 0.8860124349594116, 0.8905032277107239, 0.891559898853302, 0.8887861371040344, 0.8889182209968567, 0.8924844861030579, 0.8951261639595032, 0.9002773761749268, 0.8967111110687256, 0.9017302989959717, 0.9056927561759949, 0.8961827754974365, 0.90423983335495, 0.9052965044975281, 0.904768168926239, 0.9064852595329285, 0.9075419306755066, 0.909259021282196, 0.9068815112113953, 0.910711944103241], "val_loss": [2.036086320877075, 1.5062974691390991, 1.0369524955749512, 0.8293584585189819, 0.7402310371398926, 0.6793456077575684, 0.6350029110908508, 0.6012809872627258, 0.5789121389389038, 0.554807186126709, 0.5378898978233337, 0.5189935564994812, 0.5131639242172241, 0.49413982033729553, 0.4824245870113373, 0.4697536528110504, 0.46445590257644653, 0.45715299248695374, 0.44593295454978943, 0.4429604113101959, 0.43522563576698303, 0.4279853105545044, 0.42543819546699524, 0.4201847314834595, 0.4152294993400574, 0.41017386317253113, 0.4073604345321655, 0.40176618099212646, 0.39898961782455444, 0.39553728699684143, 0.3933365046977997, 0.3918478488922119, 0.38861870765686035, 0.3852090537548065, 0.38717514276504517, 0.38894766569137573, 0.38357073068618774, 0.3790542781352997, 0.3725338876247406, 0.3766670227050781, 0.3684500455856323, 0.36836978793144226, 0.37184563279151917, 0.3653297424316406, 0.3615025579929352, 0.3634602129459381, 0.3633889853954315, 0.35968130826950073, 0.35495781898498535, 0.3569726049900055, 0.353981077671051, 0.3536209762096405, 0.3550255596637726, 0.35447588562965393, 0.3527350127696991, 0.34896761178970337, 0.35095909237861633, 0.3470475971698761, 0.34937816858291626, 0.3525126874446869, 0.3441636264324188, 0.3510754406452179, 0.34648436307907104, 0.3505537807941437], "val_accuracy": [0.5556666851043701, 0.6626666784286499, 0.6856666803359985, 0.7166666388511658, 0.7303333282470703, 0.7513333559036255, 0.7613333463668823, 0.7773333191871643, 0.7806666493415833, 0.7926666736602783, 0.8023333549499512, 0.8040000200271606, 0.8040000200271606, 0.8199999928474426, 0.8270000219345093, 0.828000009059906, 0.8346666693687439, 0.8389999866485596, 0.8426666855812073, 0.847000002861023, 0.8450000286102295, 0.8423333168029785, 0.8500000238418579, 0.8506666421890259, 0.8536666631698608, 0.8519999980926514, 0.8603333234786987, 0.862333357334137, 0.8606666922569275, 0.8610000014305115, 0.8603333234786987, 0.8633333444595337, 0.8636666536331177, 0.8673333525657654, 0.862666666507721, 0.8616666793823242, 0.8650000095367432, 0.8663333058357239, 0.8676666617393494, 0.8656666874885559, 0.871666669845581, 0.8679999709129333, 0.8700000047683716, 0.8676666617393494, 0.8706666827201843, 0.875, 0.8673333525657654, 0.8713333606719971, 0.871999979019165, 0.8759999871253967, 0.8743333220481873, 0.8763333559036255, 0.8693333268165588, 0.8756666779518127, 0.8786666393280029, 0.878000020980835, 0.8756666779518127, 0.8796666860580444, 0.8816666603088379, 0.875, 0.8793333172798157, 0.8773333430290222, 0.8769999742507935, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 36], [0, 1], [0], [0], [38], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 3, 8, 1, 4, 1, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11914286017417908, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [3.26483897510527e+17, 3.762315072676823e+17, 3.78582228768129e+17, 3.773009541243863e+17, 3.815074794538271e+17, 3.791195807164662e+17], "accuracy": [0.10117553919553757, 0.0940430611371994, 0.10210011899471283, 0.10500594228506088, 0.09668471664190292, 0.10170386731624603], "val_loss": [1.906660536745984e+17, 1.906660536745984e+17, 1.9066608803433677e+17, 1.906660536745984e+17, 1.906660536745984e+17, 1.906660364947292e+17], "val_accuracy": [0.11633333563804626, 0.11633333563804626, 0.11633333563804626, 0.11633333563804626, 0.11633333563804626, 0.11633333563804626]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3, 2, 3, 1, 8, 8, 8, 3, 1, 5, 5, 9, 4, 6, 2, 6, 6, 9, 4, 8, 4, 0, 9], [0, 1, 0, 2, 0, 1, 1, 2, 1, 1, 1, 2, 2], [39, 39, 53, 78, 53, 24], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [67, 16], [1, 0], [0], [0], [99], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 1, 2, 8], [0, 0, 0, 3, 4, 1, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 27, 13, 6, 10, 6, 4, 2, 1, 0, 1, 1, 16, 9, 7, 4], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.square(alpha)))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(alpha), alpha))))), grad))), tf.math.pow(tf.math.negative(grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.math.subtract(alpha, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [1, 0, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 98], [0, 1, 1], [3], [0, 0], [99, 4], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8, 0, 0, 7, 7, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 1], [7, 99, 96, 5, 61, 1, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 6, 3, 3, 2, 3, 1, 2, 2, 28, 16, 12, 7], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.negative(alpha)))), tf.math.negative(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 0], [0, 2, 3, 1], [60, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.026000000536441803, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 1, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha))), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.0493850591116865e+34, 1.2228740614192693e+34, 1.2008670775468892e+34, 1.2082250217583897e+34, 1.268943752393267e+34, 1.2296517831343568e+34], "accuracy": [0.06207898631691933, 0.054550256580114365, 0.05098401755094528, 0.055210672318935394, 0.05243692919611931, 0.056531500071287155], "val_loss": [1.1178097189031073e+34, 1.1178097189031073e+34, 1.1178097189031073e+34, 1.1178097189031073e+34, 1.1178097189031073e+34, 1.1178097189031073e+34], "val_accuracy": [0.028333334252238274, 0.028333334252238274, 0.028333334252238274, 0.028333334252238274, 0.028333334252238274, 0.028333334252238274]}}]