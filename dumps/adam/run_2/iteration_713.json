[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8791428804397583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2227210998535156, 1.8654685020446777, 1.390444278717041, 1.095873475074768, 0.917676568031311, 0.8415704369544983, 0.7776873707771301, 0.7346292734146118, 0.6988468766212463, 0.6622410416603088, 0.6309942603111267, 0.6071498394012451, 0.5972694158554077, 0.5763189792633057, 0.56150883436203, 0.5457512736320496, 0.5269310474395752, 0.528556764125824, 0.5104864835739136, 0.49764546751976013, 0.4815478026866913, 0.4774337708950043, 0.46741726994514465, 0.45946449041366577, 0.45712533593177795, 0.4479614794254303, 0.4346027672290802, 0.42284858226776123, 0.4133697748184204, 0.4120585322380066, 0.4028513431549072, 0.39902833104133606, 0.39691996574401855, 0.38894012570381165, 0.3842777609825134, 0.3692317605018616, 0.3724577724933624, 0.3635317087173462, 0.36640700697898865, 0.35316818952560425, 0.35765933990478516, 0.33518362045288086, 0.3366430401802063, 0.333967000246048, 0.329094797372818, 0.325589656829834, 0.32473674416542053, 0.3259536921977997, 0.3161551356315613, 0.31211093068122864, 0.30605292320251465, 0.29655760526657104, 0.2973664402961731, 0.2963070869445801, 0.2839125096797943, 0.2849397659301758, 0.284712016582489, 0.27260518074035645, 0.27231186628341675, 0.2701343297958374, 0.266309529542923, 0.2637113034725189, 0.25882309675216675, 0.24997586011886597, 0.24565909802913666, 0.24551956355571747, 0.23763759434223175, 0.24102354049682617], "accuracy": [0.2767137885093689, 0.4951789677143097, 0.5686171054840088, 0.6199973821640015, 0.6756042838096619, 0.6940959095954895, 0.7251353859901428, 0.7359662055969238, 0.7489103078842163, 0.7606657147407532, 0.7703077793121338, 0.778232753276825, 0.7848368883132935, 0.7951393723487854, 0.7989697456359863, 0.8026680946350098, 0.8067626357078552, 0.8072909712791443, 0.8136309385299683, 0.8228767514228821, 0.8271034359931946, 0.8284242749214172, 0.832650899887085, 0.8360850811004639, 0.834632158279419, 0.8396512866020203, 0.8470479249954224, 0.8492933511734009, 0.8533879518508911, 0.8532558679580688, 0.8514066934585571, 0.8610487580299377, 0.8569541573524475, 0.8602562546730042, 0.8593316674232483, 0.8634262084960938, 0.8659358024597168, 0.8712190985679626, 0.8665962219238281, 0.874389111995697, 0.8687095642089844, 0.8778232932090759, 0.8767666220664978, 0.8800686597824097, 0.8747853636741638, 0.8844274282455444, 0.8803328275680542, 0.8813894987106323, 0.8850878477096558, 0.8861445188522339, 0.8870691061019897, 0.8902390599250793, 0.8905032277107239, 0.8898428082466125, 0.8992207050323486, 0.8957865834236145, 0.8943336606025696, 0.8992207050323486, 0.9005415439605713, 0.9009377956390381, 0.9033153057098389, 0.9029190540313721, 0.9041078090667725, 0.9084665179252625, 0.9101836085319519, 0.9111081957817078, 0.9126931428909302, 0.9109761118888855], "val_loss": [2.0423829555511475, 1.5218007564544678, 1.0525132417678833, 0.8484389781951904, 0.7606704235076904, 0.7046939134597778, 0.6557561755180359, 0.6223270297050476, 0.5917695760726929, 0.5711109042167664, 0.5486558675765991, 0.5336929559707642, 0.5187442898750305, 0.5059801340103149, 0.4965096414089203, 0.4867459833621979, 0.474945992231369, 0.46880483627319336, 0.46358105540275574, 0.4494873881340027, 0.4423876106739044, 0.43979960680007935, 0.4275514781475067, 0.4243294298648834, 0.42331910133361816, 0.4144965708255768, 0.4099479019641876, 0.40358152985572815, 0.40042194724082947, 0.3911290764808655, 0.39125552773475647, 0.395956814289093, 0.38500115275382996, 0.3820228576660156, 0.37790408730506897, 0.3735214173793793, 0.3748980164527893, 0.3758617341518402, 0.36906713247299194, 0.36613741517066956, 0.364823579788208, 0.3626646399497986, 0.35845044255256653, 0.357906699180603, 0.356837660074234, 0.3632793724536896, 0.3571794331073761, 0.35273608565330505, 0.3493614196777344, 0.3520071506500244, 0.34775805473327637, 0.3500153124332428, 0.34642431139945984, 0.34679707884788513, 0.342894047498703, 0.3409082889556885, 0.3389473557472229, 0.338418185710907, 0.34343522787094116, 0.3383060097694397, 0.340300977230072, 0.3404068648815155, 0.333683580160141, 0.3372360169887543, 0.3321632146835327, 0.3325032889842987, 0.33473607897758484, 0.3391144275665283], "val_accuracy": [0.5419999957084656, 0.6583333611488342, 0.6809999942779541, 0.7076666951179504, 0.7323333621025085, 0.7429999709129333, 0.7636666893959045, 0.7713333368301392, 0.7823333144187927, 0.7846666574478149, 0.7990000247955322, 0.8029999732971191, 0.8106666803359985, 0.8173333406448364, 0.8159999847412109, 0.8220000267028809, 0.8266666531562805, 0.828000009059906, 0.8309999704360962, 0.8339999914169312, 0.8413333296775818, 0.8389999866485596, 0.8450000286102295, 0.843999981880188, 0.8450000286102295, 0.847000002861023, 0.8550000190734863, 0.8526666760444641, 0.8550000190734863, 0.859666645526886, 0.859000027179718, 0.8553333282470703, 0.859000027179718, 0.8603333234786987, 0.862333357334137, 0.8646666407585144, 0.8653333187103271, 0.862333357334137, 0.8669999837875366, 0.8663333058357239, 0.8659999966621399, 0.8653333187103271, 0.8679999709129333, 0.8703333139419556, 0.8676666617393494, 0.8666666746139526, 0.8679999709129333, 0.8690000176429749, 0.8740000128746033, 0.8733333349227905, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.8743333220481873, 0.8740000128746033, 0.875333309173584, 0.8773333430290222, 0.8740000128746033, 0.8759999871253967, 0.8790000081062317, 0.8796666860580444, 0.8766666650772095, 0.8833333253860474, 0.8796666860580444, 0.8806666731834412, 0.8806666731834412, 0.8809999823570251, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 1, 3, 0, 3, 0], [0, 1, 0, 2, 1], [39, 48], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1, 0, 1, 3, 9, 2], [0, 2, 0, 3, 3, 1, 3], [16, 16, 9], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 6, 3, 2, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 94, 61, 1]], "fitness": -0.7511428594589233, "mapping_values": [1, 11, 6, 5, 2, 19, 12, 7, 3, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.multiply(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.788961410522461, 1.046889066696167, 0.9195619225502014, 0.8748123049736023, 0.8507235050201416, 0.8271368741989136, 0.8146302700042725, 0.803697407245636, 0.7942996025085449, 0.7866004109382629, 0.7785300016403198, 0.7768017053604126, 0.7697208523750305, 0.7657796144485474, 0.7587018609046936, 0.7655571699142456, 0.7503217458724976, 0.7508596777915955, 0.7531725764274597, 0.7462467551231384, 0.7499419450759888, 0.7479836940765381, 0.73893141746521, 0.7388672232627869, 0.747592568397522], "accuracy": [0.39862632751464844, 0.625148594379425, 0.6668868064880371, 0.6847180128097534, 0.6882842183113098, 0.7014925479888916, 0.703209638595581, 0.7071720957756042, 0.709021270275116, 0.7123233675956726, 0.7123233675956726, 0.7195879220962524, 0.7149649858474731, 0.7148329019546509, 0.7215691208839417, 0.722229540348053, 0.7213049530982971, 0.7257958054542542, 0.7205125093460083, 0.7255316376686096, 0.7256637215614319, 0.7244749665260315, 0.7300224304199219, 0.7264562249183655, 0.7231541275978088], "val_loss": [1.0532259941101074, 0.8355193138122559, 0.7819228768348694, 0.7484309077262878, 0.7371553778648376, 0.7190033197402954, 0.7097734212875366, 0.7028367519378662, 0.6980783939361572, 0.6914891004562378, 0.6853001117706299, 0.6822701692581177, 0.6780472993850708, 0.6752064824104309, 0.6724500060081482, 0.6697372794151306, 0.6667710542678833, 0.6642859578132629, 0.6633643507957458, 0.6609227061271667, 0.6584831476211548, 0.6575927138328552, 0.6557215452194214, 0.6538898348808289, 0.6525810956954956], "val_accuracy": [0.6343333125114441, 0.6986666917800903, 0.7149999737739563, 0.7256666421890259, 0.7233333587646484, 0.7360000014305115, 0.737333357334137, 0.737666666507721, 0.7369999885559082, 0.7393333315849304, 0.7440000176429749, 0.7429999709129333, 0.7450000047683716, 0.7459999918937683, 0.746999979019165, 0.7459999918937683, 0.75, 0.7490000128746033, 0.7490000128746033, 0.7526666522026062, 0.7513333559036255, 0.7516666650772095, 0.7506666779518127, 0.7519999742507935, 0.7516666650772095]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 9, 3, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 9, 2, 0], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 97, 50, 99, 61, 1]], "fitness": -0.11057142913341522, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 0, 15, 8, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), sigma)", "other_info": {"loss": [2.9783263883034624e+16, 3.564859362902016e+16, 3.911618701505331e+16, 3.610147216057958e+16, 3.357460975635661e+16, 3.5654879313657856e+16], "accuracy": [0.10540219396352768, 0.10632677376270294, 0.10698718577623367, 0.10738343745470047, 0.10817593336105347, 0.10698718577623367], "val_loss": [3.4996482302017536e+16, 3.499799413050573e+16, 3.4998168076681216e+16, 3.4998339875373056e+16, 3.4998511674064896e+16, 3.4998685620240384e+16], "val_accuracy": [0.11500000208616257, 0.11500000208616257, 0.11500000208616257, 0.11500000208616257, 0.11500000208616257, 0.11500000208616257]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 1], [77, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 15, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 4, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 8, 9, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 70, 96, 67, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.304110050201416, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]