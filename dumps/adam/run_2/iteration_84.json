[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219724655151367, 1.8629814386367798, 1.3965058326721191, 1.0971952676773071, 0.922903299331665, 0.8351433873176575, 0.7568601369857788, 0.7175597548484802, 0.6831152439117432, 0.6441206932067871, 0.6214152574539185, 0.5976784229278564, 0.578197181224823, 0.5640857815742493, 0.5492144227027893, 0.532431960105896, 0.5212457180023193, 0.5067774057388306, 0.49732768535614014, 0.48085135221481323, 0.4821699261665344, 0.4697370231151581, 0.45597657561302185, 0.45372405648231506, 0.4440594017505646, 0.43434691429138184, 0.42448851466178894, 0.4236748218536377, 0.4034010171890259, 0.4028901755809784, 0.40039271116256714, 0.39378976821899414, 0.3827967345714569, 0.39198315143585205, 0.3698670268058777, 0.3678240180015564, 0.35483530163764954, 0.3640473186969757, 0.3520708680152893, 0.3513872027397156, 0.3499697148799896, 0.33792486786842346, 0.34075284004211426, 0.33205047249794006, 0.32260069251060486, 0.32135528326034546, 0.3197731673717499, 0.30783092975616455, 0.30393582582473755, 0.3061540126800537, 0.3043239712715149, 0.28828731179237366, 0.2900095283985138, 0.2726958096027374, 0.28489381074905396, 0.26998695731163025, 0.2752537429332733, 0.26631638407707214, 0.26389533281326294, 0.26499661803245544, 0.25801292061805725, 0.26152294874191284, 0.25353607535362244, 0.25196874141693115, 0.24370555579662323, 0.24311396479606628, 0.23784424364566803, 0.23347389698028564], "accuracy": [0.27222296595573425, 0.4971602261066437, 0.5632016658782959, 0.6165632009506226, 0.6672830581665039, 0.6936996579170227, 0.7253995537757874, 0.7400607466697693, 0.7526086568832397, 0.7627789974212646, 0.7683265209197998, 0.7795535326004028, 0.7878747582435608, 0.7932901978492737, 0.7992339134216309, 0.8053097128868103, 0.8129705190658569, 0.8152159452438354, 0.8165367841720581, 0.8278959393501282, 0.8231409192085266, 0.8298771381378174, 0.8384625315666199, 0.8358209133148193, 0.8397833704948425, 0.842028796672821, 0.8494254350662231, 0.8466516733169556, 0.8519350290298462, 0.850350022315979, 0.8581429123878479, 0.8594637513160706, 0.8648791313171387, 0.8597279191017151, 0.8668603897094727, 0.8658037185668945, 0.8733324408531189, 0.8671245574951172, 0.8726720213890076, 0.8747853636741638, 0.8751816153526306, 0.8767666220664978, 0.8772949576377869, 0.8796724081039429, 0.8819178342819214, 0.8796724081039429, 0.8821820020675659, 0.8887861371040344, 0.8849557638168335, 0.8878615498542786, 0.8883898854255676, 0.8927486538887024, 0.8924844861030579, 0.9009377956390381, 0.894069492816925, 0.9029190540313721, 0.9015982151031494, 0.902390718460083, 0.9015982151031494, 0.9000132083892822, 0.9050323367118835, 0.9049002528190613, 0.9074098467826843, 0.9075419306755066, 0.9108440279960632, 0.9122969508171082, 0.9128252267837524, 0.9163914918899536], "val_loss": [2.0344159603118896, 1.5040701627731323, 1.024861216545105, 0.8116053342819214, 0.7200876474380493, 0.6675177216529846, 0.6295116543769836, 0.5890025496482849, 0.5637195110321045, 0.5443217158317566, 0.5200803875923157, 0.5089393854141235, 0.4964086413383484, 0.48557141423225403, 0.4743596315383911, 0.46126505732536316, 0.45066195726394653, 0.44969767332077026, 0.43880990147590637, 0.4302716851234436, 0.42542028427124023, 0.4196144640445709, 0.41676855087280273, 0.40981006622314453, 0.4039093554019928, 0.3976253271102905, 0.39708366990089417, 0.39012983441352844, 0.3864925503730774, 0.3876759111881256, 0.3841017782688141, 0.37833356857299805, 0.37618085741996765, 0.3754228949546814, 0.37189844250679016, 0.3650308847427368, 0.3655490577220917, 0.36190664768218994, 0.3653483986854553, 0.3571322560310364, 0.36356794834136963, 0.36269131302833557, 0.3504185378551483, 0.35351961851119995, 0.3496805727481842, 0.34524738788604736, 0.3452737629413605, 0.3522110879421234, 0.34258145093917847, 0.3414296805858612, 0.3411440849304199, 0.3443053066730499, 0.3382275402545929, 0.33907681703567505, 0.3386543095111847, 0.33810949325561523, 0.33898067474365234, 0.33950603008270264, 0.3423013389110565, 0.334660142660141, 0.3408276438713074, 0.3334578573703766, 0.32946285605430603, 0.332001268863678, 0.32890161871910095, 0.32749101519584656, 0.3324297368526459, 0.33147817850112915], "val_accuracy": [0.5563333630561829, 0.6790000200271606, 0.6953333616256714, 0.7243333458900452, 0.7473333477973938, 0.7570000290870667, 0.7680000066757202, 0.7766666412353516, 0.7929999828338623, 0.8086666464805603, 0.8113333582878113, 0.8163333535194397, 0.8186666369438171, 0.8240000009536743, 0.828000009059906, 0.831333339214325, 0.8373333215713501, 0.8410000205039978, 0.8426666855812073, 0.8446666598320007, 0.8429999947547913, 0.8493333458900452, 0.8493333458900452, 0.8529999852180481, 0.8539999723434448, 0.8539999723434448, 0.8573333621025085, 0.8613333106040955, 0.8569999933242798, 0.8569999933242798, 0.8586666584014893, 0.862333357334137, 0.8646666407585144, 0.8659999966621399, 0.8606666922569275, 0.8690000176429749, 0.8673333525657654, 0.8669999837875366, 0.8690000176429749, 0.8683333396911621, 0.8703333139419556, 0.8693333268165588, 0.8733333349227905, 0.8676666617393494, 0.8713333606719971, 0.8726666569709778, 0.8763333559036255, 0.8723333477973938, 0.8766666650772095, 0.8790000081062317, 0.8796666860580444, 0.8786666393280029, 0.8793333172798157, 0.8769999742507935, 0.8803333044052124, 0.8809999823570251, 0.8759999871253967, 0.8790000081062317, 0.8823333382606506, 0.8806666731834412, 0.8826666474342346, 0.8833333253860474, 0.8859999775886536, 0.8843333125114441, 0.8816666603088379, 0.8826666474342346, 0.8853333592414856, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [6, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 74], [0, 1, 1], [4], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0], [16, 97, 96, 99, 61, 1]], "fitness": -0.1988571435213089, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 3, 3, 1, 2, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), alpha), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [6360717.5, 18070678.0, 24860620.0, 30264104.0, 35029576.0, 39088132.0, 41929264.0, 45213264.0, 48202128.0, 51764528.0, 53617368.0, 54864428.0, 56950140.0, 58922456.0, 60897868.0, 62870944.0, 65247396.0, 66879772.0], "accuracy": [0.13472460210323334, 0.13630960881710052, 0.14529123902320862, 0.14330999553203583, 0.13393211364746094, 0.14410249888896942, 0.1426495909690857, 0.1442345827817917, 0.14159291982650757, 0.14053626358509064, 0.14238542318344116, 0.13815876841545105, 0.13974376022815704, 0.14951789379119873, 0.1450270712375641, 0.14357416331768036, 0.14515915513038635, 0.14463083446025848], "val_loss": [9891415.0, 15805989.0, 20103384.0, 23550144.0, 26461250.0, 28997526.0, 31255576.0, 33296608.0, 35163912.0, 36887976.0, 38491756.0, 39992696.0, 41404816.0, 42739424.0, 44005568.0, 45210584.0, 46361224.0, 47462532.0], "val_accuracy": [0.18766666948795319, 0.18700000643730164, 0.1886666715145111, 0.18833333253860474, 0.18933333456516266, 0.18933333456516266, 0.1899999976158142, 0.19066666066646576, 0.19033333659172058, 0.19066666066646576, 0.1913333386182785, 0.19166666269302368, 0.19233334064483643, 0.19233334064483643, 0.19233334064483643, 0.19200000166893005, 0.19200000166893005, 0.19200000166893005]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 91], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 2, 1], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 93, 99, 61, 1]], "fitness": -0.16028571128845215, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [17274.169921875, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19931316375732422, 0.11042134463787079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3942988.5, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.15566666424274445, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [3, 2, 3, 0, 3, 4, 5, 6, 6, 5, 6, 4, 8, 6, 8, 4, 6, 3, 4, 7, 3, 4, 1, 0, 7, 9, 2, 1, 0, 5], [0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3, 3, 2, 2, 2, 0], [39, 39, 87, 46, 13, 4, 82], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 1, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 75, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 51, 30, 21, 7, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, alpha)), tf.math.pow(tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha))), grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.subtract(tf.math.negative(grad), grad), grad))), grad))), tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303746223449707, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 2, 7, 9], [2, 1, 0, 2, 3], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [75, 8, 96, 99, 61, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 8, 4, 4, 2, 2, 1, 1, 1, 8, 5, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]