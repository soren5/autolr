[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8748571276664734, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2210021018981934, 1.860582947731018, 1.379381775856018, 1.085397720336914, 0.9350193738937378, 0.8275588750839233, 0.7760698795318604, 0.71700519323349, 0.6917030215263367, 0.660155177116394, 0.6336032748222351, 0.616885781288147, 0.5925915241241455, 0.5748690366744995, 0.5584351420402527, 0.5473592281341553, 0.5374550223350525, 0.5250629186630249, 0.5097588896751404, 0.49676477909088135, 0.4900307357311249, 0.4768972396850586, 0.47081342339515686, 0.4670589566230774, 0.4595704972743988, 0.44471070170402527, 0.4419824182987213, 0.4253278374671936, 0.4264811873435974, 0.4218713939189911, 0.4083816111087799, 0.3987426161766052, 0.4062092900276184, 0.3988940715789795, 0.38835984468460083, 0.3830338418483734, 0.37997356057167053, 0.3695395290851593, 0.361954003572464, 0.36402609944343567, 0.35390710830688477, 0.3509123921394348, 0.3471403121948242, 0.34294331073760986, 0.33958590030670166, 0.33310407400131226, 0.3288148045539856, 0.32449597120285034, 0.3234694302082062, 0.31566548347473145, 0.3070811629295349, 0.3072182834148407, 0.29567673802375793, 0.29682284593582153, 0.2905261516571045, 0.28676214814186096], "accuracy": [0.2743362784385681, 0.4986131191253662, 0.5672962665557861, 0.6160348653793335, 0.6659622192382812, 0.7096816897392273, 0.7273808121681213, 0.7367587089538574, 0.750759482383728, 0.7607977986335754, 0.7741381525993347, 0.7753269076347351, 0.7857614755630493, 0.7931581139564514, 0.7956677079200745, 0.804649293422699, 0.8074230551719666, 0.81112140417099, 0.8161405324935913, 0.8193105459213257, 0.8241975903511047, 0.8281601071357727, 0.8305375576019287, 0.8317263126373291, 0.8356888294219971, 0.837141752243042, 0.8421608805656433, 0.843481719493866, 0.8492933511734009, 0.8519350290298462, 0.8499537706375122, 0.8557654023170471, 0.850350022315979, 0.8545766472816467, 0.8588033318519592, 0.8593316674232483, 0.8658037185668945, 0.8644828796386719, 0.8691058158874512, 0.867520809173584, 0.8766345381736755, 0.8746532797813416, 0.8746532797813416, 0.8745211958885193, 0.8750495314598083, 0.8802007436752319, 0.8829745054244995, 0.8869370222091675, 0.8803328275680542, 0.8874653577804565, 0.8893144726753235, 0.8861445188522339, 0.8968431949615479, 0.8926165699958801, 0.8943336606025696, 0.8960506916046143], "val_loss": [2.0380804538726807, 1.5092763900756836, 1.0349088907241821, 0.8374110460281372, 0.7515896558761597, 0.6978142857551575, 0.654323935508728, 0.6211993098258972, 0.5962328910827637, 0.574996829032898, 0.5568613409996033, 0.539359986782074, 0.5265681147575378, 0.5097988247871399, 0.5011876821517944, 0.4918285608291626, 0.4826151132583618, 0.4774920344352722, 0.4632914662361145, 0.45621415972709656, 0.45152920484542847, 0.4451509118080139, 0.4473111033439636, 0.441040575504303, 0.42966747283935547, 0.4305918514728546, 0.42110952734947205, 0.41765135526657104, 0.4126376807689667, 0.41150057315826416, 0.40728214383125305, 0.40356680750846863, 0.4019105136394501, 0.3963930606842041, 0.3951031565666199, 0.39070338010787964, 0.3977407217025757, 0.3899673521518707, 0.3909744322299957, 0.384700208902359, 0.37857598066329956, 0.3787195682525635, 0.37702035903930664, 0.3723173439502716, 0.37299254536628723, 0.37036341428756714, 0.36584123969078064, 0.3681788444519043, 0.3673994243144989, 0.3644770383834839, 0.3618910312652588, 0.36104509234428406, 0.3636610209941864, 0.35697850584983826, 0.3556363582611084, 0.35514289140701294], "val_accuracy": [0.5706666707992554, 0.668666660785675, 0.6923333406448364, 0.7123333215713501, 0.7273333072662354, 0.7440000176429749, 0.753000020980835, 0.7586666941642761, 0.7753333449363708, 0.781000018119812, 0.7883333563804626, 0.7946666479110718, 0.8050000071525574, 0.8109999895095825, 0.8186666369438171, 0.8169999718666077, 0.8209999799728394, 0.8240000009536743, 0.8296666741371155, 0.8370000123977661, 0.8366666436195374, 0.840666651725769, 0.8389999866485596, 0.843999981880188, 0.8446666598320007, 0.847000002861023, 0.8519999980926514, 0.8546666502952576, 0.8603333234786987, 0.8543333411216736, 0.8576666712760925, 0.8606666922569275, 0.859666645526886, 0.8646666407585144, 0.8603333234786987, 0.8659999966621399, 0.859666645526886, 0.8650000095367432, 0.8676666617393494, 0.8693333268165588, 0.8730000257492065, 0.8706666827201843, 0.8676666617393494, 0.8733333349227905, 0.871999979019165, 0.8730000257492065, 0.8759999871253967, 0.8736666440963745, 0.8740000128746033, 0.875333309173584, 0.8769999742507935, 0.8756666779518127, 0.8756666779518127, 0.8763333559036255, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [94, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 0], [0, 2, 0, 1, 1], [34, 16], [0, 1], [0], [0], [61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 2, 4, 4, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 60, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037359714508057, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 3, 1, 5, 5, 6, 9, 7, 1, 0, 7, 0, 9, 1, 0, 1, 1, 1, 0, 8, 0, 8, 7, 6, 7, 9, 1, 7, 6, 9, 7, 6, 1], [0, 2, 0, 3, 3, 3, 3, 5, 4, 4, 3, 4, 4, 3, 4, 1, 2, 5, 3], [25, 16, 5, 8, 22, 58], [1, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 9, 3, 6, 8, 1, 4, 1, 4, 2, 4], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 85, 96, 99, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 56, 37, 19, 6, 1, 0, 1, 1, 3, 2, 1, 2], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(beta, tf.math.subtract(tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad)), tf.math.negative(grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), grad)), tf.math.subtract(tf.math.negative(grad), tf.math.subtract(tf.math.subtract(grad, tf.math.subtract(tf.math.negative(grad), grad)), tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(grad, tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.math.divide_no_nan(grad, alpha))), tf.math.subtract(beta, grad))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303926944732666, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 5, 7, 1, 3, 7, 4], [0, 2, 0, 3, 0, 3, 4, 4, 3, 1], [16, 29, 98], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [4, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8, 4, 1], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0, 0, 0], [16, 99, 96, 99, 28, 1, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 21, 11, 10, 3, 2, 1, 1, 1, 25, 13, 12, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.add(grad, tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.pow(beta, tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 17], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 1], [16, 93, 10, 99, 61, 1]], "fitness": -0.08314285427331924, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), beta))", "other_info": {"loss": [2.3101422786712646, 2.3092362880706787, 2.306800365447998, 2.3077213764190674, 2.305845260620117, 2.305119276046753, 2.305285692214966, 2.304732322692871, 2.3033320903778076], "accuracy": [0.08889182657003403, 0.09126931428909302, 0.08955223858356476, 0.08955223858356476, 0.08638224750757217, 0.09192973375320435, 0.0882314071059227, 0.08638224750757217, 0.09008057415485382], "val_loss": [2.3086187839508057, 2.307859420776367, 2.3070969581604004, 2.306429624557495, 2.3058362007141113, 2.3052597045898438, 2.304701566696167, 2.304161548614502, 2.303666114807129], "val_accuracy": [0.09000000357627869, 0.08966666460037231, 0.08833333104848862, 0.09066666662693024, 0.08733333647251129, 0.08699999749660492, 0.08566666394472122, 0.08100000023841858, 0.07766667008399963]}}]