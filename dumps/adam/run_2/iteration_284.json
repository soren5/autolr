[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2207422256469727, 1.8657159805297852, 1.3842085599899292, 1.0904643535614014, 0.9296606183052063, 0.824066162109375, 0.763159453868866, 0.7129444479942322, 0.6894994378089905, 0.6544881463050842, 0.6205230355262756, 0.6048598289489746, 0.580714225769043, 0.5637843608856201, 0.5523137450218201, 0.5370898246765137, 0.5251476168632507, 0.5066598653793335, 0.49409961700439453, 0.4867788255214691, 0.47223150730133057, 0.4706924855709076, 0.4590277075767517, 0.4565485715866089, 0.4488164782524109, 0.43120715022087097, 0.4319043457508087, 0.42273423075675964, 0.4165336787700653, 0.40999138355255127, 0.40999460220336914, 0.4044649600982666, 0.38952210545539856, 0.3810310661792755, 0.3747832179069519, 0.3698756694793701, 0.371349960565567, 0.3617803454399109, 0.3609113395214081, 0.35738712549209595, 0.34616971015930176, 0.34650853276252747, 0.34065571427345276, 0.3361600637435913, 0.33057335019111633, 0.32997241616249084], "accuracy": [0.28741249442100525, 0.48329150676727295, 0.5712587237358093, 0.6230352520942688, 0.666358470916748, 0.7054550051689148, 0.7276449799537659, 0.7421740889549255, 0.7498348951339722, 0.7618544697761536, 0.7705719470977783, 0.7821952104568481, 0.7909126877784729, 0.800290584564209, 0.8004226684570312, 0.8063663840293884, 0.8080834746360779, 0.8216879963874817, 0.821820080280304, 0.828820526599884, 0.8347642421722412, 0.8335754871368408, 0.8364813327789307, 0.8374059200286865, 0.8341038227081299, 0.8474441766738892, 0.8449346423149109, 0.8479725122451782, 0.8511425256729126, 0.854708731174469, 0.8535200357437134, 0.8601241707801819, 0.8638224601745605, 0.8658037185668945, 0.8697662353515625, 0.8681812286376953, 0.8704266548156738, 0.8712190985679626, 0.8693699836730957, 0.8722757697105408, 0.8766345381736755, 0.8794082403182983, 0.8778232932090759, 0.8799365758895874, 0.8811253309249878, 0.8838990926742554], "val_loss": [2.0402348041534424, 1.5218536853790283, 1.046654462814331, 0.8438707590103149, 0.7506453990936279, 0.6931803226470947, 0.647412896156311, 0.6122565269470215, 0.5848825573921204, 0.5623013377189636, 0.540136456489563, 0.5232948064804077, 0.5186374187469482, 0.49680331349372864, 0.48947611451148987, 0.47853609919548035, 0.4700717628002167, 0.4600091278553009, 0.4530404508113861, 0.44580599665641785, 0.4383183717727661, 0.43013232946395874, 0.42942073941230774, 0.4222418963909149, 0.41846606135368347, 0.4202862083911896, 0.4131809175014496, 0.40431076288223267, 0.40815281867980957, 0.4013526141643524, 0.3993643522262573, 0.39569851756095886, 0.3932880461215973, 0.3873099684715271, 0.3847709894180298, 0.38316425681114197, 0.37896427512168884, 0.3827536702156067, 0.3788304924964905, 0.37608057260513306, 0.37307798862457275, 0.37231332063674927, 0.36827319860458374, 0.3707016706466675, 0.3670380711555481, 0.3689320385456085], "val_accuracy": [0.5099999904632568, 0.6439999938011169, 0.6766666769981384, 0.7023333311080933, 0.7286666631698608, 0.7513333559036255, 0.7583333253860474, 0.7743333578109741, 0.7923333048820496, 0.800000011920929, 0.8109999895095825, 0.8143333196640015, 0.8233333230018616, 0.8256666660308838, 0.8353333473205566, 0.8320000171661377, 0.8320000171661377, 0.8383333086967468, 0.8396666646003723, 0.843666672706604, 0.843999981880188, 0.8519999980926514, 0.8506666421890259, 0.8503333330154419, 0.8546666502952576, 0.8546666502952576, 0.8526666760444641, 0.859000027179718, 0.8576666712760925, 0.8586666584014893, 0.8586666584014893, 0.8586666584014893, 0.862666666507721, 0.8636666536331177, 0.8666666746139526, 0.8633333444595337, 0.8686666488647461, 0.8666666746139526, 0.8659999966621399, 0.8656666874885559, 0.8713333606719971, 0.8646666407585144, 0.8700000047683716, 0.8686666488647461, 0.8696666955947876, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 99], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [42, 16], [0, 1], [0], [0], [45], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 4, 3, 0, 4, 3, 1, 2, 0], [16, 99, 16, 61, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303567886352539, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6, 5], [0, 1, 0, 2, 3], [39, 18], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 0, 6, 5], [3, 2, 2, 0], [16, 16], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 2, 2, 7, 3, 0, 0, 8], [0, 4, 1, 3, 5, 3], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 2, 1, 4, 1, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 5, 3, 2, 0, 14, 8, 6, 1, 16, 8, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.negative(tf.math.sqrt(alpha))), sigma), grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.07285714149475098, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [7.139621580358812e+18, 8.167744117166572e+18, 8.490435386756039e+18, 8.388991695198355e+18, 8.366516578014986e+18, 8.309934610138006e+18], "accuracy": [0.0870426595211029, 0.07951393723487854, 0.08057060092687607, 0.0820235088467598, 0.08136309683322906, 0.08638224750757217], "val_loss": [7.449576657007935e+18, 7.449576657007935e+18, 7.449576657007935e+18, 7.449576657007935e+18, 7.449576657007935e+18, 7.449576657007935e+18], "val_accuracy": [0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 2, 1], [0, 2, 0, 3, 0], [16, 0, 10], [0, 0, 0, 1, 0, 0, 1, 1], [2, 5, 6, 8, 5], [0, 0, 5], [78, 69], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 44, 1]], "fitness": -0.049142856150865555, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 3, 8, 5, 3, 2, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(beta, sigma), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [14562572288.0, 18054354944.0, 16552722432.0, 17691166720.0, 17866680320.0, 17932627968.0, 17571661824.0, 17267404800.0, 19451881472.0, 18274623488.0], "accuracy": [0.08717474341392517, 0.0944393053650856, 0.09126931428909302, 0.09549596905708313, 0.08809932321310043, 0.09245806187391281, 0.09113723784685135, 0.09060890227556229, 0.09113723784685135, 0.09325055778026581], "val_loss": [12416235520.0, 12432901120.0, 12451136512.0, 12470392832.0, 12490328064.0, 12509691904.0, 12527035392.0, 12541965312.0, 12566349824.0, 12584292352.0], "val_accuracy": [0.05166666582226753, 0.050999999046325684, 0.05233333259820938, 0.052000001072883606, 0.05366666615009308, 0.05299999937415123, 0.0533333346247673, 0.052666667848825455, 0.05166666582226753, 0.05066666752099991]}}]