[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222477436065674, 1.8613932132720947, 1.3859609365463257, 1.0873445272445679, 0.9359318017959595, 0.8404620885848999, 0.7727282047271729, 0.7199017405509949, 0.6893579363822937, 0.6578724384307861, 0.6340375542640686, 0.6012364029884338, 0.5902503132820129, 0.5725389719009399, 0.55629962682724, 0.5359772443771362, 0.5213791131973267, 0.5062023997306824, 0.506108283996582, 0.4855639338493347, 0.47511452436447144, 0.47098496556282043, 0.4633091688156128, 0.44906172156333923, 0.4427613914012909, 0.43929705023765564, 0.4248686134815216, 0.41704627871513367, 0.41638514399528503, 0.40817898511886597, 0.4033488631248474, 0.3970193862915039, 0.3958031237125397, 0.3872129023075104, 0.3781798183917999, 0.37323886156082153, 0.3671432435512543, 0.3583216965198517, 0.35882246494293213, 0.3528191149234772, 0.3459310531616211, 0.3402613401412964, 0.33628740906715393, 0.33376187086105347, 0.3324710428714752, 0.32413536310195923, 0.32230138778686523, 0.30840378999710083, 0.31761226058006287, 0.3096747100353241, 0.300950825214386, 0.29212450981140137, 0.30347609519958496, 0.2964351177215576, 0.28643476963043213, 0.2784814238548279, 0.27385908365249634, 0.2762850821018219, 0.27447202801704407, 0.2620261609554291, 0.257499098777771, 0.2591875493526459, 0.2515568733215332, 0.25525110960006714, 0.24756412208080292], "accuracy": [0.2681283950805664, 0.48989564180374146, 0.5629374980926514, 0.6214502453804016, 0.6655659675598145, 0.698718786239624, 0.7143045663833618, 0.7351737022399902, 0.7453441023826599, 0.7569673657417297, 0.7638356685638428, 0.7744023203849792, 0.780610203742981, 0.7878747582435608, 0.7936864495277405, 0.8064984679222107, 0.8115176558494568, 0.8146876096725464, 0.8144234418869019, 0.8230088353157043, 0.8230088353157043, 0.8253863453865051, 0.83119797706604, 0.8393871188163757, 0.8315942287445068, 0.8454629778862, 0.8470479249954224, 0.8487650156021118, 0.8499537706375122, 0.8481045961380005, 0.8541803956031799, 0.8562937378883362, 0.8525954484939575, 0.8609166741371155, 0.8599920868873596, 0.8671245574951172, 0.8673887252807617, 0.8720116019248962, 0.8668603897094727, 0.870030403137207, 0.8729361891746521, 0.8758420348167419, 0.8799365758895874, 0.8767666220664978, 0.8735966086387634, 0.8837670087814331, 0.8802007436752319, 0.8825782537460327, 0.884691596031189, 0.8887861371040344, 0.8931449055671692, 0.8928807377815247, 0.8856161832809448, 0.8911636471748352, 0.8947299122810364, 0.8992207050323486, 0.9001452922821045, 0.8988244533538818, 0.8968431949615479, 0.9030511379241943, 0.9005415439605713, 0.9027869701385498, 0.9063531756401062, 0.9058248400688171, 0.9097873568534851], "val_loss": [2.0373098850250244, 1.514807105064392, 1.0493559837341309, 0.8543373942375183, 0.7619668245315552, 0.7026517987251282, 0.657961905002594, 0.6245328187942505, 0.5937891602516174, 0.5752385258674622, 0.5488825440406799, 0.5364780426025391, 0.525202751159668, 0.5085505843162537, 0.4948584735393524, 0.4798591732978821, 0.47216084599494934, 0.4620678722858429, 0.4515763819217682, 0.4505263566970825, 0.4394221305847168, 0.435506671667099, 0.42897266149520874, 0.41786640882492065, 0.4153541624546051, 0.41062450408935547, 0.402464359998703, 0.39891594648361206, 0.39825358986854553, 0.39461180567741394, 0.3921715021133423, 0.3849659860134125, 0.3820061981678009, 0.38926148414611816, 0.380051851272583, 0.37601667642593384, 0.37378183007240295, 0.3763887584209442, 0.3715296983718872, 0.3657796084880829, 0.3615286946296692, 0.3649314045906067, 0.36168017983436584, 0.35670769214630127, 0.35863566398620605, 0.3582916557788849, 0.3542989194393158, 0.35331860184669495, 0.34653303027153015, 0.34837231040000916, 0.34949231147766113, 0.34657585620880127, 0.34624144434928894, 0.3439417779445648, 0.3466191291809082, 0.34342658519744873, 0.34553390741348267, 0.3383404612541199, 0.34242963790893555, 0.3399990499019623, 0.3381669521331787, 0.3381796181201935, 0.33788353204727173, 0.3385656774044037, 0.3375479280948639], "val_accuracy": [0.5506666898727417, 0.6510000228881836, 0.6806666851043701, 0.7056666612625122, 0.7229999899864197, 0.7336666584014893, 0.75, 0.7566666603088379, 0.7710000276565552, 0.7753333449363708, 0.7933333516120911, 0.7979999780654907, 0.7900000214576721, 0.812333345413208, 0.8203333616256714, 0.8289999961853027, 0.8223333358764648, 0.8343333601951599, 0.8396666646003723, 0.8399999737739563, 0.8476666808128357, 0.8463333249092102, 0.8463333249092102, 0.8533333539962769, 0.8529999852180481, 0.8536666631698608, 0.8539999723434448, 0.8569999933242798, 0.8606666922569275, 0.862333357334137, 0.8539999723434448, 0.8600000143051147, 0.8616666793823242, 0.8643333315849304, 0.8666666746139526, 0.8640000224113464, 0.8663333058357239, 0.862333357334137, 0.8669999837875366, 0.8663333058357239, 0.8709999918937683, 0.8650000095367432, 0.8700000047683716, 0.8740000128746033, 0.8733333349227905, 0.871666669845581, 0.8703333139419556, 0.874666690826416, 0.8773333430290222, 0.8736666440963745, 0.874666690826416, 0.8790000081062317, 0.8736666440963745, 0.8796666860580444, 0.874666690826416, 0.8740000128746033, 0.8769999742507935, 0.8820000290870667, 0.8736666440963745, 0.8823333382606506, 0.8803333044052124, 0.878333330154419, 0.8796666860580444, 0.8820000290870667, 0.878000020980835]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5], [0, 2, 0, 3, 0], [16, 16, 72], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 6, 3, 6, 8, 1, 4, 1, 3, 2, 5], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 3, 2, 1, 1, 1, 18, 9, 9, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 2, 2], [59, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3, 6, 3, 4, 4, 1, 5, 9], [0, 2, 0, 3, 5, 3, 0, 4], [16, 73, 96, 98], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 3, 1, 6, 1, 4, 2, 5, 7, 5, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 0, 6], [16, 99, 96, 99, 61, 1, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 20, 12, 8, 4, 1, 0, 1, 1, 27, 14, 13, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.pow(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.square(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 1, 2, 3, 7, 5, 1, 6, 9], [0, 1, 0, 2, 2, 0, 2, 0], [39, 54, 30, 38, 48], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 4, 0, 0], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 1, 4, 6, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 85, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 12, 8, 5, 14, 9, 5, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(grad, tf.math.square(grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(grad))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [2.304105520248413, 2.30258846282959, 2.302586793899536, 2.3025870323181152, 2.3025856018066406, 2.3025856018066406], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302583932876587, 2.302584648132324, 2.3025853633880615, 2.3025870323181152, 2.3025870323181152, 2.3025872707366943], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 1], [39, 59], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 6], [0, 2, 0, 3], [16, 16], [0, 1, 1], [3], [0, 7], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0], [12, 6, 96, 99, 61, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 4, 2, 1, 6, 3, 3, 2, 3, 1, 2, 1, 8, 5, 3, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.309321641921997, 2.3087363243103027, 2.3081436157226562, 2.309129238128662, 2.3099966049194336, 2.309661865234375], "accuracy": [0.09351472556591034, 0.09470347315073013, 0.09325055778026581, 0.0944393053650856, 0.09245806187391281, 0.0956280529499054], "val_loss": [2.3084850311279297, 2.3084795475006104, 2.308474063873291, 2.3084683418273926, 2.3084630966186523, 2.308457612991333], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]