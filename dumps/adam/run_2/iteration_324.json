[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8728571534156799, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2246322631835938, 1.8710640668869019, 1.4011573791503906, 1.0978953838348389, 0.9422842264175415, 0.8341031670570374, 0.7819522023200989, 0.7240867018699646, 0.6867359280586243, 0.6622549891471863, 0.6334370374679565, 0.6075556874275208, 0.5999423265457153, 0.5768609642982483, 0.563322126865387, 0.5439350605010986, 0.5333470702171326, 0.5236300230026245, 0.5108001232147217, 0.49695253372192383, 0.47954484820365906, 0.4781833589076996, 0.46969226002693176, 0.46217432618141174, 0.4521500766277313, 0.4411413073539734, 0.4386274814605713, 0.4265628755092621, 0.41991403698921204, 0.41918182373046875, 0.4166419208049774, 0.4004089832305908, 0.39671874046325684, 0.3915087878704071, 0.3811177611351013, 0.3757835626602173, 0.37126079201698303, 0.3744237422943115, 0.36392247676849365, 0.3580813407897949, 0.3509349524974823, 0.3478539288043976, 0.3427952826023102, 0.3387242257595062, 0.3334724009037018, 0.3264048993587494, 0.322889506816864, 0.3228590190410614, 0.31059932708740234, 0.3113405406475067, 0.3109821379184723, 0.2988322377204895, 0.3006502687931061, 0.29948267340660095, 0.2869628667831421, 0.28107795119285583, 0.286068320274353, 0.2759212553501129, 0.2813778221607208, 0.2769820988178253, 0.2663538455963135, 0.26275619864463806, 0.25509199500083923, 0.2547919750213623, 0.24968916177749634, 0.24991776049137115, 0.2459077090024948, 0.24094411730766296, 0.2402469515800476, 0.22840018570423126], "accuracy": [0.272090882062912, 0.48474442958831787, 0.5591071248054504, 0.6095628142356873, 0.6621318459510803, 0.6995112895965576, 0.7177387475967407, 0.7380794882774353, 0.7499669790267944, 0.7629110813140869, 0.7696473598480225, 0.7824593782424927, 0.7814027070999146, 0.7897239327430725, 0.7967243194580078, 0.8024039268493652, 0.8078193068504333, 0.8141592741012573, 0.8203672170639038, 0.8269713521003723, 0.828820526599884, 0.8333113193511963, 0.8358209133148193, 0.8366134166717529, 0.8379341959953308, 0.844010055065155, 0.8418967127799988, 0.8481045961380005, 0.8471800088882446, 0.8494254350662231, 0.8507462739944458, 0.8594637513160706, 0.8647470474243164, 0.8652753829956055, 0.86553955078125, 0.8665962219238281, 0.8725399374961853, 0.8646149635314941, 0.8693699836730957, 0.8702945709228516, 0.8726720213890076, 0.8735966086387634, 0.8757099509239197, 0.8794082403182983, 0.8819178342819214, 0.8816536664962769, 0.8837670087814331, 0.8854840993881226, 0.8905032277107239, 0.887597382068634, 0.8889182209968567, 0.8936732411384583, 0.8926165699958801, 0.8916919827461243, 0.8994848728179932, 0.8953903317451477, 0.8949940800666809, 0.8961827754974365, 0.8990886211395264, 0.895918607711792, 0.9025228023529053, 0.9052965044975281, 0.9080702662467957, 0.9050323367118835, 0.9095231890678406, 0.909259021282196, 0.9091269373893738, 0.91124027967453, 0.9126931428909302, 0.9157310724258423], "val_loss": [2.0444626808166504, 1.5242112874984741, 1.0562021732330322, 0.8501611351966858, 0.7592852115631104, 0.7035163640975952, 0.6605809926986694, 0.6231351494789124, 0.599229097366333, 0.5772767066955566, 0.5544393062591553, 0.5332546234130859, 0.5291052460670471, 0.5142747163772583, 0.5042313933372498, 0.49015185236930847, 0.4847789704799652, 0.4706192910671234, 0.46215128898620605, 0.45795902609825134, 0.4485465884208679, 0.43982425332069397, 0.4365311563014984, 0.42895638942718506, 0.4307442605495453, 0.41937944293022156, 0.4207928478717804, 0.4112899601459503, 0.40585073828697205, 0.4064157009124756, 0.4123487174510956, 0.3988909125328064, 0.3956241011619568, 0.39069998264312744, 0.3932044208049774, 0.3862256705760956, 0.39237910509109497, 0.37893640995025635, 0.3864407539367676, 0.3734574019908905, 0.3777121603488922, 0.3702392280101776, 0.3772580623626709, 0.3717879354953766, 0.36268603801727295, 0.36415013670921326, 0.367388516664505, 0.36087971925735474, 0.35891789197921753, 0.3562818169593811, 0.35988423228263855, 0.36112552881240845, 0.35416704416275024, 0.35021141171455383, 0.3493618071079254, 0.35927823185920715, 0.34516820311546326, 0.34601476788520813, 0.3459532856941223, 0.3486572206020355, 0.3489737808704376, 0.3425716459751129, 0.34738054871559143, 0.3450206220149994, 0.33978092670440674, 0.3444826304912567, 0.3443978726863861, 0.3380981981754303, 0.3401530683040619, 0.3405070900917053], "val_accuracy": [0.4909999966621399, 0.6493333578109741, 0.6776666641235352, 0.6976666450500488, 0.7319999933242798, 0.7416666746139526, 0.7586666941642761, 0.7643333077430725, 0.781000018119812, 0.784333348274231, 0.7960000038146973, 0.8006666898727417, 0.7933333516120911, 0.815666675567627, 0.8209999799728394, 0.8273333311080933, 0.8186666369438171, 0.8323333263397217, 0.8366666436195374, 0.8363333344459534, 0.8373333215713501, 0.843666672706604, 0.8423333168029785, 0.8473333120346069, 0.8479999899864197, 0.8519999980926514, 0.8506666421890259, 0.8539999723434448, 0.8576666712760925, 0.8556666374206543, 0.8553333282470703, 0.862666666507721, 0.8643333315849304, 0.859666645526886, 0.8619999885559082, 0.8663333058357239, 0.8616666793823242, 0.8676666617393494, 0.8616666793823242, 0.8703333139419556, 0.8709999918937683, 0.871999979019165, 0.8653333187103271, 0.8690000176429749, 0.8740000128746033, 0.871999979019165, 0.8700000047683716, 0.8740000128746033, 0.8709999918937683, 0.874666690826416, 0.8769999742507935, 0.8723333477973938, 0.8766666650772095, 0.8733333349227905, 0.8793333172798157, 0.8769999742507935, 0.8756666779518127, 0.8776666522026062, 0.8766666650772095, 0.8823333382606506, 0.8813333511352539, 0.8813333511352539, 0.875, 0.8826666474342346, 0.887666642665863, 0.8786666393280029, 0.8826666474342346, 0.8846666812896729, 0.8826666474342346, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 2, 1, 3, 5], [3, 3, 0, 3], [16, 16], [1, 0], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 1, 3, 6, 8, 3, 0, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.13428571820259094, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.subtract(grad, grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), alpha))", "other_info": {"loss": [2.3496816158294678, 3.11108136177063, 2.3944270610809326, 2.3050739765167236, 2.3063254356384277, 2.307222366333008], "accuracy": [0.190859854221344, 0.15678246319293976, 0.09813763201236725, 0.1002509593963623, 0.09708096832036972, 0.1018359512090683], "val_loss": [2.3023879528045654, 2.8826916217803955, 2.303410530090332, 2.3043994903564453, 2.3082950115203857, 2.3282151222229004], "val_accuracy": [0.13600000739097595, 0.10100000351667404, 0.10100000351667404, 0.09866666793823242, 0.10166666656732559, 0.09866666793823242]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 1, 0, 1, 1, 17, 9, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [52, 90], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 0, 0, 1, 4, 1, 4, 2, 8, 6], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), sigma), tf.math.sqrt(tf.math.divide_no_nan(grad, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [9, 2, 3, 0, 3], [0, 1, 2, 2], [39, 49], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [42, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028032779693604, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3, 6, 3, 6, 2, 5, 1, 6, 6, 3, 4, 3], [0, 1, 0, 2, 0, 2, 2, 0, 2, 2, 1, 0, 3, 1, 1], [39, 39, 20, 69, 20], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 8], [0, 0, 0, 3], [16, 16, 45], [0, 0, 1, 0], [0, 4, 9], [0], [99, 30], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 8, 8, 2, 3, 0, 6, 8, 7, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 6, 1], [38, 99, 96, 99, 23, 1]], "fitness": -0.09285714477300644, "mapping_values": [1, 31, 16, 15, 5, 11, 7, 4, 3, 4, 3, 1, 2, 32, 19, 13, 6], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad), grad), alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(grad, alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(sigma, tf.math.negative(tf.math.divide_no_nan(alpha, beta))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.square(tf.math.sqrt(grad)))), alpha)", "other_info": {"loss": [2.3103935718536377, 2.309499740600586, 2.3091397285461426, 2.309576988220215, 2.309802532196045, 2.3100101947784424], "accuracy": [0.08809932321310043, 0.09272222965955734, 0.09457138925790787, 0.09576013684272766, 0.09694888442754745, 0.09285431355237961], "val_loss": [2.3086955547332764, 2.3086955547332764, 2.3086955547332764, 2.3086955547332764, 2.3086955547332764, 2.3086955547332764], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]