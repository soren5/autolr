[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2200844287872314, 1.8581352233886719, 1.3804317712783813, 1.0848592519760132, 0.9327386021614075, 0.8441022038459778, 0.7775691151618958, 0.736638605594635, 0.6933988928794861, 0.6663601994514465, 0.6457335948944092, 0.6266894340515137, 0.5951014161109924, 0.5803055167198181, 0.5616979598999023, 0.5424264073371887, 0.5393993854522705, 0.5188575983047485, 0.5118476152420044, 0.5011945962905884, 0.48570936918258667, 0.47798460721969604, 0.47517475485801697, 0.4516047239303589, 0.45416560769081116, 0.4484482407569885, 0.44357767701148987, 0.4378710091114044, 0.4192623198032379, 0.4091073274612427, 0.4125032126903534, 0.4005126655101776, 0.3932874798774719, 0.39487385749816895, 0.3817797303199768, 0.37809517979621887, 0.37290525436401367, 0.3688299059867859, 0.36710211634635925, 0.36069828271865845, 0.36191481351852417, 0.3497019112110138, 0.3412592113018036, 0.34016862511634827, 0.33503293991088867, 0.3339962363243103, 0.32010960578918457, 0.3216220736503601, 0.3190378248691559, 0.3090299963951111, 0.31441745162010193, 0.31031695008277893, 0.2931452989578247, 0.28711462020874023, 0.29994747042655945, 0.2860253155231476, 0.2853744328022003, 0.2802639603614807, 0.2747306823730469, 0.26966968178749084, 0.26538950204849243, 0.2649039626121521, 0.2577715814113617, 0.25537917017936707, 0.25030940771102905, 0.2520430386066437, 0.2503149211406708, 0.23985737562179565, 0.24005505442619324, 0.232278510928154, 0.23731380701065063, 0.23317265510559082], "accuracy": [0.2744683623313904, 0.48791441321372986, 0.5694096088409424, 0.6196011304855347, 0.6716417670249939, 0.6929071545600891, 0.7218332886695862, 0.7297582626342773, 0.7514199018478394, 0.7581561207771301, 0.7621186375617981, 0.7713643908500671, 0.7861577272415161, 0.7864218950271606, 0.7936864495277405, 0.7987055778503418, 0.8068947196006775, 0.8104609847068787, 0.8152159452438354, 0.819442629814148, 0.8267071843147278, 0.8272355198860168, 0.8393871188163757, 0.8380662798881531, 0.835160493850708, 0.8388587832450867, 0.8392550349235535, 0.8404437899589539, 0.847840428352356, 0.8537842035293579, 0.8519350290298462, 0.8543124794960022, 0.8607845902442932, 0.859199583530426, 0.8625016212463379, 0.8639545440673828, 0.8679170608520508, 0.8685774803161621, 0.8677849769592285, 0.8735966086387634, 0.8717474341392517, 0.8709549307823181, 0.8786157965660095, 0.8779553771018982, 0.8798044919967651, 0.8805969953536987, 0.8858803510665894, 0.8858803510665894, 0.8864086866378784, 0.8914278149604797, 0.886672854423523, 0.8885219693183899, 0.8943336606025696, 0.8972394466400146, 0.8905032277107239, 0.8985602855682373, 0.8994848728179932, 0.9001452922821045, 0.9009377956390381, 0.9045040011405945, 0.9041078090667725, 0.9019944667816162, 0.9062210917472839, 0.9083344340324402, 0.9080702662467957, 0.9071456789970398, 0.9096552729606628, 0.9113723635673523, 0.9141460657119751, 0.9170519113540649, 0.9137498140335083, 0.9174481630325317], "val_loss": [2.035088539123535, 1.5064080953598022, 1.041271448135376, 0.8354123830795288, 0.7493983507156372, 0.6985600590705872, 0.651703953742981, 0.6123287677764893, 0.5854600667953491, 0.5657645463943481, 0.5464580059051514, 0.5310730338096619, 0.5182220935821533, 0.5062921643257141, 0.4924900233745575, 0.4842967391014099, 0.47125235199928284, 0.46199411153793335, 0.4539792537689209, 0.44850245118141174, 0.4411320686340332, 0.4376715421676636, 0.4264422655105591, 0.4275846779346466, 0.4206366240978241, 0.4155179560184479, 0.41368281841278076, 0.4084283709526062, 0.40211164951324463, 0.3983665704727173, 0.3936941623687744, 0.39033016562461853, 0.39185529947280884, 0.38885900378227234, 0.38274621963500977, 0.37898290157318115, 0.37779077887535095, 0.3754555284976959, 0.3756057918071747, 0.37099331617355347, 0.37382954359054565, 0.37462475895881653, 0.36677151918411255, 0.36331287026405334, 0.3667471408843994, 0.3614831566810608, 0.36195996403694153, 0.3625280261039734, 0.35571613907814026, 0.3574867248535156, 0.3557067811489105, 0.3502931296825409, 0.35368457436561584, 0.3623862564563751, 0.34363818168640137, 0.35336315631866455, 0.3512395918369293, 0.35157811641693115, 0.34689298272132874, 0.3477279841899872, 0.34689298272132874, 0.3422006070613861, 0.34440770745277405, 0.3479231297969818, 0.358367383480072, 0.34656867384910583, 0.3383418619632721, 0.3466273248195648, 0.34557080268859863, 0.34873417019844055, 0.3412971794605255, 0.33896246552467346], "val_accuracy": [0.5533333420753479, 0.6596666574478149, 0.6800000071525574, 0.6946666836738586, 0.7279999852180481, 0.753000020980835, 0.7606666684150696, 0.7713333368301392, 0.7806666493415833, 0.7919999957084656, 0.7913333177566528, 0.8019999861717224, 0.8076666593551636, 0.8119999766349792, 0.815666675567627, 0.82833331823349, 0.8333333134651184, 0.8389999866485596, 0.8426666855812073, 0.8410000205039978, 0.8373333215713501, 0.8413333296775818, 0.8456666469573975, 0.8483333587646484, 0.8486666679382324, 0.8523333072662354, 0.8513333201408386, 0.8523333072662354, 0.8566666841506958, 0.8529999852180481, 0.8560000061988831, 0.8640000224113464, 0.8616666793823242, 0.862666666507721, 0.8619999885559082, 0.8659999966621399, 0.8619999885559082, 0.8659999966621399, 0.8666666746139526, 0.8690000176429749, 0.8633333444595337, 0.8663333058357239, 0.8690000176429749, 0.8703333139419556, 0.8686666488647461, 0.8706666827201843, 0.8696666955947876, 0.8703333139419556, 0.8690000176429749, 0.8706666827201843, 0.875, 0.8726666569709778, 0.8726666569709778, 0.8679999709129333, 0.8769999742507935, 0.8756666779518127, 0.8759999871253967, 0.8759999871253967, 0.878000020980835, 0.878333330154419, 0.875333309173584, 0.875333309173584, 0.874666690826416, 0.8803333044052124, 0.8740000128746033, 0.878000020980835, 0.8813333511352539, 0.8773333430290222, 0.8799999952316284, 0.8769999742507935, 0.8786666393280029, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 37], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 8], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [26, 99, 96, 99, 61, 73]], "fitness": -0.849142849445343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.308323860168457, 2.2948617935180664, 2.268975019454956, 2.235393524169922, 2.176945447921753, 2.06321120262146, 1.8463068008422852, 1.5293493270874023, 1.267124891281128, 1.110190987586975, 0.9986445903778076, 0.920519232749939, 0.8601373434066772, 0.8271782398223877, 0.7977654337882996, 0.7559086680412292, 0.7385583519935608, 0.7220121622085571, 0.7061927318572998, 0.697202205657959, 0.6746662259101868, 0.6653784513473511, 0.6644178032875061, 0.6435748934745789, 0.6416507959365845, 0.63072669506073, 0.6211526989936829, 0.6222286224365234, 0.6023129224777222, 0.6048263907432556, 0.5909516215324402, 0.5823103785514832, 0.581413209438324, 0.5692964196205139, 0.571959912776947, 0.5616185665130615, 0.562646210193634, 0.5582543611526489, 0.5434022545814514, 0.5512759685516357, 0.5376056432723999, 0.5416974425315857, 0.5258618593215942, 0.5286712050437927, 0.5200746655464172, 0.5134649872779846, 0.5053665637969971, 0.5044922232627869, 0.5060684084892273, 0.5140214562416077, 0.4996969699859619, 0.48732322454452515, 0.4868316650390625, 0.48165395855903625, 0.48196718096733093, 0.47065386176109314, 0.4796195924282074, 0.46702584624290466, 0.4600585997104645], "accuracy": [0.09351472556591034, 0.11993131786584854, 0.1916523575782776, 0.2694492042064667, 0.3485668897628784, 0.39928674697875977, 0.44168537855148315, 0.48910316824913025, 0.549068808555603, 0.5979394912719727, 0.6415268778800964, 0.6704530715942383, 0.6901333928108215, 0.6923788189888, 0.7082287669181824, 0.7191916704177856, 0.7248712182044983, 0.7326641082763672, 0.7367587089538574, 0.7408532500267029, 0.7512878179550171, 0.7497028112411499, 0.7549861073493958, 0.76106196641922, 0.7589486241340637, 0.7695152759552002, 0.7646281719207764, 0.7738739848136902, 0.7825914621353149, 0.7817989587783813, 0.7824593782424927, 0.7890635132789612, 0.7921014428138733, 0.7897239327430725, 0.791969358921051, 0.7959318161010742, 0.7928939461708069, 0.7935543656349182, 0.7948752045631409, 0.7988376617431641, 0.8033285140991211, 0.7993659973144531, 0.8059701323509216, 0.8016114234924316, 0.8105930685997009, 0.8137630224227905, 0.8149517774581909, 0.8115176558494568, 0.8146876096725464, 0.811649739742279, 0.8171972036361694, 0.8182538747787476, 0.8156121969223022, 0.8193105459213257, 0.8220842480659485, 0.8281601071357727, 0.8204993009567261, 0.8261788487434387, 0.8296129703521729], "val_loss": [2.3004531860351562, 2.27738618850708, 2.2450575828552246, 2.196316719055176, 2.1074535846710205, 1.9266406297683716, 1.5809860229492188, 1.170610785484314, 0.9382814168930054, 0.8381557464599609, 0.7790594100952148, 0.7347953915596008, 0.6961854696273804, 0.67354816198349, 0.6519830822944641, 0.6301819682121277, 0.6144395470619202, 0.6037963628768921, 0.59148770570755, 0.5838050842285156, 0.570989191532135, 0.5629096031188965, 0.556459903717041, 0.5548692345619202, 0.54941725730896, 0.5363564491271973, 0.5364439487457275, 0.5322110056877136, 0.5273094773292542, 0.5166722536087036, 0.5118013024330139, 0.5143311023712158, 0.5094887018203735, 0.5072306394577026, 0.49931737780570984, 0.5030232071876526, 0.4953996241092682, 0.48758038878440857, 0.48546215891838074, 0.4830310046672821, 0.48519933223724365, 0.47342658042907715, 0.47698673605918884, 0.4735032618045807, 0.4679255783557892, 0.4744458794593811, 0.46305444836616516, 0.46025845408439636, 0.459199458360672, 0.4563489556312561, 0.4546481966972351, 0.4508419632911682, 0.44719046354293823, 0.44278788566589355, 0.442423015832901, 0.44025784730911255, 0.43947649002075195, 0.43715086579322815, 0.43954232335090637], "val_accuracy": [0.0976666659116745, 0.19599999487400055, 0.4116666615009308, 0.45766666531562805, 0.48366665840148926, 0.543666660785675, 0.6259999871253967, 0.6600000262260437, 0.6883333325386047, 0.7103333473205566, 0.7286666631698608, 0.7440000176429749, 0.7516666650772095, 0.7576666474342346, 0.7663333415985107, 0.7726666927337646, 0.7710000276565552, 0.7883333563804626, 0.7799999713897705, 0.7923333048820496, 0.7906666398048401, 0.7886666655540466, 0.7919999957084656, 0.7973333597183228, 0.7993333339691162, 0.8133333325386047, 0.8026666641235352, 0.8063333630561829, 0.8136666417121887, 0.8096666932106018, 0.8143333196640015, 0.8166666626930237, 0.8173333406448364, 0.8106666803359985, 0.8226666450500488, 0.8159999847412109, 0.8183333277702332, 0.8266666531562805, 0.8289999961853027, 0.8270000219345093, 0.8240000009536743, 0.8333333134651184, 0.8320000171661377, 0.8349999785423279, 0.8373333215713501, 0.8303333520889282, 0.8336666822433472, 0.831333339214325, 0.8386666774749756, 0.8389999866485596, 0.8366666436195374, 0.8423333168029785, 0.8426666855812073, 0.8493333458900452, 0.8473333120346069, 0.8463333249092102, 0.8450000286102295, 0.8479999899864197, 0.8456666469573975]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 3, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 38], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 3, 3, 5, 8, 2, 3, 4, 3, 3, 6, 3, 0, 1, 2, 0, 0, 6, 3, 4, 6, 4, 1, 0], [3, 3, 0, 1, 2, 2, 0, 0, 5, 5, 3, 5, 4, 5, 0, 5, 5, 3, 3, 0], [30, 16, 52, 96, 91], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [61, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 46, 26, 20, 5, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.math.multiply(tf.math.square(grad), tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(alpha, tf.math.multiply(tf.math.divide_no_nan(beta, beta), tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(grad)))), tf.math.divide_no_nan(grad, grad)))), grad), tf.math.multiply(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad)), grad)), grad)), tf.math.subtract(tf.math.negative(grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 9, 5, 0, 3, 5], [0, 2, 0, 3], [33, 31], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 1, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 6, 4, 2, 1, 2, 2, 0, 1, 1, 0, 1, 1, 24, 12, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.subtract(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)))", "other_info": {"loss": [2.310870885848999, 2.3098559379577637, 2.3097665309906006, 2.3096067905426025, 2.310049057006836, 2.3114383220672607], "accuracy": [0.09576013684272766, 0.09760929644107819, 0.09021265059709549, 0.0952318087220192, 0.09470347315073013, 0.09219389408826828], "val_loss": [2.3094372749328613, 2.3094372749328613, 2.3094372749328613, 2.3094372749328613, 2.3094372749328613, 2.3094372749328613], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 1, 8, 1, 4, 1, 1, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 14]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 9, 5, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [2.3100976943969727, 2.3100240230560303, 2.3107004165649414, 2.3109538555145264, 2.3085403442382812, 2.3111331462860107], "accuracy": [0.08849557489156723, 0.09457138925790787, 0.0936468094587326, 0.09576013684272766, 0.09536388516426086, 0.09311848133802414], "val_loss": [2.308835983276367, 2.3088362216949463, 2.3088369369506836, 2.3088366985321045, 2.3088369369506836, 2.3088371753692627], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]