[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2177743911743164, 1.851360559463501, 1.380553960800171, 1.0770848989486694, 0.9254381656646729, 0.8129552006721497, 0.7664732933044434, 0.7065439224243164, 0.6762084364891052, 0.6410754323005676, 0.6283991932868958, 0.6018726229667664, 0.5726822018623352, 0.5599682927131653, 0.54392409324646, 0.5342778563499451, 0.5199724435806274, 0.5108001828193665, 0.4941275119781494, 0.48142173886299133, 0.4774632155895233, 0.46732211112976074, 0.45788174867630005, 0.44942307472229004, 0.4502899944782257, 0.4364166259765625, 0.428775429725647, 0.4217979907989502, 0.40432044863700867, 0.40216171741485596, 0.4018138647079468, 0.3936682343482971, 0.3926908075809479, 0.3835567533969879, 0.37510231137275696, 0.3745906949043274, 0.3616553544998169, 0.3672817647457123, 0.35544121265411377, 0.3526039123535156, 0.3502843379974365, 0.3420858383178711, 0.32717230916023254, 0.331190824508667, 0.32436156272888184, 0.32175755500793457, 0.31615179777145386, 0.3128873109817505, 0.3074486255645752, 0.3073679208755493, 0.2993999123573303, 0.29983609914779663, 0.2982269525527954, 0.2916049063205719, 0.28730106353759766, 0.2904174029827118, 0.2813683748245239, 0.273904412984848, 0.2698030471801758, 0.2715223729610443, 0.2661122977733612, 0.2661393880844116], "accuracy": [0.28780874609947205, 0.4994056224822998, 0.5633337497711182, 0.6289790272712708, 0.6734909415245056, 0.7119271159172058, 0.7230220437049866, 0.7491744756698608, 0.7541936039924622, 0.7675340175628662, 0.769911527633667, 0.7868181467056274, 0.7938185334205627, 0.7960638999938965, 0.8014793395996094, 0.8068947196006775, 0.8128384351730347, 0.8156121969223022, 0.824329674243927, 0.829216718673706, 0.8308017253875732, 0.8350284099578857, 0.8352925777435303, 0.8392550349235535, 0.8384625315666199, 0.8444063067436218, 0.8449346423149109, 0.8518029451370239, 0.8568220734596252, 0.8580108284950256, 0.8541803956031799, 0.8610487580299377, 0.8607845902442932, 0.8632941246032715, 0.8667283058166504, 0.8634262084960938, 0.8710870146751404, 0.8705587387084961, 0.874389111995697, 0.8754457831382751, 0.8765024542808533, 0.8791441321372986, 0.8838990926742554, 0.8816536664962769, 0.8817857503890991, 0.8825782537460327, 0.883238673210144, 0.8862766027450562, 0.8919561505317688, 0.8903711438179016, 0.8912957310676575, 0.8906353116035461, 0.8947299122810364, 0.8927486538887024, 0.8981640338897705, 0.8930128216743469, 0.89988112449646, 0.9021265506744385, 0.9014661312103271, 0.9001452922821045, 0.9045040011405945, 0.9055606722831726], "val_loss": [2.02823543548584, 1.4887081384658813, 1.017799973487854, 0.8123202323913574, 0.7277466058731079, 0.6711397171020508, 0.6317374110221863, 0.605421781539917, 0.5748639106750488, 0.5567504167556763, 0.5428308844566345, 0.5284294486045837, 0.512722909450531, 0.5032433271408081, 0.4914809465408325, 0.4823130965232849, 0.47678181529045105, 0.47072839736938477, 0.46136629581451416, 0.4580807387828827, 0.4547611474990845, 0.4443168640136719, 0.43824759125709534, 0.4412306249141693, 0.4346620738506317, 0.4272179901599884, 0.4244815409183502, 0.41909879446029663, 0.41661718487739563, 0.41116514801979065, 0.40735921263694763, 0.407880574464798, 0.4013238549232483, 0.3980868458747864, 0.3950728476047516, 0.3955952227115631, 0.3939734399318695, 0.3898852467536926, 0.3870788514614105, 0.3838847577571869, 0.3816162943840027, 0.3822999596595764, 0.3798561692237854, 0.38021036982536316, 0.3757014274597168, 0.3774119019508362, 0.37652719020843506, 0.3751189410686493, 0.37316685914993286, 0.36800408363342285, 0.3708926737308502, 0.36921045184135437, 0.3688695430755615, 0.3701285719871521, 0.36872148513793945, 0.3671943247318268, 0.3657871186733246, 0.36605343222618103, 0.3689265251159668, 0.3646482825279236, 0.36530250310897827, 0.3634798228740692], "val_accuracy": [0.5836666822433472, 0.6639999747276306, 0.6916666626930237, 0.7170000076293945, 0.7293333411216736, 0.7526666522026062, 0.765333354473114, 0.7689999938011169, 0.7829999923706055, 0.79666668176651, 0.7963333129882812, 0.8050000071525574, 0.8116666674613953, 0.8213333487510681, 0.824999988079071, 0.8243333101272583, 0.8303333520889282, 0.8356666564941406, 0.8336666822433472, 0.8389999866485596, 0.8360000252723694, 0.8456666469573975, 0.847000002861023, 0.8433333039283752, 0.8476666808128357, 0.8526666760444641, 0.8476666808128357, 0.8539999723434448, 0.8553333282470703, 0.8553333282470703, 0.8543333411216736, 0.8539999723434448, 0.859666645526886, 0.8576666712760925, 0.8613333106040955, 0.8629999756813049, 0.8576666712760925, 0.8646666407585144, 0.862666666507721, 0.8643333315849304, 0.8659999966621399, 0.8659999966621399, 0.8669999837875366, 0.8636666536331177, 0.8643333315849304, 0.8666666746139526, 0.8703333139419556, 0.8673333525657654, 0.8686666488647461, 0.8706666827201843, 0.8726666569709778, 0.8703333139419556, 0.8723333477973938, 0.8740000128746033, 0.874666690826416, 0.8733333349227905, 0.8766666650772095, 0.875333309173584, 0.8756666779518127, 0.8756666779518127, 0.875333309173584, 0.8763333559036255]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 9], [0, 1, 0, 2], [39, 39, 65], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 1], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 3, 6, 2, 1, 9, 1, 1, 2, 8, 3, 5, 5], [0, 0, 0, 3, 1, 0, 3, 1, 2, 0], [99, 99, 96, 60, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 3, 1, 0, 1, 1, 2, 1, 1, 0, 24, 14, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.multiply(alpha, tf.math.square(beta)))), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 3, 0, 0], [16, 16, 57], [0, 0, 1, 0, 1], [0, 3, 0], [0, 1], [99], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 4, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 3, 5, 3, 2, 1, 5, 2, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303666591644287, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 0, 2, 4], [16, 99, 96, 99, 68, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 17, 8, 9, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 9], [0, 1, 0, 1], [42, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 8, 0], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09685714542865753, "mapping_values": [1, 5, 4, 1, 2, 8, 5, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))))", "other_info": {"loss": [2.0181531804659876e+18, 2.027939105532566e+21, 1.2767203242596867e+23, 2.972000766345154e+24, 3.656781088079776e+25, 2.4734069604862865e+26, 1.0319164712935107e+27], "accuracy": [0.09840179979801178, 0.10038304328918457, 0.09628847241401672, 0.09919429570436478, 0.10051512718200684, 0.09945846349000931, 0.09708096832036972], "val_loss": [3.6459220636866183e+19, 1.1969920417104344e+22, 5.17256539688402e+23, 8.423795032676074e+24, 7.138787577095987e+25, 2.9339179359027975e+26, 1.3027255947680586e+27], "val_accuracy": [0.09866666793823242, 0.10466666519641876, 0.1003333330154419, 0.10333333164453506, 0.09799999743700027, 0.10266666859388351, 0.09566666930913925]}}]