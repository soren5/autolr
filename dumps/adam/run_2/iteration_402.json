[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222446918487549, 1.8702996969223022, 1.3892625570297241, 1.1019352674484253, 0.9471714496612549, 0.8513237833976746, 0.7864804267883301, 0.7400273680686951, 0.7010166645050049, 0.6785882711410522, 0.636063814163208, 0.6251792311668396, 0.6037989854812622, 0.5846489667892456, 0.5604235529899597, 0.5588970184326172, 0.5365040898323059, 0.5275004506111145, 0.5157314538955688, 0.5092368125915527, 0.5063108801841736, 0.4870559573173523, 0.47747802734375, 0.46831125020980835, 0.4579746425151825, 0.4547215402126312, 0.45205050706863403, 0.4382041096687317, 0.43131157755851746, 0.4203333556652069, 0.4154830574989319, 0.41293957829475403, 0.40904128551483154, 0.39919939637184143, 0.39010876417160034, 0.38612863421440125, 0.3886294662952423, 0.37572184205055237, 0.36954641342163086, 0.3656260073184967, 0.358597993850708, 0.35847440361976624, 0.3523184657096863, 0.34460312128067017, 0.34886571764945984, 0.34351253509521484, 0.32948723435401917, 0.32285961508750916, 0.3210727572441101, 0.3172191381454468, 0.31575843691825867, 0.31533128023147583, 0.3029184937477112, 0.29438498616218567], "accuracy": [0.2709021270275116, 0.47668737173080444, 0.5719191431999207, 0.6190727949142456, 0.6653017997741699, 0.6968696117401123, 0.7209087014198303, 0.7334566116333008, 0.7425703406333923, 0.7497028112411499, 0.7714964747428894, 0.767401933670044, 0.778761088848114, 0.7872143983840942, 0.7967243194580078, 0.7952714562416077, 0.8053097128868103, 0.8121780753135681, 0.816008448600769, 0.8141592741012573, 0.8161405324935913, 0.8261788487434387, 0.8310658931732178, 0.8319904804229736, 0.8391229510307312, 0.8387266993522644, 0.8364813327789307, 0.8422929644584656, 0.842028796672821, 0.8515387773513794, 0.850350022315979, 0.848368763923645, 0.8531237840652466, 0.8565579056739807, 0.8590674996376038, 0.8574824929237366, 0.8601241707801819, 0.8668603897094727, 0.8685774803161621, 0.8669924736022949, 0.8705587387084961, 0.8697662353515625, 0.8709549307823181, 0.8746532797813416, 0.8701624870300293, 0.8729361891746521, 0.8798044919967651, 0.8835028409957886, 0.8831065893173218, 0.8823140859603882, 0.8854840993881226, 0.8828424215316772, 0.8907673954963684, 0.8931449055671692], "val_loss": [2.039476156234741, 1.515548825263977, 1.0430338382720947, 0.8355135321617126, 0.7557201981544495, 0.6962262988090515, 0.6582933068275452, 0.6219735145568848, 0.5905351042747498, 0.5807161331176758, 0.5605207681655884, 0.5493740439414978, 0.5366832613945007, 0.5224040150642395, 0.5094195008277893, 0.5066521167755127, 0.4943535029888153, 0.4831518530845642, 0.4836714565753937, 0.4686894416809082, 0.46769049763679504, 0.4633631706237793, 0.4542343020439148, 0.4542904794216156, 0.45345959067344666, 0.4455626606941223, 0.4376479387283325, 0.43531253933906555, 0.43534791469573975, 0.42383551597595215, 0.42494356632232666, 0.4200068414211273, 0.4180543124675751, 0.4155704379081726, 0.4133826196193695, 0.41016820073127747, 0.4071813225746155, 0.4081779718399048, 0.4034077823162079, 0.40584617853164673, 0.4011671543121338, 0.3992699682712555, 0.39287230372428894, 0.39722684025764465, 0.396820068359375, 0.3905757963657379, 0.3863878548145294, 0.3897750675678253, 0.3871322572231293, 0.3809817433357239, 0.3800438344478607, 0.3800523281097412, 0.3824825584888458, 0.38188639283180237], "val_accuracy": [0.5339999794960022, 0.6543333530426025, 0.6793333292007446, 0.7046666741371155, 0.7263333201408386, 0.746999979019165, 0.7543333172798157, 0.7639999985694885, 0.7799999713897705, 0.7776666879653931, 0.7863333225250244, 0.7879999876022339, 0.7916666865348816, 0.8053333163261414, 0.8106666803359985, 0.8009999990463257, 0.8173333406448364, 0.8166666626930237, 0.8196666836738586, 0.824999988079071, 0.8253333568572998, 0.82833331823349, 0.8343333601951599, 0.8316666483879089, 0.8306666612625122, 0.8396666646003723, 0.8379999995231628, 0.8393333554267883, 0.8393333554267883, 0.8423333168029785, 0.8460000157356262, 0.8460000157356262, 0.8493333458900452, 0.8483333587646484, 0.8479999899864197, 0.8506666421890259, 0.8519999980926514, 0.8529999852180481, 0.8553333282470703, 0.8560000061988831, 0.8546666502952576, 0.8600000143051147, 0.8586666584014893, 0.8550000190734863, 0.8579999804496765, 0.859333336353302, 0.8636666536331177, 0.8616666793823242, 0.8646666407585144, 0.8629999756813049, 0.8633333444595337, 0.8633333444595337, 0.8586666584014893, 0.8643333315849304]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 1, 0, 2, 0], [39, 39, 93], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 2, 3, 0, 3, 4], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 8, 4, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [91, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8], [2, 0, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 24, 61, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 11, 7, 4, 1, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 2, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [35, 16], [0, 1, 0, 0, 1, 1], [4, 4, 0], [0, 5, 2], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 0, 3, 3, 3, 7, 5], [0, 4, 0, 3, 0, 0, 3, 4, 2, 0, 3, 2, 5, 0, 0], [16, 99, 34, 99, 61, 1, 0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 6, 3, 3, 1, 33, 18, 15, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.sqrt(grad), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), grad)), tf.math.multiply(tf.math.multiply(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, beta)))), tf.math.add(grad, tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309166193008423, 2.3114724159240723, 2.310227155685425, 2.311060905456543, 2.311586618423462, 2.3101882934570312], "accuracy": [0.09721305221319199, 0.0886276587843895, 0.0948355570435524, 0.08915598690509796, 0.08875974267721176, 0.09087307006120682], "val_loss": [2.3085286617279053, 2.3085286617279053, 2.3085286617279053, 2.3085286617279053, 2.3085286617279053, 2.3085286617279053], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [47, 16], [0, 1, 0, 1, 0, 1, 0, 1], [2, 7, 7, 5], [4, 1, 2, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 0, 4, 1, 4, 4, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 8, 4, 4, 0, 17, 9, 8, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(alpha)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.309629440307617, 2.30964732170105, 2.3115646839141846, 2.310081958770752, 2.31013560295105, 2.3096516132354736], "accuracy": [0.09866596013307571, 0.08572183549404144, 0.09311848133802414, 0.09219389408826828, 0.09259014576673508, 0.09457138925790787], "val_loss": [2.3083648681640625, 2.3083627223968506, 2.308361053466797, 2.3083598613739014, 2.3083584308624268, 2.3083574771881104], "val_accuracy": [0.09099999815225601, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09033333510160446, 0.09000000357627869]}}]