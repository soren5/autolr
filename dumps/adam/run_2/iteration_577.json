[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222130298614502, 1.8610944747924805, 1.3821349143981934, 1.0787761211395264, 0.9250562787055969, 0.8314447402954102, 0.7688514590263367, 0.718815267086029, 0.6905730962753296, 0.655038595199585, 0.6253070831298828, 0.6063364744186401, 0.5822111964225769, 0.5731979608535767, 0.5497228503227234, 0.5362428426742554, 0.5205055475234985, 0.5091003775596619, 0.4956774413585663, 0.48773106932640076, 0.47466468811035156, 0.46767517924308777, 0.45793190598487854, 0.44665324687957764, 0.4376254677772522, 0.4321577548980713, 0.4270128011703491, 0.420969158411026, 0.4140186011791229, 0.405929833650589, 0.39358949661254883, 0.3824782967567444, 0.3885357081890106, 0.37489214539527893, 0.3743361532688141, 0.3704967200756073, 0.358892560005188, 0.3552478849887848, 0.34519821405410767, 0.3456827402114868, 0.33652594685554504, 0.3329221308231354, 0.33593934774398804, 0.3298565447330475, 0.32434022426605225], "accuracy": [0.27460044622421265, 0.4888390004634857, 0.5647866725921631, 0.6230352520942688, 0.6724342703819275, 0.7040021419525146, 0.724739134311676, 0.7386078238487244, 0.7489103078842163, 0.763439416885376, 0.7741381525993347, 0.7893276810646057, 0.7948752045631409, 0.7947431206703186, 0.8062343001365662, 0.809140145778656, 0.8144234418869019, 0.8177255392074585, 0.8238013386726379, 0.8239334225654602, 0.8277638554573059, 0.8334434032440186, 0.834632158279419, 0.8424250483512878, 0.8459912538528442, 0.8455950617790222, 0.8540483713150024, 0.8482366800308228, 0.8498216867446899, 0.8570862412452698, 0.8622375130653381, 0.8642187118530273, 0.8625016212463379, 0.863029956817627, 0.8656716346740723, 0.8677849769592285, 0.8717474341392517, 0.8775591254234314, 0.8771628737449646, 0.8733324408531189, 0.8757099509239197, 0.8812574148178101, 0.8804649114608765, 0.8815215826034546, 0.885219931602478], "val_loss": [2.0366733074188232, 1.5123004913330078, 1.042277455329895, 0.845037579536438, 0.7538754940032959, 0.7009889483451843, 0.6589473485946655, 0.6312711238861084, 0.5995713472366333, 0.5765041708946228, 0.5553014874458313, 0.54160475730896, 0.5262824892997742, 0.5135362148284912, 0.5042317509651184, 0.49496906995773315, 0.48330947756767273, 0.4719342887401581, 0.4642608165740967, 0.4603267014026642, 0.44784611463546753, 0.44628873467445374, 0.44506046175956726, 0.4316323697566986, 0.4282008409500122, 0.42311426997184753, 0.4239373803138733, 0.4153663218021393, 0.4107709527015686, 0.40078914165496826, 0.39918339252471924, 0.3938474953174591, 0.39490169286727905, 0.3912302553653717, 0.3881252408027649, 0.3873707950115204, 0.3835470378398895, 0.3849343955516815, 0.37549644708633423, 0.37705835700035095, 0.3743097186088562, 0.38054317235946655, 0.3713776469230652, 0.3694416880607605, 0.3725717067718506], "val_accuracy": [0.5170000195503235, 0.6443333625793457, 0.6786666512489319, 0.7006666660308838, 0.7273333072662354, 0.7490000128746033, 0.7596666812896729, 0.7710000276565552, 0.7866666913032532, 0.7889999747276306, 0.7979999780654907, 0.8016666769981384, 0.8130000233650208, 0.8173333406448364, 0.8220000267028809, 0.8183333277702332, 0.8316666483879089, 0.8336666822433472, 0.840666651725769, 0.8356666564941406, 0.8410000205039978, 0.8433333039283752, 0.8426666855812073, 0.8446666598320007, 0.8519999980926514, 0.8550000190734863, 0.8463333249092102, 0.8573333621025085, 0.8519999980926514, 0.859666645526886, 0.8573333621025085, 0.8629999756813049, 0.8583333492279053, 0.859666645526886, 0.862333357334137, 0.8640000224113464, 0.8633333444595337, 0.8643333315849304, 0.8619999885559082, 0.8683333396911621, 0.8650000095367432, 0.859666645526886, 0.8663333058357239, 0.8676666617393494, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [3, 2, 3, 3, 3, 5, 0], [0, 2, 0, 1, 5, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1, 8, 7, 0], [3, 0, 0, 3, 1, 4, 3, 1, 2, 0, 7, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8097142577171326, "mapping_values": [1, 9, 5, 4, 2, 13, 7, 6, 2, 2, 1, 1, 1, 26, 14, 12, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(alpha, tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.subtract(tf.math.sqrt(beta), tf.math.add(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3086910247802734, 2.3058979511260986, 2.295671224594116, 2.2784624099731445, 2.256251096725464, 2.225598096847534, 2.1729519367218018, 2.079926013946533, 1.8987693786621094, 1.5979350805282593, 1.3202168941497803, 1.1437867879867554, 1.0277409553527832, 0.9211767911911011, 0.8649340271949768, 0.8260788917541504, 0.7892997860908508, 0.7620311379432678, 0.7300519943237305, 0.7093119621276855, 0.7018152475357056, 0.6898097395896912, 0.6751700043678284, 0.662749707698822, 0.6552363038063049, 0.6279408931732178, 0.6224992871284485, 0.6136385202407837, 0.6080365180969238, 0.5953027606010437, 0.5857876539230347, 0.5778095126152039, 0.5720015168190002, 0.5707026720046997, 0.5656999349594116, 0.5558168888092041, 0.5497120022773743, 0.5361349582672119, 0.5355047583580017, 0.5247458219528198, 0.5127001404762268, 0.5113964676856995, 0.5098296403884888, 0.5003390908241272, 0.49765342473983765], "accuracy": [0.09893012791872025, 0.09708096832036972, 0.1224408894777298, 0.16523577272891998, 0.23206974565982819, 0.2907145619392395, 0.35345396399497986, 0.38621053099632263, 0.43059042096138, 0.48632940649986267, 0.5410117506980896, 0.5875049233436584, 0.6267336010932922, 0.6716417670249939, 0.6894729733467102, 0.6959450244903564, 0.7119271159172058, 0.7176066637039185, 0.7357020378112793, 0.7416457533836365, 0.7450799345970154, 0.7461365461349487, 0.7531369924545288, 0.7578919529914856, 0.7629110813140869, 0.7711002230644226, 0.7753269076347351, 0.7790252566337585, 0.7737419009208679, 0.7798177003860474, 0.7893276810646057, 0.7847048044204712, 0.791969358921051, 0.7938185334205627, 0.7948752045631409, 0.7957997918128967, 0.8014793395996094, 0.809140145778656, 0.8030643463134766, 0.809140145778656, 0.8182538747787476, 0.8142913579940796, 0.8189142942428589, 0.8197067975997925, 0.8201030492782593], "val_loss": [2.3068928718566895, 2.2984683513641357, 2.2831766605377197, 2.2623987197875977, 2.2338359355926514, 2.189361572265625, 2.110388994216919, 1.9573853015899658, 1.6664263010025024, 1.2620759010314941, 0.9798761606216431, 0.8521859645843506, 0.7937027812004089, 0.7336993217468262, 0.6912656426429749, 0.666523277759552, 0.6396217942237854, 0.6212383508682251, 0.5996991395950317, 0.5832118988037109, 0.5825890898704529, 0.5737718939781189, 0.5645044445991516, 0.55035400390625, 0.5395512580871582, 0.5305470824241638, 0.5309051275253296, 0.5199602842330933, 0.5146176815032959, 0.5095980763435364, 0.5026481747627258, 0.5020571351051331, 0.49439969658851624, 0.48462948203086853, 0.4804404377937317, 0.4832664728164673, 0.47844916582107544, 0.47125089168548584, 0.4643983244895935, 0.45963579416275024, 0.4585159122943878, 0.459435373544693, 0.4509506821632385, 0.4563062787055969, 0.4450691044330597], "val_accuracy": [0.08833333104848862, 0.10499999672174454, 0.16733333468437195, 0.31566667556762695, 0.4336666762828827, 0.4516666531562805, 0.48100000619888306, 0.5416666865348816, 0.606333315372467, 0.6466666460037231, 0.6800000071525574, 0.699999988079071, 0.7149999737739563, 0.734333336353302, 0.7436666488647461, 0.7473333477973938, 0.7583333253860474, 0.762666642665863, 0.7770000100135803, 0.7829999923706055, 0.7786666750907898, 0.7793333530426025, 0.7863333225250244, 0.796999990940094, 0.7973333597183228, 0.8083333373069763, 0.8003333210945129, 0.8046666383743286, 0.8056666851043701, 0.8116666674613953, 0.8100000023841858, 0.8166666626930237, 0.812333345413208, 0.8159999847412109, 0.8220000267028809, 0.8149999976158142, 0.8163333535194397, 0.8180000185966492, 0.8246666789054871, 0.8320000171661377, 0.824999988079071, 0.8256666660308838, 0.8296666741371155, 0.8296666741371155, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [77, 13], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 4, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [96, 12, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 1, 0, 1, 1, 16, 8, 8, 5], "tree_depth": 16}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 97], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5], [3, 2, 3, 3], [79, 68], [0, 1, 1], [3], [0, 3], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 97, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 0, 3, 1, 2, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [7.158520698547363, 50.42984390258789, 157.3726043701172, 338.1650695800781, 610.703857421875, 974.732421875], "accuracy": [0.10091137140989304, 0.09774138033390045, 0.09470347315073013, 0.09800554811954498, 0.10196803510189056, 0.09734513610601425], "val_loss": [18.61157989501953, 78.01202392578125, 191.54324340820312, 369.27691650390625, 613.739013671875, 922.27197265625], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 8, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 0, 2, 1], [16, 99, 96, 52, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 5, 2, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303701639175415, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]