[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223320722579956, 1.867510437965393, 1.4004132747650146, 1.0883039236068726, 0.9296683073043823, 0.8317339420318604, 0.7718687653541565, 0.7231501936912537, 0.698974072933197, 0.6603662371635437, 0.6424663662910461, 0.6149952411651611, 0.5899646878242493, 0.579494833946228, 0.5610883831977844, 0.5624175071716309, 0.5336374044418335, 0.5211193561553955, 0.5133867859840393, 0.5086396932601929, 0.49021559953689575, 0.4841529130935669, 0.47329995036125183, 0.4606153666973114, 0.4552682936191559, 0.43880489468574524, 0.4403565227985382, 0.4372464716434479, 0.4264386296272278, 0.4158604145050049, 0.4065747559070587, 0.40867722034454346, 0.3975812792778015, 0.39525675773620605, 0.39021381735801697, 0.37691619992256165, 0.38157379627227783, 0.37632253766059875, 0.3666147291660309, 0.36038288474082947, 0.36216801404953003, 0.3506527245044708, 0.3373570442199707, 0.3347913324832916, 0.33065688610076904, 0.3311978578567505, 0.3240154981613159, 0.3198550045490265, 0.32012951374053955, 0.32009008526802063, 0.31120917201042175, 0.31054505705833435, 0.3028762638568878, 0.29859259724617004, 0.2910563349723816, 0.2890344262123108, 0.27607935667037964, 0.2789006531238556, 0.2766133248806, 0.27108392119407654, 0.2622303366661072, 0.26608332991600037, 0.25735047459602356, 0.2587524354457855], "accuracy": [0.2723550498485565, 0.4822348356246948, 0.5595033764839172, 0.6210539937019348, 0.6666226387023926, 0.7012283802032471, 0.720380425453186, 0.7428345084190369, 0.7400607466697693, 0.7618544697761536, 0.761590301990509, 0.7758552432060242, 0.7816668748855591, 0.7860256433486938, 0.7951393723487854, 0.7898560166358948, 0.8009510040283203, 0.8070268034934998, 0.8078193068504333, 0.809140145778656, 0.8211596608161926, 0.822348415851593, 0.8267071843147278, 0.83119797706604, 0.8356888294219971, 0.8378021121025085, 0.8408400416374207, 0.8413683772087097, 0.8450667262077332, 0.8481045961380005, 0.8487650156021118, 0.8514066934585571, 0.8532558679580688, 0.8543124794960022, 0.8573504090309143, 0.8597279191017151, 0.8595958352088928, 0.8654074668884277, 0.8642187118530273, 0.8660678863525391, 0.8684453964233398, 0.8749174475669861, 0.878879964351654, 0.8780874609947205, 0.8784837126731873, 0.8805969953536987, 0.8772949576377869, 0.8813894987106323, 0.8828424215316772, 0.8825782537460327, 0.884691596031189, 0.8841632604598999, 0.886672854423523, 0.8864086866378784, 0.8985602855682373, 0.8902390599250793, 0.8997490406036377, 0.8972394466400146, 0.8992207050323486, 0.9026548862457275, 0.9015982151031494, 0.9050323367118835, 0.9089948534965515, 0.904768168926239], "val_loss": [2.034356117248535, 1.5075602531433105, 1.032678246498108, 0.8243816494941711, 0.7355697154998779, 0.6879736185073853, 0.6437566876411438, 0.6112404465675354, 0.5956256985664368, 0.5756767392158508, 0.5537896156311035, 0.5345369577407837, 0.5241775512695312, 0.5155456066131592, 0.5108734369277954, 0.4925018846988678, 0.48005175590515137, 0.4749472141265869, 0.4695904850959778, 0.4635699987411499, 0.4552191495895386, 0.44578495621681213, 0.4412996470928192, 0.4355490803718567, 0.42947736382484436, 0.4253767430782318, 0.4214099943637848, 0.4181731343269348, 0.409636527299881, 0.4073025584220886, 0.40552783012390137, 0.4056914150714874, 0.40025240182876587, 0.3934178352355957, 0.39214104413986206, 0.3940146565437317, 0.38360169529914856, 0.38367947936058044, 0.38018089532852173, 0.38082095980644226, 0.372645765542984, 0.3723173141479492, 0.37841731309890747, 0.36922362446784973, 0.36832737922668457, 0.36394819617271423, 0.3686472177505493, 0.3645493984222412, 0.36180201172828674, 0.3639744520187378, 0.3632509708404541, 0.358916699886322, 0.35902106761932373, 0.35440975427627563, 0.354169100522995, 0.35273855924606323, 0.35315731167793274, 0.3512657880783081, 0.34618157148361206, 0.3488292992115021, 0.3510299623012543, 0.3442074656486511, 0.3475029766559601, 0.34778809547424316], "val_accuracy": [0.5106666684150696, 0.6660000085830688, 0.6899999976158142, 0.7170000076293945, 0.7310000061988831, 0.7433333396911621, 0.762333333492279, 0.7720000147819519, 0.7710000276565552, 0.793666660785675, 0.7893333435058594, 0.8106666803359985, 0.8019999861717224, 0.812333345413208, 0.8223333358764648, 0.8199999928474426, 0.8333333134651184, 0.8309999704360962, 0.8353333473205566, 0.8366666436195374, 0.8399999737739563, 0.8420000076293945, 0.8429999947547913, 0.8493333458900452, 0.8486666679382324, 0.8510000109672546, 0.8546666502952576, 0.8483333587646484, 0.8576666712760925, 0.8576666712760925, 0.8550000190734863, 0.8613333106040955, 0.8616666793823242, 0.8653333187103271, 0.862666666507721, 0.862333357334137, 0.8666666746139526, 0.8676666617393494, 0.8690000176429749, 0.8663333058357239, 0.874666690826416, 0.8706666827201843, 0.875333309173584, 0.8726666569709778, 0.8766666650772095, 0.875, 0.8773333430290222, 0.8769999742507935, 0.8773333430290222, 0.878333330154419, 0.874666690826416, 0.8766666650772095, 0.8813333511352539, 0.8803333044052124, 0.8816666603088379, 0.8786666393280029, 0.8793333172798157, 0.8793333172798157, 0.8836666941642761, 0.8833333253860474, 0.8769999742507935, 0.8820000290870667, 0.8799999952316284, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 41], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 9, 3, 5], [0, 2, 0, 3], [16, 52], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09285714477300644, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, beta))", "other_info": {"loss": [2.3099398612976074, 2.309051036834717, 2.3086681365966797, 2.309725522994995, 2.309622287750244, 2.309635877609253], "accuracy": [0.09325055778026581, 0.08849557489156723, 0.09192973375320435, 0.0882314071059227, 0.08479725569486618, 0.0870426595211029], "val_loss": [2.3081183433532715, 2.308012008666992, 2.308006763458252, 2.308006763458252, 2.308006763458252, 2.308006763458252], "val_accuracy": [0.09166666865348816, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}, "mapping_values": [1, 2, 1, 1, 1, 6, 4, 2, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 2, 3, 2, 3, 5, 5, 5, 2, 5, 9], [0, 3, 0, 3, 2], [16, 16, 36], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 6, 4, 2, 1, 16, 11, 5, 3, 1, 0, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(tf.math.square(tf.math.add(tf.math.square(beta), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), alpha)", "other_info": {"loss": [2.309732675552368, 2.3091442584991455, 2.310006856918335, 2.3093996047973633, 2.309558868408203, 2.3089311122894287], "accuracy": [0.09232597798109055, 0.0944393053650856, 0.0956280529499054, 0.09245806187391281, 0.08981640636920929, 0.09457138925790787], "val_loss": [2.3094482421875, 2.3094482421875, 2.3094482421875, 2.3094482421875, 2.3094482421875, 2.3094482421875], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 16, 8, 8, 6], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3101043701171875, 2.3105709552764893, 2.3100807666778564, 2.3109817504882812, 2.311289072036743, 2.3091163635253906], "accuracy": [0.08796724677085876, 0.09153348207473755, 0.09166556596755981, 0.08426892012357712, 0.08558975160121918, 0.09008057415485382], "val_loss": [2.309011459350586, 2.309011459350586, 2.309011459350586, 2.309011459350586, 2.309011459350586, 2.309011459350586], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 6, 7, 4, 6, 6, 6, 0, 1, 4, 5, 8, 0, 9, 0], [0, 2, 0, 0, 5, 1, 5, 1, 5, 0, 2], [16, 16, 50, 74, 2], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 9, 2, 8], [0, 0, 0, 2, 4, 0, 3, 1, 2, 0], [16, 99, 29, 99, 61, 1]], "fitness": -0.08028571307659149, "mapping_values": [1, 1, 0, 1, 1, 31, 20, 11, 5, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.subtract(grad, alpha)))), tf.math.pow(tf.math.square(grad), tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, grad))", "other_info": {"loss": [6.367993116078637e+19, 7.565619883861554e+19, 7.3084397160782365e+19, 7.54152914429233e+19, 7.430598096752057e+19, 7.328511520745613e+19], "accuracy": [0.09457138925790787, 0.0948355570435524, 0.09179764986038208, 0.09853387624025345, 0.08875974267721176, 0.09826971590518951], "val_loss": [5.212976821918551e+19, 5.212976821918551e+19, 5.212976821918551e+19, 5.212976821918551e+19, 5.212976821918551e+19, 5.212976821918551e+19], "val_accuracy": [0.07666666805744171, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171]}}]