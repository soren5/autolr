[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2246625423431396, 1.8712732791900635, 1.393992304801941, 1.0987162590026855, 0.9455631375312805, 0.8477082252502441, 0.7711332440376282, 0.729585587978363, 0.6933409571647644, 0.6584147810935974, 0.6308550834655762, 0.6167242527008057, 0.5947204232215881, 0.5862458348274231, 0.5630797743797302, 0.5457620620727539, 0.5389913320541382, 0.5243908166885376, 0.5092939138412476, 0.4879385232925415, 0.48606622219085693, 0.47201007604599, 0.4641602039337158, 0.44983574748039246, 0.44417938590049744, 0.43563419580459595, 0.4276655316352844, 0.42416611313819885, 0.4200548529624939, 0.4134634733200073, 0.4077833592891693, 0.3981350362300873, 0.3911788761615753, 0.38677772879600525, 0.3834385275840759, 0.3692835867404938, 0.3725127577781677, 0.36460211873054504, 0.36141541600227356, 0.3487304151058197, 0.34555378556251526, 0.3419593572616577, 0.34426552057266235, 0.33545437455177307, 0.3240243196487427, 0.3237042725086212, 0.32087603211402893, 0.3195473253726959, 0.3109474182128906, 0.3014383316040039, 0.304904043674469, 0.29523351788520813, 0.29358118772506714, 0.2926332652568817, 0.2899961471557617, 0.2807293236255646, 0.27805769443511963, 0.2732122838497162, 0.27099764347076416, 0.26905521750450134, 0.26448386907577515, 0.26343610882759094, 0.2558933198451996, 0.2503199875354767, 0.24975256621837616, 0.24196475744247437, 0.24656634032726288, 0.2407635748386383, 0.2353612631559372, 0.23513992130756378, 0.2247353345155716, 0.2191193550825119, 0.22021815180778503], "accuracy": [0.2631092369556427, 0.4873860776424408, 0.564258337020874, 0.6149781942367554, 0.658961832523346, 0.6973979473114014, 0.7170783281326294, 0.7329282760620117, 0.7429665923118591, 0.7611940503120422, 0.7691190242767334, 0.7725531458854675, 0.7804781198501587, 0.7874785661697388, 0.7950072884559631, 0.8038568496704102, 0.8058380484580994, 0.8125742673873901, 0.8185180425643921, 0.8251221776008606, 0.8264430165290833, 0.8327829837799072, 0.8300092220306396, 0.8416325449943542, 0.8407079577445984, 0.8466516733169556, 0.8469158411026001, 0.8494254350662231, 0.8502179384231567, 0.8507462739944458, 0.850350022315979, 0.8622375130653381, 0.8582749962806702, 0.8590674996376038, 0.8626337051391602, 0.8688416481018066, 0.8640866279602051, 0.869502067565918, 0.8692378997802734, 0.8733324408531189, 0.8741249442100525, 0.8766345381736755, 0.8774270415306091, 0.8775591254234314, 0.884691596031189, 0.8813894987106323, 0.8845595121383667, 0.8849557638168335, 0.8881257176399231, 0.891559898853302, 0.8916919827461243, 0.8944657444953918, 0.8948619961738586, 0.8952582478523254, 0.8943336606025696, 0.900409460067749, 0.8982961177825928, 0.9014661312103271, 0.902390718460083, 0.8990886211395264, 0.90423983335495, 0.9051644206047058, 0.9078060984611511, 0.9100515246391296, 0.910711944103241, 0.9158631563186646, 0.9115044474601746, 0.9140139818191528, 0.9142781496047974, 0.9162594079971313, 0.9247127175331116, 0.9181085824966431, 0.9185048341751099], "val_loss": [2.0405309200286865, 1.517308235168457, 1.0447907447814941, 0.8388614058494568, 0.7511056065559387, 0.6923040151596069, 0.6503505706787109, 0.6097456812858582, 0.5867689847946167, 0.563831627368927, 0.5462606549263, 0.53193199634552, 0.5158656239509583, 0.5056862235069275, 0.49758797883987427, 0.48178213834762573, 0.47927629947662354, 0.467616468667984, 0.4587375819683075, 0.45077723264694214, 0.4416351020336151, 0.4334389567375183, 0.43094974756240845, 0.42154431343078613, 0.4170686900615692, 0.4158341884613037, 0.4098776578903198, 0.4075218141078949, 0.40695199370384216, 0.4004274010658264, 0.39806047081947327, 0.3892088532447815, 0.390377938747406, 0.38570940494537354, 0.3808617889881134, 0.3756897449493408, 0.3760107457637787, 0.37873008847236633, 0.3715119957923889, 0.37254008650779724, 0.374378502368927, 0.36798354983329773, 0.36739763617515564, 0.36111119389533997, 0.35910138487815857, 0.35858097672462463, 0.36147892475128174, 0.3572269678115845, 0.35932886600494385, 0.3555166721343994, 0.3533191680908203, 0.35259076952934265, 0.3507222533226013, 0.3469473421573639, 0.3483501672744751, 0.3491627275943756, 0.34853625297546387, 0.3496497869491577, 0.3470497727394104, 0.3430614769458771, 0.3455483317375183, 0.3421626091003418, 0.34103378653526306, 0.34172773361206055, 0.3419311046600342, 0.34073030948638916, 0.3369404971599579, 0.33752405643463135, 0.3371879756450653, 0.3391272723674774, 0.33480122685432434, 0.335968941450119, 0.3363422751426697], "val_accuracy": [0.543666660785675, 0.6573333144187927, 0.6809999942779541, 0.70333331823349, 0.7329999804496765, 0.7476666569709778, 0.7523333430290222, 0.777999997138977, 0.7850000262260437, 0.7950000166893005, 0.793666660785675, 0.8053333163261414, 0.8133333325386047, 0.8159999847412109, 0.815666675567627, 0.8236666917800903, 0.8303333520889282, 0.8289999961853027, 0.8309999704360962, 0.8326666951179504, 0.8379999995231628, 0.8423333168029785, 0.8446666598320007, 0.8463333249092102, 0.8473333120346069, 0.8486666679382324, 0.8510000109672546, 0.8536666631698608, 0.8536666631698608, 0.8519999980926514, 0.8560000061988831, 0.859333336353302, 0.8579999804496765, 0.859000027179718, 0.862666666507721, 0.8629999756813049, 0.8653333187103271, 0.8633333444595337, 0.8646666407585144, 0.8676666617393494, 0.8636666536331177, 0.8636666536331177, 0.8669999837875366, 0.8686666488647461, 0.8666666746139526, 0.8669999837875366, 0.8723333477973938, 0.8703333139419556, 0.871666669845581, 0.8703333139419556, 0.8700000047683716, 0.8733333349227905, 0.8723333477973938, 0.871666669845581, 0.8756666779518127, 0.875, 0.8793333172798157, 0.878333330154419, 0.8763333559036255, 0.8759999871253967, 0.875333309173584, 0.8796666860580444, 0.8803333044052124, 0.8763333559036255, 0.8763333559036255, 0.8773333430290222, 0.8786666393280029, 0.8820000290870667, 0.8809999823570251, 0.8816666603088379, 0.8813333511352539, 0.8820000290870667, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1], [0, 1, 0, 1, 3], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.7765714526176453, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 1, 2, 1, 1, 0, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.307309627532959, 2.29398512840271, 2.272531270980835, 2.2397193908691406, 2.1914260387420654, 2.1181068420410156, 1.9830962419509888, 1.761366367340088, 1.498496174812317, 1.336908221244812, 1.3577687740325928, 1.3239166736602783, 1.1919498443603516, 1.0387365818023682, 0.9124257564544678, 0.8874529600143433, 0.8966627717018127, 0.8707711696624756, 0.8336805105209351, 0.8157902359962463, 0.8063378930091858, 0.7887597680091858, 0.7809827327728271, 0.7639328837394714, 0.7544897794723511, 0.7437118887901306, 0.7244310975074768, 0.6951957941055298, 0.7048282623291016, 0.6936243772506714, 0.6786158084869385, 0.6735300421714783], "accuracy": [0.09259014576673508, 0.12534672021865845, 0.18333113193511963, 0.27024170756340027, 0.34962356090545654, 0.3809272348880768, 0.40787214040756226, 0.4451195299625397, 0.4850085973739624, 0.5215955376625061, 0.5431250929832458, 0.5774666666984558, 0.6214502453804016, 0.6396777033805847, 0.6565843224525452, 0.6723021864891052, 0.6769251227378845, 0.6752080321311951, 0.6866992712020874, 0.7025492191314697, 0.7037379741668701, 0.7024171352386475, 0.7053229212760925, 0.7197200059890747, 0.7111346125602722, 0.7049266695976257, 0.7078325152397156, 0.7281733155250549, 0.7243428826332092, 0.7342491149902344, 0.7386078238487244, 0.7353057861328125], "val_loss": [2.299365520477295, 2.278928279876709, 2.249725103378296, 2.2095160484313965, 2.1468257904052734, 2.035858392715454, 1.834923505783081, 1.5178110599517822, 1.1756395101547241, 0.9828431606292725, 0.9256933331489563, 0.8905512690544128, 0.8292994499206543, 0.7585836052894592, 0.746041476726532, 0.7832856178283691, 0.7645553350448608, 0.7050748467445374, 0.6822694540023804, 0.6708112359046936, 0.6649318933486938, 0.6631766557693481, 0.6641273498535156, 0.654572606086731, 0.6535378694534302, 0.641221284866333, 0.6269595623016357, 0.6168463826179504, 0.6059547662734985, 0.5985103249549866, 0.594479501247406, 0.5873863697052002], "val_accuracy": [0.10833333432674408, 0.1889999955892563, 0.3919999897480011, 0.4636666774749756, 0.46166667342185974, 0.4633333384990692, 0.49133333563804626, 0.5776666402816772, 0.6353333592414856, 0.659333348274231, 0.6683333516120911, 0.6896666884422302, 0.7023333311080933, 0.7083333134651184, 0.7243333458900452, 0.7223333120346069, 0.7226666808128357, 0.7303333282470703, 0.7360000014305115, 0.7400000095367432, 0.7353333234786987, 0.7386666536331177, 0.7423333525657654, 0.7413333058357239, 0.734333336353302, 0.7513333559036255, 0.7696666717529297, 0.7696666717529297, 0.7630000114440918, 0.7636666893959045, 0.7613333463668823, 0.7689999938011169]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [87], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 9, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 4], [16, 29, 96, 99, 61, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 7, 4, 3, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [4], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 6, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 3, 1, 2, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 4], [0, 1, 0, 2], [25, 39], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 2, 3, 0, 3, 5], [0, 2, 3, 3, 5], [16, 96], [1, 1], [6], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 39, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}, "mapping_values": [1, 9, 5, 4, 2, 10, 5, 5, 1, 1, 0, 1, 1, 11, 6, 5, 3], "tree_depth": 14}]