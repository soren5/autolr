[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224249839782715, 1.8728418350219727, 1.3976633548736572, 1.102841854095459, 0.9372956156730652, 0.8498427867889404, 0.7706621885299683, 0.7337896823883057, 0.6845276951789856, 0.6680717468261719, 0.6327831745147705, 0.6251086592674255, 0.5981276631355286, 0.5770949721336365, 0.5613462328910828, 0.5520257949829102, 0.5342475175857544, 0.5244082808494568, 0.5122810006141663, 0.4966815412044525, 0.4929375946521759, 0.48361191153526306, 0.4685242772102356, 0.4627726674079895, 0.4576895236968994, 0.4434890151023865, 0.44263550639152527, 0.43079331517219543, 0.42258793115615845, 0.416462779045105, 0.40803056955337524, 0.4044308662414551, 0.3914836347103119, 0.3937472701072693, 0.3879956901073456, 0.37641456723213196, 0.3759486973285675, 0.36782488226890564, 0.36043113470077515, 0.3618321120738983, 0.3564644753932953, 0.34895434975624084, 0.34854212403297424, 0.33959922194480896, 0.33475619554519653, 0.3273288607597351, 0.31980764865875244, 0.32892045378685, 0.3147276043891907], "accuracy": [0.28001585602760315, 0.4934619069099426, 0.5591071248054504, 0.6194690465927124, 0.6719059348106384, 0.6934354901313782, 0.7246070504188538, 0.7372870445251465, 0.7512878179550171, 0.7541936039924622, 0.7640998363494873, 0.770439863204956, 0.7849689722061157, 0.7880068421363831, 0.7930260300636292, 0.7946110367774963, 0.8078193068504333, 0.8133667707443237, 0.8088759779930115, 0.8220842480659485, 0.8236692547798157, 0.8308017253875732, 0.8284242749214172, 0.8372738361358643, 0.8343679904937744, 0.8397833704948425, 0.839519202709198, 0.8453308939933777, 0.8471800088882446, 0.8494254350662231, 0.8514066934585571, 0.8565579056739807, 0.8570862412452698, 0.859199583530426, 0.8593316674232483, 0.8640866279602051, 0.8660678863525391, 0.8705587387084961, 0.8692378997802734, 0.8652753829956055, 0.8710870146751404, 0.8761062026023865, 0.8721436858177185, 0.8758420348167419, 0.882710337638855, 0.8848236799240112, 0.8838990926742554, 0.8780874609947205, 0.8889182209968567], "val_loss": [2.0459072589874268, 1.5243102312088013, 1.0572954416275024, 0.8452497720718384, 0.7520195841789246, 0.6986555457115173, 0.6477254033088684, 0.6144769787788391, 0.5847912430763245, 0.5637385845184326, 0.5410447716712952, 0.5269724726676941, 0.5099180936813354, 0.4982042610645294, 0.49754732847213745, 0.47545915842056274, 0.4646528363227844, 0.4561930000782013, 0.4555684030056, 0.4475506544113159, 0.43917620182037354, 0.4352037310600281, 0.42915353178977966, 0.42037343978881836, 0.4186578392982483, 0.4153287410736084, 0.408193975687027, 0.40719079971313477, 0.4012792110443115, 0.40337222814559937, 0.39580032229423523, 0.39399683475494385, 0.38749590516090393, 0.38875043392181396, 0.38202425837516785, 0.3830615282058716, 0.37989184260368347, 0.3757252097129822, 0.37692487239837646, 0.37078845500946045, 0.3735618591308594, 0.3693540394306183, 0.3643624782562256, 0.36337992548942566, 0.3622128367424011, 0.3609534204006195, 0.3592938780784607, 0.35976970195770264, 0.3566223978996277], "val_accuracy": [0.5550000071525574, 0.6439999938011169, 0.6663333177566528, 0.6983333230018616, 0.7239999771118164, 0.7363333106040955, 0.7549999952316284, 0.762333333492279, 0.7716666460037231, 0.7820000052452087, 0.7919999957084656, 0.7953333258628845, 0.8033333420753479, 0.8169999718666077, 0.8046666383743286, 0.8246666789054871, 0.8259999752044678, 0.8303333520889282, 0.828000009059906, 0.8339999914169312, 0.8386666774749756, 0.840666651725769, 0.8413333296775818, 0.843999981880188, 0.847000002861023, 0.8433333039283752, 0.8460000157356262, 0.8489999771118164, 0.8529999852180481, 0.8526666760444641, 0.8566666841506958, 0.8519999980926514, 0.859333336353302, 0.8526666760444641, 0.8616666793823242, 0.862333357334137, 0.862333357334137, 0.8656666874885559, 0.8643333315849304, 0.862333357334137, 0.8600000143051147, 0.859333336353302, 0.8659999966621399, 0.8706666827201843, 0.8686666488647461, 0.8676666617393494, 0.8669999837875366, 0.8676666617393494, 0.8683333396911621]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [61], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 6, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7885714173316956, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(sigma, alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3090102672576904, 2.299445867538452, 2.277688503265381, 2.2417619228363037, 2.1613402366638184, 1.9417879581451416, 1.5025527477264404, 1.1808054447174072, 1.043320655822754, 0.9743908643722534, 0.890407383441925, 0.8334001898765564, 0.8190405964851379, 0.7921469807624817, 0.8034696578979492, 0.7313423156738281, 0.7295191287994385, 0.744239866733551, 0.6758841276168823, 0.6668035984039307, 0.6419122815132141, 0.6672133803367615, 0.641945481300354, 0.6355186700820923, 0.6163485646247864, 0.6470292806625366], "accuracy": [0.09391097724437714, 0.11795007437467575, 0.1636507660150528, 0.2448817789554596, 0.34922730922698975, 0.41725003719329834, 0.5148593187332153, 0.587372899055481, 0.6284506916999817, 0.6462818384170532, 0.6774534583091736, 0.6906617283821106, 0.696209192276001, 0.7034738063812256, 0.7004358768463135, 0.7273808121681213, 0.7193237543106079, 0.7243428826332092, 0.7405890822410583, 0.7429665923118591, 0.7540615797042847, 0.7479857206344604, 0.7536653280258179, 0.7594769597053528, 0.7655527591705322, 0.7573636174201965], "val_loss": [2.3032655715942383, 2.285970687866211, 2.257021188735962, 2.1999030113220215, 2.0508670806884766, 1.630972146987915, 1.1272406578063965, 0.9903425574302673, 0.8657028079032898, 0.7840270400047302, 0.7328168749809265, 0.725541353225708, 0.7627241015434265, 0.7439281344413757, 0.6807441115379333, 0.7071129679679871, 0.6672810912132263, 0.6096195578575134, 0.6243430376052856, 0.6313168406486511, 0.5943195819854736, 0.6206414103507996, 0.5979953408241272, 0.6363387107849121, 0.6277551054954529, 0.5501949191093445], "val_accuracy": [0.10000000149011612, 0.15433333814144135, 0.32066667079925537, 0.45633333921432495, 0.4883333444595337, 0.6176666617393494, 0.6489999890327454, 0.6470000147819519, 0.6743333339691162, 0.7086666822433472, 0.7296666502952576, 0.7233333587646484, 0.6980000138282776, 0.7009999752044678, 0.734333336353302, 0.7239999771118164, 0.7279999852180481, 0.7563333511352539, 0.7386666536331177, 0.7400000095367432, 0.7816666960716248, 0.7393333315849304, 0.7599999904632568, 0.7486666440963745, 0.7409999966621399, 0.7803333401679993]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 2, 3, 0, 3, 5, 0, 3, 3, 9, 0, 1, 6, 3, 4, 0, 6, 4, 9, 9], [0, 2, 0, 3, 5, 5, 1, 4, 4], [17, 16, 22, 4, 20], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 2, 8, 5, 4, 1, 4, 6, 8], [0, 1, 0, 3, 0, 3, 3, 1, 2, 0], [16, 61, 76, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 29, 20, 9, 5, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(grad, grad), grad))), tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(alpha, grad), grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.square(alpha)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), alpha)", "other_info": {"loss": [4.226171261025822e+24, 1.1268048257082179e+27, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07872143387794495, 0.1006472036242485, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17687742775296.0, 1.2818321304977408e+17, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.0989999994635582, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 6, 3], [0, 2, 1, 2], [80, 39], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 5, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [63, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad), alpha), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [2, 2, 4, 0, 3, 5, 2, 9], [0, 2, 0, 3, 4], [67, 16, 41], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.04085714370012283, "mapping_values": [1, 6, 3, 3, 1, 13, 8, 5, 3, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [57940358725632.0, 63363044343808.0, 66843435859968.0, 65490768625664.0, 65744800841728.0, 66835370213376.0], "accuracy": [0.07938185334205627, 0.0734381154179573, 0.07277770340442657, 0.07885351777076721, 0.07106062769889832, 0.07713644206523895], "val_loss": [48121287540736.0, 48117273591808.0, 48117261008896.0, 48112538222592.0, 48112534028288.0, 48112542416896.0], "val_accuracy": [0.044333335012197495, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495]}}]