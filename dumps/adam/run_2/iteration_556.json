[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231552600860596, 1.8651413917541504, 1.3890315294265747, 1.085038661956787, 0.933586061000824, 0.8327550888061523, 0.7744767665863037, 0.7155871391296387, 0.6981697678565979, 0.6553274989128113, 0.6257084608078003, 0.6115933656692505, 0.5933008193969727, 0.5768930315971375, 0.5549132227897644, 0.5409945845603943, 0.5226989388465881, 0.5153595805168152, 0.5088686943054199, 0.49961599707603455, 0.48549696803092957, 0.47799065709114075, 0.4615755081176758, 0.45869648456573486, 0.4514022469520569, 0.4371539056301117, 0.4363631010055542, 0.4217439889907837, 0.41298049688339233, 0.41063788533210754, 0.400034099817276, 0.39500993490219116, 0.39268916845321655, 0.38731905817985535, 0.387034147977829, 0.3741365075111389, 0.3748284876346588, 0.3599826395511627, 0.3616226613521576, 0.3514879047870636, 0.34818291664123535, 0.3401784598827362, 0.34060490131378174, 0.3329921364784241, 0.3277709186077118, 0.31853121519088745, 0.32676663994789124, 0.3162672519683838, 0.31083768606185913, 0.3058425784111023, 0.299085408449173, 0.2919982373714447, 0.2911601662635803, 0.29063257575035095, 0.28797030448913574, 0.2796231806278229, 0.2747921645641327, 0.2687126398086548, 0.26713883876800537], "accuracy": [0.27222296595573425, 0.4909523129463196, 0.5650508403778076, 0.624620258808136, 0.6686038970947266, 0.7009642124176025, 0.7206445932388306, 0.7433628439903259, 0.748778223991394, 0.7589486241340637, 0.7765156626701355, 0.7803460359573364, 0.7877426743507385, 0.7918372750282288, 0.7997622489929199, 0.8072909712791443, 0.8132346868515015, 0.8133667707443237, 0.8181217908859253, 0.8206313848495483, 0.8273676037788391, 0.8255184292793274, 0.8403117060661316, 0.839519202709198, 0.8374059200286865, 0.8453308939933777, 0.8449346423149109, 0.8529917001724243, 0.8525954484939575, 0.8506141901016235, 0.8573504090309143, 0.8595958352088928, 0.867520809173584, 0.8658037185668945, 0.8627657890319824, 0.867520809173584, 0.8665962219238281, 0.8673887252807617, 0.8741249442100525, 0.8734645247459412, 0.876370370388031, 0.8775591254234314, 0.8795403242111206, 0.8782195448875427, 0.883238673210144, 0.8841632604598999, 0.8824461698532104, 0.8870691061019897, 0.8891823887825012, 0.8881257176399231, 0.8906353116035461, 0.8960506916046143, 0.8960506916046143, 0.8993527889251709, 0.891559898853302, 0.9015982151031494, 0.9037115573883057, 0.9015982151031494, 0.9012019634246826], "val_loss": [2.0358595848083496, 1.5084450244903564, 1.0368471145629883, 0.8263388872146606, 0.7412406206130981, 0.6807841062545776, 0.6368825435638428, 0.6044767498970032, 0.5815809965133667, 0.5548983812332153, 0.5339688062667847, 0.5169832110404968, 0.5026743412017822, 0.49173983931541443, 0.47780394554138184, 0.46811044216156006, 0.4580165147781372, 0.44510146975517273, 0.4414885938167572, 0.4319938123226166, 0.4258210361003876, 0.4192512631416321, 0.41584131121635437, 0.4079872965812683, 0.39793163537979126, 0.3938109576702118, 0.3879837095737457, 0.37858846783638, 0.37906619906425476, 0.3746480345726013, 0.3695041537284851, 0.36574167013168335, 0.36447957158088684, 0.3606363534927368, 0.3548643887042999, 0.3544847369194031, 0.3528205454349518, 0.34697282314300537, 0.34453263878822327, 0.3451154828071594, 0.33983832597732544, 0.337636262178421, 0.3356594741344452, 0.3335143029689789, 0.32955458760261536, 0.32658544182777405, 0.3258260190486908, 0.3232308030128479, 0.3256033957004547, 0.3224200904369354, 0.32172682881355286, 0.317095011472702, 0.31805217266082764, 0.31434813141822815, 0.3117535412311554, 0.3140961229801178, 0.31070366501808167, 0.311605304479599, 0.30962786078453064], "val_accuracy": [0.5389999747276306, 0.6589999794960022, 0.6846666932106018, 0.7049999833106995, 0.734000027179718, 0.7526666522026062, 0.7590000033378601, 0.7706666588783264, 0.7836666703224182, 0.79666668176651, 0.8023333549499512, 0.8083333373069763, 0.815666675567627, 0.8196666836738586, 0.8223333358764648, 0.8303333520889282, 0.8343333601951599, 0.8360000252723694, 0.8416666388511658, 0.8383333086967468, 0.8410000205039978, 0.8460000157356262, 0.8433333039283752, 0.8516666889190674, 0.8543333411216736, 0.8503333330154419, 0.8539999723434448, 0.859000027179718, 0.8573333621025085, 0.859333336353302, 0.862333357334137, 0.8606666922569275, 0.8640000224113464, 0.8666666746139526, 0.8679999709129333, 0.8666666746139526, 0.8663333058357239, 0.8696666955947876, 0.8679999709129333, 0.8703333139419556, 0.871666669845581, 0.8756666779518127, 0.8733333349227905, 0.875, 0.8756666779518127, 0.8736666440963745, 0.8776666522026062, 0.8786666393280029, 0.8740000128746033, 0.8763333559036255, 0.8786666393280029, 0.8796666860580444, 0.8813333511352539, 0.8830000162124634, 0.8803333044052124, 0.8823333382606506, 0.8826666474342346, 0.8803333044052124, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 74], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303628921508789, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 94], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 9, 3, 0, 3, 5], [0, 3, 3, 3], [37, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 78, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 8, 3, 4], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5, 6, 9], [0, 3, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 2, 2, 6, 4, 3, 1, 8, 3, 6, 3, 6, 1, 6, 0, 8, 8, 2, 8, 4, 8, 6, 9, 3, 3, 0, 3, 6, 6, 0, 9, 5], [0, 3, 0, 3, 0, 0, 3, 1, 2, 2, 0, 0, 3, 6, 2, 1, 1, 0, 7, 3, 1, 5, 7, 0, 1, 4, 5], [16, 99, 33, 99, 61, 37, 19, 88, 90, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 8, 4, 2, 2, 1, 1, 1, 66, 39, 27, 10], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(alpha, beta), tf.math.subtract(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), sigma))), tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.sqrt(alpha), alpha)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), grad), tf.math.divide_no_nan(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, grad), tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), grad))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 41], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 0, 0, 1, 0, 1], [0, 4, 8, 5], [0, 7], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 2, 8, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 6, 4, 2, 1, 15, 8, 7, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))))", "other_info": {"loss": [2.3049161434173584, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]