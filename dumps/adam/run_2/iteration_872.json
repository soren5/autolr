[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234697341918945, 1.8649518489837646, 1.385584831237793, 1.0886800289154053, 0.9360824227333069, 0.82660973072052, 0.7657804489135742, 0.726222038269043, 0.6826454997062683, 0.6525136828422546, 0.6275313496589661, 0.6191200017929077, 0.5912576913833618, 0.5703694224357605, 0.5554051995277405, 0.5440905690193176, 0.533015787601471, 0.5151397585868835, 0.4978971481323242, 0.4857354164123535, 0.493416428565979, 0.4745016396045685, 0.46214136481285095, 0.45573750138282776, 0.4426018297672272, 0.4381469786167145, 0.42894071340560913, 0.42533743381500244, 0.4215583801269531, 0.40695491433143616, 0.39783039689064026, 0.40266573429107666, 0.3900541067123413, 0.37994638085365295, 0.3812783658504486, 0.3785088062286377, 0.36958011984825134, 0.3647459149360657, 0.35778796672821045, 0.35392245650291443, 0.3460817039012909, 0.3445150554180145, 0.339365690946579, 0.34692707657814026, 0.3356751501560211, 0.3263052999973297, 0.3208654820919037, 0.3190780282020569, 0.30967825651168823, 0.3052480220794678, 0.30989566445350647, 0.3049774765968323, 0.29506969451904297, 0.29123857617378235, 0.28545933961868286, 0.2828439176082611, 0.2723986506462097, 0.2725549340248108, 0.26930472254753113, 0.26654577255249023, 0.2673572599887848, 0.2540891170501709, 0.2585839629173279, 0.24890443682670593, 0.24881234765052795, 0.2435072362422943], "accuracy": [0.27565711736679077, 0.4963677227497101, 0.5679566860198975, 0.6193369626998901, 0.6660943031311035, 0.7080966830253601, 0.7304186820983887, 0.7353057861328125, 0.757099449634552, 0.7667415142059326, 0.7705719470977783, 0.7766477465629578, 0.7882710099220276, 0.7927618622779846, 0.8000264167785645, 0.8054417967796326, 0.8150838613510132, 0.8150838613510132, 0.8215559124946594, 0.82683926820755, 0.8245938420295715, 0.8313300609588623, 0.8384625315666199, 0.8413683772087097, 0.8449346423149109, 0.8490291833877563, 0.8531237840652466, 0.8521991968154907, 0.8453308939933777, 0.8590674996376038, 0.863029956817627, 0.8548408150672913, 0.8627657890319824, 0.8661999702453613, 0.8692378997802734, 0.8660678863525391, 0.8658037185668945, 0.8708229064941406, 0.8716153502464294, 0.8722757697105408, 0.8758420348167419, 0.8776912093162537, 0.8767666220664978, 0.8768987059593201, 0.8828424215316772, 0.8828424215316772, 0.8869370222091675, 0.8861445188522339, 0.8864086866378784, 0.8886540532112122, 0.8878615498542786, 0.8910315632820129, 0.893541157245636, 0.8994848728179932, 0.89552241563797, 0.9006736278533936, 0.9017302989959717, 0.9062210917472839, 0.9021265506744385, 0.9013340473175049, 0.904768168926239, 0.9085986018180847, 0.9093911051750183, 0.9125610589981079, 0.9089948534965515, 0.9138818979263306], "val_loss": [2.0350208282470703, 1.4980887174606323, 1.0211979150772095, 0.8197389245033264, 0.7246084213256836, 0.6723741292953491, 0.6224890351295471, 0.5941479206085205, 0.5715817213058472, 0.5474140048027039, 0.5351061820983887, 0.518642008304596, 0.5079228281974792, 0.49304699897766113, 0.4811546206474304, 0.4728916883468628, 0.46499431133270264, 0.4535835087299347, 0.44974470138549805, 0.4418184757232666, 0.4331025779247284, 0.42909014225006104, 0.4248751997947693, 0.4192383587360382, 0.4134771227836609, 0.41617119312286377, 0.41082820296287537, 0.40163758397102356, 0.40037867426872253, 0.3966110944747925, 0.393395334482193, 0.3879689872264862, 0.38689228892326355, 0.38704508543014526, 0.3816010057926178, 0.3882799744606018, 0.3778160512447357, 0.37119629979133606, 0.3727307617664337, 0.37544772028923035, 0.3685111105442047, 0.3689210116863251, 0.36801570653915405, 0.365062952041626, 0.36186861991882324, 0.3570728003978729, 0.35121050477027893, 0.35320764780044556, 0.3525862693786621, 0.35271090269088745, 0.3532581329345703, 0.34624341130256653, 0.34865495562553406, 0.3488081097602844, 0.34474995732307434, 0.3401193916797638, 0.34461459517478943, 0.34434789419174194, 0.3378222584724426, 0.33652856945991516, 0.3354336619377136, 0.336529403924942, 0.33860793709754944, 0.33338069915771484, 0.33271047472953796, 0.3339090049266815], "val_accuracy": [0.574999988079071, 0.6660000085830688, 0.699999988079071, 0.7200000286102295, 0.7516666650772095, 0.762666642665863, 0.784333348274231, 0.7879999876022339, 0.7943333387374878, 0.8083333373069763, 0.8140000104904175, 0.8186666369438171, 0.8199999928474426, 0.8276666402816772, 0.8343333601951599, 0.8363333344459534, 0.8356666564941406, 0.843999981880188, 0.8426666855812073, 0.8446666598320007, 0.8473333120346069, 0.8493333458900452, 0.8493333458900452, 0.8529999852180481, 0.8543333411216736, 0.8473333120346069, 0.8529999852180481, 0.8560000061988831, 0.8586666584014893, 0.8556666374206543, 0.8586666584014893, 0.8616666793823242, 0.8619999885559082, 0.8603333234786987, 0.862333357334137, 0.8579999804496765, 0.8673333525657654, 0.8669999837875366, 0.8663333058357239, 0.8690000176429749, 0.8659999966621399, 0.8673333525657654, 0.8713333606719971, 0.8730000257492065, 0.8693333268165588, 0.8726666569709778, 0.8756666779518127, 0.8759999871253967, 0.875, 0.8759999871253967, 0.8743333220481873, 0.8790000081062317, 0.8790000081062317, 0.878000020980835, 0.8793333172798157, 0.8806666731834412, 0.8820000290870667, 0.8773333430290222, 0.8813333511352539, 0.8836666941642761, 0.8846666812896729, 0.8830000162124634, 0.8836666941642761, 0.8830000162124634, 0.8846666812896729, 0.8826666474342346]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3031747341156006, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 3, 0, 5, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 6, 0, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 0], [16, 99, 96, 99, 13, 1, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 1, 2, 1, 1, 1, 25, 13, 12, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), sigma))), tf.math.divide_no_nan(tf.math.negative(alpha), beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0], [2, 9], [0], [36, 33], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 1, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2], [16, 99, 96, 99, 11, 1]], "fitness": -0.09314285963773727, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(alpha))), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3097312450408936, 2.3106985092163086, 2.3092095851898193, 2.3109946250915527, 2.310333013534546, 2.3109350204467773], "accuracy": [0.09628847241401672, 0.08691058307886124, 0.09219389408826828, 0.09747721254825592, 0.09140139818191528, 0.09219389408826828], "val_loss": [2.3093838691711426, 2.3093838691711426, 2.3093838691711426, 2.3093838691711426, 2.3093838691711426, 2.3093838691711426], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 3, 2, 1, 2, 23, 12, 11, 6], "tree_depth": 26}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [73, 16], [0, 1], [9], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 5, 2, 8], [0, 0, 0, 3, 0, 4, 4, 4, 2, 0], [16, 99, 96, 99, 17, 1]], "fitness": -0.08857142925262451, "mapping_values": [1, 2, 1, 1, 1, 6, 4, 2, 1, 1, 1, 0, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.subtract(grad, grad))))", "other_info": {"loss": [2.6694657981703782e+19, 3.024851925621067e+19, 3.0441316421117936e+19, 3.0378743214381203e+19, 3.0650074096814e+19, 3.1578064109680198e+19], "accuracy": [0.0870426595211029, 0.08875974267721176, 0.08506141602993011, 0.08981640636920929, 0.09140139818191528, 0.08730682730674744], "val_loss": [2.5936531520212697e+19, 2.5936531520212697e+19, 2.5936531520212697e+19, 2.5936531520212697e+19, 2.5936531520212697e+19, 2.5936531520212697e+19], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]