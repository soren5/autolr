[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8671428561210632, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.219883680343628, 1.8646430969238281, 1.3936896324157715, 1.0893877744674683, 0.9355166554450989, 0.842409610748291, 0.7710077166557312, 0.7305188179016113, 0.6986204385757446, 0.6727396249771118, 0.6498048901557922, 0.6268044114112854, 0.6140111088752747, 0.5887817740440369, 0.578136682510376, 0.5584238767623901, 0.5524672269821167, 0.5343066453933716, 0.5221304893493652, 0.5067646503448486, 0.49799448251724243, 0.49728572368621826, 0.4813750684261322, 0.47350600361824036, 0.46665558218955994, 0.46120086312294006, 0.4508947730064392, 0.4514182507991791, 0.43237996101379395, 0.4303359389305115, 0.42297977209091187, 0.42136141657829285, 0.41076475381851196, 0.4052966833114624, 0.39923855662345886, 0.38885870575904846, 0.3861909806728363, 0.373085081577301, 0.37552767992019653, 0.36961859464645386, 0.3645276427268982, 0.3621616065502167, 0.3508068323135376, 0.3534679412841797, 0.3436737656593323, 0.34320715069770813, 0.3334048390388489, 0.32730600237846375, 0.3194701075553894, 0.3264276683330536, 0.3190784752368927, 0.317353218793869, 0.3047613799571991, 0.3113130033016205, 0.29358038306236267, 0.2904236614704132, 0.29598477482795715, 0.2843449115753174, 0.2814180254936218, 0.2754606008529663, 0.27888524532318115, 0.27082836627960205, 0.26988962292671204, 0.26404473185539246], "accuracy": [0.28503501415252686, 0.4916127324104309, 0.5641262531280518, 0.6206578016281128, 0.6627922058105469, 0.6931713223457336, 0.7180029153823853, 0.7416457533836365, 0.7471932172775269, 0.7552502751350403, 0.76106196641922, 0.770439863204956, 0.7744023203849792, 0.7844406366348267, 0.7880068421363831, 0.8000264167785645, 0.8005547523498535, 0.8061022162437439, 0.8152159452438354, 0.8182538747787476, 0.8171972036361694, 0.8251221776008606, 0.8325188159942627, 0.8300092220306396, 0.8358209133148193, 0.8421608805656433, 0.8393871188163757, 0.8389908671379089, 0.8432175517082214, 0.8498216867446899, 0.8510104417800903, 0.8479725122451782, 0.8552370667457581, 0.8537842035293579, 0.8619733452796936, 0.863029956817627, 0.8654074668884277, 0.8681812286376953, 0.8654074668884277, 0.8712190985679626, 0.870030403137207, 0.8710870146751404, 0.8734645247459412, 0.8689737319946289, 0.8799365758895874, 0.8733324408531189, 0.8833707571029663, 0.8819178342819214, 0.887201189994812, 0.8840311765670776, 0.8848236799240112, 0.8887861371040344, 0.8922203183174133, 0.8862766027450562, 0.8942015767097473, 0.8969752788543701, 0.8914278149604797, 0.8997490406036377, 0.8963148593902588, 0.89988112449646, 0.8990886211395264, 0.8988244533538818, 0.9025228023529053, 0.9056927561759949], "val_loss": [2.0383734703063965, 1.52497136592865, 1.0601259469985962, 0.8562812209129333, 0.7658120393753052, 0.7131959795951843, 0.6649298071861267, 0.6330333948135376, 0.6113543510437012, 0.5844947695732117, 0.5694802403450012, 0.5587157011032104, 0.5405371785163879, 0.5320618748664856, 0.5227773785591125, 0.5067153573036194, 0.5035103559494019, 0.488569974899292, 0.4856756627559662, 0.47375935316085815, 0.46686801314353943, 0.4690234065055847, 0.4562239646911621, 0.45184147357940674, 0.44802647829055786, 0.43765127658843994, 0.44083112478256226, 0.43040087819099426, 0.4233548939228058, 0.4223497211933136, 0.4192502796649933, 0.419228196144104, 0.4093460142612457, 0.40610718727111816, 0.40181079506874084, 0.3973771929740906, 0.40005266666412354, 0.3999347388744354, 0.39140209555625916, 0.39240047335624695, 0.3948496878147125, 0.38875582814216614, 0.3842795789241791, 0.38304319977760315, 0.3777843713760376, 0.37781664729118347, 0.3811173439025879, 0.377654492855072, 0.37773609161376953, 0.37403377890586853, 0.36979779601097107, 0.3724605441093445, 0.36716514825820923, 0.3631788194179535, 0.36722949147224426, 0.36092469096183777, 0.3646883964538574, 0.36131754517555237, 0.3600904941558838, 0.36084359884262085, 0.36253821849823, 0.35693618655204773, 0.3574981689453125, 0.3609990179538727], "val_accuracy": [0.5479999780654907, 0.6539999842643738, 0.6823333501815796, 0.7059999704360962, 0.7303333282470703, 0.7436666488647461, 0.7633333206176758, 0.7706666588783264, 0.7726666927337646, 0.7973333597183228, 0.7950000166893005, 0.7950000166893005, 0.8100000023841858, 0.8083333373069763, 0.8109999895095825, 0.8173333406448364, 0.8136666417121887, 0.8243333101272583, 0.8296666741371155, 0.8286666870117188, 0.8363333344459534, 0.8320000171661377, 0.8363333344459534, 0.8410000205039978, 0.8479999899864197, 0.843666672706604, 0.8433333039283752, 0.8486666679382324, 0.8519999980926514, 0.8536666631698608, 0.8526666760444641, 0.8533333539962769, 0.8603333234786987, 0.8573333621025085, 0.8619999885559082, 0.8606666922569275, 0.8603333234786987, 0.862333357334137, 0.8613333106040955, 0.8640000224113464, 0.8636666536331177, 0.8653333187103271, 0.8659999966621399, 0.8673333525657654, 0.8646666407585144, 0.8683333396911621, 0.8693333268165588, 0.8690000176429749, 0.8690000176429749, 0.8703333139419556, 0.8709999918937683, 0.8693333268165588, 0.8709999918937683, 0.8756666779518127, 0.8736666440963745, 0.871999979019165, 0.875, 0.8769999742507935, 0.8796666860580444, 0.871666669845581, 0.875, 0.8766666650772095, 0.8769999742507935, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222630500793457, 1.8671823740005493, 1.382450819015503, 1.081924557685852, 0.922985851764679, 0.8354698419570923, 0.7735142707824707, 0.7307637929916382, 0.693337082862854, 0.6611547470092773, 0.6474633812904358, 0.6188772916793823, 0.5993170142173767, 0.5795121192932129, 0.562067985534668, 0.5482879281044006, 0.5354558229446411, 0.531293511390686, 0.5100952982902527, 0.49441903829574585, 0.4842228889465332, 0.48243945837020874, 0.47318148612976074, 0.46415480971336365, 0.46228986978530884, 0.4501022398471832, 0.43156275153160095, 0.4303329885005951, 0.42145317792892456, 0.4168376922607422, 0.41479867696762085, 0.40686988830566406, 0.3998039960861206, 0.3986658453941345, 0.39727887511253357, 0.38930872082710266, 0.3793570399284363, 0.3706980049610138, 0.3722098767757416, 0.36662545800209045, 0.3667865991592407, 0.35526371002197266, 0.34135323762893677, 0.34201693534851074, 0.3378964960575104, 0.3351901173591614, 0.32617610692977905, 0.3316543400287628, 0.3227115869522095, 0.32131898403167725, 0.31077298521995544, 0.3088550865650177, 0.29922807216644287, 0.30164071917533875, 0.28954678773880005, 0.29070526361465454, 0.29233378171920776], "accuracy": [0.2801479399204254, 0.4861973226070404, 0.5692775249481201, 0.6197332143783569, 0.668339729309082, 0.7078325152397156, 0.718399167060852, 0.7392682433128357, 0.7464007139205933, 0.7623828053474426, 0.7633073329925537, 0.7778365015983582, 0.7845727205276489, 0.7887993454933167, 0.7938185334205627, 0.8045172095298767, 0.8063663840293884, 0.8090080618858337, 0.8187822103500366, 0.8234050869941711, 0.8215559124946594, 0.8232730031013489, 0.8305375576019287, 0.8343679904937744, 0.830669641494751, 0.8397833704948425, 0.8442742228507996, 0.8477083444595337, 0.8475762605667114, 0.8504821062088013, 0.846387505531311, 0.852859616279602, 0.856689989566803, 0.8548408150672913, 0.857218325138092, 0.8589354157447815, 0.8640866279602051, 0.8679170608520508, 0.8634262084960938, 0.86118084192276, 0.8669924736022949, 0.8692378997802734, 0.8765024542808533, 0.8803328275680542, 0.8780874609947205, 0.8782195448875427, 0.8802007436752319, 0.8817857503890991, 0.8824461698532104, 0.8812574148178101, 0.8864086866378784, 0.886672854423523, 0.8893144726753235, 0.887201189994812, 0.8965790271759033, 0.8908994793891907, 0.8930128216743469], "val_loss": [2.0408294200897217, 1.518094539642334, 1.0520116090774536, 0.8455171585083008, 0.753188967704773, 0.6955216526985168, 0.6589148640632629, 0.6145988702774048, 0.5869312286376953, 0.5656517744064331, 0.5490216016769409, 0.5395230054855347, 0.5208903551101685, 0.5053861737251282, 0.4894457459449768, 0.47909826040267944, 0.47573161125183105, 0.46397924423217773, 0.4514867067337036, 0.45465847849845886, 0.4426271915435791, 0.4353765547275543, 0.43041056394577026, 0.42646723985671997, 0.4277206361293793, 0.41381144523620605, 0.4122551381587982, 0.41292235255241394, 0.40717220306396484, 0.4022866189479828, 0.3985414206981659, 0.3968856632709503, 0.3938039541244507, 0.3944666385650635, 0.3863246738910675, 0.3865405321121216, 0.38292667269706726, 0.37674659490585327, 0.38097989559173584, 0.37971463799476624, 0.37325993180274963, 0.37146618962287903, 0.3670276403427124, 0.3665279448032379, 0.3686358332633972, 0.3597513437271118, 0.3620530068874359, 0.36341771483421326, 0.3672921657562256, 0.3548881411552429, 0.35257089138031006, 0.3547273874282837, 0.35469767451286316, 0.35555753111839294, 0.348714143037796, 0.3448006510734558, 0.3464566171169281], "val_accuracy": [0.5203333497047424, 0.6513333320617676, 0.6703333258628845, 0.6923333406448364, 0.7273333072662354, 0.7440000176429749, 0.7526666522026062, 0.7680000066757202, 0.7760000228881836, 0.7893333435058594, 0.8006666898727417, 0.79666668176651, 0.8119999766349792, 0.8203333616256714, 0.8246666789054871, 0.8303333520889282, 0.8316666483879089, 0.8399999737739563, 0.8423333168029785, 0.8383333086967468, 0.8416666388511658, 0.8456666469573975, 0.847000002861023, 0.8506666421890259, 0.8463333249092102, 0.8536666631698608, 0.8576666712760925, 0.8533333539962769, 0.8516666889190674, 0.859333336353302, 0.859666645526886, 0.8633333444595337, 0.8576666712760925, 0.8653333187103271, 0.8653333187103271, 0.8629999756813049, 0.8640000224113464, 0.8679999709129333, 0.8629999756813049, 0.8619999885559082, 0.8693333268165588, 0.8696666955947876, 0.8713333606719971, 0.8653333187103271, 0.8676666617393494, 0.8730000257492065, 0.8709999918937683, 0.8663333058357239, 0.8656666874885559, 0.8756666779518127, 0.8759999871253967, 0.8769999742507935, 0.8743333220481873, 0.871999979019165, 0.8766666650772095, 0.8759999871253967, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 2], [0, 0, 0, 2, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 7, 4, 3, 2, 1, 1, 0, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3087446689605713, 2.3071954250335693, 2.304849863052368, 2.303568124771118, 2.3027238845825195, 2.3025925159454346, 2.3025856018066406, 2.3025853633880615, 2.3025858402252197, 2.3025856018066406, 2.3025856018066406], "accuracy": [0.09311848133802414, 0.08770307898521423, 0.09206181764602661, 0.09866596013307571, 0.09932637959718704, 0.09774138033390045, 0.09536388516426086, 0.09774138033390045, 0.09536388516426086, 0.09642054885625839, 0.09642054885625839], "val_loss": [2.306262969970703, 2.304699659347534, 2.3040030002593994, 2.3027379512786865, 2.3025848865509033, 2.3025848865509033, 2.302584648132324, 2.302584648132324, 2.302584648132324, 2.302584409713745, 2.302584648132324], "val_accuracy": [0.08733333647251129, 0.08133333176374435, 0.0716666653752327, 0.09133332967758179, 0.0989999994635582, 0.10400000214576721, 0.0989999994635582, 0.0989999994635582, 0.09833333641290665, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 9, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [1], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 4, 4, 0], [59, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 6, 4, 2, 2, 1, 0, 1, 0, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)))", "other_info": {"loss": [6.825371868466199e+21, 118.17623901367188, 644.9044799804688, 1955.7056884765625, 4464.2080078125, 8615.5517578125], "accuracy": [0.08757099509239197, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [31.168224334716797, 331.6080322265625, 1256.93505859375, 3206.40869140625, 6611.95556640625, 11928.6689453125], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [70, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09799999743700027, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), alpha)", "other_info": {"loss": [1.3434990853911216e+19, 1.6087281180944105e+19, 1.5372951566122222e+19, 1.5546187319659725e+19, 1.4987681592237883e+19, 1.5954835109773836e+19], "accuracy": [0.10289261490106583, 0.1142517477273941, 0.11253467202186584, 0.1026284471154213, 0.11372341960668564, 0.10659094154834747], "val_loss": [1.1498937794374402e+19, 1.1498937794374402e+19, 1.1498937794374402e+19, 1.1498937794374402e+19, 1.1498937794374402e+19, 1.1498937794374402e+19], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [3], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 5, 1, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 2, 0, 3, 1, 2, 1], [16, 56, 96, 99, 61, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 8, 4, 4, 1, 9, 5, 4, 1, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.309680223464966, 2.309918165206909, 2.309802532196045, 2.309368848800659, 2.309248924255371, 2.308314085006714, 2.3100271224975586, 2.307727098464966, 2.3093414306640625, 2.3074986934661865, 2.3076343536376953, 2.3089048862457275], "accuracy": [0.09259014576673508, 0.09325055778026581, 0.09509972482919693, 0.09496764093637466, 0.09866596013307571, 0.09496764093637466, 0.08875974267721176, 0.09245806187391281, 0.08889182657003403, 0.09602430462837219, 0.09140139818191528, 0.09232597798109055], "val_loss": [2.308584213256836, 2.3085412979125977, 2.3084709644317627, 2.308372974395752, 2.3082470893859863, 2.308093786239624, 2.307912588119507, 2.3077046871185303, 2.307469129562378, 2.307206630706787, 2.3069162368774414, 2.306598663330078], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09166666865348816, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09166666865348816, 0.09200000017881393, 0.09200000017881393]}}]