[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222991943359375, 1.8613959550857544, 1.384247064590454, 1.086629033088684, 0.9245171546936035, 0.8338785171508789, 0.7727124094963074, 0.7282489538192749, 0.6882885694503784, 0.6607871055603027, 0.6341010332107544, 0.6112194061279297, 0.5973108410835266, 0.5743305087089539, 0.5650240182876587, 0.5446592569351196, 0.5433699488639832, 0.5338245630264282, 0.5076019763946533, 0.5103625059127808, 0.5016495585441589, 0.4927292764186859, 0.48619040846824646, 0.4737323224544525, 0.46404916048049927, 0.458330899477005, 0.447542279958725, 0.44360339641571045, 0.44274646043777466, 0.42527610063552856, 0.42710718512535095, 0.41219571232795715, 0.4029689133167267, 0.4072355628013611, 0.40242815017700195, 0.38649511337280273, 0.3902890980243683, 0.37916165590286255, 0.38027212023735046, 0.3687727153301239, 0.36962589621543884, 0.3608684837818146, 0.35976114869117737, 0.348899781703949, 0.3419792354106903, 0.3419267535209656, 0.33412784337997437, 0.337189257144928, 0.3340108394622803, 0.3253552317619324, 0.3203888237476349, 0.32592228055000305, 0.3091166615486145, 0.3043897747993469, 0.30038532614707947, 0.30308589339256287, 0.2955658733844757, 0.296053022146225, 0.28843021392822266, 0.2849258780479431, 0.27664390206336975, 0.27967965602874756, 0.2721935510635376, 0.2617180645465851, 0.2670643627643585, 0.259933203458786, 0.2558508515357971, 0.25518733263015747, 0.25017738342285156, 0.24562674760818481, 0.2474149763584137, 0.24133236706256866, 0.23463422060012817], "accuracy": [0.26865673065185547, 0.4931977391242981, 0.5684850215911865, 0.6173557043075562, 0.6733588576316833, 0.7067758440971375, 0.7259278893470764, 0.735041618347168, 0.752212405204773, 0.7614582180976868, 0.767401933670044, 0.778232753276825, 0.7829877138137817, 0.7930260300636292, 0.7994980812072754, 0.8033285140991211, 0.8058380484580994, 0.8075551390647888, 0.8158763647079468, 0.8132346868515015, 0.8181217908859253, 0.8234050869941711, 0.8285563588142395, 0.8329150676727295, 0.8305375576019287, 0.8322546482086182, 0.8391229510307312, 0.8396512866020203, 0.8399154543876648, 0.8462554216384888, 0.8481045961380005, 0.8533879518508911, 0.8520671129226685, 0.8524633646011353, 0.8570862412452698, 0.8576145768165588, 0.8568220734596252, 0.863029956817627, 0.860652506351471, 0.867520809173584, 0.868049144744873, 0.8685774803161621, 0.8687095642089844, 0.8733324408531189, 0.8758420348167419, 0.8746532797813416, 0.8800686597824097, 0.8800686597824097, 0.8786157965660095, 0.8823140859603882, 0.8816536664962769, 0.8778232932090759, 0.885219931602478, 0.8868049383163452, 0.8902390599250793, 0.887201189994812, 0.8908994793891907, 0.8905032277107239, 0.8943336606025696, 0.8918240666389465, 0.8982961177825928, 0.8967111110687256, 0.8971073627471924, 0.9027869701385498, 0.9008057117462158, 0.9056927561759949, 0.90423983335495, 0.90423983335495, 0.9059569239616394, 0.9079381823539734, 0.9063531756401062, 0.9080702662467957, 0.9097873568534851], "val_loss": [2.037538528442383, 1.5046008825302124, 1.0347809791564941, 0.8312945365905762, 0.7400437593460083, 0.6867370009422302, 0.6570690274238586, 0.6189646124839783, 0.5902698636054993, 0.5706378817558289, 0.5603980422019958, 0.5382130742073059, 0.5295501947402954, 0.5187365412712097, 0.505365252494812, 0.50509113073349, 0.49563488364219666, 0.4829046130180359, 0.4809316098690033, 0.4688830077648163, 0.46445393562316895, 0.45682376623153687, 0.45538386702537537, 0.4448447525501251, 0.4448067247867584, 0.43701884150505066, 0.4338141977787018, 0.4276908040046692, 0.4236782491207123, 0.4191831946372986, 0.417461097240448, 0.41220971941947937, 0.4149015247821808, 0.4063590168952942, 0.4058598279953003, 0.3976415991783142, 0.3990812301635742, 0.3933371603488922, 0.39253219962120056, 0.3895876407623291, 0.3888933062553406, 0.38415127992630005, 0.38521337509155273, 0.38454675674438477, 0.38628557324409485, 0.3847719430923462, 0.3768964111804962, 0.3754313886165619, 0.379923552274704, 0.37516650557518005, 0.36731281876564026, 0.368673175573349, 0.36712849140167236, 0.3719345033168793, 0.3664918541908264, 0.3636642396450043, 0.36059334874153137, 0.3625817596912384, 0.36114904284477234, 0.36266809701919556, 0.35792967677116394, 0.354135662317276, 0.3569980561733246, 0.35633960366249084, 0.36064326763153076, 0.36391887068748474, 0.36143437027931213, 0.34998390078544617, 0.3546045422554016, 0.3537616431713104, 0.35804036259651184, 0.35323381423950195, 0.35595226287841797], "val_accuracy": [0.5376666784286499, 0.6570000052452087, 0.6790000200271606, 0.7070000171661377, 0.7293333411216736, 0.7473333477973938, 0.7523333430290222, 0.7716666460037231, 0.7833333611488342, 0.7883333563804626, 0.7889999747276306, 0.8040000200271606, 0.8050000071525574, 0.809333324432373, 0.8159999847412109, 0.8159999847412109, 0.8163333535194397, 0.824999988079071, 0.8223333358764648, 0.8289999961853027, 0.8339999914169312, 0.8370000123977661, 0.8333333134651184, 0.8413333296775818, 0.8373333215713501, 0.843666672706604, 0.843999981880188, 0.8456666469573975, 0.843666672706604, 0.8500000238418579, 0.8533333539962769, 0.8519999980926514, 0.8483333587646484, 0.8489999771118164, 0.8513333201408386, 0.8543333411216736, 0.8510000109672546, 0.859000027179718, 0.8576666712760925, 0.8550000190734863, 0.8569999933242798, 0.8633333444595337, 0.859666645526886, 0.8603333234786987, 0.859000027179718, 0.8569999933242798, 0.8640000224113464, 0.8653333187103271, 0.8616666793823242, 0.8619999885559082, 0.8673333525657654, 0.8679999709129333, 0.8659999966621399, 0.8633333444595337, 0.8683333396911621, 0.8676666617393494, 0.8723333477973938, 0.871666669845581, 0.8733333349227905, 0.8693333268165588, 0.8733333349227905, 0.8690000176429749, 0.874666690826416, 0.8733333349227905, 0.8640000224113464, 0.871666669845581, 0.871666669845581, 0.875333309173584, 0.874666690826416, 0.8736666440963745, 0.8713333606719971, 0.8726666569709778, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3, 7, 0], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 24, 13, 11, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.add(tf.math.negative(sigma), beta), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), sigma))", "other_info": {"loss": [107.31905364990234, 316.50439453125, 382.7750244140625, 420.4642028808594, 446.7726135253906, 467.3060607910156], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [271.26361083984375, 361.8835754394531, 406.782470703125, 436.6032409667969, 458.9814453125, 477.0401611328125], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6], [0, 0, 0, 2, 3], [39, 39, 3], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 8, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 35, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 8, 4, 4, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [2, 1, 0, 2], [39, 25], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 46], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha), beta))", "other_info": {"loss": [2.303518295288086, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 20], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 4, 0, 3, 5, 1], [0, 2, 0, 3, 2], [16, 16], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 3, 0, 4, 2, 9, 8, 3], [0, 1, 4, 6, 2], [99, 36], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 64, 96, 99, 60, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 13, 8, 5, 2, 4, 2, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.pow(alpha, tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(grad, grad))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3037686347961426, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]