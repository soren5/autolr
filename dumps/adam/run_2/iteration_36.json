[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8748571276664734, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2257304191589355, 1.8795742988586426, 1.4002149105072021, 1.0845156908035278, 0.9352409243583679, 0.8323283195495605, 0.7702773213386536, 0.7239602208137512, 0.6890323162078857, 0.6605302095413208, 0.6405627727508545, 0.618780791759491, 0.5953121185302734, 0.5723647475242615, 0.5688818097114563, 0.5402939915657043, 0.5230716466903687, 0.5185339450836182, 0.5055860877037048, 0.49823811650276184, 0.48530110716819763, 0.4731071889400482, 0.4742107689380646, 0.4618343412876129, 0.45226407051086426, 0.43923208117485046, 0.42923814058303833, 0.4224671423435211, 0.4132537245750427, 0.4171052873134613, 0.40286657214164734, 0.401645690202713, 0.3904517590999603, 0.3879532814025879, 0.3833983242511749, 0.3733660578727722, 0.3682907521724701, 0.3621160089969635, 0.3541252911090851, 0.35348233580589294, 0.34747570753097534, 0.3413771390914917, 0.33653727173805237, 0.3308607339859009, 0.32244059443473816, 0.3230111598968506, 0.31718727946281433, 0.3173046112060547, 0.3139379322528839, 0.3081393241882324, 0.3043934404850006, 0.29838016629219055, 0.28782740235328674, 0.28089746832847595, 0.27577802538871765, 0.27998772263526917, 0.2814391553401947, 0.2731642425060272, 0.2675051689147949, 0.25949910283088684, 0.25661787390708923, 0.2519060969352722, 0.2506949305534363, 0.24650299549102783, 0.24389494955539703, 0.2343333512544632, 0.22960200905799866, 0.2354428470134735, 0.23220930993556976, 0.2245044708251953, 0.22387441992759705, 0.22017037868499756, 0.21408002078533173, 0.20792903006076813, 0.209246426820755, 0.2106911689043045, 0.2036212831735611, 0.1993311047554016], "accuracy": [0.2793554365634918, 0.4865935742855072, 0.5695416927337646, 0.6186765432357788, 0.666358470916748, 0.7003037929534912, 0.7259278893470764, 0.7296261787414551, 0.748778223991394, 0.7600052952766418, 0.7647602558135986, 0.7684586048126221, 0.7815347909927368, 0.7957997918128967, 0.7957997918128967, 0.8035926818847656, 0.8074230551719666, 0.8078193068504333, 0.8131026029586792, 0.8224804997444153, 0.8222163319587708, 0.8245938420295715, 0.8298771381378174, 0.8335754871368408, 0.8360850811004639, 0.844010055065155, 0.8426892161369324, 0.8448025584220886, 0.8471800088882446, 0.8491612672805786, 0.8574824929237366, 0.8543124794960022, 0.858671247959137, 0.859199583530426, 0.858671247959137, 0.8667283058166504, 0.863558292388916, 0.8702945709228516, 0.8681812286376953, 0.8706908226013184, 0.8689737319946289, 0.8739928603172302, 0.8782195448875427, 0.8821820020675659, 0.8841632604598999, 0.8782195448875427, 0.8869370222091675, 0.8794082403182983, 0.8840311765670776, 0.8815215826034546, 0.8944657444953918, 0.8912957310676575, 0.8919561505317688, 0.8926165699958801, 0.8949940800666809, 0.897899866104126, 0.8994848728179932, 0.898428201675415, 0.9041078090667725, 0.9046360850334167, 0.9060890078544617, 0.9095231890678406, 0.9060890078544617, 0.9108440279960632, 0.9080702662467957, 0.9149385690689087, 0.9140139818191528, 0.9083344340324402, 0.915070652961731, 0.915070652961731, 0.9159952402114868, 0.921938955783844, 0.9198256731033325, 0.9210143685340881, 0.9228635430335999, 0.9196935892105103, 0.9269581437110901, 0.926429808139801], "val_loss": [2.045520782470703, 1.521894097328186, 1.045864224433899, 0.8405641317367554, 0.7541571259498596, 0.6997856497764587, 0.6578887701034546, 0.6186016201972961, 0.5940539836883545, 0.5707026124000549, 0.547885000705719, 0.5374830365180969, 0.5198137760162354, 0.5039316415786743, 0.5027194023132324, 0.4843730330467224, 0.4730151891708374, 0.46506747603416443, 0.45391303300857544, 0.454712837934494, 0.44479256868362427, 0.4381479024887085, 0.4374189078807831, 0.43261051177978516, 0.42431265115737915, 0.41918185353279114, 0.41278308629989624, 0.4116319715976715, 0.4080835282802582, 0.4041145443916321, 0.40467435121536255, 0.4004606008529663, 0.39678290486335754, 0.3894149661064148, 0.3937996029853821, 0.3846401274204254, 0.38279345631599426, 0.38769441843032837, 0.3774288296699524, 0.3818838596343994, 0.37320321798324585, 0.3775084614753723, 0.3697284460067749, 0.37272608280181885, 0.3658878207206726, 0.3662434220314026, 0.36805737018585205, 0.36323216557502747, 0.36421117186546326, 0.35865551233291626, 0.3593340516090393, 0.3540715277194977, 0.35871216654777527, 0.35692235827445984, 0.3546740710735321, 0.35243961215019226, 0.349816232919693, 0.35567015409469604, 0.35231485962867737, 0.3486785590648651, 0.35001054406166077, 0.34874990582466125, 0.35194164514541626, 0.3539067804813385, 0.348347544670105, 0.35494935512542725, 0.35152509808540344, 0.34135204553604126, 0.3479156792163849, 0.34889012575149536, 0.3503827452659607, 0.3495117723941803, 0.3451566994190216, 0.34634536504745483, 0.34823745489120483, 0.34743717312812805, 0.35348641872406006, 0.34741130471229553], "val_accuracy": [0.5426666736602783, 0.6576666831970215, 0.6840000152587891, 0.7020000219345093, 0.7226666808128357, 0.737333357334137, 0.750333309173584, 0.7616666555404663, 0.7689999938011169, 0.7879999876022339, 0.7933333516120911, 0.7963333129882812, 0.8073333501815796, 0.8169999718666077, 0.8173333406448364, 0.8223333358764648, 0.8309999704360962, 0.8333333134651184, 0.8413333296775818, 0.8453333377838135, 0.8383333086967468, 0.8453333377838135, 0.8489999771118164, 0.8456666469573975, 0.8539999723434448, 0.8519999980926514, 0.8550000190734863, 0.8566666841506958, 0.859666645526886, 0.8576666712760925, 0.8603333234786987, 0.8579999804496765, 0.8613333106040955, 0.8656666874885559, 0.8640000224113464, 0.8653333187103271, 0.8663333058357239, 0.8640000224113464, 0.8696666955947876, 0.8663333058357239, 0.8700000047683716, 0.8663333058357239, 0.8690000176429749, 0.8690000176429749, 0.8706666827201843, 0.8693333268165588, 0.8690000176429749, 0.871666669845581, 0.875, 0.8740000128746033, 0.8730000257492065, 0.875333309173584, 0.8763333559036255, 0.874666690826416, 0.8769999742507935, 0.8790000081062317, 0.8790000081062317, 0.8793333172798157, 0.878000020980835, 0.8763333559036255, 0.8816666603088379, 0.878333330154419, 0.8813333511352539, 0.8786666393280029, 0.8820000290870667, 0.875, 0.8796666860580444, 0.8826666474342346, 0.8796666860580444, 0.8813333511352539, 0.8793333172798157, 0.8823333382606506, 0.8856666684150696, 0.8840000033378601, 0.8856666684150696, 0.8823333382606506, 0.8820000290870667, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2230398654937744, 1.862982153892517, 1.3816237449645996, 1.0851303339004517, 0.9275878071784973, 0.8250223994255066, 0.768286406993866, 0.7195660471916199, 0.6815505623817444, 0.6593747138977051, 0.6241509318351746, 0.6082463264465332, 0.5926167368888855, 0.5776220560073853, 0.5563507676124573, 0.5429595112800598, 0.5276032090187073, 0.5153403878211975, 0.5133135318756104, 0.4989137053489685, 0.489594429731369, 0.4720648229122162, 0.4691261947154999, 0.4616977274417877, 0.45094266533851624, 0.4398399889469147, 0.43379855155944824, 0.4246087670326233, 0.4274156987667084, 0.41442742943763733, 0.40538519620895386, 0.39235392212867737, 0.3943283259868622, 0.38476890325546265, 0.38585028052330017, 0.3794403076171875, 0.369637668132782, 0.36425331234931946, 0.3566455543041229, 0.3571341037750244, 0.35251617431640625, 0.3418107032775879, 0.3364832401275635, 0.33553799986839294, 0.3278997242450714, 0.31681978702545166, 0.31678512692451477, 0.3109266459941864, 0.30868127942085266, 0.3047705888748169, 0.2981787621974945, 0.2907607853412628, 0.29321762919425964, 0.29199904203414917, 0.2896965742111206, 0.28265315294265747, 0.2766956090927124, 0.271853506565094, 0.2682308256626129, 0.26340845227241516, 0.2635493576526642, 0.2580930292606354, 0.2581580877304077, 0.25248685479164124], "accuracy": [0.26376965641975403, 0.48831066489219666, 0.5674283504486084, 0.6169594526290894, 0.6653017997741699, 0.6968696117401123, 0.7199841737747192, 0.7359662055969238, 0.7504953145980835, 0.7573636174201965, 0.769911527633667, 0.7845727205276489, 0.7794214487075806, 0.7898560166358948, 0.8030643463134766, 0.7985734939575195, 0.8090080618858337, 0.8112534880638123, 0.8121780753135681, 0.819442629814148, 0.8193105459213257, 0.8280280232429504, 0.8276317715644836, 0.8374059200286865, 0.8378021121025085, 0.8421608805656433, 0.8445383906364441, 0.8485008478164673, 0.8495575189590454, 0.850350022315979, 0.8558974862098694, 0.8601241707801819, 0.8603883385658264, 0.8605204224586487, 0.8640866279602051, 0.8639545440673828, 0.8634262084960938, 0.8687095642089844, 0.8716153502464294, 0.8702945709228516, 0.8728041052818298, 0.8786157965660095, 0.8795403242111206, 0.8795403242111206, 0.8831065893173218, 0.8868049383163452, 0.8868049383163452, 0.8861445188522339, 0.8894465565681458, 0.8924844861030579, 0.8916919827461243, 0.8982961177825928, 0.8967111110687256, 0.8953903317451477, 0.8956544995307922, 0.897899866104126, 0.8988244533538818, 0.9013340473175049, 0.9034473896026611, 0.9059569239616394, 0.902390718460083, 0.9033153057098389, 0.9031832218170166, 0.9079381823539734], "val_loss": [2.037989616394043, 1.5056111812591553, 1.0356427431106567, 0.8271660208702087, 0.7411548495292664, 0.6793237924575806, 0.640920877456665, 0.6058652997016907, 0.574170708656311, 0.5569078922271729, 0.5362064242362976, 0.5213805437088013, 0.5063846707344055, 0.4942258298397064, 0.4806939959526062, 0.4732469916343689, 0.46426233649253845, 0.4573742151260376, 0.4532356858253479, 0.4463978409767151, 0.4338117241859436, 0.4314596652984619, 0.42823415994644165, 0.42130085825920105, 0.41017815470695496, 0.414326936006546, 0.4041879177093506, 0.403655469417572, 0.3942839503288269, 0.39310628175735474, 0.38828060030937195, 0.3846965730190277, 0.3857208788394928, 0.37894442677497864, 0.3799630403518677, 0.376719206571579, 0.37464794516563416, 0.37116900086402893, 0.3670143783092499, 0.3680230975151062, 0.3628527820110321, 0.359578937292099, 0.36018773913383484, 0.3567456901073456, 0.35485586524009705, 0.35418200492858887, 0.35159727931022644, 0.3508150279521942, 0.3503452241420746, 0.34686121344566345, 0.3437269330024719, 0.34875911474227905, 0.34437525272369385, 0.33905497193336487, 0.34222090244293213, 0.3410351872444153, 0.3392069637775421, 0.33714425563812256, 0.3354988098144531, 0.34162387251853943, 0.34233224391937256, 0.34098756313323975, 0.3410934507846832, 0.3324693739414215], "val_accuracy": [0.5376666784286499, 0.6666666865348816, 0.6823333501815796, 0.7099999785423279, 0.7323333621025085, 0.749666690826416, 0.7613333463668823, 0.7766666412353516, 0.7860000133514404, 0.7889999747276306, 0.8066666722297668, 0.8106666803359985, 0.8199999928474426, 0.8206666707992554, 0.8263333439826965, 0.8296666741371155, 0.8333333134651184, 0.8343333601951599, 0.8373333215713501, 0.8333333134651184, 0.8463333249092102, 0.8423333168029785, 0.8446666598320007, 0.8513333201408386, 0.8553333282470703, 0.8483333587646484, 0.8556666374206543, 0.8526666760444641, 0.8610000014305115, 0.8569999933242798, 0.8606666922569275, 0.8636666536331177, 0.8629999756813049, 0.8643333315849304, 0.8619999885559082, 0.862666666507721, 0.8683333396911621, 0.8663333058357239, 0.862333357334137, 0.8663333058357239, 0.8700000047683716, 0.8706666827201843, 0.8693333268165588, 0.8703333139419556, 0.8736666440963745, 0.8706666827201843, 0.8713333606719971, 0.871666669845581, 0.875, 0.8773333430290222, 0.8756666779518127, 0.875333309173584, 0.8706666827201843, 0.8790000081062317, 0.8743333220481873, 0.8820000290870667, 0.8793333172798157, 0.8806666731834412, 0.8849999904632568, 0.8796666860580444, 0.8790000081062317, 0.8796666860580444, 0.8809999823570251, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 2, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [84], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 5, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 67, 99, 61, 1]], "fitness": -0.11028571426868439, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.3055226802825928, 2.3033480644226074, 2.30302357673645, 2.303010940551758, 2.3029534816741943, 2.302957773208618, 2.3028485774993896, 2.3029189109802246, 2.3028388023376465], "accuracy": [0.08955223858356476, 0.0956280529499054, 0.10315678268671036, 0.1026284471154213, 0.1026284471154213, 0.09932637959718704, 0.09985470771789551, 0.10130762308835983, 0.09945846349000931], "val_loss": [2.3032491207122803, 2.3028674125671387, 2.3027679920196533, 2.302727222442627, 2.3027052879333496, 2.3026912212371826, 2.3026816844940186, 2.3026747703552246, 2.3026695251464844], "val_accuracy": [0.09833333641290665, 0.10733333230018616, 0.10766666382551193, 0.10999999940395355, 0.10999999940395355, 0.10733333230018616, 0.10866666585206985, 0.10866666585206985, 0.10866666585206985]}, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [39, 60], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 2, 3, 2, 3, 5, 3], [3, 2, 0, 2, 4, 3, 1], [16, 16], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 4, 6, 3, 9], [0, 5, 1, 4], [99, 75], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 2, 4, 8, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 8, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 14, 7, 7, 1, 9, 5, 4, 2, 18, 9, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.square(tf.math.multiply(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [1, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 3, 3, 6, 8, 5, 4, 1, 5, 2, 8], [0, 0, 3, 3, 0, 4, 4, 1, 0, 0], [16, 99, 25, 99, 10, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303361415863037, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 8, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 6, 0, 3, 5], [0, 2, 0, 3, 5], [16, 28], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 4, 6, 8, 4, 4, 1, 4, 2, 8], [0, 0, 4, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 69, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 5, 5, 2, 2, 1, 1, 1, 18, 9, 9, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]