[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216413021087646, 1.8750296831130981, 1.4082993268966675, 1.1128520965576172, 0.9521240592002869, 0.8488616943359375, 0.7928942441940308, 0.734335720539093, 0.6975399255752563, 0.6710397005081177, 0.6533756852149963, 0.6273555159568787, 0.6119940876960754, 0.590533435344696, 0.5773518681526184, 0.5597467422485352, 0.5373610854148865, 0.5365958213806152, 0.5193802714347839, 0.5132455825805664, 0.5017303824424744, 0.49147725105285645, 0.4908615052700043, 0.4732842445373535, 0.4605884850025177, 0.46010875701904297, 0.4524039626121521, 0.4488357901573181, 0.4356415569782257, 0.4327396750450134, 0.4325893819332123, 0.421444833278656, 0.4156487286090851, 0.4029586911201477, 0.4065552055835724, 0.3915887176990509, 0.3957442045211792, 0.38750892877578735, 0.37763652205467224, 0.37025049328804016, 0.37264877557754517, 0.3617102801799774, 0.3544989228248596, 0.35031598806381226, 0.35390588641166687, 0.3426017165184021, 0.3359079957008362], "accuracy": [0.2705058753490448, 0.47629112005233765, 0.550521731376648, 0.6107515692710876, 0.6597543358802795, 0.6869634389877319, 0.7103421092033386, 0.7351737022399902, 0.7448157668113708, 0.7584202885627747, 0.7625148296356201, 0.7693831920623779, 0.7734777331352234, 0.7866860628128052, 0.7861577272415161, 0.7893276810646057, 0.8018755912780762, 0.804649293422699, 0.8112534880638123, 0.8105930685997009, 0.8177255392074585, 0.819442629814148, 0.8215559124946594, 0.8269713521003723, 0.8325188159942627, 0.8364813327789307, 0.8327829837799072, 0.8404437899589539, 0.843481719493866, 0.8393871188163757, 0.8433496356010437, 0.8486329317092896, 0.848368763923645, 0.8525954484939575, 0.8540483713150024, 0.8565579056739807, 0.8548408150672913, 0.8613129258155823, 0.8654074668884277, 0.8636903762817383, 0.8654074668884277, 0.8691058158874512, 0.8697662353515625, 0.8732003569602966, 0.8722757697105408, 0.8772949576377869, 0.8819178342819214], "val_loss": [2.0378541946411133, 1.5166728496551514, 1.0404525995254517, 0.8267946243286133, 0.7379885911941528, 0.6905206441879272, 0.6400238275527954, 0.6048363447189331, 0.5827669501304626, 0.5620096325874329, 0.5397025346755981, 0.5213223099708557, 0.5091581344604492, 0.49382874369621277, 0.4817981421947479, 0.4721619486808777, 0.4613300859928131, 0.44887852668762207, 0.45742741227149963, 0.437165766954422, 0.4294811189174652, 0.4272328317165375, 0.4188768267631531, 0.4085274338722229, 0.4050142765045166, 0.4113456606864929, 0.4040704071521759, 0.3903067708015442, 0.39118877053260803, 0.38968074321746826, 0.3839644491672516, 0.3829856216907501, 0.37455904483795166, 0.3736302852630615, 0.3770104944705963, 0.3665737211704254, 0.36535704135894775, 0.3677650988101959, 0.36637091636657715, 0.3634982109069824, 0.36258670687675476, 0.3553087115287781, 0.35658004879951477, 0.3545708954334259, 0.35271769762039185, 0.3504222333431244, 0.34601089358329773], "val_accuracy": [0.5139999985694885, 0.6523333191871643, 0.687666654586792, 0.7120000123977661, 0.7360000014305115, 0.7506666779518127, 0.7636666893959045, 0.7753333449363708, 0.7829999923706055, 0.7943333387374878, 0.8043333292007446, 0.8096666932106018, 0.8183333277702332, 0.8276666402816772, 0.8326666951179504, 0.8379999995231628, 0.8383333086967468, 0.8443333506584167, 0.8389999866485596, 0.846666693687439, 0.8516666889190674, 0.8503333330154419, 0.8539999723434448, 0.8629999756813049, 0.859333336353302, 0.8566666841506958, 0.859666645526886, 0.8643333315849304, 0.8676666617393494, 0.8659999966621399, 0.8706666827201843, 0.8679999709129333, 0.871999979019165, 0.874666690826416, 0.8733333349227905, 0.8763333559036255, 0.8766666650772095, 0.8740000128746033, 0.8709999918937683, 0.8730000257492065, 0.871999979019165, 0.8793333172798157, 0.8769999742507935, 0.875, 0.8769999742507935, 0.875, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 0, 2, 0], [16, 99, 96, 99, 61, 25]], "fitness": -0.121714286506176, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [90.49650573730469, 3592.07666015625, 11831.259765625, 25315.990234375, 77225.8359375, 137673.640625, 142493.234375, 156104.96875, 159874.59375, 161231.03125, 173060.0625, 191994.15625, 200024.609375, 216670.78125], "accuracy": [0.09985470771789551, 0.09734513610601425, 0.09259014576673508, 0.09602430462837219, 0.09377889335155487, 0.10777968913316727, 0.11028926074504852, 0.12151630967855453, 0.11438383162021637, 0.11689341068267822, 0.11517632752656937, 0.11359133571386337, 0.1080438494682312, 0.09959053993225098], "val_loss": [624.0588989257812, 5901.7392578125, 17773.591796875, 23006.365234375, 97404.8984375, 100121.21875, 112809.1328125, 117978.0234375, 118500.03125, 120375.8515625, 125570.3671875, 132465.25, 136621.546875, 151845.296875], "val_accuracy": [0.09799999743700027, 0.10966666787862778, 0.09966666996479034, 0.0976666659116745, 0.10066666454076767, 0.12033333629369736, 0.11966666579246521, 0.1263333261013031, 0.12666666507720947, 0.12133333086967468, 0.07800000160932541, 0.0716666653752327, 0.06499999761581421, 0.06266666948795319]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [2, 1, 0, 2], [16, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [1, 1], [6], [0], [88], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 2], [16, 99, 49, 99, 72, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 9, 5, 4, 2, 1, 0, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 49], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [2, 2, 0, 1], [16, 16], [0, 0, 0, 1, 1], [0, 5, 7], [4, 1], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 0, 5, 3], [0, 0, 4, 4, 0, 0, 3, 1, 2, 0, 2, 0], [16, 64, 96, 99, 61, 1]], "fitness": -0.09200000017881393, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(grad, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.30924391746521, 2.3116400241851807, 2.309627056121826, 2.3108339309692383, 2.3095622062683105, 2.3101909160614014], "accuracy": [0.09113723784685135, 0.08902391046285629, 0.09351472556591034, 0.0874389111995697, 0.09021265059709549, 0.09377889335155487], "val_loss": [2.3083271980285645, 2.3083271980285645, 2.3083271980285645, 2.3083271980285645, 2.3083271980285645, 2.3083271980285645], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}, "mapping_values": [1, 8, 5, 3, 2, 4, 2, 2, 0, 5, 3, 2, 0, 27, 15, 12, 6], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 4], [3, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 6], [77], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 6, 1, 2, 2, 8], [0, 0, 0, 3, 0, 2, 1, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08914285898208618, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(beta, tf.math.subtract(alpha, alpha)))", "other_info": {"loss": [2.3101768493652344, 2.3103084564208984, 2.3091659545898438, 2.310760498046875, 2.3083651065826416, 2.3101842403411865], "accuracy": [0.09113723784685135, 0.08955223858356476, 0.0948355570435524, 0.0878351628780365, 0.09893012791872025, 0.09021265059709549], "val_loss": [2.3082354068756104, 2.3082354068756104, 2.3082354068756104, 2.3082354068756104, 2.3082354068756104, 2.3082354068756104], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 3, 1, 2, 1, 16, 8, 8, 4], "tree_depth": 12}]