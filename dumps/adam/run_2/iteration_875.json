[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214345932006836, 1.868102788925171, 1.3896009922027588, 1.0878336429595947, 0.9428150653839111, 0.8361689448356628, 0.7653056383132935, 0.724026620388031, 0.6890437602996826, 0.648470401763916, 0.6395193934440613, 0.6092587113380432, 0.5903543829917908, 0.5690797567367554, 0.5587863326072693, 0.5582857728004456, 0.5354735255241394, 0.522912859916687, 0.5038193464279175, 0.4972081780433655, 0.4826773405075073, 0.4720800518989563, 0.4613572955131531, 0.4475191831588745, 0.4568096399307251, 0.447131872177124, 0.4443371295928955, 0.4304490089416504, 0.42693933844566345, 0.41462069749832153, 0.408614844083786, 0.4104006588459015, 0.4020630717277527, 0.39057186245918274, 0.3823987543582916, 0.37780579924583435, 0.37204867601394653, 0.3627667725086212, 0.36799079179763794, 0.3556699752807617, 0.3596820533275604, 0.3523765206336975, 0.3404853940010071, 0.33530303835868835, 0.3380942642688751, 0.32682502269744873, 0.3207497298717499, 0.31433162093162537, 0.31164631247520447, 0.3087562918663025, 0.3033169209957123, 0.3027823865413666, 0.2943946123123169, 0.29689887166023254, 0.28988006711006165, 0.28847047686576843, 0.28587427735328674, 0.27699801325798035, 0.27405598759651184, 0.26581332087516785, 0.2673119902610779, 0.26140907406806946, 0.260459303855896, 0.2467355579137802, 0.25486820936203003, 0.23810970783233643, 0.2424597144126892, 0.23862555623054504, 0.23221221566200256, 0.23324896395206451, 0.22707253694534302], "accuracy": [0.2767137885093689, 0.4842160940170288, 0.5630695819854736, 0.6155065298080444, 0.6617355942726135, 0.6991150379180908, 0.7218332886695862, 0.7343811988830566, 0.7516840696334839, 0.763967752456665, 0.7671377658843994, 0.7775723338127136, 0.7897239327430725, 0.7951393723487854, 0.793422281742096, 0.7950072884559631, 0.8074230551719666, 0.8103289008140564, 0.8169330358505249, 0.8202351331710815, 0.8248580098152161, 0.8297450542449951, 0.8304054737091064, 0.8416325449943542, 0.8367455005645752, 0.8407079577445984, 0.8436138033866882, 0.8494254350662231, 0.8502179384231567, 0.8532558679580688, 0.8581429123878479, 0.8537842035293579, 0.8533879518508911, 0.8607845902442932, 0.8646149635314941, 0.8716153502464294, 0.8668603897094727, 0.8712190985679626, 0.8659358024597168, 0.8725399374961853, 0.8733324408531189, 0.8732003569602966, 0.8792761564254761, 0.8782195448875427, 0.8778232932090759, 0.880729079246521, 0.8848236799240112, 0.8841632604598999, 0.8864086866378784, 0.8883898854255676, 0.8911636471748352, 0.8893144726753235, 0.8943336606025696, 0.894069492816925, 0.8920882344245911, 0.8963148593902588, 0.8963148593902588, 0.8967111110687256, 0.89988112449646, 0.9030511379241943, 0.9014661312103271, 0.9030511379241943, 0.9031832218170166, 0.9097873568534851, 0.9064852595329285, 0.9116365313529968, 0.9113723635673523, 0.9075419306755066, 0.9158631563186646, 0.9122969508171082, 0.9190331697463989], "val_loss": [2.0340654850006104, 1.502832055091858, 1.0178916454315186, 0.8106468319892883, 0.7244035005569458, 0.6728048324584961, 0.6317101120948792, 0.6063807010650635, 0.5745803117752075, 0.5540341734886169, 0.53548264503479, 0.5282576680183411, 0.5108135342597961, 0.4964842200279236, 0.48768848180770874, 0.48056095838546753, 0.47204965353012085, 0.4627029597759247, 0.45192965865135193, 0.4457276463508606, 0.4389081299304962, 0.4316253364086151, 0.42681559920310974, 0.4221825897693634, 0.41909289360046387, 0.4128178656101227, 0.40926897525787354, 0.40265804529190063, 0.3994162976741791, 0.3950255811214447, 0.3919123411178589, 0.3928668200969696, 0.38535359501838684, 0.38777437806129456, 0.38101500272750854, 0.37684813141822815, 0.37653493881225586, 0.3748520016670227, 0.37483641505241394, 0.3650195300579071, 0.3654923439025879, 0.3693280816078186, 0.36254850029945374, 0.36499014496803284, 0.3611634075641632, 0.357750803232193, 0.3539092540740967, 0.3564733862876892, 0.35726839303970337, 0.3514457941055298, 0.35058653354644775, 0.35080403089523315, 0.35044974088668823, 0.34919774532318115, 0.3479282557964325, 0.347564697265625, 0.34496834874153137, 0.345676064491272, 0.3457789719104767, 0.34725630283355713, 0.34605497121810913, 0.344053715467453, 0.3409166932106018, 0.3416135609149933, 0.34167391061782837, 0.34488341212272644, 0.3396391272544861, 0.34162387251853943, 0.34302589297294617, 0.3376270830631256, 0.3378317058086395], "val_accuracy": [0.5836666822433472, 0.6729999780654907, 0.6916666626930237, 0.7246666550636292, 0.749666690826416, 0.7609999775886536, 0.7753333449363708, 0.7796666622161865, 0.7933333516120911, 0.8003333210945129, 0.8073333501815796, 0.8119999766349792, 0.8153333067893982, 0.8226666450500488, 0.8183333277702332, 0.8273333311080933, 0.8306666612625122, 0.8346666693687439, 0.8370000123977661, 0.8383333086967468, 0.840666651725769, 0.8460000157356262, 0.846666693687439, 0.8463333249092102, 0.8510000109672546, 0.8503333330154419, 0.8513333201408386, 0.8556666374206543, 0.8553333282470703, 0.8550000190734863, 0.8560000061988831, 0.8560000061988831, 0.862666666507721, 0.862333357334137, 0.8619999885559082, 0.8619999885559082, 0.8636666536331177, 0.8650000095367432, 0.862333357334137, 0.8673333525657654, 0.8663333058357239, 0.8669999837875366, 0.8676666617393494, 0.8676666617393494, 0.8656666874885559, 0.871999979019165, 0.8700000047683716, 0.8730000257492065, 0.8703333139419556, 0.8733333349227905, 0.8730000257492065, 0.8730000257492065, 0.871999979019165, 0.8723333477973938, 0.875, 0.8769999742507935, 0.8773333430290222, 0.878000020980835, 0.875333309173584, 0.8709999918937683, 0.875, 0.8773333430290222, 0.878333330154419, 0.8786666393280029, 0.8759999871253967, 0.8809999823570251, 0.8799999952316284, 0.8793333172798157, 0.8769999742507935, 0.8786666393280029, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 2, 0, 6], [0, 1, 0, 2], [78, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [42], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 0, 0], [70, 43, 31, 99, 61, 1, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))))), alpha), tf.math.add(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5, 2, 5], [0, 1, 0, 2, 1, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 0, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.add(alpha, tf.math.square(alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.1674161052572673e+25, 4221.95361328125, 7295.849609375, 10163.0244140625, 13054.1455078125, 16600.73046875], "accuracy": [0.09826971590518951, 0.10130762308835983, 0.10619468986988068, 0.10632677376270294, 0.10513802617788315, 0.10091137140989304], "val_loss": [2678.43798828125, 5426.5869140625, 8392.9990234375, 12285.470703125, 15830.28515625, 18241.271484375], "val_accuracy": [0.10366666316986084, 0.0976666659116745, 0.10066666454076767, 0.1003333330154419, 0.09833333641290665, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 94], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 5, 0, 3, 2], [0, 2, 0, 0], [85, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 6, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [54, 99, 96, 85, 61, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), grad), tf.math.divide_no_nan(sigma, alpha))", "other_info": {"loss": [2.310572862625122, 2.310253858566284, 2.3106250762939453, 2.310596466064453, 2.310502052307129, 2.3105077743530273], "accuracy": [0.09298639744520187, 0.08915598690509796, 0.09153348207473755, 0.09642054885625839, 0.09126931428909302, 0.08994849026203156], "val_loss": [2.3084237575531006, 2.308424711227417, 2.3084254264831543, 2.308426856994629, 2.3084278106689453, 2.3084287643432617], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [4, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8, 7, 1, 9, 7], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0, 7, 4, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 28, 15, 13, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.add(alpha, beta)))))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(grad, grad)), sigma)", "other_info": {"loss": [2.310439109802246, 2.3132400512695312, 2.318063259124756, 2.3203275203704834, 2.3249948024749756, 2.3287229537963867], "accuracy": [0.08994849026203156, 0.08413683623075485, 0.08677849918603897, 0.08387266844511032, 0.07726852595806122, 0.07449477910995483], "val_loss": [2.31093692779541, 2.314734935760498, 2.318814992904663, 2.322985887527466, 2.327333927154541, 2.3318939208984375], "val_accuracy": [0.0860000029206276, 0.08500000089406967, 0.08566666394472122, 0.08500000089406967, 0.08566666394472122, 0.0860000029206276]}}]