[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229442596435547, 1.8687012195587158, 1.3983757495880127, 1.0999497175216675, 0.9366534352302551, 0.8412352204322815, 0.7735363841056824, 0.729385256767273, 0.6981068849563599, 0.65839022397995, 0.6365296840667725, 0.6153674125671387, 0.603982150554657, 0.5784144997596741, 0.5643661618232727, 0.5486294031143188, 0.5414567589759827, 0.5295761823654175, 0.5108968019485474, 0.5013388395309448, 0.4947608709335327, 0.4818613529205322, 0.4737589359283447, 0.4673701524734497, 0.45235568284988403, 0.44643113017082214, 0.44173529744148254, 0.434549480676651, 0.4283149242401123, 0.4176439940929413, 0.4186161160469055, 0.40698784589767456, 0.39659497141838074, 0.3997521996498108, 0.39540183544158936, 0.38627883791923523, 0.38002192974090576, 0.3740765154361725, 0.37605488300323486, 0.3678414523601532, 0.3608073890209198, 0.3535475432872772, 0.3436771631240845, 0.33806443214416504, 0.3342144191265106, 0.33194926381111145, 0.32543015480041504, 0.32502299547195435, 0.32016050815582275, 0.31761476397514343, 0.3015921711921692, 0.30133330821990967, 0.29492172598838806, 0.2983838617801666, 0.2942841053009033, 0.2867538332939148, 0.28305912017822266, 0.2785003185272217, 0.27324649691581726, 0.2692231833934784, 0.2675817906856537, 0.2686806321144104, 0.2681012451648712, 0.2627946138381958, 0.25517538189888, 0.25126776099205017], "accuracy": [0.2654867172241211, 0.49451854825019836, 0.563730001449585, 0.6207898855209351, 0.6682076454162598, 0.703209638595581, 0.7260599732398987, 0.7378153204917908, 0.7503632307052612, 0.7625148296356201, 0.7695152759552002, 0.7796856164932251, 0.7796856164932251, 0.7910447716712952, 0.8000264167785645, 0.8030643463134766, 0.8063663840293884, 0.8100647330284119, 0.819970965385437, 0.8189142942428589, 0.8211596608161926, 0.829216718673706, 0.8319904804229736, 0.8372738361358643, 0.8370096683502197, 0.841500461101532, 0.8429533839225769, 0.8467837572097778, 0.8466516733169556, 0.8500858545303345, 0.8491612672805786, 0.8598600029945374, 0.8551049828529358, 0.8610487580299377, 0.8638224601745605, 0.8605204224586487, 0.8636903762817383, 0.8704266548156738, 0.8709549307823181, 0.8702945709228516, 0.8691058158874512, 0.8735966086387634, 0.8791441321372986, 0.882710337638855, 0.8816536664962769, 0.8819178342819214, 0.882710337638855, 0.885219931602478, 0.887597382068634, 0.8881257176399231, 0.8956544995307922, 0.8916919827461243, 0.8948619961738586, 0.8931449055671692, 0.8960506916046143, 0.8981640338897705, 0.8943336606025696, 0.9006736278533936, 0.8997490406036377, 0.9039757251739502, 0.9019944667816162, 0.8996169567108154, 0.9060890078544617, 0.9051644206047058, 0.9060890078544617, 0.9070135951042175], "val_loss": [2.0413951873779297, 1.5157084465026855, 1.0389400720596313, 0.8310173153877258, 0.7492355108261108, 0.6941139101982117, 0.6537046432495117, 0.6174396872520447, 0.5951337814331055, 0.5730221271514893, 0.5541332960128784, 0.5378767251968384, 0.525669515132904, 0.5122873783111572, 0.5018233060836792, 0.4935062527656555, 0.48423707485198975, 0.4706604778766632, 0.47273993492126465, 0.45384854078292847, 0.4497767686843872, 0.4411694407463074, 0.4405546188354492, 0.4323332905769348, 0.427428662776947, 0.42123866081237793, 0.4186876714229584, 0.41065967082977295, 0.40819108486175537, 0.4050890803337097, 0.402482271194458, 0.3931809067726135, 0.3914250433444977, 0.39095190167427063, 0.38859811425209045, 0.3795219659805298, 0.38339486718177795, 0.37527552247047424, 0.36888620257377625, 0.3744831681251526, 0.3699607253074646, 0.3659866452217102, 0.3625383675098419, 0.3587803542613983, 0.359854519367218, 0.3549414873123169, 0.3563084304332733, 0.3531712293624878, 0.3572482764720917, 0.35080501437187195, 0.3449268341064453, 0.3465503752231598, 0.3455706834793091, 0.3444250524044037, 0.34287938475608826, 0.34567609429359436, 0.3421267867088318, 0.3384579122066498, 0.33885401487350464, 0.33780407905578613, 0.33682164549827576, 0.3363884687423706, 0.3444187045097351, 0.3418591022491455, 0.3364153504371643, 0.33548662066459656], "val_accuracy": [0.5453333258628845, 0.6586666703224182, 0.6850000023841858, 0.7099999785423279, 0.7296666502952576, 0.7516666650772095, 0.7580000162124634, 0.7753333449363708, 0.7820000052452087, 0.7910000085830688, 0.7983333468437195, 0.8040000200271606, 0.8176666498184204, 0.8183333277702332, 0.8216666579246521, 0.8276666402816772, 0.8296666741371155, 0.8353333473205566, 0.8316666483879089, 0.8423333168029785, 0.8429999947547913, 0.843666672706604, 0.8473333120346069, 0.8516666889190674, 0.8519999980926514, 0.8516666889190674, 0.8536666631698608, 0.8543333411216736, 0.8556666374206543, 0.8586666584014893, 0.859666645526886, 0.8629999756813049, 0.8633333444595337, 0.8606666922569275, 0.8643333315849304, 0.8646666407585144, 0.8656666874885559, 0.8669999837875366, 0.8726666569709778, 0.8676666617393494, 0.8669999837875366, 0.8706666827201843, 0.8743333220481873, 0.8763333559036255, 0.8726666569709778, 0.8776666522026062, 0.874666690826416, 0.8756666779518127, 0.8713333606719971, 0.8743333220481873, 0.8790000081062317, 0.8796666860580444, 0.8806666731834412, 0.8803333044052124, 0.8776666522026062, 0.878000020980835, 0.8813333511352539, 0.8840000033378601, 0.8820000290870667, 0.8826666474342346, 0.8853333592414856, 0.8820000290870667, 0.8766666650772095, 0.878000020980835, 0.8836666941642761, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 5, 3, 0, 3, 5, 6], [0, 2, 0, 3], [70, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 2, 8], [0, 0, 0, 3, 4, 0, 1, 1, 2, 0, 5, 5], [16, 85, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 11, 7, 4, 2, 2, 1, 1, 0, 26, 14, 12, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, alpha)))), beta)), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 2, 4, 6], [2, 1, 0, 0, 2, 2, 0, 2], [17, 39, 92], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 5, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 8, 8, 3, 10, 6, 4, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, alpha), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7.537330150604248, 58.844112396240234, 201.68572998046875, 495.1337890625, 994.396484375, 1775.9322509765625], "accuracy": [0.09959053993225098, 0.10051512718200684, 0.0948355570435524, 0.09972262382507324, 0.10276053100824356, 0.107647605240345], "val_loss": [20.517780303955078, 95.77046966552734, 264.9666442871094, 576.823486328125, 1079.73095703125, 1822.539306640625], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 4, 8, 4, 4, 9], [0, 1, 0, 1, 1, 2], [87, 39, 55], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [43, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 3, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.pow(tf.math.pow(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 5, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 5, 3, 1, 5, 1, 8, 6, 2, 6, 1, 0], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 6], [16, 99, 96, 86, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 25, 14, 11, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)))), tf.math.divide_no_nan(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))))", "other_info": {"loss": [2.3114013671875, 2.309612512588501, 2.3169240951538086, 2.307443141937256, 2.303041934967041, 2.3023934364318848, 2.3031342029571533, 2.303342819213867, 2.3054065704345703, 4.149776458740234, 65.08731842041016], "accuracy": [0.09153348207473755, 0.09259014576673508, 0.09787346422672272, 0.09853387624025345, 0.09972262382507324, 0.1088363528251648, 0.09893012791872025, 0.09721305221319199, 0.09668471664190292, 0.09959053993225098, 0.0936468094587326], "val_loss": [2.3090898990631104, 2.3100128173828125, 2.304145574569702, 2.3027234077453613, 2.3028485774993896, 2.303130865097046, 2.303239583969116, 2.304983139038086, 2.318471908569336, 12.487422943115234, 257.0293884277344], "val_accuracy": [0.08699999749660492, 0.08733333647251129, 0.09833333641290665, 0.10000000149011612, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09666666388511658, 0.0976666659116745, 0.09933333098888397]}}]