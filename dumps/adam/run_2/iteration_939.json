[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225501537323, 1.8639622926712036, 1.3874832391738892, 1.0896015167236328, 0.9343914985656738, 0.8394677639007568, 0.7778205275535583, 0.7353003025054932, 0.6998883485794067, 0.6616290807723999, 0.6427611112594604, 0.6235743165016174, 0.6058246493339539, 0.5831233859062195, 0.5683573484420776, 0.5499700307846069, 0.5414518713951111, 0.5324040055274963, 0.5189266800880432, 0.5082631707191467, 0.4928431510925293, 0.5004965662956238, 0.4763196110725403, 0.4719885587692261, 0.46204060316085815, 0.4473053216934204, 0.44521090388298035, 0.44227901101112366, 0.4287863075733185, 0.422468900680542, 0.41797903180122375, 0.41350314021110535, 0.40865445137023926, 0.4017711877822876, 0.39432090520858765, 0.39437925815582275, 0.3917970061302185, 0.3800644874572754, 0.37680602073669434, 0.3764279782772064, 0.36462536454200745, 0.35443800687789917, 0.3508989214897156, 0.35275977849960327, 0.3437921702861786, 0.33667826652526855, 0.33071815967559814, 0.33262205123901367, 0.32420802116394043, 0.3210684061050415, 0.3184848129749298, 0.316383421421051, 0.3138970732688904, 0.3113982677459717, 0.2999289631843567, 0.2996431887149811, 0.2958426773548126, 0.2948944866657257, 0.28699958324432373, 0.2743854522705078], "accuracy": [0.28041210770606995, 0.48725399374961853, 0.5639941692352295, 0.6238277554512024, 0.6650376319885254, 0.6959450244903564, 0.7194558382034302, 0.7363624572753906, 0.7442874312400818, 0.7580240368843079, 0.7670056819915771, 0.7724210619926453, 0.7800818681716919, 0.7898560166358948, 0.7975168228149414, 0.8030643463134766, 0.8059701323509216, 0.8108572363853455, 0.8148196935653687, 0.817461371421814, 0.8277638554573059, 0.8185180425643921, 0.8333113193511963, 0.8335754871368408, 0.8313300609588623, 0.8404437899589539, 0.8381983637809753, 0.8437458872795105, 0.8477083444595337, 0.8521991968154907, 0.8469158411026001, 0.8527275323867798, 0.8539162874221802, 0.8590674996376038, 0.8618412613868713, 0.863558292388916, 0.8605204224586487, 0.86553955078125, 0.863558292388916, 0.8664641380310059, 0.8712190985679626, 0.8755778670310974, 0.8772949576377869, 0.8733324408531189, 0.8778232932090759, 0.8802007436752319, 0.8854840993881226, 0.8819178342819214, 0.882710337638855, 0.8914278149604797, 0.884691596031189, 0.8856161832809448, 0.8894465565681458, 0.8883898854255676, 0.8939374089241028, 0.8932769894599915, 0.8960506916046143, 0.8971073627471924, 0.8944657444953918, 0.9015982151031494], "val_loss": [2.036696195602417, 1.5119765996932983, 1.0544503927230835, 0.850595235824585, 0.7624695897102356, 0.703090250492096, 0.6614097356796265, 0.6250073313713074, 0.5992512702941895, 0.5809206366539001, 0.5569907426834106, 0.5450918674468994, 0.5249101519584656, 0.5124306678771973, 0.5048977136611938, 0.4896182119846344, 0.4799115061759949, 0.48731401562690735, 0.4696643054485321, 0.4587300717830658, 0.4447081983089447, 0.44482073187828064, 0.43864884972572327, 0.43413424491882324, 0.42626139521598816, 0.4254196882247925, 0.4152730405330658, 0.41430729627609253, 0.4097132980823517, 0.4025219678878784, 0.4000760018825531, 0.3961639404296875, 0.3941818177700043, 0.38894015550613403, 0.38514530658721924, 0.3868941366672516, 0.38221001625061035, 0.3791400194168091, 0.3756662607192993, 0.3710370659828186, 0.37360942363739014, 0.3629627227783203, 0.3655986189842224, 0.36449894309043884, 0.3618747591972351, 0.35624459385871887, 0.35895130038261414, 0.35381412506103516, 0.35030388832092285, 0.35067838430404663, 0.35408976674079895, 0.3498592972755432, 0.34299296140670776, 0.34232115745544434, 0.3436862826347351, 0.34328657388687134, 0.3386401832103729, 0.3434784412384033, 0.3434329032897949, 0.339516282081604], "val_accuracy": [0.5260000228881836, 0.6610000133514404, 0.6809999942779541, 0.7049999833106995, 0.7303333282470703, 0.7493333220481873, 0.7563333511352539, 0.7756666541099548, 0.7796666622161865, 0.7886666655540466, 0.796999990940094, 0.8036666512489319, 0.8083333373069763, 0.8143333196640015, 0.8180000185966492, 0.8226666450500488, 0.82833331823349, 0.8169999718666077, 0.8320000171661377, 0.8356666564941406, 0.8420000076293945, 0.8399999737739563, 0.8423333168029785, 0.8416666388511658, 0.8473333120346069, 0.8460000157356262, 0.8533333539962769, 0.8526666760444641, 0.8539999723434448, 0.8546666502952576, 0.8566666841506958, 0.8619999885559082, 0.8650000095367432, 0.8643333315849304, 0.8653333187103271, 0.8600000143051147, 0.8666666746139526, 0.8650000095367432, 0.8696666955947876, 0.871666669845581, 0.8659999966621399, 0.871999979019165, 0.8713333606719971, 0.8696666955947876, 0.8730000257492065, 0.8730000257492065, 0.8766666650772095, 0.871999979019165, 0.875333309173584, 0.8756666779518127, 0.875333309173584, 0.878333330154419, 0.8766666650772095, 0.878000020980835, 0.8830000162124634, 0.8756666779518127, 0.8759999871253967, 0.8813333511352539, 0.8790000081062317, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 2, 3], [16, 16], [0, 1, 0, 1, 1], [1, 4], [4, 2, 5], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 2, 0, 7, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 1, 5], [16, 69, 96, 99, 61, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 1, 5, 2, 3, 0, 29, 16, 13, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.math.pow(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta)))), tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.math.square(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 9, 0], [0, 1, 0, 2], [51, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 1, 2, 8], [0, 4, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5, 9], [0, 1, 0, 2], [39, 39, 94], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 3, 0, 3, 5, 6], [0, 2, 0, 3, 1], [16, 16], [0, 1], [5], [4], [3], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 7, 3, 8, 0, 9], [0, 0, 0, 3, 0, 0, 3, 0, 2, 1, 2], [16, 99, 96, 99, 61, 72, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 12, 7, 5, 2, 2, 1, 1, 0, 28, 17, 11, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(sigma, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(beta, alpha))), tf.math.sqrt(tf.math.negative(beta))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1122956800.0, 21789935616.0, 101946875904.0, 275948699648.0, 604767584256.0, 1099572051968.0], "accuracy": [0.1018359512090683, 0.09166556596755981, 0.09642054885625839, 0.10434553027153015, 0.10091137140989304, 0.10460969805717468], "val_loss": [5220017664.0, 41754943488.0, 140917932032.0, 334019788800.0, 652362579968.0, 1127269400576.0], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 8, 4, 2, 8, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 57, 92, 1]], "fitness": -0.09428571164608002, "mapping_values": [1, 9, 5, 4, 2, 7, 5, 2, 2, 2, 1, 1, 1, 21, 13, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(sigma, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.sqrt(sigma))), alpha)", "other_info": {"loss": [2.309206247329712, 2.3124186992645264, 2.3095033168792725, 2.3094866275787354, 2.3108396530151367, 2.309898614883423], "accuracy": [0.09126931428909302, 0.08479725569486618, 0.08942015469074249, 0.08836349099874496, 0.09285431355237961, 0.09655263274908066], "val_loss": [2.3090946674346924, 2.3090946674346924, 2.3090946674346924, 2.3090946674346924, 2.3090946674346924, 2.3090946674346924], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]