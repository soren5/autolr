[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223270893096924, 1.8656812906265259, 1.3921289443969727, 1.0857001543045044, 0.9301497340202332, 0.8401030898094177, 0.7584463357925415, 0.723654568195343, 0.677920401096344, 0.6573642492294312, 0.6245799660682678, 0.606333315372467, 0.5842095613479614, 0.5659194588661194, 0.5480856895446777, 0.5446333289146423, 0.5275427103042603, 0.5127332806587219, 0.5007113814353943, 0.49009254574775696, 0.4827404022216797, 0.47635096311569214, 0.4671463966369629, 0.45060819387435913, 0.4425584077835083, 0.43610328435897827, 0.4301011860370636, 0.4267665445804596, 0.41975629329681396, 0.42175236344337463, 0.4119354486465454, 0.4051889479160309, 0.3954695165157318, 0.38842639327049255, 0.37440651655197144, 0.36939525604248047, 0.37406042218208313, 0.37202778458595276, 0.352507084608078, 0.3529414236545563, 0.3493562936782837, 0.33696886897087097, 0.3440493047237396, 0.3311571478843689, 0.33302298188209534, 0.32615071535110474, 0.31956490874290466, 0.3173476755619049, 0.31126412749290466, 0.3103752136230469, 0.3025154769420624, 0.2994494140148163, 0.2952890396118164, 0.29041504859924316, 0.28535225987434387, 0.2938210964202881, 0.28266602754592896, 0.2809348702430725, 0.2705773711204529, 0.2685946822166443, 0.25968942046165466, 0.27165839076042175, 0.26159214973449707, 0.26201632618904114, 0.25019240379333496, 0.24856676161289215, 0.2514791190624237, 0.24005161225795746, 0.2384442239999771, 0.23634225130081177, 0.230789914727211, 0.22884489595890045, 0.22880977392196655, 0.22792339324951172, 0.2213195562362671, 0.22458907961845398, 0.21455378830432892], "accuracy": [0.2767137885093689, 0.4859331548213959, 0.5641262531280518, 0.6279223561286926, 0.6725663542747498, 0.7016246318817139, 0.7250033020973206, 0.7341170310974121, 0.7569673657417297, 0.7644960880279541, 0.7751948237419128, 0.7755910754203796, 0.7878747582435608, 0.7959318161010742, 0.8013472557067871, 0.7996301651000977, 0.8078193068504333, 0.8152159452438354, 0.8197067975997925, 0.8252542614936829, 0.822348415851593, 0.8284242749214172, 0.8296129703521729, 0.8397833704948425, 0.8418967127799988, 0.844010055065155, 0.8417646288871765, 0.8479725122451782, 0.8441421389579773, 0.8490291833877563, 0.8531237840652466, 0.8525954484939575, 0.8607845902442932, 0.8618412613868713, 0.8656716346740723, 0.8681812286376953, 0.8679170608520508, 0.8669924736022949, 0.8784837126731873, 0.8710870146751404, 0.8698983192443848, 0.8768987059593201, 0.8759741187095642, 0.8804649114608765, 0.8762382864952087, 0.8791441321372986, 0.8840311765670776, 0.8879936337471008, 0.8902390599250793, 0.8881257176399231, 0.8918240666389465, 0.8945978283882141, 0.8889182209968567, 0.8948619961738586, 0.8967111110687256, 0.8918240666389465, 0.9022586345672607, 0.8992207050323486, 0.90423983335495, 0.902390718460083, 0.9041078090667725, 0.8973715305328369, 0.9038436412811279, 0.9035794734954834, 0.9121648669242859, 0.9115044474601746, 0.9109761118888855, 0.9153348207473755, 0.9125610589981079, 0.9163914918899536, 0.9149385690689087, 0.9174481630325317, 0.9154669046401978, 0.9178444147109985, 0.9196935892105103, 0.9170519113540649, 0.9241843819618225], "val_loss": [2.044323205947876, 1.529363989830017, 1.060802698135376, 0.8491370677947998, 0.7556179761886597, 0.6992102265357971, 0.6544599533081055, 0.6225152015686035, 0.5945982933044434, 0.5732319355010986, 0.5559356212615967, 0.5396853685379028, 0.5306069254875183, 0.521857738494873, 0.5093486309051514, 0.49958938360214233, 0.49117130041122437, 0.4860377907752991, 0.4784591794013977, 0.4710990786552429, 0.46661943197250366, 0.45924055576324463, 0.4573635160923004, 0.44369393587112427, 0.43858858942985535, 0.4383454918861389, 0.43101510405540466, 0.4278491139411926, 0.4284636676311493, 0.42910051345825195, 0.41969457268714905, 0.41565728187561035, 0.4102632701396942, 0.40789005160331726, 0.4068344831466675, 0.40013691782951355, 0.4019876718521118, 0.3972853720188141, 0.39801472425460815, 0.3925451338291168, 0.3911566436290741, 0.38901132345199585, 0.3902280628681183, 0.3868064880371094, 0.38361334800720215, 0.3822910189628601, 0.38093000650405884, 0.3790559768676758, 0.38034510612487793, 0.37935513257980347, 0.37476179003715515, 0.3742484450340271, 0.3780462145805359, 0.373173326253891, 0.3769340515136719, 0.3724270761013031, 0.37009212374687195, 0.37191247940063477, 0.3652251064777374, 0.3713417947292328, 0.3639666438102722, 0.3686133623123169, 0.3630443811416626, 0.36434727907180786, 0.3662198781967163, 0.36883753538131714, 0.36407479643821716, 0.3736603856086731, 0.36224985122680664, 0.36235058307647705, 0.3647547960281372, 0.3570249378681183, 0.37030088901519775, 0.3624577522277832, 0.3649478256702423, 0.35583436489105225, 0.3622789978981018], "val_accuracy": [0.5203333497047424, 0.6449999809265137, 0.6703333258628845, 0.6986666917800903, 0.7203333377838135, 0.7429999709129333, 0.7580000162124634, 0.7676666378974915, 0.7806666493415833, 0.7889999747276306, 0.7926666736602783, 0.8033333420753479, 0.8043333292007446, 0.8113333582878113, 0.812333345413208, 0.8223333358764648, 0.824999988079071, 0.8286666870117188, 0.8303333520889282, 0.828000009059906, 0.8309999704360962, 0.8343333601951599, 0.8339999914169312, 0.8433333039283752, 0.8456666469573975, 0.8426666855812073, 0.8496666550636292, 0.8456666469573975, 0.843666672706604, 0.8463333249092102, 0.8503333330154419, 0.8486666679382324, 0.8560000061988831, 0.8556666374206543, 0.8556666374206543, 0.8556666374206543, 0.8543333411216736, 0.8583333492279053, 0.8583333492279053, 0.8616666793823242, 0.8610000014305115, 0.8619999885559082, 0.862333357334137, 0.8586666584014893, 0.8656666874885559, 0.8679999709129333, 0.8610000014305115, 0.8679999709129333, 0.8650000095367432, 0.8643333315849304, 0.8693333268165588, 0.8646666407585144, 0.8709999918937683, 0.8683333396911621, 0.8640000224113464, 0.8690000176429749, 0.8696666955947876, 0.8713333606719971, 0.8723333477973938, 0.8713333606719971, 0.8743333220481873, 0.8696666955947876, 0.8766666650772095, 0.871666669845581, 0.871999979019165, 0.8696666955947876, 0.8796666860580444, 0.8703333139419556, 0.8763333559036255, 0.8790000081062317, 0.875333309173584, 0.8803333044052124, 0.871999979019165, 0.8763333559036255, 0.8743333220481873, 0.8769999742507935, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 36], [1, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 1, 4, 0], [16, 99, 96, 74, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [5, 2, 3, 0, 3, 7, 7, 4, 8, 8], [0, 1, 0, 2, 0, 0, 3], [39, 18, 96, 49], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [8], [0], [99], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 2, 2, 8], [0, 0, 4, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 56, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 4, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031041622161865, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 3, 9], [0, 1, 0, 2], [39, 22, 3], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3037893772125244, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 76], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 95, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 8, 5, 3, 2, 8, 5, 3, 2, 2, 1, 1, 1, 17, 9, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.3087964057922363, 2.3083558082580566, 2.3104326725006104, 2.309511423110962, 2.3089730739593506, 2.3093411922454834], "accuracy": [0.09325055778026581, 0.09087307006120682, 0.08281600475311279, 0.09008057415485382, 0.08770307898521423, 0.09377889335155487], "val_loss": [2.3085508346557617, 2.3084795475006104, 2.3084187507629395, 2.3083605766296387, 2.3083035945892334, 2.3082468509674072], "val_accuracy": [0.08900000154972076, 0.08799999952316284, 0.08833333104848862, 0.08766666799783707, 0.08799999952316284, 0.08633333444595337]}}]