[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224952459335327, 1.867808222770691, 1.3964482545852661, 1.102055311203003, 0.9436460137367249, 0.8300933241844177, 0.7754597067832947, 0.7247321605682373, 0.6832204461097717, 0.654779314994812, 0.6362689137458801, 0.6127941012382507, 0.597144365310669, 0.5746590495109558, 0.56246417760849, 0.5443353056907654, 0.5299567580223083, 0.5175715088844299, 0.49927055835723877, 0.5030475854873657, 0.48238131403923035, 0.4765358567237854, 0.4617360830307007, 0.45084425806999207, 0.4463939070701599, 0.4553129971027374, 0.43383780121803284, 0.42753827571868896, 0.4229881167411804, 0.4149773418903351, 0.4106890857219696, 0.39593467116355896, 0.39427775144577026, 0.38866403698921204, 0.3844240605831146, 0.3826950192451477, 0.3679320812225342, 0.36942800879478455, 0.35311928391456604, 0.3525662124156952, 0.3527314066886902, 0.34339383244514465, 0.34236350655555725, 0.33022356033325195, 0.3329274654388428, 0.33271437883377075, 0.3239247500896454, 0.3189336657524109, 0.3227315843105316, 0.3110278248786926, 0.31199267506599426, 0.3017173111438751, 0.29576244950294495, 0.2900432348251343, 0.2891092002391815, 0.2820526659488678, 0.2808292806148529, 0.2768504321575165, 0.2704615890979767, 0.2684291899204254, 0.2650007903575897, 0.2577018737792969, 0.25622352957725525, 0.24731548130512238, 0.24799463152885437, 0.24398791790008545, 0.2429138869047165, 0.2364480048418045, 0.2379327267408371, 0.23169688880443573, 0.23255425691604614, 0.22298234701156616, 0.21444450318813324], "accuracy": [0.2689208686351776, 0.47985735535621643, 0.5605600476264954, 0.6123365759849548, 0.6653017997741699, 0.7066437602043152, 0.7206445932388306, 0.7345132827758789, 0.7518161535263062, 0.757099449634552, 0.7708360552787781, 0.7754589915275574, 0.7820631265640259, 0.7926297783851624, 0.7980451583862305, 0.8062343001365662, 0.8082155585289001, 0.8117818236351013, 0.8240655064582825, 0.8214238286018372, 0.8264430165290833, 0.8313300609588623, 0.8358209133148193, 0.8396512866020203, 0.8413683772087097, 0.8359529972076416, 0.8425571322441101, 0.8496896028518677, 0.8498216867446899, 0.8532558679580688, 0.852331280708313, 0.8610487580299377, 0.86118084192276, 0.8603883385658264, 0.8625016212463379, 0.8640866279602051, 0.8708229064941406, 0.8668603897094727, 0.8717474341392517, 0.8730682730674744, 0.8739928603172302, 0.8804649114608765, 0.8749174475669861, 0.8812574148178101, 0.8780874609947205, 0.8803328275680542, 0.8844274282455444, 0.8816536664962769, 0.8848236799240112, 0.8907673954963684, 0.8901069760322571, 0.8938053250312805, 0.8901069760322571, 0.8944657444953918, 0.8985602855682373, 0.8981640338897705, 0.8990886211395264, 0.9013340473175049, 0.901862382888794, 0.8988244533538818, 0.9046360850334167, 0.9078060984611511, 0.9046360850334167, 0.9109761118888855, 0.9116365313529968, 0.9126931428909302, 0.9128252267837524, 0.9159952402114868, 0.9148064851760864, 0.9148064851760864, 0.9159952402114868, 0.9222031235694885, 0.9233918786048889], "val_loss": [2.034935474395752, 1.506217122077942, 1.0287470817565918, 0.8218953609466553, 0.7353475093841553, 0.6787988543510437, 0.63377445936203, 0.6015558242797852, 0.5760647654533386, 0.5596001744270325, 0.5394764542579651, 0.5234655737876892, 0.5109478235244751, 0.49452149868011475, 0.4863448143005371, 0.4763152003288269, 0.46575066447257996, 0.45714661478996277, 0.4466460049152374, 0.4396691620349884, 0.4325246512889862, 0.42522913217544556, 0.4187649190425873, 0.4130755066871643, 0.41159480810165405, 0.4042639136314392, 0.3994056284427643, 0.40357136726379395, 0.3902721405029297, 0.3873171806335449, 0.38816210627555847, 0.3805137574672699, 0.37501561641693115, 0.3706428110599518, 0.3688980042934418, 0.3735717833042145, 0.3634876310825348, 0.35965725779533386, 0.3664407432079315, 0.357398122549057, 0.3536026179790497, 0.3520320951938629, 0.3506040871143341, 0.35041365027427673, 0.34863024950027466, 0.34642863273620605, 0.34790128469467163, 0.34522250294685364, 0.3401235044002533, 0.33940714597702026, 0.34251973032951355, 0.33822980523109436, 0.3367292582988739, 0.33249080181121826, 0.32855144143104553, 0.3345208466053009, 0.3296704888343811, 0.32821622490882874, 0.33011090755462646, 0.3272218108177185, 0.32688984274864197, 0.3234027326107025, 0.3255970776081085, 0.32837504148483276, 0.3233126103878021, 0.31898945569992065, 0.3206252455711365, 0.3158758282661438, 0.3182563781738281, 0.31946805119514465, 0.3134324252605438, 0.3151873052120209, 0.3195164203643799], "val_accuracy": [0.562333345413208, 0.6579999923706055, 0.6899999976158142, 0.7070000171661377, 0.7333333492279053, 0.7490000128746033, 0.7593333125114441, 0.7739999890327454, 0.7860000133514404, 0.7903333306312561, 0.7953333258628845, 0.8053333163261414, 0.8103333115577698, 0.8220000267028809, 0.8246666789054871, 0.8286666870117188, 0.8330000042915344, 0.8366666436195374, 0.840666651725769, 0.8423333168029785, 0.8443333506584167, 0.8476666808128357, 0.8456666469573975, 0.8503333330154419, 0.8519999980926514, 0.8513333201408386, 0.8556666374206543, 0.8533333539962769, 0.8586666584014893, 0.8610000014305115, 0.8560000061988831, 0.8653333187103271, 0.8683333396911621, 0.8700000047683716, 0.8706666827201843, 0.8666666746139526, 0.8683333396911621, 0.8693333268165588, 0.8709999918937683, 0.871999979019165, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8743333220481873, 0.8756666779518127, 0.8706666827201843, 0.8766666650772095, 0.8796666860580444, 0.878333330154419, 0.8776666522026062, 0.8809999823570251, 0.8820000290870667, 0.8806666731834412, 0.8836666941642761, 0.878333330154419, 0.8836666941642761, 0.887333333492279, 0.8849999904632568, 0.8849999904632568, 0.8833333253860474, 0.8883333206176758, 0.8853333592414856, 0.8843333125114441, 0.887666642665863, 0.8883333206176758, 0.8886666893959045, 0.890333354473114, 0.887333333492279, 0.8856666684150696, 0.890333354473114, 0.890333354473114, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 2, 0, 2], [69, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 9], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 23, 13, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.pow(alpha, beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [25], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 5, 9, 4, 2, 8], [4, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 7, 4, 3, 2, 2, 1, 1, 1, 12, 8, 4, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 5, 0, 3], [2, 1, 0, 2], [22, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 0, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [55], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 6, 4, 2, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))", "other_info": {"loss": [3.544585704803467, 6.192499160766602, 8.007858276367188, 9.185624122619629, 10.364319801330566, 11.189130783081055], "accuracy": [0.09800554811954498, 0.10447761416435242, 0.09694888442754745, 0.10949676483869553, 0.09206181764602661, 0.09589222073554993], "val_loss": [4.180723190307617, 5.679220199584961, 6.785281181335449, 7.6717448234558105, 8.417928695678711, 9.066241264343262], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 6, 4, 2, 0, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 3, 5], [0, 2, 0, 3], [16, 92], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.304462432861328, 2.302584648132324, 2.302583932876587, 2.3025810718536377, 2.3025712966918945, 2.302560329437256, 2.302527904510498, 2.302438735961914], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.10210011899471283, 0.10381719470024109, 0.10566636174917221, 0.09972262382507324, 0.10302469879388809, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.302584409713745, 2.3026013374328613, 2.3026344776153564, 2.3026058673858643, 2.3028178215026855], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10333333164453506, 0.1003333330154419, 0.09833333641290665, 0.09333333373069763, 0.0989999994635582, 0.0989999994635582]}}]