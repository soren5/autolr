[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8802857398986816, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224080801010132, 1.8682928085327148, 1.3979066610336304, 1.1041873693466187, 0.9451974034309387, 0.8360878229141235, 0.7751023769378662, 0.729066014289856, 0.6826299428939819, 0.6508670449256897, 0.6238046884536743, 0.6097503304481506, 0.585521399974823, 0.5728465914726257, 0.555942952632904, 0.5316925644874573, 0.5235386490821838, 0.5162447690963745, 0.5020295977592468, 0.5024400353431702, 0.4802166521549225, 0.4755152761936188, 0.46778932213783264, 0.45205312967300415, 0.44790565967559814, 0.4411901831626892, 0.43003571033477783, 0.43001148104667664, 0.4199477732181549, 0.41049253940582275, 0.40412265062332153, 0.39771658182144165, 0.3971492052078247, 0.38809987902641296, 0.38248589634895325, 0.38595423102378845, 0.37272557616233826, 0.37531688809394836, 0.36150768399238586, 0.35245010256767273, 0.3548196852207184, 0.3530884385108948, 0.3393357992172241, 0.3381390869617462, 0.3397563397884369, 0.32853949069976807, 0.32326024770736694, 0.3298868238925934, 0.3192327916622162, 0.3180619180202484, 0.30763912200927734, 0.31001853942871094, 0.3026682436466217, 0.3018588721752167, 0.2947835326194763, 0.29637444019317627, 0.28445982933044434], "accuracy": [0.27143046259880066, 0.4881785809993744, 0.5696737766265869, 0.6123365759849548, 0.6642451286315918, 0.7004358768463135, 0.7214370369911194, 0.7375511527061462, 0.7475894689559937, 0.7614582180976868, 0.7703077793121338, 0.7786290049552917, 0.7866860628128052, 0.7887993454933167, 0.7997622489929199, 0.8078193068504333, 0.8168009519577026, 0.8121780753135681, 0.8228767514228821, 0.8193105459213257, 0.8300092220306396, 0.8296129703521729, 0.829216718673706, 0.8393871188163757, 0.8378021121025085, 0.842028796672821, 0.8467837572097778, 0.8475762605667114, 0.8499537706375122, 0.8514066934585571, 0.8549728989601135, 0.8561616539955139, 0.8553691506385803, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8621054291725159, 0.8712190985679626, 0.8734645247459412, 0.8710870146751404, 0.8709549307823181, 0.8798044919967651, 0.8798044919967651, 0.8778232932090759, 0.8819178342819214, 0.8828424215316772, 0.8821820020675659, 0.8842953443527222, 0.8848236799240112, 0.8874653577804565, 0.8905032277107239, 0.8906353116035461, 0.8889182209968567, 0.889578640460968, 0.8911636471748352, 0.89552241563797], "val_loss": [2.0380020141601562, 1.51716947555542, 1.0498803853988647, 0.8399129509925842, 0.7418472766876221, 0.6839371919631958, 0.6368310451507568, 0.6072779893875122, 0.5797070860862732, 0.5544748902320862, 0.5407164096832275, 0.5279650688171387, 0.510033905506134, 0.5028560161590576, 0.49011290073394775, 0.47757717967033386, 0.47359147667884827, 0.46203744411468506, 0.4574417173862457, 0.4544040560722351, 0.44401341676712036, 0.44179821014404297, 0.4397037625312805, 0.4303683340549469, 0.4249401390552521, 0.4220227599143982, 0.41809430718421936, 0.41083964705467224, 0.4073309600353241, 0.4034615755081177, 0.4029974639415741, 0.3948487639427185, 0.3979828655719757, 0.39264336228370667, 0.38862287998199463, 0.38609081506729126, 0.3861488401889801, 0.3881515562534332, 0.3769132196903229, 0.38063469529151917, 0.3748309016227722, 0.37731367349624634, 0.3708195090293884, 0.3743346631526947, 0.36984896659851074, 0.3650960624217987, 0.3680661618709564, 0.3657494783401489, 0.3638531565666199, 0.3625354468822479, 0.3651450574398041, 0.3593406677246094, 0.3608526587486267, 0.3578433692455292, 0.359562486410141, 0.35294678807258606, 0.358186274766922], "val_accuracy": [0.5320000052452087, 0.6536666750907898, 0.6790000200271606, 0.7020000219345093, 0.734000027179718, 0.753000020980835, 0.765333354473114, 0.7760000228881836, 0.7879999876022339, 0.7973333597183228, 0.7983333468437195, 0.8019999861717224, 0.812333345413208, 0.8186666369438171, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8410000205039978, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.8463333249092102, 0.8429999947547913, 0.843666672706604, 0.8533333539962769, 0.8546666502952576, 0.8516666889190674, 0.859666645526886, 0.8576666712760925, 0.8610000014305115, 0.8583333492279053, 0.8606666922569275, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8673333525657654, 0.8650000095367432, 0.8653333187103271, 0.871666669845581, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.875, 0.8683333396911621, 0.8686666488647461, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.8733333349227905, 0.8723333477973938, 0.8756666779518127, 0.8740000128746033, 0.871666669845581, 0.875333309173584, 0.8736666440963745, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8777142763137817, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220733642578125, 1.8536899089813232, 1.3626477718353271, 1.0819010734558105, 0.928218424320221, 0.8326123952865601, 0.7645878195762634, 0.7311674952507019, 0.6840002536773682, 0.6554954648017883, 0.634467601776123, 0.6086091995239258, 0.5901433825492859, 0.5719508528709412, 0.5660027265548706, 0.544402003288269, 0.5291106104850769, 0.5227762460708618, 0.5163606405258179, 0.49898138642311096, 0.492296040058136, 0.48345378041267395, 0.4747578799724579, 0.4542021155357361, 0.442197322845459, 0.4392090141773224, 0.42864546179771423, 0.4247663915157318, 0.41865330934524536, 0.40945449471473694, 0.4175489842891693, 0.4012366235256195, 0.39888325333595276, 0.3846642076969147, 0.3855997622013092, 0.3772884011268616, 0.3707517087459564, 0.3626979887485504, 0.3617618978023529, 0.355699747800827, 0.3459833264350891, 0.3469122648239136, 0.3421638011932373, 0.3396971821784973, 0.3282807469367981, 0.32397446036338806, 0.3217658996582031, 0.31528931856155396, 0.31178948283195496, 0.30469825863838196, 0.3083823323249817, 0.3016972541809082, 0.3020533621311188, 0.29783084988594055, 0.2889575660228729, 0.28396832942962646, 0.28919780254364014, 0.2836143672466278, 0.275363951921463, 0.2699410319328308, 0.26658329367637634, 0.2625533640384674, 0.2660931944847107, 0.2508930265903473, 0.2534537613391876, 0.24719272553920746, 0.25534722208976746, 0.24714311957359314, 0.2405937761068344, 0.2390989363193512, 0.23203155398368835, 0.23470890522003174], "accuracy": [0.25795799493789673, 0.5017831325531006, 0.5765420794487, 0.629111111164093, 0.6730946898460388, 0.702681303024292, 0.7265883088111877, 0.7343811988830566, 0.7523444890975952, 0.76106196641922, 0.7662131786346436, 0.7804781198501587, 0.7898560166358948, 0.7938185334205627, 0.793422281742096, 0.8049134612083435, 0.809140145778656, 0.8096684813499451, 0.8112534880638123, 0.8222163319587708, 0.8264430165290833, 0.8267071843147278, 0.8269713521003723, 0.8379341959953308, 0.8360850811004639, 0.8426892161369324, 0.8516708612442017, 0.8477083444595337, 0.8491612672805786, 0.8533879518508911, 0.8495575189590454, 0.8515387773513794, 0.8576145768165588, 0.8613129258155823, 0.8644828796386719, 0.8669924736022949, 0.8702945709228516, 0.8688416481018066, 0.8708229064941406, 0.8692378997802734, 0.8768987059593201, 0.8735966086387634, 0.8761062026023865, 0.8779553771018982, 0.8824461698532104, 0.8809932470321655, 0.8856161832809448, 0.8858803510665894, 0.886672854423523, 0.8902390599250793, 0.889578640460968, 0.8883898854255676, 0.8930128216743469, 0.891559898853302, 0.8965790271759033, 0.8971073627471924, 0.8968431949615479, 0.893541157245636, 0.898428201675415, 0.9043719172477722, 0.9064852595329285, 0.9056927561759949, 0.9050323367118835, 0.9052965044975281, 0.9103156924247742, 0.91124027967453, 0.9076740145683289, 0.9119006991386414, 0.913089394569397, 0.915070652961731, 0.9144102334976196, 0.9133535623550415], "val_loss": [2.0279977321624756, 1.4883677959442139, 1.0229071378707886, 0.8242285847663879, 0.7387142181396484, 0.6850236654281616, 0.6398360729217529, 0.6044278144836426, 0.5756780505180359, 0.5502245426177979, 0.5371543169021606, 0.5156427621841431, 0.508174479007721, 0.48925912380218506, 0.480939120054245, 0.4716448485851288, 0.45965006947517395, 0.4506978392601013, 0.44427525997161865, 0.4393541216850281, 0.4391244649887085, 0.42321568727493286, 0.4144824743270874, 0.405906081199646, 0.4033319354057312, 0.39721375703811646, 0.3920716643333435, 0.39399832487106323, 0.3870469629764557, 0.37883639335632324, 0.38262227177619934, 0.38063496351242065, 0.36965927481651306, 0.3685482442378998, 0.3631742298603058, 0.3610307574272156, 0.35745498538017273, 0.3573063910007477, 0.3551844358444214, 0.35231560468673706, 0.35136523842811584, 0.34625858068466187, 0.34839358925819397, 0.3412839472293854, 0.3401867151260376, 0.34125393629074097, 0.3376805782318115, 0.3330887258052826, 0.3344677984714508, 0.3324914872646332, 0.3324943482875824, 0.3347713351249695, 0.33256199955940247, 0.32589802145957947, 0.33063969016075134, 0.3281297981739044, 0.3294353783130646, 0.33443254232406616, 0.3221590518951416, 0.32847359776496887, 0.3258172571659088, 0.3245922029018402, 0.32341262698173523, 0.32740890979766846, 0.3166930079460144, 0.32041123509407043, 0.31867876648902893, 0.3182212710380554, 0.3206601142883301, 0.31713810563087463, 0.32929548621177673, 0.319658488035202], "val_accuracy": [0.5483333468437195, 0.6513333320617676, 0.6869999766349792, 0.7080000042915344, 0.7253333330154419, 0.7353333234786987, 0.749666690826416, 0.7633333206176758, 0.7746666669845581, 0.7889999747276306, 0.7910000085830688, 0.8053333163261414, 0.8083333373069763, 0.8146666884422302, 0.8246666789054871, 0.8209999799728394, 0.8306666612625122, 0.840666651725769, 0.8403333425521851, 0.8346666693687439, 0.8349999785423279, 0.847000002861023, 0.8483333587646484, 0.8516666889190674, 0.8546666502952576, 0.859333336353302, 0.8616666793823242, 0.8573333621025085, 0.859666645526886, 0.8650000095367432, 0.8579999804496765, 0.8633333444595337, 0.8683333396911621, 0.8666666746139526, 0.8703333139419556, 0.8713333606719971, 0.8706666827201843, 0.8709999918937683, 0.8730000257492065, 0.8713333606719971, 0.8703333139419556, 0.8766666650772095, 0.8740000128746033, 0.8763333559036255, 0.8740000128746033, 0.875, 0.8809999823570251, 0.8796666860580444, 0.878333330154419, 0.8803333044052124, 0.8776666522026062, 0.8813333511352539, 0.8773333430290222, 0.8823333382606506, 0.8816666603088379, 0.8833333253860474, 0.8820000290870667, 0.878333330154419, 0.8813333511352539, 0.8816666603088379, 0.8843333125114441, 0.8853333592414856, 0.8849999904632568, 0.8843333125114441, 0.8896666765213013, 0.8870000243186951, 0.890333354473114, 0.890333354473114, 0.8899999856948853, 0.8866666555404663, 0.8866666555404663, 0.887666642665863]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10685714334249496, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 12, 6, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2582558277632.0, 7972714971136.0, 7766903095296.0, 7809863778304.0, 7734323314688.0, 7704086577152.0], "accuracy": [0.10276053100824356, 0.10606260597705841, 0.109232597053051, 0.11042134463787079, 0.10817593336105347, 0.10500594228506088], "val_loss": [5697504280576.0, 5697503232000.0, 5697502707712.0, 5697479114752.0, 5697479639040.0, 5697475444736.0], "val_accuracy": [0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 5, 5, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 3, 1, 4, 1, 4, 8, 0, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 59, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 13, 9, 4, 2, 2, 1, 1, 0, 21, 12, 9, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.negative(tf.math.negative(alpha)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [4, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0], [0, 9], [0], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 0, 4, 0], [16, 99, 96, 83, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 2, 0, 1, 3, 1, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.304265260696411, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 1, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [19, 99, 96, 99, 61, 1]], "fitness": -0.0860000029206276, "mapping_values": [1, 10, 6, 4, 1, 6, 3, 3, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))))), alpha)", "other_info": {"loss": [2.3098227977752686, 2.310168743133545, 2.308086633682251, 2.31014347076416, 2.309544324874878, 2.308856964111328], "accuracy": [0.09034473448991776, 0.09285431355237961, 0.09325055778026581, 0.0936468094587326, 0.09206181764602661, 0.09681680053472519], "val_loss": [2.308640718460083, 2.308640718460083, 2.308640718460083, 2.308640718460083, 2.308640718460083, 2.308640718460083], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]