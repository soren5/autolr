[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8842856884002686, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224581241607666, 1.866798996925354, 1.3955726623535156, 1.0934231281280518, 0.9318428635597229, 0.8298172354698181, 0.7639771699905396, 0.7302770018577576, 0.6817464828491211, 0.6497436165809631, 0.6295565962791443, 0.601318895816803, 0.5892459750175476, 0.5623407363891602, 0.5538555383682251, 0.5260912179946899, 0.5217671990394592, 0.5093089938163757, 0.4997814893722534, 0.48389601707458496, 0.4747706353664398, 0.4629616141319275, 0.45725616812705994, 0.45061957836151123, 0.4376509189605713, 0.43018537759780884, 0.42676788568496704, 0.42191842198371887, 0.41274821758270264, 0.39971792697906494, 0.4030381143093109, 0.3929717242717743, 0.3849363625049591, 0.3769908845424652, 0.37414872646331787, 0.3709236681461334, 0.3636323809623718, 0.35525956749916077, 0.34835395216941833, 0.3452734053134918, 0.3441770672798157, 0.3346450924873352, 0.33720672130584717, 0.3263608515262604, 0.3225192725658417, 0.3152485191822052, 0.31546828150749207, 0.3123907148838043, 0.31002792716026306, 0.3026135265827179, 0.2951596975326538, 0.2969729006290436, 0.2890647351741791, 0.28678077459335327, 0.28028127551078796, 0.2732618749141693, 0.2770889401435852, 0.2671794593334198, 0.26861733198165894, 0.2677628695964813, 0.26346921920776367], "accuracy": [0.2735437750816345, 0.49689605832099915, 0.5649187564849854, 0.6194690465927124, 0.670320987701416, 0.7071720957756042, 0.7275128960609436, 0.7339849472045898, 0.7466648817062378, 0.7650244235992432, 0.7741381525993347, 0.7784969210624695, 0.7862898111343384, 0.8010830879211426, 0.8001585006713867, 0.8086118102073669, 0.8084797263145447, 0.8186501264572144, 0.821820080280304, 0.82683926820755, 0.8276317715644836, 0.8363492488861084, 0.8348963260650635, 0.8422929644584656, 0.8437458872795105, 0.8539162874221802, 0.8506141901016235, 0.8521991968154907, 0.854708731174469, 0.8598600029945374, 0.8609166741371155, 0.8636903762817383, 0.8652753829956055, 0.8679170608520508, 0.8709549307823181, 0.872407853603363, 0.8737286925315857, 0.8735966086387634, 0.8767666220664978, 0.8796724081039429, 0.878879964351654, 0.8817857503890991, 0.8782195448875427, 0.8819178342819214, 0.8877294659614563, 0.8874653577804565, 0.8893144726753235, 0.8905032277107239, 0.8865407705307007, 0.8920882344245911, 0.8975036144256592, 0.8948619961738586, 0.8967111110687256, 0.8965790271759033, 0.9009377956390381, 0.9043719172477722, 0.9010698795318604, 0.906749427318573, 0.9037115573883057, 0.90423983335495, 0.9058248400688171], "val_loss": [2.0435290336608887, 1.5189396142959595, 1.0516743659973145, 0.8399912714958191, 0.7416529059410095, 0.678808867931366, 0.6381445527076721, 0.6037681698799133, 0.5782030820846558, 0.5478116869926453, 0.534210205078125, 0.5272560715675354, 0.5000512003898621, 0.49646517634391785, 0.4831455945968628, 0.47435176372528076, 0.45983409881591797, 0.45598259568214417, 0.44453194737434387, 0.43697839975357056, 0.4316769242286682, 0.4337497651576996, 0.4161163866519928, 0.4161047339439392, 0.4154047966003418, 0.40659818053245544, 0.40326008200645447, 0.3993653655052185, 0.3924619257450104, 0.39085569977760315, 0.3860655128955841, 0.38260653614997864, 0.38140758872032166, 0.38606587052345276, 0.37566739320755005, 0.3758164346218109, 0.37075701355934143, 0.3714748024940491, 0.36498233675956726, 0.3646821975708008, 0.36130326986312866, 0.3578786253929138, 0.3612002730369568, 0.356819212436676, 0.3628595471382141, 0.3548620939254761, 0.34863004088401794, 0.3535069227218628, 0.3523302376270294, 0.34950289130210876, 0.34411758184432983, 0.34538933634757996, 0.34687116742134094, 0.3420603573322296, 0.34424352645874023, 0.3475662171840668, 0.338030606508255, 0.33991339802742004, 0.34076616168022156, 0.3372027575969696, 0.3406139612197876], "val_accuracy": [0.5836666822433472, 0.6576666831970215, 0.6836666464805603, 0.7049999833106995, 0.7386666536331177, 0.7559999823570251, 0.7633333206176758, 0.7770000100135803, 0.7933333516120911, 0.8036666512489319, 0.8080000281333923, 0.8033333420753479, 0.8190000057220459, 0.8206666707992554, 0.8303333520889282, 0.8220000267028809, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8479999899864197, 0.8486666679382324, 0.8396666646003723, 0.8533333539962769, 0.8550000190734863, 0.8483333587646484, 0.8576666712760925, 0.8569999933242798, 0.8556666374206543, 0.8600000143051147, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8643333315849304, 0.8629999756813049, 0.8673333525657654, 0.8656666874885559, 0.8676666617393494, 0.8683333396911621, 0.871666669845581, 0.8730000257492065, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8709999918937683, 0.8743333220481873, 0.8793333172798157, 0.8773333430290222, 0.8776666522026062, 0.8769999742507935, 0.878000020980835, 0.8809999823570251, 0.878000020980835, 0.8786666393280029, 0.8793333172798157, 0.8830000162124634, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284, 0.8806666731834412, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238173484802246, 1.8644002676010132, 1.3917814493179321, 1.0980082750320435, 0.9360357522964478, 0.8438753485679626, 0.783598780632019, 0.7348630428314209, 0.6939917802810669, 0.6689668297767639, 0.6362463235855103, 0.6153063774108887, 0.5967205762863159, 0.5746852159500122, 0.5665771961212158, 0.5429545640945435, 0.5313896536827087, 0.5178879499435425, 0.518415629863739, 0.5100574493408203, 0.48939257860183716, 0.4788035750389099, 0.48171430826187134, 0.4633178412914276, 0.45647531747817993, 0.44673654437065125, 0.43523478507995605, 0.43008875846862793, 0.4243432581424713, 0.41742002964019775, 0.40898990631103516, 0.4090137481689453, 0.39481350779533386, 0.388126939535141, 0.3790789544582367, 0.37737658619880676, 0.3737407624721527, 0.36828240752220154, 0.37012237310409546, 0.36817073822021484, 0.3515665531158447, 0.35446324944496155, 0.34720584750175476, 0.3403362035751343, 0.33964258432388306, 0.3375686705112457, 0.3307224214076996, 0.3164186179637909, 0.32264581322669983, 0.31178563833236694, 0.31479954719543457, 0.3074582517147064, 0.2972715497016907, 0.294891357421875, 0.28918445110321045, 0.2900060713291168, 0.28652137517929077, 0.27427810430526733, 0.2699945867061615, 0.27160024642944336, 0.27263355255126953, 0.26840317249298096, 0.2627100646495819, 0.25848188996315, 0.24846147000789642, 0.24995042383670807, 0.24473483860492706, 0.24355849623680115, 0.23977403342723846, 0.2347273975610733, 0.2286069542169571, 0.2287118285894394, 0.23060953617095947, 0.22976931929588318, 0.22217953205108643, 0.2208302617073059, 0.2139701545238495, 0.20888541638851166, 0.20630790293216705, 0.20472827553749084, 0.20231540501117706, 0.2006835639476776], "accuracy": [0.2654867172241211, 0.48051777482032776, 0.5587108731269836, 0.6172236204147339, 0.6602826714515686, 0.6951525807380676, 0.717870831489563, 0.726192057132721, 0.7481178045272827, 0.7536653280258179, 0.7650244235992432, 0.7749306559562683, 0.7881389260292053, 0.7898560166358948, 0.7935543656349182, 0.8035926818847656, 0.8095363974571228, 0.8094043135643005, 0.8084797263145447, 0.8152159452438354, 0.8265751004219055, 0.8228767514228821, 0.8252542614936829, 0.835160493850708, 0.8348963260650635, 0.837141752243042, 0.8444063067436218, 0.8436138033866882, 0.8449346423149109, 0.8492933511734009, 0.8555012345314026, 0.8524633646011353, 0.8590674996376038, 0.859199583530426, 0.8661999702453613, 0.8652753829956055, 0.8701624870300293, 0.8716153502464294, 0.8661999702453613, 0.8660678863525391, 0.8716153502464294, 0.872407853603363, 0.8772949576377869, 0.8772949576377869, 0.8779553771018982, 0.8798044919967651, 0.8821820020675659, 0.8885219693183899, 0.883238673210144, 0.8887861371040344, 0.8870691061019897, 0.889578640460968, 0.8912957310676575, 0.8930128216743469, 0.89988112449646, 0.8951261639595032, 0.8965790271759033, 0.9001452922821045, 0.9035794734954834, 0.9000132083892822, 0.9010698795318604, 0.9025228023529053, 0.9019944667816162, 0.9075419306755066, 0.9097873568534851, 0.9140139818191528, 0.9124290347099304, 0.9153348207473755, 0.9161273241043091, 0.9152027368545532, 0.9206181764602661, 0.9148064851760864, 0.9170519113540649, 0.9202219247817993, 0.9196935892105103, 0.9190331697463989, 0.9216747879981995, 0.9251089692115784, 0.9257693886756897, 0.9282789826393127, 0.925901472568512, 0.9289394021034241], "val_loss": [2.036973476409912, 1.5172314643859863, 1.0529793500900269, 0.8488061428070068, 0.761940598487854, 0.701273500919342, 0.6606681942939758, 0.6227450370788574, 0.5957452654838562, 0.5795954465866089, 0.5596762299537659, 0.546724259853363, 0.5286195278167725, 0.5180644989013672, 0.5087156891822815, 0.49902990460395813, 0.48641452193260193, 0.48243448138237, 0.47233039140701294, 0.46534398198127747, 0.45800504088401794, 0.460834801197052, 0.4502144455909729, 0.4477066099643707, 0.4437348544597626, 0.43155935406684875, 0.4285445511341095, 0.4224226176738739, 0.4208310842514038, 0.416698694229126, 0.4112412631511688, 0.40785905718803406, 0.4044020175933838, 0.4019003212451935, 0.40167906880378723, 0.394040048122406, 0.39407697319984436, 0.39113759994506836, 0.39151859283447266, 0.38918372988700867, 0.38080209493637085, 0.3820362985134125, 0.3845289647579193, 0.38084709644317627, 0.38196977972984314, 0.3750966787338257, 0.38169845938682556, 0.37672024965286255, 0.3682010769844055, 0.37225979566574097, 0.36696675419807434, 0.36579442024230957, 0.36640653014183044, 0.36908015608787537, 0.3649662137031555, 0.3660455644130707, 0.3617525100708008, 0.36538830399513245, 0.36423176527023315, 0.3588350713253021, 0.3595030903816223, 0.35984766483306885, 0.3607126772403717, 0.35662075877189636, 0.3553435206413269, 0.3551202714443207, 0.3598402440547943, 0.3605595827102661, 0.35672757029533386, 0.35414403676986694, 0.36247584223747253, 0.35952526330947876, 0.3590703010559082, 0.35801559686660767, 0.3580792248249054, 0.355184406042099, 0.35932108759880066, 0.35857853293418884, 0.3546122908592224, 0.3614910840988159, 0.35553112626075745, 0.36490845680236816], "val_accuracy": [0.546999990940094, 0.6460000276565552, 0.6726666688919067, 0.6966666579246521, 0.7210000157356262, 0.7450000047683716, 0.7540000081062317, 0.7666666507720947, 0.7803333401679993, 0.7903333306312561, 0.796999990940094, 0.8066666722297668, 0.7996666431427002, 0.8076666593551636, 0.8163333535194397, 0.8130000233650208, 0.8216666579246521, 0.8236666917800903, 0.8330000042915344, 0.8299999833106995, 0.8349999785423279, 0.8356666564941406, 0.8370000123977661, 0.8413333296775818, 0.8393333554267883, 0.843666672706604, 0.8479999899864197, 0.8493333458900452, 0.8473333120346069, 0.8519999980926514, 0.8543333411216736, 0.856333315372467, 0.859000027179718, 0.859000027179718, 0.8546666502952576, 0.8603333234786987, 0.8636666536331177, 0.8600000143051147, 0.862333357334137, 0.8646666407585144, 0.8676666617393494, 0.8656666874885559, 0.8690000176429749, 0.8666666746139526, 0.8659999966621399, 0.8713333606719971, 0.8646666407585144, 0.8706666827201843, 0.8743333220481873, 0.871666669845581, 0.8733333349227905, 0.8733333349227905, 0.8756666779518127, 0.871999979019165, 0.8726666569709778, 0.8740000128746033, 0.8763333559036255, 0.875333309173584, 0.8740000128746033, 0.8776666522026062, 0.875333309173584, 0.878000020980835, 0.8776666522026062, 0.8816666603088379, 0.878000020980835, 0.8799999952316284, 0.8820000290870667, 0.8803333044052124, 0.8813333511352539, 0.8820000290870667, 0.8776666522026062, 0.8833333253860474, 0.8773333430290222, 0.8840000033378601, 0.8790000081062317, 0.8816666603088379, 0.8846666812896729, 0.8816666603088379, 0.8833333253860474, 0.8806666731834412, 0.8840000033378601, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 0], [4, 99, 96, 99, 90, 1, 82]], "fitness": -0.7937142848968506, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 2, 2, 1, 1, 1, 23, 11, 12, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, alpha))))), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.587378978729248, 1.8083949089050293, 1.1300653219223022, 0.9476974010467529, 0.8403639197349548, 0.7948389649391174, 0.7542176842689514, 0.7366043925285339, 0.7087963819503784, 0.689613401889801, 0.6756029725074768, 0.6604036092758179, 0.6474531292915344, 0.6361140608787537], "accuracy": [0.23061682283878326, 0.3607185184955597, 0.5959582328796387, 0.659490168094635, 0.6903975605964661, 0.7065116763114929, 0.7234182953834534, 0.7322678565979004, 0.7329282760620117, 0.7471932172775269, 0.7464007139205933, 0.7510236501693726, 0.7588165402412415, 0.7564390301704407], "val_loss": [2.1644580364227295, 0.9802494049072266, 0.7522892355918884, 0.6546971797943115, 0.6195307374000549, 0.588527262210846, 0.5968832969665527, 0.5551155805587769, 0.524562418460846, 0.5277220606803894, 0.537908136844635, 0.5438063144683838, 0.5176364183425903, 0.5151305198669434], "val_accuracy": [0.25200000405311584, 0.6606666445732117, 0.7236666679382324, 0.7476666569709778, 0.7573333382606506, 0.7816666960716248, 0.777999997138977, 0.7866666913032532, 0.7986666560173035, 0.7963333129882812, 0.7933333516120911, 0.7956666946411133, 0.7946666479110718, 0.7983333468437195]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 4, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5, 6, 6, 0, 3, 7, 3, 9], [0, 2, 3, 3, 2, 5, 5, 0], [16, 16, 64], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 3, 3, 6, 8, 1, 2, 4, 4, 2, 2, 5], [0, 0, 2, 3, 4, 0, 0, 1, 2, 0, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 21, 13, 8, 3, 2, 1, 1, 1, 23, 12, 11, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(beta, sigma)), tf.math.pow(grad, tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(alpha), beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [0, 2, 0, 0], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 5, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(beta, alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 3, 2, 3, 8, 1, 5, 1, 6, 5, 7], [0, 1, 0, 2, 3, 0, 1, 1, 0], [39, 39, 9, 75], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [40, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 6, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [22, 99, 96, 99, 61, 1]], "fitness": -0.08914285898208618, "mapping_values": [1, 21, 12, 9, 4, 9, 5, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3105180263519287, 2.3106606006622314, 2.311018943786621, 2.3107945919036865, 2.309962511062622, 2.3091883659362793], "accuracy": [0.09509972482919693, 0.08730682730674744, 0.09272222965955734, 0.09377889335155487, 0.0936468094587326, 0.08902391046285629], "val_loss": [2.3087048530578613, 2.3087048530578613, 2.3087048530578613, 2.3087048530578613, 2.3087048530578613, 2.3087048530578613], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}]