[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 0, 2, 3, 8, 2, 7, 5, 5], [2, 0, 3, 1, 0, 3], [16, 1], [1, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7925714254379272, "mapping_values": [1, 6, 3, 3, 2, 16, 10, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2919394969940186, 2.244835615158081, 2.1673614978790283, 2.01617169380188, 1.737019658088684, 1.4345508813858032, 1.2252427339553833, 1.1147085428237915, 1.0308058261871338, 0.9760324358940125, 0.9293146133422852, 0.8988523483276367, 0.8803553581237793, 0.8402717709541321, 0.824000895023346, 0.8139063119888306, 0.7945878505706787, 0.7770843505859375, 0.7652707099914551, 0.7487807869911194, 0.7494679093360901, 0.7393743395805359, 0.7345923185348511, 0.7098836302757263, 0.7183072566986084, 0.7193302512168884, 0.706765353679657, 0.6977416276931763, 0.6801333427429199, 0.6833475232124329, 0.6754388809204102, 0.6666256785392761, 0.6655306220054626, 0.6569885015487671, 0.6598684787750244, 0.6512743234634399, 0.6443746089935303, 0.6472538113594055, 0.6348598003387451, 0.6412740349769592, 0.628532886505127, 0.6283178329467773], "accuracy": [0.1306300312280655, 0.2518821954727173, 0.35186898708343506, 0.4095892310142517, 0.47893276810646057, 0.5324263572692871, 0.5828820466995239, 0.6103553175926208, 0.6380926966667175, 0.6527539491653442, 0.6659622192382812, 0.6717738509178162, 0.6861709356307983, 0.7042662501335144, 0.6992471218109131, 0.7084929347038269, 0.7157574892044067, 0.7121912837028503, 0.7181349992752075, 0.7285695672035217, 0.7298903465270996, 0.7277770638465881, 0.7277770638465881, 0.7413815855979919, 0.7388719916343689, 0.7275128960609436, 0.7434949278831482, 0.7446836829185486, 0.752212405204773, 0.7470611333847046, 0.7514199018478394, 0.7577598690986633, 0.7549861073493958, 0.7573636174201965, 0.7532690763473511, 0.7601373791694641, 0.7655527591705322, 0.759609043598175, 0.7701756954193115, 0.7672698497772217, 0.7693831920623779, 0.7660810947418213], "val_loss": [2.261192798614502, 2.2016310691833496, 2.0804879665374756, 1.8280924558639526, 1.450344443321228, 1.1577411890029907, 0.9988930821418762, 0.9109449982643127, 0.8502793908119202, 0.8101449608802795, 0.7806749939918518, 0.7580155730247498, 0.7412927150726318, 0.7180439233779907, 0.7099456191062927, 0.6988680958747864, 0.6858091354370117, 0.6794092655181885, 0.6603073477745056, 0.651665985584259, 0.653899073600769, 0.6452639698982239, 0.6325585246086121, 0.6241596341133118, 0.6407154202461243, 0.6223982572555542, 0.6227683424949646, 0.6202042698860168, 0.6053744554519653, 0.6037514209747314, 0.6006736755371094, 0.5928956866264343, 0.5929741859436035, 0.5864987969398499, 0.5798864960670471, 0.5819182395935059, 0.5782894492149353, 0.5781815052032471, 0.5695961713790894, 0.5671719312667847, 0.5700661540031433, 0.563406229019165], "val_accuracy": [0.31333333253860474, 0.4493333399295807, 0.5316666960716248, 0.5983333587646484, 0.6309999823570251, 0.6703333258628845, 0.6823333501815796, 0.699999988079071, 0.7046666741371155, 0.718999981880188, 0.7300000190734863, 0.731333315372467, 0.7306666374206543, 0.737666666507721, 0.7383333444595337, 0.7406666874885559, 0.7476666569709778, 0.750333309173584, 0.7536666393280029, 0.7549999952316284, 0.7553333044052124, 0.7540000081062317, 0.762666642665863, 0.7630000114440918, 0.7486666440963745, 0.7683333158493042, 0.7606666684150696, 0.7603333592414856, 0.7716666460037231, 0.7716666460037231, 0.7739999890327454, 0.7793333530426025, 0.7903333306312561, 0.7789999842643738, 0.7886666655540466, 0.7803333401679993, 0.7953333258628845, 0.781333327293396, 0.7873333096504211, 0.7903333306312561, 0.7903333306312561, 0.7870000004768372]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.758571445941925, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2085814476013184, 1.6083587408065796, 1.1544535160064697, 0.9493178129196167, 0.8973857760429382, 0.8013012409210205, 0.7893520593643188, 0.735531747341156, 0.7206199765205383, 0.7041720151901245, 0.6873077154159546, 0.6604424715042114, 0.6574873328208923], "accuracy": [0.2712983787059784, 0.5013868808746338, 0.5978074073791504, 0.6641130447387695, 0.6770572066307068, 0.7069079279899597, 0.71100252866745, 0.7294940948486328, 0.7323999404907227, 0.7413815855979919, 0.7469290494918823, 0.7569673657417297, 0.7540615797042847], "val_loss": [1.923065423965454, 1.1775329113006592, 0.8914162516593933, 0.8105483651161194, 0.7312502264976501, 0.7236616015434265, 0.683405339717865, 0.648439347743988, 0.6359481811523438, 0.6545820236206055, 0.6339746117591858, 0.6202371120452881, 0.6282063722610474], "val_accuracy": [0.5220000147819519, 0.6206666827201843, 0.690666675567627, 0.715666651725769, 0.7396666407585144, 0.7363333106040955, 0.7526666522026062, 0.7720000147819519, 0.7676666378974915, 0.7613333463668823, 0.7609999775886536, 0.7556666731834412, 0.753000020980835]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 0], [17, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 7, 7, 2, 6, 9, 6, 7, 8, 3, 0, 8, 7, 7, 1], [2, 5, 3, 1, 2, 1, 5, 0, 4, 2, 1, 1, 2, 2], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 35, 21, 14, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.add(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.divide_no_nan(beta, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.multiply(tf.math.negative(beta), tf.math.sqrt(tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 6, 0, 6, 6, 1, 8, 0, 9, 2, 8, 0, 1, 2, 7, 7, 8, 5, 7], [2, 0, 3, 0, 0, 0, 5, 2, 5, 3, 4, 5, 4, 3, 0], [16, 1, 41, 33, 15, 75], [1, 1], [9], [0], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 41, 26, 15, 6, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(grad), tf.math.negative(beta))))), tf.math.subtract(grad, grad))), tf.math.add(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(grad, grad))), grad), grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.758244514465332, 2.3171160221099854, 2.304917812347412, 2.3033077716827393, 2.3029792308807373, 2.303006172180176, 2.303053379058838, 2.3029987812042236, 2.3029730319976807, 2.303022623062134, 2.3029232025146484], "accuracy": [0.1666886806488037, 0.09959053993225098, 0.09576013684272766, 0.09708096832036972, 0.09694888442754745, 0.09259014576673508, 0.09813763201236725, 0.09734513610601425, 0.09536388516426086, 0.09642054885625839, 0.09153348207473755], "val_loss": [2.3227176666259766, 2.3071353435516357, 2.3039090633392334, 2.3029723167419434, 2.302677631378174, 2.3026034832000732, 2.3026254177093506, 2.3025622367858887, 2.302635431289673, 2.30258846282959, 2.3025643825531006], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.0976666659116745, 0.10133333504199982, 0.10166666656732559, 0.10166666656732559, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]