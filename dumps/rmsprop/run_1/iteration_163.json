[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21059250831604, 1.6064624786376953, 1.1789531707763672, 0.9829397201538086, 0.9002758264541626, 0.8456746935844421, 0.8239358067512512, 0.7612344026565552, 0.7324869632720947, 0.7174071669578552, 0.7202226519584656, 0.6681253910064697, 0.6649685502052307, 0.6450567245483398, 0.6297761797904968, 0.6214230060577393, 0.6004399657249451, 0.581707775592804, 0.6006045341491699, 0.5843695402145386, 0.5699564814567566, 0.5551092624664307, 0.539767324924469, 0.5356683731079102, 0.5448463559150696, 0.5257301926612854, 0.5191776752471924, 0.5015382170677185, 0.4986877739429474, 0.48418140411376953, 0.4944763779640198, 0.48226410150527954, 0.4810701012611389, 0.4698565602302551, 0.47206997871398926, 0.4712945520877838, 0.46835651993751526, 0.4548965394496918], "accuracy": [0.26443007588386536, 0.5090476870536804, 0.5910711884498596, 0.648659348487854, 0.67666095495224, 0.6926429867744446, 0.6942279934883118, 0.717870831489563, 0.7306828498840332, 0.7300224304199219, 0.7293620109558105, 0.7541936039924622, 0.7555144429206848, 0.7625148296356201, 0.7664773464202881, 0.7718927264213562, 0.778761088848114, 0.7821952104568481, 0.7778365015983582, 0.7853652238845825, 0.7872143983840942, 0.7956677079200745, 0.8075551390647888, 0.8061022162437439, 0.8021397590637207, 0.8054417967796326, 0.8079513907432556, 0.8170651197433472, 0.8208954930305481, 0.8238013386726379, 0.8232730031013489, 0.826310932636261, 0.8245938420295715, 0.828292191028595, 0.8264430165290833, 0.8271034359931946, 0.8260467648506165, 0.8314621448516846], "val_loss": [1.9228118658065796, 1.1370545625686646, 0.9028337597846985, 0.8485860824584961, 0.754198431968689, 0.6866459846496582, 0.6800841689109802, 0.6208353042602539, 0.6370567679405212, 0.6075639724731445, 0.592022180557251, 0.5595585107803345, 0.5729224681854248, 0.575394868850708, 0.5373286008834839, 0.5557159781455994, 0.5158871412277222, 0.5010923147201538, 0.5083527565002441, 0.49696996808052063, 0.48841747641563416, 0.4909783899784088, 0.47656339406967163, 0.5182122588157654, 0.47337475419044495, 0.4817952513694763, 0.4499964714050293, 0.44279947876930237, 0.4424341917037964, 0.45172667503356934, 0.43338534235954285, 0.4278983473777771, 0.4237024784088135, 0.4195479452610016, 0.47366219758987427, 0.43145865201950073, 0.4184161424636841, 0.410346120595932], "val_accuracy": [0.5799999833106995, 0.6243333220481873, 0.6919999718666077, 0.6833333373069763, 0.7006666660308838, 0.7383333444595337, 0.7323333621025085, 0.7549999952316284, 0.7506666779518127, 0.7633333206176758, 0.7753333449363708, 0.7786666750907898, 0.7699999809265137, 0.7773333191871643, 0.7983333468437195, 0.7826666831970215, 0.7863333225250244, 0.8113333582878113, 0.8056666851043701, 0.8090000152587891, 0.8069999814033508, 0.8100000023841858, 0.8149999976158142, 0.7946666479110718, 0.8196666836738586, 0.8146666884422302, 0.8309999704360962, 0.8356666564941406, 0.8379999995231628, 0.8259999752044678, 0.8349999785423279, 0.8366666436195374, 0.8456666469573975, 0.8450000286102295, 0.8109999895095825, 0.8339999914169312, 0.8426666855812073, 0.8429999947547913]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 5], [3, 2, 1, 0, 3], [0, 23, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 0, 3, 2, 0], [16, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.12542857229709625, "mapping_values": [1, 11, 6, 5, 1, 8, 5, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4641707008.0, 65207254646784.0, 669729484177408.0, 161072329785344.0, 1.7568529364549632e+17, 6.224465891845734e+17], "accuracy": [0.10606260597705841, 0.10513802617788315, 0.10751552134752274, 0.10170386731624603, 0.10593052208423615, 0.10791176557540894], "val_loss": [5182213120.0, 54597376802816.0, 54408444379136.0, 54590284234752.0, 2.6043698994426675e+17, 2.6043692122479e+17], "val_accuracy": [0.1289999932050705, 0.1289999932050705, 0.1289999932050705, 0.1289999932050705, 0.12866666913032532, 0.12800000607967377]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 4, 5, 7, 5], [0, 0, 1, 0, 1, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304872989654541, 2.3133018016815186, 2.3304443359375, 2.3469302654266357, 2.360825777053833, 2.378117322921753, 2.401325225830078, 2.429140090942383, 2.461526870727539, 2.49883770942688], "accuracy": [0.10421344637870789, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308168649673462, 2.3234853744506836, 2.34086012840271, 2.355250597000122, 2.3704211711883545, 2.390946626663208, 2.4167871475219727, 2.4475789070129395, 2.4829487800598145, 2.522521734237671], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 0, 4, 5, 0], [16, 37], [0, 1, 0, 0, 1, 1], [6, 5, 3], [6, 2, 6], [0], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 5, 5, 2, 6, 3, 3, 0, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), grad), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.square(tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 54, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [7, 37], [0, 1], [0], [6], [0], [1], [0], [1], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309624433517456, 2.3099656105041504, 2.309093713760376, 2.309433698654175, 2.309987783432007, 2.3099124431610107], "accuracy": [0.09589222073554993, 0.0948355570435524, 0.09259014576673508, 0.09272222965955734, 0.08942015469074249, 0.09192973375320435], "val_loss": [2.3094351291656494, 2.3094351291656494, 2.3094351291656494, 2.3094351291656494, 2.3094351291656494, 2.3094351291656494], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]