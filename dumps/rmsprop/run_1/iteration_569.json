[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212775230407715, 1.6289209127426147, 1.1689869165420532, 0.9848936200141907, 0.9246444702148438, 0.838152289390564, 0.8389426469802856, 0.7511546015739441, 0.7299688458442688, 0.7075883746147156, 0.6906488537788391, 0.6929168701171875, 0.6746265292167664, 0.6384427547454834, 0.6506401300430298, 0.6177756786346436, 0.6019276976585388, 0.6093617081642151, 0.586300253868103, 0.5779114365577698, 0.5620555281639099, 0.5603161454200745, 0.535754919052124, 0.5425751805305481, 0.5338733196258545, 0.5202947854995728, 0.518010675907135, 0.5050536394119263, 0.5083004832267761, 0.49958667159080505, 0.47981497645378113, 0.48664069175720215, 0.4831807315349579, 0.471465528011322, 0.467863529920578, 0.45911964774131775, 0.47383174300193787, 0.45933738350868225, 0.4702443778514862, 0.44039103388786316, 0.4379006028175354, 0.4367603361606598, 0.439093679189682, 0.4292939305305481, 0.42481207847595215, 0.42011964321136475, 0.41088199615478516, 0.41666439175605774, 0.42148852348327637, 0.4131115674972534, 0.4111833870410919], "accuracy": [0.2759212851524353, 0.4917448163032532, 0.5896182656288147, 0.6551313996315002, 0.6670188903808594, 0.6972658634185791, 0.6930392384529114, 0.7246070504188538, 0.7308149337768555, 0.7359662055969238, 0.7458723783493042, 0.743891179561615, 0.752740740776062, 0.7663452625274658, 0.7593448758125305, 0.7720248103141785, 0.7786290049552917, 0.7744023203849792, 0.7865539789199829, 0.7884030938148499, 0.7905164361000061, 0.7938185334205627, 0.8099326491355896, 0.8034605979919434, 0.805177628993988, 0.8140271902084351, 0.8103289008140564, 0.8145555257797241, 0.81548011302948, 0.8146876096725464, 0.8231409192085266, 0.8228767514228821, 0.8284242749214172, 0.8301413059234619, 0.830669641494751, 0.8356888294219971, 0.8240655064582825, 0.8338396549224854, 0.8232730031013489, 0.8444063067436218, 0.8408400416374207, 0.8421608805656433, 0.8433496356010437, 0.8430854678153992, 0.8465195894241333, 0.8459912538528442, 0.8562937378883362, 0.846387505531311, 0.852331280708313, 0.8504821062088013, 0.8454629778862], "val_loss": [1.9277762174606323, 1.151138424873352, 0.8845078945159912, 0.7914670705795288, 0.7836500406265259, 0.7154863476753235, 0.6629573106765747, 0.673814594745636, 0.6193181872367859, 0.6131165027618408, 0.5857054591178894, 0.5743432641029358, 0.5669788718223572, 0.5787901878356934, 0.5779258608818054, 0.5339297652244568, 0.5408465266227722, 0.5164614915847778, 0.5307738184928894, 0.4988270699977875, 0.5197583436965942, 0.48114949464797974, 0.48415377736091614, 0.47340691089630127, 0.4895083010196686, 0.46424543857574463, 0.4585687518119812, 0.45415201783180237, 0.44596752524375916, 0.43966639041900635, 0.4372692406177521, 0.4465446472167969, 0.4343317151069641, 0.4419851005077362, 0.4285169541835785, 0.4255954921245575, 0.4249545633792877, 0.4534764885902405, 0.4135940670967102, 0.42324692010879517, 0.41953253746032715, 0.41757187247276306, 0.4085078835487366, 0.4148366153240204, 0.4160623848438263, 0.40110424160957336, 0.40049779415130615, 0.40055209398269653, 0.39784860610961914, 0.40294551849365234, 0.40079566836357117], "val_accuracy": [0.5826666951179504, 0.5863333344459534, 0.6966666579246521, 0.7176666855812073, 0.7163333296775818, 0.7170000076293945, 0.753000020980835, 0.734000027179718, 0.7603333592414856, 0.7513333559036255, 0.7710000276565552, 0.7853333353996277, 0.7889999747276306, 0.7696666717529297, 0.7760000228881836, 0.7870000004768372, 0.7973333597183228, 0.8109999895095825, 0.7996666431427002, 0.809333324432373, 0.79666668176651, 0.8193333148956299, 0.8196666836738586, 0.8230000138282776, 0.8169999718666077, 0.8259999752044678, 0.8256666660308838, 0.828000009059906, 0.8320000171661377, 0.8386666774749756, 0.8363333344459534, 0.8343333601951599, 0.8396666646003723, 0.8396666646003723, 0.8426666855812073, 0.8463333249092102, 0.8429999947547913, 0.8296666741371155, 0.8489999771118164, 0.8416666388511658, 0.8429999947547913, 0.8423333168029785, 0.8513333201408386, 0.8450000286102295, 0.8456666469573975, 0.8546666502952576, 0.8526666760444641, 0.8546666502952576, 0.8539999723434448, 0.8516666889190674, 0.8500000238418579]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 7], [0, 0, 0, 0, 2], [0, 39, 39, 2], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 3, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 4, 9, 5, 4, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [8, 2, 7, 3, 3, 8, 2], [2, 0, 3, 1, 0, 2], [16, 37], [0, 0, 1, 0], [0, 2, 9], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 7, 6, 2, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 1, 3, 3], [0, 0, 1, 0, 2], [0, 49, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [949527477485568.0, 1055995958657024.0, 1035181473398784.0, 1015202225061888.0, 1020585832349696.0, 1065020691578880.0], "accuracy": [0.10460969805717468, 0.11293092370033264, 0.10896842926740646, 0.11240258812904358, 0.1072513535618782, 0.11227050423622131], "val_loss": [1048712432320512.0, 1048721961779200.0, 1048696393302016.0, 1048696393302016.0, 1048696124866560.0, 1048696259084288.0], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39, 36], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 0, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 8, 5, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.382659673690796, 19785.6328125, 4679462289408.0, 2.3808743953704834, 2.326486825942993, 2.3088648319244385], "accuracy": [0.14119666814804077, 0.09668471664190292, 0.10381719470024109, 0.09694888442754745, 0.09853387624025345, 0.09549596905708313], "val_loss": [2.303534746170044, 63391120.0, 2.420743227005005, 2.341053009033203, 2.3123855590820312, 2.3048453330993652], "val_accuracy": [0.10233332961797714, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]