[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115349769592285, 1.6039360761642456, 1.1565383672714233, 1.0020720958709717, 0.909229040145874, 0.8090474009513855, 0.7865349054336548, 0.7405895590782166, 0.7299060821533203, 0.6836848258972168, 0.7109975814819336, 0.6583001613616943, 0.6466951370239258, 0.6508448123931885, 0.6297518610954285, 0.6001770496368408, 0.606563150882721, 0.5843158960342407, 0.5762982964515686, 0.5525683164596558, 0.5592363476753235, 0.5533135533332825, 0.5472863912582397, 0.5322248339653015, 0.5251505374908447, 0.5131554007530212, 0.5129933953285217, 0.49788403511047363, 0.5082259774208069, 0.48426175117492676, 0.4909430742263794, 0.47817203402519226, 0.4850122034549713, 0.46820610761642456, 0.46615681052207947, 0.4552939236164093, 0.4553620517253876, 0.4506840407848358, 0.4374110698699951, 0.4423541724681854, 0.4426644742488861, 0.42869988083839417, 0.41794711351394653, 0.43079420924186707, 0.4142976701259613, 0.41817590594291687, 0.4095488488674164, 0.4079248309135437, 0.40496671199798584, 0.409469336271286, 0.40146249532699585, 0.38765862584114075, 0.3860331177711487, 0.38532543182373047, 0.3890438377857208, 0.3880133330821991, 0.37686285376548767, 0.3896852433681488], "accuracy": [0.26099589467048645, 0.4917448163032532, 0.5926561951637268, 0.6349227428436279, 0.6693964004516602, 0.7029454708099365, 0.7077004313468933, 0.7215691208839417, 0.7256637215614319, 0.748249888420105, 0.7347774505615234, 0.752212405204773, 0.7605336308479309, 0.7540615797042847, 0.7604015469551086, 0.7749306559562683, 0.7741381525993347, 0.7844406366348267, 0.7829877138137817, 0.7931581139564514, 0.791969358921051, 0.7952714562416077, 0.7946110367774963, 0.8004226684570312, 0.800818920135498, 0.8107251524925232, 0.8117818236351013, 0.8195747137069702, 0.8054417967796326, 0.819970965385437, 0.8195747137069702, 0.8251221776008606, 0.8214238286018372, 0.8315942287445068, 0.830669641494751, 0.8327829837799072, 0.8294808864593506, 0.8339717388153076, 0.8341038227081299, 0.8379341959953308, 0.8379341959953308, 0.8441421389579773, 0.8437458872795105, 0.8422929644584656, 0.8496896028518677, 0.848368763923645, 0.8520671129226685, 0.8479725122451782, 0.8536521196365356, 0.8496896028518677, 0.8495575189590454, 0.8605204224586487, 0.8574824929237366, 0.8568220734596252, 0.8569541573524475, 0.8585391640663147, 0.863029956817627, 0.8560295701026917], "val_loss": [1.9312142133712769, 1.131869912147522, 0.935106635093689, 0.8584001660346985, 0.7976111769676208, 0.722212016582489, 0.7452916502952576, 0.6703531742095947, 0.6493980884552002, 0.6325653195381165, 0.6238315105438232, 0.5944415926933289, 0.6026136875152588, 0.6093690395355225, 0.5675607323646545, 0.5850593447685242, 0.5672686100006104, 0.5546393394470215, 0.5584190487861633, 0.528423011302948, 0.566377580165863, 0.5204966068267822, 0.5592365860939026, 0.5412409901618958, 0.5026460886001587, 0.5397841930389404, 0.4954676032066345, 0.5233180522918701, 0.4857921600341797, 0.4858841001987457, 0.4943728744983673, 0.4829029142856598, 0.4778437912464142, 0.472441703081131, 0.4632977843284607, 0.46514445543289185, 0.46314099431037903, 0.44730550050735474, 0.46495604515075684, 0.4631635844707489, 0.45383569598197937, 0.4496522545814514, 0.4434433579444885, 0.43744271993637085, 0.4398432970046997, 0.44621044397354126, 0.4363510012626648, 0.4481474757194519, 0.4320890009403229, 0.4285033643245697, 0.42806386947631836, 0.42239677906036377, 0.4204511344432831, 0.44457024335861206, 0.4292391240596771, 0.4221039116382599, 0.440693199634552, 0.41502588987350464], "val_accuracy": [0.5056666731834412, 0.628333330154419, 0.6639999747276306, 0.6846666932106018, 0.6959999799728394, 0.7196666598320007, 0.7143333554267883, 0.737333357334137, 0.7509999871253967, 0.7519999742507935, 0.7696666717529297, 0.7699999809265137, 0.7730000019073486, 0.762666642665863, 0.7866666913032532, 0.7793333530426025, 0.7883333563804626, 0.7743333578109741, 0.7760000228881836, 0.8016666769981384, 0.7860000133514404, 0.8026666641235352, 0.784333348274231, 0.7839999794960022, 0.8146666884422302, 0.7850000262260437, 0.8169999718666077, 0.7963333129882812, 0.8183333277702332, 0.8193333148956299, 0.812666654586792, 0.8220000267028809, 0.8199999928474426, 0.8256666660308838, 0.8320000171661377, 0.8293333053588867, 0.8256666660308838, 0.8386666774749756, 0.8316666483879089, 0.828000009059906, 0.8323333263397217, 0.8323333263397217, 0.8399999737739563, 0.843666672706604, 0.8396666646003723, 0.8330000042915344, 0.8410000205039978, 0.8366666436195374, 0.8446666598320007, 0.8479999899864197, 0.8486666679382324, 0.8483333587646484, 0.8516666889190674, 0.831333339214325, 0.8423333168029785, 0.847000002861023, 0.8366666436195374, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 3, 1, 3, 5], [2, 2, 1, 0, 2], [0, 39, 13], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 9, 5, 4, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304774284362793, 2.304853677749634, 2.30484676361084, 2.3048319816589355, 2.6000821590423584, 3.9021973609924316], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09681680053472519, 0.0936468094587326], "val_loss": [2.3048908710479736, 2.3048675060272217, 2.3048579692840576, 2.304638624191284, 2.8201744556427, 3.1689045429229736], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.07533333450555801, 0.08233333379030228]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [6, 7, 3, 0, 3, 5], [2, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 7, 7, 6, 5, 2, 1, 4, 6, 8, 0, 6, 2, 9], [2, 5, 2, 2, 0, 6, 0, 6, 5], [0, 90, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 9, 5, 4, 1, 2, 1, 1, 0, 23, 14, 9, 3], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, beta)), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 7, 0, 5, 7, 1, 8, 5, 6], [0, 0, 1, 0, 2, 2, 0, 0, 1], [49, 39, 11, 10, 60], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 3, 9], [2, 0, 3, 1, 0], [16, 37, 35], [0, 1], [8], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 14, 9, 5, 14, 9, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.square(tf.math.add(tf.math.subtract(tf.math.sqrt(grad), tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [7], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096210956573486, 2.3099727630615234, 2.3084447383880615, 2.311044931411743, 2.30863881111145, 2.3107893466949463], "accuracy": [0.09087307006120682, 0.09219389408826828, 0.09642054885625839, 0.09113723784685135, 0.09668471664190292, 0.08836349099874496], "val_loss": [2.308286190032959, 2.308286190032959, 2.308286190032959, 2.308286190032959, 2.308286190032959, 2.308286190032959], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]