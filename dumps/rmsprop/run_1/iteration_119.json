[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209932327270508, 1.5919654369354248, 1.1443979740142822, 0.9725404381752014, 0.8838608860969543, 0.832948625087738, 0.7567534446716309, 0.7468299269676208, 0.7048126459121704, 0.7152369618415833, 0.684350311756134, 0.6485897898674011, 0.6362237334251404, 0.6332298517227173, 0.6040670275688171, 0.6019034385681152, 0.603475034236908, 0.5945973992347717, 0.5707098841667175, 0.5702449679374695, 0.5631042122840881, 0.553905725479126, 0.5327998995780945, 0.5475307703018188, 0.5106775164604187, 0.5209436416625977, 0.5108784437179565, 0.5005264282226562, 0.49221789836883545, 0.48349398374557495, 0.48687708377838135, 0.4764724671840668, 0.4778538942337036], "accuracy": [0.26337340474128723, 0.5090476870536804, 0.6062607169151306, 0.6505085229873657, 0.6819442510604858, 0.6905296444892883, 0.7168141603469849, 0.7257958054542542, 0.7347774505615234, 0.7296261787414551, 0.7479857206344604, 0.7567031979560852, 0.7664773464202881, 0.7625148296356201, 0.7753269076347351, 0.7744023203849792, 0.7759873270988464, 0.7774402499198914, 0.7852331399917603, 0.7843085527420044, 0.7895918488502502, 0.7918372750282288, 0.7998943328857422, 0.7930260300636292, 0.8061022162437439, 0.8025360107421875, 0.8061022162437439, 0.8099326491355896, 0.8113855719566345, 0.8203672170639038, 0.817989706993103, 0.8236692547798157, 0.8208954930305481], "val_loss": [1.919614315032959, 1.1021145582199097, 0.8900983929634094, 0.8725171089172363, 0.7517317533493042, 0.6821531057357788, 0.6456338763237, 0.6325718760490417, 0.6177510023117065, 0.6332005858421326, 0.5814064145088196, 0.5797198414802551, 0.5499933362007141, 0.5598182678222656, 0.5364801287651062, 0.5486893057823181, 0.5402579307556152, 0.5193284749984741, 0.5241015553474426, 0.5347713828086853, 0.5118227601051331, 0.48967915773391724, 0.5078405141830444, 0.4916665852069855, 0.4732744097709656, 0.4737832546234131, 0.4663437604904175, 0.4560163617134094, 0.46073704957962036, 0.46334147453308105, 0.4552362561225891, 0.46335527300834656, 0.4515449106693268], "val_accuracy": [0.5333333611488342, 0.656000018119812, 0.6943333148956299, 0.6913333535194397, 0.7173333168029785, 0.7423333525657654, 0.7540000081062317, 0.765333354473114, 0.768666684627533, 0.7573333382606506, 0.7826666831970215, 0.7716666460037231, 0.7963333129882812, 0.7873333096504211, 0.793666660785675, 0.7866666913032532, 0.7850000262260437, 0.8006666898727417, 0.8046666383743286, 0.7996666431427002, 0.8026666641235352, 0.8159999847412109, 0.8016666769981384, 0.8086666464805603, 0.8193333148956299, 0.8169999718666077, 0.8263333439826965, 0.8270000219345093, 0.8199999928474426, 0.8206666707992554, 0.8263333439826965, 0.8233333230018616, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 7, 1, 3, 5, 6], [0, 0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [5], [0]], "fitness": -0.2094285786151886, "mapping_values": [1, 13, 7, 6, 3, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2693212032318115, 2.373849391937256, 2.3047842979431152, 2.531158447265625, 2.305589437484741, 2.3036816120147705], "accuracy": [0.22744683921337128, 0.14991414546966553, 0.10791176557540894, 0.1302337795495987, 0.0956280529499054, 0.09628847241401672], "val_loss": [1.9772040843963623, 2.314588785171509, 2.300601005554199, 2.307697057723999, 2.3032922744750977, 2.3028438091278076], "val_accuracy": [0.210999995470047, 0.09866666793823242, 0.07066666334867477, 0.09866666793823242, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [8, 2, 3, 1, 7, 3, 7, 0, 3, 1, 2, 1, 2, 4, 5, 7, 0, 6, 5, 6, 4, 4, 5, 4, 6, 7, 2, 6, 4, 0, 2, 8, 2, 0, 5, 8, 5, 4, 5, 2, 6, 5, 9, 0, 1, 3, 7, 7, 9, 4, 0], [3, 0, 1, 0, 2, 2, 3, 0, 2, 0, 1, 1, 0, 0, 1, 2, 2, 3, 0, 3, 2, 2, 2, 2, 1, 1, 0, 3, 3, 0, 1, 0], [0, 39, 39, 18, 45, 42, 21, 82, 6, 86, 63, 23], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 37], [0, 0, 0, 1, 1], [0, 0, 1], [6, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 83, 51, 32, 12, 4, 2, 2, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 60, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.add(grad, tf.math.pow(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), alpha)), tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.pow(tf.math.square(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.negative(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)))))), tf.math.divide_no_nan(tf.math.square(grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.subtract(grad, tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad), alpha), tf.math.pow(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))))))), grad)), grad)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))), alpha)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 7, 1, 3, 3], [0, 3, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 6, 2, 6, 2], [2, 0, 3, 1, 0, 1], [16, 37], [0, 1], [8], [6], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 1, 0, 1, 1, 12, 6, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100709915161133, 2.3101840019226074, 2.3097355365753174, 2.309809684753418, 2.3112053871154785, 2.309858798980713], "accuracy": [0.09377889335155487, 0.09945846349000931, 0.09245806187391281, 0.09391097724437714, 0.0866464152932167, 0.09232597798109055], "val_loss": [2.308321952819824, 2.308321952819824, 2.308321952819824, 2.308321952819824, 2.308321952819824, 2.308321952819824], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 1, 4, 3, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309790849685669, 2.3102920055389404, 2.310946464538574, 2.3094704151153564, 2.309269905090332, 2.3099112510681152], "accuracy": [0.0952318087220192, 0.09021265059709549, 0.09113723784685135, 0.0944393053650856, 0.09615638852119446, 0.09430722147226334], "val_loss": [2.3087503910064697, 2.3087503910064697, 2.3087503910064697, 2.3087503910064697, 2.3087503910064697, 2.3087503910064697], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]