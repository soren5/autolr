[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209481954574585, 1.5827882289886475, 1.1336390972137451, 0.970518171787262, 0.8816662430763245, 0.8351375460624695, 0.7591081857681274, 0.7564318776130676, 0.7067071199417114, 0.6962547302246094, 0.6860346794128418, 0.6549028158187866, 0.6509997844696045, 0.6356991529464722, 0.5954784154891968, 0.6162227988243103, 0.5689231753349304, 0.5681488513946533, 0.5741673707962036, 0.5598822832107544, 0.5529630780220032, 0.536383867263794, 0.5499642491340637, 0.517504870891571, 0.5120806097984314, 0.5239055156707764, 0.5037912726402283, 0.5017145276069641, 0.4844004213809967, 0.4756144881248474, 0.4911457598209381, 0.46821129322052, 0.4659688472747803, 0.460759699344635, 0.46850088238716125, 0.45416852831840515, 0.44775545597076416, 0.4500150978565216, 0.43715912103652954, 0.44405999779701233, 0.43055588006973267, 0.4184660315513611, 0.4249579906463623, 0.4160756468772888, 0.4245668947696686, 0.4149153530597687, 0.40768876671791077, 0.40706175565719604, 0.4054690897464752, 0.4037618339061737, 0.3990935981273651, 0.38385048508644104, 0.3873911201953888, 0.38189661502838135, 0.3739616870880127, 0.37130317091941833, 0.36249059438705444, 0.3765186369419098, 0.3818140923976898, 0.37259429693222046, 0.3557979464530945, 0.35629215836524963, 0.35959723591804504, 0.36597082018852234, 0.34536275267601013, 0.3493688106536865, 0.3407626450061798, 0.3472578823566437, 0.34281712770462036, 0.33391839265823364, 0.3380061984062195, 0.3340960144996643, 0.3323289453983307, 0.3321586549282074, 0.3285076320171356, 0.32088837027549744, 0.31863945722579956, 0.31849730014801025, 0.30987998843193054, 0.3134271800518036, 0.31660541892051697, 0.3149098753929138], "accuracy": [0.26760005950927734, 0.5156518220901489, 0.6003170013427734, 0.6547351479530334, 0.6832650899887085, 0.7028133869171143, 0.7219653725624084, 0.720380425453186, 0.7396644949913025, 0.7375511527061462, 0.7465327978134155, 0.7585523724555969, 0.7582882046699524, 0.7585523724555969, 0.7757231593132019, 0.767401933670044, 0.7881389260292053, 0.7887993454933167, 0.7839123010635376, 0.7948752045631409, 0.7936864495277405, 0.7991018295288086, 0.7977809906005859, 0.8123101592063904, 0.8113855719566345, 0.8101968169212341, 0.81112140417099, 0.8157442808151245, 0.8220842480659485, 0.8240655064582825, 0.8177255392074585, 0.826310932636261, 0.8304054737091064, 0.8310658931732178, 0.8308017253875732, 0.8294808864593506, 0.8322546482086182, 0.8374059200286865, 0.8383304476737976, 0.8374059200286865, 0.8454629778862, 0.8461233377456665, 0.8438779711723328, 0.8445383906364441, 0.8422929644584656, 0.8457271456718445, 0.8498216867446899, 0.8465195894241333, 0.8491612672805786, 0.8504821062088013, 0.8524633646011353, 0.858671247959137, 0.8565579056739807, 0.8564258217811584, 0.8643507957458496, 0.8648791313171387, 0.8650112152099609, 0.8609166741371155, 0.8607845902442932, 0.8667283058166504, 0.870030403137207, 0.8685774803161621, 0.8654074668884277, 0.8646149635314941, 0.8730682730674744, 0.8733324408531189, 0.8754457831382751, 0.8749174475669861, 0.8696341514587402, 0.8770307898521423, 0.8767666220664978, 0.8753136992454529, 0.8774270415306091, 0.8811253309249878, 0.8755778670310974, 0.8823140859603882, 0.8792761564254761, 0.8817857503890991, 0.8824461698532104, 0.8802007436752319, 0.878879964351654, 0.8820499181747437], "val_loss": [1.919058918952942, 1.090736746788025, 0.9840355515480042, 0.7961185574531555, 0.7566140294075012, 0.7151386141777039, 0.6633683443069458, 0.6721070408821106, 0.6107028126716614, 0.6356537342071533, 0.6027781367301941, 0.5907894968986511, 0.5820174813270569, 0.5684264302253723, 0.5979984402656555, 0.5462522506713867, 0.5506371259689331, 0.5526832938194275, 0.5177374482154846, 0.5274144411087036, 0.5135686993598938, 0.5217217803001404, 0.5073226690292358, 0.510393500328064, 0.5100440979003906, 0.4954248070716858, 0.5116775035858154, 0.48058611154556274, 0.47636866569519043, 0.47650715708732605, 0.4849892556667328, 0.4757808744907379, 0.4808592200279236, 0.47815921902656555, 0.4517560303211212, 0.46529102325439453, 0.4531583786010742, 0.4457576870918274, 0.4535606801509857, 0.44579368829727173, 0.4383304715156555, 0.4631386697292328, 0.4436829090118408, 0.44438090920448303, 0.4264996349811554, 0.44682371616363525, 0.42428919672966003, 0.42395099997520447, 0.42972660064697266, 0.42967432737350464, 0.42390862107276917, 0.4168139696121216, 0.4414495527744293, 0.42169034481048584, 0.4144861698150635, 0.4171500504016876, 0.411583811044693, 0.4259983003139496, 0.4003003239631653, 0.401317298412323, 0.3994494676589966, 0.40187373757362366, 0.4374779760837555, 0.3976055085659027, 0.3949003219604492, 0.39883437752723694, 0.39664554595947266, 0.4007596969604492, 0.3982398211956024, 0.39723971486091614, 0.4200226962566376, 0.3975999653339386, 0.3905559778213501, 0.3893013596534729, 0.38604745268821716, 0.3981698453426361, 0.38556188344955444, 0.37870001792907715, 0.3810611665248871, 0.38061174750328064, 0.39423510432243347, 0.387603759765625], "val_accuracy": [0.5506666898727417, 0.6516666412353516, 0.6579999923706055, 0.7153333425521851, 0.7173333168029785, 0.7323333621025085, 0.7490000128746033, 0.7546666860580444, 0.7663333415985107, 0.7563333511352539, 0.7803333401679993, 0.7739999890327454, 0.7820000052452087, 0.7910000085830688, 0.7733333110809326, 0.7876666784286499, 0.7799999713897705, 0.784333348274231, 0.8046666383743286, 0.800000011920929, 0.8090000152587891, 0.7996666431427002, 0.8146666884422302, 0.7986666560173035, 0.8086666464805603, 0.812333345413208, 0.7986666560173035, 0.8223333358764648, 0.8240000009536743, 0.824999988079071, 0.8206666707992554, 0.8183333277702332, 0.8276666402816772, 0.8190000057220459, 0.8286666870117188, 0.8243333101272583, 0.8370000123977661, 0.8379999995231628, 0.8356666564941406, 0.8336666822433472, 0.8346666693687439, 0.8226666450500488, 0.8386666774749756, 0.8330000042915344, 0.8463333249092102, 0.828000009059906, 0.847000002861023, 0.8450000286102295, 0.843666672706604, 0.8416666388511658, 0.8389999866485596, 0.8516666889190674, 0.8360000252723694, 0.8496666550636292, 0.8543333411216736, 0.8493333458900452, 0.8536666631698608, 0.8483333587646484, 0.856333315372467, 0.8556666374206543, 0.856333315372467, 0.8533333539962769, 0.840666651725769, 0.8586666584014893, 0.8566666841506958, 0.8586666584014893, 0.859000027179718, 0.8546666502952576, 0.859333336353302, 0.8583333492279053, 0.8426666855812073, 0.8539999723434448, 0.8619999885559082, 0.8600000143051147, 0.8633333444595337, 0.856333315372467, 0.8666666746139526, 0.8640000224113464, 0.8666666746139526, 0.8643333315849304, 0.8586666584014893, 0.8616666793823242]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [4, 2, 3, 1, 3, 6], [0, 0, 3, 0, 2], [18, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [96, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5, 4, 6, 7, 4, 8, 4, 2, 9, 5], [0, 0, 1, 0, 2, 3, 3, 2, 3, 1], [0, 39, 39, 44], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 1], [9], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(tf.math.sqrt(grad), grad)))), tf.math.pow(grad, grad)), tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 25, 15, 10, 4, 12, 7, 5, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5, 8], [0, 0, 1, 0, 2], [0, 28, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 4, 3, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303300142288208, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 2, 3, 1, 3, 3, 8, 5, 4, 1, 4, 3], [0, 1, 3, 0, 1, 0, 3, 0, 2, 3, 1], [0, 39, 39, 19], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [4], [0], [0, 1], [0], [0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 23, 12, 11, 4, 9, 5, 4, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.pow(grad, tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3107218742370605, 2.3102211952209473, 2.3104050159454346, 2.3093369007110596, 2.3105409145355225, 2.309847593307495], "accuracy": [0.09245806187391281, 0.09377889335155487, 0.08942015469074249, 0.09153348207473755, 0.08836349099874496, 0.08915598690509796], "val_loss": [2.309251546859741, 2.309251546859741, 2.309251546859741, 2.309251546859741, 2.309251546859741, 2.309251546859741], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}]