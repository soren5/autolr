[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210641622543335, 1.6134167909622192, 1.1423957347869873, 1.0126924514770508, 0.8928816318511963, 0.8315516710281372, 0.8066367506980896, 0.7625737190246582, 0.7256642580032349, 0.7279140949249268, 0.6971116662025452, 0.6815165877342224, 0.679936945438385, 0.640838086605072, 0.6340634226799011, 0.6362690329551697, 0.6233726143836975, 0.591517984867096, 0.5985824465751648, 0.5763498544692993, 0.5684693455696106, 0.5628836154937744, 0.5605984330177307, 0.5389299392700195, 0.5419079065322876, 0.5419906377792358, 0.5207281708717346, 0.5185835361480713, 0.5086058974266052, 0.5063931345939636, 0.49738600850105286, 0.49976950883865356, 0.48928892612457275, 0.480186402797699, 0.4776133596897125, 0.47298502922058105, 0.467734694480896, 0.4634277820587158, 0.457571804523468, 0.44636568427085876, 0.4546542167663574], "accuracy": [0.27420419454574585, 0.501518964767456, 0.5996565818786621, 0.6392814517021179, 0.6798309087753296, 0.694360077381134, 0.6997754573822021, 0.7152291536331177, 0.7268524765968323, 0.7284374833106995, 0.7436270117759705, 0.750231146812439, 0.7433628439903259, 0.7592127919197083, 0.7619865536689758, 0.7617223858833313, 0.7622507214546204, 0.7800818681716919, 0.7754589915275574, 0.7849689722061157, 0.7841764688491821, 0.7898560166358948, 0.7889314293861389, 0.7998943328857422, 0.7969884872436523, 0.7959318161010742, 0.8067626357078552, 0.8037247657775879, 0.8084797263145447, 0.8068947196006775, 0.8131026029586792, 0.8098005652427673, 0.8208954930305481, 0.8198388814926147, 0.8215559124946594, 0.8244617581367493, 0.8276317715644836, 0.8314621448516846, 0.8286884427070618, 0.8321225643157959, 0.8309338092803955], "val_loss": [1.9215002059936523, 1.1033021211624146, 0.8809167742729187, 0.8002477288246155, 0.7372646331787109, 0.7475551962852478, 0.6701972484588623, 0.6599987745285034, 0.6435577273368835, 0.6596044301986694, 0.5972936749458313, 0.5859655737876892, 0.6009082198143005, 0.5630543231964111, 0.5568215250968933, 0.5568479895591736, 0.5469484329223633, 0.5548272132873535, 0.5261094570159912, 0.5313084721565247, 0.5095490217208862, 0.5096714496612549, 0.5068895816802979, 0.5194175839424133, 0.49508997797966003, 0.49858197569847107, 0.4949754774570465, 0.4977901875972748, 0.473262220621109, 0.48012077808380127, 0.47245484590530396, 0.49082931876182556, 0.46720704436302185, 0.45714226365089417, 0.46832534670829773, 0.4479072391986847, 0.4469267725944519, 0.451966792345047, 0.44831380248069763, 0.44458919763565063, 0.4488644301891327], "val_accuracy": [0.5253333449363708, 0.6433333158493042, 0.6743333339691162, 0.7043333053588867, 0.7176666855812073, 0.6993333101272583, 0.7400000095367432, 0.7413333058357239, 0.7486666440963745, 0.7429999709129333, 0.7749999761581421, 0.7646666765213013, 0.765999972820282, 0.7860000133514404, 0.7960000038146973, 0.7773333191871643, 0.7979999780654907, 0.7870000004768372, 0.8013333082199097, 0.7923333048820496, 0.8169999718666077, 0.8073333501815796, 0.8080000281333923, 0.8080000281333923, 0.8206666707992554, 0.8143333196640015, 0.8230000138282776, 0.8159999847412109, 0.8216666579246521, 0.8316666483879089, 0.8256666660308838, 0.8166666626930237, 0.8270000219345093, 0.8336666822433472, 0.8226666450500488, 0.8396666646003723, 0.8370000123977661, 0.8339999914169312, 0.8333333134651184, 0.8389999866485596, 0.8306666612625122]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 9], [2, 0, 3, 1, 4], [16, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [7, 6, 7, 1, 2, 5, 1, 7, 4, 4, 3, 8], [0, 2, 0, 6, 3, 2, 7, 0, 7, 4, 1], [0, 18, 78], [1], [0], [5], [0]], "fitness": -0.2997142970561981, "mapping_values": [1, 11, 6, 5, 2, 12, 8, 4, 2, 23, 12, 11, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad), sigma)), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(grad, grad), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3324737548828125, 2.288722276687622, 2.282907009124756, 2.2876968383789062, 2.2515621185302734, 2.408766031265259, 2.3057682514190674, 2.3038547039031982], "accuracy": [0.18597279489040375, 0.16457535326480865, 0.14555540680885315, 0.20855897665023804, 0.1678774207830429, 0.12336547672748566, 0.09615638852119446, 0.09642054885625839], "val_loss": [2.2516825199127197, 2.30448842048645, 2.3399102687835693, 2.2781636714935303, 2.595845937728882, 2.306117534637451, 2.303590774536133, 2.302968740463257], "val_accuracy": [0.27399998903274536, 0.09866666793823242, 0.29899999499320984, 0.12300000339746475, 0.28966665267944336, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [77, 1], [0, 1, 0, 1, 1], [1, 6], [0, 3, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037352561950684, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [7, 2, 3, 6, 3, 5, 1, 2, 3, 4, 4, 8, 3], [0, 0, 1, 0, 2, 2, 2, 1, 0, 1, 0, 0], [0, 39, 39, 67, 49, 26], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [4, 2, 0, 5, 3, 8, 2, 9], [2, 0, 3, 0, 0], [16, 1, 93], [0, 1], [0], [0], [45], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 13, 12, 6, 12, 8, 4, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.pow(grad, tf.math.pow(tf.math.sqrt(tf.math.multiply(grad, alpha)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 0, 6, 3, 8, 5, 2, 5, 9, 1, 4, 7, 9], [2, 4, 3, 1, 0, 3], [16, 1, 51], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 5, 1, 5, 8, 2, 9], [0, 5, 5], [0, 7], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 20, 14, 6, 3, 10, 7, 3, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.square(beta)), tf.math.add(tf.math.square(grad), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.math.sqrt(grad)), tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]