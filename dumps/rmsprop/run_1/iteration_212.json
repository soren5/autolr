[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214613199234009, 1.6168758869171143, 1.172866940498352, 0.9833037853240967, 0.8719149231910706, 0.8128184080123901, 0.8114790916442871, 0.7420011162757874, 0.7281136512756348, 0.7092419862747192, 0.6916871070861816, 0.668057382106781, 0.6414309740066528, 0.6341337561607361, 0.6333573460578918, 0.6081780791282654, 0.5934819579124451, 0.5972898006439209, 0.5813401341438293, 0.5650157928466797, 0.5497387051582336, 0.5557159781455994, 0.5315922498703003, 0.539544403553009, 0.5285227298736572, 0.5153740644454956, 0.5176709890365601, 0.501887321472168, 0.5051122903823853, 0.5006185173988342, 0.48795780539512634, 0.478149950504303, 0.46996092796325684, 0.4688711166381836, 0.474844366312027, 0.46211981773376465, 0.4603866934776306], "accuracy": [0.26403382420539856, 0.49927353858947754, 0.5843349695205688, 0.6539427042007446, 0.6859067678451538, 0.7102100253105164, 0.7033417224884033, 0.7338528633117676, 0.7310791015625, 0.7401928305625916, 0.7460044622421265, 0.7565711140632629, 0.7613261342048645, 0.7647602558135986, 0.7647602558135986, 0.778761088848114, 0.7779685854911804, 0.7799497842788696, 0.7868181467056274, 0.7947431206703186, 0.7968564033508301, 0.7917051911354065, 0.8054417967796326, 0.8009510040283203, 0.8030643463134766, 0.8070268034934998, 0.809140145778656, 0.8161405324935913, 0.8149517774581909, 0.8148196935653687, 0.821820080280304, 0.8210275769233704, 0.8298771381378174, 0.8280280232429504, 0.8251221776008606, 0.8356888294219971, 0.8315942287445068], "val_loss": [1.9350351095199585, 1.1362864971160889, 0.8815121054649353, 0.7771263122558594, 0.7396066188812256, 0.7353452444076538, 0.679979681968689, 0.6713660955429077, 0.6369964480400085, 0.6323447227478027, 0.6507096886634827, 0.5968559384346008, 0.5665593147277832, 0.5841506123542786, 0.5496954917907715, 0.5626173615455627, 0.5472131967544556, 0.5255570411682129, 0.5325537919998169, 0.508177638053894, 0.5455935597419739, 0.509530246257782, 0.5092475414276123, 0.4978969693183899, 0.49438777565956116, 0.4951869249343872, 0.48958268761634827, 0.5378242135047913, 0.46727612614631653, 0.46403881907463074, 0.46038752794265747, 0.4660475552082062, 0.46155595779418945, 0.4824502766132355, 0.468888521194458, 0.4500062167644501, 0.46862033009529114], "val_accuracy": [0.4986666738986969, 0.6103333234786987, 0.6809999942779541, 0.7193333506584167, 0.7200000286102295, 0.7176666855812073, 0.7446666955947876, 0.7490000128746033, 0.7509999871253967, 0.737666666507721, 0.7516666650772095, 0.7736666798591614, 0.7770000100135803, 0.7590000033378601, 0.7870000004768372, 0.7883333563804626, 0.7753333449363708, 0.7963333129882812, 0.7996666431427002, 0.8043333292007446, 0.7806666493415833, 0.7996666431427002, 0.8016666769981384, 0.8146666884422302, 0.8183333277702332, 0.8080000281333923, 0.8100000023841858, 0.7933333516120911, 0.8273333311080933, 0.8256666660308838, 0.8270000219345093, 0.8336666822433472, 0.8206666707992554, 0.8063333630561829, 0.8203333616256714, 0.8286666870117188, 0.8199999928474426]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 0, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [93, 37], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 8, 0, 2, 1, 8, 1, 0, 9], [6, 6, 2], [0], [1], [0], [2], [0]], "fitness": -0.18457143008708954, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 12, 9, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.negative(beta)), tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.math.sqrt(grad)), tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.6625137933558105e+28, 5.656860946828622e+28, 5.522031244666266e+28, 5.453989027197839e+28, 5.601759430233203e+28, 5.47288888233558e+28], "accuracy": [0.13168670237064362, 0.13261127471923828, 0.13617752492427826, 0.13697001338005066, 0.1402720957994461, 0.13895125687122345], "val_loss": [4.021454432252849e+28, 4.021454432252849e+28, 4.021454432252849e+28, 4.021454432252849e+28, 4.021454432252849e+28, 4.021454432252849e+28], "val_accuracy": [0.19333332777023315, 0.19333332777023315, 0.19333332777023315, 0.19333332777023315, 0.19333332777023315, 0.19333332777023315]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 2, 3, 1, 3, 5, 4, 0, 6, 9, 1, 4, 9], [0, 0, 1, 0, 2, 1, 3], [0, 39, 39, 77, 83], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 13, 7, 5, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.pow(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 8, 3, 1, 3, 5, 8], [0, 0, 0, 0, 2], [58, 39, 39, 10], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 8, 2, 1, 2, 5], [2, 5, 3, 1, 0, 1, 4], [16, 1], [1, 1], [0], [0], [11], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 17, 10, 7, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 1, 0], [0, 0, 1, 0, 2, 3], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 4, 3, 5, 0], [16, 37], [0, 1], [0], [0], [81], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 14, 8, 6, 3, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094358444213867, 2.3106026649475098, 2.309605836868286, 2.309150218963623, 2.3101086616516113, 2.3103652000427246], "accuracy": [0.1018359512090683, 0.08875974267721176, 0.09430722147226334, 0.09668471664190292, 0.08889182657003403, 0.09430722147226334], "val_loss": [2.3090951442718506, 2.3090951442718506, 2.3090951442718506, 2.3090951442718506, 2.3090951442718506, 2.3090951442718506], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]