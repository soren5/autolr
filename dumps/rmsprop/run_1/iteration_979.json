[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212754011154175, 1.6115992069244385, 1.1544132232666016, 0.9831900596618652, 0.9012442231178284, 0.839533269405365, 0.788507878780365, 0.7680712938308716, 0.7424757480621338, 0.7339094877243042, 0.6750436425209045, 0.6732131242752075, 0.6606751680374146, 0.6554039716720581, 0.6369276642799377, 0.6343701481819153, 0.6084436178207397, 0.597495973110199, 0.5896658897399902, 0.5720913410186768, 0.5614050626754761, 0.5538448095321655, 0.5581750869750977, 0.5384523868560791, 0.5324932336807251, 0.5315788984298706, 0.5312446355819702, 0.5153392553329468, 0.5124006867408752], "accuracy": [0.27618545293807983, 0.5144630670547485, 0.6032228469848633, 0.6534143686294556, 0.6812838315963745, 0.6917183995246887, 0.7103421092033386, 0.7217012047767639, 0.7251353859901428, 0.7313432693481445, 0.7519482374191284, 0.7475894689559937, 0.7515519857406616, 0.755118191242218, 0.7606657147407532, 0.7643640041351318, 0.7724210619926453, 0.7800818681716919, 0.7788931727409363, 0.791441023349762, 0.7915731072425842, 0.7943468689918518, 0.7917051911354065, 0.800290584564209, 0.8021397590637207, 0.8050455451011658, 0.8068947196006775, 0.8084797263145447, 0.8083476424217224], "val_loss": [1.9290556907653809, 1.1167186498641968, 0.899885892868042, 0.8054987192153931, 0.7351503372192383, 0.7071893811225891, 0.7056742906570435, 0.6585249900817871, 0.6873282194137573, 0.6205951571464539, 0.6349982619285583, 0.5813032388687134, 0.5652201175689697, 0.5619116425514221, 0.6248999238014221, 0.539448618888855, 0.5646585822105408, 0.5743928551673889, 0.545263946056366, 0.535287618637085, 0.5010268092155457, 0.5259969234466553, 0.4972263276576996, 0.4879954755306244, 0.49360376596450806, 0.5097481608390808, 0.49374979734420776, 0.48647046089172363, 0.471652626991272], "val_accuracy": [0.5353333353996277, 0.6349999904632568, 0.6919999718666077, 0.6996666789054871, 0.7296666502952576, 0.7356666922569275, 0.721666693687439, 0.7586666941642761, 0.7263333201408386, 0.7646666765213013, 0.7443333268165588, 0.7743333578109741, 0.7950000166893005, 0.7940000295639038, 0.7590000033378601, 0.8040000200271606, 0.7976666688919067, 0.7770000100135803, 0.7886666655540466, 0.7960000038146973, 0.8216666579246521, 0.8029999732971191, 0.8276666402816772, 0.8323333263397217, 0.8266666531562805, 0.8159999847412109, 0.8256666660308838, 0.8220000267028809, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 6, 6, 9, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8019999861717224, "mapping_values": [1, 8, 5, 3, 3, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3019800186157227, 2.2613768577575684, 2.17598819732666, 1.9475455284118652, 1.5025206804275513, 1.3586616516113281, 1.2469819784164429, 0.9563817977905273, 0.9348126649856567, 0.8754433989524841, 0.8412148356437683, 0.8172227740287781, 0.8118940591812134, 0.763140857219696, 0.7437425851821899, 0.729244589805603, 0.7054856419563293, 0.6718918085098267, 0.6654282212257385, 0.656359851360321, 0.6407727003097534, 0.6360139846801758, 0.6076721549034119, 0.5997089743614197, 0.5985068082809448, 0.5918551087379456, 0.5745437145233154, 0.5707269906997681, 0.5707438588142395, 0.5598851442337036, 0.5546727180480957, 0.5378742218017578, 0.5340874195098877, 0.5266424417495728, 0.5244888067245483, 0.5157957077026367, 0.5075358748435974, 0.5136746764183044, 0.504149854183197, 0.4991258680820465, NaN, NaN, NaN], "accuracy": [0.10513802617788315, 0.22216351330280304, 0.3605864346027374, 0.4057588279247284, 0.48289525508880615, 0.5373134613037109, 0.6012415885925293, 0.6501122713088989, 0.6600185036659241, 0.6761326193809509, 0.6966054439544678, 0.6964733600616455, 0.6952846646308899, 0.7043983340263367, 0.7127195596694946, 0.7253995537757874, 0.7339849472045898, 0.7395324110984802, 0.741909921169281, 0.7446836829185486, 0.7589486241340637, 0.7537974119186401, 0.7601373791694641, 0.7692511081695557, 0.7692511081695557, 0.7708360552787781, 0.7795535326004028, 0.7786290049552917, 0.7821952104568481, 0.7820631265640259, 0.7884030938148499, 0.7915731072425842, 0.7989697456359863, 0.7994980812072754, 0.7976489067077637, 0.800290584564209, 0.806630551815033, 0.8030643463134766, 0.8064984679222107, 0.813498854637146, 0.5773345828056335, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2809970378875732, 2.2177343368530273, 2.0687031745910645, 1.6315864324569702, 1.0402497053146362, 0.9202604293823242, 0.8036710619926453, 0.7854315042495728, 0.7916209101676941, 0.6945934295654297, 0.6859541535377502, 0.6789637207984924, 0.6516652703285217, 0.6448853611946106, 0.6468031406402588, 0.634660542011261, 0.5962359309196472, 0.5792617201805115, 0.5752831101417542, 0.5605474710464478, 0.5541085004806519, 0.5449870824813843, 0.5394725203514099, 0.5296093821525574, 0.5226470828056335, 0.5094897747039795, 0.5078659653663635, 0.5073316097259521, 0.4991001784801483, 0.4928310811519623, 0.48779720067977905, 0.48397356271743774, 0.4885527789592743, 0.48706725239753723, 0.4837918281555176, 0.47773632407188416, 0.47413477301597595, 0.474019318819046, 0.4631531536579132, 0.4592437744140625, NaN, NaN, NaN], "val_accuracy": [0.17800000309944153, 0.4623333215713501, 0.4650000035762787, 0.5633333325386047, 0.6316666603088379, 0.6673333048820496, 0.7049999833106995, 0.7096666693687439, 0.718999981880188, 0.7303333282470703, 0.7393333315849304, 0.734000027179718, 0.7483333349227905, 0.7396666407585144, 0.7506666779518127, 0.7603333592414856, 0.7636666893959045, 0.7670000195503235, 0.7730000019073486, 0.7803333401679993, 0.778333306312561, 0.7919999957084656, 0.7946666479110718, 0.7950000166893005, 0.793666660785675, 0.796999990940094, 0.8063333630561829, 0.8056666851043701, 0.8069999814033508, 0.8076666593551636, 0.812666654586792, 0.8180000185966492, 0.8166666626930237, 0.8186666369438171, 0.8143333196640015, 0.8203333616256714, 0.8223333358764648, 0.8273333311080933, 0.8256666660308838, 0.8263333439826965, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 2, 6, 3, 8, 8], [5, 3, 4, 1, 5], [16, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [3, 2, 1, 3, 2, 8, 0, 6, 3, 2, 3, 7, 3, 5, 4, 6, 3, 6, 4, 9, 7, 5, 3, 7, 1, 5, 9, 2, 5, 4, 4, 7, 0, 9, 0, 5, 7, 7, 7, 8, 1, 1, 4, 9], [0, 0, 6, 4, 7, 0, 0, 5, 0, 7, 0, 4, 2, 0, 1, 6, 4, 5, 3, 4, 5, 5, 2, 3, 5, 4, 5], [0, 29, 96, 8, 96, 78, 70, 43, 38, 19, 80], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 71, 44, 27, 11, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.pow(tf.math.pow(tf.math.add(tf.math.negative(grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad), beta)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), alpha))), grad), tf.math.negative(tf.math.square(grad))), tf.math.add(tf.math.add(grad, sigma), tf.math.add(tf.math.sqrt(grad), tf.math.subtract(grad, tf.math.subtract(grad, beta))))))), sigma), tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3709.46142578125, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2028794139623642, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [948715584.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 7, 3, 9], [0, 0, 1, 0, 2], [4, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 9, 0, 4, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1], [0, 8, 4, 7, 9], [0, 1], [0, 43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303203582763672, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 6, 3, 3, 2, 2, 2, 0, 1, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6, 6, 4, 0, 2, 1, 7, 1, 8], [2, 0, 1, 2, 0, 5, 5, 2, 3, 4, 4, 1], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 2, 28, 16, 12, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.math.negative(grad), tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.sqrt(grad))), grad))), alpha)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30967378616333, 2.310537099838257, 2.309140682220459, 2.3095803260803223, 2.3100552558898926, 2.3105356693267822], "accuracy": [0.09166556596755981, 0.09351472556591034, 0.09179764986038208, 0.09166556596755981, 0.08994849026203156, 0.09245806187391281], "val_loss": [2.308868885040283, 2.308868885040283, 2.308868885040283, 2.308868885040283, 2.308868885040283, 2.308868885040283], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]