[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8094285726547241, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2088353633880615, 1.5925894975662231, 1.1417109966278076, 0.9884525537490845, 0.8646658062934875, 0.806836724281311, 0.7937526702880859, 0.7529732584953308, 0.7172905802726746, 0.7048369646072388, 0.6895304918289185, 0.6747550368309021, 0.6454253196716309, 0.6239126920700073, 0.6186777353286743, 0.6294064521789551, 0.6017287373542786, 0.5769203901290894, 0.5743995308876038, 0.5715153217315674, 0.5510277152061462, 0.5364954471588135, 0.5409465432167053, 0.5467879176139832, 0.5231910943984985, 0.5084453225135803, 0.5079919099807739, 0.509101927280426, 0.49951016902923584, 0.49862760305404663, 0.4845896363258362, 0.47330138087272644, 0.4825054407119751, 0.4668584167957306, 0.4796125590801239, 0.4671272337436676, 0.4530780613422394, 0.4522751569747925, 0.44317159056663513, 0.4328458607196808, 0.4267802834510803, 0.4276009202003479, 0.42838096618652344, 0.43068939447402954, 0.42098334431648254, 0.41731882095336914, 0.4165011942386627, 0.404649555683136, 0.41067826747894287, 0.40505489706993103, 0.3983839154243469, 0.3889019191265106, 0.3901749551296234, 0.391759991645813], "accuracy": [0.26918503642082214, 0.5138026475906372, 0.6036190986633301, 0.6424514651298523, 0.6872276067733765, 0.7029454708099365, 0.7057191729545593, 0.7215691208839417, 0.7353057861328125, 0.7383436560630798, 0.7429665923118591, 0.7456082701683044, 0.7600052952766418, 0.7687227725982666, 0.7711002230644226, 0.76542067527771, 0.774270236492157, 0.780610203742981, 0.7847048044204712, 0.7902522683143616, 0.7936864495277405, 0.7992339134216309, 0.7967243194580078, 0.7955356240272522, 0.8079513907432556, 0.8127063512802124, 0.8087438941001892, 0.8109893202781677, 0.81548011302948, 0.822348415851593, 0.8204993009567261, 0.830669641494751, 0.8231409192085266, 0.829216718673706, 0.8211596608161926, 0.8256505131721497, 0.8321225643157959, 0.8337075710296631, 0.8391229510307312, 0.8424250483512878, 0.8448025584220886, 0.8425571322441101, 0.8436138033866882, 0.8429533839225769, 0.848368763923645, 0.846387505531311, 0.8479725122451782, 0.8512746095657349, 0.8494254350662231, 0.8516708612442017, 0.858671247959137, 0.8595958352088928, 0.858671247959137, 0.8585391640663147], "val_loss": [1.907499074935913, 1.0582078695297241, 0.8302672505378723, 0.7393317222595215, 0.6834422945976257, 0.6602087616920471, 0.61945641040802, 0.5901780128479004, 0.5841009616851807, 0.588610053062439, 0.5385131239891052, 0.5661675333976746, 0.5355466604232788, 0.5250884890556335, 0.538917064666748, 0.5218862295150757, 0.48422685265541077, 0.48921239376068115, 0.5754157304763794, 0.46558141708374023, 0.46351358294487, 0.4954143762588501, 0.4821661710739136, 0.4606049060821533, 0.4582377076148987, 0.44142717123031616, 0.44742488861083984, 0.4390126168727875, 0.47776371240615845, 0.44069012999534607, 0.43176203966140747, 0.4239329695701599, 0.4238413870334625, 0.44259876012802124, 0.43431010842323303, 0.415539026260376, 0.4091126322746277, 0.4069603681564331, 0.4336566925048828, 0.4136054813861847, 0.4097583293914795, 0.4227372109889984, 0.39715462923049927, 0.4055268466472626, 0.4116306006908417, 0.40047216415405273, 0.3927152156829834, 0.3896142542362213, 0.38362786173820496, 0.3896127939224243, 0.3841371238231659, 0.38572147488594055, 0.38258886337280273, 0.38346752524375916], "val_accuracy": [0.5976666808128357, 0.6816666722297668, 0.7096666693687439, 0.7283333539962769, 0.7446666955947876, 0.7523333430290222, 0.7673333287239075, 0.7836666703224182, 0.7870000004768372, 0.7749999761581421, 0.8040000200271606, 0.781000018119812, 0.7836666703224182, 0.7919999957084656, 0.8056666851043701, 0.7986666560173035, 0.8253333568572998, 0.8163333535194397, 0.7723333239555359, 0.828000009059906, 0.8336666822433472, 0.7913333177566528, 0.8169999718666077, 0.8353333473205566, 0.8349999785423279, 0.8339999914169312, 0.8333333134651184, 0.8393333554267883, 0.7986666560173035, 0.8410000205039978, 0.840666651725769, 0.8479999899864197, 0.8473333120346069, 0.8326666951179504, 0.8376666903495789, 0.8473333120346069, 0.8503333330154419, 0.8550000190734863, 0.8293333053588867, 0.8460000157356262, 0.8479999899864197, 0.8473333120346069, 0.8556666374206543, 0.8519999980926514, 0.8483333587646484, 0.8516666889190674, 0.856333315372467, 0.8553333282470703, 0.8603333234786987, 0.8573333621025085, 0.8586666584014893, 0.8573333621025085, 0.8569999933242798, 0.8560000061988831]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 1, 9], [0, 0, 1, 0, 2], [0, 90, 39, 93], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 9, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 4, 3, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2933480739593506, 2.323211669921875, 2.3153247833251953, 2.3096837997436523, 2.3157637119293213, 2.3181676864624023, 2.3146204948425293], "accuracy": [0.11596883088350296, 0.1002509593963623, 0.10077928751707077, 0.10328886657953262, 0.09853387624025345, 0.09985470771789551, 0.09959053993225098], "val_loss": [2.310163736343384, 2.3072588443756104, 2.3172502517700195, 2.3288586139678955, 2.3130974769592285, 2.3067307472229004, 2.308363199234009], "val_accuracy": [0.09966666996479034, 0.10499999672174454, 0.10133333504199982, 0.10233332961797714, 0.10133333504199982, 0.09799999743700027, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 7, 3, 4, 0], [0, 0, 1, 0, 2, 1, 1, 3], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 3, 4, 2, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.pow(alpha, alpha)))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3596474787775172e+20, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20076608657836914, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 5, 0, 3, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310648202896118, 2.3105552196502686, 2.3108317852020264, 2.309202194213867, 2.311461925506592, 2.311255931854248], "accuracy": [0.09298639744520187, 0.09021265059709549, 0.09655263274908066, 0.09245806187391281, 0.09140139818191528, 0.08928807079792023], "val_loss": [2.308534622192383, 2.308534622192383, 2.308534622192383, 2.308534622192383, 2.308534622192383, 2.308534622192383], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [8, 2, 3, 1, 3, 8, 5, 5], [0, 0, 1, 0, 3], [0, 39, 39], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 13, 8, 5, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101601600646973, 2.310220718383789, 2.3110034465789795, 2.311160087585449, 2.3094143867492676, 2.309873104095459], "accuracy": [0.09074098616838455, 0.0956280529499054, 0.09034473448991776, 0.08955223858356476, 0.0952318087220192, 0.09628847241401672], "val_loss": [2.3088595867156982, 2.3088595867156982, 2.3088595867156982, 2.3088595867156982, 2.3088595867156982, 2.3088595867156982], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]