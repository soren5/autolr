[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208552598953247, 1.603238821029663, 1.1463426351547241, 0.9749271273612976, 0.8929548859596252, 0.8238147497177124, 0.7775840163230896, 0.7405361533164978, 0.7372612953186035, 0.7142815589904785, 0.6884734630584717, 0.6646866798400879, 0.6542936563491821, 0.6372973918914795, 0.6075830459594727, 0.6232423186302185, 0.6033932566642761, 0.5774125456809998, 0.5815725922584534, 0.5632104873657227, 0.5812550783157349, 0.5418956279754639, 0.5353829860687256, 0.540739119052887, 0.5333516001701355, 0.5239796042442322, 0.5278620719909668, 0.5138266086578369, 0.5041532516479492, 0.49973148107528687, 0.4849414825439453, 0.4857763350009918, 0.47772178053855896, 0.4766753315925598, 0.47374340891838074, 0.4555470049381256, 0.45634421706199646, 0.45389360189437866, 0.4458253085613251, 0.4563550055027008, 0.44889700412750244, 0.4380973279476166, 0.4306148290634155, 0.4371596574783325, 0.4324376583099365, 0.42339470982551575, 0.41886037588119507, 0.41750389337539673, 0.4067060947418213, 0.3983250856399536, 0.404989093542099, 0.40155738592147827], "accuracy": [0.2694492042064667, 0.5046889185905457, 0.6041474342346191, 0.6527539491653442, 0.6773213744163513, 0.6927750706672668, 0.7123233675956726, 0.7275128960609436, 0.7230220437049866, 0.7301545143127441, 0.7412495017051697, 0.7512878179550171, 0.7495707273483276, 0.7569673657417297, 0.7741381525993347, 0.7656848430633545, 0.7751948237419128, 0.7796856164932251, 0.7794214487075806, 0.7865539789199829, 0.7770439982414246, 0.7910447716712952, 0.7977809906005859, 0.7996301651000977, 0.7992339134216309, 0.8054417967796326, 0.8006868362426758, 0.81112140417099, 0.813498854637146, 0.8128384351730347, 0.8187822103500366, 0.8177255392074585, 0.8182538747787476, 0.8232730031013489, 0.8248580098152161, 0.8301413059234619, 0.8300092220306396, 0.8284242749214172, 0.8354246616363525, 0.8241975903511047, 0.8341038227081299, 0.8393871188163757, 0.8444063067436218, 0.8401796221733093, 0.8362171649932861, 0.8438779711723328, 0.8401796221733093, 0.8453308939933777, 0.8495575189590454, 0.8524633646011353, 0.8473120927810669, 0.852859616279602], "val_loss": [1.913290023803711, 1.1122870445251465, 0.8527628779411316, 0.8816319704055786, 0.737540066242218, 0.7732906341552734, 0.6593295931816101, 0.6255396604537964, 0.6158532500267029, 0.5868058800697327, 0.5775225162506104, 0.5870269536972046, 0.5941935181617737, 0.5411278605461121, 0.5594469308853149, 0.5288066267967224, 0.5310298800468445, 0.4982549548149109, 0.49976620078086853, 0.48427990078926086, 0.47874748706817627, 0.48667487502098083, 0.47054407000541687, 0.4707220494747162, 0.47489309310913086, 0.45255184173583984, 0.449622243642807, 0.44875428080558777, 0.4535776376724243, 0.4422367811203003, 0.44780662655830383, 0.4361763894557953, 0.44152432680130005, 0.4413664638996124, 0.42407238483428955, 0.42441073060035706, 0.4532918334007263, 0.40973156690597534, 0.480267733335495, 0.4242076277732849, 0.41514885425567627, 0.4088504910469055, 0.4146643877029419, 0.43733006715774536, 0.41113078594207764, 0.40066051483154297, 0.39358505606651306, 0.41043078899383545, 0.40801313519477844, 0.3950762152671814, 0.3923513889312744, 0.394187331199646], "val_accuracy": [0.5616666674613953, 0.6480000019073486, 0.7016666531562805, 0.6766666769981384, 0.7133333086967468, 0.6866666674613953, 0.7446666955947876, 0.7486666440963745, 0.7620000243186951, 0.7796666622161865, 0.7796666622161865, 0.777999997138977, 0.7666666507720947, 0.7929999828338623, 0.7670000195503235, 0.8036666512489319, 0.777999997138977, 0.8050000071525574, 0.8100000023841858, 0.8223333358764648, 0.8173333406448364, 0.8119999766349792, 0.8259999752044678, 0.8203333616256714, 0.8143333196640015, 0.831333339214325, 0.8346666693687439, 0.8353333473205566, 0.8293333053588867, 0.8336666822433472, 0.8370000123977661, 0.8376666903495789, 0.8333333134651184, 0.8330000042915344, 0.8416666388511658, 0.8413333296775818, 0.824999988079071, 0.8510000109672546, 0.8080000281333923, 0.8420000076293945, 0.8479999899864197, 0.8513333201408386, 0.847000002861023, 0.8346666693687439, 0.8483333587646484, 0.8539999723434448, 0.862333357334137, 0.8483333587646484, 0.8503333330154419, 0.8573333621025085, 0.8556666374206543, 0.859333336353302]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2106971740722656, 1.5924714803695679, 1.1351670026779175, 0.985051155090332, 0.9042694568634033, 0.8288043737411499, 0.8013746738433838, 0.74695885181427, 0.7339470982551575, 0.7124002575874329, 0.6708650588989258, 0.6720987558364868, 0.6712209582328796, 0.6325313448905945, 0.6251974701881409, 0.6149236559867859, 0.5929662585258484, 0.5974305868148804, 0.5792965888977051, 0.5646608471870422, 0.5576833486557007, 0.5529148578643799, 0.568035364151001, 0.540049135684967, 0.5199401378631592, 0.5222499370574951, 0.5064467787742615, 0.5026123523712158, 0.4974786341190338, 0.4935113191604614, 0.48115184903144836, 0.4803317189216614, 0.48151063919067383, 0.469973087310791, 0.46587446331977844, 0.46750229597091675, 0.46590250730514526, 0.4626866579055786, 0.45068562030792236, 0.46156132221221924, 0.44434937834739685, 0.4421909749507904, 0.4331004321575165, 0.43276870250701904, 0.4299250543117523, 0.4229776859283447], "accuracy": [0.26284506916999817, 0.516180157661438, 0.6058644652366638, 0.6536785364151001, 0.6705851554870605, 0.7020208835601807, 0.7047945857048035, 0.7244749665260315, 0.7297582626342773, 0.7359662055969238, 0.7526086568832397, 0.7536653280258179, 0.7407211661338806, 0.7635715007781982, 0.7627789974212646, 0.76542067527771, 0.7794214487075806, 0.7744023203849792, 0.78113853931427, 0.7910447716712952, 0.7884030938148499, 0.7924976944923401, 0.7836481332778931, 0.7976489067077637, 0.8037247657775879, 0.8031964302062988, 0.8076872229576111, 0.8148196935653687, 0.8178576231002808, 0.8148196935653687, 0.8187822103500366, 0.8158763647079468, 0.819442629814148, 0.8278959393501282, 0.821820080280304, 0.8253863453865051, 0.8267071843147278, 0.8255184292793274, 0.828820526599884, 0.8318583965301514, 0.8363492488861084, 0.833179235458374, 0.8426892161369324, 0.8397833704948425, 0.8388587832450867, 0.8424250483512878], "val_loss": [1.9205011129379272, 1.0974217653274536, 0.8979536294937134, 0.7763442397117615, 0.7395595908164978, 0.7048903703689575, 0.6408898830413818, 0.6536134481430054, 0.630220890045166, 0.625248372554779, 0.6008562445640564, 0.5864492654800415, 0.565293550491333, 0.5575127005577087, 0.5612341165542603, 0.5361713767051697, 0.5436328053474426, 0.5524389147758484, 0.5113298892974854, 0.5180579423904419, 0.5146733522415161, 0.5418200492858887, 0.4966874122619629, 0.5080156326293945, 0.4850873649120331, 0.4724405109882355, 0.48330798745155334, 0.4707467555999756, 0.4575119614601135, 0.4797928035259247, 0.4538712501525879, 0.44957226514816284, 0.44360196590423584, 0.45298513770103455, 0.44035425782203674, 0.4375683665275574, 0.4315362870693207, 0.4233557879924774, 0.4553699493408203, 0.4350314438343048, 0.4133723974227905, 0.4202140271663666, 0.4140091836452484, 0.4124714434146881, 0.41095882654190063, 0.421145498752594], "val_accuracy": [0.5293333530426025, 0.6589999794960022, 0.668666660785675, 0.7179999947547913, 0.7076666951179504, 0.7319999933242798, 0.7526666522026062, 0.7563333511352539, 0.746666669845581, 0.7456666827201843, 0.7703333497047424, 0.765666663646698, 0.778333306312561, 0.7786666750907898, 0.7839999794960022, 0.79666668176651, 0.7876666784286499, 0.7853333353996277, 0.8109999895095825, 0.8006666898727417, 0.8059999942779541, 0.7870000004768372, 0.812333345413208, 0.8133333325386047, 0.8190000057220459, 0.8236666917800903, 0.8183333277702332, 0.8253333568572998, 0.8259999752044678, 0.8193333148956299, 0.8276666402816772, 0.8376666903495789, 0.8346666693687439, 0.8293333053588867, 0.840666651725769, 0.8339999914169312, 0.8393333554267883, 0.8410000205039978, 0.8320000171661377, 0.8363333344459534, 0.8496666550636292, 0.8489999771118164, 0.8446666598320007, 0.8396666646003723, 0.847000002861023, 0.8463333249092102]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 6, 3, 5, 2, 8], [0, 0, 3, 0, 2, 2], [96, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [6, 2, 0, 6, 3, 8, 2, 6, 4, 2, 3, 4, 3, 8], [2, 0, 1, 1, 2, 5, 2, 3, 3, 1, 1, 5], [5, 90], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 26, 14, 12, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.add(alpha, beta)))), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(tf.math.multiply(beta, grad), grad), tf.math.pow(tf.math.multiply(alpha, tf.math.sqrt(alpha)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 7, 3, 5, 5, 2], [1, 0, 1, 2, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 0, 6, 1, 8, 2, 6, 8, 8, 2, 5], [4, 0, 0, 1, 0, 0, 4], [16, 1, 6, 43], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 1, 19, 12, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.math.add(grad, grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 1, 3, 1], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [4, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [96, 76], [1, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 4, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.square(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [45352366080.0, 7062523740160.0, 119549089284096.0, 852355184590848.0, 3709106913280000.0, 1.211910385041408e+16], "accuracy": [0.09800554811954498, 0.1006472036242485, 0.10091137140989304, 0.09708096832036972, 0.09576013684272766, 0.10355303436517715], "val_loss": [471556096000.0, 25422607679488.0, 272870563381248.0, 1487712649478144.0, 5573556511440896.0, 1.644449562099712e+16], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 8], [2, 0, 5, 2, 0], [49, 1], [1, 1], [0], [0], [0], [0, 1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.311748743057251, 2.3110666275024414, 2.310286283493042, 2.3103480339050293, 2.310821771621704, 2.310157537460327], "accuracy": [0.08519349992275238, 0.0870426595211029, 0.09377889335155487, 0.0944393053650856, 0.09615638852119446, 0.09377889335155487], "val_loss": [2.308533191680908, 2.308533191680908, 2.308533191680908, 2.308533191680908, 2.308533191680908, 2.308533191680908], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]