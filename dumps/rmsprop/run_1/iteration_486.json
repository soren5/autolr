[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8014285564422607, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2125730514526367, 1.6196714639663696, 1.1472193002700806, 0.9987313747406006, 0.8683338165283203, 0.8584694862365723, 0.7708225250244141, 0.7816500663757324, 0.727467954158783, 0.6977019906044006, 0.6790484189987183, 0.6598227024078369, 0.6452286243438721, 0.6546319723129272, 0.6181177496910095, 0.614081084728241, 0.6089922785758972, 0.5979498028755188, 0.5898892283439636, 0.579609751701355, 0.5632079243659973], "accuracy": [0.26495838165283203, 0.4983489513397217, 0.6036190986633301, 0.6485272645950317, 0.6848500967025757, 0.6859067678451538, 0.7144366502761841, 0.7078325152397156, 0.7239466309547424, 0.739928662776947, 0.7483819723129272, 0.7576277852058411, 0.7606657147407532, 0.7560427784919739, 0.7734777331352234, 0.7688548564910889, 0.7738739848136902, 0.778761088848114, 0.7792893648147583, 0.7858935594558716, 0.7957997918128967], "val_loss": [1.9227646589279175, 1.0832531452178955, 0.9425530433654785, 0.7957617044448853, 0.7704044580459595, 0.6393633484840393, 0.72591233253479, 0.595148503780365, 0.5862863659858704, 0.5634452104568481, 0.5413668751716614, 0.5577793717384338, 0.5343795418739319, 0.5635921955108643, 0.5288552045822144, 0.49374154210090637, 0.5046619176864624, 0.5046117901802063, 0.4848892390727997, 0.4826807379722595, 0.4866044521331787], "val_accuracy": [0.5646666884422302, 0.6513333320617676, 0.6643333435058594, 0.7160000205039978, 0.7113333344459534, 0.7620000243186951, 0.703000009059906, 0.7710000276565552, 0.765333354473114, 0.7743333578109741, 0.7853333353996277, 0.7789999842643738, 0.7919999957084656, 0.7670000195503235, 0.7850000262260437, 0.8109999895095825, 0.8033333420753479, 0.7973333597183228, 0.8080000281333923, 0.8096666932106018, 0.8069999814033508]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 3, 3, 5, 1, 5], [0, 0, 1, 0, 1, 3], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 3, 3, 1, 0], [16, 37], [0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 4, 6, 7], [6, 3, 1, 0, 1], [0], [1], [0], [2], [0]], "fitness": -0.12371428310871124, "mapping_values": [1, 14, 8, 6, 3, 4, 2, 2, 0, 9, 4, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(grad, sigma), tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [18.16817855834961, 2.5099364633826012e+29, 4.326169967651367, 3.725707530975342, 3.7134082317352295, 3.9429593086242676], "accuracy": [0.15453705191612244, 0.11808215826749802, 0.09826971590518951, 0.10011887550354004, 0.09906221181154251, 0.09800554811954498], "val_loss": [2.978864908218384, 3.8032281398773193, 4.532254695892334, 3.2244820594787598, 3.454033136367798, 4.211029529571533], "val_accuracy": [0.11766666918992996, 0.09933333098888397, 0.10133333504199982, 0.09433333575725555, 0.10133333504199982, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 1, 4, 5, 0, 9], [0, 0, 1, 0, 0], [0, 39, 39, 81], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 7, 0, 4, 3, 8, 2], [2, 0, 3, 4, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 4, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [96, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 8, 6, 3, 7, 2, 2, 3, 4, 5, 3, 6, 3, 3, 6], [0, 0, 3, 1, 0, 3, 0, 0, 1, 3, 0, 4, 1, 1], [16, 37, 52, 70, 1, 17], [0, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 30, 16, 14, 6, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.square(grad), tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.multiply(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(alpha, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304419994354248, 2.3026301860809326, 2.302637815475464, 2.302600145339966, 2.30263352394104, 2.3027093410491943, 2.3027710914611816, 2.3028600215911865], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302567958831787, 2.302579164505005, 2.3025543689727783, 2.3025739192962646, 2.302609443664551, 2.302661180496216, 2.302729368209839, 2.3028130531311035], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 0], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [6, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0, 0, 5], [16, 37, 94], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 14, 7, 7, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]