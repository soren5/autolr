[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8108571171760559, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2089335918426514, 1.5952786207199097, 1.1482659578323364, 0.9627400040626526, 0.878808856010437, 0.8283796310424805, 0.7714589834213257, 0.7747212648391724, 0.71558678150177, 0.7196188569068909, 0.6774955987930298, 0.6643655300140381, 0.6503390073776245, 0.6319653391838074, 0.6239163875579834, 0.596396803855896, 0.600392758846283, 0.593308687210083, 0.5887682437896729, 0.5737267732620239, 0.571299135684967, 0.5457213521003723, 0.5412260293960571, 0.5250365734100342, 0.5369118452072144, 0.5251559615135193, 0.507721483707428, 0.5200155973434448, 0.49747294187545776, 0.49648329615592957, 0.4929097890853882, 0.4879140555858612, 0.4762018620967865, 0.48115018010139465], "accuracy": [0.2635054886341095, 0.5071985125541687, 0.604939877986908, 0.6557918190956116, 0.6814159154891968, 0.6942279934883118, 0.7103421092033386, 0.7078325152397156, 0.7327961921691895, 0.7325320243835449, 0.7464007139205933, 0.7481178045272827, 0.7548540234565735, 0.7609298825263977, 0.7586844563484192, 0.7808743715286255, 0.7784969210624695, 0.7774402499198914, 0.7736098170280457, 0.7843085527420044, 0.7864218950271606, 0.7942147850990295, 0.7960638999938965, 0.8047813773155212, 0.7992339134216309, 0.8026680946350098, 0.8127063512802124, 0.8024039268493652, 0.8162726163864136, 0.8140271902084351, 0.8197067975997925, 0.817461371421814, 0.8252542614936829, 0.8206313848495483], "val_loss": [1.916614294052124, 1.0908825397491455, 0.9462503790855408, 0.8069150447845459, 0.7133947014808655, 0.6960610151290894, 0.7627431750297546, 0.6352699995040894, 0.6019744277000427, 0.606027364730835, 0.590774655342102, 0.557442843914032, 0.5563220381736755, 0.5324622392654419, 0.5291128754615784, 0.5231962203979492, 0.5199118852615356, 0.5119284391403198, 0.5036271810531616, 0.5066723823547363, 0.489266961812973, 0.4838877320289612, 0.47359907627105713, 0.489554762840271, 0.46700912714004517, 0.4672521650791168, 0.4858022928237915, 0.4630219042301178, 0.4489375352859497, 0.4498436748981476, 0.4532814025878906, 0.46805623173713684, 0.44040682911872864, 0.4431522488594055], "val_accuracy": [0.5586666464805603, 0.652999997138977, 0.656333327293396, 0.6883333325386047, 0.7269999980926514, 0.731333315372467, 0.699999988079071, 0.7649999856948853, 0.765666663646698, 0.7733333110809326, 0.7796666622161865, 0.7903333306312561, 0.7903333306312561, 0.8076666593551636, 0.8019999861717224, 0.8023333549499512, 0.8040000200271606, 0.8080000281333923, 0.8140000104904175, 0.8186666369438171, 0.8183333277702332, 0.8183333277702332, 0.8303333520889282, 0.8196666836738586, 0.831333339214325, 0.831333339214325, 0.8196666836738586, 0.8366666436195374, 0.8486666679382324, 0.843666672706604, 0.8349999785423279, 0.8276666402816772, 0.8433333039283752, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 1, 3, 0], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [4, 0, 4, 1, 0], [16, 37], [0, 1, 0], [3, 9], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 11, 6, 5, 2, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 7, 3, 1, 3, 5, 0, 3, 1, 2], [0, 0, 0, 0, 2, 1, 0, 0, 2], [0, 39, 39, 9, 85, 20], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [93, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 10, 9, 6, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.subtract(grad, alpha), tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 33, 84], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [0, 4, 3, 1, 0], [16, 1], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036389350891113, 2.3025851249694824, 3.178738594055176, 9.274064064025879, 16.47298812866211, 23.68062400817871], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 6.298840522766113, 13.480002403259277, 20.66933250427246, 27.858667373657227], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 2, 1, 1, 1, 9, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309272289276123, 2.309511661529541, 2.3094818592071533, 2.3096554279327393, 2.309344530105591, 2.3099820613861084], "accuracy": [0.09496764093637466, 0.09087307006120682, 0.0948355570435524, 0.08981640636920929, 0.0940430611371994, 0.08611807972192764], "val_loss": [2.308797597885132, 2.308797597885132, 2.308797597885132, 2.308797597885132, 2.308797597885132, 2.308797597885132], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]