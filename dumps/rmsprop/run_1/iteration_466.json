[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102842330932617, 1.596443772315979, 1.1085494756698608, 0.9512979388237, 0.8896948099136353, 0.800110399723053, 0.7661300301551819, 0.7479338049888611, 0.7021742463111877, 0.6906750202178955, 0.6714465022087097, 0.6544032692909241, 0.6357213854789734, 0.6343013644218445, 0.6197015643119812, 0.6100187301635742, 0.5819334983825684, 0.5751284956932068, 0.5812171101570129, 0.5646722316741943, 0.5594438314437866, 0.5450232625007629, 0.5479120016098022, 0.5337105989456177, 0.5187223553657532, 0.5274201035499573, 0.5101199150085449, 0.5063544511795044, 0.5010861754417419, 0.4854893982410431, 0.47934600710868835, 0.47801128029823303, 0.47503823041915894, 0.48093870282173157, 0.4647703468799591, 0.46554747223854065, 0.45380112528800964, 0.455882728099823, 0.4607783854007721, 0.43992775678634644, 0.4559580385684967, 0.4439127445220947, 0.43136656284332275, 0.43148764967918396, 0.42576465010643005, 0.4308570325374603, 0.434525728225708, 0.4262230098247528, 0.4173732101917267, 0.4141179025173187, 0.4175833761692047, 0.4021590054035187, 0.3983518183231354, 0.3996927738189697], "accuracy": [0.26535463333129883, 0.5163122415542603, 0.6166952848434448, 0.6633205413818359, 0.6782459616661072, 0.7069079279899597, 0.7140403985977173, 0.7232862114906311, 0.7322678565979004, 0.7440232634544373, 0.7506273984909058, 0.7588165402412415, 0.7609298825263977, 0.7585523724555969, 0.7644960880279541, 0.7707040309906006, 0.7836481332778931, 0.7861577272415161, 0.7836481332778931, 0.785101056098938, 0.7984414100646973, 0.7979130744934082, 0.7956677079200745, 0.8035926818847656, 0.8042530417442322, 0.8031964302062988, 0.8067626357078552, 0.8148196935653687, 0.8124422430992126, 0.8240655064582825, 0.8230088353157043, 0.8207634687423706, 0.8235371708869934, 0.8178576231002808, 0.8285563588142395, 0.8240655064582825, 0.8310658931732178, 0.8273676037788391, 0.829216718673706, 0.841500461101532, 0.828820526599884, 0.8350284099578857, 0.8416325449943542, 0.8422929644584656, 0.8448025584220886, 0.8437458872795105, 0.8366134166717529, 0.8428213000297546, 0.8492933511734009, 0.8498216867446899, 0.8466516733169556, 0.8494254350662231, 0.8498216867446899, 0.8529917001724243], "val_loss": [1.9239890575408936, 1.1004745960235596, 0.8804247975349426, 0.794501781463623, 0.7660709619522095, 0.6881358027458191, 0.6861997842788696, 0.6596943140029907, 0.6383057236671448, 0.6363939046859741, 0.5984273552894592, 0.6091986298561096, 0.6087449789047241, 0.6144799590110779, 0.5935558080673218, 0.5510486364364624, 0.5397136211395264, 0.525316596031189, 0.5282356142997742, 0.5376371145248413, 0.5116325616836548, 0.5275993347167969, 0.500099778175354, 0.5025679469108582, 0.5085139274597168, 0.487788587808609, 0.4888773560523987, 0.504702627658844, 0.47260433435440063, 0.49714046716690063, 0.4789139926433563, 0.4924441874027252, 0.4864872992038727, 0.45949339866638184, 0.4574236273765564, 0.4483327567577362, 0.44480395317077637, 0.4526415467262268, 0.4494691491127014, 0.45948055386543274, 0.44953563809394836, 0.4409591555595398, 0.42897820472717285, 0.4380229115486145, 0.44775089621543884, 0.46958833932876587, 0.4309960901737213, 0.4345354437828064, 0.4221716821193695, 0.41729938983917236, 0.42805299162864685, 0.4184741973876953, 0.4137696623802185, 0.4329836368560791], "val_accuracy": [0.5443333387374878, 0.6380000114440918, 0.6840000152587891, 0.6953333616256714, 0.7093333601951599, 0.7336666584014893, 0.7283333539962769, 0.7366666793823242, 0.7426666617393494, 0.7603333592414856, 0.7723333239555359, 0.7493333220481873, 0.749666690826416, 0.7599999904632568, 0.762666642665863, 0.79666668176651, 0.8029999732971191, 0.8026666641235352, 0.7986666560173035, 0.7993333339691162, 0.8149999976158142, 0.7879999876022339, 0.8133333325386047, 0.8159999847412109, 0.8076666593551636, 0.8193333148956299, 0.8256666660308838, 0.809333324432373, 0.8286666870117188, 0.8146666884422302, 0.8223333358764648, 0.8190000057220459, 0.8140000104904175, 0.831333339214325, 0.8330000042915344, 0.8353333473205566, 0.8393333554267883, 0.8320000171661377, 0.8393333554267883, 0.8339999914169312, 0.840666651725769, 0.843666672706604, 0.846666693687439, 0.8476666808128357, 0.8420000076293945, 0.8233333230018616, 0.8483333587646484, 0.8426666855812073, 0.8519999980926514, 0.8519999980926514, 0.8496666550636292, 0.8513333201408386, 0.8506666421890259, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 37], [0, 0, 0, 1, 0, 1, 1], [4, 9, 7, 6], [5, 0, 0], [0, 83, 94], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 7, 4, 3, 3, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 1, 3, 5, 8, 3, 9], [1, 2, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 0, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 14, 9, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104960918426514, 2.3101694583892822, 2.310584545135498, 2.3112432956695557, 2.3096230030059814, 2.3112220764160156], "accuracy": [0.08757099509239197, 0.09166556596755981, 0.08889182657003403, 0.08638224750757217, 0.09351472556591034, 0.08875974267721176], "val_loss": [2.3082382678985596, 2.3082382678985596, 2.3082382678985596, 2.3082382678985596, 2.3082382678985596, 2.3082382678985596], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 9], [0, 2, 1, 0, 2], [0, 59, 39], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107547760009766, 2.3097424507141113, 2.3108394145965576, 2.3097848892211914, 2.311361074447632, 2.3108394145965576], "accuracy": [0.08730682730674744, 0.09179764986038208, 0.09153348207473755, 0.09166556596755981, 0.09259014576673508, 0.0878351628780365], "val_loss": [2.30837082862854, 2.30837082862854, 2.30837082862854, 2.30837082862854, 2.30837082862854, 2.30837082862854], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 6, 5, 1, 2, 2, 3, 2, 0, 2, 6, 3, 4, 6, 5, 3, 2, 4, 5, 2, 3, 3, 4, 0, 0, 3, 2, 6], [6, 0, 3, 2, 2, 0, 7, 0, 4, 7, 7, 3, 2, 3, 4, 1, 6, 7, 2, 5, 3, 0, 5], [0, 26, 70, 67], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 52, 29, 23, 4, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.math.add(beta, beta), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(grad, tf.math.square(tf.math.add(tf.math.multiply(grad, tf.math.multiply(sigma, tf.math.pow(tf.math.negative(beta), sigma))), grad)))), tf.math.negative(alpha))), grad), grad), tf.math.multiply(beta, grad))), tf.math.add(sigma, tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105037212371826, 2.31111216545105, 2.3105740547180176, 2.309609889984131, 2.30981183052063, 2.3103315830230713], "accuracy": [0.08968432247638702, 0.08889182657003403, 0.09800554811954498, 0.09602430462837219, 0.09417514503002167, 0.09060890227556229], "val_loss": [2.3088772296905518, 2.3088772296905518, 2.3088772296905518, 2.3088772296905518, 2.3088772296905518, 2.3088772296905518], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]