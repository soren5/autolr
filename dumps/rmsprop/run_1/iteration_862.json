[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8522857427597046, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2120325565338135, 1.6220719814300537, 1.1432178020477295, 0.9858367443084717, 0.8858231902122498, 0.8154087662696838, 0.8027175068855286, 0.7798100709915161, 0.7174005508422852, 0.7186763286590576, 0.7009730339050293, 0.6755130887031555, 0.6479870080947876, 0.6535898447036743, 0.6356045603752136, 0.6305827498435974, 0.6087074875831604, 0.593267560005188, 0.5847742557525635, 0.5816491842269897, 0.5710200071334839, 0.5587283968925476, 0.5575999021530151, 0.5365803241729736, 0.5415824055671692, 0.5246008634567261, 0.5263031721115112, 0.5119970440864563, 0.5149308443069458, 0.5104773044586182, 0.5002896189689636, 0.49974900484085083, 0.487168550491333, 0.4784277081489563, 0.4816077947616577, 0.4702848494052887, 0.4741787612438202, 0.46518465876579285, 0.46785715222358704, 0.4566200077533722, 0.45460623502731323, 0.44879263639450073, 0.44498446583747864, 0.43847769498825073, 0.4345778822898865, 0.4340760409832001, 0.42284923791885376, 0.4195888340473175, 0.41938382387161255, 0.424615740776062], "accuracy": [0.26826047897338867, 0.49927353858947754, 0.6001849174499512, 0.6477347612380981, 0.6818121671676636, 0.7049266695976257, 0.7073041796684265, 0.7113987803459167, 0.7368907928466797, 0.7357020378112793, 0.7460044622421265, 0.7490423917770386, 0.7664773464202881, 0.7555144429206848, 0.7635715007781982, 0.7693831920623779, 0.7717606425285339, 0.7823272943496704, 0.7823272943496704, 0.7845727205276489, 0.7932901978492737, 0.793950617313385, 0.7886672616004944, 0.8062343001365662, 0.7989697456359863, 0.8039889335632324, 0.8061022162437439, 0.8112534880638123, 0.8125742673873901, 0.8157442808151245, 0.8178576231002808, 0.8129705190658569, 0.8240655064582825, 0.8236692547798157, 0.8255184292793274, 0.8276317715644836, 0.8297450542449951, 0.8260467648506165, 0.82683926820755, 0.8286884427070618, 0.8362171649932861, 0.8322546482086182, 0.8380662798881531, 0.8408400416374207, 0.8413683772087097, 0.8372738361358643, 0.8459912538528442, 0.8487650156021118, 0.845859169960022, 0.8417646288871765], "val_loss": [1.926100254058838, 1.0870733261108398, 0.8989297747612, 0.7540283799171448, 0.7444426417350769, 0.7197616100311279, 0.6624962687492371, 0.6329345703125, 0.6234647035598755, 0.6093612909317017, 0.6165090203285217, 0.5878576040267944, 0.5795981287956238, 0.5553274154663086, 0.5872320532798767, 0.5817471742630005, 0.5802022218704224, 0.5252055525779724, 0.5153530836105347, 0.507790744304657, 0.5082146525382996, 0.5098600387573242, 0.4984506070613861, 0.47892048954963684, 0.4811447858810425, 0.4868292510509491, 0.4748861491680145, 0.4665358066558838, 0.4588177502155304, 0.4780406057834625, 0.45521146059036255, 0.45139452815055847, 0.44471293687820435, 0.44043901562690735, 0.44484737515449524, 0.4632127285003662, 0.4361722767353058, 0.4502198100090027, 0.42813098430633545, 0.4388194978237152, 0.42541390657424927, 0.4196370542049408, 0.4289848506450653, 0.41760796308517456, 0.4169716536998749, 0.4132770597934723, 0.4067060947418213, 0.40916427969932556, 0.41211003065109253, 0.4079008102416992], "val_accuracy": [0.5519999861717224, 0.6596666574478149, 0.6683333516120911, 0.7289999723434448, 0.721666693687439, 0.7210000157356262, 0.7409999966621399, 0.7473333477973938, 0.762333333492279, 0.753000020980835, 0.7493333220481873, 0.7796666622161865, 0.7736666798591614, 0.7896666526794434, 0.7829999923706055, 0.765666663646698, 0.7649999856948853, 0.7979999780654907, 0.8006666898727417, 0.8136666417121887, 0.79666668176651, 0.8019999861717224, 0.8106666803359985, 0.8173333406448364, 0.8196666836738586, 0.8069999814033508, 0.8213333487510681, 0.8256666660308838, 0.8243333101272583, 0.8136666417121887, 0.8303333520889282, 0.8276666402816772, 0.8316666483879089, 0.8356666564941406, 0.8320000171661377, 0.8243333101272583, 0.8376666903495789, 0.8326666951179504, 0.840666651725769, 0.8403333425521851, 0.843666672706604, 0.8443333506584167, 0.8356666564941406, 0.840666651725769, 0.8489999771118164, 0.843666672706604, 0.8473333120346069, 0.8489999771118164, 0.8433333039283752, 0.8453333377838135]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 1, 3], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 37], [1, 0], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 7, 4, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303614377975464, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [0, 49, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [19.082338333129883, 65.40341186523438, 94.06558990478516, 117.10539245605469, 138.20599365234375, 158.55206298828125], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [50.509376525878906, 83.76586151123047, 108.2012710571289, 129.8351593017578, 150.42835998535156, 170.60086059570312], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [43, 39, 39, 74], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 4, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310316562652588, 2.310377597808838, 2.310019016265869, 2.310060501098633, 2.3105239868164062, 2.309933662414551], "accuracy": [0.0936468094587326, 0.0952318087220192, 0.0956280529499054, 0.09272222965955734, 0.0936468094587326, 0.09311848133802414], "val_loss": [2.308567523956299, 2.308567523956299, 2.308567523956299, 2.308567523956299, 2.308567523956299, 2.308567523956299], "val_accuracy": [0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439]}}]