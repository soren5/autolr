[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8162857294082642, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2094998359680176, 1.5902583599090576, 1.1259194612503052, 0.9670248031616211, 0.8736501932144165, 0.8183164596557617, 0.7850714921951294, 0.7565680146217346, 0.7046108245849609, 0.7111660838127136, 0.6989249587059021, 0.6502315402030945, 0.6358147263526917, 0.6291831135749817, 0.6225936412811279, 0.603670597076416, 0.5846136808395386, 0.5782615542411804, 0.5961399674415588, 0.5613389015197754, 0.5699602961540222, 0.5409032702445984, 0.5583059191703796, 0.5372219085693359, 0.5141772031784058, 0.5227572321891785, 0.511317253112793, 0.49660545587539673, 0.49372750520706177, 0.4889763593673706, 0.48436975479125977, 0.48730093240737915, 0.47491729259490967, 0.4740137457847595, 0.473209947347641, 0.4514564275741577, 0.45987042784690857, 0.44872230291366577, 0.4539829194545746, 0.44912534952163696, 0.4395695626735687, 0.43241509795188904, 0.43389028310775757, 0.420549601316452], "accuracy": [0.27341169118881226, 0.5132743120193481, 0.602562427520752, 0.6535464525222778, 0.6873596906661987, 0.6975300312042236, 0.7071720957756042, 0.7185312509536743, 0.7346453666687012, 0.7292299270629883, 0.7320036888122559, 0.7573636174201965, 0.7656848430633545, 0.7623828053474426, 0.765949010848999, 0.7712323069572449, 0.7803460359573364, 0.7824593782424927, 0.7761194109916687, 0.789988100528717, 0.7866860628128052, 0.7968564033508301, 0.7911768555641174, 0.8030643463134766, 0.8087438941001892, 0.8043851256370544, 0.8105930685997009, 0.8157442808151245, 0.8177255392074585, 0.819442629814148, 0.8207634687423706, 0.8207634687423706, 0.8261788487434387, 0.8215559124946594, 0.8277638554573059, 0.8309338092803955, 0.8338396549224854, 0.8350284099578857, 0.8347642421722412, 0.8392550349235535, 0.8384625315666199, 0.8393871188163757, 0.842028796672821, 0.8432175517082214], "val_loss": [1.9170931577682495, 1.1000709533691406, 0.9423001408576965, 0.7913994193077087, 0.7589536309242249, 0.7595434784889221, 0.7046577334403992, 0.6672349572181702, 0.6475017070770264, 0.6560147404670715, 0.6299756765365601, 0.6008604168891907, 0.639712929725647, 0.6145086884498596, 0.6185145974159241, 0.5814409255981445, 0.5642390847206116, 0.5697633624076843, 0.5784235596656799, 0.5681728720664978, 0.5489202737808228, 0.5441986322402954, 0.550162672996521, 0.5292835831642151, 0.591489315032959, 0.517625093460083, 0.531603991985321, 0.5138710737228394, 0.5003502368927002, 0.502910315990448, 0.49836573004722595, 0.49070292711257935, 0.5076472759246826, 0.4874231815338135, 0.4956135153770447, 0.4856278598308563, 0.4822130799293518, 0.47798097133636475, 0.4655829966068268, 0.47806164622306824, 0.48216456174850464, 0.4654315710067749, 0.48639610409736633, 0.4641130268573761], "val_accuracy": [0.5756666660308838, 0.6359999775886536, 0.6636666655540466, 0.7106666564941406, 0.7136666774749756, 0.715666651725769, 0.7260000109672546, 0.7586666941642761, 0.750333309173584, 0.7556666731834412, 0.7663333415985107, 0.7836666703224182, 0.7483333349227905, 0.7763333320617676, 0.7753333449363708, 0.7929999828338623, 0.7826666831970215, 0.7820000052452087, 0.7916666865348816, 0.7960000038146973, 0.8096666932106018, 0.8076666593551636, 0.8073333501815796, 0.8176666498184204, 0.7789999842643738, 0.8140000104904175, 0.8053333163261414, 0.8259999752044678, 0.8243333101272583, 0.8316666483879089, 0.8333333134651184, 0.8309999704360962, 0.8233333230018616, 0.8330000042915344, 0.8230000138282776, 0.8356666564941406, 0.8309999704360962, 0.8393333554267883, 0.8456666469573975, 0.8246666789054871, 0.8339999914169312, 0.8426666855812073, 0.8360000252723694, 0.8450000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [5], [0]], "fitness": -0.4339999854564667, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.086555242538452, 2.3074121475219727, 2.303851842880249, 2.30330228805542, 2.303007125854492, 2.3017988204956055, 2.2719478607177734, 2.400055408477783, 2.3042097091674805, 2.3031885623931885, 2.303156852722168, 2.3030269145965576], "accuracy": [0.17170783877372742, 0.09760929644107819, 0.09985470771789551, 0.09602430462837219, 0.09206181764602661, 0.10474177449941635, 0.17144367098808289, 0.14555540680885315, 0.09430722147226334, 0.09919429570436478, 0.0948355570435524, 0.0940430611371994], "val_loss": [2.3100476264953613, 2.303719997406006, 2.3027474880218506, 2.3025472164154053, 2.30212664604187, 2.299438238143921, 2.120037317276001, 2.304889440536499, 2.303264856338501, 2.302736759185791, 2.302621603012085, 2.302603244781494], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.20399999618530273, 0.44066667556762695, 0.10199999809265137, 0.10199999809265137, 0.09966666996479034, 0.10199999809265137, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 5, 0, 7, 6], [0, 0, 1, 2, 2, 3, 0], [73, 39, 25], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 2, 0, 6, 3, 5, 2], [0, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 3, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.square(grad))), tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [96.06572723388672, 10971.984375, 182728.328125, 1282915.25, 5649986.0, 18804464.0], "accuracy": [0.09708096832036972, 0.10077928751707077, 0.10659094154834747, 0.09655263274908066, 0.10474177449941635, 0.09615638852119446], "val_loss": [804.656982421875, 39497.296875, 419713.875, 2281318.75, 8534143.0, 25156048.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5, 8, 6, 3, 3, 1, 9, 2, 0, 5, 6, 7, 5, 8, 2, 5, 9, 1, 7, 6, 9, 2, 9, 8, 8, 9], [0, 0, 3, 0, 2, 0, 0, 1, 0, 3, 1, 3], [0, 39, 22, 22, 74, 67, 31, 30, 8, 30, 73], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 0, 6, 0, 8, 9], [3, 0, 3, 2, 0], [16, 1], [0, 1], [8], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.multiply(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.sqrt(alpha))), grad))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 43, 31, 12, 11, 9, 6, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 30}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [7, 9, 5, 1, 9, 6], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 1, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033394813537598, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]