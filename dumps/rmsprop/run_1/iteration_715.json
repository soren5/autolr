[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.817714273929596, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099783420562744, 1.5960900783538818, 1.1487479209899902, 0.9482451677322388, 0.884654700756073, 0.8184701800346375, 0.7980287671089172, 0.7465081810951233, 0.7303483486175537, 0.6936296820640564, 0.6718753576278687, 0.6771200895309448, 0.6521619558334351, 0.6228600740432739, 0.6100220680236816, 0.6054292321205139, 0.5887251496315002, 0.5990954041481018, 0.5756149888038635, 0.5621088743209839, 0.5614524483680725, 0.5444961786270142, 0.5517498850822449, 0.540019154548645, 0.5247551202774048, 0.5183495283126831, 0.504841148853302, 0.5139715671539307, 0.5126432776451111, 0.4832153618335724, 0.4879235029220581, 0.4848329722881317, 0.47711798548698425, 0.4718679189682007, 0.47023800015449524, 0.46845242381095886, 0.4513669013977051, 0.46207815408706665, 0.45501333475112915], "accuracy": [0.2642979919910431, 0.5144630670547485, 0.5923920273780823, 0.6609430909156799, 0.6777176260948181, 0.6963412761688232, 0.7098137736320496, 0.7243428826332092, 0.726192057132721, 0.7411174178123474, 0.7497028112411499, 0.7457403540611267, 0.7574957013130188, 0.7718927264213562, 0.7744023203849792, 0.7725531458854675, 0.7775723338127136, 0.7783648371696472, 0.7833839654922485, 0.793950617313385, 0.791969358921051, 0.7918372750282288, 0.7935543656349182, 0.8034605979919434, 0.8034605979919434, 0.8105930685997009, 0.8138951063156128, 0.8109893202781677, 0.8094043135643005, 0.819442629814148, 0.817461371421814, 0.8161405324935913, 0.8203672170639038, 0.8281601071357727, 0.8239334225654602, 0.8285563588142395, 0.8366134166717529, 0.8304054737091064, 0.8309338092803955], "val_loss": [1.9150056838989258, 1.1410033702850342, 0.8757732510566711, 0.7970150709152222, 0.7179367542266846, 0.7690115571022034, 0.6500751376152039, 0.6403935551643372, 0.6550007462501526, 0.6222460865974426, 0.6468076109886169, 0.6053898930549622, 0.5946862697601318, 0.5426412224769592, 0.5519078969955444, 0.5332388281822205, 0.5424522161483765, 0.5141202807426453, 0.5270584225654602, 0.5102301836013794, 0.48828864097595215, 0.49761703610420227, 0.4750596880912781, 0.48920556902885437, 0.4799312651157379, 0.46217361092567444, 0.4485197067260742, 0.45085376501083374, 0.45157381892204285, 0.4683059751987457, 0.44226500391960144, 0.44536373019218445, 0.43671169877052307, 0.427792489528656, 0.43874964118003845, 0.45018452405929565, 0.4250621795654297, 0.42908743023872375, 0.4311078190803528], "val_accuracy": [0.4846666753292084, 0.578000009059906, 0.6893333196640015, 0.7103333473205566, 0.7416666746139526, 0.7076666951179504, 0.7563333511352539, 0.7556666731834412, 0.7390000224113464, 0.7516666650772095, 0.7536666393280029, 0.7720000147819519, 0.7603333592414856, 0.7940000295639038, 0.7886666655540466, 0.793666660785675, 0.7943333387374878, 0.8100000023841858, 0.7979999780654907, 0.7990000247955322, 0.824999988079071, 0.8029999732971191, 0.8246666789054871, 0.8163333535194397, 0.8236666917800903, 0.8289999961853027, 0.8349999785423279, 0.8356666564941406, 0.8309999704360962, 0.8183333277702332, 0.8386666774749756, 0.8330000042915344, 0.8410000205039978, 0.8489999771118164, 0.8366666436195374, 0.8256666660308838, 0.8473333120346069, 0.8426666855812073, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 4, 3, 8, 2], [1, 0, 3, 4, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 9, 3, 1, 3, 5], [0, 0, 1, 0, 2], [50, 39, 70], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 6, 3, 8, 2], [2, 0, 1, 1, 0], [76, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3039932250976562, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [92, 37], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303088665008545, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39, 65], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 0, 5, 3, 8, 2], [2, 3, 3, 1, 0], [16, 37], [0, 1], [0], [4], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 6, 5, 4, 11, 7, 4, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.sqrt(beta), grad))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310930013656616, 2.310274600982666, 2.310743808746338, 2.310800552368164, 2.309218645095825, 2.311007499694824], "accuracy": [0.08836349099874496, 0.0936468094587326, 0.09047681838274002, 0.09536388516426086, 0.09219389408826828, 0.09311848133802414], "val_loss": [2.3077287673950195, 2.3077287673950195, 2.3077287673950195, 2.3077287673950195, 2.3077287673950195, 2.3077287673950195], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]