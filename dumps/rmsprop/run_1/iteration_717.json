[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2078492641448975, 1.599799633026123, 1.1450302600860596, 0.9879884123802185, 0.8746466040611267, 0.8234443664550781, 0.7754737138748169, 0.7400490641593933, 0.7380974888801575, 0.7064778804779053, 0.6780641674995422, 0.699210524559021, 0.625220000743866, 0.6384885311126709, 0.6163692474365234, 0.6254943013191223, 0.5985406041145325, 0.5780426263809204, 0.5671796202659607, 0.5711172223091125, 0.5590528249740601, 0.5631298422813416, 0.536448061466217, 0.5261115431785583, 0.5367851257324219, 0.5215375423431396, 0.5147027373313904, 0.508674144744873, 0.5003202557563782, 0.5002266764640808, 0.48283129930496216, 0.4893732964992523, 0.4814320206642151, 0.47204509377479553, 0.458910197019577, 0.46679654717445374, 0.45834121108055115, 0.4628278315067291, 0.44002223014831543, 0.4453330934047699, 0.440731406211853, 0.42702099680900574, 0.42622992396354675, 0.4186038076877594, 0.4164139926433563, 0.42547011375427246, 0.41521960496902466, 0.40895840525627136, 0.40949109196662903, 0.40959635376930237, 0.39890527725219727, 0.3984675407409668, 0.39841675758361816, 0.39754241704940796], "accuracy": [0.25584468245506287, 0.5046889185905457, 0.6077136397361755, 0.6509047746658325, 0.6870955228805542, 0.6944921612739563, 0.7164179086685181, 0.7248712182044983, 0.7211728692054749, 0.7386078238487244, 0.7494386434555054, 0.7391361594200134, 0.7692511081695557, 0.7644960880279541, 0.7708360552787781, 0.7677981853485107, 0.7803460359573364, 0.7884030938148499, 0.793422281742096, 0.7866860628128052, 0.7898560166358948, 0.7909126877784729, 0.7984414100646973, 0.8082155585289001, 0.7994980812072754, 0.8082155585289001, 0.8105930685997009, 0.8105930685997009, 0.8153480291366577, 0.8137630224227905, 0.8186501264572144, 0.8157442808151245, 0.8220842480659485, 0.8284242749214172, 0.828292191028595, 0.8261788487434387, 0.8339717388153076, 0.8264430165290833, 0.8376700282096863, 0.8364813327789307, 0.8364813327789307, 0.8451988101005554, 0.8421608805656433, 0.8454629778862, 0.8485008478164673, 0.8392550349235535, 0.8413683772087097, 0.8516708612442017, 0.8486329317092896, 0.8473120927810669, 0.8548408150672913, 0.8511425256729126, 0.8520671129226685, 0.8539162874221802], "val_loss": [1.9050244092941284, 1.0664513111114502, 0.8815029859542847, 0.7376902103424072, 0.7003400921821594, 0.6582911610603333, 0.643833577632904, 0.6855403780937195, 0.6407755613327026, 0.5912690162658691, 0.5761913061141968, 0.5539789795875549, 0.5429962277412415, 0.5539634823799133, 0.5341219902038574, 0.5651590824127197, 0.5108885765075684, 0.5071683526039124, 0.49553340673446655, 0.4933173954486847, 0.4779146611690521, 0.4755508601665497, 0.4706993103027344, 0.47354546189308167, 0.4608522653579712, 0.4563353955745697, 0.45949581265449524, 0.4553808569908142, 0.4398135840892792, 0.4467606246471405, 0.439809650182724, 0.43456053733825684, 0.43361231684684753, 0.4274415373802185, 0.4258580803871155, 0.41903626918792725, 0.4259672164916992, 0.43353626132011414, 0.40560656785964966, 0.4113502502441406, 0.40157654881477356, 0.40582171082496643, 0.3959881067276001, 0.40064460039138794, 0.3956967294216156, 0.39324328303337097, 0.4053023159503937, 0.41531091928482056, 0.3819418251514435, 0.38674601912498474, 0.3890725076198578, 0.38868001103401184, 0.383762925863266, 0.38735413551330566], "val_accuracy": [0.581333339214325, 0.6603333353996277, 0.6993333101272583, 0.7233333587646484, 0.7433333396911621, 0.7513333559036255, 0.7513333559036255, 0.7433333396911621, 0.7559999823570251, 0.7716666460037231, 0.7710000276565552, 0.7926666736602783, 0.7846666574478149, 0.7986666560173035, 0.8023333549499512, 0.7770000100135803, 0.8029999732971191, 0.8086666464805603, 0.8169999718666077, 0.8136666417121887, 0.8206666707992554, 0.824999988079071, 0.8166666626930237, 0.8226666450500488, 0.8240000009536743, 0.8336666822433472, 0.8289999961853027, 0.8246666789054871, 0.8339999914169312, 0.8299999833106995, 0.8386666774749756, 0.8389999866485596, 0.8410000205039978, 0.8423333168029785, 0.8370000123977661, 0.8423333168029785, 0.8413333296775818, 0.8373333215713501, 0.8539999723434448, 0.8506666421890259, 0.8526666760444641, 0.8513333201408386, 0.8543333411216736, 0.8583333492279053, 0.8496666550636292, 0.8583333492279053, 0.843666672706604, 0.8420000076293945, 0.8650000095367432, 0.8529999852180481, 0.8553333282470703, 0.8583333492279053, 0.8586666584014893, 0.8586666584014893]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [9, 2, 3, 1, 3, 5], [0, 0, 2, 0, 3], [0, 34, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [59, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303579807281494, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 7, 6, 9, 2, 4, 4, 8, 4, 2, 0, 8], [6, 6, 4, 7, 6, 3, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 2, 20, 13, 7, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.pow(grad, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.add(grad, grad), sigma)), tf.math.negative(tf.math.sqrt(sigma))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.2353921415591959e+23, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [5.291255805961503e+27, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 49], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 1, 0], [0, 7, 9], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 4, 2, 2, 1, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [28580.169921875, 571554529280.0, 8.504542670696219e+18, 8.086123808350156e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10077928751707077, 0.10685510188341141, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1927299.25, 34164057309184.0, 5.673019435893517e+20, 2.3025853633880615, NaN, NaN, NaN, NaN, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 3, 3, 1, 3, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [0, 0, 3, 5, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0], [0, 9], [7], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 12, 7, 5, 3, 10, 6, 4, 2, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310701608657837, 2.309539318084717, 2.309962034225464, 2.310415267944336, 2.3115084171295166, 2.309727430343628], "accuracy": [0.09338264167308807, 0.08730682730674744, 0.09866596013307571, 0.09430722147226334, 0.09470347315073013, 0.09245806187391281], "val_loss": [2.3081350326538086, 2.3081350326538086, 2.3081350326538086, 2.3081350326538086, 2.3081350326538086, 2.3081350326538086], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]