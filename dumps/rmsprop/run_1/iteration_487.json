[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8197143077850342, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2150521278381348, 1.6200968027114868, 1.1758296489715576, 1.0061460733413696, 0.9093268513679504, 0.8532382249832153, 0.8001376390457153, 0.7742879390716553, 0.7454922199249268, 0.7284888625144958, 0.6907711625099182, 0.6816933751106262, 0.6561810970306396, 0.6569886803627014, 0.6183708906173706, 0.6407502889633179, 0.620407223701477, 0.5814259052276611, 0.589198112487793, 0.5713330507278442, 0.5766335725784302, 0.5615840554237366, 0.5512186884880066, 0.5490583777427673, 0.543962299823761, 0.5251098275184631, 0.5243630409240723, 0.5170537233352661], "accuracy": [0.252938836812973, 0.4962356388568878, 0.5900145173072815, 0.6346585750579834, 0.6664905548095703, 0.6859067678451538, 0.7062475085258484, 0.7150970697402954, 0.7244749665260315, 0.7314753532409668, 0.7442874312400818, 0.750759482383728, 0.759609043598175, 0.7576277852058411, 0.7691190242767334, 0.7597411274909973, 0.7707040309906006, 0.7895918488502502, 0.7815347909927368, 0.7868181467056274, 0.787082314491272, 0.7923656105995178, 0.7957997918128967, 0.7960638999938965, 0.8013472557067871, 0.8054417967796326, 0.8061022162437439, 0.8120459914207458], "val_loss": [1.9260668754577637, 1.077313780784607, 0.8334713578224182, 0.7827436327934265, 0.6846522092819214, 0.6596080660820007, 0.6477822065353394, 0.6256110668182373, 0.6061205267906189, 0.6121631860733032, 0.5678519606590271, 0.5884473919868469, 0.5944648385047913, 0.517225980758667, 0.5450974702835083, 0.5204722285270691, 0.49339795112609863, 0.478236585855484, 0.479993611574173, 0.46839651465415955, 0.49037685990333557, 0.465725839138031, 0.46136707067489624, 0.4715982675552368, 0.4448733627796173, 0.45208972692489624, 0.44743815064430237, 0.4444327652454376], "val_accuracy": [0.49399998784065247, 0.6819999814033508, 0.7263333201408386, 0.7106666564941406, 0.7493333220481873, 0.746999979019165, 0.7523333430290222, 0.7710000276565552, 0.7693333625793457, 0.7770000100135803, 0.7863333225250244, 0.7703333497047424, 0.7556666731834412, 0.8159999847412109, 0.79666668176651, 0.7983333468437195, 0.8243333101272583, 0.8273333311080933, 0.828000009059906, 0.8303333520889282, 0.8193333148956299, 0.8343333601951599, 0.8416666388511658, 0.8270000219345093, 0.840666651725769, 0.8383333086967468, 0.840666651725769, 0.8349999785423279]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [46, 76, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 8, 4, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 5], [0, 2, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2], [5, 0, 3, 5, 0], [16, 37], [1, 0], [0], [6], [0], [0, 0, 1, 1], [0, 4], [2, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 5, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 2, 6, 1, 3, 5, 8, 0, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 4, 1, 0], [16, 1], [1, 1], [0], [0], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [28466.787109375, 573712039936.0, 8.70189071423085e+18, 7.397223233388445e+25, NaN, NaN], "accuracy": [0.10289261490106583, 0.09760929644107819, 0.1014397069811821, 0.10593052208423615, 0.09998679161071777, 0.09998679161071777], "val_loss": [1953777.625, 34636451282944.0, 5.7831465205315613e+20, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10133333504199982, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 14, 9, 5, 2, 4, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.0868571400642395, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3101770877838135, 2.309750556945801, 2.3095710277557373, 2.3092687129974365, 2.3095366954803467, 2.310147762298584], "accuracy": [0.09060890227556229, 0.09285431355237961, 0.09391097724437714, 0.08889182657003403, 0.09325055778026581, 0.09232597798109055], "val_loss": [2.308856964111328, 2.308856964111328, 2.308856964111328, 2.308856964111328, 2.308856964111328, 2.308856964111328], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]