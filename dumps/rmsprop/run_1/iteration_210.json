[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2082948684692383, 1.59883713722229, 1.1641649007797241, 0.9415187835693359, 0.878028929233551, 0.8307371139526367, 0.7855313420295715, 0.7597754001617432, 0.730355441570282, 0.7067033648490906, 0.7001553773880005, 0.6700937747955322, 0.6610118746757507, 0.6545295715332031, 0.6281239986419678, 0.615871250629425, 0.6144734621047974, 0.5999503135681152, 0.5907543301582336, 0.575602650642395, 0.5887038111686707, 0.5567098259925842, 0.5564419627189636, 0.5587567090988159, 0.5606043934822083, 0.5398899912834167, 0.5282633900642395, 0.5198934674263, 0.5268256664276123, 0.5312416553497314], "accuracy": [0.26720380783081055, 0.5079910159111023, 0.5906749367713928, 0.6650376319885254, 0.6798309087753296, 0.6903975605964661, 0.7150970697402954, 0.7240787148475647, 0.7313432693481445, 0.7364945411682129, 0.7409853339195251, 0.7556465268135071, 0.7539294958114624, 0.7572315335273743, 0.7676661014556885, 0.7664773464202881, 0.7765156626701355, 0.7819310426712036, 0.7843085527420044, 0.7876105904579163, 0.7786290049552917, 0.7981772422790527, 0.7957997918128967, 0.7917051911354065, 0.7923656105995178, 0.7977809906005859, 0.8083476424217224, 0.8062343001365662, 0.8074230551719666, 0.8042530417442322], "val_loss": [1.9135627746582031, 1.0880697965621948, 0.8503497838973999, 0.8152478933334351, 0.7743639945983887, 0.6834445595741272, 0.6553308367729187, 0.6645244359970093, 0.6306458115577698, 0.6115931868553162, 0.6119910478591919, 0.6045231819152832, 0.5603576302528381, 0.5752230882644653, 0.559202253818512, 0.5502970814704895, 0.5372747778892517, 0.5195744037628174, 0.5407413840293884, 0.5165138244628906, 0.5153543949127197, 0.5199488401412964, 0.5040494203567505, 0.4961310923099518, 0.4841908812522888, 0.4903554618358612, 0.4774543344974518, 0.47305673360824585, 0.48182812333106995, 0.4704116880893707], "val_accuracy": [0.5506666898727417, 0.652999997138977, 0.7059999704360962, 0.6890000104904175, 0.6930000185966492, 0.746999979019165, 0.7630000114440918, 0.7636666893959045, 0.7566666603088379, 0.7670000195503235, 0.7683333158493042, 0.7860000133514404, 0.7993333339691162, 0.7889999747276306, 0.7990000247955322, 0.7923333048820496, 0.8050000071525574, 0.8109999895095825, 0.800000011920929, 0.812333345413208, 0.8090000152587891, 0.8003333210945129, 0.8133333325386047, 0.8169999718666077, 0.8256666660308838, 0.8173333406448364, 0.8230000138282776, 0.8243333101272583, 0.8226666450500488, 0.8253333568572998]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 49], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 1], [16, 1], [0, 1], [0], [4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 9, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035616874694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10210011899471283, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025870323181152, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 6, 4, 8, 2, 7, 0, 0, 7, 0, 6], [2, 0, 3, 3, 0, 5, 4, 0], [16, 37, 40], [0, 1], [0], [1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 21, 13, 8, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad)), tf.math.negative(tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8, 4, 6, 1, 6, 1, 8, 7, 7, 3, 2, 3, 6, 1, 5, 3, 4, 1, 6, 5, 3, 1, 3, 4, 1, 4, 3, 9, 5, 3, 3, 2], [0, 0, 1, 0, 2, 0, 1, 1, 3, 2, 1, 3, 3, 1, 1, 3, 1, 3, 0, 0, 1, 0, 1, 0, 1, 2, 0, 0, 3, 0], [0, 39, 39, 72, 83, 32, 29, 13, 8, 89, 8, 16], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [40, 37], [0, 0, 0, 1, 1], [0, 1, 5], [6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 68, 38, 30, 12, 7, 4, 3, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.square(alpha))), tf.math.multiply(grad, tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(grad, alpha)), alpha), grad), alpha))), grad), tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.pow(tf.math.multiply(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(alpha, tf.math.multiply(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [36, 37], [1, 1], [0], [6], [0], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [2.2634095948860584e+26, 2.612414245128132e+26, 2.6439482162523757e+26, 2.5959298656889838e+26, 2.6144236489600813e+26, 2.541705292549433e+26], "accuracy": [0.08942015469074249, 0.08809932321310043, 0.0874389111995697, 0.09008057415485382, 0.08968432247638702, 0.09285431355237961], "val_loss": [2.131067672280366e+26, 2.131067672280366e+26, 2.131067672280366e+26, 2.131067672280366e+26, 2.131067672280366e+26, 2.131067672280366e+26], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]