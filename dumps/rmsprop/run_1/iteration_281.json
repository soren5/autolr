[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8465714454650879, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207054615020752, 1.5981333255767822, 1.1254124641418457, 0.9758439660072327, 0.8732520937919617, 0.814913272857666, 0.7647461295127869, 0.7409358024597168, 0.7187350392341614, 0.6906523704528809, 0.6540583968162537, 0.6652577519416809, 0.6330592632293701, 0.6364985704421997, 0.6057071089744568, 0.5919395089149475, 0.5862016081809998, 0.572289764881134, 0.5670308470726013, 0.5577590465545654, 0.5359804034233093, 0.5372260212898254, 0.5349956154823303, 0.5251809358596802, 0.507050096988678, 0.5038396120071411, 0.5108481645584106, 0.4970926344394684, 0.49147000908851624, 0.48088395595550537, 0.4750487506389618, 0.4809064567089081, 0.4705139994621277, 0.4490344822406769, 0.46373310685157776, 0.45164233446121216, 0.4539039433002472, 0.4355553090572357, 0.44775986671447754], "accuracy": [0.2705058753490448, 0.5045568346977234, 0.6056002974510193, 0.6519614458084106, 0.6888125538825989, 0.7008321285247803, 0.7207766771316528, 0.724739134311676, 0.7323999404907227, 0.7407211661338806, 0.757099449634552, 0.7457403540611267, 0.7619865536689758, 0.7601373791694641, 0.7683265209197998, 0.7771760821342468, 0.7753269076347351, 0.785101056098938, 0.7881389260292053, 0.7881389260292053, 0.7977809906005859, 0.8033285140991211, 0.8037247657775879, 0.8018755912780762, 0.8123101592063904, 0.8146876096725464, 0.8107251524925232, 0.8204993009567261, 0.8208954930305481, 0.8198388814926147, 0.8265751004219055, 0.8204993009567261, 0.8239334225654602, 0.8310658931732178, 0.8259146809577942, 0.8334434032440186, 0.8355567455291748, 0.8403117060661316, 0.8301413059234619], "val_loss": [1.9085732698440552, 1.0706186294555664, 0.965013325214386, 0.7743833065032959, 0.7646909356117249, 0.6654834151268005, 0.6341208219528198, 0.6315216422080994, 0.6576015949249268, 0.5773851871490479, 0.6126057505607605, 0.5631377100944519, 0.5495509505271912, 0.5606945157051086, 0.5333436727523804, 0.5482468008995056, 0.5210036635398865, 0.5294104814529419, 0.5099714398384094, 0.4902653694152832, 0.49087002873420715, 0.5192657709121704, 0.4789789319038391, 0.4845663607120514, 0.47550350427627563, 0.4593648314476013, 0.46239346265792847, 0.47419095039367676, 0.45019498467445374, 0.437284916639328, 0.4633294343948364, 0.4452477991580963, 0.4264698624610901, 0.4293232858181, 0.4310905635356903, 0.4242537319660187, 0.43024927377700806, 0.4233352839946747, 0.42054808139801025], "val_accuracy": [0.5206666588783264, 0.6646666526794434, 0.6286666393280029, 0.7170000076293945, 0.7173333168029785, 0.7406666874885559, 0.7573333382606506, 0.7570000290870667, 0.7279999852180481, 0.7846666574478149, 0.746666669845581, 0.7846666574478149, 0.7946666479110718, 0.7950000166893005, 0.8119999766349792, 0.7863333225250244, 0.7979999780654907, 0.7846666574478149, 0.8100000023841858, 0.8183333277702332, 0.8169999718666077, 0.8056666851043701, 0.8220000267028809, 0.824999988079071, 0.8190000057220459, 0.8410000205039978, 0.8299999833106995, 0.8163333535194397, 0.8443333506584167, 0.8426666855812073, 0.8230000138282776, 0.8286666870117188, 0.8420000076293945, 0.8486666679382324, 0.8366666436195374, 0.8433333039283752, 0.8450000286102295, 0.8433333039283752, 0.8473333120346069]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 0, 1, 2, 5, 3, 1, 0, 4, 8, 6, 1, 6, 1, 3, 1, 0, 8, 9], [6, 5, 4, 4, 4, 4, 3, 2, 4, 3, 0, 1], [0, 49], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 12, 7, 5, 2, 32, 20, 12, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(grad, grad), tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.negative(grad), grad), grad)))), tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(sigma, beta), grad), tf.math.subtract(tf.math.negative(sigma), tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 2, 1, 3, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [4, 2, 3, 1, 0], [16, 37], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 10, 6, 4, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.subtract(beta, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 3, 1, 0], [55, 1], [0, 1], [0], [7], [0], [0, 0, 1, 1], [0, 1], [2, 2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, beta))", "other_info": {"loss": [2.304532766342163, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 11, 6, 5, 3, 8, 4, 4, 1, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 7], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 37], [1, 1], [4], [6], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(beta, grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310077428817749, 2.3094942569732666, 2.308720827102661, 2.3093464374542236, 2.3099887371063232, 2.3095896244049072], "accuracy": [0.09206181764602661, 0.09140139818191528, 0.10011887550354004, 0.09509972482919693, 0.09430722147226334, 0.08942015469074249], "val_loss": [2.308579206466675, 2.308579206466675, 2.308579206466675, 2.308579206466675, 2.308579206466675, 2.308579206466675], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]