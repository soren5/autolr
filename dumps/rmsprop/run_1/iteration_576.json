[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210411548614502, 1.6154162883758545, 1.1409916877746582, 0.9803796410560608, 0.8970369696617126, 0.8220275640487671, 0.8105210065841675, 0.7401949763298035, 0.7363352179527283, 0.7023934125900269, 0.6803640127182007, 0.6649243235588074, 0.6728994250297546, 0.6258259415626526, 0.6378821134567261, 0.6157342791557312, 0.6020114421844482, 0.5866709351539612, 0.595223069190979, 0.575084388256073, 0.5649494528770447, 0.551062822341919, 0.5567805171012878, 0.5333023071289062, 0.5248018503189087, 0.5199524164199829], "accuracy": [0.2620525658130646, 0.5001981258392334, 0.605468213558197, 0.644300639629364, 0.6758684515953064, 0.7013604640960693, 0.700700044631958, 0.7255316376686096, 0.7156254053115845, 0.7305507659912109, 0.7415136694908142, 0.7471932172775269, 0.746268630027771, 0.7662131786346436, 0.7598732113838196, 0.7695152759552002, 0.7726852297782898, 0.7777044177055359, 0.7751948237419128, 0.7804781198501587, 0.7882710099220276, 0.7918372750282288, 0.789988100528717, 0.7992339134216309, 0.8013472557067871, 0.8020076751708984], "val_loss": [1.9175188541412354, 1.0899134874343872, 0.8866142630577087, 0.7698351144790649, 0.7266467809677124, 0.6570624709129333, 0.6196097731590271, 0.6328486204147339, 0.6022201180458069, 0.5618090629577637, 0.5428258180618286, 0.5887756943702698, 0.539090633392334, 0.5121185183525085, 0.5124171376228333, 0.4989357888698578, 0.4896914064884186, 0.5557430982589722, 0.48955827951431274, 0.4972711503505707, 0.4601993262767792, 0.5033926367759705, 0.45879295468330383, 0.4646151661872864, 0.4883500635623932, 0.4588172137737274], "val_accuracy": [0.5600000023841858, 0.6646666526794434, 0.6449999809265137, 0.7226666808128357, 0.7316666841506958, 0.7493333220481873, 0.762333333492279, 0.7386666536331177, 0.7633333206176758, 0.7793333530426025, 0.7916666865348816, 0.765999972820282, 0.7900000214576721, 0.8046666383743286, 0.800000011920929, 0.8080000281333923, 0.8140000104904175, 0.7746666669845581, 0.8116666674613953, 0.8053333163261414, 0.8383333086967468, 0.7799999713897705, 0.8259999752044678, 0.8193333148956299, 0.8096666932106018, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 3, 1, 3, 5, 8], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 0, 0], [46, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.1014285683631897, "mapping_values": [1, 12, 7, 5, 2, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.307370662689209, 2.3018016815185547, 2.301328420639038, 2.3016154766082764, 2.3017492294311523, 2.3023996353149414], "accuracy": [0.09285431355237961, 0.09866596013307571, 0.10051512718200684, 0.09866596013307571, 0.0936468094587326, 0.08677849918603897], "val_loss": [2.302542209625244, 2.301429271697998, 2.301600694656372, 2.301548480987549, 2.302072525024414, 2.302316665649414], "val_accuracy": [0.09966666996479034, 0.09533333033323288, 0.0820000022649765, 0.07000000029802322, 0.06700000166893005, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [2, 2, 3, 1, 3, 5, 6, 7, 9], [0, 0, 1, 0, 2, 3, 2], [39, 39, 39, 98], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 3, 6, 5, 7, 2, 9], [6, 7, 6, 1, 1], [0], [1], [0], [2], [0]], "fitness": -0.10085714608430862, "mapping_values": [1, 16, 9, 7, 4, 7, 4, 3, 1, 13, 8, 5, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(grad, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(grad, tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))))), alpha), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.942716521237709e+16, 9.210175973176115e+16, 9.283579541245133e+16, 9.275545375421235e+16, 9.3955630825472e+16, 9.402593085017293e+16], "accuracy": [0.10685510188341141, 0.10645885765552521, 0.10289261490106583, 0.11015717685222626, 0.1080438494682312, 0.10328886657953262], "val_loss": [8.545316753742234e+16, 8.545316753742234e+16, 8.545316753742234e+16, 8.54536313938903e+16, 8.54536313938903e+16, 8.54536313938903e+16], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 2, 3, 1, 3, 5, 6, 1, 1, 8, 9, 5, 0, 3], [0, 2, 1, 2, 2, 3, 0, 0, 2], [0, 39, 39, 94], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 14, 9, 4, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(grad, alpha), tf.math.multiply(grad, tf.math.square(grad)))), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [6, 2, 0, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [3], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]