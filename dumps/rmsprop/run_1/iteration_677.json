[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2058303356170654, 1.5961828231811523, 1.1423732042312622, 0.9835174083709717, 0.8904800415039062, 0.8150988221168518, 0.7867650985717773, 0.7360338568687439, 0.7331735491752625, 0.7039903998374939, 0.6739284992218018, 0.6698197722434998, 0.644412636756897, 0.6529257297515869, 0.622723400592804, 0.6092202067375183, 0.5965662002563477, 0.5770022869110107, 0.5616684556007385, 0.5703816413879395, 0.5533710718154907, 0.551677942276001, 0.5531929731369019, 0.5324460864067078, 0.5214465856552124, 0.5235838294029236, 0.516413688659668, 0.5104086995124817, 0.4933965802192688, 0.49564313888549805, 0.48033982515335083, 0.49019530415534973, 0.4853188693523407, 0.47278451919555664, 0.46441617608070374, 0.4684326946735382, 0.4568445086479187, 0.4561655521392822, 0.4494113624095917, 0.4505709111690521], "accuracy": [0.27301543951034546, 0.5074626803398132, 0.6000528335571289, 0.6498481035232544, 0.6744155287742615, 0.7004358768463135, 0.7083608508110046, 0.7329282760620117, 0.7191916704177856, 0.741909921169281, 0.7499669790267944, 0.7478536367416382, 0.7565711140632629, 0.7589486241340637, 0.763439416885376, 0.7720248103141785, 0.7770439982414246, 0.7796856164932251, 0.7915731072425842, 0.7841764688491821, 0.7971205711364746, 0.793422281742096, 0.7913089394569397, 0.8024039268493652, 0.8033285140991211, 0.8045172095298767, 0.8100647330284119, 0.8112534880638123, 0.8195747137069702, 0.8178576231002808, 0.8201030492782593, 0.8201030492782593, 0.8206313848495483, 0.8215559124946594, 0.8269713521003723, 0.828820526599884, 0.8290846943855286, 0.8330471515655518, 0.8274996876716614, 0.8347642421722412], "val_loss": [1.9069833755493164, 1.0921894311904907, 0.8884674310684204, 0.7939170598983765, 0.7451953887939453, 0.7382718920707703, 0.6510055065155029, 0.6321634650230408, 0.6654341816902161, 0.629989504814148, 0.5967543125152588, 0.5923011302947998, 0.5734270215034485, 0.5491467714309692, 0.5382311940193176, 0.5281885862350464, 0.5419301986694336, 0.5192267894744873, 0.5110268592834473, 0.50297611951828, 0.5001814961433411, 0.49259132146835327, 0.4808116853237152, 0.49834248423576355, 0.4749543368816376, 0.47630563378334045, 0.48810315132141113, 0.49550381302833557, 0.45663076639175415, 0.4513798952102661, 0.4573884606361389, 0.45355746150016785, 0.46841707825660706, 0.4414619505405426, 0.43163082003593445, 0.43385303020477295, 0.4261558949947357, 0.4383000433444977, 0.4325268864631653, 0.4376660883426666], "val_accuracy": [0.5396666526794434, 0.6506666541099548, 0.6890000104904175, 0.7149999737739563, 0.731333315372467, 0.7296666502952576, 0.7543333172798157, 0.7480000257492065, 0.7536666393280029, 0.7613333463668823, 0.7699999809265137, 0.7696666717529297, 0.781333327293396, 0.7903333306312561, 0.7933333516120911, 0.7963333129882812, 0.7866666913032532, 0.7990000247955322, 0.8059999942779541, 0.8073333501815796, 0.8109999895095825, 0.8103333115577698, 0.8206666707992554, 0.7943333387374878, 0.8216666579246521, 0.8240000009536743, 0.8090000152587891, 0.8019999861717224, 0.8323333263397217, 0.8299999833106995, 0.8243333101272583, 0.8289999961853027, 0.8206666707992554, 0.8360000252723694, 0.8433333039283752, 0.8349999785423279, 0.8420000076293945, 0.8309999704360962, 0.8336666822433472, 0.8349999785423279]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 0], [0, 76, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 5, 6, 6, 8, 2], [2, 0, 1, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 4, 7, 7, 6, 6, 7, 6, 4, 5, 1, 2, 1, 4, 2, 4, 8, 3], [0, 2, 1, 0, 2, 0, 3, 0, 0, 2, 3, 3, 1, 2, 2, 3, 2, 3, 3, 2], [0, 39, 39, 0, 70], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 1, 0, 1, 1], [0, 4, 4], [5, 6, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 43, 23, 20, 5, 1, 0, 1, 0, 2, 1, 1, 0, 6, 3, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad), grad), tf.math.square(tf.math.subtract(grad, alpha))), tf.math.add(tf.math.subtract(grad, tf.math.pow(tf.math.add(grad, tf.math.pow(grad, tf.math.sqrt(tf.math.multiply(grad, grad)))), grad)), grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(grad, tf.math.pow(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 95, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [2], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104658126831055, 2.309203863143921, 2.3091278076171875, 2.3097031116485596, 2.309140205383301, 2.309445858001709], "accuracy": [0.08796724677085876, 0.09536388516426086, 0.08849557489156723, 0.08757099509239197, 0.09826971590518951, 0.09272222965955734], "val_loss": [2.3086962699890137, 2.3086962699890137, 2.3086962699890137, 2.3086962699890137, 2.3086962699890137, 2.3086962699890137], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 1, 3, 5], [0, 0, 1, 0, 2], [47, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 5, 1, 0], [16, 37], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 2, 6, 5, 0, 0, 9], [6, 4, 5, 1], [0], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 12, 8, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), grad), tf.math.negative(tf.math.negative(alpha))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100626468658447, 2.3087172508239746, 2.309512138366699, 2.30920672416687, 2.310511589050293, 2.309349775314331], "accuracy": [0.08928807079792023, 0.08915598690509796, 0.09589222073554993, 0.09259014576673508, 0.09126931428909302, 0.09140139818191528], "val_loss": [2.3082244396209717, 2.3082244396209717, 2.3082244396209717, 2.3082244396209717, 2.3082244396209717, 2.3082244396209717], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]