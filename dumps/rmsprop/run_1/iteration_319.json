[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8100000023841858, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211544990539551, 1.6068968772888184, 1.133244276046753, 1.0137193202972412, 0.8826408982276917, 0.8505569696426392, 0.7896149158477783, 0.7822872996330261, 0.7414566874504089, 0.7270156741142273, 0.711944580078125, 0.6845313310623169, 0.6427155137062073, 0.6515820622444153, 0.6385806202888489, 0.6307902336120605, 0.6008374094963074, 0.5967655777931213, 0.5917059779167175, 0.5747599005699158, 0.5544247031211853, 0.5624518990516663, 0.5463201999664307, 0.5449540615081787, 0.5319355726242065, 0.5199801921844482, 0.5287724137306213, 0.5079814195632935, 0.5015459060668945, 0.5026105642318726, 0.48730069398880005, 0.5013311505317688, 0.48500198125839233, 0.4672813415527344, 0.4767928123474121, 0.47599485516548157, 0.4643508791923523, 0.46686646342277527], "accuracy": [0.25980716943740845, 0.5065380930900574, 0.6053361296653748, 0.6400739550590515, 0.6765288710594177, 0.6873596906661987, 0.7098137736320496, 0.713379979133606, 0.7223616242408752, 0.7283053994178772, 0.7305507659912109, 0.7466648817062378, 0.7576277852058411, 0.7568352818489075, 0.7626469135284424, 0.7663452625274658, 0.7705719470977783, 0.774270236492157, 0.7745344042778015, 0.7858935594558716, 0.7931581139564514, 0.7878747582435608, 0.7955356240272522, 0.7991018295288086, 0.8021397590637207, 0.8068947196006775, 0.8000264167785645, 0.8103289008140564, 0.8108572363853455, 0.8146876096725464, 0.816008448600769, 0.8108572363853455, 0.8227446675300598, 0.8267071843147278, 0.8247259259223938, 0.8227446675300598, 0.8345000743865967, 0.8210275769233704], "val_loss": [1.9258288145065308, 1.09636390209198, 0.9004405736923218, 0.7665296792984009, 0.7486664056777954, 0.704107403755188, 0.7348546385765076, 0.6549744606018066, 0.636042058467865, 0.6297439932823181, 0.5945422053337097, 0.5857406258583069, 0.575173020362854, 0.562513530254364, 0.5695992708206177, 0.5377517938613892, 0.535432755947113, 0.5252265334129333, 0.5352665781974792, 0.5154154300689697, 0.5119820237159729, 0.510393500328064, 0.5030437707901001, 0.5165017247200012, 0.5021219253540039, 0.5010690093040466, 0.4874432384967804, 0.4825141131877899, 0.47390103340148926, 0.4706818759441376, 0.4700797200202942, 0.46126532554626465, 0.45587971806526184, 0.46589407324790955, 0.45215898752212524, 0.4670950472354889, 0.4423176348209381, 0.44391730427742004], "val_accuracy": [0.5173333287239075, 0.6506666541099548, 0.6786666512489319, 0.7196666598320007, 0.7213333249092102, 0.7316666841506958, 0.7153333425521851, 0.7636666893959045, 0.7683333158493042, 0.749666690826416, 0.7826666831970215, 0.7766666412353516, 0.7749999761581421, 0.7833333611488342, 0.8003333210945129, 0.7960000038146973, 0.8053333163261414, 0.8056666851043701, 0.8006666898727417, 0.8193333148956299, 0.8106666803359985, 0.8163333535194397, 0.8136666417121887, 0.8036666512489319, 0.8209999799728394, 0.8216666579246521, 0.8169999718666077, 0.8203333616256714, 0.8226666450500488, 0.8393333554267883, 0.8320000171661377, 0.8330000042915344, 0.843999981880188, 0.8253333568572998, 0.8403333425521851, 0.8209999799728394, 0.8433333039283752, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 3, 5, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 0, 1, 3, 5, 6, 7, 4, 8, 5], [6, 4, 2, 0, 3, 6, 4], [0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 6, 1, 4, 0], [2, 6, 2, 5, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 5, 2, 2, 18, 11, 7, 1, 11, 6, 5, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(grad, tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(beta, tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(sigma)), grad))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(grad, beta), tf.math.negative(grad)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 5, 8, 3, 5], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 0, 6, 7, 8, 2], [2, 5, 3, 3, 0], [20, 1], [0, 0, 1, 0, 1], [0, 6, 5], [0, 5], [14], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.sqrt(alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.sqrt(tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 6, 4, 2, 1, 12, 7, 5, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 6, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103601932525635, 2.3113996982574463, 2.311140298843384, 2.310770034790039, 2.309154748916626, 2.3099889755249023], "accuracy": [0.09615638852119446, 0.0874389111995697, 0.08796724677085876, 0.0882314071059227, 0.09113723784685135, 0.09272222965955734], "val_loss": [2.3082125186920166, 2.3082125186920166, 2.3082125186920166, 2.3082125186920166, 2.3082125186920166, 2.3082125186920166], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]