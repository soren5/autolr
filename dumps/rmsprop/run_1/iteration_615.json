[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2107889652252197, 1.591389775276184, 1.125868320465088, 0.971244215965271, 0.9059052467346191, 0.8361445665359497, 0.7827238440513611, 0.7415273785591125, 0.7234765291213989, 0.7176159024238586, 0.6768214106559753, 0.6811739206314087, 0.6493095755577087, 0.6494430899620056, 0.6397161483764648, 0.6220049262046814, 0.6182732582092285, 0.597350537776947, 0.5914537906646729, 0.5834243893623352, 0.5699084997177124, 0.5725138187408447, 0.5451110601425171, 0.5494615435600281, 0.5365981459617615, 0.534727931022644, 0.5216914415359497, 0.5254600048065186, 0.5168741345405579, 0.5051624774932861, 0.5123018026351929, 0.48640546202659607, 0.4994048476219177, 0.49674859642982483, 0.4835868775844574, 0.47443363070487976, 0.474911630153656, 0.4710451662540436, 0.46512359380722046], "accuracy": [0.270109623670578, 0.505349338054657, 0.6067890524864197, 0.6483951807022095, 0.672170102596283, 0.6942279934883118, 0.7046625018119812, 0.724210798740387, 0.7264562249183655, 0.7304186820983887, 0.7454761862754822, 0.7409853339195251, 0.7565711140632629, 0.7543256878852844, 0.7607977986335754, 0.7635715007781982, 0.7621186375617981, 0.776251494884491, 0.7740060687065125, 0.7836481332778931, 0.7858935594558716, 0.7865539789199829, 0.7902522683143616, 0.7968564033508301, 0.7955356240272522, 0.7985734939575195, 0.8021397590637207, 0.8006868362426758, 0.8054417967796326, 0.811649739742279, 0.8072909712791443, 0.8207634687423706, 0.811649739742279, 0.8127063512802124, 0.8195747137069702, 0.8204993009567261, 0.8166688680648804, 0.8186501264572144, 0.8269713521003723], "val_loss": [1.9245368242263794, 1.108425259590149, 0.9091135859489441, 0.8616562485694885, 0.7319607734680176, 0.7065410017967224, 0.6902898550033569, 0.6435715556144714, 0.6198718547821045, 0.6083630323410034, 0.601218044757843, 0.6167048215866089, 0.6035438179969788, 0.5862140655517578, 0.5882561802864075, 0.5674226880073547, 0.5435926914215088, 0.5450708270072937, 0.5388275384902954, 0.548610508441925, 0.5189462304115295, 0.5170429348945618, 0.49452653527259827, 0.49193647503852844, 0.5085660219192505, 0.49149706959724426, 0.4835914671421051, 0.5016193389892578, 0.47687143087387085, 0.4787556827068329, 0.4719097912311554, 0.4554752707481384, 0.4779481291770935, 0.4533572494983673, 0.4408351182937622, 0.4571646749973297, 0.44518953561782837, 0.43797600269317627, 0.4411478638648987], "val_accuracy": [0.5249999761581421, 0.6196666955947876, 0.6456666588783264, 0.6676666736602783, 0.7369999885559082, 0.7316666841506958, 0.7459999918937683, 0.7543333172798157, 0.7720000147819519, 0.7749999761581421, 0.7743333578109741, 0.7673333287239075, 0.7693333625793457, 0.7856666445732117, 0.7746666669845581, 0.7866666913032532, 0.8013333082199097, 0.8009999990463257, 0.7923333048820496, 0.7886666655540466, 0.8050000071525574, 0.7933333516120911, 0.8166666626930237, 0.8190000057220459, 0.8036666512489319, 0.8153333067893982, 0.8206666707992554, 0.812666654586792, 0.8206666707992554, 0.8220000267028809, 0.8169999718666077, 0.8370000123977661, 0.8293333053588867, 0.8413333296775818, 0.8386666774749756, 0.8246666789054871, 0.8393333554267883, 0.8393333554267883, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 3, 1, 3, 5], [0, 0, 1, 0, 2], [47, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 3, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 11, 7, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10632677376270294, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 7], [2, 0, 3, 1, 0, 5], [16, 37], [0, 1], [0], [7], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 14, 8, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(grad, alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.255025386810303, 2.3437976837158203, 2.305388927459717, 2.303330659866333, 2.3055408000946045, 2.3031673431396484, 2.3031463623046875], "accuracy": [0.16893409192562103, 0.09747721254825592, 0.09668471664190292, 0.09919429570436478, 0.10170386731624603, 0.09932637959718704, 0.09311848133802414], "val_loss": [2.481065511703491, 2.306137800216675, 2.304141044616699, 2.3028664588928223, 2.302952766418457, 2.3026347160339355, 2.302600145339966], "val_accuracy": [0.09600000083446503, 0.10199999809265137, 0.0976666659116745, 0.0976666659116745, 0.10199999809265137, 0.10199999809265137, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 1, 3, 8], [0, 0, 1, 0, 2], [0, 10, 62], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [38, 37], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 10, 6, 4, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [32, 39, 7], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [20, 37], [0, 1], [5], [6], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095474243164062, 2.3100271224975586, 2.3097739219665527, 2.30876088142395, 2.310589075088501, 2.308279037475586], "accuracy": [0.09021265059709549, 0.09140139818191528, 0.0874389111995697, 0.09602430462837219, 0.0866464152932167, 0.09932637959718704], "val_loss": [2.3084826469421387, 2.3084826469421387, 2.3084826469421387, 2.3084826469421387, 2.3084826469421387, 2.3084826469421387], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]