[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211493968963623, 1.6135964393615723, 1.160003662109375, 0.9663936495780945, 0.9104604125022888, 0.8241996169090271, 0.7885687947273254, 0.7879419326782227, 0.7327355742454529, 0.7151541113853455, 0.6791135668754578, 0.6703215837478638, 0.6451663970947266, 0.6536337733268738, 0.6255607008934021, 0.6155211925506592, 0.5897172093391418, 0.5864988565444946, 0.5820512175559998, 0.5729612112045288, 0.5660138130187988, 0.5609272122383118, 0.5414265990257263, 0.536840558052063, 0.5348902940750122, 0.5270484089851379, 0.5104503035545349, 0.5031413435935974, 0.5105858445167542, 0.49184679985046387, 0.4914233088493347, 0.48626863956451416, 0.4716498851776123, 0.4963590204715729, 0.47213074564933777, 0.46077123284339905, 0.46539098024368286, 0.46237441897392273, 0.45248088240623474, 0.4409458041191101, 0.4389927089214325, 0.4461582899093628, 0.43816912174224854, 0.42584481835365295, 0.42222556471824646, 0.4212067425251007, 0.4149739742279053, 0.41710636019706726, 0.41319018602371216, 0.4002419114112854, 0.399514764547348], "accuracy": [0.2646942138671875, 0.5019152164459229, 0.5925241112709045, 0.659490168094635, 0.666358470916748, 0.6888125538825989, 0.7022850513458252, 0.7022850513458252, 0.7260599732398987, 0.7320036888122559, 0.7474573850631714, 0.7454761862754822, 0.7534011602401733, 0.7543256878852844, 0.7644960880279541, 0.770439863204956, 0.7817989587783813, 0.7812706232070923, 0.7819310426712036, 0.78113853931427, 0.7931581139564514, 0.7866860628128052, 0.8010830879211426, 0.7981772422790527, 0.804649293422699, 0.8014793395996094, 0.8076872229576111, 0.8152159452438354, 0.8119139075279236, 0.8177255392074585, 0.8157442808151245, 0.8197067975997925, 0.8269713521003723, 0.8149517774581909, 0.8249900937080383, 0.8296129703521729, 0.8278959393501282, 0.8325188159942627, 0.8315942287445068, 0.8379341959953308, 0.8384625315666199, 0.837537944316864, 0.8370096683502197, 0.8424250483512878, 0.8469158411026001, 0.844010055065155, 0.8465195894241333, 0.8448025584220886, 0.8457271456718445, 0.8525954484939575, 0.8564258217811584], "val_loss": [1.9255456924438477, 1.125148057937622, 0.9307448863983154, 0.7713329792022705, 0.780009925365448, 0.6877942681312561, 0.7167354226112366, 0.6746008396148682, 0.6190736293792725, 0.6147080063819885, 0.5863045454025269, 0.6017389297485352, 0.5619903802871704, 0.5799652338027954, 0.5584378838539124, 0.5489737391471863, 0.5134642124176025, 0.5312612056732178, 0.5123373866081238, 0.5086002349853516, 0.49696072936058044, 0.4906400442123413, 0.48345714807510376, 0.49266645312309265, 0.4979986846446991, 0.4629160165786743, 0.4656136929988861, 0.47131437063217163, 0.4600282907485962, 0.4672606885433197, 0.44759953022003174, 0.45001712441444397, 0.4705052375793457, 0.43073615431785583, 0.429731160402298, 0.4368527829647064, 0.4339267909526825, 0.4186811149120331, 0.42948949337005615, 0.41721874475479126, 0.4189240634441376, 0.4325549304485321, 0.4123111963272095, 0.40491512417793274, 0.40825894474983215, 0.3962574601173401, 0.4046165347099304, 0.40209460258483887, 0.40091046690940857, 0.4077152609825134, 0.40028995275497437], "val_accuracy": [0.5199999809265137, 0.6486666798591614, 0.6710000038146973, 0.7136666774749756, 0.703000009059906, 0.749666690826416, 0.7326666712760925, 0.7296666502952576, 0.7680000066757202, 0.7776666879653931, 0.7820000052452087, 0.7663333415985107, 0.7960000038146973, 0.784333348274231, 0.7846666574478149, 0.7866666913032532, 0.8080000281333923, 0.8019999861717224, 0.8220000267028809, 0.8116666674613953, 0.8146666884422302, 0.8206666707992554, 0.824999988079071, 0.8190000057220459, 0.8180000185966492, 0.8330000042915344, 0.8349999785423279, 0.8286666870117188, 0.828000009059906, 0.8173333406448364, 0.8356666564941406, 0.8386666774749756, 0.8259999752044678, 0.8443333506584167, 0.8496666550636292, 0.8410000205039978, 0.8396666646003723, 0.8526666760444641, 0.8486666679382324, 0.8553333282470703, 0.8476666808128357, 0.8453333377838135, 0.8493333458900452, 0.8579999804496765, 0.8603333234786987, 0.8640000224113464, 0.8583333492279053, 0.8556666374206543, 0.8616666793823242, 0.8553333282470703, 0.8523333072662354]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 66, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 9, 5, 3, 8, 2], [2, 0, 3, 4, 0], [83, 37], [0, 1], [0], [6], [0], [1], [0], [3], [0]], "fitness": -0.25857141613960266, "mapping_values": [1, 7, 3, 4, 3, 8, 6, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(beta, tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.7062978744506836, 376435.375, NaN, NaN, NaN, NaN], "accuracy": [0.20512482523918152, 0.18821820616722107, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.0968737602233887, 3.438913527165747e+16, NaN, NaN, NaN, NaN], "val_accuracy": [0.24899999797344208, 0.10599999874830246, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 0], [0, 39, 39, 28], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 2, 1, 0], [16, 37], [0, 1], [0], [3], [0], [1], [0], [4], [0]], "fitness": -0.11085714399814606, "mapping_values": [1, 12, 7, 5, 4, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.359180450439453, 2.3060381412506104, 2.3040237426757812, 2.3029868602752686, 2.299384117126465, 2.3034274578094482, 2.2468903064727783, 2.302274703979492, 3.650942087173462, 2.3084278106689453, 2.3045928478240967], "accuracy": [0.18584071099758148, 0.10051512718200684, 0.11530841141939163, 0.09602430462837219, 0.1340641975402832, 0.10170386731624603, 0.18940694630146027, 0.10593052208423615, 0.13934750854969025, 0.10117553919553757, 0.09681680053472519], "val_loss": [2.3051774501800537, 2.302870750427246, 2.3029682636260986, 2.2980501651763916, 2.305112361907959, 2.293595790863037, 2.304208993911743, 2.2931549549102783, 2.311607837677002, 2.304396390914917, 2.3031105995178223], "val_accuracy": [0.0976666659116745, 0.09233333170413971, 0.09933333098888397, 0.10633333027362823, 0.09966666996479034, 0.11299999803304672, 0.09966666996479034, 0.10633333027362823, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 7, 1, 6, 2, 0, 4, 4, 7, 3, 7, 0, 8, 6, 1, 3, 6, 2, 3, 3, 5, 5, 9], [0, 0, 2, 2, 2, 1, 1, 0, 2, 0, 3, 0, 2, 2, 1, 2, 3, 3, 0, 1], [0, 39, 39, 5, 72, 94, 66], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [30, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 28, 20, 7, 5, 3, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.pow(grad, tf.math.pow(tf.math.add(grad, tf.math.multiply(alpha, alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.multiply(grad, alpha), tf.math.square(grad)), grad), tf.math.square(grad)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [130979512.0, 2371013610307584.0, 4.795030261417417e+22, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09985470771789551, 0.09959053993225098, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777], "val_loss": [8902155264.0, 1.5837363768498586e+17, 4.728511842719576e+24, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10266666859388351, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [8], [6], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103744983673096, 2.310431480407715, 2.3098247051239014, 2.3112740516662598, 2.3103432655334473, 2.309868574142456], "accuracy": [0.09338264167308807, 0.09615638852119446, 0.09206181764602661, 0.09259014576673508, 0.09100515395402908, 0.09272222965955734], "val_loss": [2.3083603382110596, 2.3083603382110596, 2.3083603382110596, 2.3083603382110596, 2.3083603382110596, 2.3083603382110596], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]