[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2140300273895264, 1.6071029901504517, 1.1634823083877563, 0.985040545463562, 0.8906192779541016, 0.8221427798271179, 0.8128692507743835, 0.7517335414886475, 0.7118533253669739, 0.7181329727172852, 0.6878888607025146, 0.6790593266487122, 0.655440092086792, 0.6258376240730286, 0.615734338760376, 0.5932221412658691, 0.6051822900772095, 0.5905964374542236, 0.5773112773895264, 0.5713886022567749, 0.540006160736084, 0.5553162097930908, 0.5357500910758972, 0.5468459129333496, 0.5244602560997009, 0.5260372757911682, 0.4971432089805603, 0.5013871192932129, 0.5095255374908447, 0.48700496554374695, 0.4817948639392853, 0.47704505920410156, 0.46640390157699585, 0.46242743730545044, 0.46233081817626953, 0.4558289051055908, 0.45165374875068665, 0.451937735080719, 0.44060805439949036], "accuracy": [0.26495838165283203, 0.5052172541618347, 0.5960903167724609, 0.6520935297012329, 0.6796988248825073, 0.6973979473114014, 0.7042662501335144, 0.7255316376686096, 0.7401928305625916, 0.7302865982055664, 0.7430986762046814, 0.7456082701683044, 0.7532690763473511, 0.76542067527771, 0.7711002230644226, 0.7817989587783813, 0.7763835787773132, 0.7775723338127136, 0.7874785661697388, 0.7843085527420044, 0.7984414100646973, 0.7931581139564514, 0.7954035401344299, 0.7928939461708069, 0.8070268034934998, 0.8054417967796326, 0.8145555257797241, 0.8127063512802124, 0.8087438941001892, 0.8191784620285034, 0.8247259259223938, 0.8185180425643921, 0.8269713521003723, 0.8304054737091064, 0.8253863453865051, 0.8286884427070618, 0.8345000743865967, 0.8384625315666199, 0.8399154543876648], "val_loss": [1.9337202310562134, 1.1191051006317139, 0.9366142749786377, 0.8180533647537231, 0.7730915546417236, 0.7538478374481201, 0.6875091195106506, 0.6741936206817627, 0.6332907676696777, 0.6340430378913879, 0.6289404630661011, 0.622114896774292, 0.5848127603530884, 0.5699432492256165, 0.5696483254432678, 0.5713887810707092, 0.5745248794555664, 0.538084089756012, 0.560072124004364, 0.5292521715164185, 0.5275300741195679, 0.5392364263534546, 0.554326593875885, 0.5123341679573059, 0.508879542350769, 0.5010176301002502, 0.48693814873695374, 0.5022932887077332, 0.49902433156967163, 0.48723432421684265, 0.4823041260242462, 0.47959253191947937, 0.4705978333950043, 0.45624905824661255, 0.4558349549770355, 0.4582135081291199, 0.46057072281837463, 0.4493730366230011, 0.45951664447784424], "val_accuracy": [0.5556666851043701, 0.6383333206176758, 0.6623333096504211, 0.6970000267028809, 0.6959999799728394, 0.7233333587646484, 0.7403333187103271, 0.750333309173584, 0.7590000033378601, 0.7693333625793457, 0.7573333382606506, 0.7726666927337646, 0.7743333578109741, 0.793666660785675, 0.7820000052452087, 0.7836666703224182, 0.7929999828338623, 0.8040000200271606, 0.7850000262260437, 0.8069999814033508, 0.8130000233650208, 0.8016666769981384, 0.7916666865348816, 0.8190000057220459, 0.815666675567627, 0.8206666707992554, 0.8236666917800903, 0.8203333616256714, 0.8056666851043701, 0.8213333487510681, 0.8230000138282776, 0.8266666531562805, 0.8259999752044678, 0.8399999737739563, 0.8326666951179504, 0.8339999914169312, 0.8349999785423279, 0.8336666822433472, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [7, 2, 3, 1, 3, 5, 6, 8], [0, 0, 1, 0, 2, 0, 3], [0, 22, 39, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 0, 4, 6, 9, 2, 0], [2, 0, 3, 1, 0, 0, 5], [16, 37, 92, 73], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 20, 13, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 0, 5], [0, 0, 2, 0, 2], [0, 39, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 5, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 1], [0, 8], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 4, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 0], [0, 5, 9], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 9, 5, 4, 3, 2, 1, 1, 0, 2, 1, 1, 0, 3, 3, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3109376430511475, 2.311039924621582, 2.3100428581237793, 2.3108813762664795, 2.310250759124756, 2.312041759490967], "accuracy": [0.09113723784685135, 0.09694888442754745, 0.09232597798109055, 0.09166556596755981, 0.08994849026203156, 0.08757099509239197], "val_loss": [2.308483123779297, 2.308483123779297, 2.308483123779297, 2.308483123779297, 2.308483123779297, 2.308483123779297], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 2, 5], [0, 3, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 4, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [0], [5], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 1, 1, 1, 8, 4, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088395595550537, 2.310230255126953, 2.3101282119750977, 2.3098738193511963, 2.3094048500061035, 2.3095362186431885], "accuracy": [0.08928807079792023, 0.08598599582910538, 0.09192973375320435, 0.09126931428909302, 0.08994849026203156, 0.09879804402589798], "val_loss": [2.308366298675537, 2.308366298675537, 2.308366298675537, 2.308366298675537, 2.308366298675537, 2.308366298675537], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]