[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2096221446990967, 1.5991342067718506, 1.1543618440628052, 0.9862432479858398, 0.8808760643005371, 0.8372517228126526, 0.7958318591117859, 0.7399014830589294, 0.7181246280670166, 0.7241805195808411, 0.6714629530906677, 0.6556363701820374, 0.6530041694641113, 0.6465564966201782, 0.6218737363815308, 0.6064988970756531, 0.6048017144203186, 0.5869225859642029, 0.5890756845474243, 0.5662271976470947, 0.5592504739761353, 0.5598926544189453, 0.5329205989837646, 0.5292397737503052, 0.5253810286521912, 0.5206339359283447, 0.5161086320877075, 0.4985509216785431, 0.5022819638252258, 0.4968998432159424, 0.4855751395225525, 0.4802979528903961, 0.4729028642177582, 0.4760017395019531, 0.4695676267147064, 0.45994192361831665, 0.4471224248409271, 0.452509343624115], "accuracy": [0.2654867172241211, 0.5049530863761902, 0.5927882790565491, 0.6469422578811646, 0.6819442510604858, 0.6992471218109131, 0.7061154246330261, 0.7293620109558105, 0.7372870445251465, 0.7288337349891663, 0.7547219395637512, 0.7580240368843079, 0.7600052952766418, 0.7584202885627747, 0.7700436115264893, 0.780610203742981, 0.7761194109916687, 0.7839123010635376, 0.7781006693840027, 0.7938185334205627, 0.7968564033508301, 0.793950617313385, 0.8035926818847656, 0.8054417967796326, 0.8035926818847656, 0.8058380484580994, 0.8049134612083435, 0.8178576231002808, 0.8162726163864136, 0.8181217908859253, 0.8244617581367493, 0.8264430165290833, 0.8234050869941711, 0.8215559124946594, 0.8261788487434387, 0.829216718673706, 0.8389908671379089, 0.8345000743865967], "val_loss": [1.9170738458633423, 1.1156902313232422, 0.9092104434967041, 0.8249168992042542, 0.7325965166091919, 0.6956756711006165, 0.7076746225357056, 0.6577860713005066, 0.6744689345359802, 0.6224881410598755, 0.613471269607544, 0.6130579710006714, 0.5956558585166931, 0.564710259437561, 0.5708895921707153, 0.5432529449462891, 0.5465518832206726, 0.5805232524871826, 0.5570642352104187, 0.5286462306976318, 0.5565217733383179, 0.5051586627960205, 0.5263371467590332, 0.49694710969924927, 0.4813491106033325, 0.4976852238178253, 0.47256213426589966, 0.4880823493003845, 0.46841132640838623, 0.4613630473613739, 0.4525224566459656, 0.45924079418182373, 0.4500652253627777, 0.4567154049873352, 0.4610024392604828, 0.4506898522377014, 0.4376887083053589, 0.45279914140701294], "val_accuracy": [0.5649999976158142, 0.6416666507720947, 0.6673333048820496, 0.690666675567627, 0.731333315372467, 0.7426666617393494, 0.7369999885559082, 0.7536666393280029, 0.7276666760444641, 0.765999972820282, 0.7639999985694885, 0.7666666507720947, 0.7806666493415833, 0.7886666655540466, 0.7926666736602783, 0.7983333468437195, 0.7940000295639038, 0.7826666831970215, 0.7689999938011169, 0.796999990940094, 0.8036666512489319, 0.809333324432373, 0.7973333597183228, 0.8113333582878113, 0.824999988079071, 0.8146666884422302, 0.828000009059906, 0.8199999928474426, 0.8316666483879089, 0.8296666741371155, 0.8333333134651184, 0.8270000219345093, 0.8399999737739563, 0.8246666789054871, 0.8256666660308838, 0.8366666436195374, 0.8373333215713501, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [4, 1, 8, 8, 2, 5, 2, 0, 8, 6, 7, 3, 9, 6, 1, 5, 7], [6, 6, 7, 5, 3, 6, 3, 0, 2, 1], [0, 66], [0, 0, 0, 0, 1, 0, 1], [0, 5, 2, 7, 9], [2, 2], [0]], "fitness": -0.11999999731779099, "mapping_values": [1, 11, 6, 5, 3, 7, 4, 3, 1, 27, 17, 10, 2, 7, 5, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.math.subtract(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.subtract(grad, tf.math.square(tf.math.add(sigma, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))), beta))))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [Infinity, Infinity, Infinity, Infinity, Infinity, Infinity], "accuracy": [0.10830801725387573, 0.11398758739233017, 0.11094967275857925, 0.10989301651716232, 0.11187426000833511, 0.11015717685222626], "val_loss": [6.335336414408591e+34, 6.335336414408591e+34, 6.335336414408591e+34, 6.335336414408591e+34, 6.335336414408591e+34, 6.335336414408591e+34], "val_accuracy": [0.11599999666213989, 0.11599999666213989, 0.11599999666213989, 0.11599999666213989, 0.11599999666213989, 0.11599999666213989]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 4, 4, 6, 7, 2, 0], [0, 0, 1, 3, 2, 3, 0, 1, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 0, 8, 2, 5], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 3, 12, 8, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.pow(grad, tf.math.divide_no_nan(grad, tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(beta)), tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 90], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310509443283081, 2.3094425201416016, 2.310074806213379, 2.310141086578369, 2.3089187145233154, 2.31062912940979], "accuracy": [0.09311848133802414, 0.09192973375320435, 0.09496764093637466, 0.09536388516426086, 0.09959053993225098, 0.0878351628780365], "val_loss": [2.308584213256836, 2.308584213256836, 2.308584213256836, 2.308584213256836, 2.308584213256836, 2.308584213256836], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 4, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310021162033081, 2.309866428375244, 2.3109405040740967, 2.3106889724731445, 2.309396266937256, 2.3107035160064697], "accuracy": [0.09259014576673508, 0.09126931428909302, 0.08981640636920929, 0.09470347315073013, 0.09549596905708313, 0.09245806187391281], "val_loss": [2.3081417083740234, 2.3081417083740234, 2.3081417083740234, 2.3081417083740234, 2.3081417083740234, 2.3081417083740234], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]