[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105965614318848, 1.61367928981781, 1.1587870121002197, 0.9802390933036804, 0.8895350694656372, 0.8489301800727844, 0.7848499417304993, 0.7694145441055298, 0.7286426424980164, 0.719113290309906, 0.6777325868606567, 0.6920104026794434, 0.640671968460083, 0.6514714360237122, 0.6107015609741211, 0.621293306350708, 0.6231480240821838, 0.5984160900115967, 0.580603837966919, 0.5781854391098022, 0.5641523003578186, 0.561769425868988, 0.5625895857810974, 0.5365670919418335, 0.5364848971366882, 0.5258036255836487, 0.5102824568748474, 0.5034794211387634, 0.5091254711151123, 0.501512348651886, 0.5015020370483398, 0.47936636209487915, 0.47665801644325256], "accuracy": [0.25941091775894165, 0.49570730328559875, 0.5967507362365723, 0.6510368585586548, 0.6794346570968628, 0.6933034062385559, 0.7141724824905396, 0.7213049530982971, 0.735041618347168, 0.7346453666687012, 0.7552502751350403, 0.7441553473472595, 0.7648923397064209, 0.7606657147407532, 0.7812706232070923, 0.770439863204956, 0.7713643908500671, 0.7803460359573364, 0.785101056098938, 0.7860256433486938, 0.793950617313385, 0.793950617313385, 0.7938185334205627, 0.8055738806724548, 0.8054417967796326, 0.8119139075279236, 0.817989706993103, 0.8161405324935913, 0.8165367841720581, 0.8193105459213257, 0.8142913579940796, 0.8255184292793274, 0.8253863453865051], "val_loss": [1.918848991394043, 1.0837985277175903, 0.9463147521018982, 0.7954738140106201, 0.8206375241279602, 0.6882036328315735, 0.6601196527481079, 0.6480603218078613, 0.6527628302574158, 0.639015257358551, 0.6645419597625732, 0.5809295773506165, 0.5797551870346069, 0.5544317364692688, 0.54646897315979, 0.5584149360656738, 0.5881498456001282, 0.525311291217804, 0.5220491290092468, 0.5191320776939392, 0.5298458933830261, 0.5665625929832458, 0.5061029195785522, 0.48808541893959045, 0.4831179678440094, 0.47993138432502747, 0.4810079038143158, 0.46595337986946106, 0.46721386909484863, 0.4864693880081177, 0.46458032727241516, 0.45583951473236084, 0.46961259841918945], "val_accuracy": [0.5379999876022339, 0.6800000071525574, 0.6766666769981384, 0.7183333039283752, 0.6776666641235352, 0.7406666874885559, 0.7606666684150696, 0.7576666474342346, 0.7493333220481873, 0.7680000066757202, 0.7390000224113464, 0.7893333435058594, 0.7680000066757202, 0.8053333163261414, 0.7996666431427002, 0.7943333387374878, 0.7630000114440918, 0.8133333325386047, 0.809333324432373, 0.8026666641235352, 0.7933333516120911, 0.7850000262260437, 0.8173333406448364, 0.8216666579246521, 0.8263333439826965, 0.8236666917800903, 0.8213333487510681, 0.8356666564941406, 0.8330000042915344, 0.8196666836738586, 0.8309999704360962, 0.8356666564941406, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [5, 0, 3, 1, 0, 5], [16, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 7, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1670849323272705, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 1, 1, 0, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [94.36068725585938, 10965.7587890625, 182103.796875, 1268095.75, 5596328.5, 18184648.0], "accuracy": [0.09681680053472519, 0.09985470771789551, 0.09708096832036972, 0.10474177449941635, 0.10157178342342377, 0.1006472036242485], "val_loss": [810.6769409179688, 39835.4765625, 423350.34375, 2301149.75, 8608427.0, 25375156.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 40, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [8, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 0], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 0, 3, 2], [0, 39, 39, 61], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [89, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 8, 5, 3, 4, 4, 3, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092474937438965, 2.308851957321167, 2.3116018772125244, 2.3093674182891846, 2.310272216796875, 2.3098084926605225], "accuracy": [0.09259014576673508, 0.09087307006120682, 0.08902391046285629, 0.09338264167308807, 0.09245806187391281, 0.09047681838274002], "val_loss": [2.3088796138763428, 2.3088796138763428, 2.3088796138763428, 2.3088796138763428, 2.3088796138763428, 2.3088796138763428], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]