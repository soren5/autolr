[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2133798599243164, 1.6135003566741943, 1.140926718711853, 0.9705758094787598, 0.8949852585792542, 0.824812650680542, 0.7988691329956055, 0.7697520852088928, 0.7256211042404175, 0.7026793956756592, 0.7079231142997742, 0.6651158332824707, 0.6403117775917053, 0.6418755054473877, 0.6328733563423157, 0.6030895709991455, 0.597315788269043, 0.5993120670318604, 0.5752118825912476, 0.5722672939300537, 0.5558829307556152, 0.5492400527000427, 0.5414534211158752, 0.5308642387390137, 0.5181076526641846, 0.5182645320892334, 0.5072974562644958, 0.49458637833595276, 0.5051130652427673, 0.4909719228744507, 0.48536381125450134, 0.48580166697502136, 0.47321972250938416, 0.4796031415462494, 0.47749844193458557, 0.4789459705352783, 0.45992469787597656, 0.456684410572052, 0.45108285546302795, 0.4479113221168518], "accuracy": [0.26218464970588684, 0.5032360553741455, 0.5996565818786621, 0.6576409935951233, 0.6725663542747498, 0.6972658634185791, 0.7043983340263367, 0.7173424959182739, 0.7280412316322327, 0.7376832365989685, 0.7322678565979004, 0.746268630027771, 0.7644960880279541, 0.7581561207771301, 0.7606657147407532, 0.7718927264213562, 0.7726852297782898, 0.776251494884491, 0.7887993454933167, 0.7848368883132935, 0.7906485199928284, 0.7915731072425842, 0.7942147850990295, 0.7965922355651855, 0.8068947196006775, 0.8031964302062988, 0.8080834746360779, 0.8222163319587708, 0.8129705190658569, 0.8140271902084351, 0.8149517774581909, 0.8156121969223022, 0.8249900937080383, 0.8203672170639038, 0.8204993009567261, 0.8247259259223938, 0.8235371708869934, 0.8297450542449951, 0.8339717388153076, 0.8315942287445068], "val_loss": [1.9312984943389893, 1.1077840328216553, 0.8827252388000488, 0.7966335415840149, 0.7709469199180603, 0.767402172088623, 0.717208743095398, 0.655977725982666, 0.6233498454093933, 0.5926021933555603, 0.5915074944496155, 0.6015594005584717, 0.5783313512802124, 0.5468896627426147, 0.5378606915473938, 0.5334568023681641, 0.532695472240448, 0.5176858901977539, 0.5687472224235535, 0.4994652569293976, 0.5019320845603943, 0.5146204829216003, 0.4808122217655182, 0.47119855880737305, 0.47121626138687134, 0.48158007860183716, 0.46059486269950867, 0.4580661356449127, 0.45887044072151184, 0.4698721468448639, 0.4573686122894287, 0.43267062306404114, 0.4427749812602997, 0.4692254662513733, 0.4283207952976227, 0.43276840448379517, 0.43502381443977356, 0.42373836040496826, 0.4245956242084503, 0.4252154231071472], "val_accuracy": [0.5063333511352539, 0.6586666703224182, 0.6769999861717224, 0.7136666774749756, 0.718999981880188, 0.7023333311080933, 0.7163333296775818, 0.7516666650772095, 0.7580000162124634, 0.7683333158493042, 0.7816666960716248, 0.765999972820282, 0.7566666603088379, 0.7910000085830688, 0.7943333387374878, 0.8006666898727417, 0.7956666946411133, 0.8029999732971191, 0.7683333158493042, 0.8203333616256714, 0.8153333067893982, 0.7929999828338623, 0.8226666450500488, 0.824999988079071, 0.8246666789054871, 0.8186666369438171, 0.8333333134651184, 0.8303333520889282, 0.8216666579246521, 0.8343333601951599, 0.8336666822433472, 0.8423333168029785, 0.8343333601951599, 0.8206666707992554, 0.8523333072662354, 0.8456666469573975, 0.8410000205039978, 0.847000002861023, 0.846666693687439, 0.8403333425521851]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [1, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [31.388492584228516, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18953903019428253, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [67162.1484375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 4], [0, 0, 3, 0, 2, 3], [6, 0, 12], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 4, 0, 0], [93, 37], [0, 1], [0], [2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15453705191612244, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [9, 2, 3, 1, 6, 5], [2, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 3, 2], [0, 0, 3, 1, 0, 3], [16, 37, 5], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 6, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.multiply(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304973602294922, 2.302982807159424, 2.307321071624756, 2.3088204860687256, 2.308779716491699, 2.3117244243621826, 2.3129281997680664], "accuracy": [0.09655263274908066, 0.09325055778026581, 0.09681680053472519, 0.09945846349000931, 0.09853387624025345, 0.09681680053472519, 0.09853387624025345], "val_loss": [2.3028361797332764, 2.3033061027526855, 2.3047144412994385, 2.3086960315704346, 2.3108465671539307, 2.313582420349121, 2.3096916675567627], "val_accuracy": [0.0989999994635582, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09866666793823242, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 0, 6, 0, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0], [2, 9], [6], [0], [1], [0], [2], [0]], "fitness": -0.09914285689592361, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6148594679705575e+21, 1.1959440114858614e+31, NaN, NaN, NaN, NaN], "accuracy": [0.10460969805717468, 0.09787346422672272, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.7746073600075867e+23, 1.6466532161531794e+33, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]