[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213992118835449, 1.6086034774780273, 1.1346341371536255, 1.0146520137786865, 0.8642037510871887, 0.8489278554916382, 0.798748791217804, 0.7676149010658264, 0.7293351292610168, 0.705930233001709, 0.6754184365272522, 0.6834090948104858, 0.647129237651825, 0.6387542486190796, 0.6285500526428223, 0.6090035438537598, 0.5824484825134277, 0.5965961813926697, 0.5724214911460876, 0.5655106902122498, 0.547886848449707, 0.5533596873283386, 0.5460128784179688, 0.5441896319389343, 0.5385469794273376, 0.5230978727340698, 0.5269237756729126, 0.5002007484436035, 0.5001472234725952, 0.4888409674167633, 0.47989943623542786, 0.48630407452583313, 0.47783830761909485, 0.4701218008995056, 0.4644956588745117, 0.452522873878479, 0.45544135570526123, 0.45205479860305786, 0.44260767102241516, 0.43672406673431396, 0.44420716166496277], "accuracy": [0.2678642272949219, 0.5094439387321472, 0.607449471950531, 0.6301677227020264, 0.6984546184539795, 0.6973979473114014, 0.7100779414176941, 0.7190595865249634, 0.7323999404907227, 0.737022876739502, 0.7499669790267944, 0.7427024245262146, 0.7561748623847961, 0.76106196641922, 0.7658169269561768, 0.774798572063446, 0.7861577272415161, 0.7790252566337585, 0.7907806038856506, 0.7886672616004944, 0.7976489067077637, 0.7950072884559631, 0.7988376617431641, 0.798309326171875, 0.8031964302062988, 0.809140145778656, 0.8072909712791443, 0.8142913579940796, 0.8171972036361694, 0.8208954930305481, 0.819970965385437, 0.8210275769233704, 0.8265751004219055, 0.8259146809577942, 0.8335754871368408, 0.8310658931732178, 0.8318583965301514, 0.8304054737091064, 0.8376700282096863, 0.8403117060661316, 0.8368775844573975], "val_loss": [1.9385535717010498, 1.1113426685333252, 0.9743689894676208, 0.8020327091217041, 0.7356892824172974, 0.6877244710922241, 0.7351377010345459, 0.6837430000305176, 0.6183488965034485, 0.6160823106765747, 0.6321086287498474, 0.6035710573196411, 0.6342817544937134, 0.5666547417640686, 0.5427181720733643, 0.5601733922958374, 0.5600245594978333, 0.5376671552658081, 0.5382025241851807, 0.5037127733230591, 0.5385740399360657, 0.5076957941055298, 0.4987105429172516, 0.4980623722076416, 0.4939804971218109, 0.4913666844367981, 0.4811643958091736, 0.4688149392604828, 0.4610065817832947, 0.46666648983955383, 0.45801863074302673, 0.46575692296028137, 0.47517129778862, 0.45122185349464417, 0.4531802237033844, 0.43579310178756714, 0.4513956606388092, 0.43876028060913086, 0.4304541349411011, 0.4441720247268677, 0.4324530065059662], "val_accuracy": [0.5490000247955322, 0.6326666474342346, 0.6383333206176758, 0.7039999961853027, 0.7276666760444641, 0.7336666584014893, 0.7023333311080933, 0.7366666793823242, 0.7586666941642761, 0.7583333253860474, 0.7540000081062317, 0.7506666779518127, 0.7319999933242798, 0.7766666412353516, 0.7953333258628845, 0.7726666927337646, 0.7883333563804626, 0.7893333435058594, 0.778333306312561, 0.8066666722297668, 0.7870000004768372, 0.8029999732971191, 0.8056666851043701, 0.8109999895095825, 0.8076666593551636, 0.8100000023841858, 0.8090000152587891, 0.824999988079071, 0.8236666917800903, 0.8266666531562805, 0.8276666402816772, 0.8216666579246521, 0.8153333067893982, 0.8273333311080933, 0.8273333311080933, 0.840666651725769, 0.82833331823349, 0.8286666870117188, 0.8399999737739563, 0.8330000042915344, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 6, 1, 4, 5], [0, 0, 1, 0, 2], [76, 39, 29], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 6, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [7], [0]], "fitness": -0.2840000092983246, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6355926990509033, 2.2907066345214844, 2.321709156036377, 2.685673713684082, 2.3065872192382812, 2.3035621643066406, 2.3031301498413086], "accuracy": [0.18782195448875427, 0.13076211512088776, 0.14159291982650757, 0.16061286628246307, 0.09879804402589798, 0.10077928751707077, 0.10276053100824356], "val_loss": [2.308502197265625, 2.0295944213867188, 2.2659361362457275, 2.30963397026062, 2.3034424781799316, 2.302734613418579, 2.3025689125061035], "val_accuracy": [0.10199999809265137, 0.2913333475589752, 0.10066666454076767, 0.10300000011920929, 0.10300000011920929, 0.09966666996479034, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [15, 39, 39, 67], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [50, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [7, 2, 3, 4, 3, 8], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 0, 2, 1, 0], [16, 37], [0, 1, 1], [4], [6, 0], [0], [1], [0], [0], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 7, 3, 4, 2, 9, 5, 4, 1, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3106415271759033, 2.3104758262634277, 2.3109560012817383, 2.3092901706695557, 2.310452699661255, 2.311415195465088], "accuracy": [0.09549596905708313, 0.08981640636920929, 0.08638224750757217, 0.09113723784685135, 0.09245806187391281, 0.09351472556591034], "val_loss": [2.30930233001709, 2.30930233001709, 2.30930233001709, 2.30930233001709, 2.30930233001709, 2.30930233001709], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 0, 0, 2], [0, 39, 87], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 0, 3, 2, 0], [16, 37], [0, 0, 0, 0, 0, 1, 1], [0, 5, 3, 8, 0], [6, 7], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 7, 5, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090646266937256, 2.308439016342163, 2.3107504844665527, 2.310817241668701, 2.3094210624694824, 2.3097751140594482], "accuracy": [0.09391097724437714, 0.09655263274908066, 0.08915598690509796, 0.09034473448991776, 0.09232597798109055, 0.09298639744520187], "val_loss": [2.308413028717041, 2.308413028717041, 2.308413028717041, 2.308413028717041, 2.308413028717041, 2.308413028717041], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]