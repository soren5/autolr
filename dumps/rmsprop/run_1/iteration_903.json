[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108864784240723, 1.611264944076538, 1.150894045829773, 0.9845184087753296, 0.9078701734542847, 0.809086799621582, 0.7925419807434082, 0.770901083946228, 0.7343073487281799, 0.7103012204170227, 0.6891046762466431, 0.6759936809539795, 0.6553757786750793, 0.6340339183807373, 0.6374428868293762, 0.6158186197280884, 0.5995876789093018, 0.5848087072372437, 0.5985742807388306, 0.566473126411438, 0.5676673054695129, 0.5387797951698303, 0.5551663041114807, 0.5334449410438538, 0.5358675122261047, 0.5360545516014099, 0.5138528347015381, 0.505548894405365, 0.5055828094482422, 0.48779088258743286, 0.4997398555278778, 0.4963902533054352, 0.4772157669067383, 0.47805967926979065, 0.46671515703201294, 0.467286080121994, 0.4601650536060333], "accuracy": [0.2678642272949219, 0.4951789677143097, 0.5933166146278381, 0.6409985423088074, 0.6745476126670837, 0.7078325152397156, 0.705058753490448, 0.7137762308120728, 0.7273808121681213, 0.7331924438476562, 0.7415136694908142, 0.7514199018478394, 0.7609298825263977, 0.7663452625274658, 0.7614582180976868, 0.7684586048126221, 0.7759873270988464, 0.7845727205276489, 0.7781006693840027, 0.7944789528846741, 0.7906485199928284, 0.8016114234924316, 0.7956677079200745, 0.8014793395996094, 0.7981772422790527, 0.8009510040283203, 0.8133667707443237, 0.8168009519577026, 0.8144234418869019, 0.8222163319587708, 0.8206313848495483, 0.8137630224227905, 0.8216879963874817, 0.8251221776008606, 0.8256505131721497, 0.8305375576019287, 0.8333113193511963], "val_loss": [1.9220304489135742, 1.0988273620605469, 0.9085344076156616, 0.9193712472915649, 0.6997517943382263, 0.6570497155189514, 0.7051745057106018, 0.6362238526344299, 0.6424787044525146, 0.5838556885719299, 0.623120903968811, 0.5476315021514893, 0.5609536170959473, 0.5417847633361816, 0.5426524877548218, 0.5494274497032166, 0.5180137157440186, 0.5010393857955933, 0.4943723976612091, 0.5186842679977417, 0.48907575011253357, 0.4984966218471527, 0.4858390688896179, 0.4675297141075134, 0.47873902320861816, 0.47718408703804016, 0.4636657238006592, 0.4561195373535156, 0.44707226753234863, 0.4519089460372925, 0.46346089243888855, 0.44557902216911316, 0.4508216977119446, 0.44410440325737, 0.44547396898269653, 0.4336315095424652, 0.4352078139781952], "val_accuracy": [0.6026666760444641, 0.6706666946411133, 0.656000018119812, 0.6620000004768372, 0.7306666374206543, 0.7473333477973938, 0.7153333425521851, 0.7566666603088379, 0.7570000290870667, 0.7786666750907898, 0.7726666927337646, 0.7910000085830688, 0.7876666784286499, 0.7906666398048401, 0.7913333177566528, 0.7870000004768372, 0.8106666803359985, 0.8106666803359985, 0.8146666884422302, 0.8023333549499512, 0.8203333616256714, 0.7986666560173035, 0.8176666498184204, 0.8276666402816772, 0.8196666836738586, 0.8216666579246521, 0.831333339214325, 0.8230000138282776, 0.8389999866485596, 0.8349999785423279, 0.8226666450500488, 0.8403333425521851, 0.8273333311080933, 0.8316666483879089, 0.8396666646003723, 0.8399999737739563, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 2], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 2, 1, 6, 6, 8, 2, 2, 5, 7, 9], [2, 0, 3, 1, 0, 5, 3], [16, 37, 32], [0, 1, 0, 1, 0, 0, 1, 0, 1], [2, 3, 4, 0, 8], [6, 3, 6, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 18, 11, 7, 3, 9, 5, 4, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.add(grad, grad)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(sigma, tf.math.pow(tf.math.negative(grad), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 6, 5], [0, 0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 9, 6, 3, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.320068120956421, 2.346276044845581, 2.385178565979004, 2.4470715522766113, 2.5849809646606445, 5.375388145446777, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08519349992275238, 0.07066437602043152, 0.06736230105161667, 0.07145687192678452, 0.08096684515476227, 0.09642054885625839, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3359296321868896, 2.3695573806762695, 2.4186463356018066, 2.50803542137146, 2.774111747741699, 70.0426025390625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09233333170413971, 0.08666666597127914, 0.08699999749660492, 0.09333333373069763, 0.09866666793823242, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [6, 2, 3, 1, 3, 5, 9, 0, 1, 5, 3, 8, 1, 1, 7, 0, 8, 7, 8, 8, 4, 3, 2, 2, 4, 8, 1, 6, 0, 1, 1, 1, 2, 7, 5, 7, 8, 8, 1, 0, 0, 9, 7, 0, 2, 0, 2, 7, 3, 8, 7, 5], [0, 2, 1, 0, 2, 0, 3, 3, 0, 1, 0, 1, 2, 2, 2, 2, 2, 1, 1, 3, 3, 1, 1, 3, 3, 2, 3, 3, 0, 3], [0, 39, 39, 21, 5, 20, 89, 74], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [97, 37], [0, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 82, 52, 30, 8, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.subtract(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(grad, tf.math.negative(grad)), tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(grad))), grad)), tf.math.sqrt(grad)), grad)), grad), alpha)), tf.math.subtract(tf.math.negative(tf.math.negative(alpha)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.negative(tf.math.add(tf.math.add(tf.math.multiply(alpha, alpha), tf.math.sqrt(tf.math.add(grad, grad))), grad))))), tf.math.square(grad)), grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 8, 0, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 38], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09828571230173111, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [641262508048384.0, 742682523598848.0, 731750758088704.0, 735130628915200.0, 714510826471424.0, 726243536273408.0], "accuracy": [0.09972262382507324, 0.10196803510189056, 0.09681680053472519, 0.09985470771789551, 0.09457138925790787, 0.09655263274908066], "val_loss": [632168451670016.0, 632168518778880.0, 632168518778880.0, 632168518778880.0, 632168518778880.0, 632168518778880.0], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]