[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108871936798096, 1.6093599796295166, 1.1291218996047974, 0.9819400310516357, 0.8894479870796204, 0.8350450396537781, 0.7918269634246826, 0.7523154020309448, 0.7363524436950684, 0.7135977149009705, 0.6793529987335205, 0.6923732757568359, 0.6458386778831482, 0.6461766362190247, 0.6195525527000427, 0.6123262047767639, 0.5904057025909424, 0.5948358178138733, 0.5881887078285217, 0.5626744031906128, 0.560859203338623, 0.5601236820220947, 0.5331626534461975, 0.5402157306671143, 0.5306483507156372, 0.5350256562232971, 0.5155771374702454, 0.5149096250534058, 0.5015631318092346, 0.5020288228988647, 0.49373748898506165, 0.4860110878944397, 0.48185691237449646, 0.4792257249355316], "accuracy": [0.2677321434020996, 0.4943864643573761, 0.6000528335571289, 0.6460176706314087, 0.6789063811302185, 0.6954167485237122, 0.7108704447746277, 0.7257958054542542, 0.7251353859901428, 0.7349095344543457, 0.746268630027771, 0.7424382567405701, 0.7638356685638428, 0.7567031979560852, 0.7709681391716003, 0.7676661014556885, 0.7810064554214478, 0.7765156626701355, 0.7825914621353149, 0.7906485199928284, 0.7889314293861389, 0.7917051911354065, 0.802800178527832, 0.7956677079200745, 0.8063663840293884, 0.7997622489929199, 0.8063663840293884, 0.8086118102073669, 0.8168009519577026, 0.8088759779930115, 0.8189142942428589, 0.8231409192085266, 0.8261788487434387, 0.8235371708869934], "val_loss": [1.9244824647903442, 1.0951601266860962, 0.9315018653869629, 0.7857889533042908, 0.7818487882614136, 0.6980916261672974, 0.697608232498169, 0.6789414286613464, 0.6313696503639221, 0.64447420835495, 0.632157027721405, 0.6136891841888428, 0.6146978735923767, 0.586026132106781, 0.5710515975952148, 0.5665774345397949, 0.5701102614402771, 0.541297972202301, 0.6180803179740906, 0.5359538793563843, 0.5378694534301758, 0.5148187875747681, 0.517300546169281, 0.5127806663513184, 0.510259747505188, 0.49495193362236023, 0.4979148209095001, 0.49485141038894653, 0.48241114616394043, 0.47287485003471375, 0.4845373034477234, 0.4766601622104645, 0.4873897433280945, 0.4822537302970886], "val_accuracy": [0.5090000033378601, 0.6526666879653931, 0.6676666736602783, 0.7096666693687439, 0.7013333439826965, 0.7326666712760925, 0.7456666827201843, 0.7323333621025085, 0.7620000243186951, 0.7406666874885559, 0.7480000257492065, 0.7710000276565552, 0.7649999856948853, 0.7829999923706055, 0.7976666688919067, 0.7873333096504211, 0.7806666493415833, 0.8080000281333923, 0.762333333492279, 0.8096666932106018, 0.809333324432373, 0.8186666369438171, 0.815666675567627, 0.8116666674613953, 0.8203333616256714, 0.824999988079071, 0.8209999799728394, 0.8226666450500488, 0.8386666774749756, 0.8323333263397217, 0.82833331823349, 0.8320000171661377, 0.8243333101272583, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 5, 5, 8, 3, 8, 3, 6, 1, 4, 1, 9, 6], [2, 0, 1, 0, 0, 0, 2, 2, 3, 3], [0, 8, 3, 96, 38], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1], [3], [4, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.10057143121957779, "mapping_values": [1, 26, 16, 10, 5, 4, 2, 2, 1, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.square(tf.math.sqrt(tf.math.multiply(grad, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))))), tf.math.multiply(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [28291.8046875, 534629056512.0, 8.66094325194503e+18, 6.717192314145976e+25, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09457138925790787, 0.10302469879388809, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1950103.5, 34569539551232.0, 5.7621326543015064e+20, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 3, 1, 3, 5, 1, 3, 2, 5, 8], [0, 0, 0, 0, 1, 1, 1, 3, 3], [64, 39, 39, 75], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 3, 5, 2], [5, 0, 3, 1, 0], [16, 37], [0, 1, 1], [7], [6, 4], [96], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 4, 7, 4, 3, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.square(alpha), tf.math.sqrt(alpha)), alpha))), grad), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 2, 1, 7, 0, 9], [1, 0, 1, 0, 2, 1, 0], [0, 39, 72, 74], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 18, 11, 7, 4, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.negative(grad), alpha), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090662956237793, 2.3095543384552, 2.3099894523620605, 2.30899977684021, 2.3087189197540283, 2.309312582015991], "accuracy": [0.09034473448991776, 0.09549596905708313, 0.09113723784685135, 0.0944393053650856, 0.09826971590518951, 0.0886276587843895], "val_loss": [2.3092024326324463, 2.3092024326324463, 2.3092024326324463, 2.3092024326324463, 2.3092024326324463, 2.3092024326324463], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [0, 80, 21], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 3, 8, 1, 8], [2, 0, 5, 1, 0, 1, 2], [16, 1], [0, 1], [0], [6], [0], [0, 0, 1, 0, 1], [0, 7, 5], [2, 2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 2, 18, 11, 7, 2, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(grad, tf.math.sqrt(tf.math.subtract(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), alpha)), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.square(beta)))", "other_info": {"loss": [2.3110058307647705, 2.3107078075408936, 2.309192180633545, 2.309645652770996, 2.309083938598633, 2.3095858097076416], "accuracy": [0.09100515395402908, 0.09430722147226334, 0.09972262382507324, 0.0878351628780365, 0.09113723784685135, 0.09430722147226334], "val_loss": [2.3096113204956055, 2.3096113204956055, 2.3096113204956055, 2.3096113204956055, 2.3096113204956055, 2.3096113204956055], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]