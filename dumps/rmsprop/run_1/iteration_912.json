[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.829714298248291, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2090795040130615, 1.601850152015686, 1.1590429544448853, 0.9937275052070618, 0.8643830418586731, 0.8140997290611267, 0.7942352294921875, 0.7628190517425537, 0.7523247003555298, 0.7082802057266235, 0.6883202195167542, 0.6651802659034729, 0.6547377705574036, 0.6438649892807007, 0.6211938858032227, 0.6280297040939331, 0.595878541469574, 0.5948536396026611, 0.5866273045539856, 0.589181125164032, 0.5567972660064697, 0.5563051700592041, 0.5474973917007446, 0.5329398512840271, 0.544144868850708, 0.5255737900733948, 0.5254141688346863, 0.5093396902084351, 0.5011360049247742, 0.5022523999214172, 0.5047271847724915, 0.48084887862205505, 0.4765393137931824, 0.4781615436077118, 0.47941863536834717, 0.4749787151813507, 0.473979651927948, 0.4445515275001526, 0.45521873235702515, 0.45897018909454346, 0.45600396394729614, 0.443520724773407, 0.43794015049934387, 0.4307497441768646, 0.4364073872566223, 0.4373151659965515, 0.4160000681877136, 0.423753947019577, 0.41134485602378845, 0.40737175941467285, 0.4087868928909302, 0.41095519065856934, 0.4029015302658081, 0.4080154299736023, 0.399766206741333, 0.38827061653137207, 0.3966310918331146, 0.39476633071899414, 0.3808974325656891, 0.370310515165329, 0.3800114095211029, 0.37137535214424133, 0.37172695994377136, 0.3636118471622467, 0.36599859595298767, 0.3620861768722534, 0.36262279748916626, 0.35319843888282776, 0.3514373302459717, 0.34036752581596375, 0.3399973511695862, 0.3508067727088928, 0.3476187586784363, 0.33617258071899414, 0.3400214910507202, 0.33223217725753784], "accuracy": [0.26522254943847656, 0.505877673625946, 0.5963544845581055, 0.6456214785575867, 0.6890767216682434, 0.7014925479888916, 0.7054550051689148, 0.7145687341690063, 0.7195879220962524, 0.7339849472045898, 0.7384757399559021, 0.7508915662765503, 0.7563069462776184, 0.7540615797042847, 0.7647602558135986, 0.7582882046699524, 0.7778365015983582, 0.7749306559562683, 0.7791573405265808, 0.7741381525993347, 0.7905164361000061, 0.7903843522071838, 0.7943468689918518, 0.8005547523498535, 0.7972526550292969, 0.8090080618858337, 0.8005547523498535, 0.8119139075279236, 0.8145555257797241, 0.8123101592063904, 0.8104609847068787, 0.8186501264572144, 0.8241975903511047, 0.8207634687423706, 0.8189142942428589, 0.8210275769233704, 0.8230088353157043, 0.8348963260650635, 0.8310658931732178, 0.8302733898162842, 0.8301413059234619, 0.8370096683502197, 0.8400475382804871, 0.8421608805656433, 0.8360850811004639, 0.8380662798881531, 0.8473120927810669, 0.8389908671379089, 0.847840428352356, 0.8487650156021118, 0.8471800088882446, 0.8466516733169556, 0.8512746095657349, 0.8471800088882446, 0.8469158411026001, 0.8568220734596252, 0.8473120927810669, 0.8511425256729126, 0.8602562546730042, 0.863558292388916, 0.860652506351471, 0.8598600029945374, 0.8628978729248047, 0.8640866279602051, 0.8628978729248047, 0.8648791313171387, 0.8647470474243164, 0.8720116019248962, 0.8639545440673828, 0.8733324408531189, 0.8717474341392517, 0.8684453964233398, 0.8708229064941406, 0.8771628737449646, 0.8746532797813416, 0.8726720213890076], "val_loss": [1.9163968563079834, 1.1136324405670166, 0.9160677790641785, 0.7577336430549622, 0.7235613465309143, 0.7120676040649414, 0.6764127016067505, 0.7016075849533081, 0.63503497838974, 0.6213583946228027, 0.5754892826080322, 0.5671693682670593, 0.6406766772270203, 0.5822650790214539, 0.5455359220504761, 0.5318250060081482, 0.5338816046714783, 0.5245599150657654, 0.5290950536727905, 0.4988533854484558, 0.48619189858436584, 0.4848954975605011, 0.4818539619445801, 0.46939006447792053, 0.4797200858592987, 0.469313383102417, 0.4686993956565857, 0.44613996148109436, 0.44191592931747437, 0.4377351999282837, 0.4466709792613983, 0.43689021468162537, 0.42859944701194763, 0.4380309283733368, 0.4256303608417511, 0.43161705136299133, 0.4320553243160248, 0.4318128228187561, 0.42322850227355957, 0.4235891103744507, 0.41962045431137085, 0.4010228216648102, 0.41652408242225647, 0.3978406488895416, 0.40248531103134155, 0.3919248878955841, 0.42318621277809143, 0.3898267149925232, 0.38839519023895264, 0.386630117893219, 0.398253470659256, 0.3819842040538788, 0.4137248396873474, 0.3886687755584717, 0.38031741976737976, 0.36965054273605347, 0.38001444935798645, 0.3883756995201111, 0.36773282289505005, 0.36423665285110474, 0.3740588426589966, 0.37151679396629333, 0.37014704942703247, 0.36609044671058655, 0.38139310479164124, 0.36628925800323486, 0.36042049527168274, 0.3562285304069519, 0.363468736410141, 0.37133079767227173, 0.3492124378681183, 0.3517392575740814, 0.35522541403770447, 0.3542849123477936, 0.3600964844226837, 0.35493677854537964], "val_accuracy": [0.5986666679382324, 0.6326666474342346, 0.6883333325386047, 0.7243333458900452, 0.7423333525657654, 0.7286666631698608, 0.734666645526886, 0.7406666874885559, 0.7583333253860474, 0.7603333592414856, 0.7906666398048401, 0.7889999747276306, 0.7553333044052124, 0.7643333077430725, 0.7883333563804626, 0.7913333177566528, 0.8050000071525574, 0.8019999861717224, 0.7956666946411133, 0.8186666369438171, 0.8163333535194397, 0.8196666836738586, 0.812666654586792, 0.8326666951179504, 0.8376666903495789, 0.8190000057220459, 0.8236666917800903, 0.8403333425521851, 0.8433333039283752, 0.8360000252723694, 0.8360000252723694, 0.8413333296775818, 0.843999981880188, 0.8456666469573975, 0.8433333039283752, 0.8383333086967468, 0.8413333296775818, 0.8443333506584167, 0.8529999852180481, 0.8463333249092102, 0.8416666388511658, 0.8583333492279053, 0.8500000238418579, 0.8603333234786987, 0.8553333282470703, 0.8573333621025085, 0.8450000286102295, 0.8636666536331177, 0.8663333058357239, 0.8659999966621399, 0.8486666679382324, 0.8673333525657654, 0.8426666855812073, 0.859333336353302, 0.8633333444595337, 0.8696666955947876, 0.8636666536331177, 0.8583333492279053, 0.8703333139419556, 0.8666666746139526, 0.871999979019165, 0.8723333477973938, 0.8690000176429749, 0.8713333606719971, 0.8573333621025085, 0.8690000176429749, 0.8740000128746033, 0.875333309173584, 0.8713333606719971, 0.8693333268165588, 0.878000020980835, 0.875333309173584, 0.8769999742507935, 0.8740000128746033, 0.871999979019165, 0.8740000128746033]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 2, 4, 1, 3, 5, 2, 0, 1, 2, 0, 1, 2, 3, 1, 2, 0, 5, 2, 1, 4, 4, 9, 8, 4, 8, 8, 1, 5], [0, 0, 1, 0, 2, 2, 3, 0, 1, 0, 1, 1, 3, 3, 1, 0, 1, 0, 0], [0, 39, 39, 8, 59, 12, 29, 28, 80], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37], [0, 1, 0, 1], [4, 8, 5, 0], [0, 6], [0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 6, 3, 3, 4, 7, 6, 2, 0, 0], [2, 2, 0, 1, 7, 4, 6, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 29, 19, 9, 1, 0, 1, 0, 4, 2, 2, 1, 18, 10, 8, 1], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.multiply(grad, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)))), grad)))), tf.math.pow(grad, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha))))))), tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), alpha))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), beta), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), grad), grad), grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090596199035645, 2.309518814086914, 2.309687376022339, 2.3093655109405518, 2.3100876808166504, 2.310431957244873], "accuracy": [0.09589222073554993, 0.09338264167308807, 0.08902391046285629, 0.0874389111995697, 0.09153348207473755, 0.09008057415485382], "val_loss": [2.308764696121216, 2.308764696121216, 2.308764696121216, 2.308764696121216, 2.308764696121216, 2.308764696121216], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 0, 0, 1], [0, 39, 39, 7], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 1, 1, 0], [52, 37], [0, 1, 0], [1, 9], [6], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 4, 2, 1, 1, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3114521503448486, 2.3096487522125244, 2.310349464416504, 2.3087384700775146, 2.310518980026245, 2.310248374938965], "accuracy": [0.09008057415485382, 0.09060890227556229, 0.09060890227556229, 0.0948355570435524, 0.09430722147226334, 0.09034473448991776], "val_loss": [2.308732509613037, 2.308732509613037, 2.308732509613037, 2.308732509613037, 2.308732509613037, 2.308732509613037], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 3, 1, 0, 3, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 1, 3, 2], [2, 1, 1, 1, 3], [16, 37], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 8, 5, 2, 5, 1, 6, 1, 5, 4, 1, 5, 1, 0, 8], [3, 1, 0, 4, 0, 7, 3, 6], [0, 36], [1], [0, 0, 7, 1], [2, 7, 7], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 6, 5, 1, 2, 1, 1, 0, 23, 15, 8, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(tf.math.square(sigma), tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.negative(grad), tf.math.sqrt(sigma))), grad))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309414863586426, 2.30941104888916, 2.3100781440734863, 2.309298038482666, 2.3099703788757324, 2.3103864192962646], "accuracy": [0.09219389408826828, 0.09325055778026581, 0.08968432247638702, 0.09549596905708313, 0.09206181764602661, 0.08968432247638702], "val_loss": [2.307888984680176, 2.307888984680176, 2.307888984680176, 2.307888984680176, 2.307888984680176, 2.307888984680176], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]