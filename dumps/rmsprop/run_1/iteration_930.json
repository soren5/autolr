[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8137142658233643, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20939302444458, 1.591678500175476, 1.142825961112976, 0.9722864031791687, 0.8758035898208618, 0.8227811455726624, 0.8016024231910706, 0.739841103553772, 0.7015842199325562, 0.690773069858551, 0.6957025527954102, 0.658488392829895, 0.65201735496521, 0.6351231932640076, 0.6228086352348328, 0.6197044849395752, 0.5935046076774597, 0.5764780640602112, 0.5676313042640686, 0.5651755928993225, 0.5490020513534546, 0.5630760788917542, 0.532740592956543, 0.5372373461723328, 0.5184803009033203, 0.5101121664047241, 0.511387825012207, 0.49910444021224976, 0.5009346604347229, 0.5077294111251831, 0.479375422000885, 0.4809070825576782, 0.48315051198005676, 0.4711726903915405, 0.4688302278518677, 0.46196022629737854, 0.4587544798851013, 0.4447699785232544, 0.44593939185142517, 0.44330498576164246, 0.4542163610458374, 0.4331132471561432, 0.43458589911460876, 0.4239405393600464, 0.4341059625148773, 0.4265802502632141, 0.4185125529766083, 0.41781356930732727, 0.41405585408210754, 0.409540593624115, 0.4014137089252472, 0.4009265601634979, 0.3947466313838959, 0.3911694288253784, 0.4006928503513336, 0.39491403102874756, 0.38760265707969666, 0.38087666034698486, 0.38678693771362305, 0.37219929695129395, 0.36433491110801697, 0.36956867575645447, 0.37413290143013, 0.36065346002578735], "accuracy": [0.27341169118881226, 0.516180157661438, 0.6091665625572205, 0.6535464525222778, 0.6811517477035522, 0.7018887996673584, 0.7069079279899597, 0.7259278893470764, 0.7392682433128357, 0.7415136694908142, 0.7413815855979919, 0.752212405204773, 0.7567031979560852, 0.7630431652069092, 0.7683265209197998, 0.769911527633667, 0.7808743715286255, 0.7885351777076721, 0.7886672616004944, 0.7921014428138733, 0.8001585006713867, 0.7902522683143616, 0.8078193068504333, 0.8026680946350098, 0.8086118102073669, 0.8109893202781677, 0.8158763647079468, 0.8138951063156128, 0.8146876096725464, 0.8112534880638123, 0.8247259259223938, 0.8249900937080383, 0.8260467648506165, 0.8314621448516846, 0.8308017253875732, 0.830669641494751, 0.8366134166717529, 0.8385946154594421, 0.839519202709198, 0.8387266993522644, 0.8323867321014404, 0.843481719493866, 0.8392550349235535, 0.8453308939933777, 0.8444063067436218, 0.8442742228507996, 0.848368763923645, 0.8492933511734009, 0.8519350290298462, 0.8548408150672913, 0.8551049828529358, 0.8580108284950256, 0.8577466607093811, 0.8590674996376038, 0.8548408150672913, 0.8551049828529358, 0.8597279191017151, 0.8614450097084045, 0.8582749962806702, 0.8673887252807617, 0.8693699836730957, 0.867520809173584, 0.8634262084960938, 0.868049144744873], "val_loss": [1.914369821548462, 1.0749378204345703, 0.987819492816925, 0.7835847735404968, 0.7798840999603271, 0.6931471228599548, 0.654721736907959, 0.6212029457092285, 0.6534139513969421, 0.5828492045402527, 0.5950205326080322, 0.5822280049324036, 0.581686794757843, 0.5867278575897217, 0.5363125801086426, 0.5357781052589417, 0.5200773477554321, 0.5148735642433167, 0.5277434587478638, 0.5040009617805481, 0.4822012484073639, 0.4822215437889099, 0.4944564700126648, 0.48202279210090637, 0.4879671335220337, 0.47936713695526123, 0.4593484401702881, 0.4609285593032837, 0.46736258268356323, 0.45527228713035583, 0.44540539383888245, 0.4389860928058624, 0.44068652391433716, 0.434186726808548, 0.42983096837997437, 0.4240776002407074, 0.42830199003219604, 0.42452847957611084, 0.42964503169059753, 0.46296226978302, 0.41218453645706177, 0.4239571988582611, 0.409084677696228, 0.4343026578426361, 0.4261108934879303, 0.4072955846786499, 0.41909152269363403, 0.4080929458141327, 0.40015116333961487, 0.3992457687854767, 0.41386672854423523, 0.3935488760471344, 0.40469372272491455, 0.40017035603523254, 0.3862191438674927, 0.38245242834091187, 0.3843460977077484, 0.3933732211589813, 0.38039079308509827, 0.37413957715034485, 0.38234367966651917, 0.37409907579421997, 0.3822275400161743, 0.3871346116065979], "val_accuracy": [0.5806666612625122, 0.6700000166893005, 0.6470000147819519, 0.6990000009536743, 0.7196666598320007, 0.7456666827201843, 0.7506666779518127, 0.7699999809265137, 0.7416666746139526, 0.781333327293396, 0.7713333368301392, 0.7630000114440918, 0.7643333077430725, 0.7739999890327454, 0.8016666769981384, 0.7876666784286499, 0.8033333420753479, 0.8036666512489319, 0.79666668176651, 0.8083333373069763, 0.8173333406448364, 0.8183333277702332, 0.8169999718666077, 0.8216666579246521, 0.8130000233650208, 0.8106666803359985, 0.8253333568572998, 0.8266666531562805, 0.8220000267028809, 0.8366666436195374, 0.8333333134651184, 0.8366666436195374, 0.8293333053588867, 0.8416666388511658, 0.8356666564941406, 0.8366666436195374, 0.8426666855812073, 0.8423333168029785, 0.8433333039283752, 0.8296666741371155, 0.8496666550636292, 0.8450000286102295, 0.8506666421890259, 0.8463333249092102, 0.8429999947547913, 0.8516666889190674, 0.8399999737739563, 0.8479999899864197, 0.8566666841506958, 0.8523333072662354, 0.8456666469573975, 0.8576666712760925, 0.8519999980926514, 0.8576666712760925, 0.8600000143051147, 0.8650000095367432, 0.8576666712760925, 0.859666645526886, 0.8659999966621399, 0.8659999966621399, 0.8610000014305115, 0.8656666874885559, 0.8603333234786987, 0.8556666374206543]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 46, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 7, 1, 2, 3, 9, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3040075302124023, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 3, 5, 4, 7], [0, 0, 1, 0, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [3, 1, 4, 1, 0, 2], [16, 37], [0, 1, 0, 0, 1], [2, 8, 8], [0, 3], [45], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 13, 7, 6, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [6, 2, 3, 9, 3, 4], [0, 0, 1, 0, 2], [87, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [8, 1, 3, 6, 3, 3, 2], [2, 0, 5, 4, 4, 5, 3], [16, 37], [0, 1], [0], [0], [75], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 14, 7, 7, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, grad))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092942237854004, 2.30950927734375, 2.3094534873962402, 2.3102195262908936, 2.310565948486328, 2.3103108406066895], "accuracy": [0.09272222965955734, 0.09166556596755981, 0.09311848133802414, 0.08968432247638702, 0.09153348207473755, 0.09377889335155487], "val_loss": [2.3089849948883057, 2.3089849948883057, 2.3089849948883057, 2.3089849948883057, 2.3089849948883057, 2.3089849948883057], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]