[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209862470626831, 1.5964152812957764, 1.13018000125885, 0.9651092290878296, 0.851094126701355, 0.8331836462020874, 0.7603784203529358, 0.7147247791290283, 0.7168466448783875, 0.6758561134338379, 0.6519267559051514, 0.6398656964302063, 0.6285985112190247, 0.6176378726959229, 0.6163101196289062, 0.5873584747314453, 0.6043342351913452, 0.5531932711601257, 0.5527940392494202, 0.5643042922019958, 0.5492820143699646, 0.5299803018569946, 0.5250174403190613, 0.5218533873558044, 0.5226971507072449, 0.511832594871521, 0.4929327368736267, 0.5103527307510376, 0.4842390716075897, 0.4850117862224579, 0.4652847349643707, 0.4620049297809601, 0.45518967509269714, 0.4558001756668091, 0.45574021339416504, 0.4506482779979706, 0.45032674074172974, 0.45083802938461304, 0.43642333149909973, 0.44114950299263, 0.42449092864990234, 0.41629859805107117, 0.43251144886016846, 0.4114963114261627, 0.4132799208164215, 0.40263664722442627, 0.40620315074920654, 0.399714857339859, 0.3992435336112976, 0.3965509533882141, 0.39112570881843567, 0.3932991921901703, 0.3844803273677826, 0.3871079683303833, 0.3737203776836395], "accuracy": [0.2645621597766876, 0.5065380930900574, 0.6129969358444214, 0.6576409935951233, 0.6930392384529114, 0.6995112895965576, 0.722757875919342, 0.7380794882774353, 0.7305507659912109, 0.7467969655990601, 0.7544577717781067, 0.7623828053474426, 0.7613261342048645, 0.7713643908500671, 0.7725531458854675, 0.7788931727409363, 0.7724210619926453, 0.7969884872436523, 0.7948752045631409, 0.7940827012062073, 0.7979130744934082, 0.8061022162437439, 0.8053097128868103, 0.8055738806724548, 0.8062343001365662, 0.8123101592063904, 0.819442629814148, 0.8067626357078552, 0.8208954930305481, 0.8183859586715698, 0.8327829837799072, 0.829216718673706, 0.839519202709198, 0.8330471515655518, 0.8350284099578857, 0.8376700282096863, 0.8327829837799072, 0.8345000743865967, 0.8433496356010437, 0.8400475382804871, 0.8473120927810669, 0.8491612672805786, 0.8412362933158875, 0.852331280708313, 0.8457271456718445, 0.8527275323867798, 0.8449346423149109, 0.8527275323867798, 0.8521991968154907, 0.8564258217811584, 0.8603883385658264, 0.859199583530426, 0.858671247959137, 0.8598600029945374, 0.8626337051391602], "val_loss": [1.9165438413619995, 1.140592098236084, 0.9823564291000366, 0.7855687141418457, 0.747465193271637, 0.7244269251823425, 0.671704888343811, 0.6620044112205505, 0.637675940990448, 0.6588490009307861, 0.6234012246131897, 0.6129785776138306, 0.614450216293335, 0.5852954387664795, 0.5756908655166626, 0.5726354718208313, 0.5536547899246216, 0.5458627343177795, 0.6012049317359924, 0.5206868648529053, 0.5323452949523926, 0.5192405581474304, 0.5062122941017151, 0.5774492025375366, 0.5088031888008118, 0.500950276851654, 0.5309637188911438, 0.4906884729862213, 0.4855436682701111, 0.48523059487342834, 0.4822688698768616, 0.478854238986969, 0.464290052652359, 0.5010403990745544, 0.469459593296051, 0.4695650637149811, 0.4574141800403595, 0.478807657957077, 0.4650760889053345, 0.4639090597629547, 0.4495367705821991, 0.48864760994911194, 0.4439629316329956, 0.4567743241786957, 0.43109452724456787, 0.45758289098739624, 0.43721941113471985, 0.45384758710861206, 0.42878833413124084, 0.4244365096092224, 0.4238051772117615, 0.43388986587524414, 0.43653687834739685, 0.418898344039917, 0.42324844002723694], "val_accuracy": [0.5376666784286499, 0.6169999837875366, 0.640666663646698, 0.7136666774749756, 0.7276666760444641, 0.731333315372467, 0.7426666617393494, 0.7543333172798157, 0.7630000114440918, 0.7409999966621399, 0.7689999938011169, 0.7733333110809326, 0.7590000033378601, 0.7806666493415833, 0.7876666784286499, 0.7773333191871643, 0.7893333435058594, 0.8019999861717224, 0.7606666684150696, 0.8113333582878113, 0.8040000200271606, 0.8056666851043701, 0.8173333406448364, 0.7763333320617676, 0.8080000281333923, 0.8136666417121887, 0.7973333597183228, 0.8220000267028809, 0.8233333230018616, 0.8226666450500488, 0.8236666917800903, 0.8243333101272583, 0.8299999833106995, 0.8053333163261414, 0.8240000009536743, 0.8266666531562805, 0.8336666822433472, 0.8206666707992554, 0.8236666917800903, 0.8296666741371155, 0.8370000123977661, 0.8203333616256714, 0.8346666693687439, 0.8323333263397217, 0.8423333168029785, 0.8336666822433472, 0.8393333554267883, 0.8303333520889282, 0.8363333344459534, 0.8479999899864197, 0.843666672706604, 0.8450000286102295, 0.8389999866485596, 0.8463333249092102, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 1], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 5, 0, 0], [93, 37], [0, 1], [0], [4], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [12.707019805908203, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1838594675064087, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [463.468505859375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08666666597127914, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 6, 7, 8, 5, 1, 8, 5, 6], [2, 0, 4, 1, 0, 1, 0], [16, 37, 74], [0, 1], [0], [6], [0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 7, 3, 1, 7, 6, 1, 7], [7, 1, 0, 7, 4, 3, 0, 0, 2], [0, 4, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 18, 11, 7, 3, 2, 1, 1, 0, 18, 9, 9, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.sqrt(grad), alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(sigma, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 3, 8], [0, 0, 3, 0, 2, 0], [0, 39, 39, 98], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 37], [0, 0, 0, 1], [0, 4, 9], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 12, 7, 5, 1, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 83], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 11, 6, 5, 3, 9, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100855350494385, 2.3096179962158203, 2.309616804122925, 2.3091118335723877, 2.308929920196533, 2.3092963695526123], "accuracy": [0.08994849026203156, 0.08902391046285629, 0.09166556596755981, 0.09113723784685135, 0.09549596905708313, 0.09351472556591034], "val_loss": [2.308589458465576, 2.308589458465576, 2.308589458465576, 2.308589458465576, 2.308589458465576, 2.308589458465576], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]