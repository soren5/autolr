[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7985714077949524, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2107183933258057, 1.6089593172073364, 1.1627119779586792, 0.9849334359169006, 0.9327511191368103, 0.8438201546669006, 0.7952263951301575, 0.7643294930458069, 0.7469906806945801, 0.715143084526062, 0.6905035972595215, 0.6679226756095886, 0.649689793586731, 0.6488160490989685, 0.6387977600097656, 0.6271184682846069, 0.6002820730209351, 0.5953385829925537, 0.6049448251724243], "accuracy": [0.25861841440200806, 0.5001981258392334, 0.5901466012001038, 0.6485272645950317, 0.6551313996315002, 0.6946242451667786, 0.7047945857048035, 0.713908314704895, 0.719852089881897, 0.7337207794189453, 0.7412495017051697, 0.7481178045272827, 0.7559106945991516, 0.7569673657417297, 0.7644960880279541, 0.7625148296356201, 0.7773081660270691, 0.7754589915275574, 0.7708360552787781], "val_loss": [1.9166032075881958, 1.0774099826812744, 0.8685318231582642, 0.879814863204956, 0.7563917636871338, 0.6931020617485046, 0.6560510396957397, 0.6332385540008545, 0.591016411781311, 0.6141658425331116, 0.5966498851776123, 0.5701226592063904, 0.6235840320587158, 0.53106689453125, 0.5424461364746094, 0.5283027291297913, 0.535393238067627, 0.5240171551704407, 0.564268171787262], "val_accuracy": [0.5986666679382324, 0.6733333468437195, 0.6850000023841858, 0.6840000152587891, 0.715666651725769, 0.7436666488647461, 0.7636666893959045, 0.7666666507720947, 0.7760000228881836, 0.7616666555404663, 0.7519999742507935, 0.8053333163261414, 0.7586666941642761, 0.815666675567627, 0.8059999942779541, 0.8130000233650208, 0.7926666736602783, 0.8066666722297668, 0.7929999828338623]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6, 1, 5, 7, 2, 9], [0, 0, 1, 0, 2, 2, 1, 2], [0, 39, 39, 2], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 37, 90], [0, 1], [0], [2], [0], [1], [0], [7], [0]], "fitness": -0.37314286828041077, "mapping_values": [1, 20, 12, 8, 4, 12, 7, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.add(grad, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad))), alpha))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), alpha)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3969407081604004, 2.624534845352173, 2.3052327632904053, 2.269697666168213, 221075.234375, 1.799501943603129e+32, 2.31727933883667, 2.3056023120880127, 2.3033227920532227], "accuracy": [0.18663319945335388, 0.10606260597705841, 0.09430722147226334, 0.151234969496727, 0.15572579205036163, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09206181764602661], "val_loss": [4.113199710845947, 2.306648015975952, 2.29799485206604, 2.0835113525390625, 10113233453056.0, 2.3281683921813965, 2.3075015544891357, 2.303283214569092, 2.302751302719116], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10300000011920929, 0.3630000054836273, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 7, 3, 1, 7, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 0, 5, 1, 0], [16, 37], [1, 0], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [92.65242004394531, 10924.75, 184778.796875, 1292461.75, 5703652.0, 18404682.0], "accuracy": [0.10210011899471283, 0.09747721254825592, 0.09813763201236725, 0.10566636174917221, 0.09576013684272766, 0.108440101146698], "val_loss": [806.2853393554688, 39591.29296875, 420721.65625, 2286811.25, 8554714.0, 25216724.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 7, 1, 3, 0, 3, 7, 4, 2, 6, 5, 6, 5, 4, 9, 6, 9, 1, 0, 4, 5, 2, 4, 7, 4, 2, 5, 6, 8, 9, 3, 0, 3, 0, 6, 8, 4, 0, 4, 2, 4, 7, 5, 1, 1, 4, 0, 6, 1, 1, 6, 4, 0, 9, 1, 5, 2, 1, 5, 0], [0, 0, 1, 0, 2, 2, 0, 1, 0, 2, 0, 0, 1, 1, 2, 0, 1, 3, 2, 0, 1, 0, 0, 1, 2, 2, 0, 3, 2, 3, 1, 2, 1, 2, 0, 2, 2, 2, 0], [0, 39, 39, 9, 15, 19, 32, 69, 59, 18, 24, 71, 54, 78, 82, 31, 59, 3], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 4, 1, 0], [16, 79], [0, 0], [0, 9], [0], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(tf.math.divide_no_nan(grad, tf.math.square(grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.square(tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.square(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(alpha, grad)), tf.math.sqrt(grad)))), tf.math.pow(tf.math.negative(tf.math.pow(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))))))), tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad), grad), grad)), tf.math.pow(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(alpha), tf.math.add(grad, alpha)))), grad), tf.math.subtract(tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad)))), grad))), tf.math.negative(grad))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5412.2822265625, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18082155287265778, 0.10210011899471283, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [9490021376.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 103, 64, 39, 18, 4, 2, 2, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 42}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 2, 3, 1, 3, 6, 7, 5, 9, 9], [0, 0, 1, 0, 2], [0, 39, 39, 67, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1, 1], [3], [6, 4], [0], [1], [0], [2], [0]], "fitness": -0.08799999952316284, "mapping_values": [1, 15, 10, 5, 5, 7, 4, 3, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [510424248221696.0, 579345789747200.0, 565965288898560.0, 575359992987648.0, 576535203414016.0, 586697767124992.0], "accuracy": [0.10645885765552521, 0.11279883980751038, 0.11266675591468811, 0.11213842034339905, 0.11927089840173721, 0.11319508403539658], "val_loss": [480452221599744.0, 480452221599744.0, 480452221599744.0, 480452221599744.0, 480452221599744.0, 480452221599744.0], "val_accuracy": [0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765]}}]