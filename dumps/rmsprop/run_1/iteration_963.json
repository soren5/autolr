[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2092134952545166, 1.6118783950805664, 1.1523184776306152, 0.98514324426651, 0.866686999797821, 0.8570341467857361, 0.7833645343780518, 0.7567390203475952, 0.7284822463989258, 0.7063786387443542, 0.699949324131012, 0.6694126129150391, 0.6585341095924377, 0.6352274417877197, 0.6400535106658936, 0.6124601364135742, 0.6065451502799988, 0.5935065150260925, 0.5934919118881226, 0.5841140747070312, 0.5601220726966858, 0.5686430335044861, 0.5541903972625732, 0.5515403747558594, 0.5429123640060425, 0.5376783013343811, 0.5294927358627319, 0.5185149908065796, 0.5115452408790588, 0.5057201385498047, 0.49426528811454773, 0.5196812748908997, 0.4959733188152313, 0.4862672686576843, 0.4838566780090332, 0.4816925823688507, 0.47500601410865784, 0.472520649433136, 0.47090762853622437, 0.4540241062641144, 0.44987061619758606, 0.46680518984794617, 0.438549667596817, 0.45443832874298096, 0.44181787967681885, 0.42975613474845886, 0.4327937364578247, 0.42844024300575256, 0.4292393922805786, 0.4188515245914459, 0.4178597629070282, 0.4194496273994446, 0.41241535544395447, 0.4027378261089325, 0.4141120910644531, 0.40937918424606323, 0.401198148727417, 0.38961926102638245, 0.3940715193748474], "accuracy": [0.27380794286727905, 0.4955752193927765, 0.6016378402709961, 0.6499801874160767, 0.6848500967025757, 0.6888125538825989, 0.7087571024894714, 0.7191916704177856, 0.72672039270401, 0.7333245277404785, 0.7397965788841248, 0.7478536367416382, 0.7541936039924622, 0.763967752456665, 0.7629110813140869, 0.7703077793121338, 0.7778365015983582, 0.7819310426712036, 0.7751948237419128, 0.783119797706604, 0.7898560166358948, 0.7881389260292053, 0.7952714562416077, 0.7944789528846741, 0.7979130744934082, 0.7992339134216309, 0.8059701323509216, 0.8059701323509216, 0.81548011302948, 0.8129705190658569, 0.8149517774581909, 0.8082155585289001, 0.8190463781356812, 0.824329674243927, 0.8224804997444153, 0.8234050869941711, 0.819970965385437, 0.8294808864593506, 0.8274996876716614, 0.8348963260650635, 0.8323867321014404, 0.8298771381378174, 0.8354246616363525, 0.8347642421722412, 0.842028796672821, 0.8451988101005554, 0.8412362933158875, 0.8421608805656433, 0.8384625315666199, 0.8481045961380005, 0.8432175517082214, 0.8457271456718445, 0.8487650156021118, 0.8490291833877563, 0.8445383906364441, 0.8502179384231567, 0.8562937378883362, 0.8557654023170471, 0.858671247959137], "val_loss": [1.913806676864624, 1.1177194118499756, 0.9428697228431702, 0.798397958278656, 0.741521954536438, 0.7308956980705261, 0.6724229454994202, 0.645312488079071, 0.6257689595222473, 0.6060595512390137, 0.6167827248573303, 0.5666059851646423, 0.5660399794578552, 0.5858870148658752, 0.5501809120178223, 0.5410516858100891, 0.5316232442855835, 0.509000837802887, 0.5048643946647644, 0.49800655245780945, 0.5105487704277039, 0.4890314042568207, 0.5040279030799866, 0.4828830063343048, 0.49724480509757996, 0.4944477081298828, 0.463620126247406, 0.4602252244949341, 0.47041040658950806, 0.4683464467525482, 0.4567267596721649, 0.4716665744781494, 0.4449455440044403, 0.4351206123828888, 0.42664340138435364, 0.43589547276496887, 0.4395361840724945, 0.4385286569595337, 0.42673274874687195, 0.41883882880210876, 0.41661107540130615, 0.4315125644207001, 0.41305142641067505, 0.42404016852378845, 0.4065819978713989, 0.415272980928421, 0.41834017634391785, 0.4363310635089874, 0.40020719170570374, 0.42615795135498047, 0.39955008029937744, 0.3929769992828369, 0.3936464786529541, 0.39127397537231445, 0.40479716658592224, 0.4055604934692383, 0.38813716173171997, 0.3864016830921173, 0.39118990302085876], "val_accuracy": [0.5416666865348816, 0.6463333368301392, 0.6579999923706055, 0.7089999914169312, 0.7353333234786987, 0.7316666841506958, 0.7519999742507935, 0.7663333415985107, 0.7546666860580444, 0.7770000100135803, 0.7646666765213013, 0.7860000133514404, 0.784333348274231, 0.7699999809265137, 0.79666668176651, 0.7996666431427002, 0.7993333339691162, 0.8133333325386047, 0.8153333067893982, 0.8209999799728394, 0.8040000200271606, 0.8193333148956299, 0.8076666593551636, 0.8220000267028809, 0.8080000281333923, 0.8103333115577698, 0.8276666402816772, 0.8323333263397217, 0.8293333053588867, 0.8323333263397217, 0.8293333053588867, 0.8176666498184204, 0.8339999914169312, 0.8433333039283752, 0.8446666598320007, 0.8370000123977661, 0.8386666774749756, 0.8376666903495789, 0.8429999947547913, 0.8476666808128357, 0.8503333330154419, 0.8360000252723694, 0.8479999899864197, 0.843999981880188, 0.8519999980926514, 0.8443333506584167, 0.8503333330154419, 0.8376666903495789, 0.8566666841506958, 0.8379999995231628, 0.8473333120346069, 0.859000027179718, 0.8560000061988831, 0.8616666793823242, 0.8476666808128357, 0.8523333072662354, 0.8566666841506958, 0.859000027179718, 0.8569999933242798]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [3], [0], [1], [0], [5], [0]], "fitness": -0.34599998593330383, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.1917922496795654, 2.5118305683135986, 2.33137583732605, 2.2646467685699463, 2.456462860107422, 2.307432174682617], "accuracy": [0.2417117953300476, 0.18240654468536377, 0.1208558976650238, 0.17434948682785034, 0.15915995836257935, 0.10460969805717468], "val_loss": [3.5632598400115967, 2.4706413745880127, 2.2850587368011475, 2.0187764167785645, 2.3131296634674072, 2.3042030334472656], "val_accuracy": [0.3409999907016754, 0.09700000286102295, 0.14033333957195282, 0.312666654586792, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [125703257325568.0, 147392556957696.0, 151589813747712.0, 154699823054848.0, 155264409927680.0, 149331818577920.0, 152065598816256.0], "accuracy": [0.10381719470024109, 0.10447761416435242, 0.11213842034339905, 0.10236428678035736, 0.1072513535618782, 0.10408136248588562, 0.10302469879388809], "val_loss": [144060836741120.0, 147454733320192.0, 147454733320192.0, 147454733320192.0, 147454733320192.0, 147454733320192.0, 147454733320192.0], "val_accuracy": [0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 4, 7, 1, 7, 7, 7, 0, 3, 1, 3, 6, 0, 1, 2, 2, 1, 9, 9, 5, 2], [1, 0, 3, 0, 2, 0, 1, 0, 0, 2, 3, 1, 3, 0, 0, 0, 2, 3], [0, 39, 39, 29, 8, 41, 0, 36, 40, 21], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [4, 2, 0, 6, 3, 8, 2, 0, 8, 6, 2, 6, 2, 5, 0, 4, 4, 6, 4, 5, 8, 7, 6, 7, 0, 3, 3, 7, 1, 3, 0, 0, 2, 4, 5, 4, 6, 4, 6, 9, 7, 8, 2, 3, 2, 9, 8, 2, 5, 3], [2, 0, 3, 1, 4, 5, 5, 2, 3, 1, 1, 4, 0, 3, 1, 3, 4, 1, 2, 1, 0, 3, 2, 1, 5, 0, 5, 2, 1, 5, 3, 1], [16, 1, 60, 27, 58, 51], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 26, 18, 10, 82, 50, 32, 6, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.math.square(tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad)))), grad)), alpha), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad)), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(grad)), beta), tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(grad, alpha), tf.math.square(tf.math.sqrt(alpha))), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.multiply(grad, tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.add(tf.math.pow(tf.math.square(tf.math.pow(alpha, grad)), tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(alpha))), tf.math.add(tf.math.multiply(beta, alpha), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), beta)), alpha), grad))), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad)), beta), alpha)), tf.math.square(grad))), tf.math.multiply(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2, 9], [0, 0, 1, 0, 2], [0, 39, 39, 26], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 1], [0, 5, 7], [6, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 4, 2, 2, 2, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304603099822998, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09140139818191528, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]