[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8037142753601074, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110235691070557, 1.6071354150772095, 1.15023934841156, 0.9750204682350159, 0.9000819325447083, 0.8224226832389832, 0.7800436019897461, 0.7346051335334778, 0.7376216650009155, 0.7088876366615295, 0.6804301738739014, 0.6786360144615173, 0.6419035196304321, 0.6426183581352234, 0.6288807988166809, 0.6238265037536621, 0.5918653011322021, 0.5977414846420288, 0.583851158618927, 0.5789996981620789, 0.5567120313644409, 0.5621684789657593, 0.5429010987281799, 0.5437012910842896, 0.5194411873817444, 0.545253574848175, 0.5136781334877014, 0.508697509765625, 0.5137852430343628, 0.4942222833633423, 0.4988086521625519, 0.48429998755455017, 0.48426297307014465, 0.48251813650131226], "accuracy": [0.2744683623313904, 0.5046889185905457, 0.5923920273780823, 0.6507726907730103, 0.6752080321311951, 0.6964733600616455, 0.7140403985977173, 0.7268524765968323, 0.7218332886695862, 0.7339849472045898, 0.7440232634544373, 0.7490423917770386, 0.7643640041351318, 0.7584202885627747, 0.7627789974212646, 0.7671377658843994, 0.7832518815994263, 0.7803460359573364, 0.783119797706604, 0.787082314491272, 0.8004226684570312, 0.7911768555641174, 0.8005547523498535, 0.796328067779541, 0.8123101592063904, 0.7985734939575195, 0.8104609847068787, 0.8087438941001892, 0.8112534880638123, 0.8204993009567261, 0.81548011302948, 0.8210275769233704, 0.8278959393501282, 0.819970965385437], "val_loss": [1.9173649549484253, 1.095120906829834, 0.9254438281059265, 0.8265396952629089, 0.7718721628189087, 0.6769144535064697, 0.6734007000923157, 0.6277313828468323, 0.6329489350318909, 0.6023058295249939, 0.6053951382637024, 0.5590798854827881, 0.548908531665802, 0.552953839302063, 0.6131851673126221, 0.5352534055709839, 0.5369707942008972, 0.5297227501869202, 0.5312581658363342, 0.5179412961006165, 0.5040953755378723, 0.49005451798439026, 0.4970587491989136, 0.47300660610198975, 0.4889656603336334, 0.46719861030578613, 0.47093382477760315, 0.5186085104942322, 0.44741296768188477, 0.4935101866722107, 0.4493279755115509, 0.46558138728141785, 0.44306308031082153, 0.44365695118904114], "val_accuracy": [0.5400000214576721, 0.6453333497047424, 0.6683333516120911, 0.690666675567627, 0.6949999928474426, 0.7286666631698608, 0.7319999933242798, 0.7546666860580444, 0.7540000081062317, 0.765333354473114, 0.7786666750907898, 0.7803333401679993, 0.7963333129882812, 0.7799999713897705, 0.7546666860580444, 0.8006666898727417, 0.7983333468437195, 0.79666668176651, 0.8023333549499512, 0.7950000166893005, 0.8033333420753479, 0.8169999718666077, 0.8143333196640015, 0.8233333230018616, 0.8159999847412109, 0.8180000185966492, 0.8180000185966492, 0.7940000295639038, 0.8376666903495789, 0.8073333501815796, 0.8263333439826965, 0.8183333277702332, 0.8373333215713501, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 5, 4, 3, 1, 7, 1, 8, 5, 7], [2, 0, 1, 0, 2, 0, 0, 1, 2, 3, 3], [0, 39, 39, 12], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 4, 2, 4], [2, 0, 3, 1, 0, 3, 2], [72, 37], [0, 1], [5], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 14, 11, 4, 15, 8, 7, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.sqrt(grad))))))), tf.math.square(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 99, 16], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2, 8, 6, 5], [0, 0, 3, 0, 2, 2, 2], [62, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 1], [16, 37], [0, 1], [5], [6], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 17, 10, 7, 3, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(grad), grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103373050689697, 2.309785842895508, 2.308910369873047, 2.3101537227630615, 2.307666063308716, 2.308767795562744], "accuracy": [0.09179764986038208, 0.0882314071059227, 0.09430722147226334, 0.09470347315073013, 0.09311848133802414, 0.09008057415485382], "val_loss": [2.3089780807495117, 2.3089780807495117, 2.3089780807495117, 2.3089780807495117, 2.3089780807495117, 2.3089780807495117], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [98, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [1], [0], [1], [0], [2], [0]], "fitness": -0.05714285746216774, "mapping_values": [1, 11, 6, 5, 2, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.152550904928666e+16, 4.965751852315443e+16, 4.90932972594135e+16, 4.960130599118438e+16, 4.976093274570752e+16, 5.07564159706071e+16], "accuracy": [0.1014397069811821, 0.09285431355237961, 0.09496764093637466, 0.09536388516426086, 0.09311848133802414, 0.08981640636920929], "val_loss": [4.257133788082995e+16, 4.257141948520858e+16, 4.257141948520858e+16, 4.257141948520858e+16, 4.257141948520858e+16, 4.257141948520858e+16], "val_accuracy": [0.050333332270383835, 0.050333332270383835, 0.050333332270383835, 0.050333332270383835, 0.050333332270383835, 0.050333332270383835]}}]