[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7925714254379272, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115910053253174, 1.6043791770935059, 1.1458206176757812, 0.9623867273330688, 0.910987377166748, 0.825050413608551, 0.80233234167099, 0.7663874626159668, 0.7400336265563965, 0.7122606039047241, 0.6941719055175781, 0.6676062345504761, 0.6573950052261353, 0.6567073464393616, 0.6289182305335999, 0.6190914511680603, 0.6099202036857605, 0.5948147177696228, 0.6007611155509949, 0.5830738544464111, 0.5861707925796509, 0.5627202391624451], "accuracy": [0.2685246467590332, 0.5068022608757019, 0.5963544845581055, 0.653150200843811, 0.6655659675598145, 0.6929071545600891, 0.6992471218109131, 0.7111346125602722, 0.7244749665260315, 0.7339849472045898, 0.7405890822410583, 0.7514199018478394, 0.7530049085617065, 0.7537974119186401, 0.7707040309906006, 0.7670056819915771, 0.7695152759552002, 0.7778365015983582, 0.7717606425285339, 0.7814027070999146, 0.7790252566337585, 0.7942147850990295], "val_loss": [1.9169209003448486, 1.0693196058273315, 0.8647053837776184, 0.7898597121238708, 0.7304251194000244, 0.7277357578277588, 0.665417492389679, 0.652782142162323, 0.6107199192047119, 0.5937919020652771, 0.5873227715492249, 0.5512930750846863, 0.5695191025733948, 0.5339565277099609, 0.5364947319030762, 0.5526441931724548, 0.5123732089996338, 0.5191795229911804, 0.5314919352531433, 0.5165970325469971, 0.505072295665741, 0.501928448677063], "val_accuracy": [0.5056666731834412, 0.6639999747276306, 0.6943333148956299, 0.70333331823349, 0.7096666693687439, 0.7193333506584167, 0.7573333382606506, 0.7620000243186951, 0.7803333401679993, 0.7866666913032532, 0.7853333353996277, 0.7953333258628845, 0.7946666479110718, 0.8096666932106018, 0.8086666464805603, 0.7853333353996277, 0.8163333535194397, 0.8103333115577698, 0.7979999780654907, 0.8053333163261414, 0.8100000023841858, 0.8153333067893982]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 61], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 1, 6, 3, 8, 2, 6, 4, 2, 2, 6, 9, 5], [2, 4, 3, 2, 0, 4, 1, 1, 3, 2], [16, 37], [0, 1], [0], [6], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 24, 14, 10, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(grad, beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.add(grad, alpha), alpha), tf.math.divide_no_nan(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3161034752.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20591731369495392, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8460585209430016.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [4, 2, 3, 7, 3, 5, 4, 5], [0, 1, 1, 0, 2, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 9, 6, 1, 8, 2], [0, 0, 3, 1, 0], [10, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 2, 4, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.pow(grad, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034322261810303, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 5, 1, 1, 4, 2, 0, 3, 4, 4, 2, 0, 5, 2, 1, 7], [0, 0, 1, 0, 2, 2, 2, 3, 0, 1, 1, 2, 1, 1, 2, 1], [0, 39, 39, 59], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [5, 2, 6, 6, 3, 1, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 20, 16, 4, 8, 4, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.negative(tf.math.multiply(grad, grad)), tf.math.pow(grad, tf.math.pow(tf.math.add(tf.math.negative(grad), tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(alpha, grad)), alpha))), tf.math.subtract(alpha, tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [6, 2, 3, 1, 3, 5, 0, 1, 5, 4, 5, 9], [0, 2, 1, 0, 2, 3, 2], [0, 39, 96], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 19, 12, 7, 3, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.negative(tf.math.subtract(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.square(grad), grad)), grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310638904571533, 2.309058666229248, 2.309464693069458, 2.3081135749816895, 2.3096323013305664, 2.309370517730713], "accuracy": [0.09113723784685135, 0.09509972482919693, 0.09074098616838455, 0.09642054885625839, 0.09206181764602661, 0.0944393053650856], "val_loss": [2.3086864948272705, 2.3086864948272705, 2.3086864948272705, 2.3086864948272705, 2.3086864948272705, 2.3086864948272705], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]