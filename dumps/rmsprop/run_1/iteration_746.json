[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209153175354004, 1.6086610555648804, 1.141337275505066, 0.9705925583839417, 0.8738589882850647, 0.8397124409675598, 0.7818507552146912, 0.7758050560951233, 0.7505607008934021, 0.7068915367126465, 0.6789913773536682, 0.6841915249824524, 0.6525015830993652, 0.6391394734382629, 0.6248259544372559, 0.6206539273262024, 0.6109663844108582, 0.5868147015571594, 0.5746153593063354, 0.569610059261322, 0.5718731880187988, 0.5424665808677673, 0.5420007705688477, 0.5332260131835938, 0.5218672156333923, 0.502138614654541, 0.5344402194023132, 0.5019770264625549, 0.5031182765960693, 0.5013483762741089, 0.49220743775367737, 0.4789174497127533, 0.4773613512516022, 0.469238817691803, 0.46157586574554443, 0.45739397406578064, 0.4555378258228302, 0.4514177143573761, 0.44696855545043945, 0.441853404045105, 0.4357765018939972, 0.4315333962440491, 0.4394521713256836, 0.43100857734680176, 0.4116807281970978], "accuracy": [0.26443007588386536, 0.5012547969818115, 0.5997886657714844, 0.6556597352027893, 0.6845859289169312, 0.6923788189888, 0.7066437602043152, 0.7149649858474731, 0.7206445932388306, 0.739928662776947, 0.7495707273483276, 0.7457403540611267, 0.757099449634552, 0.7622507214546204, 0.7707040309906006, 0.7656848430633545, 0.7720248103141785, 0.7810064554214478, 0.7854973077774048, 0.7833839654922485, 0.7840443849563599, 0.8013472557067871, 0.7957997918128967, 0.8037247657775879, 0.8031964302062988, 0.8119139075279236, 0.8039889335632324, 0.8182538747787476, 0.8123101592063904, 0.8142913579940796, 0.8170651197433472, 0.8238013386726379, 0.8222163319587708, 0.8281601071357727, 0.8301413059234619, 0.8302733898162842, 0.8276317715644836, 0.8330471515655518, 0.8354246616363525, 0.8327829837799072, 0.8403117060661316, 0.8433496356010437, 0.8354246616363525, 0.841500461101532, 0.8426892161369324], "val_loss": [1.9206339120864868, 1.1114481687545776, 0.8706231117248535, 0.7740275263786316, 0.7838531732559204, 0.6748121380805969, 0.6641691327095032, 0.6517552137374878, 0.6289419531822205, 0.620090901851654, 0.5756282806396484, 0.6073178648948669, 0.5607566833496094, 0.5579755306243896, 0.5304192900657654, 0.5550652742385864, 0.5915910005569458, 0.5158422589302063, 0.49826565384864807, 0.5024576187133789, 0.5024937987327576, 0.5227487683296204, 0.4827668070793152, 0.4950620234012604, 0.47623246908187866, 0.5410876274108887, 0.48388808965682983, 0.4622438848018646, 0.4765971601009369, 0.463797003030777, 0.45888492465019226, 0.4525403678417206, 0.4579598009586334, 0.4381321668624878, 0.44190096855163574, 0.42826512455940247, 0.4326537251472473, 0.4242609441280365, 0.4249507784843445, 0.4179326891899109, 0.42208853363990784, 0.45377108454704285, 0.4363528788089752, 0.41851606965065, 0.41053640842437744], "val_accuracy": [0.5410000085830688, 0.6556666493415833, 0.7036666870117188, 0.7260000109672546, 0.7170000076293945, 0.7406666874885559, 0.7576666474342346, 0.7573333382606506, 0.7566666603088379, 0.7570000290870667, 0.7720000147819519, 0.7683333158493042, 0.7943333387374878, 0.7943333387374878, 0.7960000038146973, 0.7866666913032532, 0.7639999985694885, 0.8053333163261414, 0.8166666626930237, 0.8220000267028809, 0.8176666498184204, 0.8046666383743286, 0.8183333277702332, 0.812333345413208, 0.8286666870117188, 0.7950000166893005, 0.8163333535194397, 0.8336666822433472, 0.8266666531562805, 0.8289999961853027, 0.8363333344459534, 0.8373333215713501, 0.8326666951179504, 0.8413333296775818, 0.8403333425521851, 0.8476666808128357, 0.8383333086967468, 0.8500000238418579, 0.846666693687439, 0.8550000190734863, 0.8443333506584167, 0.8309999704360962, 0.8403333425521851, 0.846666693687439, 0.8483333587646484]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 9, 3, 8], [0, 0, 1, 0, 2], [0, 39, 53], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 8, 1, 6, 3, 0, 8, 7, 7, 2], [6, 3, 1, 2, 2, 4, 0, 0], [0, 50], [1], [0], [7], [0]], "fitness": -0.37371429800987244, "mapping_values": [1, 6, 4, 2, 3, 12, 7, 5, 2, 18, 10, 8, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(alpha))), tf.math.add(tf.math.add(tf.math.add(beta, beta), grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3376080989837646, 3.1829276084899902, 2.4008893966674805, 2.297736644744873, 2.3002564907073975, 2.3037972450256348, 2.3032658100128174, 2.3030970096588135, 2.3030803203582764], "accuracy": [0.19323734939098358, 0.16893409192562103, 0.13010171055793762, 0.12812046706676483, 0.1266675442457199, 0.09919429570436478, 0.09496764093637466, 0.0940430611371994, 0.09034473448991776], "val_loss": [2.2975172996520996, 2.307429075241089, 2.3079166412353516, 2.218126058578491, 2.304283618927002, 2.303028106689453, 2.302856683731079, 2.3028829097747803, 2.302736759185791], "val_accuracy": [0.1706666648387909, 0.10100000351667404, 0.09833333641290665, 0.3683333396911621, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 6, 5, 6, 4, 7, 7, 9, 7, 7, 6, 6, 9, 0, 0, 2, 0, 1, 7, 3, 4, 9], [0, 0, 1, 0, 2, 2, 3, 3, 0, 2, 2, 3, 0, 3], [0, 39, 39, 56, 66, 8, 5, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 2, 0, 6, 2, 8, 2, 8, 9], [4, 0, 3, 1, 0], [11, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 25, 14, 8, 13, 9, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(grad)), grad)), tf.math.negative(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), grad), alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 6, 5, 7, 0], [0, 2, 1, 0, 1, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 2, 2, 1, 3, 8, 2, 9, 9, 9], [2, 0, 3, 1, 0], [91, 1, 94, 54], [0, 0, 1, 1], [0, 3], [2, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 13, 10, 3, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [398521.09375, 407.32177734375, 98136.6171875, 25487454.0, 6454605824.0, 1612273287168.0, 418971207598080.0], "accuracy": [0.09919429570436478, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.835739135742188, 3773.041748046875, 964560.8125, 246924864.0, 63212765184.0, 16182467887104.0, 4142711779098624.0], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 2, 5, 1, 7, 4, 6], [0, 0, 1, 0, 2, 1, 0, 1, 2, 0], [0, 39, 39, 61, 73], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [76, 37], [0, 1], [0], [4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 10, 10, 5, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, alpha))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]