[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2078640460968018, 1.6029272079467773, 1.128765344619751, 0.9811325669288635, 0.8532941937446594, 0.8638083934783936, 0.7687200307846069, 0.7313089966773987, 0.720636248588562, 0.6942379474639893, 0.6885470747947693, 0.6625111103057861, 0.6477356553077698, 0.6399612426757812, 0.614762544631958, 0.599833607673645, 0.5925355553627014, 0.5823889970779419, 0.5628960728645325, 0.5763289928436279, 0.5617406368255615, 0.5403218865394592, 0.5479975938796997, 0.5232864618301392, 0.5193698406219482, 0.5150454640388489, 0.5059654116630554], "accuracy": [0.26865673065185547, 0.505877673625946, 0.6017699241638184, 0.6509047746658325, 0.685510516166687, 0.6876237988471985, 0.7189275026321411, 0.724739134311676, 0.7339849472045898, 0.739928662776947, 0.743891179561615, 0.7478536367416382, 0.759080708026886, 0.7635715007781982, 0.7676661014556885, 0.77677983045578, 0.7794214487075806, 0.7835160493850708, 0.7891955971717834, 0.7738739848136902, 0.791441023349762, 0.7993659973144531, 0.7980451583862305, 0.802271842956543, 0.8045172095298767, 0.8059701323509216, 0.8105930685997009], "val_loss": [1.9072608947753906, 1.0988579988479614, 0.8367082476615906, 0.806804358959198, 0.6820829510688782, 0.6717448234558105, 0.6276674866676331, 0.6624239087104797, 0.6180091500282288, 0.6183356642723083, 0.5947821736335754, 0.5480063557624817, 0.5619950294494629, 0.5380749702453613, 0.5541675090789795, 0.5317836403846741, 0.5330158472061157, 0.5016740560531616, 0.5151180624961853, 0.5108897089958191, 0.48799198865890503, 0.47734373807907104, 0.49165764451026917, 0.4898574948310852, 0.47738882899284363, 0.4826514422893524, 0.4767598509788513], "val_accuracy": [0.5786666870117188, 0.6416666507720947, 0.7103333473205566, 0.7059999704360962, 0.7419999837875366, 0.7566666603088379, 0.765999972820282, 0.7429999709129333, 0.7670000195503235, 0.7683333158493042, 0.7663333415985107, 0.7986666560173035, 0.7799999713897705, 0.8006666898727417, 0.7946666479110718, 0.8003333210945129, 0.7993333339691162, 0.8106666803359985, 0.8063333630561829, 0.8080000281333923, 0.8223333358764648, 0.831333339214325, 0.8199999928474426, 0.8069999814033508, 0.8286666870117188, 0.8276666402816772, 0.8213333487510681]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 2], [16, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 1], [0, 5, 3], [6, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 0], [0, 0, 1, 0, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 1, 6, 3, 8, 2, 3, 4, 1, 6, 4, 5, 4, 3, 9, 3, 8, 5, 3], [5, 5, 3, 1, 0, 0, 4, 0, 3, 5, 2, 5, 5, 0], [16, 1, 67, 76, 68], [1, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 34, 20, 14, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), grad), tf.math.add(tf.math.multiply(grad, alpha), tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.square(grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(grad, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(beta, tf.math.sqrt(grad))), tf.math.square(tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 0, 3, 2, 1, 4, 5, 5, 0, 4, 7, 1, 0, 7, 8, 7, 2, 8, 6, 6, 7, 2, 2, 2, 7, 0, 2, 3, 0, 7, 4, 7, 8, 5, 0, 0, 2, 0], [1, 0, 1, 0, 3, 2, 3, 1, 1, 2, 0, 0, 3, 2, 1, 1, 2, 0, 1, 0, 1, 3, 3, 2, 3, 3, 1], [60, 39, 39, 81, 97, 51], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [7], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 68, 41, 27, 6, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(alpha, tf.math.square(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.negative(grad)))), grad), tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.add(tf.math.pow(alpha, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha)), grad)), grad))), grad), tf.math.sqrt(tf.math.square(grad))), tf.math.negative(tf.math.negative(tf.math.add(grad, tf.math.negative(alpha)))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092246055603027, 2.310286283493042, 2.310934066772461, 2.3105809688568115, 2.3091795444488525, 2.31040358543396], "accuracy": [0.09272222965955734, 0.09113723784685135, 0.08994849026203156, 0.08532558381557465, 0.09496764093637466, 0.09140139818191528], "val_loss": [2.308455467224121, 2.308455467224121, 2.308455467224121, 2.308455467224121, 2.308455467224121, 2.308455467224121], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 8, 1, 3, 0], [0, 0, 1, 1, 2], [0, 39, 73], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099358081817627, 2.3096508979797363, 2.3094756603240967, 2.3089089393615723, 2.3085131645202637, 2.3093624114990234], "accuracy": [0.09298639744520187, 0.09391097724437714, 0.09245806187391281, 0.09351472556591034, 0.09232597798109055, 0.09338264167308807], "val_loss": [2.308865785598755, 2.308865785598755, 2.308865785598755, 2.308865785598755, 2.308865785598755, 2.308865785598755], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]