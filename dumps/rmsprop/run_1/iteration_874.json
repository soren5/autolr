[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207160472869873, 1.5915136337280273, 1.1473944187164307, 0.9592254757881165, 0.8851748108863831, 0.8299905061721802, 0.7826229929924011, 0.7693352699279785, 0.7300797700881958, 0.698128879070282, 0.6896708607673645, 0.6699497103691101, 0.6513838171958923, 0.6370819211006165, 0.6226481795310974, 0.593509316444397, 0.6117557287216187, 0.6018662452697754, 0.5647481083869934, 0.5712801814079285, 0.5789617896080017, 0.5496065616607666, 0.563538670539856, 0.523305356502533, 0.539557695388794, 0.5224322080612183, 0.5052593946456909, 0.5194329023361206, 0.501852810382843], "accuracy": [0.2670717239379883, 0.5120856165885925, 0.5980715751647949, 0.6565843224525452, 0.6775855422019958, 0.6942279934883118, 0.71100252866745, 0.7096816897392273, 0.7306828498840332, 0.7420420050621033, 0.7454761862754822, 0.752740740776062, 0.7586844563484192, 0.7658169269561768, 0.7675340175628662, 0.780610203742981, 0.7712323069572449, 0.7799497842788696, 0.7930260300636292, 0.7921014428138733, 0.7865539789199829, 0.7993659973144531, 0.7906485199928284, 0.8083476424217224, 0.8009510040283203, 0.8099326491355896, 0.811649739742279, 0.8087438941001892, 0.8112534880638123], "val_loss": [1.912479043006897, 1.0975511074066162, 0.8969278335571289, 0.8088240623474121, 0.7945413589477539, 0.7160059213638306, 0.6699060797691345, 0.6661472916603088, 0.6474520564079285, 0.6328529715538025, 0.6089773774147034, 0.5772022008895874, 0.5710577964782715, 0.5859133005142212, 0.549781322479248, 0.556280255317688, 0.5400293469429016, 0.5253018140792847, 0.5201928019523621, 0.5671415328979492, 0.5245677828788757, 0.5224559903144836, 0.49116405844688416, 0.4835716187953949, 0.5074654817581177, 0.4775453805923462, 0.4984799921512604, 0.47669145464897156, 0.46791309118270874], "val_accuracy": [0.5726666450500488, 0.6423333287239075, 0.6626666784286499, 0.6959999799728394, 0.6893333196640015, 0.7196666598320007, 0.7390000224113464, 0.7390000224113464, 0.7516666650772095, 0.7429999709129333, 0.7689999938011169, 0.7799999713897705, 0.7796666622161865, 0.7710000276565552, 0.784333348274231, 0.7943333387374878, 0.7913333177566528, 0.7956666946411133, 0.8016666769981384, 0.7743333578109741, 0.7946666479110718, 0.7993333339691162, 0.809333324432373, 0.8149999976158142, 0.8040000200271606, 0.8109999895095825, 0.8003333210945129, 0.8136666417121887, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [4, 2, 3, 6, 3, 7, 4, 1, 6], [0, 0, 1, 0, 2, 3, 0, 1, 1, 0], [0, 62, 39, 34, 88], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 9, 10, 5, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), grad), tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, alpha))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 61, 43], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 0, 3, 1, 0], [52, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309659242630005, 2.310302972793579, 2.3114418983459473, 2.310373067855835, 2.309933662414551, 2.3102827072143555], "accuracy": [0.09747721254825592, 0.09417514503002167, 0.0948355570435524, 0.09140139818191528, 0.09298639744520187, 0.09259014576673508], "val_loss": [2.309140920639038, 2.309140920639038, 2.309140920639038, 2.309140920639038, 2.309140920639038, 2.309140920639038], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 2, 3, 1, 0], [0, 37], [1, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309211015701294, 2.309711456298828, 2.309638023376465, 2.3110992908477783, 2.30955171585083, 2.310680866241455], "accuracy": [0.09060890227556229, 0.09192973375320435, 0.08889182657003403, 0.09087307006120682, 0.09509972482919693, 0.09113723784685135], "val_loss": [2.309507131576538, 2.309507131576538, 2.309507131576538, 2.309507131576538, 2.309507131576538, 2.309507131576538], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 3, 2, 4, 3, 5, 7, 6, 0, 2, 7, 6, 0, 0, 3, 8, 2, 9], [2, 0, 3, 4, 0, 1, 2, 1, 1, 5, 3, 3, 3, 2, 4], [16, 37, 99], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 7, 3, 4, 4], [0, 4, 0, 2, 3], [0, 71]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 39, 24, 15, 3, 2, 1, 1, 1, 10, 5, 5, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.divide_no_nan(alpha, tf.math.negative(grad)))), tf.math.negative(tf.math.multiply(grad, grad))), tf.math.sqrt(tf.math.add(grad, beta))))), tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), beta)), sigma))", "other_info": {"loss": [2.3098411560058594, 2.3095157146453857, 2.310530424118042, 2.3109169006347656, 2.309063673019409, 2.3101634979248047], "accuracy": [0.09549596905708313, 0.09576013684272766, 0.09140139818191528, 0.08677849918603897, 0.09021265059709549, 0.09417514503002167], "val_loss": [2.3087375164031982, 2.3087375164031982, 2.3087375164031982, 2.3087375164031982, 2.3087375164031982, 2.3087375164031982], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]