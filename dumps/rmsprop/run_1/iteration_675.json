[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8088571429252625, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210752248764038, 1.6001394987106323, 1.1398541927337646, 0.9617486000061035, 0.8738431930541992, 0.8330667018890381, 0.811635434627533, 0.7368098497390747, 0.7201089262962341, 0.7024244070053101, 0.7009062767028809, 0.6518455147743225, 0.6591920852661133, 0.642392098903656, 0.6265700459480286, 0.610849916934967, 0.601692259311676, 0.5916364789009094, 0.5899447202682495, 0.5772865414619446, 0.5619814991950989, 0.5493541359901428, 0.5447266697883606, 0.542683482170105, 0.5369632840156555, 0.544457733631134], "accuracy": [0.2744683623313904, 0.5017831325531006, 0.6008453369140625, 0.6601505875587463, 0.6844538450241089, 0.6933034062385559, 0.6975300312042236, 0.7280412316322327, 0.7325320243835449, 0.739928662776947, 0.7366266250610352, 0.7619865536689758, 0.750759482383728, 0.7544577717781067, 0.7648923397064209, 0.7746664881706238, 0.7724210619926453, 0.7794214487075806, 0.7766477465629578, 0.7840443849563599, 0.7907806038856506, 0.7918372750282288, 0.802800178527832, 0.7972526550292969, 0.8016114234924316, 0.7973847389221191], "val_loss": [1.9187418222427368, 1.1164155006408691, 0.8807159662246704, 0.8203458786010742, 0.7242640256881714, 0.6777976155281067, 0.6704809069633484, 0.6234232187271118, 0.6076158285140991, 0.5882463455200195, 0.5964370965957642, 0.5806323885917664, 0.5722509622573853, 0.549121081829071, 0.5394172072410583, 0.5315966010093689, 0.5375938415527344, 0.510402500629425, 0.5299943089485168, 0.5498569011688232, 0.4925359785556793, 0.4973919987678528, 0.48272451758384705, 0.494985967874527, 0.48294222354888916, 0.47562557458877563], "val_accuracy": [0.5109999775886536, 0.6516666412353516, 0.6943333148956299, 0.6746666431427002, 0.7276666760444641, 0.7483333349227905, 0.7446666955947876, 0.7786666750907898, 0.777999997138977, 0.7856666445732117, 0.7829999923706055, 0.7806666493415833, 0.7846666574478149, 0.8013333082199097, 0.8040000200271606, 0.7956666946411133, 0.79666668176651, 0.8133333325386047, 0.8096666932106018, 0.7983333468437195, 0.8243333101272583, 0.812333345413208, 0.8209999799728394, 0.8220000267028809, 0.8223333358764648, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [7, 2, 3, 1, 3, 5, 5], [0, 2, 1, 1, 1, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 9, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 1, 7, 5, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, tf.math.square(alpha))), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033745288848877, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [6, 2, 3, 1, 3, 5, 1, 2, 1, 3, 9], [0, 0, 1, 0, 2, 0, 1, 1, 3], [0, 39, 39, 93, 6], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 0], [60, 37], [1, 1], [0], [6], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 5, 9, 5, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.subtract(tf.math.multiply(alpha, grad), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [102.32659912109375, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17910447716712952, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [69284.234375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 6, 6, 3, 8, 2, 7, 4, 7, 0, 3, 2, 2, 4, 3, 6, 6, 1, 9, 8, 6, 0, 0, 8, 8, 8, 1, 3, 9, 5, 5, 5, 6, 5, 3, 7, 9], [2, 0, 3, 1, 0, 2, 1, 1, 0, 4, 3, 5, 2, 0, 0, 4, 0, 0, 2, 1], [16, 37, 7, 34, 53, 78, 12, 20, 43, 14], [1, 1], [1], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 58, 38, 20, 10, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(alpha)), tf.math.multiply(alpha, tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.pow(grad, grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta))))))))))), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha))))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 92, 39], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 2, 0], [16, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310699701309204, 2.3104279041290283, 2.3113255500793457, 2.309086799621582, 2.309765577316284, 2.3097333908081055], "accuracy": [0.09298639744520187, 0.09615638852119446, 0.08717474341392517, 0.09298639744520187, 0.09034473448991776, 0.09470347315073013], "val_loss": [2.3081016540527344, 2.3081016540527344, 2.3081016540527344, 2.3081016540527344, 2.3081016540527344, 2.3081016540527344], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]