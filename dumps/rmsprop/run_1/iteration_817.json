[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8168571591377258, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099545001983643, 1.596365213394165, 1.157929539680481, 0.9650326371192932, 0.8919065594673157, 0.8209995031356812, 0.8063284754753113, 0.7555657625198364, 0.7323032021522522, 0.7108306288719177, 0.6892023682594299, 0.686843752861023, 0.6429196000099182, 0.6372777223587036, 0.6237727999687195, 0.6074153780937195, 0.6277559399604797, 0.59419184923172, 0.5920315384864807, 0.5948776602745056, 0.5671248435974121, 0.5589898824691772, 0.5580635666847229, 0.537385880947113, 0.5323439836502075, 0.5259808897972107, 0.5179392695426941, 0.5179579854011536, 0.5143650770187378, 0.4984021782875061, 0.5006382465362549, 0.49298426508903503, 0.4800112545490265, 0.47572624683380127, 0.4660462737083435, 0.47667840123176575, 0.4616750180721283, 0.4583589434623718, 0.4556182026863098, 0.4502251446247101, 0.4484039843082428, 0.44058188796043396, 0.4432488977909088, 0.4434679448604584, 0.42749109864234924, 0.42507433891296387, 0.4207891821861267, 0.4206860065460205, 0.4136216938495636, 0.41529080271720886, 0.4133315086364746, 0.40685632824897766, 0.4008697271347046], "accuracy": [0.26826047897338867, 0.5066701769828796, 0.5941091179847717, 0.651168942451477, 0.6737551093101501, 0.693831741809845, 0.7016246318817139, 0.7154933214187622, 0.7260599732398987, 0.7294940948486328, 0.7382115721702576, 0.7397965788841248, 0.7560427784919739, 0.7613261342048645, 0.7696473598480225, 0.7741381525993347, 0.7651565074920654, 0.7781006693840027, 0.7759873270988464, 0.7763835787773132, 0.7890635132789612, 0.7873464822769165, 0.793422281742096, 0.8020076751708984, 0.8039889335632324, 0.8013472557067871, 0.8105930685997009, 0.809140145778656, 0.813498854637146, 0.8150838613510132, 0.8145555257797241, 0.8156121969223022, 0.8234050869941711, 0.8255184292793274, 0.8277638554573059, 0.8235371708869934, 0.8338396549224854, 0.8333113193511963, 0.8341038227081299, 0.8338396549224854, 0.8372738361358643, 0.8441421389579773, 0.837141752243042, 0.8356888294219971, 0.8470479249954224, 0.847840428352356, 0.8465195894241333, 0.8515387773513794, 0.8502179384231567, 0.8457271456718445, 0.8471800088882446, 0.850350022315979, 0.8539162874221802], "val_loss": [1.918734073638916, 1.0857824087142944, 0.8874498009681702, 0.8364782929420471, 0.7277863621711731, 0.7178295850753784, 0.6899706125259399, 0.6331380605697632, 0.6337924003601074, 0.65630704164505, 0.6119925379753113, 0.5640032291412354, 0.5729377269744873, 0.5599787831306458, 0.5469154715538025, 0.5295572876930237, 0.5392634868621826, 0.5185995101928711, 0.5159968137741089, 0.5116419196128845, 0.5079795718193054, 0.5274214148521423, 0.4938378632068634, 0.5008831024169922, 0.4863835573196411, 0.524819552898407, 0.4716678857803345, 0.46453869342803955, 0.4654236137866974, 0.45623522996902466, 0.46463003754615784, 0.4475862681865692, 0.4503426253795624, 0.4834904074668884, 0.4375317692756653, 0.4447883665561676, 0.44563013315200806, 0.44152265787124634, 0.4264642596244812, 0.4447227418422699, 0.45234715938568115, 0.4451062083244324, 0.41976189613342285, 0.41773927211761475, 0.43261173367500305, 0.4131832420825958, 0.42068246006965637, 0.4080432951450348, 0.408596932888031, 0.4107666015625, 0.41834545135498047, 0.4167124032974243, 0.41047200560569763], "val_accuracy": [0.6073333621025085, 0.6536666750907898, 0.6933333277702332, 0.699999988079071, 0.7256666421890259, 0.7400000095367432, 0.7323333621025085, 0.7670000195503235, 0.7643333077430725, 0.7400000095367432, 0.7683333158493042, 0.8069999814033508, 0.7933333516120911, 0.7976666688919067, 0.7990000247955322, 0.8103333115577698, 0.8029999732971191, 0.8153333067893982, 0.8109999895095825, 0.8263333439826965, 0.8223333358764648, 0.8083333373069763, 0.8266666531562805, 0.8176666498184204, 0.8306666612625122, 0.7879999876022339, 0.8393333554267883, 0.8379999995231628, 0.8386666774749756, 0.8429999947547913, 0.8389999866485596, 0.8423333168029785, 0.8410000205039978, 0.8246666789054871, 0.8513333201408386, 0.843666672706604, 0.843999981880188, 0.8443333506584167, 0.8516666889190674, 0.8453333377838135, 0.8379999995231628, 0.8450000286102295, 0.8519999980926514, 0.8516666889190674, 0.8519999980926514, 0.859333336353302, 0.8536666631698608, 0.8633333444595337, 0.859000027179718, 0.8543333411216736, 0.8526666760444641, 0.8600000143051147, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 7, 3, 1, 3, 5, 9, 4, 5, 7], [2, 0, 0, 0, 2, 2], [0, 39, 39, 18], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 0, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10657142847776413, "mapping_values": [1, 16, 10, 6, 4, 8, 5, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.square(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [70862556364800.0, 84750148567040.0, 84305787224064.0, 83780031217664.0, 84836198907904.0, 83646283251712.0], "accuracy": [0.10685510188341141, 0.10606260597705841, 0.0952318087220192, 0.10896842926740646, 0.09496764093637466, 0.10355303436517715], "val_loss": [61688959205376.0, 61688971788288.0, 61688971788288.0, 61688971788288.0, 61688971788288.0, 61688971788288.0], "val_accuracy": [0.11266666650772095, 0.11266666650772095, 0.11266666650772095, 0.11266666650772095, 0.11266666650772095, 0.11266666650772095]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 2, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 0], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [7.518117904663086, 58.78750991821289, 202.02288818359375, 497.7904968261719, 997.3552856445312, 1794.23828125], "accuracy": [0.09747721254825592, 0.09642054885625839, 0.09945846349000931, 0.09668471664190292, 0.1010434553027153, 0.09985470771789551], "val_loss": [20.268632888793945, 94.50653839111328, 261.30316162109375, 568.455322265625, 1063.6502685546875, 1795.0177001953125], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 3, 1, 8], [0, 0, 3, 0, 2, 3, 0], [0, 39, 39, 78], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(grad, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303785800933838, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 2], [0, 0, 1, 0, 2, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [8, 2, 0, 6, 4, 4, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 4], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 12, 6, 6, 3, 2, 1, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309112548828125, 2.3103480339050293, 2.309330463409424, 2.3106610774993896, 2.310354471206665, 2.309455633163452], "accuracy": [0.09642054885625839, 0.09325055778026581, 0.09126931428909302, 0.09272222965955734, 0.09126931428909302, 0.09628847241401672], "val_loss": [2.30796480178833, 2.30796480178833, 2.30796480178833, 2.30796480178833, 2.30796480178833, 2.30796480178833], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]