[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8285714387893677, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2057316303253174, 1.6017134189605713, 1.1547520160675049, 0.9722856283187866, 0.8810402750968933, 0.8526538610458374, 0.7871696352958679, 0.774318277835846, 0.75546795129776, 0.728793740272522, 0.7052712440490723, 0.6818730235099792, 0.6575334668159485, 0.6676456332206726, 0.6435651779174805, 0.6225630044937134, 0.6125612258911133, 0.6152588725090027, 0.5897109508514404, 0.5861673355102539, 0.576097846031189, 0.5573338866233826, 0.5542624592781067, 0.5612059235572815, 0.5378592014312744, 0.5363407135009766, 0.5239764451980591, 0.5073443651199341, 0.5123986005783081, 0.5078858733177185], "accuracy": [0.2719587981700897, 0.5004622936248779, 0.5964865684509277, 0.6544709801673889, 0.6763967871665955, 0.6888125538825989, 0.7176066637039185, 0.7174745798110962, 0.7214370369911194, 0.7367587089538574, 0.7421740889549255, 0.7493065595626831, 0.7559106945991516, 0.7495707273483276, 0.76106196641922, 0.767930269241333, 0.778761088848114, 0.7721568942070007, 0.7840443849563599, 0.785101056098938, 0.7918372750282288, 0.7944789528846741, 0.7969884872436523, 0.7950072884559631, 0.802271842956543, 0.8057059645652771, 0.8076872229576111, 0.8150838613510132, 0.8124422430992126, 0.8127063512802124], "val_loss": [1.9090754985809326, 1.1505415439605713, 0.846228837966919, 0.7920719385147095, 0.7875275611877441, 0.7013676762580872, 0.6667308807373047, 0.6817411184310913, 0.607862114906311, 0.622621476650238, 0.6290727257728577, 0.5502840876579285, 0.5513154864311218, 0.5804488658905029, 0.5465966463088989, 0.5271866321563721, 0.5616036653518677, 0.5202064514160156, 0.49222907423973083, 0.5105579495429993, 0.482077419757843, 0.5056900382041931, 0.46670517325401306, 0.46384894847869873, 0.4563817083835602, 0.45643916726112366, 0.4671163260936737, 0.4451344311237335, 0.4519360363483429, 0.44266602396965027], "val_accuracy": [0.5213333368301392, 0.6196666955947876, 0.7026666402816772, 0.7009999752044678, 0.7086666822433472, 0.7413333058357239, 0.7486666440963745, 0.7493333220481873, 0.777999997138977, 0.7703333497047424, 0.7710000276565552, 0.7986666560173035, 0.7933333516120911, 0.765999972820282, 0.79666668176651, 0.8103333115577698, 0.7833333611488342, 0.8173333406448364, 0.8193333148956299, 0.8053333163261414, 0.8233333230018616, 0.7956666946411133, 0.8253333568572998, 0.8263333439826965, 0.8346666693687439, 0.8276666402816772, 0.8206666707992554, 0.8323333263397217, 0.8236666917800903, 0.8293333053588867]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 7, 3, 5, 6, 0], [0, 0, 2, 0, 2, 0], [0, 39, 41, 71], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 4, 8, 2], [2, 4, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 0, 1, 1], [0, 2, 0], [2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 2, 1, 1, 0, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09074098616838455, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 7, 4, 3, 8, 2], [2, 0, 3, 1, 0, 0], [16, 37, 23], [1, 1], [0], [7], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 7, 6, 3, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0, 0], [16, 37, 88], [1, 1], [0], [7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 13, 7, 6, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(grad, alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3192741870880127, 2.403423309326172, 2.5906338691711426, 2.8092830181121826, 2.897573947906494, 2.884385347366333], "accuracy": [0.09298639744520187, 0.09734513610601425, 0.10170386731624603, 0.09985470771789551, 0.10896842926740646, 0.10408136248588562], "val_loss": [2.317967414855957, 2.379183530807495, 2.4724655151367188, 2.5234150886535645, 2.5089616775512695, 2.459230422973633], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 1, 3, 8], [0, 1, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 4, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310471296310425, 2.310880184173584, 2.3107616901397705, 2.3099493980407715, 2.309422016143799, 2.3092968463897705], "accuracy": [0.09140139818191528, 0.08849557489156723, 0.09219389408826828, 0.09060890227556229, 0.09113723784685135, 0.09047681838274002], "val_loss": [2.308147668838501, 2.308147668838501, 2.308147668838501, 2.308147668838501, 2.308147668838501, 2.308147668838501], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]