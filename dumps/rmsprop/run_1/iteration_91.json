[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110331058502197, 1.6076029539108276, 1.1493566036224365, 0.9706375002861023, 0.890129566192627, 0.8016628623008728, 0.793454110622406, 0.7523781657218933, 0.7131487131118774, 0.7354975938796997, 0.689339816570282, 0.6646913886070251, 0.6427982449531555, 0.630142092704773, 0.6302531361579895, 0.598473310470581, 0.5896559357643127, 0.5880947113037109, 0.5776301026344299, 0.5521304607391357, 0.5532500147819519, 0.5399528741836548, 0.5418445467948914, 0.5228922963142395, 0.5201628804206848, 0.5045881271362305, 0.4977605938911438, 0.5012038350105286, 0.487174391746521, 0.4886949956417084, 0.48650062084198, 0.4808444380760193], "accuracy": [0.25637298822402954, 0.5052172541618347, 0.5988640785217285, 0.6456214785575867, 0.6761326193809509, 0.7053229212760925, 0.7059833407402039, 0.720380425453186, 0.7327961921691895, 0.7202483415603638, 0.744419515132904, 0.7490423917770386, 0.7606657147407532, 0.7656848430633545, 0.7622507214546204, 0.7761194109916687, 0.7775723338127136, 0.7763835787773132, 0.7873464822769165, 0.793422281742096, 0.789988100528717, 0.798309326171875, 0.802271842956543, 0.8061022162437439, 0.8079513907432556, 0.8120459914207458, 0.8183859586715698, 0.8153480291366577, 0.8185180425643921, 0.8206313848495483, 0.8219521641731262, 0.8198388814926147], "val_loss": [1.9181149005889893, 1.082323431968689, 0.8378527164459229, 0.7927475571632385, 0.6877157092094421, 0.6900968551635742, 0.6750583648681641, 0.5915910005569458, 0.5937062501907349, 0.5662531852722168, 0.5989684462547302, 0.5512641072273254, 0.5426523685455322, 0.5375360250473022, 0.523119330406189, 0.5039708614349365, 0.5020831227302551, 0.5016560554504395, 0.479407399892807, 0.4845593273639679, 0.46756258606910706, 0.48750045895576477, 0.449930340051651, 0.4420549273490906, 0.4558388590812683, 0.42998167872428894, 0.4301708936691284, 0.428853839635849, 0.4769546389579773, 0.44735828042030334, 0.43374136090278625, 0.42510631680488586], "val_accuracy": [0.5789999961853027, 0.6629999876022339, 0.6966666579246521, 0.7089999914169312, 0.7476666569709778, 0.7390000224113464, 0.7546666860580444, 0.7760000228881836, 0.778333306312561, 0.781333327293396, 0.7696666717529297, 0.7913333177566528, 0.7943333387374878, 0.7973333597183228, 0.8019999861717224, 0.800000011920929, 0.8043333292007446, 0.8113333582878113, 0.812666654586792, 0.8163333535194397, 0.8253333568572998, 0.8109999895095825, 0.8296666741371155, 0.8349999785423279, 0.8256666660308838, 0.8393333554267883, 0.8420000076293945, 0.8413333296775818, 0.8233333230018616, 0.8323333263397217, 0.8303333520889282, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [58, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2, 7, 3, 9], [2, 0, 3, 1, 0, 1], [16, 1, 26], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.6622856855392456, "mapping_values": [1, 11, 6, 5, 2, 16, 10, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.217055559158325, 1.8350363969802856, 1.6162629127502441, 1.5803841352462769, 1.5809388160705566, 1.5811238288879395, 1.579239010810852, 1.5833884477615356, 1.5839167833328247], "accuracy": [0.2661471366882324, 0.4780081808567047, 0.5391625761985779, 0.5525029897689819, 0.5464271306991577, 0.5489367246627808, 0.5431250929832458, 0.5411438345909119, 0.5432571768760681], "val_loss": [1.991672396659851, 1.5886706113815308, 1.5141197443008423, 1.507062315940857, 1.5064622163772583, 1.506411075592041, 1.5064072608947754, 1.5064070224761963, 1.5064070224761963], "val_accuracy": [0.5339999794960022, 0.6570000052452087, 0.6626666784286499, 0.6639999747276306, 0.6639999747276306, 0.6639999747276306, 0.6639999747276306, 0.6639999747276306, 0.6639999747276306]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 6, 3, 5], [3, 1, 1, 1, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 2, 0, 6, 3, 8, 2, 4, 3, 9, 4, 7, 7, 5, 4, 3, 5, 0, 6, 2, 4, 0], [3, 0, 4, 1, 0, 0, 3, 0, 3, 1, 5, 2, 4, 3, 3], [16, 1, 43, 98, 19], [0, 0, 0, 1, 1, 0], [0, 4, 4, 9], [0, 1], [0, 19], [0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 7, 3], [2, 7, 6, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 37, 22, 15, 5, 6, 4, 2, 2, 9, 5, 4, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.add(tf.math.square(tf.math.pow(tf.math.multiply(grad, tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad)), alpha), tf.math.negative(tf.math.divide_no_nan(grad, beta))), tf.math.add(grad, tf.math.pow(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.multiply(beta, grad), grad), tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 2, 2], [0, 39, 27], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 6], [2, 0, 3, 2, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [3], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.309540033340454, 2.3088700771331787, 2.3106675148010254, 2.310680389404297, 2.3102378845214844, 2.3101816177368164], "accuracy": [0.0948355570435524, 0.09338264167308807, 0.09377889335155487, 0.09140139818191528, 0.08902391046285629, 0.08902391046285629], "val_loss": [2.308312177658081, 2.308312177658081, 2.308312177658081, 2.308312177658081, 2.308312177658081, 2.308312177658081], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]