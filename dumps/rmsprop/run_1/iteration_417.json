[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.805142879486084, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21106219291687, 1.6061309576034546, 1.143157958984375, 0.9736983776092529, 0.8906147480010986, 0.8183024525642395, 0.7992202043533325, 0.7694714069366455, 0.7272903323173523, 0.6937516927719116, 0.7102075815200806, 0.6786119937896729, 0.6488900780677795, 0.6438377499580383, 0.6203061938285828, 0.6186460852622986, 0.6103830933570862, 0.5992944240570068, 0.5751293897628784, 0.5908582806587219, 0.5585688352584839, 0.560775876045227, 0.5499928593635559, 0.5379710793495178, 0.5430489778518677, 0.5391750335693359, 0.5210925936698914, 0.5143585205078125, 0.5111721754074097, 0.5215416550636292, 0.4919847548007965, 0.5055127739906311, 0.49321597814559937, 0.4803803563117981, 0.48964884877204895, 0.4740212857723236, 0.4710102677345276, 0.4675544500350952, 0.45529672503471375, 0.4556485116481781, 0.44997674226760864, 0.44745346903800964, 0.44696810841560364, 0.4441000819206238, 0.4335828423500061, 0.4322488009929657, 0.4231931269168854, 0.41865310072898865, 0.4225620627403259], "accuracy": [0.2709021270275116, 0.5041606426239014, 0.6037511825561523, 0.6536785364151001, 0.681547999382019, 0.7042662501335144, 0.7058512568473816, 0.715889573097229, 0.7302865982055664, 0.7420420050621033, 0.7357020378112793, 0.7481178045272827, 0.7593448758125305, 0.763439416885376, 0.7717606425285339, 0.7695152759552002, 0.7750627398490906, 0.7734777331352234, 0.7865539789199829, 0.785101056098938, 0.7968564033508301, 0.7909126877784729, 0.7954035401344299, 0.8021397590637207, 0.7994980812072754, 0.8025360107421875, 0.8059701323509216, 0.8087438941001892, 0.8145555257797241, 0.809140145778656, 0.8166688680648804, 0.8156121969223022, 0.816008448600769, 0.8265751004219055, 0.8168009519577026, 0.826310932636261, 0.8314621448516846, 0.828820526599884, 0.8300092220306396, 0.8314621448516846, 0.8374059200286865, 0.8335754871368408, 0.8348963260650635, 0.8366134166717529, 0.8429533839225769, 0.843481719493866, 0.8457271456718445, 0.8462554216384888, 0.8426892161369324], "val_loss": [1.9239407777786255, 1.1122515201568604, 0.950545072555542, 0.8328431248664856, 0.7669248580932617, 0.7237755656242371, 0.6921788454055786, 0.6490738391876221, 0.6255332827568054, 0.6331366300582886, 0.615159809589386, 0.6014594435691833, 0.6189621686935425, 0.5713017582893372, 0.5845820903778076, 0.5664811730384827, 0.5480945706367493, 0.5349452495574951, 0.530053436756134, 0.526789665222168, 0.5170842409133911, 0.531135082244873, 0.5210667848587036, 0.5179318189620972, 0.49428895115852356, 0.48906731605529785, 0.5152158737182617, 0.488398939371109, 0.546622633934021, 0.48452576994895935, 0.4659956991672516, 0.4667758345603943, 0.46450895071029663, 0.46478980779647827, 0.4542118012905121, 0.44585683941841125, 0.4544300138950348, 0.45020976662635803, 0.4441646337509155, 0.438803106546402, 0.43342041969299316, 0.44758984446525574, 0.45390042662620544, 0.4220411479473114, 0.43439173698425293, 0.4394852817058563, 0.42708179354667664, 0.4217815697193146, 0.4271296262741089], "val_accuracy": [0.5106666684150696, 0.643666684627533, 0.6213333606719971, 0.6896666884422302, 0.7173333168029785, 0.7246666550636292, 0.7336666584014893, 0.7549999952316284, 0.7676666378974915, 0.753000020980835, 0.7673333287239075, 0.7756666541099548, 0.765666663646698, 0.7870000004768372, 0.7733333110809326, 0.7816666960716248, 0.7919999957084656, 0.8043333292007446, 0.7986666560173035, 0.8029999732971191, 0.8056666851043701, 0.800000011920929, 0.8149999976158142, 0.8086666464805603, 0.8206666707992554, 0.8226666450500488, 0.812666654586792, 0.8220000267028809, 0.7950000166893005, 0.8226666450500488, 0.8306666612625122, 0.8293333053588867, 0.840666651725769, 0.8353333473205566, 0.8373333215713501, 0.8423333168029785, 0.8410000205039978, 0.8323333263397217, 0.8379999995231628, 0.8399999737739563, 0.8433333039283752, 0.8370000123977661, 0.8320000171661377, 0.8486666679382324, 0.843999981880188, 0.831333339214325, 0.8443333506584167, 0.8450000286102295, 0.8426666855812073]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0, 2], [16, 37], [0, 1], [0], [6], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 7, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [51.81426239013672, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21014396846294403, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1166905.625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 3, 1, 3, 5, 8, 3], [0, 0, 3, 0, 3, 1, 2], [95, 39, 39], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 4], [2, 1, 3, 1, 0, 2], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 14, 8, 6, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.multiply(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.pow(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 3, 4, 2], [2, 3, 3, 1, 0], [45, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(beta, tf.math.multiply(grad, grad))), tf.math.pow(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309847354888916, 2.3106038570404053, 2.309540271759033, 2.3106255531311035, 2.3100697994232178, 2.3097074031829834], "accuracy": [0.09285431355237961, 0.09192973375320435, 0.09694888442754745, 0.09377889335155487, 0.0944393053650856, 0.09192973375320435], "val_loss": [2.3077919483184814, 2.3077919483184814, 2.3077919483184814, 2.3077919483184814, 2.3077919483184814, 2.3077919483184814], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 7, 0, 5, 6, 6, 0, 8], [0, 0, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 0, 0], [16, 37], [0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 5, 7, 2, 8], [6, 6, 1, 5], [0], [1], [0], [0], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 16, 10, 6, 3, 10, 6, 4, 1, 9, 5, 4, 0, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(grad)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(tf.math.add(tf.math.sqrt(grad), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310697078704834, 2.3092174530029297, 2.3108325004577637, 2.309046745300293, 2.310342311859131, 2.309452772140503], "accuracy": [0.08770307898521423, 0.09272222965955734, 0.08915598690509796, 0.09259014576673508, 0.08928807079792023, 0.08875974267721176], "val_loss": [2.30934476852417, 2.30934476852417, 2.30934476852417, 2.30934476852417, 2.30934476852417, 2.30934476852417], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}]