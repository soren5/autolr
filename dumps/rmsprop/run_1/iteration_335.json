[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102551460266113, 1.6065092086791992, 1.1432210206985474, 0.9721912145614624, 0.9107800722122192, 0.8265807032585144, 0.7805593609809875, 0.7334282994270325, 0.7272897958755493, 0.7038492560386658, 0.6939429640769958, 0.6534593105316162, 0.64383864402771, 0.6322855949401855, 0.6256071329116821, 0.6313439607620239, 0.579287052154541, 0.5983719825744629, 0.5687091946601868, 0.5622639656066895, 0.5405613780021667, 0.5235607624053955, 0.5405953526496887, 0.5289031863212585, 0.542585015296936, 0.5165644884109497, 0.49771174788475037, 0.49885979294776917, 0.5028181672096252, 0.4843041002750397, 0.48591986298561096, 0.4758886992931366, 0.4767376184463501, 0.45424726605415344, 0.4646221995353699, 0.45682844519615173, 0.44146814942359924, 0.45040398836135864, 0.4386252760887146, 0.43615812063217163, 0.4289914667606354], "accuracy": [0.2689208686351776, 0.5081230998039246, 0.6004490852355957, 0.6548672318458557, 0.6736230254173279, 0.696209192276001, 0.7148329019546509, 0.7293620109558105, 0.7304186820983887, 0.7473253011703491, 0.7411174178123474, 0.7549861073493958, 0.7635715007781982, 0.7652885913848877, 0.7655527591705322, 0.7638356685638428, 0.7840443849563599, 0.7786290049552917, 0.7876105904579163, 0.7901201844215393, 0.8006868362426758, 0.8078193068504333, 0.8016114234924316, 0.8055738806724548, 0.8013472557067871, 0.8029322624206543, 0.8211596608161926, 0.8212917447090149, 0.8117818236351013, 0.8207634687423706, 0.8177255392074585, 0.8294808864593506, 0.8255184292793274, 0.835160493850708, 0.8315942287445068, 0.8327829837799072, 0.8413683772087097, 0.8345000743865967, 0.8399154543876648, 0.8397833704948425, 0.8437458872795105], "val_loss": [1.9172464609146118, 1.063788890838623, 0.8786112666130066, 0.7823252081871033, 0.7160333395004272, 0.6708803176879883, 0.7161635756492615, 0.6424665451049805, 0.6169567704200745, 0.6439804434776306, 0.6083972454071045, 0.5798874497413635, 0.6121585965156555, 0.5501837134361267, 0.5801485776901245, 0.5289487242698669, 0.5601769685745239, 0.528448224067688, 0.5123786330223083, 0.5051338076591492, 0.5017693638801575, 0.4868259131908417, 0.529152512550354, 0.5577831268310547, 0.4860829710960388, 0.4688137471675873, 0.4914867877960205, 0.47444841265678406, 0.457858681678772, 0.47928959131240845, 0.47621768712997437, 0.47518932819366455, 0.4439332187175751, 0.45430105924606323, 0.45355892181396484, 0.43398022651672363, 0.4601910412311554, 0.4349270462989807, 0.4410330355167389, 0.4361090362071991, 0.4616222679615021], "val_accuracy": [0.6003333330154419, 0.6643333435058594, 0.6949999928474426, 0.7020000219345093, 0.7260000109672546, 0.7483333349227905, 0.7129999995231628, 0.765666663646698, 0.7693333625793457, 0.7576666474342346, 0.765999972820282, 0.7696666717529297, 0.7493333220481873, 0.7963333129882812, 0.7726666927337646, 0.7963333129882812, 0.7856666445732117, 0.8056666851043701, 0.8069999814033508, 0.8040000200271606, 0.812333345413208, 0.812666654586792, 0.7963333129882812, 0.7829999923706055, 0.8169999718666077, 0.8180000185966492, 0.8066666722297668, 0.8196666836738586, 0.8270000219345093, 0.8213333487510681, 0.8149999976158142, 0.8276666402816772, 0.8330000042915344, 0.8276666402816772, 0.8320000171661377, 0.8370000123977661, 0.8203333616256714, 0.8356666564941406, 0.8336666822433472, 0.8366666436195374, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 91], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [20, 1], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 3, 0, 2, 5, 1, 2, 3], [2, 0, 3, 1, 0, 0], [16, 37, 72], [0, 1], [0], [6], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 14, 8, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(grad, alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [40790835200.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21357811987400055, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.322798611450781e+22, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 7, 5, 3, 6, 2, 3, 6, 1, 7, 8, 7, 6, 5, 1, 8, 8, 4, 2, 9, 1, 7, 8, 1, 1, 5, 9, 1, 8, 6, 7, 8, 7, 3, 1, 4, 5], [3, 0, 1, 0, 2, 0, 0, 2, 0, 1, 2, 2, 0, 3, 1, 1, 0, 0, 3, 2, 3, 3, 3, 3, 3, 2], [0, 39, 39, 75, 67, 52, 54, 41, 63, 11], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [22, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 66, 40, 26, 10, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)))), grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), grad), alpha)), tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.subtract(alpha, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.add(grad, tf.math.multiply(grad, tf.math.subtract(grad, tf.math.pow(grad, grad)))))), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 3, 1, 0, 5, 9], [0, 0, 1, 0, 2], [0, 39, 95], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 5, 0], [16, 37], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [7, 1, 1, 0, 8, 0, 5, 5, 2, 8], [6, 5, 0, 4, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 10, 7, 3, 3, 2, 1, 1, 0, 15, 10, 5, 1, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(alpha))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.subtract(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.square(tf.math.add(grad, tf.math.sqrt(alpha))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309776544570923, 2.3094515800476074, 2.3108959197998047, 2.310342311859131, 2.3094987869262695, 2.3101494312286377], "accuracy": [0.09179764986038208, 0.09325055778026581, 0.08889182657003403, 0.08889182657003403, 0.09509972482919693, 0.09232597798109055], "val_loss": [2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]