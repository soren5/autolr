[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212566614151001, 1.605061650276184, 1.1599034070968628, 1.0113425254821777, 0.8940337300300598, 0.8304129242897034, 0.793538510799408, 0.778850257396698, 0.7500791549682617, 0.6914739608764648, 0.7006059288978577, 0.6829994916915894, 0.6387742757797241, 0.6422131061553955, 0.6464893817901611, 0.6314630508422852, 0.5969825387001038, 0.5878310203552246, 0.5702353715896606, 0.5910170078277588, 0.5722301006317139, 0.554246723651886, 0.5462222099304199, 0.5500379204750061, 0.533807098865509, 0.5306650400161743, 0.5228103995323181, 0.5232378244400024, 0.5122548341751099, 0.5006906986236572], "accuracy": [0.26258090138435364, 0.5116893649101257, 0.5868445634841919, 0.6427156329154968, 0.6796988248825073, 0.6947563290596008, 0.707040011882782, 0.7104741930961609, 0.7220974564552307, 0.7448157668113708, 0.7409853339195251, 0.7473253011703491, 0.7684586048126221, 0.7618544697761536, 0.761590301990509, 0.7667415142059326, 0.7795535326004028, 0.7847048044204712, 0.7895918488502502, 0.7791573405265808, 0.7895918488502502, 0.7960638999938965, 0.7960638999938965, 0.8010830879211426, 0.8059701323509216, 0.8079513907432556, 0.8120459914207458, 0.8086118102073669, 0.8098005652427673, 0.8144234418869019], "val_loss": [1.9324618577957153, 1.1046546697616577, 0.9528785943984985, 0.8697963953018188, 0.7384648323059082, 0.7222849726676941, 0.7720876336097717, 0.6510154008865356, 0.6292306184768677, 0.6406531929969788, 0.6001139879226685, 0.5850881338119507, 0.5791491270065308, 0.6204752326011658, 0.5568826794624329, 0.5443934202194214, 0.5553774237632751, 0.5383443236351013, 0.5525550246238708, 0.5379692316055298, 0.5081248879432678, 0.511710524559021, 0.511105477809906, 0.5075541138648987, 0.4918935000896454, 0.5067977905273438, 0.5018911361694336, 0.4969756007194519, 0.4947439432144165, 0.48772281408309937], "val_accuracy": [0.515333354473114, 0.6420000195503235, 0.6366666555404663, 0.6846666932106018, 0.7319999933242798, 0.7369999885559082, 0.7256666421890259, 0.7416666746139526, 0.7646666765213013, 0.7473333477973938, 0.7696666717529297, 0.777999997138977, 0.793666660785675, 0.7693333625793457, 0.7926666736602783, 0.7960000038146973, 0.7923333048820496, 0.7929999828338623, 0.7816666960716248, 0.7846666574478149, 0.8173333406448364, 0.8119999766349792, 0.8080000281333923, 0.812666654586792, 0.8193333148956299, 0.8116666674613953, 0.8056666851043701, 0.8076666593551636, 0.8146666884422302, 0.8100000023841858]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 78, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 7, 6, 1, 8, 2, 7, 3, 7, 6, 1, 5, 6, 1, 1, 3, 6, 3, 7, 8, 7, 6, 3, 0, 6, 0], [2, 0, 3, 1, 0, 2, 1, 4, 2, 3, 4, 4, 1, 3, 2, 4, 3, 2, 1, 1, 2, 2], [16, 1], [0, 1], [0], [6], [0], [1], [0], [4], [0]], "fitness": -0.35600000619888306, "mapping_values": [1, 11, 6, 5, 3, 49, 27, 22, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.square(alpha))))))), tf.math.divide_no_nan(tf.math.subtract(grad, beta), grad)), grad), grad), tf.math.subtract(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, beta), tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.negative(alpha), alpha)))), beta)), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.455824136734009, 2.322239637374878, 2.2376441955566406, 2.6446449756622314, 2.3048019409179688, 2.303518295288086, 2.3035972118377686, 2.30303955078125], "accuracy": [0.17619864642620087, 0.17355699837207794, 0.16351869702339172, 0.20221899449825287, 0.09998679161071777, 0.10077928751707077, 0.09945846349000931, 0.09325055778026581], "val_loss": [2.3019161224365234, 2.306386709213257, 2.003892421722412, 2.305283308029175, 2.303144693374634, 2.3027288913726807, 2.30283784866333, 2.3026137351989746], "val_accuracy": [0.11800000071525574, 0.10066666454076767, 0.3453333377838135, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 5, 6, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 1], [0], [4], [0], [0, 0, 0, 1, 1, 1], [0, 2, 6], [7, 7, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 7, 4, 3, 1, 2, 1, 1, 0, 6, 3, 3, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, grad), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 1, 8, 3, 9, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 6, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [24.650957107543945, 984718180352.0, 61527.13671875, 15216672.0, 3887230720.0, NaN], "accuracy": [0.10011887550354004, 0.1080438494682312, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.1002509593963623], "val_loss": [10.733451843261719, 2246.73876953125, 573991.125, 146939024.0, 37616390144.0, NaN], "val_accuracy": [0.10233332961797714, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 4, 0, 6, 9, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 1, 0, 1, 1], [4, 3], [6, 0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 3, 3, 1, 7, 5, 2, 2, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091213703155518, 2.309720516204834, 2.3092856407165527, 2.3089282512664795, 2.3094072341918945, 2.3105249404907227], "accuracy": [0.09113723784685135, 0.08915598690509796, 0.0936468094587326, 0.0952318087220192, 0.08942015469074249, 0.09298639744520187], "val_loss": [2.3081204891204834, 2.3081204891204834, 2.3081204891204834, 2.3081204891204834, 2.3081204891204834, 2.3081204891204834], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]