[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2095537185668945, 1.6130633354187012, 1.1792092323303223, 0.9854131937026978, 0.9000241756439209, 0.8370863795280457, 0.7904390692710876, 0.7635551691055298, 0.7555230259895325, 0.746086061000824, 0.6977552771568298, 0.6812312006950378, 0.6863805651664734, 0.6478668451309204, 0.6338733434677124, 0.6278495788574219, 0.6231318712234497, 0.6066657304763794, 0.5910417437553406, 0.585220992565155, 0.5913998484611511, 0.5518516302108765, 0.5651317238807678, 0.5472750663757324, 0.5485885143280029, 0.5435655117034912, 0.5251190662384033, 0.5158205032348633, 0.5130647420883179, 0.5149984359741211, 0.5101537108421326, 0.4860111474990845, 0.49706223607063293, 0.4842677116394043, 0.47705796360969543, 0.478912353515625, 0.4668945372104645, 0.4583215117454529, 0.46513164043426514], "accuracy": [0.2739400267601013, 0.5086514353752136, 0.5848633050918579, 0.6499801874160767, 0.6775855422019958, 0.693831741809845, 0.7069079279899597, 0.713379979133606, 0.7243428826332092, 0.7180029153823853, 0.7413815855979919, 0.7499669790267944, 0.7358341217041016, 0.759609043598175, 0.7586844563484192, 0.7655527591705322, 0.7717606425285339, 0.7758552432060242, 0.778232753276825, 0.7816668748855591, 0.7798177003860474, 0.7988376617431641, 0.7885351777076721, 0.8001585006713867, 0.7935543656349182, 0.7993659973144531, 0.8054417967796326, 0.8054417967796326, 0.804649293422699, 0.8124422430992126, 0.8113855719566345, 0.819970965385437, 0.8140271902084351, 0.8201030492782593, 0.8228767514228821, 0.8214238286018372, 0.828292191028595, 0.8325188159942627, 0.830669641494751], "val_loss": [1.924628734588623, 1.1107243299484253, 0.932017982006073, 0.8584323525428772, 0.7707372307777405, 0.7186290621757507, 0.6825556755065918, 0.6909409761428833, 0.7067000269889832, 0.6409299373626709, 0.615084707736969, 0.612331211566925, 0.5843263268470764, 0.5738913416862488, 0.5505900382995605, 0.6095051169395447, 0.5438535213470459, 0.541149377822876, 0.5275259613990784, 0.5447285771369934, 0.5280203223228455, 0.5117042660713196, 0.5125433802604675, 0.5100592374801636, 0.4937763810157776, 0.4874773323535919, 0.48465344309806824, 0.482464075088501, 0.4908093214035034, 0.46958521008491516, 0.47829508781433105, 0.4634958803653717, 0.4621563255786896, 0.4542834162712097, 0.4682285189628601, 0.45558834075927734, 0.45331311225891113, 0.44961652159690857, 0.4602786600589752], "val_accuracy": [0.5886666774749756, 0.6499999761581421, 0.6746666431427002, 0.7020000219345093, 0.7126666903495789, 0.7406666874885559, 0.7490000128746033, 0.7386666536331177, 0.7176666855812073, 0.746999979019165, 0.7733333110809326, 0.7710000276565552, 0.7910000085830688, 0.7850000262260437, 0.8026666641235352, 0.7710000276565552, 0.7960000038146973, 0.7919999957084656, 0.8053333163261414, 0.800000011920929, 0.8086666464805603, 0.8193333148956299, 0.8136666417121887, 0.8190000057220459, 0.824999988079071, 0.8236666917800903, 0.8270000219345093, 0.8226666450500488, 0.8230000138282776, 0.8336666822433472, 0.8273333311080933, 0.8356666564941406, 0.8356666564941406, 0.8416666388511658, 0.8286666870117188, 0.8399999737739563, 0.840666651725769, 0.8399999737739563, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 3, 1, 3, 5, 0, 8, 3, 9, 4, 6, 3, 3, 3, 7, 3, 1, 2, 8, 3, 5, 5, 0], [0, 3, 3, 1, 3, 3, 3, 1, 0, 3, 0, 0, 0, 0, 0], [0, 39, 39, 0, 44, 20, 56, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 5], [16, 37], [0, 1], [0], [6], [0], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 24, 15, 8, 12, 7, 5, 1, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))), tf.math.sqrt(grad)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.math.multiply(tf.math.multiply(grad, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 2, 2, 0], [16, 37], [0, 1, 1], [1], [6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 1, 3, 3, 0], [16, 37], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 5, 2, 1, 6], [6, 7, 0, 3], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 8, 4, 4, 3, 9, 6, 3, 0, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090310096740723, 2.3093810081481934, 2.3103950023651123, 2.3110878467559814, 2.309598922729492, 2.3105063438415527], "accuracy": [0.09430722147226334, 0.0940430611371994, 0.09285431355237961, 0.08585391938686371, 0.09153348207473755, 0.09087307006120682], "val_loss": [2.308717727661133, 2.308717727661133, 2.308717727661133, 2.308717727661133, 2.308717727661133, 2.308717727661133], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [4, 2, 3, 1, 3, 5, 5, 1, 8], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 16], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 37], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 6, 4, 6], [6, 6, 6, 3], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 16, 9, 7, 4, 2, 1, 1, 0, 9, 5, 4, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.divide_no_nan(grad, sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309178352355957, 2.3099000453948975, 2.309591054916382, 2.310393810272217, 2.3084990978240967, 2.3092758655548096], "accuracy": [0.09153348207473755, 0.09351472556591034, 0.08875974267721176, 0.0882314071059227, 0.09259014576673508, 0.09206181764602661], "val_loss": [2.3085498809814453, 2.3085498809814453, 2.3085498809814453, 2.3085498809814453, 2.3085498809814453, 2.3085498809814453], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]