[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7991428375244141, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2052600383758545, 1.5956188440322876, 1.1693466901779175, 0.973911464214325, 0.883126437664032, 0.8218582272529602, 0.8190070986747742, 0.7571569085121155, 0.7233626842498779, 0.7048690319061279, 0.6753870248794556, 0.6741675734519958, 0.6444936394691467, 0.6391941905021667, 0.6115454435348511, 0.6184554696083069, 0.6147908568382263, 0.5829641222953796, 0.5852354764938354, 0.581637442111969, 0.5790233612060547, 0.5420516729354858], "accuracy": [0.2665433883666992, 0.5168405771255493, 0.5935807824134827, 0.6538106203079224, 0.6831330060958862, 0.7004358768463135, 0.6995112895965576, 0.7239466309547424, 0.7317395210266113, 0.7374191284179688, 0.7486461400985718, 0.748249888420105, 0.7585523724555969, 0.7581561207771301, 0.7728173136711121, 0.770439863204956, 0.767930269241333, 0.7820631265640259, 0.7800818681716919, 0.7827235460281372, 0.7890635132789612, 0.7944789528846741], "val_loss": [1.909676432609558, 1.1414631605148315, 0.9095877408981323, 0.8463150858879089, 0.826036810874939, 0.7574760913848877, 0.7021303772926331, 0.651088535785675, 0.649628758430481, 0.6197178363800049, 0.6276828646659851, 0.6150707006454468, 0.6428267955780029, 0.5921183824539185, 0.5734130144119263, 0.5626521110534668, 0.5552087426185608, 0.5693010687828064, 0.5613548755645752, 0.5858350992202759, 0.5376430749893188, 0.5770937204360962], "val_accuracy": [0.5853333473205566, 0.6073333621025085, 0.6703333258628845, 0.6846666932106018, 0.675000011920929, 0.7166666388511658, 0.7386666536331177, 0.7553333044052124, 0.7540000081062317, 0.7673333287239075, 0.7663333415985107, 0.7699999809265137, 0.7566666603088379, 0.7833333611488342, 0.7866666913032532, 0.7923333048820496, 0.7953333258628845, 0.7806666493415833, 0.7850000262260437, 0.781333327293396, 0.7940000295639038, 0.7763333320617676]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 3, 3, 1, 3, 5, 8, 3, 6, 5, 6, 7, 4, 6], [0, 0, 1, 0, 2, 3, 0, 2, 2, 0, 3], [0, 39, 39, 45, 97], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 0], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 14, 11, 5, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 3, 1, 0, 9, 7, 6, 9, 6, 7, 2, 5, 5], [0, 0, 1, 0, 2, 3, 2, 1, 3, 3], [3, 39, 39, 40, 93], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 37], [1, 1], [0], [5], [0], [0, 0, 1, 1], [0, 7], [2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 18, 10, 5, 5, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), tf.math.add(tf.math.add(tf.math.square(tf.math.square(alpha)), grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 5, 5, 7, 4, 7, 1, 4, 8, 9, 9, 8, 2, 2, 8], [0, 0, 1, 0, 2, 2, 2, 2, 0, 3], [0, 39, 39, 23, 72, 36], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 2, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 29, 19, 10, 6, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.math.add(tf.math.subtract(grad, tf.math.pow(tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(grad)), tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310720205307007, 2.309950351715088, 2.3096892833709717, 2.309476852416992, 2.3104753494262695, 2.310208559036255], "accuracy": [0.09391097724437714, 0.09285431355237961, 0.0952318087220192, 0.09655263274908066, 0.09351472556591034, 0.09074098616838455], "val_loss": [2.3083744049072266, 2.3083744049072266, 2.3083744049072266, 2.3083744049072266, 2.3083744049072266, 2.3083744049072266], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 3, 2], [2, 0, 2, 1, 0], [16, 37], [0, 1], [0], [2], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 11, 6, 5, 3, 4, 3, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102104663848877, 2.3108437061309814, 2.3103103637695312, 2.30963397026062, 2.3108110427856445, 2.3107457160949707], "accuracy": [0.09206181764602661, 0.0878351628780365, 0.08730682730674744, 0.08889182657003403, 0.09087307006120682, 0.09628847241401672], "val_loss": [2.310337543487549, 2.310337543487549, 2.310337543487549, 2.310337543487549, 2.310337543487549, 2.310337543487549], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]