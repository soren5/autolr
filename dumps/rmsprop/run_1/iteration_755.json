[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8045714497566223, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2135751247406006, 1.6191045045852661, 1.1612656116485596, 0.980879008769989, 0.8856493830680847, 0.7966606616973877, 0.7985677123069763, 0.7353655099868774, 0.7239251136779785, 0.697862982749939, 0.6929484009742737, 0.6577016115188599, 0.6507326364517212, 0.6312580108642578, 0.6109577417373657, 0.6014175415039062, 0.5899845361709595, 0.5819771885871887, 0.5777453780174255, 0.562910258769989, 0.5632323026657104, 0.5509499907493591, 0.5360488891601562, 0.5427452921867371, 0.5177516341209412, 0.5182089805603027, 0.4978061616420746, 0.5050459504127502, 0.49421995878219604, 0.4839772880077362, 0.4862577021121979, 0.4719698131084442, 0.47760283946990967, 0.4675012230873108, 0.46317094564437866, 0.4668642580509186, 0.45612087845802307, 0.44716209173202515, 0.44551700353622437, 0.4432590901851654, 0.4370160400867462, 0.43223312497138977, 0.4304388761520386, 0.43184491991996765, 0.42069482803344727, 0.4255857765674591, 0.40802890062332153, 0.41445428133010864, 0.41306552290916443], "accuracy": [0.26284506916999817, 0.5025756359100342, 0.601109504699707, 0.6516972780227661, 0.6753401160240173, 0.7117950320243835, 0.7087571024894714, 0.7342491149902344, 0.7334566116333008, 0.7363624572753906, 0.7465327978134155, 0.7582882046699524, 0.7606657147407532, 0.7663452625274658, 0.7754589915275574, 0.7769119143486023, 0.7829877138137817, 0.789988100528717, 0.7849689722061157, 0.7960638999938965, 0.7905164361000061, 0.7973847389221191, 0.8014793395996094, 0.7946110367774963, 0.8132346868515015, 0.8087438941001892, 0.8137630224227905, 0.813498854637146, 0.8190463781356812, 0.8224804997444153, 0.8230088353157043, 0.8290846943855286, 0.8248580098152161, 0.8294808864593506, 0.8298771381378174, 0.8317263126373291, 0.8379341959953308, 0.8342359066009521, 0.8367455005645752, 0.8376700282096863, 0.8421608805656433, 0.8416325449943542, 0.8444063067436218, 0.8451988101005554, 0.848368763923645, 0.8454629778862, 0.8518029451370239, 0.8490291833877563, 0.8487650156021118], "val_loss": [1.9324688911437988, 1.1854500770568848, 0.8835246562957764, 0.8085843324661255, 0.7354004979133606, 0.6815623044967651, 0.6468273401260376, 0.6286843419075012, 0.6171777844429016, 0.6443016529083252, 0.5712088346481323, 0.5527839064598083, 0.5388613939285278, 0.5426093339920044, 0.5191752910614014, 0.5365680456161499, 0.5051451325416565, 0.5196992754936218, 0.5182240009307861, 0.48896944522857666, 0.49746012687683105, 0.47207731008529663, 0.48000630736351013, 0.4668150246143341, 0.45824068784713745, 0.4546026885509491, 0.44856157898902893, 0.44452783465385437, 0.46912336349487305, 0.44649770855903625, 0.4364146292209625, 0.4581509232521057, 0.4517923891544342, 0.42739778757095337, 0.43202751874923706, 0.42527613043785095, 0.4209381937980652, 0.41221436858177185, 0.41675031185150146, 0.41161876916885376, 0.4168265461921692, 0.40419963002204895, 0.4039478302001953, 0.39726945757865906, 0.40331971645355225, 0.4015439748764038, 0.39956924319267273, 0.39897987246513367, 0.39133310317993164], "val_accuracy": [0.6223333477973938, 0.6086666584014893, 0.6943333148956299, 0.7210000157356262, 0.7310000061988831, 0.737666666507721, 0.7506666779518127, 0.7516666650772095, 0.7570000290870667, 0.7620000243186951, 0.7866666913032532, 0.7856666445732117, 0.7919999957084656, 0.7896666526794434, 0.8066666722297668, 0.7963333129882812, 0.8036666512489319, 0.7979999780654907, 0.8006666898727417, 0.8240000009536743, 0.8080000281333923, 0.8259999752044678, 0.8196666836738586, 0.8199999928474426, 0.82833331823349, 0.8259999752044678, 0.828000009059906, 0.8306666612625122, 0.8166666626930237, 0.8336666822433472, 0.8370000123977661, 0.8213333487510681, 0.8316666483879089, 0.8429999947547913, 0.8356666564941406, 0.8433333039283752, 0.8476666808128357, 0.8476666808128357, 0.843666672706604, 0.8496666550636292, 0.840666651725769, 0.8519999980926514, 0.8473333120346069, 0.8560000061988831, 0.8503333330154419, 0.8513333201408386, 0.8496666550636292, 0.8510000109672546, 0.8560000061988831]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2, 4, 4, 1], [0, 0, 1, 0, 2, 3, 3, 3, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [85, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.15485714375972748, "mapping_values": [1, 19, 10, 9, 3, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, grad), tf.math.subtract(grad, grad)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3227808475494385, 2.3170812129974365, 2.2744672298431396, 2.300678014755249, 2.25431752204895, 2.30476975440979, 2.3036136627197266, 2.3029515743255615, 2.303311824798584], "accuracy": [0.18940694630146027, 0.1710474193096161, 0.15229164063930511, 0.11042134463787079, 0.16959451138973236, 0.09840179979801178, 0.09760929644107819, 0.10130762308835983, 0.09760929644107819], "val_loss": [2.2903523445129395, 2.3060758113861084, 2.306473731994629, 2.2037949562072754, 2.3053653240203857, 2.3031156063079834, 2.302668809890747, 2.3026316165924072, 2.302665948867798], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.10100000351667404, 0.1679999977350235, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09866666793823242, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 40], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 2, 8, 3, 8, 2], [2, 0, 3, 5, 0], [16, 37], [1, 0], [4], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, grad))))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 37, 10], [0, 1], [0], [6], [0], [0, 0, 1, 0, 1], [0, 4, 8], [2, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 12, 7, 5, 3, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.math.sqrt(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 1, 3, 8], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 1, 0, 1], [0, 3, 6, 8], [6, 3, 0], [0], [0, 0, 0, 1], [0, 4, 9], [0], [0, 44]], "fitness": -0.0908571407198906, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 7, 4, 3, 1, 4, 3, 1, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(grad, tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3110692501068115, 2.3094680309295654, 2.3112361431121826, 2.3086893558502197, 2.3104324340820312, 2.3103442192077637], "accuracy": [0.09021265059709549, 0.09140139818191528, 0.08545766770839691, 0.09760929644107819, 0.09351472556591034, 0.09140139818191528], "val_loss": [2.308518886566162, 2.308518886566162, 2.308518886566162, 2.308518886566162, 2.308518886566162, 2.308518886566162], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]