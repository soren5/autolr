[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208017587661743, 1.5924773216247559, 1.131386160850525, 0.9655168056488037, 0.8906617164611816, 0.8290035128593445, 0.772221028804779, 0.7467485070228577, 0.7290692925453186, 0.6957815885543823, 0.6779811382293701, 0.6827791333198547, 0.644821286201477, 0.6450814604759216, 0.6224566698074341, 0.6289244294166565, 0.6003525257110596, 0.5931493639945984, 0.5792060494422913, 0.5838552713394165, 0.5668095946311951, 0.5569455623626709, 0.5441043376922607, 0.5467627048492432, 0.5295631289482117, 0.521472692489624, 0.513942539691925, 0.5043977499008179, 0.5030838251113892, 0.4930605888366699, 0.48671022057533264, 0.48686277866363525, 0.4746245741844177, 0.4787190556526184, 0.4787546694278717], "accuracy": [0.2685246467590332, 0.5077268481254578, 0.6059965491294861, 0.6509047746658325, 0.6779817938804626, 0.6950204968452454, 0.7077004313468933, 0.7220974564552307, 0.7289658188819885, 0.7421740889549255, 0.746268630027771, 0.7465327978134155, 0.761590301990509, 0.7581561207771301, 0.7697794437408447, 0.7609298825263977, 0.776251494884491, 0.7769119143486023, 0.7868181467056274, 0.7816668748855591, 0.7860256433486938, 0.787082314491272, 0.7972526550292969, 0.7907806038856506, 0.7998943328857422, 0.8070268034934998, 0.8146876096725464, 0.8095363974571228, 0.8128384351730347, 0.81548011302948, 0.8211596608161926, 0.8158763647079468, 0.8227446675300598, 0.8211596608161926, 0.8261788487434387], "val_loss": [1.9097347259521484, 1.0771421194076538, 0.8380919694900513, 0.8899316191673279, 0.7003940343856812, 0.7073028087615967, 0.6624287366867065, 0.643850564956665, 0.638009786605835, 0.5791388154029846, 0.6253005266189575, 0.5791117548942566, 0.5394026041030884, 0.534841775894165, 0.5494567155838013, 0.5402649641036987, 0.5205836892127991, 0.5176815986633301, 0.5056566596031189, 0.49802494049072266, 0.4987022578716278, 0.4880814552307129, 0.49254482984542847, 0.4867590367794037, 0.4818149507045746, 0.46160662174224854, 0.4581739604473114, 0.46205103397369385, 0.44312429428100586, 0.44573599100112915, 0.44233080744743347, 0.44260478019714355, 0.4460509121417999, 0.4325914978981018, 0.43940794467926025], "val_accuracy": [0.5619999766349792, 0.6816666722297668, 0.7083333134651184, 0.6853333115577698, 0.7443333268165588, 0.7400000095367432, 0.7383333444595337, 0.7576666474342346, 0.7583333253860474, 0.7710000276565552, 0.746999979019165, 0.7753333449363708, 0.7990000247955322, 0.8013333082199097, 0.7946666479110718, 0.7943333387374878, 0.8046666383743286, 0.809333324432373, 0.8053333163261414, 0.8146666884422302, 0.8066666722297668, 0.8130000233650208, 0.8230000138282776, 0.8146666884422302, 0.8273333311080933, 0.8266666531562805, 0.8246666789054871, 0.8213333487510681, 0.8373333215713501, 0.8393333554267883, 0.8320000171661377, 0.8303333520889282, 0.8326666951179504, 0.8386666774749756, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 4, 3, 5], [0, 0, 1, 2, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 2, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 32], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 1, 1, 0], [16, 37], [1, 1], [0], [6], [0], [0, 0, 0, 1, 1], [0, 4, 8], [2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(beta), alpha))", "other_info": {"loss": [1126673408.0, 21243478016.0, 100211662848.0, 278748495872.0, 593747574784.0, 1096538259456.0], "accuracy": [0.09853387624025345, 0.09840179979801178, 0.10328886657953262, 0.09602430462837219, 0.09549596905708313, 0.1010434553027153], "val_loss": [5097251840.0, 40772702208.0, 137602564096.0, 326162448384.0, 637022371840.0, 1100766511104.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 2, 3, 1, 3, 3, 0, 5], [0, 0, 1, 0, 2, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 6, 2], [6, 6, 5, 5], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 15, 8, 7, 3, 8, 5, 3, 1, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.square(grad)), grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309854030609131, 2.310953378677368, 2.3093483448028564, 2.3098838329315186, 2.310335636138916, 2.309481143951416], "accuracy": [0.09576013684272766, 0.09192973375320435, 0.09509972482919693, 0.09166556596755981, 0.09325055778026581, 0.09206181764602661], "val_loss": [2.3083577156066895, 2.3083577156066895, 2.3083577156066895, 2.3083577156066895, 2.3083577156066895, 2.3083577156066895], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 8, 6, 5], [3, 0, 3, 3, 2], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 3, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088974952697754, 2.309417963027954, 2.310076951980591, 2.311028003692627, 2.310426712036133, 2.309945583343506], "accuracy": [0.08902391046285629, 0.0940430611371994, 0.09206181764602661, 0.09100515395402908, 0.09047681838274002, 0.08955223858356476], "val_loss": [2.3095953464508057, 2.3095953464508057, 2.3095953464508057, 2.3095953464508057, 2.3095953464508057, 2.3095953464508057], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]