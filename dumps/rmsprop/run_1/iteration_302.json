[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8445714116096497, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2117154598236084, 1.6098220348358154, 1.128519058227539, 0.9901973605155945, 0.8581782579421997, 0.8255184292793274, 0.7776150107383728, 0.744003176689148, 0.7178733348846436, 0.6903888583183289, 0.6602374911308289, 0.6615841388702393, 0.6610395312309265, 0.6130523681640625, 0.6155279874801636, 0.5934715270996094, 0.5892854332923889, 0.5773446559906006, 0.5611807703971863, 0.5569931268692017, 0.545328676700592, 0.5267758369445801, 0.5261785984039307, 0.5253806710243225, 0.5171912312507629, 0.502813994884491, 0.506398618221283, 0.4910634160041809, 0.47964081168174744, 0.47980377078056335, 0.47215646505355835, 0.4682933986186981, 0.45761340856552124, 0.4504072666168213, 0.4537279009819031, 0.45595523715019226, 0.4466094970703125, 0.45446473360061646], "accuracy": [0.2650904655456543, 0.509840190410614, 0.6017699241638184, 0.6498481035232544, 0.6897371411323547, 0.6886804699897766, 0.7136441469192505, 0.7255316376686096, 0.7301545143127441, 0.7409853339195251, 0.7498348951339722, 0.7541936039924622, 0.7491744756698608, 0.7667415142059326, 0.7630431652069092, 0.7778365015983582, 0.7779685854911804, 0.7832518815994263, 0.7897239327430725, 0.7884030938148499, 0.7926297783851624, 0.8033285140991211, 0.8090080618858337, 0.800818920135498, 0.8112534880638123, 0.8156121969223022, 0.8112534880638123, 0.8183859586715698, 0.8181217908859253, 0.819442629814148, 0.8249900937080383, 0.8261788487434387, 0.8269713521003723, 0.830669641494751, 0.8309338092803955, 0.8343679904937744, 0.8370096683502197, 0.8329150676727295], "val_loss": [1.9219346046447754, 1.1020838022232056, 0.9049806594848633, 0.8169103264808655, 0.7348748445510864, 0.717394232749939, 0.6695500612258911, 0.6320096850395203, 0.6202244162559509, 0.6300098299980164, 0.5894229412078857, 0.6012646555900574, 0.6036387085914612, 0.5469516515731812, 0.5456979274749756, 0.6081969141960144, 0.5459001064300537, 0.5408034324645996, 0.5332075357437134, 0.5619134306907654, 0.5267895460128784, 0.5103067755699158, 0.48994186520576477, 0.49568629264831543, 0.5057989358901978, 0.5001728534698486, 0.47986292839050293, 0.4830764830112457, 0.4899536967277527, 0.47196444869041443, 0.4803205132484436, 0.482619047164917, 0.45785197615623474, 0.45279785990715027, 0.45516547560691833, 0.45717188715934753, 0.46204501390457153, 0.46120402216911316], "val_accuracy": [0.5989999771118164, 0.6513333320617676, 0.6713333129882812, 0.6930000185966492, 0.7226666808128357, 0.7279999852180481, 0.7363333106040955, 0.753000020980835, 0.7649999856948853, 0.762333333492279, 0.7723333239555359, 0.7676666378974915, 0.7713333368301392, 0.7906666398048401, 0.8003333210945129, 0.7509999871253967, 0.7866666913032532, 0.7940000295639038, 0.8023333549499512, 0.7749999761581421, 0.7979999780654907, 0.8100000023841858, 0.8190000057220459, 0.8100000023841858, 0.8063333630561829, 0.8119999766349792, 0.8213333487510681, 0.8136666417121887, 0.812333345413208, 0.8246666789054871, 0.8209999799728394, 0.8216666579246521, 0.8333333134651184, 0.82833331823349, 0.8273333311080933, 0.8299999833106995, 0.8293333053588867, 0.8299999833106995]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 28, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 37], [1, 1], [5], [6], [0], [1], [0], [2], [0]], "fitness": -0.8122857213020325, "mapping_values": [1, 9, 4, 5, 3, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2294540405273438, 2.096189260482788, 2.0251376628875732, 1.921862244606018, 1.6162726879119873, 1.3190423250198364, 0.8631091117858887, 0.794492781162262, 0.7271940112113953, 0.7190812826156616, 0.6659272909164429, 0.6808353662490845, 0.6232450604438782, 0.6271759867668152, 0.5869060754776001, 0.6019871830940247, 0.5552564859390259, 0.5486637949943542, 0.5528281927108765, 0.5323590040206909, 0.5401768088340759, 0.5383051037788391, 0.5039699673652649, 0.48346182703971863, 0.47506773471832275, 0.47850409150123596, 0.47590726613998413, 0.46837860345840454, 0.45612576603889465, 0.4349309206008911], "accuracy": [0.2755250334739685, 0.32399946451187134, 0.3249240517616272, 0.35279354453086853, 0.4365341365337372, 0.5410117506980896, 0.6774534583091736, 0.700171709060669, 0.7236824631690979, 0.7223616242408752, 0.741909921169281, 0.7452120184898376, 0.7614582180976868, 0.7626469135284424, 0.7750627398490906, 0.7671377658843994, 0.7868181467056274, 0.791441023349762, 0.7921014428138733, 0.7981772422790527, 0.7866860628128052, 0.7957997918128967, 0.8133667707443237, 0.8170651197433472, 0.8208954930305481, 0.821820080280304, 0.8182538747787476, 0.8204993009567261, 0.8273676037788391, 0.8381983637809753], "val_loss": [1.9090709686279297, 1.999035120010376, 1.9534739255905151, 2.0576281547546387, 1.1618974208831787, 0.8799400925636292, 0.7912468910217285, 0.684950053691864, 0.7046265602111816, 0.6067187786102295, 0.6327866911888123, 0.5671586394309998, 0.5827747583389282, 0.5474727153778076, 0.5379215478897095, 0.5251936912536621, 0.5052017569541931, 0.5363160967826843, 0.48542410135269165, 0.5394371747970581, 0.5080422163009644, 0.5018972754478455, 0.4525226950645447, 0.44743913412094116, 0.4520106613636017, 0.5197710394859314, 0.47193843126296997, 0.43171796202659607, 0.45962026715278625, 0.43383631110191345], "val_accuracy": [0.33000001311302185, 0.4566666781902313, 0.35866665840148926, 0.3319999873638153, 0.5889999866485596, 0.6759999990463257, 0.6869999766349792, 0.7293333411216736, 0.7183333039283752, 0.7506666779518127, 0.7516666650772095, 0.781000018119812, 0.7743333578109741, 0.7789999842643738, 0.7889999747276306, 0.7886666655540466, 0.8083333373069763, 0.7996666431427002, 0.8119999766349792, 0.7746666669845581, 0.7866666913032532, 0.7926666736602783, 0.8256666660308838, 0.8323333263397217, 0.8376666903495789, 0.7883333563804626, 0.809333324432373, 0.8363333344459534, 0.8203333616256714, 0.8353333473205566]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 6, 1, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 39, 76], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [0], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 12, 7, 5, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [93, 1], [0, 1], [0], [2], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [497.67388916015625, 2.610103727330278e+31, 2.315075397491455, 2.3055038452148438, 2.303459882736206, 2.303039073944092, 2.303056478500366, 2.3029935359954834, 2.302983522415161, 2.3030619621276855, 2.30291748046875, 2.3029117584228516, 2.3029186725616455, 2.3029491901397705], "accuracy": [0.18293488025665283, 0.09681680053472519, 0.09998679161071777, 0.09642054885625839, 0.09998679161071777, 0.09681680053472519, 0.09694888442754745, 0.09998679161071777, 0.09655263274908066, 0.0956280529499054, 0.09259014576673508, 0.09642054885625839, 0.08994849026203156, 0.09417514503002167], "val_loss": [299268128.0, 2.323127269744873, 2.3068687915802, 2.3033008575439453, 2.3027751445770264, 2.302560329437256, 2.302673578262329, 2.3026719093322754, 2.3025059700012207, 2.3025872707366943, 2.302518129348755, 2.302614450454712, 2.3025448322296143, 2.302591562271118], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.10300000011920929, 0.0976666659116745, 0.10199999809265137, 0.10199999809265137, 0.0989999994635582, 0.10466666519641876, 0.10466666519641876, 0.10300000011920929, 0.0976666659116745, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 4, 1, 3, 5], [0, 0, 2, 0, 2], [33, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]