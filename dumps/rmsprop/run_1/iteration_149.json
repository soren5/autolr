[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8240000009536743, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210251808166504, 1.5981217622756958, 1.1643483638763428, 0.9654749035835266, 0.86507248878479, 0.8334431648254395, 0.7652918100357056, 0.7528461813926697, 0.7207673788070679, 0.6861894130706787, 0.66644686460495, 0.6503222584724426, 0.6525195240974426, 0.6346529722213745, 0.6064648032188416, 0.6073784828186035, 0.5846039652824402, 0.5774895548820496, 0.571338415145874, 0.5568723082542419, 0.575760006904602, 0.5388590097427368, 0.5475096106529236, 0.5376118421554565, 0.5280741453170776, 0.5154988765716553, 0.5026752352714539, 0.4962754547595978, 0.4967949688434601, 0.49394169449806213, 0.47080567479133606, 0.4822503924369812, 0.466237336397171, 0.4675160050392151, 0.4694117307662964, 0.4586259722709656, 0.4567117989063263, 0.4585411250591278, 0.44721612334251404, 0.4501846730709076, 0.42876195907592773, 0.4347480237483978, 0.4334205389022827, 0.4302510917186737, 0.42184603214263916, 0.42319202423095703, 0.4090156555175781, 0.41350969672203064, 0.41382384300231934, 0.40815675258636475, 0.3988758325576782, 0.4011567234992981, 0.39813894033432007, 0.396018385887146, 0.38932374119758606, 0.3781883418560028, 0.3819624185562134, 0.38544419407844543], "accuracy": [0.27037379145622253, 0.5007264614105225, 0.5886936783790588, 0.6476026773452759, 0.6865671873092651, 0.6971337795257568, 0.7206445932388306, 0.7190595865249634, 0.7248712182044983, 0.7446836829185486, 0.7568352818489075, 0.7580240368843079, 0.7567031979560852, 0.7594769597053528, 0.7716285586357117, 0.7754589915275574, 0.7828556299209595, 0.7872143983840942, 0.791441023349762, 0.7969884872436523, 0.7884030938148499, 0.8033285140991211, 0.7946110367774963, 0.8018755912780762, 0.8078193068504333, 0.8103289008140564, 0.8166688680648804, 0.8211596608161926, 0.8211596608161926, 0.8183859586715698, 0.8273676037788391, 0.8259146809577942, 0.828820526599884, 0.828820526599884, 0.8290846943855286, 0.8298771381378174, 0.8345000743865967, 0.8334434032440186, 0.8370096683502197, 0.835160493850708, 0.844010055065155, 0.8437458872795105, 0.8405758738517761, 0.8436138033866882, 0.850350022315979, 0.841500461101532, 0.8482366800308228, 0.852859616279602, 0.8485008478164673, 0.8518029451370239, 0.8549728989601135, 0.8557654023170471, 0.8516708612442017, 0.8548408150672913, 0.8562937378883362, 0.8598600029945374, 0.8615770936012268, 0.8556333184242249], "val_loss": [1.9187309741973877, 1.1771012544631958, 0.9208394885063171, 0.8449954986572266, 0.7882810235023499, 0.7116928696632385, 0.6758242249488831, 0.6788235902786255, 0.6512904167175293, 0.6336976885795593, 0.6512308120727539, 0.6252880692481995, 0.597157895565033, 0.6225265860557556, 0.6162806749343872, 0.575014054775238, 0.5711092948913574, 0.5589249730110168, 0.5478192567825317, 0.5409712195396423, 0.530091404914856, 0.550678551197052, 0.5480042099952698, 0.5352833271026611, 0.5130094289779663, 0.5077862739562988, 0.5075249671936035, 0.506040632724762, 0.5210651159286499, 0.4892776310443878, 0.4885093867778778, 0.48545926809310913, 0.4782281816005707, 0.47576045989990234, 0.48733189702033997, 0.4877665638923645, 0.45789167284965515, 0.4691009521484375, 0.46676817536354065, 0.46537670493125916, 0.45586320757865906, 0.45238736271858215, 0.4547637403011322, 0.4524500370025635, 0.44077473878860474, 0.44067808985710144, 0.44887256622314453, 0.4317868947982788, 0.44315430521965027, 0.42989397048950195, 0.4264490008354187, 0.4559842050075531, 0.4290972352027893, 0.4234081506729126, 0.4248630106449127, 0.42166608572006226, 0.4276813268661499, 0.42595621943473816], "val_accuracy": [0.5109999775886536, 0.5979999899864197, 0.6729999780654907, 0.6790000200271606, 0.6973333358764648, 0.7333333492279053, 0.7409999966621399, 0.737666666507721, 0.7369999885559082, 0.7606666684150696, 0.7296666502952576, 0.7580000162124634, 0.7766666412353516, 0.7676666378974915, 0.7753333449363708, 0.7823333144187927, 0.7839999794960022, 0.784333348274231, 0.7916666865348816, 0.7976666688919067, 0.800000011920929, 0.784333348274231, 0.7826666831970215, 0.7946666479110718, 0.8069999814033508, 0.8066666722297668, 0.8050000071525574, 0.812333345413208, 0.8056666851043701, 0.8173333406448364, 0.8176666498184204, 0.8196666836738586, 0.8183333277702332, 0.8293333053588867, 0.8186666369438171, 0.8113333582878113, 0.8309999704360962, 0.8316666483879089, 0.8230000138282776, 0.8203333616256714, 0.8339999914169312, 0.8323333263397217, 0.8256666660308838, 0.82833331823349, 0.8360000252723694, 0.8333333134651184, 0.8353333473205566, 0.8420000076293945, 0.8263333439826965, 0.8399999737739563, 0.8376666903495789, 0.8259999752044678, 0.8456666469573975, 0.8423333168029785, 0.840666651725769, 0.8429999947547913, 0.8376666903495789, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [3, 7, 3, 1, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 9, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 4, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [2507052.25, 17885495296.0, 72238413905920.0, 3.03341308049621e+17, 1.2296010584998522e+21, 1.004463722391739e+25], "accuracy": [0.10355303436517715, 0.09642054885625839, 0.09879804402589798, 0.09549596905708313, 0.10170386731624603, 0.1006472036242485], "val_loss": [49355696.0, 259213262848.0, 1077857677737984.0, 4.4164369425901814e+18, 1.875232006382608e+22, 1.6963647986276192e+26], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09866666793823242, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [2, 2, 0, 6, 9, 8, 2, 8], [2, 1, 3, 1, 0], [69, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 12, 8, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.sqrt(tf.math.add(tf.math.sqrt(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5, 4, 4, 9, 4, 8, 8, 9], [0, 0, 1, 0, 2, 2], [89, 39, 39, 82, 30], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 13, 6, 5, 10, 6, 4, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(grad), grad)), tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 8, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 5, 1, 5, 1, 8, 8], [6, 5, 7], [0], [0, 1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 10, 7, 3, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.sqrt(grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310378074645996, 2.3102266788482666, 2.309830904006958, 2.308276891708374, 2.3102359771728516, 2.310427665710449], "accuracy": [0.09642054885625839, 0.08915598690509796, 0.09642054885625839, 0.09509972482919693, 0.09179764986038208, 0.08809932321310043], "val_loss": [2.3088433742523193, 2.3088433742523193, 2.3088433742523193, 2.3088433742523193, 2.3088433742523193, 2.3088433742523193], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]