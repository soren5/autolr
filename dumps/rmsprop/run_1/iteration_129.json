[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8119999766349792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209723949432373, 1.5946036577224731, 1.145345687866211, 0.9699603319168091, 0.87807297706604, 0.830186128616333, 0.7792202830314636, 0.7648856043815613, 0.7111201882362366, 0.7082695364952087, 0.6663923859596252, 0.6943680644035339, 0.6386508345603943, 0.6324756741523743, 0.6070396304130554, 0.6022106409072876, 0.604462742805481, 0.569963276386261, 0.5920780897140503, 0.5578703284263611, 0.5618767142295837, 0.5425702333450317, 0.5391013026237488, 0.5506095290184021, 0.5235762000083923, 0.5181393027305603, 0.5125929713249207, 0.4905688166618347, 0.5094172358512878, 0.4852476716041565, 0.48186132311820984, 0.47799456119537354, 0.48456767201423645, 0.46699434518814087, 0.4664565622806549], "accuracy": [0.2661471366882324, 0.505877673625946, 0.5962224006652832, 0.6527539491653442, 0.6790384650230408, 0.6959450244903564, 0.7049266695976257, 0.7131158113479614, 0.7358341217041016, 0.7338528633117676, 0.7530049085617065, 0.7388719916343689, 0.7672698497772217, 0.7675340175628662, 0.7798177003860474, 0.7758552432060242, 0.7738739848136902, 0.7864218950271606, 0.7769119143486023, 0.7930260300636292, 0.7907806038856506, 0.7948752045631409, 0.7968564033508301, 0.7924976944923401, 0.8054417967796326, 0.8074230551719666, 0.8170651197433472, 0.8211596608161926, 0.8090080618858337, 0.8251221776008606, 0.8230088353157043, 0.8224804997444153, 0.8189142942428589, 0.8278959393501282, 0.8304054737091064], "val_loss": [1.9178327322006226, 1.1072014570236206, 0.8777660131454468, 0.7649683952331543, 0.6971733570098877, 0.6770257949829102, 0.7124401330947876, 0.6113671064376831, 0.5922663807868958, 0.5984560251235962, 0.6431523561477661, 0.5589770674705505, 0.5412852168083191, 0.5496010780334473, 0.5199308395385742, 0.508234441280365, 0.507319450378418, 0.5204119086265564, 0.5018535256385803, 0.5224660038948059, 0.48019030690193176, 0.5263450741767883, 0.5000302195549011, 0.46837764978408813, 0.45026257634162903, 0.4416501820087433, 0.46019303798675537, 0.44120508432388306, 0.4575740694999695, 0.4308411478996277, 0.4370867908000946, 0.44881200790405273, 0.4328061640262604, 0.4310746192932129, 0.4452660381793976], "val_accuracy": [0.5870000123977661, 0.6496666669845581, 0.675000011920929, 0.7126666903495789, 0.7350000143051147, 0.7406666874885559, 0.7143333554267883, 0.7696666717529297, 0.7693333625793457, 0.7763333320617676, 0.737666666507721, 0.7910000085830688, 0.7866666913032532, 0.7913333177566528, 0.8013333082199097, 0.8113333582878113, 0.8063333630561829, 0.8013333082199097, 0.8119999766349792, 0.7963333129882812, 0.8149999976158142, 0.7913333177566528, 0.8113333582878113, 0.828000009059906, 0.8353333473205566, 0.8420000076293945, 0.8316666483879089, 0.8376666903495789, 0.8273333311080933, 0.8456666469573975, 0.8389999866485596, 0.8253333568572998, 0.8386666774749756, 0.8420000076293945, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 8, 1, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 5], [16, 1], [0, 1], [0], [0], [97], [1], [0], [2], [0]], "fitness": -0.10257142782211304, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.196410251961958e+16, 4.871458422312141e+16, 4.884255277370573e+16, 4.89619872242729e+16, 4.91408726121513e+16, 4.939872956370125e+16], "accuracy": [0.10830801725387573, 0.10896842926740646, 0.10711926966905594, 0.10896842926740646, 0.10910051316022873, 0.10698718577623367], "val_loss": [3.747319022564147e+16, 3.747319022564147e+16, 3.747319022564147e+16, 3.747319022564147e+16, 3.747319022564147e+16, 3.747319022564147e+16], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [74, 39, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [83, 37], [0, 1, 0, 0, 0, 1, 1, 1], [2, 4, 3, 5], [6, 4, 7, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 8, 4, 4, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.pow(tf.math.multiply(tf.math.square(grad), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [105120432128.0, 8.060210505580544e+17, 6.163051199834537e+25, 1.0931206141416115e+34, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10038304328918457, 0.10408136248588562, 0.1010434553027153, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [220100347035648.0, 4.215075021907191e+19, 7.27561486241669e+27, Infinity, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09966666996479034, 0.09666666388511658, 0.10433333367109299, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 2, 5, 7, 7], [0, 0, 2, 0, 1, 1], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 9, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 37], [0, 1], [0], [4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 7, 4, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [288488456192.0, 187.4993438720703, 951.8009643554688, 2338.801025390625, 4344.80224609375, 6971.95751953125, 10235.98828125], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 535.4241943359375, 1660.6466064453125, 3406.242919921875, 5774.671875, 8768.5849609375, 12380.294921875], "val_accuracy": [0.0976666659116745, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6, 2], [2, 0, 1, 0, 2, 0, 1], [0, 39, 90], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 4, 6, 3, 8, 2], [5, 3, 2, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 15, 8, 7, 3, 12, 7, 5, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), grad), tf.math.add(beta, alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105223178863525, 2.309117555618286, 2.3101038932800293, 2.310633897781372, 2.309256076812744, 2.309122323989868], "accuracy": [0.09153348207473755, 0.09166556596755981, 0.09087307006120682, 0.09219389408826828, 0.09311848133802414, 0.09813763201236725], "val_loss": [2.308678150177002, 2.308678150177002, 2.308678150177002, 2.308678150177002, 2.308678150177002, 2.308678150177002], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]