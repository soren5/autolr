[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211683750152588, 1.6261990070343018, 1.1626570224761963, 0.9854638576507568, 0.9140223860740662, 0.8203132748603821, 0.8087858557701111, 0.7672892212867737, 0.733792245388031, 0.7117127776145935, 0.7099713087081909, 0.6636568903923035, 0.6618907451629639, 0.6279417872428894, 0.6154781579971313, 0.6079597473144531, 0.5908156633377075, 0.6061203479766846, 0.5817961096763611, 0.5785322189331055, 0.5784562230110168, 0.5613409280776978, 0.5436703562736511, 0.5430557131767273, 0.5287429094314575, 0.5304979681968689, 0.5134552121162415, 0.5130013823509216, 0.4970264434814453, 0.5012146830558777, 0.498752236366272, 0.49490928649902344, 0.49530228972435, 0.47398877143859863, 0.4737865924835205, 0.477311372756958], "accuracy": [0.2639017403125763, 0.4994056224822998, 0.5946374535560608, 0.6548672318458557, 0.6699247360229492, 0.6963412761688232, 0.7043983340263367, 0.7235503792762756, 0.7240787148475647, 0.7372870445251465, 0.7397965788841248, 0.7541936039924622, 0.7555144429206848, 0.7655527591705322, 0.7761194109916687, 0.7763835787773132, 0.7824593782424927, 0.7769119143486023, 0.783119797706604, 0.7872143983840942, 0.7862898111343384, 0.793422281742096, 0.7997622489929199, 0.7985734939575195, 0.8098005652427673, 0.8059701323509216, 0.8101968169212341, 0.8109893202781677, 0.8208954930305481, 0.8178576231002808, 0.8190463781356812, 0.8214238286018372, 0.8195747137069702, 0.8285563588142395, 0.8323867321014404, 0.8239334225654602], "val_loss": [1.9291568994522095, 1.1407465934753418, 0.9145485162734985, 0.8472934365272522, 0.7087647914886475, 0.6701493859291077, 0.6789848804473877, 0.6597481369972229, 0.6534281373023987, 0.6294270157814026, 0.5742112994194031, 0.5697437524795532, 0.5636454224586487, 0.5333749055862427, 0.5452333688735962, 0.5196243524551392, 0.5459933280944824, 0.5453324317932129, 0.5497750043869019, 0.5299641489982605, 0.4998992085456848, 0.4851647615432739, 0.4891883134841919, 0.48056653141975403, 0.47110864520072937, 0.4788314998149872, 0.48863786458969116, 0.4543835520744324, 0.465598464012146, 0.47999390959739685, 0.44529175758361816, 0.498148113489151, 0.44935187697410583, 0.4463045597076416, 0.4457915425300598, 0.436036080121994], "val_accuracy": [0.5563333630561829, 0.6176666617393494, 0.6679999828338623, 0.6549999713897705, 0.7426666617393494, 0.7509999871253967, 0.7419999837875366, 0.7403333187103271, 0.7353333234786987, 0.7426666617393494, 0.7926666736602783, 0.7863333225250244, 0.7836666703224182, 0.8019999861717224, 0.8013333082199097, 0.812333345413208, 0.7793333530426025, 0.777999997138977, 0.7896666526794434, 0.79666668176651, 0.8153333067893982, 0.8206666707992554, 0.8243333101272583, 0.8289999961853027, 0.8286666870117188, 0.8163333535194397, 0.8103333115577698, 0.8326666951179504, 0.8193333148956299, 0.8209999799728394, 0.8433333039283752, 0.8016666769981384, 0.831333339214325, 0.8353333473205566, 0.8356666564941406, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 2, 3, 1, 4, 5, 3, 3, 0, 6, 9, 9], [3, 3, 0, 0, 2, 1], [66, 68, 76, 93], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 3, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.24885714054107666, "mapping_values": [1, 18, 12, 6, 4, 5, 3, 2, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.pow(grad, grad), tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.265625476837158, 4.744403839111328, 2.306669235229492, 2.2990059852600098, 2.2465710639953613, 2.305799722671509], "accuracy": [0.21318188309669495, 0.15757495164871216, 0.1014397069811821, 0.11755382269620895, 0.2561088502407074, 0.10117553919553757], "val_loss": [2.1117844581604004, 2.30989670753479, 2.302696704864502, 2.273346424102783, 2.307865858078003, 2.303295612335205], "val_accuracy": [0.2549999952316284, 0.09866666793823242, 0.09966666996479034, 0.20600000023841858, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 7, 3, 5, 9, 4, 3, 3, 0], [0, 0, 1, 0, 1, 2, 3], [57, 39, 39, 22], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [95, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.1599999964237213, "mapping_values": [1, 18, 11, 7, 4, 7, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), alpha), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.423831843073654e+25, 2.837748187634382e+25, 2.8174609196707182e+25, 2.705754355089361e+25, 2.772107524106795e+25, 2.9005259164817296e+25], "accuracy": [0.1142517477273941, 0.11900673806667328, 0.12019548565149307, 0.11702549457550049, 0.12032756209373474, 0.11993131786584854], "val_loss": [2.0465030012930224e+25, 2.0465030012930224e+25, 2.0465030012930224e+25, 2.0465030012930224e+25, 2.0465030012930224e+25, 2.0465030012930224e+25], "val_accuracy": [0.1586666703224182, 0.1586666703224182, 0.1586666703224182, 0.1586666703224182, 0.1586666703224182, 0.1586666703224182]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 3], [0, 1, 1, 0, 2, 1], [18, 40, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [5], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha), alpha), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3039767742156982, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2, 0, 0, 1, 7, 8, 2, 4, 8, 6, 1, 2], [0, 3, 1, 0, 2, 0, 3, 0, 2, 1, 0, 1, 3], [0, 89, 39, 70, 31], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [4], [0], [1], [0], [2], [0]], "fitness": -0.08057142794132233, "mapping_values": [1, 31, 18, 13, 5, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))))))), tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.subtract(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.2647113171140608e+16, 1.5491951331639296e+16, 1.498492077867008e+16, 1.497149363716096e+16, 1.527565248364544e+16, 1.5578929788092416e+16], "accuracy": [0.09655263274908066, 0.09589222073554993, 0.10355303436517715, 0.09391097724437714, 0.09391097724437714, 0.09840179979801178], "val_loss": [1.4708322737324032e+16, 1.4708322737324032e+16, 1.4708322737324032e+16, 1.4708322737324032e+16, 1.4708322737324032e+16, 1.4708322737324032e+16], "val_accuracy": [0.07433333247900009, 0.07433333247900009, 0.07433333247900009, 0.07433333247900009, 0.07433333247900009, 0.07433333247900009]}}]