[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8057143092155457, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21134614944458, 1.6062302589416504, 1.1519204378128052, 0.9691674113273621, 0.8908741474151611, 0.8088924884796143, 0.7965559363365173, 0.7570080757141113, 0.7443240284919739, 0.7194797992706299, 0.6868079900741577, 0.6787996292114258, 0.660020649433136, 0.6410129070281982, 0.6474781036376953, 0.6301998496055603, 0.6036403775215149, 0.6068733930587769, 0.5948324203491211, 0.5920576453208923, 0.5718026757240295, 0.5605081915855408, 0.570631206035614, 0.558150589466095, 0.5489006638526917, 0.5306392908096313, 0.5331082344055176, 0.519982099533081, 0.5159353017807007, 0.5190063714981079, 0.4980698525905609, 0.5064326524734497, 0.48702526092529297], "accuracy": [0.26297715306282043, 0.5021793842315674, 0.5893540978431702, 0.6485272645950317, 0.6806234121322632, 0.7045304179191589, 0.7082287669181824, 0.7206445932388306, 0.7217012047767639, 0.7339849472045898, 0.7456082701683044, 0.7461365461349487, 0.7544577717781067, 0.7650244235992432, 0.7557786107063293, 0.7652885913848877, 0.7770439982414246, 0.7744023203849792, 0.7759873270988464, 0.7766477465629578, 0.7884030938148499, 0.7903843522071838, 0.7887993454933167, 0.7895918488502502, 0.7967243194580078, 0.7996301651000977, 0.8039889335632324, 0.8037247657775879, 0.8076872229576111, 0.8090080618858337, 0.8149517774581909, 0.8101968169212341, 0.8256505131721497], "val_loss": [1.923147439956665, 1.0922272205352783, 0.8671690225601196, 0.9381824731826782, 0.7214751243591309, 0.7208812832832336, 0.7025393843650818, 0.6617440581321716, 0.6360563635826111, 0.6103776097297668, 0.6088986992835999, 0.6354754567146301, 0.5799145698547363, 0.5808089375495911, 0.5921398997306824, 0.5473913550376892, 0.5629933476448059, 0.5271785259246826, 0.5579069256782532, 0.493255615234375, 0.5073294043540955, 0.48864978551864624, 0.5041343569755554, 0.48646512627601624, 0.48419347405433655, 0.4667956531047821, 0.4618993401527405, 0.45480695366859436, 0.4539424180984497, 0.4594326913356781, 0.46547314524650574, 0.4427364468574524, 0.4578799605369568], "val_accuracy": [0.5590000152587891, 0.6740000247955322, 0.6996666789054871, 0.6639999747276306, 0.7149999737739563, 0.7213333249092102, 0.7253333330154419, 0.7419999837875366, 0.7553333044052124, 0.7613333463668823, 0.7696666717529297, 0.7546666860580444, 0.7786666750907898, 0.7806666493415833, 0.7829999923706055, 0.8029999732971191, 0.781333327293396, 0.8026666641235352, 0.7799999713897705, 0.8163333535194397, 0.8116666674613953, 0.8193333148956299, 0.7990000247955322, 0.8233333230018616, 0.8259999752044678, 0.8306666612625122, 0.8323333263397217, 0.8410000205039978, 0.8403333425521851, 0.8360000252723694, 0.8270000219345093, 0.8396666646003723, 0.8266666531562805]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5], [0, 0, 1, 0, 2], [0, 39, 16], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 3], [16, 37], [0, 1], [0], [0], [0], [1], [0], [1], [0]], "fitness": -0.15857142210006714, "mapping_values": [1, 12, 7, 5, 3, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.6958749294281006, 2.3716094493865967, 2.4552600383758545, 2.3585546016693115, 2.3467812538146973, 2.352614402770996, 2.367652416229248], "accuracy": [0.22652225196361542, 0.11213842034339905, 0.11795007437467575, 0.1006472036242485, 0.09642054885625839, 0.1006472036242485, 0.1026284471154213], "val_loss": [2.3573873043060303, 2.278289318084717, 2.333645820617676, 2.3789291381835938, 2.393010377883911, 2.3546302318573, 2.3138351440429688], "val_accuracy": [0.15166667103767395, 0.15966667234897614, 0.10000000149011612, 0.10166666656732559, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 6, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 95, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 6, 3, 8, 2, 3, 9, 3, 9], [2, 0, 3, 5, 0], [16, 37, 27, 44], [0, 1], [0], [6], [0], [0, 0, 1], [0, 5], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 16, 11, 5, 4, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(grad, tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [2, 3, 5, 1, 0, 0], [16, 37], [0, 1, 0, 1], [2, 8], [0, 3], [0], [1], [0], [3], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 2, 1, 1, 1, 13, 7, 6, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(grad, alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3110854625701904, 2.309370756149292, 2.311577081680298, 2.3098490238189697, 2.3104379177093506, 2.309190273284912], "accuracy": [0.09206181764602661, 0.08981640636920929, 0.08770307898521423, 0.08955223858356476, 0.09259014576673508, 0.0952318087220192], "val_loss": [2.3083062171936035, 2.3083062171936035, 2.3083062171936035, 2.3083062171936035, 2.3083062171936035, 2.3083062171936035], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 4], [0, 0, 2, 0, 2], [95, 39, 39], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [21, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310743570327759, 2.309407949447632, 2.3112282752990723, 2.3092665672302246, 2.310161828994751, 2.309298038482666], "accuracy": [0.0948355570435524, 0.09760929644107819, 0.08598599582910538, 0.09734513610601425, 0.09166556596755981, 0.09391097724437714], "val_loss": [2.3090410232543945, 2.3090410232543945, 2.3090410232543945, 2.3090410232543945, 2.3090410232543945, 2.3090410232543945], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]