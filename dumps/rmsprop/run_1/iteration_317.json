[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8240000009536743, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.216794729232788, 1.6284905672073364, 1.1352851390838623, 0.9744797945022583, 0.9044786095619202, 0.8406009674072266, 0.7771934270858765, 0.7759592533111572, 0.7289420366287231, 0.7085980772972107, 0.7130420804023743, 0.675258994102478, 0.6632158756256104, 0.6258479356765747, 0.6294466257095337, 0.5965791940689087, 0.6224195957183838, 0.6012253165245056, 0.5936216711997986, 0.573937714099884, 0.5744611620903015, 0.5565077066421509, 0.5385227799415588, 0.5601974129676819, 0.5394303202629089, 0.5315238237380981, 0.5244123339653015, 0.5171095132827759, 0.5136622786521912, 0.510399580001831, 0.49371984601020813, 0.5077632665634155, 0.4918431043624878, 0.4930572807788849, 0.47771304845809937, 0.4821627140045166, 0.46156108379364014, 0.47206124663352966, 0.45937424898147583, 0.4543960392475128, 0.4514201283454895, 0.45420756936073303, 0.44700610637664795, 0.4515213072299957, 0.4342328906059265, 0.4330136477947235, 0.44255682826042175, 0.4253120720386505, 0.4270024299621582, 0.4198647141456604], "accuracy": [0.25320300459861755, 0.49966979026794434, 0.5988640785217285, 0.6458855867385864, 0.6767930388450623, 0.6909258961677551, 0.7150970697402954, 0.7143045663833618, 0.7252674698829651, 0.735041618347168, 0.72672039270401, 0.750759482383728, 0.7510236501693726, 0.767930269241333, 0.7617223858833313, 0.7770439982414246, 0.7662131786346436, 0.7778365015983582, 0.7773081660270691, 0.7837802171707153, 0.7854973077774048, 0.7948752045631409, 0.8004226684570312, 0.7886672616004944, 0.8020076751708984, 0.8045172095298767, 0.8043851256370544, 0.8058380484580994, 0.8098005652427673, 0.8128384351730347, 0.8177255392074585, 0.8120459914207458, 0.8169330358505249, 0.8186501264572144, 0.82683926820755, 0.8190463781356812, 0.8319904804229736, 0.82683926820755, 0.8294808864593506, 0.8289526104927063, 0.8354246616363525, 0.8313300609588623, 0.835160493850708, 0.8366134166717529, 0.8404437899589539, 0.8446704745292664, 0.834632158279419, 0.8417646288871765, 0.8417646288871765, 0.843481719493866], "val_loss": [1.9410537481307983, 1.1171107292175293, 0.8534854054450989, 0.7889277935028076, 0.7428044676780701, 0.6781463027000427, 0.727554202079773, 0.6667009592056274, 0.6877813935279846, 0.6041622757911682, 0.621205747127533, 0.6004791855812073, 0.5864217281341553, 0.5880172252655029, 0.5460165143013, 0.5603652596473694, 0.5493845343589783, 0.5263763666152954, 0.5386171340942383, 0.5292547941207886, 0.5343561768531799, 0.49637550115585327, 0.49473512172698975, 0.49726977944374084, 0.5091680288314819, 0.4820878505706787, 0.4814983010292053, 0.49411624670028687, 0.48322534561157227, 0.4776829481124878, 0.4723057448863983, 0.4762347936630249, 0.4582989513874054, 0.4618992805480957, 0.4479128420352936, 0.45043522119522095, 0.4437185525894165, 0.44913551211357117, 0.44959408044815063, 0.43322116136550903, 0.42825180292129517, 0.44875332713127136, 0.43560791015625, 0.4181358516216278, 0.42182624340057373, 0.4254598021507263, 0.4226059019565582, 0.4235994517803192, 0.4323493540287018, 0.41938337683677673], "val_accuracy": [0.5546666383743286, 0.6470000147819519, 0.7073333263397217, 0.7066666483879089, 0.7239999771118164, 0.7543333172798157, 0.7303333282470703, 0.7576666474342346, 0.7223333120346069, 0.777999997138977, 0.7633333206176758, 0.7746666669845581, 0.7726666927337646, 0.7743333578109741, 0.800000011920929, 0.7910000085830688, 0.7940000295639038, 0.8063333630561829, 0.7983333468437195, 0.8003333210945129, 0.8016666769981384, 0.8226666450500488, 0.8153333067893982, 0.8176666498184204, 0.8036666512489319, 0.8246666789054871, 0.815666675567627, 0.8190000057220459, 0.8216666579246521, 0.8246666789054871, 0.8273333311080933, 0.8253333568572998, 0.831333339214325, 0.8186666369438171, 0.8326666951179504, 0.8426666855812073, 0.8456666469573975, 0.8373333215713501, 0.8410000205039978, 0.8460000157356262, 0.8420000076293945, 0.8420000076293945, 0.8460000157356262, 0.8529999852180481, 0.8553333282470703, 0.8379999995231628, 0.8476666808128357, 0.8523333072662354, 0.8473333120346069, 0.8489999771118164]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5, 4, 6, 8, 5, 0, 1, 8, 6, 6, 3, 1, 1, 6, 1, 7, 8, 8, 9, 3, 5, 6, 1, 4, 1, 6, 2, 7, 8, 2, 1, 5, 5, 9, 2, 3, 0, 4, 5, 1, 5, 7, 3, 2, 3, 8, 5, 8], [0, 0, 1, 0, 2, 2, 3, 1, 1, 1, 3, 1, 3, 0, 2, 3, 0, 1, 3, 1, 2, 1, 3, 0, 0, 3, 1, 0, 3, 1, 0, 2], [0, 39, 39, 61, 8, 42, 20, 38, 66, 28, 83], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 0, 6, 3, 2, 2], [2, 0, 4, 5, 0], [87, 37], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 2, 2, 1, 0, 5, 9, 8, 4, 7, 5], [6, 5, 2, 3, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 85, 53, 32, 11, 8, 4, 4, 1, 18, 12, 6, 1, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(alpha, grad)), alpha), grad), tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.sqrt(tf.math.add(grad, tf.math.subtract(tf.math.square(tf.math.square(alpha)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.math.multiply(alpha, grad))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.pow(tf.math.square(tf.math.subtract(tf.math.square(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad)), alpha)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.multiply(grad, tf.math.add(tf.math.multiply(alpha, tf.math.sqrt(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.square(grad)), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.square(sigma)), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030991554260254, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 3, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.2890059324639297e+34, 3028.268798828125, 780427.875, 198444432.0, 51046445056.0, 12942328201216.0], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [133.93275451660156, 29437.51953125, 7518985.0, 1924828032.0, 492755976192.0, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [2], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 7, 4, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089702129364014, 2.3101751804351807, 2.3094849586486816, 2.310089111328125, 2.309462547302246, 2.3099751472473145], "accuracy": [0.09391097724437714, 0.09285431355237961, 0.09192973375320435, 0.08796724677085876, 0.09391097724437714, 0.09232597798109055], "val_loss": [2.3087997436523438, 2.3087997436523438, 2.3087997436523438, 2.3087997436523438, 2.3087997436523438, 2.3087997436523438], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [62, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101654052734375, 2.310385227203369, 2.3099377155303955, 2.3097317218780518, 2.30959415435791, 2.309814214706421], "accuracy": [0.09021265059709549, 0.09325055778026581, 0.09206181764602661, 0.09536388516426086, 0.09338264167308807, 0.09245806187391281], "val_loss": [2.3082380294799805, 2.3082380294799805, 2.3082380294799805, 2.3082380294799805, 2.3082380294799805, 2.3082380294799805], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]