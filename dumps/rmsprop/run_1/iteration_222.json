[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8154285550117493, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212139368057251, 1.6088842153549194, 1.1403981447219849, 0.9502977728843689, 0.8709002137184143, 0.8321642875671387, 0.7844260931015015, 0.7643648386001587, 0.7383383512496948, 0.6831698417663574, 0.6747435927391052, 0.6526772975921631, 0.6515735387802124, 0.6324936151504517, 0.615810215473175, 0.6183831095695496, 0.5922930836677551, 0.5759353637695312, 0.5632326006889343, 0.5692569613456726, 0.5478322505950928, 0.5529707074165344, 0.540901780128479, 0.5252426862716675, 0.5090363025665283, 0.5135359764099121, 0.5132407546043396, 0.5034558176994324, 0.5000635981559753, 0.49477237462997437, 0.48197340965270996, 0.48577797412872314, 0.47016778588294983, 0.4652458429336548, 0.4596262276172638, 0.45618852972984314], "accuracy": [0.2650904655456543, 0.5101043581962585, 0.6045436263084412, 0.6601505875587463, 0.6806234121322632, 0.6950204968452454, 0.7043983340263367, 0.7193237543106079, 0.7264562249183655, 0.7449478507041931, 0.7460044622421265, 0.7573636174201965, 0.7557786107063293, 0.7637035846710205, 0.7697794437408447, 0.7666094303131104, 0.778761088848114, 0.7853652238845825, 0.7872143983840942, 0.7891955971717834, 0.7980451583862305, 0.7947431206703186, 0.7977809906005859, 0.8039889335632324, 0.8095363974571228, 0.8119139075279236, 0.81112140417099, 0.8121780753135681, 0.8141592741012573, 0.8158763647079468, 0.8202351331710815, 0.8216879963874817, 0.8267071843147278, 0.8297450542449951, 0.8335754871368408, 0.832650899887085], "val_loss": [1.9225704669952393, 1.0870890617370605, 0.916615903377533, 0.7830681204795837, 0.8155414462089539, 0.6852959990501404, 0.7547188401222229, 0.6548811197280884, 0.6319698095321655, 0.6054282784461975, 0.6076268553733826, 0.5630264282226562, 0.566209614276886, 0.5496186017990112, 0.5714696049690247, 0.5456904172897339, 0.5184524059295654, 0.5052636861801147, 0.530653715133667, 0.5044541954994202, 0.4970804750919342, 0.5270368456840515, 0.48385104537010193, 0.4793679714202881, 0.46356427669525146, 0.48254573345184326, 0.48456090688705444, 0.47291579842567444, 0.4741468131542206, 0.44617322087287903, 0.45582684874534607, 0.4894973933696747, 0.45723772048950195, 0.43944934010505676, 0.42859265208244324, 0.4460374414920807], "val_accuracy": [0.5946666598320007, 0.6683333516120911, 0.6806666851043701, 0.7133333086967468, 0.6880000233650208, 0.7369999885559082, 0.7099999785423279, 0.75, 0.7509999871253967, 0.7689999938011169, 0.7566666603088379, 0.7940000295639038, 0.7886666655540466, 0.7913333177566528, 0.7766666412353516, 0.7906666398048401, 0.8016666769981384, 0.8220000267028809, 0.7896666526794434, 0.8159999847412109, 0.8266666531562805, 0.796999990940094, 0.8246666789054871, 0.8209999799728394, 0.8326666951179504, 0.8176666498184204, 0.8193333148956299, 0.8246666789054871, 0.8166666626930237, 0.8339999914169312, 0.8389999866485596, 0.8086666464805603, 0.8243333101272583, 0.8343333601951599, 0.8346666693687439, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 3, 4], [1, 0, 1, 0, 2], [0, 16, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1, 0, 0, 1, 0, 1, 1], [6, 7, 5, 4], [6, 1, 7, 1], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 1, 9, 5, 4, 1, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(alpha), tf.math.pow(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100128173828125, 2.309511184692383, 2.310858726501465, 2.309028387069702, 2.3094327449798584, 2.310336112976074], "accuracy": [0.09021265059709549, 0.09417514503002167, 0.0878351628780365, 0.09549596905708313, 0.09826971590518951, 0.08730682730674744], "val_loss": [2.309110403060913, 2.309110403060913, 2.309110403060913, 2.309110403060913, 2.309110403060913, 2.309110403060913], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099217414855957, 2.3102309703826904, 2.310361623764038, 2.3104491233825684, 2.309190273284912, 2.3095180988311768], "accuracy": [0.09219389408826828, 0.08836349099874496, 0.09060890227556229, 0.09087307006120682, 0.0944393053650856, 0.09391097724437714], "val_loss": [2.309107780456543, 2.309107780456543, 2.309107780456543, 2.309107780456543, 2.309107780456543, 2.309107780456543], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [5, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 1, 1], [0, 2, 3], [6, 0, 0], [0, 62], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309471607208252, 2.3100030422210693, 2.3091909885406494, 2.3104960918426514, 2.310293436050415, 2.310131311416626], "accuracy": [0.09615638852119446, 0.09060890227556229, 0.09391097724437714, 0.08809932321310043, 0.09708096832036972, 0.09311848133802414], "val_loss": [2.3092122077941895, 2.3092122077941895, 2.3092122077941895, 2.3092122077941895, 2.3092122077941895, 2.3092122077941895], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 3, 5], [1, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 8, 5, 2], [2, 1, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 1, 1], [0, 6], [2, 6], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 2, 1, 1, 0, 8, 4, 4, 0, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(alpha, grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, grad))", "other_info": {"loss": [2.3099067211151123, 2.3094708919525146, 2.31093168258667, 2.3091752529144287, 2.3108174800872803, 2.310487747192383], "accuracy": [0.08889182657003403, 0.09470347315073013, 0.09351472556591034, 0.09787346422672272, 0.08611807972192764, 0.09338264167308807], "val_loss": [2.3088181018829346, 2.3088181018829346, 2.3088181018829346, 2.3088181018829346, 2.3088181018829346, 2.3088181018829346], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]