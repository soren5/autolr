[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7948571443557739, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103071212768555, 1.604671597480774, 1.1641958951950073, 0.9878988862037659, 0.8966320753097534, 0.8776394724845886, 0.7948881983757019, 0.7557526230812073, 0.7427927851676941, 0.7273038625717163, 0.6838611960411072, 0.6763715744018555, 0.678091824054718, 0.6425593495368958, 0.6318507194519043, 0.6239910125732422, 0.6022121906280518], "accuracy": [0.26337340474128723, 0.5017831325531006, 0.5879011750221252, 0.6527539491653442, 0.6789063811302185, 0.6836613416671753, 0.7102100253105164, 0.7280412316322327, 0.7251353859901428, 0.7327961921691895, 0.7526086568832397, 0.7485140562057495, 0.7466648817062378, 0.7647602558135986, 0.7729493975639343, 0.7688548564910889, 0.7758552432060242], "val_loss": [1.9219735860824585, 1.109790325164795, 0.891656756401062, 0.7810657620429993, 0.7248359322547913, 0.6964096426963806, 0.7286649346351624, 0.6573120951652527, 0.6305197477340698, 0.5950362682342529, 0.5991360545158386, 0.5506789684295654, 0.5807626843452454, 0.5841578245162964, 0.5389599800109863, 0.5404813885688782, 0.5433412194252014], "val_accuracy": [0.621666669845581, 0.6186666488647461, 0.6779999732971191, 0.7110000252723694, 0.7266666889190674, 0.7333333492279053, 0.749666690826416, 0.7540000081062317, 0.7556666731834412, 0.765666663646698, 0.7710000276565552, 0.8050000071525574, 0.7699999809265137, 0.7799999713897705, 0.7916666865348816, 0.7866666913032532, 0.7829999923706055]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 3, 1, 3, 5, 3, 6, 1, 4, 4, 3, 3, 5, 6, 3, 5, 3, 4, 5, 6, 5, 6, 5, 3, 7, 6, 4, 0, 9, 0, 8, 9, 6, 5, 3], [1, 0, 1, 0, 2, 3, 3, 1, 1, 2, 0, 3, 0, 0, 3, 0, 1, 2, 0, 0, 2, 0, 0], [0, 11, 39, 33, 69, 38, 42, 89, 31, 3, 25, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1], [0, 8], [0], [48], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 59, 36, 23, 12, 7, 4, 3, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(tf.math.multiply(tf.math.pow(tf.math.square(grad), alpha), tf.math.divide_no_nan(alpha, tf.math.square(grad))))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), grad))))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1344012170559488.0, 1481534607458304.0, 1523713736441856.0, 1501289443753984.0, 1510585766248448.0, 1538504395849728.0], "accuracy": [0.09192973375320435, 0.09272222965955734, 0.09179764986038208, 0.09536388516426086, 0.0944393053650856, 0.09760929644107819], "val_loss": [1470403931275264.0, 1470403931275264.0, 1470403931275264.0, 1470554255130624.0, 1470554255130624.0, 1470554255130624.0], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 1, 7, 5, 9], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30362868309021, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 5, 3, 1, 3, 3], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [8], [6], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 5, 3, 2, 2, 9, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110194206237793, 2.309882402420044, 2.3098318576812744, 2.3109114170074463, 2.3111777305603027, 2.3092000484466553], "accuracy": [0.09351472556591034, 0.09206181764602661, 0.09338264167308807, 0.09100515395402908, 0.0878351628780365, 0.09021265059709549], "val_loss": [2.308720350265503, 2.308720350265503, 2.308720350265503, 2.308720350265503, 2.308720350265503, 2.308720350265503], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 0], [0, 9, 39, 23], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 6, 5, 4, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309216022491455, 2.3093509674072266, 2.307992458343506, 2.3101160526275635, 2.309451103210449, 2.309821128845215], "accuracy": [0.09668471664190292, 0.09192973375320435, 0.09800554811954498, 0.09734513610601425, 0.09655263274908066, 0.0936468094587326], "val_loss": [2.308079481124878, 2.308079481124878, 2.308079481124878, 2.308079481124878, 2.308079481124878, 2.308079481124878], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]