[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2138490676879883, 1.6289119720458984, 1.1530048847198486, 1.0224484205245972, 0.9216241836547852, 0.8594232201576233, 0.8148316144943237, 0.7754825949668884, 0.7426661252975464, 0.7359300851821899, 0.697659432888031, 0.6781237125396729, 0.6632112860679626, 0.6612799167633057, 0.6460680961608887, 0.6526735424995422, 0.6198962330818176, 0.6020596027374268, 0.6110976934432983, 0.5914603471755981, 0.575009822845459, 0.5736654996871948, 0.556066632270813, 0.5516250133514404, 0.5576289892196655, 0.5413280725479126, 0.530593991279602, 0.521323561668396, 0.5222994685173035], "accuracy": [0.26535463333129883, 0.49253731966018677, 0.5984678268432617, 0.6301677227020264, 0.6630563735961914, 0.6906617283821106, 0.705058753490448, 0.7150970697402954, 0.7215691208839417, 0.724210798740387, 0.735569953918457, 0.7440232634544373, 0.7491744756698608, 0.7543256878852844, 0.7565711140632629, 0.7531369924545288, 0.7689869403839111, 0.7763835787773132, 0.7730814814567566, 0.7839123010635376, 0.7881389260292053, 0.7872143983840942, 0.7948752045631409, 0.7921014428138733, 0.7927618622779846, 0.8053097128868103, 0.8050455451011658, 0.8025360107421875, 0.8074230551719666], "val_loss": [1.9263476133346558, 1.1190776824951172, 0.9385496377944946, 0.7891080975532532, 0.7267354130744934, 0.683735191822052, 0.7119240760803223, 0.6366392970085144, 0.6136782765388489, 0.5977676510810852, 0.5746816396713257, 0.5768381953239441, 0.5721585750579834, 0.5739257335662842, 0.5657591223716736, 0.5313392877578735, 0.5740549564361572, 0.5560476183891296, 0.5767058730125427, 0.5192663669586182, 0.506347119808197, 0.5090460777282715, 0.5049650073051453, 0.48074430227279663, 0.487480103969574, 0.47483205795288086, 0.48024842143058777, 0.4756225049495697, 0.47942814230918884], "val_accuracy": [0.6183333396911621, 0.625, 0.6496666669845581, 0.7023333311080933, 0.7409999966621399, 0.7326666712760925, 0.7226666808128357, 0.7616666555404663, 0.765666663646698, 0.7706666588783264, 0.7823333144187927, 0.7839999794960022, 0.778333306312561, 0.7743333578109741, 0.7739999890327454, 0.7910000085830688, 0.7773333191871643, 0.7770000100135803, 0.7706666588783264, 0.800000011920929, 0.8056666851043701, 0.8050000071525574, 0.8080000281333923, 0.8223333358764648, 0.8180000185966492, 0.8193333148956299, 0.8196666836738586, 0.8190000057220459, 0.8213333487510681]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 3, 1, 3, 0], [0, 0, 1, 2, 2, 2], [0, 39, 76], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 9, 6], [0, 0, 1, 3, 1], [0, 39, 54], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 0, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 5, 3, 2, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 0, 1, 3, 5, 9], [0, 0, 1, 0, 3], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1], [0, 0], [7], [0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 5, 7, 5, 4, 8, 1, 4, 9, 6, 1, 6, 7, 8, 9, 7, 5, 4, 1, 7, 9], [2, 6, 1, 1, 1, 2, 2, 1, 2, 0], [0, 71, 56, 79]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 1, 0, 1, 0, 3, 2, 1, 0, 31, 21, 10, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.pow(beta, grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), alpha), alpha), tf.math.add(beta, tf.math.square(beta)))))), tf.math.pow(alpha, tf.math.subtract(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9, 3, 9], [0, 0, 1, 0, 2], [47, 39, 39, 6, 52], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [9], [6], [0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 7, 6, 1, 6, 7], [4, 3, 6, 6, 6, 0, 6], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 13, 9, 4, 5, 11, 6, 5, 2, 1, 1, 0, 1, 14, 7, 7, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(grad, tf.math.divide_no_nan(tf.math.subtract(sigma, grad), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad))", "other_info": {"loss": [2.3101775646209717, 2.3101248741149902, 2.309609889984131, 2.3097116947174072, 2.309558391571045, 2.3109030723571777], "accuracy": [0.09430722147226334, 0.09338264167308807, 0.09245806187391281, 0.09192973375320435, 0.09377889335155487, 0.09126931428909302], "val_loss": [2.3090643882751465, 2.3090643882751465, 2.3090643882751465, 2.3090643882751465, 2.3090643882751465, 2.3090643882751465], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]