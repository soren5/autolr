[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208921432495117, 1.5896366834640503, 1.1312187910079956, 0.9597179293632507, 0.8851120471954346, 0.814605712890625, 0.7866069078445435, 0.7319886088371277, 0.7188566327095032, 0.6893123984336853, 0.6628997325897217, 0.6589348912239075, 0.6252256631851196, 0.6386981010437012, 0.6125827431678772, 0.6004586219787598, 0.5896217226982117, 0.5792672634124756, 0.5832701325416565, 0.5482577681541443, 0.5481053590774536, 0.5385220050811768, 0.5241219401359558, 0.5231407284736633, 0.5228131413459778, 0.5188502669334412, 0.5054389834403992, 0.4912068545818329, 0.4889364540576935, 0.47826436161994934, 0.4795161187648773, 0.4822957515716553], "accuracy": [0.2650904655456543, 0.5048210024833679, 0.6004490852355957, 0.6565843224525452, 0.6761326193809509, 0.702681303024292, 0.7106062769889832, 0.7279091477394104, 0.7323999404907227, 0.7430986762046814, 0.7490423917770386, 0.7569673657417297, 0.7712323069572449, 0.7565711140632629, 0.7717606425285339, 0.77677983045578, 0.7779685854911804, 0.7864218950271606, 0.7773081660270691, 0.8006868362426758, 0.7948752045631409, 0.7979130744934082, 0.8029322624206543, 0.8063663840293884, 0.8035926818847656, 0.8090080618858337, 0.8094043135643005, 0.8206313848495483, 0.8219521641731262, 0.8232730031013489, 0.8215559124946594, 0.8171972036361694], "val_loss": [1.9138144254684448, 1.1574959754943848, 0.8424882888793945, 0.8024361729621887, 0.7548893094062805, 0.6889792680740356, 0.6715547442436218, 0.6793450713157654, 0.6300621628761292, 0.6080073118209839, 0.5943010449409485, 0.5848284959793091, 0.595185399055481, 0.5546578764915466, 0.5594841837882996, 0.5518420338630676, 0.5494524836540222, 0.5736246705055237, 0.5396595597267151, 0.5176053047180176, 0.5062139630317688, 0.5020505785942078, 0.4866023063659668, 0.4917697310447693, 0.4732859432697296, 0.4705554246902466, 0.4672815203666687, 0.4612368941307068, 0.45967936515808105, 0.46676281094551086, 0.45427295565605164, 0.4494512677192688], "val_accuracy": [0.5770000219345093, 0.5893333554267883, 0.7093333601951599, 0.6869999766349792, 0.7170000076293945, 0.7260000109672546, 0.7459999918937683, 0.7239999771118164, 0.7526666522026062, 0.7676666378974915, 0.7710000276565552, 0.7756666541099548, 0.7789999842643738, 0.7963333129882812, 0.7883333563804626, 0.7896666526794434, 0.7940000295639038, 0.7720000147819519, 0.8023333549499512, 0.8013333082199097, 0.8136666417121887, 0.8133333325386047, 0.8199999928474426, 0.8116666674613953, 0.8176666498184204, 0.8199999928474426, 0.8336666822433472, 0.8296666741371155, 0.8246666789054871, 0.8246666789054871, 0.8306666612625122, 0.8299999833106995]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [5, 0, 3, 5, 0], [51, 37], [0, 1], [0], [1], [0], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad)), grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 6, 6, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 8, 7], [6, 4, 2, 0], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.sqrt(grad), grad), tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104400634765625, 2.310406446456909, 2.311185359954834, 2.3099238872528076, 2.3108739852905273, 2.309323787689209], "accuracy": [0.09285431355237961, 0.08611807972192764, 0.09192973375320435, 0.09008057415485382, 0.09087307006120682, 0.09166556596755981], "val_loss": [2.3085222244262695, 2.3085222244262695, 2.3085222244262695, 2.3085222244262695, 2.3085222244262695, 2.3085222244262695], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [4, 2, 3, 7, 4, 5], [3, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 0, 6, 3, 8, 2], [2, 2, 1, 0, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 0, 11, 6, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, alpha), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103084564208984, 2.3106603622436523, 2.309159278869629, 2.309947967529297, 2.3097376823425293, 2.311295986175537], "accuracy": [0.08809932321310043, 0.0944393053650856, 0.09430722147226334, 0.08809932321310043, 0.09259014576673508, 0.0882314071059227], "val_loss": [2.3087520599365234, 2.3087520599365234, 2.3087520599365234, 2.3087520599365234, 2.3087520599365234, 2.3087520599365234], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 7, 5, 5], [0, 0, 1, 0, 2, 0], [0, 39, 39, 29], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 15, 9, 6, 4, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3109967708587646, 2.3107547760009766, 2.309640884399414, 2.31071138381958, 2.3109257221221924, 2.309751272201538], "accuracy": [0.0866464152932167, 0.08796724677085876, 0.08902391046285629, 0.09628847241401672, 0.09113723784685135, 0.09391097724437714], "val_loss": [2.308573007583618, 2.308573007583618, 2.308573007583618, 2.308573007583618, 2.308573007583618, 2.308573007583618], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]