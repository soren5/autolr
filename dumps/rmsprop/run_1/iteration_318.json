[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2125964164733887, 1.6092817783355713, 1.1548703908920288, 0.9801159501075745, 0.8948279023170471, 0.8173258900642395, 0.7661594748497009, 0.7660794854164124, 0.7124618887901306, 0.719629168510437, 0.6717028021812439, 0.6607273817062378, 0.6813574433326721, 0.6365250945091248, 0.6197085380554199, 0.6037955284118652, 0.6168232560157776, 0.588886022567749, 0.5899763107299805, 0.5616152286529541, 0.5645756125450134, 0.5533432960510254, 0.559066653251648, 0.5373701453208923, 0.5315980911254883, 0.5220960974693298, 0.5152153968811035, 0.515003502368927, 0.4991871118545532, 0.5035162568092346, 0.479220986366272, 0.49288877844810486, 0.4789930284023285, 0.47334355115890503, 0.48025766015052795, 0.4667321443557739, 0.4676871597766876, 0.4593007564544678, 0.45447850227355957, 0.44163137674331665, 0.4422415792942047, 0.43573474884033203, 0.43460506200790405, 0.4457133412361145, 0.4327544569969177, 0.4298395812511444, 0.42201560735702515], "accuracy": [0.26522254943847656, 0.5112931132316589, 0.5904107689857483, 0.6573768258094788, 0.6787742972373962, 0.7049266695976257, 0.7194558382034302, 0.7235503792762756, 0.7423061728477478, 0.7354378700256348, 0.7576277852058411, 0.7514199018478394, 0.7483819723129272, 0.763439416885376, 0.7692511081695557, 0.7815347909927368, 0.7718927264213562, 0.7821952104568481, 0.7810064554214478, 0.7926297783851624, 0.7861577272415161, 0.7989697456359863, 0.7913089394569397, 0.8014793395996094, 0.8039889335632324, 0.8082155585289001, 0.8138951063156128, 0.8100647330284119, 0.819970965385437, 0.8137630224227905, 0.8272355198860168, 0.819970965385437, 0.8249900937080383, 0.8265751004219055, 0.8236692547798157, 0.8301413059234619, 0.8345000743865967, 0.8339717388153076, 0.8335754871368408, 0.8385946154594421, 0.8374059200286865, 0.8430854678153992, 0.8418967127799988, 0.8391229510307312, 0.8416325449943542, 0.8393871188163757, 0.8469158411026001], "val_loss": [1.9273121356964111, 1.1055736541748047, 0.9313632845878601, 0.7996583580970764, 0.7266517877578735, 0.6669281125068665, 0.669437825679779, 0.6278182864189148, 0.5870657563209534, 0.594230055809021, 0.6291709542274475, 0.5875781774520874, 0.5525693297386169, 0.5781229734420776, 0.5202654600143433, 0.5292173027992249, 0.5015568137168884, 0.5529927015304565, 0.5034933090209961, 0.4968448877334595, 0.4824683368206024, 0.5077899098396301, 0.4747907817363739, 0.4955044686794281, 0.46146318316459656, 0.45881161093711853, 0.4564592242240906, 0.4561213254928589, 0.4409177303314209, 0.44386982917785645, 0.4512445330619812, 0.4381716251373291, 0.4318041205406189, 0.4427359104156494, 0.43260908126831055, 0.42083558440208435, 0.4185129404067993, 0.41755223274230957, 0.41837891936302185, 0.4133409857749939, 0.4112687110900879, 0.40941354632377625, 0.408409059047699, 0.40277189016342163, 0.4055493175983429, 0.40595582127571106, 0.4036232531070709], "val_accuracy": [0.5389999747276306, 0.6353333592414856, 0.6830000281333923, 0.7056666612625122, 0.7363333106040955, 0.7526666522026062, 0.7556666731834412, 0.777999997138977, 0.7829999923706055, 0.7886666655540466, 0.7580000162124634, 0.7770000100135803, 0.7986666560173035, 0.7823333144187927, 0.8066666722297668, 0.812333345413208, 0.815666675567627, 0.7793333530426025, 0.812333345413208, 0.8026666641235352, 0.831333339214325, 0.8113333582878113, 0.8286666870117188, 0.8206666707992554, 0.8326666951179504, 0.8309999704360962, 0.8363333344459534, 0.8443333506584167, 0.8413333296775818, 0.8373333215713501, 0.8379999995231628, 0.8370000123977661, 0.8516666889190674, 0.8456666469573975, 0.843999981880188, 0.8513333201408386, 0.8533333539962769, 0.8550000190734863, 0.8473333120346069, 0.856333315372467, 0.8519999980926514, 0.8566666841506958, 0.8550000190734863, 0.8566666841506958, 0.8529999852180481, 0.8529999852180481, 0.8560000061988831]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 2, 3, 1, 0, 5], [0, 0, 1, 0, 2], [0, 39, 64], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.17914286255836487, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.284813642501831, 2.33467960357666, 2.3565688133239746, 2.3058574199676514, 2.303321123123169, 2.302940607070923], "accuracy": [0.21080438792705536, 0.19561484456062317, 0.14278165996074677, 0.09721305221319199, 0.09959053993225098, 0.09232597798109055], "val_loss": [2.2365243434906006, 2.2965269088745117, 2.3083605766296387, 2.304016590118408, 2.302934408187866, 2.302623987197876], "val_accuracy": [0.1809999942779541, 0.1783333271741867, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 8, 1, 3, 5, 3, 0, 5], [0, 0, 1, 0, 2], [46, 39, 22], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 9, 4, 3, 8, 2], [4, 0, 3, 3, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 3, 10, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1], [0, 8], [7], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3111412525177, 2.309636116027832, 2.3099377155303955, 2.3103761672973633, 2.3092877864837646, 2.3098807334899902], "accuracy": [0.08506141602993011, 0.09047681838274002, 0.08994849026203156, 0.09126931428909302, 0.09219389408826828, 0.09298639744520187], "val_loss": [2.3091068267822266, 2.3091068267822266, 2.3091068267822266, 2.3091068267822266, 2.3091068267822266, 2.3091068267822266], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 4, 1, 4, 7, 7, 7, 6, 3, 2, 3, 6, 4, 7, 4, 4, 6, 5, 3, 4, 8, 0, 5, 7, 2, 2, 9, 2, 9, 2, 7, 6, 3, 7, 7, 5, 9, 6, 3, 9, 6, 5], [0, 0, 1, 0, 0, 2, 2, 0, 1, 0, 1, 2, 2, 1, 3, 1, 1, 1, 0, 1, 3, 3, 3, 1, 0, 2, 2, 1, 3, 3, 2, 0], [0, 39, 39, 24, 43, 84, 99, 72, 88, 96, 56, 13, 55], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [30, 37], [0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 6, 4], [6, 2, 2, 2], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 79, 47, 32, 13, 4, 2, 2, 1, 8, 4, 4, 0, 2, 2, 0, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.pow(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad), grad))))), tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.square(alpha), grad), grad), alpha), tf.math.multiply(tf.math.pow(tf.math.sqrt(grad), tf.math.negative(tf.math.square(alpha))), alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), grad), grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), grad), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(grad, tf.math.divide_no_nan(beta, tf.math.pow(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309824228286743, 2.30997371673584, 2.310631275177002, 2.3078396320343018, 2.3093080520629883, 2.3086822032928467], "accuracy": [0.09192973375320435, 0.08981640636920929, 0.08942015469074249, 0.09681680053472519, 0.09192973375320435, 0.09285431355237961], "val_loss": [2.308241128921509, 2.308241128921509, 2.308241128921509, 2.308241128921509, 2.308241128921509, 2.308241128921509], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]