[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8482857346534729, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2081527709960938, 1.596767783164978, 1.151784062385559, 0.9680819511413574, 0.9068329930305481, 0.8347845077514648, 0.7987251877784729, 0.7685950398445129, 0.7317231893539429, 0.7271467447280884, 0.692214846611023, 0.672100841999054, 0.6543307304382324, 0.6595510244369507, 0.6359458565711975, 0.6163451075553894, 0.6109703183174133, 0.593691349029541, 0.5874298810958862, 0.5835881233215332, 0.5918734073638916, 0.561905026435852, 0.5492935180664062, 0.5428398251533508, 0.5551267266273499, 0.5291080474853516, 0.5142803192138672, 0.5312390327453613, 0.515263020992279, 0.5047014951705933, 0.498465895652771, 0.4916897416114807, 0.492614209651947, 0.49240198731422424, 0.47777068614959717, 0.466031551361084, 0.4664733409881592, 0.45876750349998474, 0.46108341217041016, 0.44980698823928833, 0.4472199082374573, 0.4507213234901428, 0.43869757652282715, 0.43914881348609924, 0.43069425225257874, 0.43997249007225037, 0.4322579801082611, 0.42365604639053345, 0.4211898446083069, 0.4171557128429413, 0.4145078659057617, 0.4087178409099579], "accuracy": [0.2681283950805664, 0.5116893649101257, 0.6004490852355957, 0.6561880707740784, 0.6758684515953064, 0.6927750706672668, 0.7084929347038269, 0.7187954187393188, 0.7276449799537659, 0.7279091477394104, 0.7457403540611267, 0.7555144429206848, 0.7652885913848877, 0.7548540234565735, 0.7633073329925537, 0.7707040309906006, 0.7717606425285339, 0.7808743715286255, 0.7876105904579163, 0.7841764688491821, 0.7844406366348267, 0.7924976944923401, 0.8004226684570312, 0.7991018295288086, 0.7910447716712952, 0.804649293422699, 0.8079513907432556, 0.8034605979919434, 0.8095363974571228, 0.8164047002792358, 0.8156121969223022, 0.8219521641731262, 0.8183859586715698, 0.8198388814926147, 0.8241975903511047, 0.8274996876716614, 0.8294808864593506, 0.8297450542449951, 0.8280280232429504, 0.8350284099578857, 0.8356888294219971, 0.8350284099578857, 0.8403117060661316, 0.8400475382804871, 0.8407079577445984, 0.8383304476737976, 0.8426892161369324, 0.8471800088882446, 0.843481719493866, 0.8485008478164673, 0.8490291833877563, 0.8470479249954224], "val_loss": [1.9062516689300537, 1.0848218202590942, 0.8787452578544617, 0.8269015550613403, 0.7888301014900208, 0.6901343464851379, 0.6820607781410217, 0.6553764939308167, 0.5912173390388489, 0.5999305248260498, 0.5724374055862427, 0.5529118180274963, 0.5556865334510803, 0.5292397737503052, 0.5451114773750305, 0.509014904499054, 0.5201724171638489, 0.493211030960083, 0.5134627819061279, 0.4896649122238159, 0.5181565880775452, 0.48993122577667236, 0.47023826837539673, 0.49464917182922363, 0.45620954036712646, 0.450318843126297, 0.4539191424846649, 0.46167314052581787, 0.43961361050605774, 0.4526170790195465, 0.4309368431568146, 0.48108547925949097, 0.4455340504646301, 0.4194311201572418, 0.41651490330696106, 0.4212636649608612, 0.4143811762332916, 0.43136611580848694, 0.4076569378376007, 0.41461417078971863, 0.40380793809890747, 0.3991323709487915, 0.40178385376930237, 0.39989686012268066, 0.40214094519615173, 0.3898334503173828, 0.38081079721450806, 0.40003132820129395, 0.3867003917694092, 0.39166536927223206, 0.3799380660057068, 0.37642228603363037], "val_accuracy": [0.6016666889190674, 0.6706666946411133, 0.6883333325386047, 0.7049999833106995, 0.6973333358764648, 0.7436666488647461, 0.7423333525657654, 0.734666645526886, 0.781000018119812, 0.7680000066757202, 0.7876666784286499, 0.7953333258628845, 0.7876666784286499, 0.8059999942779541, 0.7943333387374878, 0.8136666417121887, 0.8019999861717224, 0.8230000138282776, 0.8119999766349792, 0.8220000267028809, 0.7893333435058594, 0.8246666789054871, 0.8346666693687439, 0.8203333616256714, 0.8386666774749756, 0.8320000171661377, 0.82833331823349, 0.8316666483879089, 0.8389999866485596, 0.8333333134651184, 0.8486666679382324, 0.8159999847412109, 0.8379999995231628, 0.8536666631698608, 0.8450000286102295, 0.8433333039283752, 0.8579999804496765, 0.8496666550636292, 0.8576666712760925, 0.8569999933242798, 0.8550000190734863, 0.859666645526886, 0.8619999885559082, 0.8600000143051147, 0.8600000143051147, 0.8693333268165588, 0.875333309173584, 0.8493333458900452, 0.8646666407585144, 0.8646666407585144, 0.871666669845581, 0.871999979019165]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 0, 2, 0, 2], [0, 39, 72], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 7, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5018187712167936.0, 8458193449517056.0, 8546918347046912.0, 8579861283078144.0, 8731578855325696.0, 8599829122908160.0], "accuracy": [0.09470347315073013, 0.09959053993225098, 0.09747721254825592, 0.09734513610601425, 0.10170386731624603, 0.10210011899471283], "val_loss": [8305845590818816.0, 8305845590818816.0, 8307037444243456.0, 8307037444243456.0, 8307037444243456.0, 8307084688883712.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 6, 1, 3, 4], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 6, 3, 5, 8, 5], [2, 0, 3, 1, 0], [10, 1], [0, 1], [0], [0], [55], [1], [0], [0], [0]], "fitness": -0.09371428936719894, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3095390796661377, 2.309767961502075, 2.3089804649353027, 2.310751438140869, 2.308978319168091, 2.310187578201294], "accuracy": [0.09192973375320435, 0.09668471664190292, 0.09219389408826828, 0.08902391046285629, 0.09206181764602661, 0.08809932321310043], "val_loss": [2.3078970909118652, 2.3078970909118652, 2.3078970909118652, 2.3078970909118652, 2.3078970909118652, 2.3078970909118652], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 46, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [6, 7, 3, 9, 0, 4, 7, 7], [6, 7, 3, 3, 7, 4], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309196710586548, 2.3088197708129883, 2.30991268157959, 2.310157060623169, 2.3102738857269287, 2.3101096153259277], "accuracy": [0.09259014576673508, 0.09113723784685135, 0.09351472556591034, 0.08968432247638702, 0.0874389111995697, 0.09034473448991776], "val_loss": [2.308300018310547, 2.308300018310547, 2.308300018310547, 2.308300018310547, 2.308300018310547, 2.308300018310547], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]