[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8065714240074158, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091667652130127, 1.6041864156723022, 1.1361126899719238, 1.007229208946228, 0.8833140134811401, 0.8646366000175476, 0.7854330539703369, 0.7730751633644104, 0.7228479981422424, 0.724881112575531, 0.694560706615448, 0.6773151159286499, 0.6562017202377319, 0.642072856426239, 0.6465370059013367, 0.6192761063575745, 0.6083994507789612, 0.5852938294410706, 0.5816178917884827, 0.5810654163360596, 0.5838688015937805, 0.5501275658607483, 0.5603833794593811, 0.5452521443367004, 0.544510543346405, 0.5353652834892273, 0.5187371969223022, 0.5140915513038635, 0.5110613107681274, 0.5008096694946289, 0.502889096736908, 0.49343544244766235, 0.4930754601955414, 0.48160871863365173, 0.47950828075408936, 0.4769224524497986, 0.46902626752853394, 0.46263760328292847, 0.47165530920028687, 0.45305970311164856, 0.4443296790122986], "accuracy": [0.2661471366882324, 0.5068022608757019, 0.5952978730201721, 0.6411306262016296, 0.6800950765609741, 0.6828688383102417, 0.7092854380607605, 0.713379979133606, 0.7325320243835449, 0.7297582626342773, 0.737022876739502, 0.7456082701683044, 0.7536653280258179, 0.7589486241340637, 0.7597411274909973, 0.7666094303131104, 0.7717606425285339, 0.7873464822769165, 0.7836481332778931, 0.7763835787773132, 0.7828556299209595, 0.7869502305984497, 0.7922335267066956, 0.7973847389221191, 0.7977809906005859, 0.8031964302062988, 0.806630551815033, 0.8090080618858337, 0.8103289008140564, 0.8156121969223022, 0.8168009519577026, 0.813498854637146, 0.816008448600769, 0.8269713521003723, 0.8235371708869934, 0.8256505131721497, 0.824329674243927, 0.8339717388153076, 0.8241975903511047, 0.8296129703521729, 0.8335754871368408], "val_loss": [1.9168092012405396, 1.0901042222976685, 0.8494409322738647, 0.8064974546432495, 0.6797478199005127, 0.6900442838668823, 0.6937749981880188, 0.6205289363861084, 0.6118495464324951, 0.5735057592391968, 0.5642290711402893, 0.5895209908485413, 0.5361891388893127, 0.5290197730064392, 0.5188050270080566, 0.5164412260055542, 0.5007374882698059, 0.5068240165710449, 0.48824235796928406, 0.49772387742996216, 0.49107876420021057, 0.47681936621665955, 0.48192310333251953, 0.4946952164173126, 0.47693681716918945, 0.46098268032073975, 0.4519762098789215, 0.4538050591945648, 0.4498772919178009, 0.4584011137485504, 0.4381803274154663, 0.43062326312065125, 0.4342424273490906, 0.4476189911365509, 0.4334262013435364, 0.41360050439834595, 0.4167467951774597, 0.4491388201713562, 0.42207860946655273, 0.4049433171749115, 0.41329386830329895], "val_accuracy": [0.559333324432373, 0.6620000004768372, 0.6976666450500488, 0.6940000057220459, 0.7543333172798157, 0.7336666584014893, 0.7203333377838135, 0.7609999775886536, 0.7646666765213013, 0.7799999713897705, 0.7739999890327454, 0.75, 0.7979999780654907, 0.8083333373069763, 0.8066666722297668, 0.8013333082199097, 0.8159999847412109, 0.8036666512489319, 0.8233333230018616, 0.8166666626930237, 0.8190000057220459, 0.8320000171661377, 0.8206666707992554, 0.8146666884422302, 0.8180000185966492, 0.8336666822433472, 0.840666651725769, 0.8233333230018616, 0.8289999961853027, 0.8326666951179504, 0.8450000286102295, 0.8460000157356262, 0.8443333506584167, 0.8323333263397217, 0.8423333168029785, 0.8523333072662354, 0.8463333249092102, 0.8346666693687439, 0.8413333296775818, 0.8510000109672546, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0, 1, 2, 2, 1], [0, 0, 3, 0, 2, 2, 1, 1, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [4, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 11, 9, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), grad), tf.math.add(alpha, tf.math.subtract(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 7, 2, 9, 7, 2, 4, 8, 6, 1, 2, 8], [0, 1, 1, 0, 2, 0, 2, 1, 2, 1, 3, 3], [31, 39, 39, 84], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [4, 37], [1, 1], [0], [7], [0], [0, 0, 1], [0, 8], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 17, 12, 4, 2, 1, 1, 0, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(alpha))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(grad, alpha)), tf.math.subtract(grad, tf.math.add(tf.math.sqrt(alpha), grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 3, 1, 5, 5], [0, 0, 2, 0, 2], [0, 10, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 2, 6, 8, 8, 2], [2, 0, 3, 3, 0], [16, 37], [0, 0, 0, 1, 0], [0, 2, 8, 9], [0], [0, 36], [1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 9, 5, 4, 1, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.1986398696899414, 2.3381776809692383, 2.431131362915039, 2.3105826377868652, 2.303868055343628, 2.2398483753204346, 2.309858560562134, 2.304288625717163, 2.303366184234619, 2.3031585216522217, 2.3030736446380615, 2.3030471801757812], "accuracy": [0.21516312658786774, 0.19865275919437408, 0.11887465417385101, 0.10011887550354004, 0.1022322028875351, 0.1958790123462677, 0.09998679161071777, 0.09879804402589798, 0.09642054885625839, 0.09919429570436478, 0.09866596013307571, 0.09219389408826828], "val_loss": [2.2851223945617676, 2.881967544555664, 2.317318916320801, 2.3045811653137207, 2.2996766567230225, 2.3155500888824463, 2.3048698902130127, 2.302971124649048, 2.302783489227295, 2.3026328086853027, 2.3026793003082275, 2.302659511566162], "val_accuracy": [0.10133333504199982, 0.09933333098888397, 0.1003333330154419, 0.10266666859388351, 0.09866666793823242, 0.10266666859388351, 0.10366666316986084, 0.0976666659116745, 0.10266666859388351, 0.10266666859388351, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 1], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 37], [0, 1], [0], [7], [0], [1], [0], [0], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 4, 2, 2, 2, 7, 4, 3, 0, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310594081878662, 2.309753894805908, 2.309638261795044, 2.3088865280151367, 2.3102900981903076, 2.309598445892334], "accuracy": [0.09126931428909302, 0.09074098616838455, 0.09232597798109055, 0.0948355570435524, 0.08928807079792023, 0.0882314071059227], "val_loss": [2.308448314666748, 2.308448314666748, 2.308448314666748, 2.308448314666748, 2.308448314666748, 2.308448314666748], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]