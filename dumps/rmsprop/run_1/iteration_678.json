[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7931428551673889, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213533639907837, 1.6176409721374512, 1.1280841827392578, 0.9973581433296204, 0.8781307935714722, 0.8277239203453064, 0.765014111995697, 0.7504861950874329, 0.744006872177124, 0.6885424852371216, 0.6693206429481506, 0.6547288298606873, 0.6427053809165955, 0.6293511390686035, 0.6162058711051941, 0.603376567363739, 0.6082980632781982, 0.5741007924079895, 0.591999888420105], "accuracy": [0.26284506916999817, 0.5049530863761902, 0.607449471950531, 0.6415268778800964, 0.6793025732040405, 0.6950204968452454, 0.718399167060852, 0.7165499925613403, 0.7205125093460083, 0.7378153204917908, 0.7469290494918823, 0.7581561207771301, 0.7563069462776184, 0.7605336308479309, 0.7662131786346436, 0.7693831920623779, 0.7668735980987549, 0.7844406366348267, 0.7745344042778015], "val_loss": [1.935459017753601, 1.1232963800430298, 0.9322391748428345, 0.7990686893463135, 0.8013145923614502, 0.7210032343864441, 0.7104073166847229, 0.6880425810813904, 0.6541412472724915, 0.6265469193458557, 0.684847891330719, 0.5878039598464966, 0.6704908609390259, 0.5716108679771423, 0.6188338994979858, 0.5771952271461487, 0.5559172630310059, 0.6003122329711914, 0.5628904104232788], "val_accuracy": [0.515999972820282, 0.6556666493415833, 0.6526666879653931, 0.7020000219345093, 0.690666675567627, 0.7319999933242798, 0.734333336353302, 0.7493333220481873, 0.7603333592414856, 0.765999972820282, 0.7306666374206543, 0.7793333530426025, 0.7476666569709778, 0.7836666703224182, 0.7476666569709778, 0.7739999890327454, 0.7836666703224182, 0.7599999904632568, 0.781000018119812]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 1], [0, 39, 39, 64], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 0, 6, 9, 7, 4], [2, 0, 3, 0, 0, 0], [16, 40, 25, 44, 52], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 11, 7, 4, 4, 17, 11, 6, 5, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 4], [0, 0, 1, 0, 1, 1], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 8, 0, 6, 3, 8, 2, 0], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 12, 8, 4, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.negative(grad), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [34, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [40, 37], [0, 1], [0], [6], [0], [0, 0, 1, 1], [0, 2], [2, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 12, 7, 5, 1, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(grad, alpha)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, beta))", "other_info": {"loss": [3036027287502848.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 7, 3, 1, 3, 9, 3, 5, 3, 4, 7, 0, 5, 3, 1, 3, 7, 2, 3, 2, 2, 3, 2, 8, 2, 5, 3, 5], [0, 0, 1, 2, 2, 3, 1, 1, 0, 0, 3, 0, 3, 1, 0, 2, 3, 1, 1, 0], [0, 39, 39, 19, 40, 28, 58, 21], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 48, 28, 20, 8, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad)))), grad), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))))), grad)), alpha))), tf.math.square(alpha))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310591459274292, 2.3096983432769775, 2.310628652572632, 2.3093597888946533, 2.310386896133423, 2.3104474544525146], "accuracy": [0.08968432247638702, 0.0886276587843895, 0.0940430611371994, 0.0952318087220192, 0.09008057415485382, 0.09589222073554993], "val_loss": [2.307568311691284, 2.307568311691284, 2.307568311691284, 2.307568311691284, 2.307568311691284, 2.307568311691284], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]