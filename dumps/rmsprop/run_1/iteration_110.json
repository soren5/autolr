[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2114412784576416, 1.6152673959732056, 1.1380976438522339, 1.0052318572998047, 0.8826277852058411, 0.832991898059845, 0.7680054306983948, 0.7556102871894836, 0.7428848147392273, 0.7061254382133484, 0.6867514252662659, 0.6770570874214172, 0.6567696928977966, 0.6288553476333618, 0.6362043023109436, 0.6095558404922485, 0.6018373370170593, 0.5814797282218933, 0.5762747526168823, 0.5743575692176819, 0.5549240708351135, 0.5787045359611511, 0.5548515915870667, 0.5450490713119507, 0.5234938263893127, 0.5318604111671448, 0.5226019620895386, 0.5045808553695679, 0.5021911263465881, 0.4971944987773895, 0.4917885363101959, 0.4787922203540802, 0.48216214776039124, 0.47412243485450745, 0.4798727035522461, 0.4641510844230652, 0.4652695953845978, 0.46213650703430176, 0.4497798979282379, 0.44661638140678406, 0.44075071811676025, 0.4453500211238861], "accuracy": [0.2583542466163635, 0.49649980664253235, 0.6069211363792419, 0.6365077495574951, 0.6757363677024841, 0.69673752784729, 0.7271166443824768, 0.719852089881897, 0.722757875919342, 0.7292299270629883, 0.7460044622421265, 0.7456082701683044, 0.757099449634552, 0.765949010848999, 0.7631752490997314, 0.7746664881706238, 0.7751948237419128, 0.7895918488502502, 0.7889314293861389, 0.7898560166358948, 0.7955356240272522, 0.7823272943496704, 0.7935543656349182, 0.7943468689918518, 0.8061022162437439, 0.800818920135498, 0.8076872229576111, 0.8146876096725464, 0.8137630224227905, 0.8166688680648804, 0.8186501264572144, 0.8255184292793274, 0.8228767514228821, 0.8286884427070618, 0.8256505131721497, 0.8274996876716614, 0.8241975903511047, 0.8269713521003723, 0.8343679904937744, 0.8362171649932861, 0.8430854678153992, 0.8315942287445068], "val_loss": [1.9241559505462646, 1.1089856624603271, 0.9087702035903931, 0.7651663422584534, 0.7760542035102844, 0.6902637481689453, 0.6390417218208313, 0.6647120714187622, 0.615541398525238, 0.5785950422286987, 0.5897842645645142, 0.5538408756256104, 0.5484923720359802, 0.5404608845710754, 0.5140794515609741, 0.5276815295219421, 0.5353311896324158, 0.5010895133018494, 0.5139461159706116, 0.5171095132827759, 0.5235416889190674, 0.4930381774902344, 0.53401780128479, 0.4869709610939026, 0.4934334456920624, 0.4665573239326477, 0.47515979409217834, 0.44878557324409485, 0.4427931308746338, 0.4433544874191284, 0.4351339042186737, 0.43589892983436584, 0.44167935848236084, 0.4364696443080902, 0.441160649061203, 0.42674756050109863, 0.4122332036495209, 0.4123205244541168, 0.42202532291412354, 0.4103497862815857, 0.4227113425731659, 0.41186821460723877], "val_accuracy": [0.5006666779518127, 0.612333357334137, 0.6416666507720947, 0.7106666564941406, 0.7099999785423279, 0.7516666650772095, 0.75, 0.7429999709129333, 0.7663333415985107, 0.7720000147819519, 0.7706666588783264, 0.7893333435058594, 0.7933333516120911, 0.7886666655540466, 0.8050000071525574, 0.8069999814033508, 0.7906666398048401, 0.8116666674613953, 0.8103333115577698, 0.7950000166893005, 0.7953333258628845, 0.8143333196640015, 0.7929999828338623, 0.8050000071525574, 0.8203333616256714, 0.8323333263397217, 0.8206666707992554, 0.8366666436195374, 0.8366666436195374, 0.8386666774749756, 0.8376666903495789, 0.8363333344459534, 0.8333333134651184, 0.8429999947547913, 0.8339999914169312, 0.8460000157356262, 0.8500000238418579, 0.8453333377838135, 0.8353333473205566, 0.8483333587646484, 0.8410000205039978, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 3, 1, 3, 5, 7, 6], [0, 0, 1, 2, 2, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 7, 6, 3, 8, 7, 1, 6, 8], [6, 3, 4, 3, 1, 6, 2, 2], [0], [1], [0], [7], [0]], "fitness": -0.5808571577072144, "mapping_values": [1, 16, 8, 8, 3, 7, 4, 3, 1, 18, 10, 8, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), grad)), grad), grad), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(sigma, grad), tf.math.sqrt(tf.math.add(tf.math.subtract(sigma, alpha), grad))), tf.math.divide_no_nan(beta, tf.math.sqrt(beta))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3776473999023438, 2.23921275138855, 2.6109843254089355, 2.28212833404541, 2.630970001220703, 2.302011013031006, 2.166862726211548, 2.1941006183624268, 1.8447672128677368, 1.5887906551361084, 2.1486992835998535, 1.673930048942566, 1.4917351007461548, 1.4526365995407104], "accuracy": [0.19138818979263306, 0.20380398631095886, 0.20657773315906525, 0.17751948535442352, 0.1332716941833496, 0.12098798155784607, 0.24633470177650452, 0.2550521790981293, 0.3947959244251251, 0.48210275173187256, 0.28926166892051697, 0.4231937527656555, 0.48527276515960693, 0.48989564180374146], "val_loss": [2.290517807006836, 2.2457892894744873, 1.9462207555770874, 2.2993178367614746, 2.309974193572998, 2.264650344848633, 1.8611689805984497, 1.6674872636795044, 1.3660528659820557, 1.719269871711731, 1.973615288734436, 1.6388027667999268, 1.2679129838943481, 1.5975302457809448], "val_accuracy": [0.1509999930858612, 0.24633333086967468, 0.29366666078567505, 0.10266666859388351, 0.11033333092927933, 0.1599999964237213, 0.34700000286102295, 0.5109999775886536, 0.5756666660308838, 0.5423333048820496, 0.3296666741371155, 0.4779999852180481, 0.5613333582878113, 0.3646666705608368]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 2, 5], [2, 0, 3, 0, 3], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 6, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [7], [0]], "fitness": -0.3865714371204376, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3296494483947754, 3.300668239593506, 2.306671380996704, 2.28782057762146, 2.4963955879211426, 2.306225299835205, 2.303676128387451, 2.3031790256500244, 2.3030030727386475], "accuracy": [0.1974640041589737, 0.1818782240152359, 0.10276053100824356, 0.12798838317394257, 0.13459251821041107, 0.09906221181154251, 0.09602430462837219, 0.09826971590518951, 0.09576013684272766], "val_loss": [2.2934207916259766, 2.3086719512939453, 2.3015825748443604, 2.1205155849456787, 2.308533191680908, 2.303612232208252, 2.3029465675354004, 2.3028018474578857, 2.3026866912841797], "val_accuracy": [0.2616666555404663, 0.09600000083446503, 0.10433333367109299, 0.390666663646698, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2, 2], [0, 93, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 3, 0, 6, 6, 8, 2], [2, 0, 3, 1, 0], [45, 37], [0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 2, 0], [0, 7, 3, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 2, 11, 6, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.negative(sigma)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 2, 5, 6, 2, 4], [3, 3, 3, 0, 1, 0, 3, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 2, 0, 7, 3, 8, 2, 0], [2, 0, 3, 1, 0, 3], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 3, 14, 8, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), grad), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]