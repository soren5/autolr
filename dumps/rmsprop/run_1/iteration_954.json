[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.803428590297699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212584972381592, 1.6206835508346558, 1.1585887670516968, 0.9663699269294739, 0.8943217396736145, 0.8294712901115417, 0.813086211681366, 0.7548282146453857, 0.7367530465126038, 0.714417040348053, 0.692007303237915, 0.679456353187561, 0.6452215909957886, 0.6736680865287781, 0.6314610242843628, 0.625673234462738, 0.6069629192352295, 0.5960474014282227, 0.6011278033256531, 0.5780699849128723, 0.5628145933151245, 0.568123996257782, 0.5393865704536438, 0.5635346174240112, 0.5397453904151917], "accuracy": [0.26839256286621094, 0.5041606426239014, 0.5980715751647949, 0.6660943031311035, 0.6804913282394409, 0.6976621150970459, 0.7046625018119812, 0.7217012047767639, 0.7263241410255432, 0.7371549606323242, 0.7437590956687927, 0.7483819723129272, 0.7617223858833313, 0.7508915662765503, 0.7666094303131104, 0.7664773464202881, 0.7744023203849792, 0.7853652238845825, 0.7741381525993347, 0.7866860628128052, 0.7946110367774963, 0.7917051911354065, 0.8041210174560547, 0.7886672616004944, 0.8004226684570312], "val_loss": [1.9251596927642822, 1.1001721620559692, 0.9027867317199707, 0.8512754440307617, 0.7248764038085938, 0.7007872462272644, 0.6642419099807739, 0.6635743379592896, 0.6218500733375549, 0.6108471751213074, 0.5994861125946045, 0.6218357086181641, 0.5743992328643799, 0.5696119666099548, 0.5675280690193176, 0.5497846007347107, 0.5540581941604614, 0.5708128809928894, 0.5212854743003845, 0.5214238166809082, 0.5051958560943604, 0.5069517493247986, 0.5115295052528381, 0.5200843214988708, 0.5079011917114258], "val_accuracy": [0.5706666707992554, 0.6506666541099548, 0.6636666655540466, 0.6826666593551636, 0.7326666712760925, 0.7336666584014893, 0.762666642665863, 0.7480000257492065, 0.7673333287239075, 0.7706666588783264, 0.7749999761581421, 0.7620000243186951, 0.7816666960716248, 0.7870000004768372, 0.7756666541099548, 0.7863333225250244, 0.7850000262260437, 0.7733333110809326, 0.8050000071525574, 0.8076666593551636, 0.8066666722297668, 0.8076666593551636, 0.8023333549499512, 0.7973333597183228, 0.8003333210945129]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 8], [0, 0, 0, 1, 2], [0, 39, 39], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1], [4], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.22171428799629211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.021385870764612e+24, 1.4432329591422438e+34, NaN, NaN, NaN, NaN], "accuracy": [0.13657376170158386, 0.14898955821990967, 0.11398758739233017, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.433587290704098e+26, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.2133333384990692, 0.2133333384990692, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 7, 4, 3, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 6, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0, 3], [48, 37], [0, 1], [0], [6], [0], [0, 0, 0, 1, 1], [0, 0, 1], [3, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 6, 6, 2, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(sigma, grad)))", "other_info": {"loss": [84.84197235107422, 9.771442750638505e+30, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2145027071237564, 0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [22.617307662963867, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 12], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 4, 2, 2, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310643434524536, 2.310213088989258, 2.3097007274627686, 2.3096702098846436, 2.309951066970825, 2.3095221519470215], "accuracy": [0.09457138925790787, 0.09140139818191528, 0.09232597798109055, 0.08836349099874496, 0.09021265059709549, 0.09470347315073013], "val_loss": [2.3090381622314453, 2.3090381622314453, 2.3090381622314453, 2.3090381622314453, 2.3090381622314453, 2.3090381622314453], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 2], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 5, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [79, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 4, 4, 3, 9], [0, 3, 5, 4], [0, 64], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), tf.math.pow(tf.math.multiply(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310363292694092, 2.3094749450683594, 2.3102617263793945, 2.311049699783325, 2.3091235160827637, 2.308610677719116], "accuracy": [0.08545766770839691, 0.08928807079792023, 0.09272222965955734, 0.08955223858356476, 0.0940430611371994, 0.09298639744520187], "val_loss": [2.308115243911743, 2.308115243911743, 2.308115243911743, 2.308115243911743, 2.308115243911743, 2.308115243911743], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]