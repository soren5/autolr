[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8100000023841858, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2138729095458984, 1.62694251537323, 1.1377742290496826, 0.993935763835907, 0.8597979545593262, 0.8245623111724854, 0.7927536368370056, 0.7466880083084106, 0.7201725840568542, 0.6950080990791321, 0.6864244341850281, 0.6550172567367554, 0.658923864364624, 0.6330913305282593, 0.6061025857925415, 0.6099029183387756, 0.5930468440055847, 0.5792192816734314, 0.5672077536582947, 0.5741254091262817, 0.5603881478309631, 0.5415171384811401, 0.5598210096359253, 0.5436189770698547, 0.5272882580757141, 0.5175553560256958, 0.5074034333229065, 0.5066827535629272, 0.5107163190841675, 0.49999091029167175, 0.48946496844291687, 0.4829859435558319, 0.49164512753486633, 0.4708717167377472, 0.47664937376976013, 0.4553747773170471, 0.46622273325920105, 0.4672475755214691], "accuracy": [0.2604675590991974, 0.49953770637512207, 0.6032228469848633, 0.6505085229873657, 0.6872276067733765, 0.703209638595581, 0.7054550051689148, 0.7288337349891663, 0.7374191284179688, 0.7433628439903259, 0.7489103078842163, 0.7540615797042847, 0.7569673657417297, 0.7626469135284424, 0.778232753276825, 0.7705719470977783, 0.7795535326004028, 0.7839123010635376, 0.7887993454933167, 0.7852331399917603, 0.7947431206703186, 0.8012151718139648, 0.7969884872436523, 0.7985734939575195, 0.8013472557067871, 0.8075551390647888, 0.8132346868515015, 0.8195747137069702, 0.8072909712791443, 0.8146876096725464, 0.8187822103500366, 0.8251221776008606, 0.8170651197433472, 0.8253863453865051, 0.8271034359931946, 0.8359529972076416, 0.8267071843147278, 0.828820526599884], "val_loss": [1.9276928901672363, 1.0845168828964233, 0.9258421063423157, 0.7934251427650452, 0.7706465125083923, 0.6903560161590576, 0.7036578059196472, 0.6485992670059204, 0.6387909650802612, 0.6143463253974915, 0.5828317403793335, 0.5999323725700378, 0.565970778465271, 0.5665196180343628, 0.5730754137039185, 0.5871074199676514, 0.546712338924408, 0.5290574431419373, 0.5656663179397583, 0.5503746867179871, 0.511623203754425, 0.5128430724143982, 0.515863299369812, 0.5162274837493896, 0.4872058629989624, 0.48163607716560364, 0.4926179051399231, 0.4661683440208435, 0.4683329164981842, 0.45908820629119873, 0.4656310975551605, 0.4594678580760956, 0.44742676615715027, 0.469046950340271, 0.4487391412258148, 0.45434293150901794, 0.4487544298171997, 0.45501017570495605], "val_accuracy": [0.5876666903495789, 0.6499999761581421, 0.6523333191871643, 0.6976666450500488, 0.6966666579246521, 0.7333333492279053, 0.7170000076293945, 0.7473333477973938, 0.765999972820282, 0.7583333253860474, 0.7870000004768372, 0.7770000100135803, 0.7870000004768372, 0.7923333048820496, 0.7873333096504211, 0.7703333497047424, 0.7916666865348816, 0.8046666383743286, 0.7846666574478149, 0.7876666784286499, 0.8033333420753479, 0.8073333501815796, 0.8006666898727417, 0.8103333115577698, 0.8143333196640015, 0.8203333616256714, 0.8226666450500488, 0.8276666402816772, 0.8273333311080933, 0.8276666402816772, 0.8230000138282776, 0.8286666870117188, 0.8396666646003723, 0.8213333487510681, 0.8293333053588867, 0.8236666917800903, 0.8376666903495789, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 6, 3, 5, 7, 9], [6, 1, 6], [0], [1], [0], [6], [0]], "fitness": -0.2231428623199463, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.428770065307617, 2.688081979751587, 2.306053400039673, 2.303413152694702, 2.303391933441162, 2.3027427196502686], "accuracy": [0.20644564926624298, 0.17170783877372742, 0.09959053993225098, 0.10276053100824356, 0.09668471664190292, 0.10302469879388809], "val_loss": [2.1216588020324707, 2.307204246520996, 2.3032450675964355, 2.3025522232055664, 2.3025310039520264, 2.3019001483917236], "val_accuracy": [0.22333332896232605, 0.0989999994635582, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 5], [3, 0, 1, 3, 2], [0, 61, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 0], [1], [6], [0], [1], [0], [5], [0]], "fitness": -0.15485714375972748, "mapping_values": [1, 9, 5, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.22381067276001, 2.3066349029541016, 2.340252637863159, 2.3034141063690186, 2.303532123565674, 2.3032796382904053, 2.3030495643615723], "accuracy": [0.16629242897033691, 0.09985470771789551, 0.10355303436517715, 0.09760929644107819, 0.09760929644107819, 0.0944393053650856, 0.09192973375320435], "val_loss": [2.3136098384857178, 2.533850908279419, 2.3030171394348145, 2.3059263229370117, 2.3027756214141846, 2.30257511138916, 2.302659749984741], "val_accuracy": [0.0989999994635582, 0.164000004529953, 0.09966666996479034, 0.0976666659116745, 0.10100000351667404, 0.10166666656732559, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 3, 4, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 3, 3, 4, 0], [16, 37], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 3, 5, 3, 4], [0, 6, 0, 3, 0], [0, 14, 53], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 0, 10, 5, 5, 3, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 3, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 69], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [3], [0], [0, 0, 0, 1, 1], [0, 8, 1], [2, 2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 6, 3, 3, 3, 12, 7, 5, 2, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(beta, beta)))", "other_info": {"loss": [2.3103528022766113, 2.3108184337615967, 2.310175895690918, 2.3091342449188232, 2.309645414352417, 2.3094184398651123], "accuracy": [0.08849557489156723, 0.0944393053650856, 0.09153348207473755, 0.09311848133802414, 0.09034473448991776, 0.09192973375320435], "val_loss": [2.308513879776001, 2.308513879776001, 2.308513879776001, 2.308513879776001, 2.308513879776001, 2.308513879776001], "val_accuracy": [0.08366666734218597, 0.08366666734218597, 0.08366666734218597, 0.08366666734218597, 0.08366666734218597, 0.08366666734218597]}}]