[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8154285550117493, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210409164428711, 1.6120864152908325, 1.1325764656066895, 1.013014316558838, 0.8749092221260071, 0.8271267414093018, 0.7931960821151733, 0.7694442868232727, 0.7269851565361023, 0.7044535875320435, 0.6877462267875671, 0.6760897040367126, 0.6513190865516663, 0.6549241542816162, 0.6272167563438416, 0.6203716397285461, 0.5970461368560791, 0.6040076017379761, 0.5770783424377441, 0.5800080299377441, 0.5651386976242065, 0.5577526092529297, 0.5422871112823486, 0.5458234548568726, 0.5234929919242859, 0.5159891843795776, 0.5171231627464294, 0.5009608268737793, 0.5095304250717163, 0.5044582486152649, 0.4893178939819336, 0.49544450640678406, 0.4831671118736267], "accuracy": [0.25756174325942993, 0.5020473003387451, 0.6079778075218201, 0.6387531161308289, 0.6848500967025757, 0.6948884129524231, 0.7099458575248718, 0.7143045663833618, 0.7309470176696777, 0.7376832365989685, 0.7440232634544373, 0.7506273984909058, 0.7561748623847961, 0.7576277852058411, 0.7613261342048645, 0.7662131786346436, 0.780610203742981, 0.7778365015983582, 0.7866860628128052, 0.7837802171707153, 0.7928939461708069, 0.7955356240272522, 0.7979130744934082, 0.7964601516723633, 0.8058380484580994, 0.8063663840293884, 0.8070268034934998, 0.8120459914207458, 0.8103289008140564, 0.8171972036361694, 0.8169330358505249, 0.8187822103500366, 0.8245938420295715], "val_loss": [1.9193534851074219, 1.0850695371627808, 0.9422833919525146, 0.7945349216461182, 0.7588505744934082, 0.7184980511665344, 0.7071197032928467, 0.6792186498641968, 0.6360244750976562, 0.6193556189537048, 0.6104779243469238, 0.586176335811615, 0.5757477283477783, 0.5693480372428894, 0.5688536763191223, 0.5898470878601074, 0.5353617072105408, 0.5337616205215454, 0.5985143184661865, 0.5348920226097107, 0.5335074067115784, 0.5222796201705933, 0.505086362361908, 0.5026195645332336, 0.4923033118247986, 0.5181843042373657, 0.5005919933319092, 0.48272424936294556, 0.49432608485221863, 0.4823854863643646, 0.4757652282714844, 0.481417715549469, 0.5142359137535095], "val_accuracy": [0.5529999732971191, 0.6700000166893005, 0.6520000100135803, 0.7116666436195374, 0.7096666693687439, 0.7266666889190674, 0.7243333458900452, 0.7419999837875366, 0.7570000290870667, 0.7683333158493042, 0.7680000066757202, 0.7893333435058594, 0.7839999794960022, 0.7913333177566528, 0.7853333353996277, 0.7716666460037231, 0.8056666851043701, 0.8040000200271606, 0.765666663646698, 0.8016666769981384, 0.7976666688919067, 0.8059999942779541, 0.8193333148956299, 0.8183333277702332, 0.8240000009536743, 0.8059999942779541, 0.8133333325386047, 0.8309999704360962, 0.8209999799728394, 0.8266666531562805, 0.828000009059906, 0.8306666612625122, 0.7973333597183228]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 2], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 2, 0, 6, 7, 8, 2, 6, 1, 9, 8, 2, 0, 6, 9, 5], [2, 0, 3, 1, 0, 3, 2], [16, 37, 47, 5], [0, 1], [0], [7], [32], [1], [0], [5], [0]], "fitness": -0.28200000524520874, "mapping_values": [1, 1, 0, 1, 1, 23, 16, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.277651786804199, 2.406942367553711, 2.2931580543518066, 2.3085153102874756, 2.310540199279785, 2.3046226501464844], "accuracy": [0.2222955971956253, 0.1954827606678009, 0.1298375427722931, 0.1320829540491104, 0.09840179979801178, 0.1010434553027153], "val_loss": [2.1276986598968506, 2.2662243843078613, 2.3035240173339844, 2.3201076984405518, 2.304459810256958, 2.303234815597534], "val_accuracy": [0.2786666750907898, 0.10066666454076767, 0.10300000011920929, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 9, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [38, 37], [0, 1, 1], [7], [6, 5], [0], [1], [0], [2], [0]], "fitness": -0.2491428554058075, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3714144229888916, 2.258287191390991, 2.6465420722961426, 2.30403733253479, 2.298320770263672, 2.3006701469421387, 2.2767374515533447], "accuracy": [0.19918107986450195, 0.16814158856868744, 0.11887465417385101, 0.09893012791872025, 0.11015717685222626, 0.12098798155784607, 0.19653943181037903], "val_loss": [2.295964241027832, 4.592759609222412, 2.3044073581695557, 2.3017749786376953, 2.2606046199798584, 2.2348363399505615, 2.3244173526763916], "val_accuracy": [0.10000000149011612, 0.23666666448116302, 0.10266666859388351, 0.10266666859388351, 0.1993333399295807, 0.09966666996479034, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 8, 6, 3, 8, 2, 8], [3, 0, 5, 4, 0, 2], [16, 37], [0, 0, 1, 0, 1], [4, 0, 5], [0, 0], [0, 59], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 8, 6, 2, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 4, 1, 3, 5, 6, 4, 7, 1, 6, 1, 3, 7, 2], [0, 0, 1, 0, 2, 3, 3, 2, 0, 0, 2, 1, 3, 1], [0, 39, 51, 91, 85], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 15, 14, 5, 4, 3, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.subtract(grad, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, grad), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303298234939575, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]