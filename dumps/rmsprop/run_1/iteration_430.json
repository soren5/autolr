[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212056875228882, 1.613783359527588, 1.1240763664245605, 1.0068048238754272, 0.8849536776542664, 0.8174288868904114, 0.8013998866081238, 0.7649884223937988, 0.7287589311599731, 0.6968472599983215, 0.6915091276168823, 0.6583530306816101, 0.6475837826728821, 0.6482685208320618, 0.6153402328491211, 0.6173007488250732, 0.5956785678863525, 0.588284432888031, 0.5721023082733154, 0.5813937783241272, 0.5686159729957581, 0.5452434420585632, 0.5360190868377686, 0.5356504917144775, 0.5254154801368713, 0.5245856046676636, 0.5120369791984558, 0.5006765127182007, 0.5044467449188232], "accuracy": [0.2615242302417755, 0.5027077198028564, 0.6112799048423767, 0.646149754524231, 0.6820763349533081, 0.7054550051689148, 0.7038700580596924, 0.718399167060852, 0.7349095344543457, 0.7478536367416382, 0.7477215528488159, 0.7601373791694641, 0.7618544697761536, 0.763439416885376, 0.772288978099823, 0.7677981853485107, 0.7833839654922485, 0.7761194109916687, 0.7844406366348267, 0.7868181467056274, 0.7935543656349182, 0.8043851256370544, 0.8035926818847656, 0.8031964302062988, 0.8070268034934998, 0.8129705190658569, 0.8131026029586792, 0.8189142942428589, 0.8164047002792358], "val_loss": [1.925458312034607, 1.1262491941452026, 0.9781395792961121, 0.8194568753242493, 0.7412556409835815, 0.7959909439086914, 0.6708831191062927, 0.6532965302467346, 0.6730877161026001, 0.653691828250885, 0.6201181411743164, 0.6090088486671448, 0.588925838470459, 0.5982154011726379, 0.5994396805763245, 0.5693444609642029, 0.5548979640007019, 0.5512213706970215, 0.5508986711502075, 0.5474165081977844, 0.5430893301963806, 0.5198919177055359, 0.5252679586410522, 0.5050725340843201, 0.5201540589332581, 0.5140015482902527, 0.49634724855422974, 0.5004534721374512, 0.4976181089878082], "val_accuracy": [0.5370000004768372, 0.6296666860580444, 0.6480000019073486, 0.7133333086967468, 0.7319999933242798, 0.6863333582878113, 0.7406666874885559, 0.765333354473114, 0.7446666955947876, 0.7616666555404663, 0.7693333625793457, 0.7766666412353516, 0.7836666703224182, 0.7850000262260437, 0.7770000100135803, 0.7916666865348816, 0.7879999876022339, 0.7900000214576721, 0.7983333468437195, 0.7963333129882812, 0.8006666898727417, 0.8063333630561829, 0.8143333196640015, 0.8226666450500488, 0.8136666417121887, 0.8059999942779541, 0.8140000104904175, 0.8190000057220459, 0.8166666626930237]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [95, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 8, 2, 6, 2], [2, 0, 3, 1, 0, 4, 2], [16, 37], [0, 1], [8], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 16, 9, 7, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [6, 2, 3, 1, 2, 5], [0, 0, 1, 0, 2], [0, 39, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 2, 3, 5, 2], [6, 5, 1, 1, 2], [0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 4, 4, 7, 5, 3, 4, 6, 0, 0, 7, 0, 6, 0, 7, 0, 0, 0, 8, 5, 7, 5, 5, 4, 6, 7, 3, 4, 5, 0, 0, 6, 9], [2, 1, 6, 2, 4, 0, 6, 4, 0, 1, 6, 1, 3, 5, 6, 1], [0, 92, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 3, 1, 0, 10, 5, 5, 0, 49, 33, 16, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.multiply(grad, tf.math.square(grad)), alpha), tf.math.add(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(tf.math.square(tf.math.multiply(beta, alpha)), tf.math.pow(grad, beta)), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(tf.math.square(grad), tf.math.square(grad))))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.math.pow(tf.math.divide_no_nan(tf.math.add(grad, tf.math.multiply(tf.math.pow(alpha, tf.math.square(sigma)), tf.math.negative(grad))), tf.math.negative(grad)), tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [1134822144.0, 21124632576.0, 99789348864.0, 277856518144.0, 597843378176.0, 1099831705600.0], "accuracy": [0.1010434553027153, 0.10685510188341141, 0.10117553919553757, 0.09932637959718704, 0.09893012791872025, 0.09813763201236725], "val_loss": [5172240896.0, 41372819456.0, 139626905600.0, 330961911808.0, 646397296640.0, 1116965437440.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]