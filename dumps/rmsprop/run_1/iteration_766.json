[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8100000023841858, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2072579860687256, 1.5870816707611084, 1.1439577341079712, 0.9919305443763733, 0.873253583908081, 0.8351581692695618, 0.8025003671646118, 0.7475924491882324, 0.7219818234443665, 0.7015206217765808, 0.702744722366333, 0.673276960849762, 0.6502734422683716, 0.6278696656227112, 0.6339806318283081, 0.6109309196472168, 0.5989015698432922, 0.6044747829437256, 0.5771369338035583, 0.5634204149246216, 0.5682095289230347, 0.550072193145752, 0.5600042939186096, 0.5501999258995056, 0.5436133742332458, 0.5273882150650024, 0.5227838158607483, 0.5182574987411499, 0.5001114010810852, 0.501634418964386, 0.5056989192962646, 0.495898574590683, 0.4868032932281494, 0.48525166511535645, 0.46554288268089294, 0.47161269187927246, 0.46587780117988586, 0.4589180052280426, 0.4550915062427521, 0.45974621176719666, 0.4519571363925934, 0.4500752389431, 0.45243972539901733, 0.4347175657749176, 0.4284529983997345, 0.43836724758148193, 0.4286939203739166, 0.4320317804813385, 0.4211147129535675, 0.4118216335773468, 0.40482401847839355], "accuracy": [0.28001585602760315, 0.5077268481254578, 0.6036190986633301, 0.6489235162734985, 0.6839255094528198, 0.6911900639533997, 0.7042662501335144, 0.7272487282752991, 0.7302865982055664, 0.7395324110984802, 0.735569953918457, 0.7479857206344604, 0.7537974119186401, 0.7668735980987549, 0.7635715007781982, 0.77677983045578, 0.7738739848136902, 0.7705719470977783, 0.7821952104568481, 0.7869502305984497, 0.7877426743507385, 0.7948752045631409, 0.7844406366348267, 0.7959318161010742, 0.8006868362426758, 0.8055738806724548, 0.8079513907432556, 0.804649293422699, 0.8144234418869019, 0.8150838613510132, 0.8117818236351013, 0.8171972036361694, 0.8198388814926147, 0.8171972036361694, 0.8321225643157959, 0.82683926820755, 0.8301413059234619, 0.8281601071357727, 0.8327829837799072, 0.8308017253875732, 0.8342359066009521, 0.8388587832450867, 0.8347642421722412, 0.8401796221733093, 0.846387505531311, 0.8383304476737976, 0.8442742228507996, 0.8416325449943542, 0.8474441766738892, 0.8453308939933777, 0.8494254350662231], "val_loss": [1.909410834312439, 1.0991591215133667, 0.9009680151939392, 0.828988254070282, 0.7788658738136292, 0.7689059376716614, 0.6843481659889221, 0.670868456363678, 0.6269314289093018, 0.6087694764137268, 0.5945382714271545, 0.5823337435722351, 0.5565460324287415, 0.5686992406845093, 0.5581638216972351, 0.5641850233078003, 0.5267558693885803, 0.5316647291183472, 0.5240466594696045, 0.5082354545593262, 0.509931743144989, 0.5846240520477295, 0.48390811681747437, 0.5051006078720093, 0.48194989562034607, 0.48668912053108215, 0.4800206422805786, 0.48293665051460266, 0.4685150980949402, 0.4605294167995453, 0.45897457003593445, 0.4516149163246155, 0.4516661763191223, 0.4464145600795746, 0.45696839690208435, 0.43673625588417053, 0.4392279386520386, 0.4419690668582916, 0.45823460817337036, 0.43450918793678284, 0.43469107151031494, 0.43927714228630066, 0.4250686764717102, 0.42103108763694763, 0.42826932668685913, 0.41190001368522644, 0.423956960439682, 0.4290938675403595, 0.4157343804836273, 0.41910839080810547, 0.41091451048851013], "val_accuracy": [0.5443333387374878, 0.6356666684150696, 0.6826666593551636, 0.7049999833106995, 0.7053333520889282, 0.6869999766349792, 0.7436666488647461, 0.7443333268165588, 0.7696666717529297, 0.768666684627533, 0.7713333368301392, 0.7733333110809326, 0.7820000052452087, 0.7860000133514404, 0.7733333110809326, 0.7873333096504211, 0.7919999957084656, 0.796999990940094, 0.8059999942779541, 0.8130000233650208, 0.8173333406448364, 0.7630000114440918, 0.8183333277702332, 0.7983333468437195, 0.8216666579246521, 0.8140000104904175, 0.8163333535194397, 0.8193333148956299, 0.8296666741371155, 0.8326666951179504, 0.8286666870117188, 0.8339999914169312, 0.8233333230018616, 0.8393333554267883, 0.8296666741371155, 0.8410000205039978, 0.8376666903495789, 0.8393333554267883, 0.8303333520889282, 0.8416666388511658, 0.8296666741371155, 0.8450000286102295, 0.8426666855812073, 0.8429999947547913, 0.843666672706604, 0.8506666421890259, 0.8389999866485596, 0.8450000286102295, 0.8416666388511658, 0.8426666855812073, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 1, 3, 5, 8, 2, 6, 7, 2, 8, 4, 5, 1, 5, 2, 1, 8, 9], [0, 0, 1, 0, 2, 1, 0, 1, 1, 3, 1, 1], [0, 39, 39, 58, 84], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 8, 6, 3, 2, 2], [4, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [4], [0]], "fitness": -0.21142856776714325, "mapping_values": [1, 32, 20, 12, 5, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha))), tf.math.add(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(alpha), grad))), alpha))), alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.411679744720459, 2.7568323612213135, 2.3057777881622314, 2.303406238555908, 2.303130626678467, 2.3030407428741455], "accuracy": [0.20023775100708008, 0.15982036292552948, 0.09866596013307571, 0.09602430462837219, 0.09879804402589798, 0.09708096832036972], "val_loss": [2.1582305431365967, 2.3084683418273926, 2.3034865856170654, 2.3027350902557373, 2.3025150299072266, 2.30238938331604], "val_accuracy": [0.2096666693687439, 0.0976666659116745, 0.10199999809265137, 0.09700000286102295, 0.109333336353302, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 6, 8, 2, 0, 2, 2, 0], [2, 4, 3, 1, 0, 3, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [1], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 1, 0, 1, 1, 18, 11, 7, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.sqrt(grad)), tf.math.add(tf.math.negative(grad), alpha))), tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310209274291992, 2.3102242946624756, 2.3088483810424805, 2.309267282485962, 2.3086740970611572, 2.3103668689727783], "accuracy": [0.09377889335155487, 0.09351472556591034, 0.0940430611371994, 0.09100515395402908, 0.09126931428909302, 0.08849557489156723], "val_loss": [2.308932304382324, 2.308932304382324, 2.308932304382324, 2.308932304382324, 2.308932304382324, 2.308932304382324], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 6, 3, 1, 3, 5, 2, 5, 3, 0, 2, 2, 0, 0, 2, 4, 6], [0, 0, 3, 2, 2, 1, 1, 3, 2, 0, 3, 2, 3], [80, 39, 39], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 30, 17, 13, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.square(grad), tf.math.add(grad, grad)), tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.negative(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(grad, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad))), grad)))), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310875177383423, 2.3091089725494385, 2.3101441860198975, 2.309077262878418, 2.3097784519195557, 2.310671806335449], "accuracy": [0.08902391046285629, 0.09417514503002167, 0.08968432247638702, 0.09113723784685135, 0.09285431355237961, 0.08994849026203156], "val_loss": [2.3090529441833496, 2.3090529441833496, 2.3090529441833496, 2.3090529441833496, 2.3090529441833496, 2.3090529441833496], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [37, 37], [0, 1], [0], [6], [0], [0, 0, 0, 1], [0, 7, 9], [2], [0]], "fitness": -0.08799999952316284, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 1, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), grad), tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.309920310974121, 2.309436082839966, 2.3096306324005127, 2.3091092109680176, 2.3107855319976807, 2.3096776008605957], "accuracy": [0.0956280529499054, 0.0940430611371994, 0.09060890227556229, 0.09206181764602661, 0.09219389408826828, 0.09298639744520187], "val_loss": [2.3083245754241943, 2.3083245754241943, 2.3083245754241943, 2.3083245754241943, 2.3083245754241943, 2.3083245754241943], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]