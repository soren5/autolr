[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.803428590297699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208918809890747, 1.596359133720398, 1.1328505277633667, 0.9992466568946838, 0.8668779134750366, 0.8255573511123657, 0.7776991724967957, 0.7583867907524109, 0.7119855284690857, 0.6886553764343262, 0.6857271790504456, 0.6820467710494995, 0.6290061473846436, 0.645820677280426, 0.606964111328125, 0.6087517738342285, 0.5834767818450928, 0.5814883708953857, 0.553104817867279, 0.5726889967918396, 0.5550026893615723, 0.5476127862930298, 0.5389586091041565, 0.5278802514076233, 0.5215286016464233, 0.5232464671134949, 0.5121323466300964, 0.4894259572029114, 0.4895384907722473, 0.4887114465236664, 0.48661816120147705, 0.47046130895614624, 0.468342661857605, 0.46146419644355774, 0.45805391669273376, 0.4562089145183563, 0.45674777030944824, 0.43953606486320496, 0.4407401978969574, 0.44488829374313354, 0.42660316824913025, 0.42845767736434937, 0.42796790599823, 0.4197728633880615, 0.420189768075943, 0.4145878851413727], "accuracy": [0.2670717239379883, 0.5097081065177917, 0.6087703108787537, 0.6326773166656494, 0.6860388517379761, 0.7009642124176025, 0.7147008180618286, 0.7193237543106079, 0.7395324110984802, 0.7481178045272827, 0.7474573850631714, 0.7454761862754822, 0.7708360552787781, 0.757099449634552, 0.7741381525993347, 0.7726852297782898, 0.7827235460281372, 0.7840443849563599, 0.7930260300636292, 0.783119797706604, 0.7979130744934082, 0.8001585006713867, 0.8062343001365662, 0.8035926818847656, 0.8067626357078552, 0.8033285140991211, 0.813498854637146, 0.817989706993103, 0.8165367841720581, 0.821820080280304, 0.8245938420295715, 0.8289526104927063, 0.8284242749214172, 0.828820526599884, 0.8368775844573975, 0.8285563588142395, 0.8309338092803955, 0.8389908671379089, 0.8348963260650635, 0.8337075710296631, 0.8436138033866882, 0.842028796672821, 0.8449346423149109, 0.8448025584220886, 0.8421608805656433, 0.8466516733169556], "val_loss": [1.9154267311096191, 1.1106733083724976, 0.9087437987327576, 0.8179523348808289, 0.7447376251220703, 0.7294712066650391, 0.6510839462280273, 0.6269847750663757, 0.6321497559547424, 0.6213585138320923, 0.6435137391090393, 0.5793614387512207, 0.5731440186500549, 0.6007011532783508, 0.595201313495636, 0.5515440106391907, 0.5422042608261108, 0.5447842478752136, 0.5252278447151184, 0.5071755647659302, 0.49910199642181396, 0.4850640892982483, 0.5142871141433716, 0.49018606543540955, 0.47292259335517883, 0.4798218607902527, 0.4766688644886017, 0.47061800956726074, 0.47430220246315, 0.4753258526325226, 0.46462491154670715, 0.4527503550052643, 0.4394274950027466, 0.455108106136322, 0.45740047097206116, 0.4558786153793335, 0.45146510004997253, 0.43373897671699524, 0.4305466413497925, 0.4230295419692993, 0.4107523560523987, 0.41662395000457764, 0.4197406470775604, 0.4216577112674713, 0.4389957785606384, 0.4092508554458618], "val_accuracy": [0.5386666655540466, 0.6256666779518127, 0.6743333339691162, 0.6826666593551636, 0.7126666903495789, 0.718999981880188, 0.7426666617393494, 0.7526666522026062, 0.7440000176429749, 0.7586666941642761, 0.7440000176429749, 0.778333306312561, 0.7716666460037231, 0.7593333125114441, 0.7630000114440918, 0.7886666655540466, 0.7823333144187927, 0.7820000052452087, 0.796999990940094, 0.8063333630561829, 0.8019999861717224, 0.8166666626930237, 0.7916666865348816, 0.8100000023841858, 0.8183333277702332, 0.8149999976158142, 0.8186666369438171, 0.8199999928474426, 0.8163333535194397, 0.8173333406448364, 0.8203333616256714, 0.8259999752044678, 0.8396666646003723, 0.8256666660308838, 0.8343333601951599, 0.8289999961853027, 0.831333339214325, 0.8403333425521851, 0.8429999947547913, 0.8476666808128357, 0.8516666889190674, 0.8510000109672546, 0.8460000157356262, 0.8446666598320007, 0.8303333520889282, 0.8493333458900452]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 7, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 87, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 37], [1, 0], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034377098083496, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 1], [0, 39, 39, 99], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [92.75344848632812, 10776.48046875, 179550.140625, 1290222.375, 5565317.0, 18455414.0], "accuracy": [0.1010434553027153, 0.10038304328918457, 0.09655263274908066, 0.09800554811954498, 0.10500594228506088, 0.10011887550354004], "val_loss": [809.504638671875, 39758.99609375, 422526.75, 2296653.25, 8591574.0, 25325442.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 2, 1, 3, 5, 0, 9, 3, 4, 6, 4, 9, 0, 8, 6, 6, 0, 8, 9], [0, 0, 1, 3, 2, 0, 1, 2], [0, 39, 39, 46, 32, 48], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 1], [0, 5], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 20, 8, 6, 10, 6, 4, 1, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 4], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 4, 6, 3, 8, 2, 9, 0], [2, 0, 3, 1, 0], [16, 37, 86], [0, 1], [0], [6], [0], [1], [0], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 6, 3, 3, 2, 14, 9, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), alpha)), tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309528350830078, 2.309677839279175, 2.309455633163452, 2.3097798824310303, 2.3096764087677, 2.310924530029297], "accuracy": [0.08809932321310043, 0.09325055778026581, 0.09338264167308807, 0.09126931428909302, 0.09457138925790787, 0.09192973375320435], "val_loss": [2.3086719512939453, 2.3086719512939453, 2.3086719512939453, 2.3086719512939453, 2.3086719512939453, 2.3086719512939453], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]