[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8168571591377258, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109732627868652, 1.6079415082931519, 1.1329885721206665, 0.9691957831382751, 0.8968296647071838, 0.8307844996452332, 0.7832398414611816, 0.7438055872917175, 0.7322614789009094, 0.7101577520370483, 0.6794220805168152, 0.6849435567855835, 0.639013946056366, 0.6467480063438416, 0.6394386887550354, 0.6165977716445923, 0.5963141918182373, 0.5923393964767456, 0.5739985704421997, 0.5710434913635254, 0.5553954839706421, 0.5443001985549927, 0.5462719202041626, 0.5359994173049927, 0.517193078994751, 0.5184590220451355, 0.5266485214233398, 0.5170590877532959, 0.5032317638397217, 0.5054568648338318, 0.49372977018356323, 0.48330768942832947, 0.48433220386505127, 0.4681556522846222, 0.4694708585739136, 0.4731917381286621, 0.46171826124191284, 0.4518115520477295, 0.445375919342041, 0.44474515318870544, 0.4457150399684906, 0.4357289671897888, 0.4306395649909973, 0.43666332960128784, 0.4298498332500458, 0.4227823317050934, 0.4247210919857025], "accuracy": [0.2583542466163635, 0.5050851702690125, 0.6102232336997986, 0.6507726907730103, 0.6740192770957947, 0.6948884129524231, 0.7074362635612488, 0.7271166443824768, 0.7292299270629883, 0.7372870445251465, 0.7445515990257263, 0.7403249144554138, 0.765949010848999, 0.7559106945991516, 0.7644960880279541, 0.7703077793121338, 0.7769119143486023, 0.7758552432060242, 0.7898560166358948, 0.7837802171707153, 0.7957997918128967, 0.7994980812072754, 0.7942147850990295, 0.8037247657775879, 0.806630551815033, 0.8080834746360779, 0.8021397590637207, 0.8096684813499451, 0.8146876096725464, 0.8168009519577026, 0.8201030492782593, 0.8212917447090149, 0.8248580098152161, 0.8278959393501282, 0.8276317715644836, 0.8234050869941711, 0.8297450542449951, 0.8374059200286865, 0.8355567455291748, 0.8396512866020203, 0.8385946154594421, 0.8389908671379089, 0.8432175517082214, 0.8385946154594421, 0.8455950617790222, 0.8482366800308228, 0.8461233377456665], "val_loss": [1.919843316078186, 1.0868571996688843, 0.8595349788665771, 0.8062835931777954, 0.7175911664962769, 0.654260516166687, 0.6809594035148621, 0.6613374352455139, 0.6270078420639038, 0.5775569677352905, 0.6016289591789246, 0.5425341725349426, 0.5601934194564819, 0.521612823009491, 0.5077579617500305, 0.5076388120651245, 0.5584480166435242, 0.5241966247558594, 0.515131413936615, 0.4872303009033203, 0.4855424761772156, 0.4652565121650696, 0.4628317952156067, 0.45430436730384827, 0.44562944769859314, 0.47081631422042847, 0.4783288836479187, 0.4546477198600769, 0.4577837586402893, 0.4258956015110016, 0.428194135427475, 0.43843215703964233, 0.41847899556159973, 0.418260782957077, 0.4477962255477905, 0.423204630613327, 0.4181845188140869, 0.4075861871242523, 0.4019763171672821, 0.41589975357055664, 0.40989261865615845, 0.39351701736450195, 0.4007464051246643, 0.40221261978149414, 0.396427720785141, 0.385743111371994, 0.3869255781173706], "val_accuracy": [0.5873333215713501, 0.6626666784286499, 0.690666675567627, 0.7136666774749756, 0.731333315372467, 0.7630000114440918, 0.7363333106040955, 0.734000027179718, 0.7616666555404663, 0.7816666960716248, 0.765999972820282, 0.800000011920929, 0.7889999747276306, 0.8109999895095825, 0.8196666836738586, 0.8226666450500488, 0.7943333387374878, 0.8019999861717224, 0.8033333420753479, 0.8246666789054871, 0.8230000138282776, 0.8373333215713501, 0.8370000123977661, 0.8330000042915344, 0.8433333039283752, 0.8113333582878113, 0.8076666593551636, 0.8343333601951599, 0.8343333601951599, 0.847000002861023, 0.8506666421890259, 0.8386666774749756, 0.8503333330154419, 0.8556666374206543, 0.8289999961853027, 0.8513333201408386, 0.8500000238418579, 0.8553333282470703, 0.856333315372467, 0.8443333506584167, 0.8433333039283752, 0.8653333187103271, 0.8553333282470703, 0.8600000143051147, 0.8529999852180481, 0.8653333187103271, 0.862666666507721]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 2, 3, 1, 3, 5, 7, 3, 3, 8, 5, 7], [0, 0, 1, 0, 2, 3, 0, 1, 0, 1], [0, 19, 58, 21, 85], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 5, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), alpha)), tf.math.square(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3029885292053223, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 6, 3, 1, 1, 5, 1, 4, 3, 3, 9, 3, 1, 4, 7], [0, 0, 1, 0, 2, 0, 1, 0, 3, 0, 3, 3], [0, 68, 39, 40, 14, 26, 87], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 37], [0, 0, 1, 1], [5, 6], [1, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 15, 12, 7, 4, 2, 2, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.pow(tf.math.multiply(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038547039031982, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 26], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 6, 6, 3, 8, 2, 0], [3, 0, 3, 1, 0, 4], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 14, 8, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304151773452759, 2.515211820602417, 17.90696144104004, 84.86117553710938, 206.03469848632812, 375.32598876953125], "accuracy": [0.10421344637870789, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3109638690948486, 4.6673808097839355, 48.40253829956055, 147.80615234375, 298.7657775878906, 491.21209716796875], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [2, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 7, 6, 7, 5, 1, 3], [6, 0, 4, 2, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 9, 5, 4, 1, 13, 7, 6, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.subtract(tf.math.multiply(beta, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032774925231934, 2.4389474391937256, 6.509267807006836, 14.618152618408203, 13.50489616394043, 13.445508003234863], "accuracy": [0.10289261490106583, 0.09589222073554993, 0.10342095047235489, 0.09655263274908066, 0.08149518072605133, 0.08281600475311279], "val_loss": [2.3025851249694824, 2.486672878265381, 11.957069396972656, 9.648002624511719, 9.277701377868652, 8.895992279052734], "val_accuracy": [0.10233332961797714, 0.09799999743700027, 0.09866666793823242, 0.0806666687130928, 0.06499999761581421, 0.0676666647195816]}}]