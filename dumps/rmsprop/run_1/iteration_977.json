[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7991428375244141, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.204509735107422, 1.5894519090652466, 1.1484328508377075, 0.9565045237541199, 0.8629924654960632, 0.8070150017738342, 0.7834703922271729, 0.7301093935966492, 0.7038701176643372, 0.6963098645210266, 0.6776743531227112, 0.6532601118087769, 0.6381612420082092, 0.6381099224090576, 0.609603226184845, 0.585180401802063, 0.5846624374389648, 0.5745840668678284, 0.560257613658905, 0.563513457775116, 0.552087128162384, 0.5377019047737122, 0.536985456943512, 0.543526828289032, 0.5182958245277405], "accuracy": [0.27103421092033386, 0.5077268481254578, 0.5978074073791504, 0.6600185036659241, 0.6873596906661987, 0.7047945857048035, 0.707568347454071, 0.7316074371337891, 0.737947404384613, 0.7413815855979919, 0.7449478507041931, 0.7666094303131104, 0.7611940503120422, 0.7623828053474426, 0.7740060687065125, 0.7825914621353149, 0.7794214487075806, 0.7910447716712952, 0.7936864495277405, 0.7877426743507385, 0.7928939461708069, 0.8014793395996094, 0.8038568496704102, 0.8014793395996094, 0.8105930685997009], "val_loss": [1.9003132581710815, 1.1480050086975098, 0.9498464465141296, 0.8010454773902893, 0.7451891303062439, 0.6924545764923096, 0.6780368089675903, 0.6769408583641052, 0.659755527973175, 0.6111504435539246, 0.6273877024650574, 0.5906193256378174, 0.621659517288208, 0.5749219655990601, 0.5713398456573486, 0.5724948048591614, 0.5546268820762634, 0.5225864052772522, 0.5248947143554688, 0.5159796476364136, 0.510266900062561, 0.5152374505996704, 0.5156401991844177, 0.5137338638305664, 0.5084119439125061], "val_accuracy": [0.5329999923706055, 0.640666663646698, 0.6430000066757202, 0.7153333425521851, 0.731333315372467, 0.7429999709129333, 0.746666669845581, 0.7336666584014893, 0.7386666536331177, 0.7726666927337646, 0.7620000243186951, 0.777999997138977, 0.7540000081062317, 0.7933333516120911, 0.7943333387374878, 0.7900000214576721, 0.8013333082199097, 0.8073333501815796, 0.8013333082199097, 0.8233333230018616, 0.8190000057220459, 0.812333345413208, 0.8143333196640015, 0.8133333325386047, 0.8143333196640015]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 3, 7, 3, 5, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 37], [0, 0, 1], [0, 8], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 11, 6, 5, 1, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.277853488922119, 2.3300116062164307, 2.33144211769104, 2.319868564605713, 2.3196635246276855, 2.334099769592285, 2.3368611335754395, 2.3325488567352295, 2.32627272605896], "accuracy": [0.13789460062980652, 0.09774138033390045, 0.10117553919553757, 0.09721305221319199, 0.10130762308835983, 0.09800554811954498, 0.10051512718200684, 0.09919429570436478, 0.1002509593963623], "val_loss": [2.3230950832366943, 2.304483652114868, 2.315784215927124, 2.3435263633728027, 2.3415920734405518, 2.315277576446533, 2.313732147216797, 2.3374013900756836, 2.3566646575927734], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.09866666793823242, 0.10199999809265137, 0.0963333323597908, 0.09866666793823242, 0.0989999994635582, 0.10166666656732559, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 0, 2, 1, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 6, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303715229034424, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [7, 2, 3, 1, 3, 6, 6, 0, 2, 6, 2, 2, 3, 7, 0, 7, 1, 8, 1, 5, 0, 4, 1, 6, 0, 9], [2, 0, 0, 0, 2, 0, 3, 2, 2, 3, 0, 0, 2, 1, 1, 1, 2, 2, 0], [0, 39, 39, 24, 71, 49, 51, 83], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0], [13, 37], [0, 0, 0, 1, 1], [0, 5, 6], [6, 4], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 45, 26, 19, 8, 2, 1, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.add(grad, grad))), grad), tf.math.subtract(tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, alpha))))))), tf.math.square(tf.math.negative(tf.math.pow(alpha, alpha)))), tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad), grad)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308894634246826, 2.3106529712677, 2.310467004776001, 2.3100149631500244, 2.3100526332855225, 2.310643196105957], "accuracy": [0.09760929644107819, 0.09259014576673508, 0.09377889335155487, 0.09642054885625839, 0.0866464152932167, 0.0878351628780365], "val_loss": [2.3083763122558594, 2.3083763122558594, 2.3083763122558594, 2.3083763122558594, 2.3083763122558594, 2.3083763122558594], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]