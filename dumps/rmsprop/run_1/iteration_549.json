[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7768571376800537, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211176872253418, 1.5948749780654907, 1.1522042751312256, 0.9636389017105103, 0.9036527872085571, 0.8467110395431519, 0.7949590682983398, 0.7616066336631775, 0.7359727621078491, 0.7038923501968384, 0.6913166046142578, 0.6606126427650452, 0.6676033735275269, 0.6418377757072449, 0.62287837266922, 0.6049411296844482], "accuracy": [0.2666754722595215, 0.5094439387321472, 0.5933166146278381, 0.6584334969520569, 0.6724342703819275, 0.6976621150970459, 0.7054550051689148, 0.7193237543106079, 0.7285695672035217, 0.7424382567405701, 0.7417778372764587, 0.7600052952766418, 0.7490423917770386, 0.7592127919197083, 0.7691190242767334, 0.778761088848114], "val_loss": [1.920662760734558, 1.0843545198440552, 0.9079595804214478, 0.7646495699882507, 0.7356300354003906, 0.726666271686554, 0.6495344042778015, 0.649992048740387, 0.6020543575286865, 0.6191411018371582, 0.5639602541923523, 0.5746490955352783, 0.555184543132782, 0.5697110891342163, 0.5500788688659668, 0.6006723046302795], "val_accuracy": [0.5416666865348816, 0.6703333258628845, 0.690666675567627, 0.7213333249092102, 0.7173333168029785, 0.7059999704360962, 0.7573333382606506, 0.7526666522026062, 0.7576666474342346, 0.7566666603088379, 0.7870000004768372, 0.778333306312561, 0.7853333353996277, 0.762333333492279, 0.7693333625793457, 0.7476666569709778]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 2, 3, 5, 3, 5, 2, 5, 5, 8, 4, 3, 7, 8, 1, 7, 7, 2, 1, 9], [0, 0, 3, 0, 2, 1, 2, 3, 3, 2, 3, 3, 1], [0, 39, 39, 42], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 2, 3, 1, 0], [18, 37], [1, 1], [0], [6], [0], [1], [0], [7], [0]], "fitness": -0.404285728931427, "mapping_values": [1, 33, 20, 13, 4, 11, 6, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.square(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(grad, alpha), tf.math.sqrt(grad)), tf.math.subtract(grad, tf.math.add(tf.math.add(grad, grad), tf.math.add(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), grad)))))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(beta, tf.math.multiply(grad, tf.math.subtract(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2025513648986816, 2.4661831855773926, 2.232236862182617, 2.30737042427063, 2.303821563720703, 2.273111343383789, 2.3395674228668213, 2.139502763748169, 2.4882266521453857, 2.3004472255706787, 2.4188623428344727, 2.3042051792144775, 2.3035571575164795], "accuracy": [0.22863557934761047, 0.13195087015628815, 0.17500990629196167, 0.16114120185375214, 0.0952318087220192, 0.14859332144260406, 0.14159291982650757, 0.23418307304382324, 0.12970545887947083, 0.11174217611551285, 0.13630960881710052, 0.1022322028875351, 0.0944393053650856], "val_loss": [2.0554208755493164, 2.3060123920440674, 2.320929765701294, 2.3045318126678467, 2.3005545139312744, 2.3211283683776855, 2.1705403327941895, 3.143204689025879, 2.303032636642456, 2.2586095333099365, 2.3044161796569824, 2.3028697967529297, 2.3025546073913574], "val_accuracy": [0.21266666054725647, 0.09866666793823242, 0.22100000083446503, 0.09866666793823242, 0.14766666293144226, 0.17900000512599945, 0.14233332872390747, 0.4126666784286499, 0.09866666793823242, 0.14399999380111694, 0.09866666793823242, 0.09866666793823242, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [3, 2, 3, 1, 5, 5], [0, 0, 1, 0, 2], [0, 39, 8], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2, 3, 6, 8, 7, 0, 1, 8, 7, 6, 5, 1, 6], [2, 0, 3, 1, 0, 2, 5, 2, 3, 5, 1, 5], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 2, 31, 19, 12, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), alpha), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), tf.math.subtract(beta, tf.math.divide_no_nan(grad, grad))))), alpha)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 0, 1, 0, 2], [0, 91, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0, 4], [16, 37], [0, 1], [9], [4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 7, 6, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.044311547912904e+22, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.894113514647059e+27, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 6, 3, 6, 2], [2, 2, 3, 1, 0], [16, 37], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [8, 3, 1, 5, 8, 2, 9], [6, 5, 3], [0], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 0, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.negative(beta)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.math.square(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098011016845703, 2.3097286224365234, 2.310837507247925, 2.3106446266174316, 2.310385227203369, 2.309952974319458], "accuracy": [0.09708096832036972, 0.09166556596755981, 0.08849557489156723, 0.09219389408826828, 0.08994849026203156, 0.09760929644107819], "val_loss": [2.308542251586914, 2.308542251586914, 2.308542251586914, 2.308542251586914, 2.308542251586914, 2.308542251586914], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]