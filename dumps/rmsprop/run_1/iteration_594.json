[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8222857117652893, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2117345333099365, 1.6146034002304077, 1.190562129020691, 0.9700990319252014, 0.8832385540008545, 0.8301265239715576, 0.7725191712379456, 0.7758070826530457, 0.7113895416259766, 0.6988850831985474, 0.7064575552940369, 0.6566005945205688, 0.6328241229057312, 0.6425792574882507, 0.6331185698509216, 0.5949461460113525, 0.5868629217147827, 0.5862307548522949, 0.5604965090751648, 0.5661756992340088, 0.551707923412323, 0.5754652619361877, 0.5452324748039246, 0.5283585786819458, 0.5226418972015381, 0.519330620765686, 0.5177520513534546, 0.4970730245113373, 0.5013927817344666, 0.49609267711639404, 0.4874473810195923, 0.47895559668540955, 0.4755443334579468, 0.4751751720905304, 0.47318235039711], "accuracy": [0.2654867172241211, 0.502971887588501, 0.581429123878479, 0.6540747880935669, 0.6833971738815308, 0.6973979473114014, 0.7211728692054749, 0.7100779414176941, 0.7341170310974121, 0.7378153204917908, 0.7343811988830566, 0.7578919529914856, 0.770439863204956, 0.7531369924545288, 0.7618544697761536, 0.7786290049552917, 0.7791573405265808, 0.7796856164932251, 0.7930260300636292, 0.7889314293861389, 0.7936864495277405, 0.7839123010635376, 0.7944789528846741, 0.8064984679222107, 0.7992339134216309, 0.8055738806724548, 0.8092722296714783, 0.8195747137069702, 0.8121780753135681, 0.8149517774581909, 0.8198388814926147, 0.8231409192085266, 0.8189142942428589, 0.8255184292793274, 0.8253863453865051], "val_loss": [1.924597978591919, 1.1133642196655273, 0.8951553702354431, 0.8035194277763367, 0.7325374484062195, 0.6854733824729919, 0.6558095216751099, 0.6418985724449158, 0.6055715084075928, 0.6280490756034851, 0.5756628513336182, 0.5897212028503418, 0.576995313167572, 0.5774058699607849, 0.5341433882713318, 0.5216982960700989, 0.5221793055534363, 0.5049919486045837, 0.5066360235214233, 0.5008595585823059, 0.5056639909744263, 0.5340485572814941, 0.48359212279319763, 0.5047236680984497, 0.5168353319168091, 0.4612220823764801, 0.4615726172924042, 0.49141284823417664, 0.4720326364040375, 0.4608024060726166, 0.4632132947444916, 0.4669792056083679, 0.45982626080513, 0.4843797981739044, 0.4516853988170624], "val_accuracy": [0.5743333101272583, 0.6306666731834412, 0.6963333487510681, 0.7009999752044678, 0.7353333234786987, 0.746999979019165, 0.750333309173584, 0.7673333287239075, 0.7663333415985107, 0.762333333492279, 0.7873333096504211, 0.7889999747276306, 0.7636666893959045, 0.7616666555404663, 0.8016666769981384, 0.8040000200271606, 0.8026666641235352, 0.8109999895095825, 0.8096666932106018, 0.8140000104904175, 0.8003333210945129, 0.768666684627533, 0.8173333406448364, 0.8053333163261414, 0.7926666736602783, 0.8289999961853027, 0.8273333311080933, 0.8059999942779541, 0.8256666660308838, 0.8326666951179504, 0.8259999752044678, 0.8226666450500488, 0.8273333311080933, 0.8046666383743286, 0.82833331823349]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 2, 4, 3, 6, 0], [6, 6, 1, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 13, 7, 6, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.multiply(grad, grad), tf.math.divide_no_nan(alpha, alpha)), tf.math.negative(alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 5, 3, 8, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [4, 7, 0, 6, 3, 8, 2, 0, 6, 7, 0, 9], [1, 0, 5, 0, 0, 5, 5], [16, 1, 34, 52], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 19, 12, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8, 3, 8, 0, 7, 1, 1], [3, 0, 1, 0, 2, 3, 3, 3, 0], [0, 94, 16], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 0, 6, 3, 5, 0], [1, 0, 3, 1, 0], [16, 37], [0, 1, 1], [7], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 3, 10, 6, 4, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.multiply(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.subtract(grad, grad), tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 1, 4, 3, 5, 5, 6, 8], [0, 1, 1, 0, 2, 1, 2, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2, 5], [2, 0, 3, 1, 0], [16, 37], [0, 1, 0, 1, 1], [1, 2], [6, 7, 0], [0], [1], [0], [3], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 22, 13, 9, 2, 11, 8, 3, 2, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.pow(grad, tf.math.multiply(alpha, grad)), tf.math.square(tf.math.square(tf.math.divide_no_nan(grad, tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3101918697357178, 2.3103232383728027, 2.3101608753204346, 2.309731960296631, 2.310027599334717, 2.3088936805725098], "accuracy": [0.09391097724437714, 0.09417514503002167, 0.09311848133802414, 0.09351472556591034, 0.08942015469074249, 0.09496764093637466], "val_loss": [2.308288335800171, 2.308288335800171, 2.308288335800171, 2.308288335800171, 2.308288335800171, 2.308288335800171], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]