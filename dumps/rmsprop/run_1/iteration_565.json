[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8134285807609558, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211919069290161, 1.6141877174377441, 1.132370948791504, 0.9844334721565247, 0.8919782638549805, 0.8304193615913391, 0.7963621020317078, 0.7635056376457214, 0.7391994595527649, 0.7080822587013245, 0.6849182844161987, 0.6678662896156311, 0.6557154655456543, 0.655907928943634, 0.6217654347419739, 0.6262067556381226, 0.6000738739967346, 0.5915187001228333, 0.5806417465209961, 0.5788896083831787, 0.5645330548286438, 0.5582921504974365, 0.5440638065338135, 0.5355868339538574, 0.5223265886306763, 0.5168498158454895, 0.5072327852249146, 0.5126500129699707, 0.5077633857727051, 0.5023845434188843, 0.4907696545124054, 0.5064615607261658, 0.4896458387374878, 0.47569888830184937, 0.462660551071167, 0.4687613844871521, 0.4588908851146698, 0.4526843726634979, 0.45188239216804504, 0.45188212394714355, 0.44385039806365967, 0.43530088663101196, 0.44214534759521484, 0.4254344701766968, 0.42287367582321167, 0.4207136034965515, 0.41607511043548584, 0.41712260246276855], "accuracy": [0.2569013237953186, 0.49689605832099915, 0.599128246307373, 0.6440364718437195, 0.6773213744163513, 0.7042662501335144, 0.7016246318817139, 0.7165499925613403, 0.7231541275978088, 0.7343811988830566, 0.7423061728477478, 0.7553823590278625, 0.7574957013130188, 0.7497028112411499, 0.7697794437408447, 0.7589486241340637, 0.7718927264213562, 0.7790252566337585, 0.7804781198501587, 0.7820631265640259, 0.7884030938148499, 0.7946110367774963, 0.7959318161010742, 0.8018755912780762, 0.8059701323509216, 0.8105930685997009, 0.813498854637146, 0.8088759779930115, 0.8128384351730347, 0.8178576231002808, 0.817989706993103, 0.8128384351730347, 0.8190463781356812, 0.8286884427070618, 0.8274996876716614, 0.8296129703521729, 0.8329150676727295, 0.8345000743865967, 0.8352925777435303, 0.8341038227081299, 0.8381983637809753, 0.8428213000297546, 0.8348963260650635, 0.8451988101005554, 0.8479725122451782, 0.8453308939933777, 0.8466516733169556, 0.8474441766738892], "val_loss": [1.9265516996383667, 1.1184332370758057, 0.9085006713867188, 0.7936412692070007, 0.7659194469451904, 0.7301510572433472, 0.6806352734565735, 0.6881346106529236, 0.6306079626083374, 0.6291151642799377, 0.6402966380119324, 0.6217170357704163, 0.6012960076332092, 0.6102555394172668, 0.5786657929420471, 0.5604923367500305, 0.5560119152069092, 0.5656143426895142, 0.5480347275733948, 0.5507144927978516, 0.5264642834663391, 0.5299597978591919, 0.5073646306991577, 0.4982742965221405, 0.4964841306209564, 0.4895271360874176, 0.49178367853164673, 0.4819997549057007, 0.4754446744918823, 0.47727829217910767, 0.46959009766578674, 0.4730931520462036, 0.4645911455154419, 0.4557587206363678, 0.4607679843902588, 0.4498196244239807, 0.4501907527446747, 0.4433937072753906, 0.4527614414691925, 0.44879886507987976, 0.43797728419303894, 0.44301578402519226, 0.43249979615211487, 0.4348701238632202, 0.4418506324291229, 0.4206150770187378, 0.4233146011829376, 0.43414226174354553], "val_accuracy": [0.5723333358764648, 0.6476666927337646, 0.6579999923706055, 0.6943333148956299, 0.7253333330154419, 0.7210000157356262, 0.7323333621025085, 0.731333315372467, 0.7603333592414856, 0.7616666555404663, 0.7353333234786987, 0.7523333430290222, 0.7603333592414856, 0.7609999775886536, 0.7903333306312561, 0.7833333611488342, 0.7906666398048401, 0.7833333611488342, 0.7940000295639038, 0.7963333129882812, 0.8059999942779541, 0.7950000166893005, 0.8069999814033508, 0.8183333277702332, 0.8159999847412109, 0.8233333230018616, 0.8113333582878113, 0.8186666369438171, 0.8159999847412109, 0.8216666579246521, 0.8253333568572998, 0.8220000267028809, 0.828000009059906, 0.8316666483879089, 0.8266666531562805, 0.8320000171661377, 0.8363333344459534, 0.8349999785423279, 0.8333333134651184, 0.8316666483879089, 0.8403333425521851, 0.8306666612625122, 0.8423333168029785, 0.8396666646003723, 0.8353333473205566, 0.8410000205039978, 0.8379999995231628, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37, 91], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.14257143437862396, "mapping_values": [1, 10, 5, 5, 3, 10, 5, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3644375801086426, 2.305910587310791, 2.3026437759399414, 2.3036327362060547, 2.3082501888275146, 2.3016867637634277], "accuracy": [0.1080438494682312, 0.11927089840173721, 0.11398758739233017, 0.11306300014257431, 0.1088363528251648, 0.10355303436517715], "val_loss": [2.2948150634765625, 2.2817463874816895, 2.287811279296875, 2.2891628742218018, 2.3025481700897217, 2.287684440612793], "val_accuracy": [0.156333327293396, 0.11699999868869781, 0.12399999797344208, 0.1276666671037674, 0.09833333641290665, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 7, 2, 9, 8, 6, 9, 0, 6, 9, 3], [2, 0, 3, 1, 0, 5], [16, 1, 94, 90, 83], [1, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 22, 16, 6, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 2, 6, 1, 2, 5, 6, 9], [0, 0, 1, 0, 2], [0, 39, 39, 76], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 13, 8, 5, 4, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089542388916016, 2.3085200786590576, 2.3096675872802734, 2.3099660873413086, 2.310584306716919, 2.309596538543701], "accuracy": [0.09087307006120682, 0.09694888442754745, 0.09126931428909302, 0.09668471664190292, 0.09285431355237961, 0.0936468094587326], "val_loss": [2.3083603382110596, 2.3083603382110596, 2.3083603382110596, 2.3083603382110596, 2.3083603382110596, 2.3083603382110596], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 0, 1, 5, 7, 2, 2, 7, 3, 1, 4, 8, 1, 0, 3], [0, 0, 0, 0, 2, 3, 1, 0, 3, 3, 3, 1, 1, 3, 3], [0, 39, 39, 38, 58], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [25, 1], [1, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 35, 20, 15, 5, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.square(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(alpha, tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(grad, grad)), tf.math.negative(grad)))), tf.math.multiply(alpha, alpha)), grad), grad))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100435733795166, 2.310482978820801, 2.3105146884918213, 2.310663938522339, 2.3104543685913086, 2.3099985122680664], "accuracy": [0.08558975160121918, 0.08598599582910538, 0.09087307006120682, 0.09074098616838455, 0.08730682730674744, 0.09866596013307571], "val_loss": [2.309091567993164, 2.309091567993164, 2.309091567993164, 2.309091567993164, 2.309091567993164, 2.309091567993164], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]