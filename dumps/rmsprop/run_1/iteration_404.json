[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2084856033325195, 1.5958402156829834, 1.1595094203948975, 0.9671658277511597, 0.8896328210830688, 0.8164627552032471, 0.8111087679862976, 0.740527868270874, 0.7306778430938721, 0.7182925343513489, 0.6798936724662781, 0.6595925688743591, 0.6514012217521667, 0.6378349661827087, 0.6304364204406738, 0.6201589703559875, 0.5879976153373718, 0.6012445688247681, 0.5781904458999634, 0.5855208039283752, 0.5575414896011353, 0.5642598271369934, 0.542676568031311, 0.5373890995979309, 0.5334945321083069, 0.5351902842521667, 0.5180184841156006, 0.518958568572998, 0.508784294128418, 0.5035755634307861, 0.4925456941127777, 0.4899945855140686, 0.4914172291755676, 0.4807640612125397, 0.4696876108646393, 0.4679611921310425, 0.47072702646255493, 0.45962458848953247, 0.454034686088562, 0.4565868675708771, 0.43727731704711914, 0.4551396667957306, 0.4392244517803192, 0.4272189736366272, 0.4284420311450958, 0.4308355748653412, 0.43353763222694397, 0.4204748570919037, 0.4229831397533417, 0.4100464880466461], "accuracy": [0.2693171203136444, 0.5052172541618347, 0.5930524468421936, 0.6542068123817444, 0.6744155287742615, 0.698718786239624, 0.7034738063812256, 0.7275128960609436, 0.722757875919342, 0.733588695526123, 0.7478536367416382, 0.7532690763473511, 0.7593448758125305, 0.7648923397064209, 0.7643640041351318, 0.7687227725982666, 0.7854973077774048, 0.7721568942070007, 0.7872143983840942, 0.7765156626701355, 0.7944789528846741, 0.7926297783851624, 0.7961959838867188, 0.8035926818847656, 0.8034605979919434, 0.8020076751708984, 0.8061022162437439, 0.8107251524925232, 0.8137630224227905, 0.8156121969223022, 0.819442629814148, 0.8153480291366577, 0.8186501264572144, 0.8247259259223938, 0.8231409192085266, 0.8300092220306396, 0.8252542614936829, 0.832650899887085, 0.8335754871368408, 0.833179235458374, 0.839519202709198, 0.8300092220306396, 0.8367455005645752, 0.8417646288871765, 0.8430854678153992, 0.8418967127799988, 0.8413683772087097, 0.8425571322441101, 0.8403117060661316, 0.8506141901016235], "val_loss": [1.9063889980316162, 1.1226451396942139, 0.8895896077156067, 0.8104583621025085, 0.7577563524246216, 0.6833328604698181, 0.6704844236373901, 0.6360582113265991, 0.6381727457046509, 0.6044459342956543, 0.59480220079422, 0.6034872531890869, 0.5915801525115967, 0.5534715056419373, 0.5490397214889526, 0.5382785797119141, 0.538478672504425, 0.5257705450057983, 0.5182956457138062, 0.5065273642539978, 0.5352269411087036, 0.4865491986274719, 0.4909868538379669, 0.4832182228565216, 0.4838219881057739, 0.4808875322341919, 0.46879011392593384, 0.47074201703071594, 0.4831966161727905, 0.4717915952205658, 0.45987042784690857, 0.4468385875225067, 0.4474197328090668, 0.4469541907310486, 0.44736796617507935, 0.45579174160957336, 0.43624353408813477, 0.44326871633529663, 0.4260784089565277, 0.44212841987609863, 0.4302787780761719, 0.4288158416748047, 0.420736163854599, 0.4250548779964447, 0.4105873107910156, 0.4106575846672058, 0.4166848957538605, 0.42352959513664246, 0.41633501648902893, 0.4024498760700226], "val_accuracy": [0.5773333311080933, 0.6443333625793457, 0.6896666884422302, 0.6923333406448364, 0.6946666836738586, 0.7476666569709778, 0.7383333444595337, 0.7609999775886536, 0.7596666812896729, 0.7720000147819519, 0.7643333077430725, 0.7646666765213013, 0.7649999856948853, 0.7879999876022339, 0.7866666913032532, 0.7963333129882812, 0.7956666946411133, 0.7953333258628845, 0.8009999990463257, 0.809333324432373, 0.7913333177566528, 0.812666654586792, 0.8073333501815796, 0.8119999766349792, 0.812666654586792, 0.8163333535194397, 0.8236666917800903, 0.8216666579246521, 0.8076666593551636, 0.8193333148956299, 0.8193333148956299, 0.8306666612625122, 0.8233333230018616, 0.8273333311080933, 0.8330000042915344, 0.8213333487510681, 0.8349999785423279, 0.8303333520889282, 0.8396666646003723, 0.82833331823349, 0.8316666483879089, 0.8399999737739563, 0.8393333554267883, 0.8373333215713501, 0.8479999899864197, 0.8410000205039978, 0.8379999995231628, 0.8396666646003723, 0.8429999947547913, 0.846666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 4, 7, 4, 8], [0, 2, 1, 0, 2, 3, 3, 0], [0, 39, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 1, 8, 7, 0, 4, 7, 6, 5, 8, 2, 7, 8, 4, 0, 8, 2, 2, 2, 7, 0, 3], [0, 5, 3, 1, 0, 7, 4, 2, 7, 0, 0, 1, 4, 5, 0, 7], [0, 69, 23, 37, 14], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 3, 5, 3, 2, 1, 39, 23, 16, 5, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(grad, tf.math.pow(grad, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.add(grad, sigma)), tf.math.negative(tf.math.pow(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.math.add(grad, grad), tf.math.sqrt(beta)))), tf.math.pow(tf.math.negative(grad), tf.math.sqrt(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), grad), tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033275604248047, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 6, 2, 7, 8, 2, 3, 6, 6, 4, 2, 1, 7, 9, 8], [0, 0, 1, 0, 2, 2, 3, 2, 0, 3, 0, 1, 0, 1, 2], [0, 39, 39, 40, 33, 60, 60], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 3, 7, 3, 4, 6, 1, 3, 0], [2, 0, 2, 1, 0, 2, 3, 4, 3, 1, 4, 2], [16, 63], [0, 0, 1, 0, 0, 0, 1, 0, 1], [3, 8, 2, 5, 8, 5], [0, 5, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta), grad)), tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(grad, grad), alpha), tf.math.negative(grad))), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.sqrt(grad)), tf.math.square(sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}, "mapping_values": [1, 35, 20, 15, 7, 27, 15, 12, 2, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 30}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 3, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034541606903076, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 8, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [1], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3103246688842773, 2.3096299171447754, 2.309506893157959, 2.310149908065796, 2.310722589492798, 2.3089194297790527], "accuracy": [0.0940430611371994, 0.0936468094587326, 0.09021265059709549, 0.09576013684272766, 0.09430722147226334, 0.09153348207473755], "val_loss": [2.3078267574310303, 2.3078267574310303, 2.3078267574310303, 2.3078267574310303, 2.3078267574310303, 2.3078267574310303], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]