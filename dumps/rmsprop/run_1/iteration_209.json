[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206282615661621, 1.5903080701828003, 1.1326273679733276, 0.9803632497787476, 0.8858007192611694, 0.8188667297363281, 0.782663881778717, 0.7515677213668823, 0.6985318660736084, 0.6992713809013367, 0.6767483353614807, 0.6638011336326599, 0.6692556738853455, 0.6298902034759521, 0.6317590475082397, 0.5934788584709167, 0.608288049697876, 0.5902170538902283, 0.5805680155754089, 0.5636020302772522, 0.558696448802948, 0.5452665686607361, 0.5383248329162598, 0.5286402702331543, 0.5260521173477173, 0.5336925387382507, 0.5113201141357422, 0.503714919090271, 0.5056248903274536, 0.4902085065841675, 0.48414158821105957, 0.47734618186950684, 0.4831582009792328, 0.46560949087142944, 0.4612608850002289, 0.453922837972641, 0.4591817855834961, 0.4499166011810303, 0.4576273560523987, 0.45290330052375793, 0.43348902463912964, 0.4380616843700409, 0.4311451017856598, 0.43150705099105835, 0.4246624708175659, 0.4179823398590088, 0.4176696836948395, 0.40859439969062805, 0.4030110538005829, 0.4104413092136383], "accuracy": [0.2685246467590332, 0.5169726610183716, 0.5954299569129944, 0.6524897813796997, 0.6802271604537964, 0.7036058902740479, 0.7091533541679382, 0.7185312509536743, 0.7405890822410583, 0.7384757399559021, 0.7494386434555054, 0.7528728246688843, 0.7520803213119507, 0.7635715007781982, 0.7621186375617981, 0.7808743715286255, 0.774270236492157, 0.7781006693840027, 0.7865539789199829, 0.7921014428138733, 0.7915731072425842, 0.7988376617431641, 0.7971205711364746, 0.8034605979919434, 0.8070268034934998, 0.7991018295288086, 0.8117818236351013, 0.8131026029586792, 0.8124422430992126, 0.8232730031013489, 0.8227446675300598, 0.8280280232429504, 0.8228767514228821, 0.8274996876716614, 0.8315942287445068, 0.83119797706604, 0.833179235458374, 0.8317263126373291, 0.8314621448516846, 0.8327829837799072, 0.8408400416374207, 0.837537944316864, 0.8387266993522644, 0.8442742228507996, 0.8461233377456665, 0.8500858545303345, 0.8487650156021118, 0.8507462739944458, 0.8508783578872681, 0.8535200357437134], "val_loss": [1.9046180248260498, 1.1003695726394653, 0.894008457660675, 0.7690033316612244, 0.7591762542724609, 0.6814613938331604, 0.6510083079338074, 0.6161089539527893, 0.5889747142791748, 0.5967942476272583, 0.5589345693588257, 0.5851694941520691, 0.5599268674850464, 0.5282277464866638, 0.5344674587249756, 0.5426206588745117, 0.5016242861747742, 0.5154838562011719, 0.5014829039573669, 0.4864814579486847, 0.48775601387023926, 0.46692460775375366, 0.47627153992652893, 0.477369099855423, 0.4521603286266327, 0.46485385298728943, 0.44133254885673523, 0.4398990869522095, 0.43452611565589905, 0.43528056144714355, 0.43883687257766724, 0.4336189925670624, 0.4231656789779663, 0.430752694606781, 0.41663095355033875, 0.4113929867744446, 0.41829735040664673, 0.43978703022003174, 0.39918676018714905, 0.39080384373664856, 0.41230905055999756, 0.39600440859794617, 0.41800642013549805, 0.4038298726081848, 0.38646796345710754, 0.41268864274024963, 0.3868401348590851, 0.391977459192276, 0.3848066031932831, 0.3821336328983307], "val_accuracy": [0.5666666626930237, 0.6116666793823242, 0.6776666641235352, 0.7129999995231628, 0.7160000205039978, 0.753000020980835, 0.7543333172798157, 0.7689999938011169, 0.7846666574478149, 0.7613333463668823, 0.7913333177566528, 0.7816666960716248, 0.7696666717529297, 0.7963333129882812, 0.8003333210945129, 0.7973333597183228, 0.8213333487510681, 0.812333345413208, 0.8059999942779541, 0.8196666836738586, 0.8113333582878113, 0.8349999785423279, 0.8203333616256714, 0.8206666707992554, 0.8333333134651184, 0.828000009059906, 0.8376666903495789, 0.8370000123977661, 0.8393333554267883, 0.8376666903495789, 0.8363333344459534, 0.8373333215713501, 0.843666672706604, 0.8366666436195374, 0.8506666421890259, 0.8496666550636292, 0.8410000205039978, 0.8293333053588867, 0.8546666502952576, 0.8579999804496765, 0.8383333086967468, 0.8569999933242798, 0.8463333249092102, 0.8576666712760925, 0.8653333187103271, 0.8453333377838135, 0.8613333106040955, 0.8543333411216736, 0.8650000095367432, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [7, 4, 2, 1, 3, 4, 4, 6, 5, 4, 9, 1, 4, 1, 6, 3, 0, 1], [2, 7, 6, 7, 2, 3, 1, 5, 1, 4, 4, 0, 3, 4, 6], [0, 80], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "mapping_values": [1, 8, 5, 3, 2, 12, 7, 5, 2, 33, 18, 15, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.multiply(grad, grad), grad)), tf.math.pow(tf.math.pow(tf.math.divide_no_nan(beta, tf.math.square(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, grad)), tf.math.pow(tf.math.subtract(alpha, grad), grad))), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.negative(tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.107943296432495, 2.17048716545105, 2.1995439529418945, 1.6412270069122314, 1.4546326398849487, 0.9623543620109558, 0.8042162656784058, 0.7418210506439209, 0.6918522119522095, 0.6577904224395752, 0.6247645616531372, 0.620820939540863, 0.5986337065696716, 0.5860018730163574, 0.5432507395744324, 0.5636022090911865, 0.5175277590751648, 0.5315690040588379, 0.5047892928123474, 0.5128359794616699, 0.4955364465713501, 0.4645579159259796, 0.4902198314666748, 0.4593410789966583, 0.434646874666214, 0.4585055410861969, 0.46043580770492554, 0.45510610938072205, 0.4169022738933563, 0.43593829870224, 0.3947901725769043, 0.40736714005470276, 0.4104287326335907, 0.3962916135787964, 0.38350576162338257, 0.3945128917694092, 0.38969841599464417, 0.37825366854667664, 0.37037286162376404, 0.3729593753814697, 0.388852059841156, 0.35979142785072327], "accuracy": [0.2954695522785187, 0.23523972928524017, 0.26297715306282043, 0.4411570429801941, 0.5192180871963501, 0.6407343745231628, 0.6988508701324463, 0.7269845604896545, 0.7445515990257263, 0.752740740776062, 0.7700436115264893, 0.7664773464202881, 0.7815347909927368, 0.7763835787773132, 0.8013472557067871, 0.7881389260292053, 0.8094043135643005, 0.8024039268493652, 0.817461371421814, 0.809140145778656, 0.8148196935653687, 0.8313300609588623, 0.8152159452438354, 0.8317263126373291, 0.8396512866020203, 0.8286884427070618, 0.8277638554573059, 0.8333113193511963, 0.8449346423149109, 0.8358209133148193, 0.854708731174469, 0.8479725122451782, 0.8499537706375122, 0.8537842035293579, 0.8573504090309143, 0.8544445633888245, 0.8562937378883362, 0.8621054291725159, 0.8618412613868713, 0.8646149635314941, 0.8533879518508911, 0.8664641380310059], "val_loss": [1.8340325355529785, 2.7090113162994385, 1.6820974349975586, 1.3923243284225464, 0.8865175843238831, 0.7410821914672852, 0.7061399817466736, 0.6888940334320068, 0.5843393206596375, 0.5355480909347534, 0.6036472320556641, 0.5232303142547607, 0.4954042136669159, 0.4933149516582489, 0.5085850358009338, 0.5064412355422974, 0.4515096843242645, 0.45500853657722473, 0.499032199382782, 0.443962961435318, 0.430111825466156, 0.4453284442424774, 0.439053475856781, 0.4193647503852844, 0.49087971448898315, 0.4205760359764099, 0.46161791682243347, 0.3982815444469452, 0.4061204493045807, 0.4016251266002655, 0.3997734785079956, 0.4261588156223297, 0.44987034797668457, 0.39544445276260376, 0.4315871596336365, 0.40072453022003174, 0.3816585838794708, 0.3924426734447479, 0.4860839545726776, 0.44286778569221497, 0.4073721468448639, 0.4049481749534607], "val_accuracy": [0.3843333423137665, 0.22100000083446503, 0.4623333215713501, 0.6179999709129333, 0.6499999761581421, 0.7113333344459534, 0.7326666712760925, 0.7396666407585144, 0.7606666684150696, 0.7923333048820496, 0.7480000257492065, 0.7993333339691162, 0.8180000185966492, 0.8080000281333923, 0.8096666932106018, 0.7943333387374878, 0.8403333425521851, 0.8296666741371155, 0.8023333549499512, 0.8303333520889282, 0.8426666855812073, 0.8426666855812073, 0.8386666774749756, 0.8453333377838135, 0.8190000057220459, 0.8386666774749756, 0.8203333616256714, 0.8569999933242798, 0.8516666889190674, 0.8553333282470703, 0.8600000143051147, 0.8416666388511658, 0.8276666402816772, 0.8610000014305115, 0.8296666741371155, 0.8543333411216736, 0.8629999756813049, 0.859000027179718, 0.8296666741371155, 0.8316666483879089, 0.8513333201408386, 0.8426666855812073]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 7, 3, 7, 6, 0, 7, 8, 1, 6, 1, 7, 6, 0, 7, 9, 0, 1, 2, 7, 9], [0, 0, 1, 1, 2, 1, 2, 0, 0, 1, 0, 2, 1, 3, 2], [0, 39, 39, 48, 74, 18, 21], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 5, 8, 5, 6, 4, 1, 8, 1, 6, 5], [2, 7, 6, 4, 5, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 23, 15, 7, 12, 7, 5, 2, 1, 0, 1, 0, 17, 11, 6, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(alpha, alpha)), grad)), tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(tf.math.add(grad, alpha), grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(beta, tf.math.pow(grad, tf.math.subtract(grad, tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [8, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [30, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [18579859456.0, 36921489227776.0, 2713856153485312.0, 5.434016245219328e+16, 5.314335177630024e+17, 3.3760526521094636e+18], "accuracy": [0.09351472556591034, 0.09681680053472519, 0.1006472036242485, 0.10593052208423615, 0.09589222073554993, 0.09787346422672272], "val_loss": [404390936576.0, 238056950988800.0, 1.0123626611212288e+16, 1.4417715586400256e+17, 1.1270520575895798e+18, 6.018124118073803e+18], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 35], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 4], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 8, 4, 4, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.pow(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30975341796875, 2.3089513778686523, 2.310471296310425, 2.3091580867767334, 2.309157133102417, 2.3106589317321777], "accuracy": [0.09391097724437714, 0.09074098616838455, 0.0940430611371994, 0.09668471664190292, 0.09100515395402908, 0.08875974267721176], "val_loss": [2.3089046478271484, 2.3089046478271484, 2.3089046478271484, 2.3089046478271484, 2.3089046478271484, 2.3089046478271484], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]