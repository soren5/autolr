[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8102856874465942, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210151433944702, 1.6189526319503784, 1.1548608541488647, 0.976459264755249, 0.9301812648773193, 0.8368878364562988, 0.8110195994377136, 0.7878115177154541, 0.7392768263816833, 0.7192155718803406, 0.703798234462738, 0.6914511322975159, 0.6758617758750916, 0.6491495966911316, 0.6347761750221252, 0.6337236762046814, 0.6199659705162048, 0.624318540096283, 0.5788455605506897, 0.590326726436615, 0.5907190442085266, 0.5695083737373352, 0.5706045627593994, 0.5666937232017517, 0.5471336841583252, 0.5346748232841492, 0.538425862789154, 0.5249246954917908, 0.5251423716545105, 0.5238586068153381, 0.5377554893493652, 0.5096259117126465, 0.5067138671875, 0.49360382556915283, 0.48864561319351196, 0.4822101294994354, 0.47182542085647583, 0.48468127846717834, 0.4757922887802124, 0.4640129804611206, 0.46210184693336487, 0.4630345404148102, 0.4579713046550751, 0.4557548761367798, 0.44918644428253174], "accuracy": [0.26139214634895325, 0.49148064851760864, 0.5933166146278381, 0.6579051613807678, 0.6668868064880371, 0.7010962963104248, 0.702681303024292, 0.7153612375259399, 0.7362303733825684, 0.7397965788841248, 0.7366266250610352, 0.7448157668113708, 0.752740740776062, 0.7621186375617981, 0.7648923397064209, 0.7646281719207764, 0.7713643908500671, 0.7691190242767334, 0.7885351777076721, 0.7798177003860474, 0.7841764688491821, 0.7885351777076721, 0.7918372750282288, 0.7950072884559631, 0.8058380484580994, 0.8004226684570312, 0.7971205711364746, 0.8088759779930115, 0.8072909712791443, 0.8072909712791443, 0.7989697456359863, 0.8115176558494568, 0.8121780753135681, 0.8203672170639038, 0.8238013386726379, 0.8238013386726379, 0.828292191028595, 0.8212917447090149, 0.8265751004219055, 0.8325188159942627, 0.8345000743865967, 0.8290846943855286, 0.8330471515655518, 0.8335754871368408, 0.8368775844573975], "val_loss": [1.918629765510559, 1.1197103261947632, 0.8868130445480347, 0.7747390866279602, 0.6911906599998474, 0.7140448689460754, 0.7437371611595154, 0.6217851638793945, 0.6095045208930969, 0.58873051404953, 0.5693143010139465, 0.5738592743873596, 0.5477985739707947, 0.5690774917602539, 0.524274468421936, 0.5544045567512512, 0.5058448910713196, 0.5120997428894043, 0.4977444112300873, 0.549098789691925, 0.48461124300956726, 0.4986277222633362, 0.5024799108505249, 0.46797528862953186, 0.4886523485183716, 0.45415449142456055, 0.4597117602825165, 0.4463300108909607, 0.4698247015476227, 0.4444696307182312, 0.44917672872543335, 0.4550553858280182, 0.43562090396881104, 0.42975032329559326, 0.4188653528690338, 0.43403059244155884, 0.4067476689815521, 0.4161463975906372, 0.4084593653678894, 0.40336084365844727, 0.39931797981262207, 0.40964558720588684, 0.411868155002594, 0.40597957372665405, 0.40408143401145935], "val_accuracy": [0.5270000100135803, 0.6209999918937683, 0.6913333535194397, 0.7103333473205566, 0.7463333606719971, 0.7203333377838135, 0.7129999995231628, 0.765666663646698, 0.7736666798591614, 0.7833333611488342, 0.7879999876022339, 0.7820000052452087, 0.7986666560173035, 0.7689999938011169, 0.8056666851043701, 0.7850000262260437, 0.8116666674613953, 0.8023333549499512, 0.8199999928474426, 0.7946666479110718, 0.8196666836738586, 0.8106666803359985, 0.8130000233650208, 0.8316666483879089, 0.8196666836738586, 0.8366666436195374, 0.8346666693687439, 0.8353333473205566, 0.8230000138282776, 0.8420000076293945, 0.8360000252723694, 0.8353333473205566, 0.8429999947547913, 0.8486666679382324, 0.8506666421890259, 0.8446666598320007, 0.8543333411216736, 0.8536666631698608, 0.8526666760444641, 0.859000027179718, 0.8573333621025085, 0.8539999723434448, 0.8543333411216736, 0.8473333120346069, 0.8573333621025085]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3843212127685547, 2.30399751663208, 198.24822998046875, 2.309990406036377, 2.3089239597320557, 2.304140567779541], "accuracy": [0.16536785662174225, 0.09906221181154251, 0.09800554811954498, 0.09787346422672272, 0.0952318087220192, 0.09259014576673508], "val_loss": [2.303439140319824, 3.0895283222198486, 2.3135547637939453, 2.3047444820404053, 2.3028829097747803, 2.3026742935180664], "val_accuracy": [0.10266666859388351, 0.02566666714847088, 0.10233332961797714, 0.0976666659116745, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 9}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 3, 1, 3, 5, 9, 2, 1, 2, 3, 2, 8, 2, 6, 1, 0, 2, 0, 9], [3, 0, 1, 0, 2, 2, 1, 3, 0, 3, 1, 2, 1], [0, 39, 39, 39, 2], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 4, 6, 3, 8, 2], [2, 0, 3, 1, 0, 4], [16, 1], [1, 1], [3], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 20, 13, 5, 12, 6, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.subtract(alpha, grad), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.negative(grad), alpha)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 6, 0], [1, 0, 1, 0, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 5, 0, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 5, 4, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.negative(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3040878772735596, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 3], [67, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 0, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 12, 6, 6, 3, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091304302215576, 2.3115878105163574, 2.311499834060669, 2.3103153705596924, 2.3099989891052246, 2.3099796772003174], "accuracy": [0.09113723784685135, 0.0936468094587326, 0.09034473448991776, 0.09008057415485382, 0.0944393053650856, 0.0874389111995697], "val_loss": [2.308115243911743, 2.308115243911743, 2.308115243911743, 2.308115243911743, 2.308115243911743, 2.308115243911743], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]