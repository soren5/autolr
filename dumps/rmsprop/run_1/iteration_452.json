[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208235025405884, 1.6116325855255127, 1.1630626916885376, 0.9708991050720215, 0.8762668371200562, 0.839652955532074, 0.7842004895210266, 0.7565175890922546, 0.7322601675987244, 0.7165762186050415, 0.6716911792755127, 0.6738722324371338, 0.6706417798995972, 0.6314818263053894, 0.6332126259803772, 0.6169847846031189, 0.6117489337921143, 0.5989798307418823, 0.5813785791397095, 0.5742572546005249, 0.5628736019134521, 0.5559829473495483, 0.5730403661727905, 0.533536434173584, 0.5327500104904175, 0.5195114612579346, 0.5134032964706421, 0.5309188365936279, 0.5063033699989319, 0.4912513494491577, 0.48738497495651245, 0.5044568777084351], "accuracy": [0.2690529525279999, 0.500990629196167, 0.5956941246986389, 0.6590939164161682, 0.6795667409896851, 0.694360077381134, 0.7073041796684265, 0.7199841737747192, 0.7265883088111877, 0.7293620109558105, 0.7481178045272827, 0.7477215528488159, 0.7478536367416382, 0.7693831920623779, 0.7606657147407532, 0.7691190242767334, 0.7695152759552002, 0.7716285586357117, 0.7825914621353149, 0.7810064554214478, 0.7926297783851624, 0.7906485199928284, 0.7862898111343384, 0.8034605979919434, 0.7981772422790527, 0.8086118102073669, 0.8090080618858337, 0.8090080618858337, 0.8086118102073669, 0.8150838613510132, 0.8195747137069702, 0.8098005652427673], "val_loss": [1.913638710975647, 1.182613492012024, 0.972865879535675, 0.7839168310165405, 0.7805068492889404, 0.72678542137146, 0.6642457842826843, 0.6692087650299072, 0.6324373483657837, 0.6243557333946228, 0.6072155833244324, 0.635243833065033, 0.5894292593002319, 0.5807568430900574, 0.5558290481567383, 0.5518406629562378, 0.5425599813461304, 0.5245201587677002, 0.5388697981834412, 0.5230545997619629, 0.5113639831542969, 0.5184101462364197, 0.5156620740890503, 0.5152891278266907, 0.4858843982219696, 0.49356916546821594, 0.4790397882461548, 0.4824720025062561, 0.47084349393844604, 0.468171089887619, 0.48723092675209045, 0.468802273273468], "val_accuracy": [0.596666693687439, 0.609666645526886, 0.6543333530426025, 0.7229999899864197, 0.7113333344459534, 0.7316666841506958, 0.7540000081062317, 0.7586666941642761, 0.7586666941642761, 0.7703333497047424, 0.7506666779518127, 0.7516666650772095, 0.7770000100135803, 0.7776666879653931, 0.8029999732971191, 0.8026666641235352, 0.793666660785675, 0.8019999861717224, 0.8080000281333923, 0.8146666884422302, 0.8063333630561829, 0.8056666851043701, 0.8133333325386047, 0.8063333630561829, 0.82833331823349, 0.8216666579246521, 0.8309999704360962, 0.8226666450500488, 0.8309999704360962, 0.8240000009536743, 0.8209999799728394, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [5], [0]], "fitness": -0.18857142329216003, "mapping_values": [1, 6, 3, 3, 1, 11, 7, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.342844247817993, 2.363018274307251, 2.2854480743408203, 2.2563602924346924, 2.3048479557037354, 2.3038694858551025], "accuracy": [0.20116232335567474, 0.1298375427722931, 0.1748778223991394, 0.1468762308359146, 0.09800554811954498, 0.0952318087220192], "val_loss": [2.2051475048065186, 2.3020734786987305, 2.3173558712005615, 2.3052608966827393, 2.3029818534851074, 2.302769184112549], "val_accuracy": [0.1836666613817215, 0.17666666209697723, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [2, 2, 3, 8, 3, 5], [0, 0, 2, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 37], [0, 1], [0], [7], [0], [0, 0, 0, 1, 1], [0, 8, 1], [2, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.multiply(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(beta, tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [0, 62, 39], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [77, 1], [0, 0, 0, 1, 1], [0, 8, 3], [6, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 5, 3, 2, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [18519425024000.0, 3.7201404179754516e+20, 3.5557309308486396e+26, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09853387624025345, 0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1250424296308736.0, 2.4324121731413144e+22, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.09966666996479034, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 4, 5, 4, 5, 5, 7, 9, 5, 6, 6, 0, 1, 0, 9, 0, 9, 7, 8, 9, 5], [0, 0, 1, 3, 2, 1, 0, 1], [0, 39, 39, 24, 7, 76, 77], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [4, 2, 0, 6, 3, 9, 2], [2, 0, 5, 5, 0], [16, 37], [0, 1, 1], [2], [6, 4], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 34, 26, 8, 7, 3, 1, 2, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.math.pow(grad, tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097875118255615, 2.3105828762054443, 2.3096907138824463, 2.3099067211151123, 2.309854507446289, 2.3099725246429443], "accuracy": [0.09166556596755981, 0.0940430611371994, 0.09140139818191528, 0.09074098616838455, 0.09681680053472519, 0.09034473448991776], "val_loss": [2.3087399005889893, 2.3087399005889893, 2.3087399005889893, 2.3087399005889893, 2.3087399005889893, 2.3087399005889893], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]