[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.824571430683136, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2132482528686523, 1.615586280822754, 1.144778847694397, 0.9552286267280579, 0.9245191216468811, 0.8414596319198608, 0.768592119216919, 0.7513337135314941, 0.7153047919273376, 0.697138249874115, 0.6801298260688782, 0.6817535758018494, 0.6469159722328186, 0.6248468160629272, 0.6260353922843933, 0.6140655279159546, 0.6096916198730469, 0.5913296937942505, 0.5730102062225342, 0.5689244866371155, 0.5507199168205261, 0.5745709538459778, 0.5372347235679626, 0.5224109888076782, 0.5313999652862549, 0.513762891292572, 0.5129460096359253, 0.511056125164032, 0.48829764127731323, 0.49941304326057434, 0.48574763536453247, 0.47518032789230347, 0.485443651676178, 0.47581300139427185, 0.4724234938621521, 0.4715089201927185, 0.45270872116088867, 0.4474128782749176, 0.44804757833480835, 0.4425906538963318, 0.43644726276397705, 0.42765918374061584, 0.4313488006591797, 0.4288058578968048, 0.4315113425254822, 0.41422539949417114, 0.41404566168785095, 0.41279613971710205, 0.41139987111091614, 0.39847123622894287], "accuracy": [0.26218464970588684, 0.5074626803398132, 0.6063928008079529, 0.6581693291664124, 0.6695284843444824, 0.69673752784729, 0.7215691208839417, 0.728701651096344, 0.7372870445251465, 0.7446836829185486, 0.7434949278831482, 0.7464007139205933, 0.7578919529914856, 0.7695152759552002, 0.7633073329925537, 0.7745344042778015, 0.7753269076347351, 0.7820631265640259, 0.7864218950271606, 0.7886672616004944, 0.7988376617431641, 0.7827235460281372, 0.8021397590637207, 0.8100647330284119, 0.8038568496704102, 0.8115176558494568, 0.8115176558494568, 0.8105930685997009, 0.8195747137069702, 0.8185180425643921, 0.8193105459213257, 0.8244617581367493, 0.8239334225654602, 0.8251221776008606, 0.8286884427070618, 0.826310932636261, 0.8383304476737976, 0.8368775844573975, 0.8329150676727295, 0.8360850811004639, 0.8393871188163757, 0.8422929644584656, 0.843481719493866, 0.8428213000297546, 0.8401796221733093, 0.8474441766738892, 0.8479725122451782, 0.8506141901016235, 0.847840428352356, 0.8551049828529358], "val_loss": [1.927443027496338, 1.0969256162643433, 0.8475810289382935, 0.7832831740379333, 0.7379105091094971, 0.6886624097824097, 0.6306408047676086, 0.6805133819580078, 0.5886796116828918, 0.5866626501083374, 0.6210272908210754, 0.5619698762893677, 0.5478407144546509, 0.5522037744522095, 0.6105636358261108, 0.5266063809394836, 0.5388403534889221, 0.5074072480201721, 0.5168488621711731, 0.5011777877807617, 0.535473644733429, 0.4911380112171173, 0.48087695240974426, 0.4861987829208374, 0.470940500497818, 0.47320792078971863, 0.4741813838481903, 0.44832339882850647, 0.4571155607700348, 0.46107998490333557, 0.4382733702659607, 0.44698449969291687, 0.4428611993789673, 0.4522229731082916, 0.46403735876083374, 0.4259694814682007, 0.4165787398815155, 0.42257949709892273, 0.4261796176433563, 0.41110867261886597, 0.4104895293712616, 0.4126826226711273, 0.42789217829704285, 0.4282039403915405, 0.39828523993492126, 0.40836605429649353, 0.4006594121456146, 0.40464022755622864, 0.39345207810401917, 0.3918333053588867], "val_accuracy": [0.5099999904632568, 0.6520000100135803, 0.7099999785423279, 0.70333331823349, 0.7303333282470703, 0.7296666502952576, 0.7620000243186951, 0.7236666679382324, 0.7883333563804626, 0.7706666588783264, 0.765333354473114, 0.7933333516120911, 0.7926666736602783, 0.7873333096504211, 0.7676666378974915, 0.8003333210945129, 0.7829999923706055, 0.812666654586792, 0.8006666898727417, 0.8153333067893982, 0.7906666398048401, 0.8183333277702332, 0.8270000219345093, 0.8270000219345093, 0.8240000009536743, 0.8106666803359985, 0.8109999895095825, 0.8353333473205566, 0.8303333520889282, 0.8266666531562805, 0.8363333344459534, 0.8376666903495789, 0.8403333425521851, 0.8373333215713501, 0.8193333148956299, 0.8393333554267883, 0.8453333377838135, 0.8433333039283752, 0.8403333425521851, 0.8479999899864197, 0.8456666469573975, 0.8416666388511658, 0.8333333134651184, 0.8376666903495789, 0.8529999852180481, 0.8473333120346069, 0.8529999852180481, 0.843999981880188, 0.8506666421890259, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 2, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 7, 0, 8, 2, 2, 9, 5, 1, 2], [6, 3, 1, 2, 1, 4], [0], [1], [0], [4], [0]], "fitness": -0.26657143235206604, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 16, 10, 6, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.sqrt(sigma)), tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.math.subtract(tf.math.add(beta, alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.417695999145508, 2.833465337753296, 2.292973041534424, 2.4245407581329346, 2.3076889514923096, 2.304183006286621], "accuracy": [0.18914277851581573, 0.1558578759431839, 0.12138422578573227, 0.1286487877368927, 0.09959053993225098, 0.09906221181154251], "val_loss": [2.2761383056640625, 2.302769422531128, 2.1995344161987305, 2.3113229274749756, 2.3038482666015625, 2.3027501106262207], "val_accuracy": [0.2669999897480011, 0.1106666699051857, 0.24133333563804626, 0.0989999994635582, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [5, 2, 3, 1, 3, 5, 1, 0], [0, 0, 3, 3, 2, 3], [0, 39, 44], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 3, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.subtract(grad, grad)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [110.21580505371094, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18451987206935883, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [10163.6337890625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09333333373069763, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [92, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 8, 4, 4, 2, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [97, 37], [1, 0], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3029162883758545, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]