[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131361961364746, 1.6101137399673462, 1.1599993705749512, 0.9732612371444702, 0.8903629183769226, 0.815396785736084, 0.7953716516494751, 0.7434160113334656, 0.7124906778335571, 0.7068572640419006, 0.6744565367698669, 0.6470142602920532, 0.6721963882446289, 0.6354497075080872, 0.6224758625030518, 0.617579996585846, 0.5980849266052246, 0.602897047996521, 0.5749574303627014, 0.572904109954834, 0.5530926585197449, 0.5551440119743347, 0.5491289496421814, 0.5334334373474121, 0.5201110243797302, 0.5218474268913269, 0.5174554586410522, 0.5210984349250793, 0.5104738473892212], "accuracy": [0.2619204819202423, 0.5149914026260376, 0.5938449501991272, 0.6543388962745667, 0.6812838315963745, 0.6995112895965576, 0.7137762308120728, 0.7253995537757874, 0.7392682433128357, 0.7388719916343689, 0.7464007139205933, 0.7569673657417297, 0.7481178045272827, 0.7644960880279541, 0.7671377658843994, 0.7671377658843994, 0.7786290049552917, 0.7765156626701355, 0.7832518815994263, 0.7922335267066956, 0.7967243194580078, 0.7930260300636292, 0.7928939461708069, 0.8043851256370544, 0.8086118102073669, 0.81112140417099, 0.8058380484580994, 0.8133667707443237, 0.8108572363853455], "val_loss": [1.927493691444397, 1.1006662845611572, 0.9208406805992126, 0.7803429961204529, 0.760021984577179, 0.7297394871711731, 0.7184340953826904, 0.6525785326957703, 0.6657164096832275, 0.6249707341194153, 0.6054239273071289, 0.5754252672195435, 0.5900749564170837, 0.5881495475769043, 0.5579507946968079, 0.5738069415092468, 0.5373166799545288, 0.5235584378242493, 0.518724262714386, 0.5175972580909729, 0.5209034085273743, 0.522404134273529, 0.5205987691879272, 0.4866689443588257, 0.5047158002853394, 0.48892414569854736, 0.4928168058395386, 0.47666871547698975, 0.4899807274341583], "val_accuracy": [0.5879999995231628, 0.6546666622161865, 0.6786666512489319, 0.7110000252723694, 0.7049999833106995, 0.7163333296775818, 0.7286666631698608, 0.7593333125114441, 0.7423333525657654, 0.7459999918937683, 0.7649999856948853, 0.7773333191871643, 0.7796666622161865, 0.7710000276565552, 0.7896666526794434, 0.781000018119812, 0.8016666769981384, 0.8053333163261414, 0.8143333196640015, 0.8130000233650208, 0.8036666512489319, 0.8100000023841858, 0.8023333549499512, 0.8323333263397217, 0.8146666884422302, 0.8209999799728394, 0.8223333358764648, 0.8286666870117188, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [93, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0], [9], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032617568969727, 2.3025858402252197, 2.302589178085327, 2.302751064300537, 2.321704864501953, 4.144797325134277, 47.81559753417969, 745.0433959960938], "accuracy": [0.09813763201236725, 0.1022322028875351, 0.10302469879388809, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025875091552734, 2.3025856018066406, 2.302562713623047, 2.3029189109802246, 2.456857681274414, 11.883716583251953, 179.527587890625, 2867.429443359375], "val_accuracy": [0.09733333438634872, 0.0976666659116745, 0.10166666656732559, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 1, 3, 5], [3, 0, 1, 2, 2], [0, 27, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303342819213867, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 3, 3, 3, 7, 2, 6, 9, 5, 6, 6, 9, 8, 6, 3, 4, 1, 1, 5, 6, 5, 7, 5, 9, 0, 2, 7, 3, 6, 4, 8, 2, 5, 6, 3, 5, 8, 3, 2, 8, 3, 4, 4, 0, 0, 0, 2, 2, 3, 9, 2, 9, 1], [0, 0, 1, 0, 2, 3, 0, 2, 0, 3, 1, 2, 0, 2, 2, 0, 0, 2, 1, 2, 0, 1, 0, 3, 0, 2, 3, 0, 0, 3, 3, 1, 3], [0, 68, 39, 24, 54, 34, 37, 6, 10, 66, 68, 32, 12, 80, 30, 6, 60, 97], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 91, 58, 33, 18, 10, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 51, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.pow(tf.math.subtract(alpha, grad), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(grad, grad)))), tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.square(tf.math.sqrt(grad))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha)), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(grad, tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.negative(tf.math.negative(grad))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))))), tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, alpha)))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.0148863792419434, 2.3145694732666016, 2.3051600456237793, 2.30338191986084, 2.302929639816284, 2.303231716156006], "accuracy": [0.23022057116031647, 0.09826971590518951, 0.09840179979801178, 0.09945846349000931, 0.09787346422672272, 0.09325055778026581], "val_loss": [2.332216262817383, 2.307724714279175, 2.3040921688079834, 2.303107976913452, 2.3029019832611084, 2.3028757572174072], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.0989999994635582, 0.09733333438634872, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 5], [0, 0, 0, 0, 2], [0, 63, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 2, 3, 2, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309908151626587, 2.309049367904663, 2.3095781803131104, 2.309725284576416, 2.3097362518310547, 2.3098576068878174], "accuracy": [0.0882314071059227, 0.0956280529499054, 0.08968432247638702, 0.08955223858356476, 0.09008057415485382, 0.0874389111995697], "val_loss": [2.309218406677246, 2.309218406677246, 2.309218406677246, 2.309218406677246, 2.309218406677246, 2.309218406677246], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]