[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.776285707950592, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208433151245117, 1.5987014770507812, 1.1722184419631958, 0.9888098835945129, 0.8983712196350098, 0.834257185459137, 0.7857643961906433, 0.7462964057922363, 0.7263587713241577, 0.7241344451904297, 0.678695559501648, 0.653043270111084, 0.6692376732826233], "accuracy": [0.26324132084846497, 0.499009370803833, 0.5861841440200806, 0.6478668451309204, 0.6750759482383728, 0.6973979473114014, 0.7104741930961609, 0.7209087014198303, 0.7279091477394104, 0.7316074371337891, 0.7466648817062378, 0.7581561207771301, 0.7498348951339722], "val_loss": [1.9120562076568604, 1.1099939346313477, 0.9105309844017029, 0.9044723510742188, 0.7361578941345215, 0.6996005773544312, 0.6517113447189331, 0.616845965385437, 0.6408286094665527, 0.596576988697052, 0.5995817184448242, 0.5953577756881714, 0.6017627120018005], "val_accuracy": [0.5759999752044678, 0.640666663646698, 0.6883333325386047, 0.6859999895095825, 0.7333333492279053, 0.7353333234786987, 0.7583333253860474, 0.7766666412353516, 0.7613333463668823, 0.7753333449363708, 0.7746666669845581, 0.7689999938011169, 0.7586666941642761]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5], [0, 3, 1, 0, 2], [0, 1, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 7, 6, 3, 8, 2, 7, 9, 4, 1, 0, 5, 6, 1, 3, 1, 2, 2, 2, 4, 1, 3, 9, 8, 6, 5, 7], [2, 0, 3, 1, 0, 5, 4, 3, 2, 2, 4, 0, 4, 1, 4, 5, 3, 2], [16, 37, 13, 95, 56], [0, 1], [0], [0], [0], [1], [0], [1], [0]], "fitness": -0.16542857885360718, "mapping_values": [1, 12, 7, 5, 2, 46, 28, 18, 5, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.subtract(alpha, tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.add(grad, grad), tf.math.add(tf.math.add(tf.math.pow(grad, beta), beta), grad)), tf.math.subtract(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(grad, alpha)))), tf.math.square(grad)))))), tf.math.add(grad, grad)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.720714569091797, 3.287626266479492, 3.696500062942505, NaN, NaN, NaN], "accuracy": [0.19918107986450195, 0.15255580842494965, 0.10130762308835983, 0.10249637067317963, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.924004316329956, 2.6853904724121094, 263500.875, NaN, NaN, NaN], "val_accuracy": [0.1679999977350235, 0.10100000351667404, 0.07199999690055847, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 9, 4, 2, 6, 5], [2, 0, 3, 1, 0, 4], [16, 37, 27], [0, 1], [9], [6], [0], [1], [0], [2], [0]], "fitness": -0.1014285683631897, "mapping_values": [1, 2, 2, 0, 1, 17, 11, 6, 3, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3077292442321777, 2.3023502826690674, 2.3021459579467773, 2.3024659156799316, 2.3027937412261963, 2.3028831481933594], "accuracy": [0.09536388516426086, 0.09787346422672272, 0.08308017253875732, 0.08347642421722412, 0.109232597053051, 0.1006472036242485], "val_loss": [2.3026719093322754, 2.3017325401306152, 2.3023581504821777, 2.302785873413086, 2.302863359451294, 2.3029873371124268], "val_accuracy": [0.09833333641290665, 0.0820000022649765, 0.08799999952316284, 0.0793333351612091, 0.0963333323597908, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5, 2, 2, 6, 3, 4, 6, 9, 7, 6, 5, 8, 8, 9, 1, 0, 8, 6], [0, 0, 1, 0, 2, 1, 0, 1, 3, 0, 2, 0, 3], [0, 39, 43, 81, 19, 10, 90, 69], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 4, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 6, 0, 4, 8], [2, 4, 5, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 24, 13, 8, 12, 7, 5, 2, 2, 1, 1, 0, 10, 6, 4, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.divide_no_nan(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))), tf.math.subtract(grad, tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(grad, grad)), tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 1, 4, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 8, 0, 6, 3, 9, 2], [2, 1, 3, 1, 0], [36, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08799999952316284, "mapping_values": [1, 8, 4, 4, 3, 4, 3, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098812103271484, 2.309345006942749, 2.3103907108306885, 2.3102011680603027, 2.310211658477783, 2.3098185062408447], "accuracy": [0.08757099509239197, 0.09391097724437714, 0.08915598690509796, 0.09087307006120682, 0.09272222965955734, 0.09509972482919693], "val_loss": [2.308201789855957, 2.308201789855957, 2.308201789855957, 2.308201789855957, 2.308201789855957, 2.308201789855957], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]