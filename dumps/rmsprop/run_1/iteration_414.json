[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8037142753601074, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2085752487182617, 1.5954957008361816, 1.1597254276275635, 0.9748349785804749, 0.908026933670044, 0.8216171264648438, 0.8007939457893372, 0.7731520533561707, 0.7343165874481201, 0.7318153381347656, 0.6977949738502502, 0.679760754108429, 0.6528993248939514, 0.6611507534980774, 0.620099663734436, 0.6180455088615417, 0.6252860426902771, 0.6114082932472229, 0.5808010101318359, 0.587821364402771, 0.5587921738624573, 0.5758901834487915, 0.5430443286895752, 0.5475207567214966, 0.5398018956184387, 0.5363467931747437, 0.5327913761138916, 0.5261644124984741, 0.5211989879608154, 0.5064546465873718, 0.4967765510082245, 0.4938031733036041, 0.4786546528339386, 0.4739806354045868, 0.4829198718070984, 0.4624345302581787], "accuracy": [0.25861841440200806, 0.5069343447685242, 0.5943732857704163, 0.6519614458084106, 0.6630563735961914, 0.6991150379180908, 0.7080966830253601, 0.7177387475967407, 0.7231541275978088, 0.7290979027748108, 0.7409853339195251, 0.7440232634544373, 0.7629110813140869, 0.7556465268135071, 0.7668735980987549, 0.7658169269561768, 0.765949010848999, 0.7729493975639343, 0.7828556299209595, 0.7757231593132019, 0.7922335267066956, 0.785101056098938, 0.8018755912780762, 0.8017435073852539, 0.8026680946350098, 0.7991018295288086, 0.8000264167785645, 0.8062343001365662, 0.8068947196006775, 0.8072909712791443, 0.8177255392074585, 0.8177255392074585, 0.8278959393501282, 0.8255184292793274, 0.8219521641731262, 0.8333113193511963], "val_loss": [1.9138588905334473, 1.1005779504776, 0.9699001312255859, 0.7863258719444275, 0.7114741206169128, 0.7253496050834656, 0.6773845553398132, 0.6330584287643433, 0.6137006878852844, 0.6275626420974731, 0.5983937382698059, 0.5736465454101562, 0.5868273377418518, 0.5494059324264526, 0.5507485270500183, 0.5240462422370911, 0.5128063559532166, 0.518068790435791, 0.5365511775016785, 0.4966830909252167, 0.49595052003860474, 0.5054277181625366, 0.5003539323806763, 0.46273893117904663, 0.471724271774292, 0.48222970962524414, 0.4636896848678589, 0.47142618894577026, 0.44307079911231995, 0.4476223289966583, 0.4318585991859436, 0.4429962933063507, 0.4400653541088104, 0.4487760365009308, 0.4446437954902649, 0.42587214708328247], "val_accuracy": [0.5183333158493042, 0.6413333415985107, 0.6690000295639038, 0.7166666388511658, 0.7360000014305115, 0.7223333120346069, 0.7413333058357239, 0.7609999775886536, 0.7636666893959045, 0.7580000162124634, 0.7673333287239075, 0.7839999794960022, 0.7730000019073486, 0.7929999828338623, 0.7789999842643738, 0.7926666736602783, 0.8033333420753479, 0.800000011920929, 0.7960000038146973, 0.8013333082199097, 0.8086666464805603, 0.8056666851043701, 0.8083333373069763, 0.8320000171661377, 0.8163333535194397, 0.8100000023841858, 0.8286666870117188, 0.8220000267028809, 0.8363333344459534, 0.82833331823349, 0.8429999947547913, 0.8360000252723694, 0.8370000123977661, 0.8286666870117188, 0.8373333215713501, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [7, 2, 3, 4, 3, 5, 1], [0, 0, 1, 0, 1, 0, 3], [0, 39, 39, 56], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37, 15], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 4, 12, 7, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303882598876953, 2.3025949001312256, 2.3025994300842285, 2.3025922775268555, 2.3026018142700195, 2.3026018142700195, 2.3025927543640137], "accuracy": [0.0940430611371994, 0.09338264167308807, 0.09668471664190292, 0.09536388516426086, 0.09840179979801178, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025832176208496, 2.302579402923584, 2.302576780319214, 2.302572250366211, 2.3025689125061035, 2.302565813064575, 2.302579641342163], "val_accuracy": [0.10166666656732559, 0.10300000011920929, 0.10166666656732559, 0.10166666656732559, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 0, 6, 1, 9], [0, 0, 1, 2, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [79, 37, 17], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 11, 6, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.negative(tf.math.divide_no_nan(grad, grad))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(alpha)))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10540219396352768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [4, 2, 3, 1, 7, 4], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [99, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 2, 8, 5, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 0, 5, 3, 7, 2, 5, 0, 3], [0, 0, 1, 0, 2, 1, 3, 0], [0, 39, 39, 18], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 20, 12, 8, 4, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.square(tf.math.negative(tf.math.multiply(alpha, grad)))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106119632720947, 2.3100943565368652, 2.311305046081543, 2.309511661529541, 2.3104286193847656, 2.311310291290283], "accuracy": [0.08836349099874496, 0.09272222965955734, 0.08770307898521423, 0.09100515395402908, 0.08836349099874496, 0.09206181764602661], "val_loss": [2.309209108352661, 2.309209108352661, 2.309209108352661, 2.309209108352661, 2.309209108352661, 2.309209108352661], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]