[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8162857294082642, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210300922393799, 1.6026872396469116, 1.1735116243362427, 1.0055381059646606, 0.8799566030502319, 0.8367516398429871, 0.7832638025283813, 0.7665203809738159, 0.7333240509033203, 0.7204317450523376, 0.6828816533088684, 0.6803894639015198, 0.6627110242843628, 0.6477088928222656, 0.6321210265159607, 0.6361469626426697, 0.5958265066146851, 0.6103710532188416, 0.5992229580879211, 0.5855481624603271, 0.5624150633811951, 0.5572670698165894, 0.5547317862510681, 0.5494360327720642, 0.551709771156311, 0.5364910364151001, 0.5192633271217346, 0.5210351347923279, 0.509286105632782, 0.5101684331893921, 0.49772435426712036, 0.4962725341320038, 0.5092179775238037, 0.47202202677726746, 0.4842093884944916, 0.4705754518508911, 0.4620262384414673, 0.4568532705307007, 0.45258334279060364, 0.4533235430717468, 0.44453468918800354, 0.4440973699092865, 0.43322470784187317, 0.42642825841903687], "accuracy": [0.26601505279541016, 0.5114251971244812, 0.589750349521637, 0.6336019039154053, 0.6845859289169312, 0.6952846646308899, 0.7127195596694946, 0.7112666964530945, 0.7265883088111877, 0.7323999404907227, 0.7452120184898376, 0.7392682433128357, 0.7541936039924622, 0.7576277852058411, 0.7705719470977783, 0.7629110813140869, 0.7783648371696472, 0.7712323069572449, 0.7741381525993347, 0.7819310426712036, 0.7905164361000061, 0.7936864495277405, 0.7957997918128967, 0.7957997918128967, 0.8016114234924316, 0.7998943328857422, 0.8086118102073669, 0.8045172095298767, 0.8121780753135681, 0.8124422430992126, 0.8156121969223022, 0.8187822103500366, 0.8090080618858337, 0.8290846943855286, 0.8238013386726379, 0.8286884427070618, 0.8341038227081299, 0.8350284099578857, 0.8342359066009521, 0.8385946154594421, 0.8374059200286865, 0.8345000743865967, 0.842028796672821, 0.8393871188163757], "val_loss": [1.9157795906066895, 1.0934430360794067, 0.8972791433334351, 0.7735592722892761, 0.754991888999939, 0.6860275268554688, 0.6582368016242981, 0.628659725189209, 0.6256471872329712, 0.6020628809928894, 0.6463896036148071, 0.5790959000587463, 0.5665724277496338, 0.5662184357643127, 0.5963357090950012, 0.536256730556488, 0.5240746140480042, 0.5338514447212219, 0.5260252356529236, 0.5313030481338501, 0.4923407733440399, 0.49722370505332947, 0.5120946168899536, 0.492127388715744, 0.4880434572696686, 0.4731667935848236, 0.4846264719963074, 0.46552804112434387, 0.4657166004180908, 0.4577709138393402, 0.4551633298397064, 0.4609031081199646, 0.46850505471229553, 0.4517443776130676, 0.43270760774612427, 0.4376729726791382, 0.4493297040462494, 0.4494174122810364, 0.4280739724636078, 0.43086183071136475, 0.4377744495868683, 0.42189887166023254, 0.4257529377937317, 0.4200249910354614], "val_accuracy": [0.6190000176429749, 0.6539999842643738, 0.6726666688919067, 0.718999981880188, 0.7306666374206543, 0.7300000190734863, 0.753333330154419, 0.7706666588783264, 0.7633333206176758, 0.7726666927337646, 0.7443333268165588, 0.7866666913032532, 0.7870000004768372, 0.7889999747276306, 0.765333354473114, 0.7956666946411133, 0.8043333292007446, 0.7976666688919067, 0.8040000200271606, 0.7946666479110718, 0.8153333067893982, 0.8163333535194397, 0.8016666769981384, 0.8193333148956299, 0.8136666417121887, 0.8240000009536743, 0.8130000233650208, 0.8293333053588867, 0.8270000219345093, 0.831333339214325, 0.8296666741371155, 0.82833331823349, 0.8190000057220459, 0.8263333439826965, 0.8386666774749756, 0.8349999785423279, 0.8276666402816772, 0.8306666612625122, 0.8450000286102295, 0.8403333425521851, 0.8386666774749756, 0.843666672706604, 0.8443333506584167, 0.843666672706604]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 5, 3, 1, 5, 5], [0, 0, 1, 0, 0], [0, 60, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 0, 1, 0], [16, 37], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 4, 2, 9, 4, 5, 8, 9], [2, 6], [0, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 10, 8, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, grad)), tf.math.square(tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 2, 1, 3, 3], [0, 0, 1, 0, 2, 1], [0, 43, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [4, 8, 3, 3, 4, 7, 9], [0, 0, 1, 2, 3], [0, 37, 33], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 11, 6, 5, 1, 12, 7, 5, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), beta), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 37], [1, 0], [0], [6], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), grad), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08994849026203156, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 8, 4, 4, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1220446452498436, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]