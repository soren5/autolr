[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8014285564422607, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210252523422241, 1.6101105213165283, 1.1236180067062378, 1.0034376382827759, 0.8700186014175415, 0.8296847939491272, 0.7965853214263916, 0.7336457967758179, 0.7227941155433655, 0.6927290558815002, 0.6943631768226624, 0.6587744951248169, 0.6615213751792908, 0.6229166984558105, 0.6125510931015015, 0.6058230400085449, 0.5873048305511475, 0.5885551571846008, 0.5818263292312622, 0.5687124133110046, 0.5506724715232849, 0.540928304195404, 0.5335528254508972, 0.5384479761123657, 0.5237528681755066, 0.5118633508682251, 0.5314040184020996], "accuracy": [0.2666754722595215, 0.501518964767456, 0.6123365759849548, 0.6469422578811646, 0.689869225025177, 0.6972658634185791, 0.7062475085258484, 0.7308149337768555, 0.7288337349891663, 0.746268630027771, 0.7362303733825684, 0.7500990629196167, 0.7489103078842163, 0.767401933670044, 0.7709681391716003, 0.7730814814567566, 0.7819310426712036, 0.7775723338127136, 0.7829877138137817, 0.7857614755630493, 0.7984414100646973, 0.7991018295288086, 0.8038568496704102, 0.7959318161010742, 0.8050455451011658, 0.8099326491355896, 0.7998943328857422], "val_loss": [1.923828125, 1.1718319654464722, 0.9708569049835205, 0.8025913238525391, 0.7656546831130981, 0.8249838948249817, 0.6735284924507141, 0.6961001753807068, 0.6387023329734802, 0.6493619680404663, 0.6436100006103516, 0.6015832424163818, 0.6002428531646729, 0.5829627513885498, 0.583151638507843, 0.5720101594924927, 0.56368088722229, 0.5449380874633789, 0.5517377257347107, 0.5331678986549377, 0.5291534066200256, 0.5106083154678345, 0.5404735207557678, 0.5174699425697327, 0.5127202272415161, 0.5409408211708069, 0.508791446685791], "val_accuracy": [0.5506666898727417, 0.6026666760444641, 0.6706666946411133, 0.6976666450500488, 0.7089999914169312, 0.6923333406448364, 0.7476666569709778, 0.7296666502952576, 0.7563333511352539, 0.7486666440963745, 0.7386666536331177, 0.7773333191871643, 0.7743333578109741, 0.7793333530426025, 0.7833333611488342, 0.781000018119812, 0.7723333239555359, 0.7990000247955322, 0.7879999876022339, 0.8003333210945129, 0.8086666464805603, 0.8173333406448364, 0.7866666913032532, 0.8043333292007446, 0.7983333468437195, 0.7900000214576721, 0.8040000200271606]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5, 6, 9], [0, 0, 1, 0, 2], [0, 39, 39, 52], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 37, 15], [0, 1], [0], [6], [0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 6, 2, 7, 7], [2, 5, 5, 1, 6, 0], [0]], "fitness": -0.12371428310871124, "mapping_values": [1, 13, 8, 5, 4, 11, 6, 5, 3, 2, 1, 1, 0, 12, 6, 6, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(alpha, grad))), tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6240917656698880.0, 7477623424811008.0, 2.1290408823921275e+25, 3.464562583442177e+30, Infinity, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.10051512718200684, 0.09760929644107819, 0.09866596013307571, 0.09774138033390045, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6872477028319232.0, 7192977151623168.0, 1.9337581912362668e+28, 2.5587675918411525e+34, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10066666454076767, 0.12466666847467422, 0.09866666793823242, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 2, 2], [0, 39, 33], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [9, 2, 3, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0], [0, 9], [6], [0], [0, 0, 0, 1, 1], [0, 5, 7], [2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 1, 1, 0, 1, 2, 2, 0, 1, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(beta, alpha)))", "other_info": {"loss": [2.3104324340820312, 2.397657632827759, 5.312809467315674, 31.350536346435547, 170.94033813476562, 841.2171630859375], "accuracy": [0.09192973375320435, 0.10355303436517715, 0.10210011899471283, 0.09602430462837219, 0.09747721254825592, 0.10289261490106583], "val_loss": [2.3096914291381836, 2.593531608581543, 10.24848461151123, 60.15998840332031, 307.5570373535156, 1381.4783935546875], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 0, 1, 0, 2], [50, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [56, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [557000640.0, 10471801856.0, 49040003072.0, 133718654976.0, 288298926080.0, 531865141248.0], "accuracy": [0.09734513610601425, 0.09813763201236725, 0.10038304328918457, 0.10077928751707077, 0.10593052208423615, 0.1018359512090683], "val_loss": [2540208128.0, 20318363648.0, 68571201536.0, 162533916672.0, 317445963776.0, 548535402496.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 6, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 0, 1, 0], [16, 37], [0, 0, 0, 0], [0, 3, 9, 9], [6], [0, 35], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 4, 4, 0, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104875087738037, 2.309222459793091, 2.310511589050293, 2.308889865875244, 2.309847593307495, 2.309572219848633], "accuracy": [0.0886276587843895, 0.09245806187391281, 0.09047681838274002, 0.09285431355237961, 0.09206181764602661, 0.09192973375320435], "val_loss": [2.3090474605560303, 2.3090474605560303, 2.3090474605560303, 2.3090474605560303, 2.3090474605560303, 2.3090474605560303], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]