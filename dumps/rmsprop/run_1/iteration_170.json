[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213038682937622, 1.6213576793670654, 1.1344915628433228, 0.9809713959693909, 0.8766459822654724, 0.850294291973114, 0.7808662056922913, 0.7798569202423096, 0.7434754371643066, 0.7079921364784241, 0.7175530791282654, 0.6640744209289551, 0.6703251004219055, 0.635759711265564, 0.6329580545425415, 0.6290176510810852, 0.6116004586219788, 0.6102197170257568, 0.5959923267364502, 0.580085039138794, 0.5742949843406677, 0.5542643666267395, 0.5464986562728882, 0.5464866161346436, 0.5380775332450867, 0.5230964422225952, 0.5288241505622864, 0.5224543809890747, 0.511498749256134, 0.4953797459602356, 0.4964815080165863, 0.4921252131462097, 0.4803021550178528, 0.48765069246292114, 0.4842114746570587, 0.47626790404319763, 0.47157174348831177, 0.4628593921661377, 0.4640129506587982, 0.46247047185897827], "accuracy": [0.26020342111587524, 0.4979526996612549, 0.6141856908798218, 0.6479989290237427, 0.685510516166687, 0.6913221478462219, 0.7136441469192505, 0.7140403985977173, 0.7292299270629883, 0.7458723783493042, 0.7375511527061462, 0.7577598690986633, 0.7598732113838196, 0.76542067527771, 0.7619865536689758, 0.7667415142059326, 0.7778365015983582, 0.7750627398490906, 0.7819310426712036, 0.7845727205276489, 0.7902522683143616, 0.7959318161010742, 0.8016114234924316, 0.8030643463134766, 0.7957997918128967, 0.8076872229576111, 0.8057059645652771, 0.8099326491355896, 0.811649739742279, 0.8148196935653687, 0.8193105459213257, 0.8173292875289917, 0.8244617581367493, 0.8215559124946594, 0.8248580098152161, 0.8259146809577942, 0.830669641494751, 0.8274996876716614, 0.8315942287445068, 0.8325188159942627], "val_loss": [1.9286099672317505, 1.0987036228179932, 1.0304486751556396, 0.8215418457984924, 0.7396532297134399, 0.6976599097251892, 0.6511473059654236, 0.6695111393928528, 0.6228604912757874, 0.6759904623031616, 0.6199076175689697, 0.5986018776893616, 0.5567072629928589, 0.550020694732666, 0.5392153859138489, 0.5692081451416016, 0.5414888262748718, 0.5263932943344116, 0.5063697099685669, 0.5108473896980286, 0.4906052350997925, 0.5035450458526611, 0.4757320284843445, 0.4861733317375183, 0.47262439131736755, 0.4685850441455841, 0.4678308367729187, 0.46276602149009705, 0.46927836537361145, 0.4564286172389984, 0.4444078803062439, 0.44150519371032715, 0.45374035835266113, 0.44065022468566895, 0.43732568621635437, 0.44065603613853455, 0.43033838272094727, 0.4361801743507385, 0.4360749125480652, 0.44229835271835327], "val_accuracy": [0.5299999713897705, 0.6639999747276306, 0.640999972820282, 0.6990000009536743, 0.7293333411216736, 0.7350000143051147, 0.750333309173584, 0.7516666650772095, 0.7666666507720947, 0.7296666502952576, 0.7649999856948853, 0.7726666927337646, 0.8009999990463257, 0.8036666512489319, 0.7976666688919067, 0.7766666412353516, 0.7876666784286499, 0.7933333516120911, 0.812666654586792, 0.8136666417121887, 0.8133333325386047, 0.8116666674613953, 0.8253333568572998, 0.8233333230018616, 0.8259999752044678, 0.8276666402816772, 0.8339999914169312, 0.8293333053588867, 0.8270000219345093, 0.8346666693687439, 0.840666651725769, 0.8373333215713501, 0.8366666436195374, 0.843666672706604, 0.8450000286102295, 0.8376666903495789, 0.8403333425521851, 0.8413333296775818, 0.8376666903495789, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [32, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 11, 6, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [8], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309746742248535, 2.3097987174987793, 2.3096585273742676, 2.3099114894866943, 2.310868263244629, 2.309804916381836], "accuracy": [0.09615638852119446, 0.09126931428909302, 0.08875974267721176, 0.09100515395402908, 0.09259014576673508, 0.09338264167308807], "val_loss": [2.308279514312744, 2.308279514312744, 2.308279514312744, 2.308279514312744, 2.308279514312744, 2.308279514312744], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 21], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [22, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 1, 1, 1, 4, 3, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100953102111816, 2.310267686843872, 2.30989146232605, 2.310265064239502, 2.3086724281311035, 2.310492992401123], "accuracy": [0.0944393053650856, 0.0956280529499054, 0.09259014576673508, 0.08558975160121918, 0.10130762308835983, 0.09113723784685135], "val_loss": [2.3092684745788574, 2.3092684745788574, 2.3092684745788574, 2.3092684745788574, 2.3092684745788574, 2.3092684745788574], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 1], [0, 39, 39], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309960126876831, 2.3105309009552, 2.3118715286254883, 2.310436964035034, 2.3108725547790527, 2.3094353675842285], "accuracy": [0.09298639744520187, 0.09325055778026581, 0.0886276587843895, 0.08757099509239197, 0.09259014576673508, 0.09338264167308807], "val_loss": [2.3087053298950195, 2.3087053298950195, 2.3087053298950195, 2.3087053298950195, 2.3087053298950195, 2.3087053298950195], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]