[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7914285659790039, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109782695770264, 1.5910645723342896, 1.161197543144226, 0.9444560408592224, 0.8873385190963745, 0.8113805651664734, 0.7855197191238403, 0.7568586468696594, 0.7088053226470947, 0.6882070899009705, 0.6766329407691956, 0.6666685938835144, 0.6391963958740234, 0.627109706401825, 0.6283941864967346, 0.6124197840690613, 0.5958601832389832, 0.5866766571998596, 0.5760141611099243, 0.56539386510849], "accuracy": [0.27063795924186707, 0.5011227130889893, 0.5968828201293945, 0.6625280380249023, 0.6785101294517517, 0.69673752784729, 0.7117950320243835, 0.7195879220962524, 0.7327961921691895, 0.7390040755271912, 0.746268630027771, 0.7454761862754822, 0.7568352818489075, 0.7605336308479309, 0.7594769597053528, 0.7733456492424011, 0.7753269076347351, 0.7775723338127136, 0.7783648371696472, 0.789988100528717], "val_loss": [1.9244762659072876, 1.0870229005813599, 0.8827813863754272, 0.8252058625221252, 0.7180455923080444, 0.6914414763450623, 0.662854790687561, 0.6666715741157532, 0.61727374792099, 0.6198774576187134, 0.6607460379600525, 0.594161331653595, 0.5980892181396484, 0.5754115581512451, 0.5536895990371704, 0.5641192197799683, 0.544684648513794, 0.5526233911514282, 0.5656580328941345, 0.5533754825592041], "val_accuracy": [0.49266666173934937, 0.6623333096504211, 0.6890000104904175, 0.6990000009536743, 0.7236666679382324, 0.7266666889190674, 0.7360000014305115, 0.7256666421890259, 0.75, 0.7636666893959045, 0.7289999723434448, 0.7766666412353516, 0.7523333430290222, 0.7666666507720947, 0.7893333435058594, 0.7873333096504211, 0.7833333611488342, 0.7793333530426025, 0.7699999809265137, 0.7786666750907898]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 1, 2], [0, 39, 58], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 3, 3, 8, 2, 7], [2, 0, 3, 1, 0, 2], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7591428756713867, "mapping_values": [1, 4, 2, 2, 2, 14, 8, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308528423309326, 2.307602643966675, 2.306216239929199, 2.3034932613372803, 2.3009984493255615, 2.2968525886535645, 2.294590473175049, 2.28908634185791, 2.2857158184051514, 2.282989978790283, 2.277303695678711, 2.272858142852783, 2.2672066688537598, 2.261350393295288, 2.255422830581665, 2.2492406368255615, 2.242039442062378, 2.2331883907318115, 2.2250821590423584, 2.2135796546936035, 2.2036690711975098, 2.1892032623291016, 2.1758458614349365, 2.1595780849456787, 2.139190673828125, 2.114490270614624, 2.0868046283721924, 2.055609703063965, 2.0186259746551514, 1.9829628467559814, 1.935965657234192, 1.880786418914795, 1.8223161697387695, 1.7615350484848022, 1.6959887742996216, 1.6186292171478271, 1.5606069564819336, 1.5029574632644653, 1.4544694423675537, 1.3984025716781616, 1.3443182706832886, 1.3019999265670776, 1.269248127937317, 1.2260745763778687, 1.192598581314087, 1.1733614206314087, 1.142919659614563, 1.1205140352249146, 1.0978091955184937, 1.0727083683013916, 1.0621837377548218, 1.0391123294830322, 1.026782751083374, 0.9898532032966614, 0.9924015402793884, 0.9805470705032349, 0.964179515838623, 0.9404478669166565, 0.9408771991729736, 0.936162531375885, 0.9234495759010315, 0.9137637615203857, 0.904991865158081, 0.8836970925331116, 0.8875997066497803, 0.867863118648529, 0.8724108934402466, 0.8685306310653687, 0.8624112606048584, 0.8563366532325745, 0.8354237079620361, 0.8334591388702393, 0.8338663578033447, 0.8260914087295532, 0.8210885524749756, 0.8138197064399719, 0.8154771327972412, 0.8053891658782959, 0.8015292882919312, 0.8008328080177307, 0.7907582521438599, 0.7929668426513672, 0.7779367566108704, 0.7789401412010193, 0.7740267515182495, 0.7732365131378174, 0.7692499756813049, 0.7658929824829102, 0.7672184705734253, 0.7475932240486145, 0.755562424659729], "accuracy": [0.09747721254825592, 0.09259014576673508, 0.09549596905708313, 0.10632677376270294, 0.1088363528251648, 0.11108175665140152, 0.11213842034339905, 0.12957337498664856, 0.1422533392906189, 0.151234969496727, 0.16232994198799133, 0.17619864642620087, 0.19218069314956665, 0.21080438792705536, 0.22705058753490448, 0.23973055183887482, 0.2530709207057953, 0.27024170756340027, 0.28424251079559326, 0.2957337200641632, 0.30960243940353394, 0.33324527740478516, 0.3381323516368866, 0.34724608063697815, 0.3568881154060364, 0.3870030343532562, 0.3891163766384125, 0.39690926671028137, 0.41526877880096436, 0.42266544699668884, 0.43270373344421387, 0.4523840844631195, 0.4563465714454651, 0.4667811393737793, 0.4799894392490387, 0.5046889185905457, 0.5156518220901489, 0.5247655510902405, 0.5284639000892639, 0.5305771827697754, 0.5474838018417358, 0.5581825375556946, 0.565711259841919, 0.5787875056266785, 0.587769091129303, 0.5906749367713928, 0.6089023947715759, 0.6129969358444214, 0.616299033164978, 0.6215823292732239, 0.6305639743804932, 0.6276581883430481, 0.6362435817718506, 0.6456214785575867, 0.6522256135940552, 0.6540747880935669, 0.6597543358802795, 0.6675472259521484, 0.6623960137367249, 0.6675472259521484, 0.6709813475608826, 0.6699247360229492, 0.677189290523529, 0.6863030195236206, 0.6808875799179077, 0.6914542317390442, 0.6907938122749329, 0.6852463483810425, 0.6896050572395325, 0.6906617283821106, 0.6991150379180908, 0.6970016956329346, 0.7016246318817139, 0.7042662501335144, 0.6985867023468018, 0.7005679607391357, 0.7058512568473816, 0.7099458575248718, 0.7086250185966492, 0.7080966830253601, 0.7137762308120728, 0.7113987803459167, 0.7157574892044067, 0.7215691208839417, 0.718399167060852, 0.7140403985977173, 0.7173424959182739, 0.7172104120254517, 0.7213049530982971, 0.7209087014198303, 0.7306828498840332], "val_loss": [2.3079521656036377, 2.305856227874756, 2.3032126426696777, 2.300157308578491, 2.2967019081115723, 2.293038845062256, 2.2890899181365967, 2.2848942279815674, 2.2804880142211914, 2.2758402824401855, 2.2708468437194824, 2.26557993888855, 2.2599196434020996, 2.2537190914154053, 2.246957540512085, 2.239500045776367, 2.231264591217041, 2.221923589706421, 2.211428165435791, 2.1995131969451904, 2.1860849857330322, 2.17067813873291, 2.153053045272827, 2.1328306198120117, 2.1093389987945557, 2.082089424133301, 2.050213575363159, 2.013232707977295, 1.9700400829315186, 1.9209585189819336, 1.8649381399154663, 1.8016839027404785, 1.7324979305267334, 1.6582214832305908, 1.5808794498443604, 1.5015355348587036, 1.42546546459198, 1.3531619310379028, 1.2888126373291016, 1.2296497821807861, 1.1750297546386719, 1.1273735761642456, 1.086155891418457, 1.0480684041976929, 1.016248106956482, 0.9865397214889526, 0.9616833329200745, 0.9383400082588196, 0.9173814058303833, 0.8978696465492249, 0.8800894618034363, 0.8642600178718567, 0.850107729434967, 0.8358063101768494, 0.823390781879425, 0.8123117089271545, 0.8020442724227905, 0.7905486822128296, 0.7806750535964966, 0.7717898488044739, 0.7643798589706421, 0.7564104795455933, 0.7493171095848083, 0.7402966022491455, 0.7348052859306335, 0.7278729677200317, 0.7229462265968323, 0.7181238532066345, 0.7123581767082214, 0.7092861533164978, 0.7029982209205627, 0.6978915333747864, 0.6944894790649414, 0.688672661781311, 0.684502124786377, 0.6806586384773254, 0.6789413094520569, 0.67240309715271, 0.6690043210983276, 0.6663535833358765, 0.6624622941017151, 0.6594108939170837, 0.6546585559844971, 0.6528012156486511, 0.6476007103919983, 0.647001326084137, 0.643980860710144, 0.6413472890853882, 0.6383110284805298, 0.633651614189148, 0.6324548125267029], "val_accuracy": [0.09566666930913925, 0.09733333438634872, 0.09966666996479034, 0.10566666722297668, 0.11500000208616257, 0.12833333015441895, 0.14100000262260437, 0.15566666424274445, 0.1693333387374878, 0.20100000500679016, 0.22366666793823242, 0.25833332538604736, 0.3006666600704193, 0.3426666557788849, 0.37933334708213806, 0.4046666622161865, 0.41733333468437195, 0.42800000309944153, 0.43433332443237305, 0.4463333189487457, 0.45233333110809326, 0.4606666564941406, 0.46566668152809143, 0.47600001096725464, 0.49033331871032715, 0.5040000081062317, 0.5226666927337646, 0.5373333096504211, 0.5516666769981384, 0.5636666417121887, 0.5756666660308838, 0.5920000076293945, 0.6010000109672546, 0.6159999966621399, 0.6243333220481873, 0.6326666474342346, 0.6396666765213013, 0.6486666798591614, 0.6570000052452087, 0.6556666493415833, 0.6663333177566528, 0.6666666865348816, 0.6729999780654907, 0.6796666383743286, 0.6813333630561829, 0.6830000281333923, 0.6866666674613953, 0.6899999976158142, 0.6949999928474426, 0.6976666450500488, 0.6973333358764648, 0.7013333439826965, 0.706333339214325, 0.7083333134651184, 0.7113333344459534, 0.7136666774749756, 0.718666672706604, 0.722000002861023, 0.7223333120346069, 0.7239999771118164, 0.7256666421890259, 0.7300000190734863, 0.7319999933242798, 0.7366666793823242, 0.7360000014305115, 0.737666666507721, 0.7406666874885559, 0.7426666617393494, 0.7456666827201843, 0.7379999756813049, 0.7450000047683716, 0.7453333139419556, 0.7450000047683716, 0.7516666650772095, 0.749666690826416, 0.7540000081062317, 0.7443333268165588, 0.7549999952316284, 0.7536666393280029, 0.753333330154419, 0.7559999823570251, 0.7540000081062317, 0.7599999904632568, 0.7643333077430725, 0.7599999904632568, 0.7676666378974915, 0.7643333077430725, 0.762333333492279, 0.7639999985694885, 0.7676666378974915, 0.765333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 2, 3, 1, 7, 5], [1, 2, 1, 0, 2, 1], [0, 39, 66], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 0, 2, 3, 8, 2, 1, 2, 0], [2, 0, 3, 1, 0, 2, 3, 3], [16, 1], [0, 1], [0], [0], [0], [0, 0, 0, 1], [0, 0, 0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 1, 18, 10, 8, 2, 2, 1, 1, 1, 4, 3, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, grad), alpha), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [7, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [6, 2, 0, 6, 6, 8, 2, 6, 6, 2, 5], [2, 0, 4, 1, 0, 5, 5, 4, 5], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 3, 20, 11, 9, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(grad, grad), grad))))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 3, 1, 3, 5], [1, 1, 0, 0, 2], [85, 39, 68], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 7, 2, 6, 6, 1, 2, 6, 0, 1, 9, 2, 6, 6, 2, 2, 4, 8, 6, 6, 3, 4, 2, 4, 4, 7, 9, 8, 4, 4, 9, 7, 5, 3, 5, 3, 5, 0, 1, 0, 1, 7, 5], [1, 0, 3, 0, 0, 1, 5, 4, 5, 3, 0, 2, 5, 4, 3, 4, 0, 0, 5, 5, 5, 5, 0, 5, 2, 5, 3, 1, 3, 4, 2], [16, 1, 93, 42, 1, 61, 45, 82, 16, 80], [1, 1], [0], [3], [0], [1], [0], [1], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 1, 0, 1, 0, 78, 47, 31, 10, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.pow(tf.math.add(tf.math.pow(tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta), tf.math.add(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad)), grad)), grad)), tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad))), grad), grad), grad)), tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.multiply(tf.math.square(tf.math.negative(beta)), grad)))), tf.math.subtract(tf.math.negative(tf.math.subtract(grad, alpha)), tf.math.add(grad, tf.math.square(grad))))), beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310765027999878, 2.3098905086517334, 2.31032133102417, 2.310185194015503, 2.3093748092651367, 2.3097681999206543], "accuracy": [0.09311848133802414, 0.09457138925790787, 0.09179764986038208, 0.0936468094587326, 0.09021265059709549, 0.09179764986038208], "val_loss": [2.3083536624908447, 2.3083536624908447, 2.3083536624908447, 2.3083536624908447, 2.3083536624908447, 2.3083536624908447], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]