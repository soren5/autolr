[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2101972103118896, 1.596984624862671, 1.1590359210968018, 0.9838693737983704, 0.9027246236801147, 0.8347008228302002, 0.7777532339096069, 0.7660107612609863, 0.7513754963874817, 0.6882407665252686, 0.7015523314476013, 0.654449462890625, 0.6513444781303406, 0.6647970676422119, 0.6389673352241516, 0.6035370826721191, 0.6101594567298889, 0.5939149260520935, 0.5744795799255371, 0.5875593423843384, 0.5626938939094543, 0.5693742632865906, 0.5345979332923889, 0.5261543989181519, 0.5258475542068481, 0.5302964448928833, 0.5186994671821594, 0.5126246213912964, 0.49481114745140076], "accuracy": [0.27024170756340027, 0.505877673625946, 0.5909391045570374, 0.6510368585586548, 0.6775855422019958, 0.6963412761688232, 0.7156254053115845, 0.7197200059890747, 0.7224937081336975, 0.7478536367416382, 0.7376832365989685, 0.7597411274909973, 0.7569673657417297, 0.7576277852058411, 0.7675340175628662, 0.7740060687065125, 0.7730814814567566, 0.7844406366348267, 0.7881389260292053, 0.7862898111343384, 0.7955356240272522, 0.7910447716712952, 0.8082155585289001, 0.809140145778656, 0.8115176558494568, 0.8053097128868103, 0.8070268034934998, 0.8149517774581909, 0.8216879963874817], "val_loss": [1.9250760078430176, 1.1499427556991577, 0.9041584730148315, 0.8326655030250549, 0.7343879342079163, 0.6874404549598694, 0.6601909399032593, 0.6891977787017822, 0.6202489137649536, 0.6159778833389282, 0.583658754825592, 0.5976603031158447, 0.550308346748352, 0.5719438791275024, 0.5443447232246399, 0.5433662533760071, 0.5431581139564514, 0.5328454375267029, 0.5225628018379211, 0.5036714673042297, 0.5105129480361938, 0.49131685495376587, 0.47075021266937256, 0.4590919613838196, 0.47937077283859253, 0.456019788980484, 0.46499064564704895, 0.4747712314128876, 0.44977420568466187], "val_accuracy": [0.4963333308696747, 0.5963333249092102, 0.6759999990463257, 0.6833333373069763, 0.7279999852180481, 0.746999979019165, 0.7483333349227905, 0.7379999756813049, 0.765999972820282, 0.7593333125114441, 0.7793333530426025, 0.7630000114440918, 0.7886666655540466, 0.778333306312561, 0.7940000295639038, 0.7950000166893005, 0.7799999713897705, 0.7923333048820496, 0.7986666560173035, 0.8109999895095825, 0.7973333597183228, 0.8136666417121887, 0.8226666450500488, 0.8286666870117188, 0.8109999895095825, 0.8273333311080933, 0.8223333358764648, 0.8183333277702332, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [45, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 4, 3, 3, 8, 4, 9, 1], [2, 1, 3, 1, 3, 3], [16, 37], [0, 1], [8], [6], [0], [1], [0], [6], [0]], "fitness": -0.34142857789993286, "mapping_values": [1, 6, 3, 3, 2, 15, 9, 6, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.pow(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), alpha)), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.514738082885742, 2.2674930095672607, 2.4180383682250977, 2.3046655654907227, 2.303208112716675, 2.30305552482605, 2.302894115447998], "accuracy": [0.1802932173013687, 0.14330999553203583, 0.1332716941833496, 0.09655263274908066, 0.10157178342342377, 0.09774138033390045, 0.09351472556591034], "val_loss": [2.3033127784729004, 2.0698399543762207, 2.3065505027770996, 2.3037009239196777, 2.3029232025146484, 2.302713394165039, 2.302187442779541], "val_accuracy": [0.09933333098888397, 0.33799999952316284, 0.10066666454076767, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 3, 3, 5, 2, 8, 4, 5, 2, 5, 3, 9, 7, 8, 5, 6, 4, 7, 9, 9, 5, 2, 6, 7, 1, 5, 6, 5, 3, 7, 4, 9, 4, 0, 7, 8, 2, 7, 8, 5, 3, 4, 6, 1, 4, 9], [0, 0, 1, 0, 2, 1, 1, 1, 1, 1, 2, 3, 1, 0, 0, 1, 3, 3, 2, 0, 1, 1, 0, 3, 1], [0, 39, 39, 8, 93, 27, 51, 82, 81, 14, 77, 78], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [79, 37], [0, 1, 1], [1], [6, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 73, 48, 25, 12, 12, 7, 5, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 57, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.sqrt(alpha), tf.math.pow(tf.math.square(tf.math.add(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.add(tf.math.subtract(alpha, tf.math.square(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.multiply(tf.math.add(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, alpha)), grad), tf.math.negative(grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))), alpha)), tf.math.add(grad, tf.math.add(grad, tf.math.sqrt(grad))))))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 80], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093461990356445, 2.309337854385376, 2.309095621109009, 2.3097593784332275, 2.3093748092651367, 2.30904221534729], "accuracy": [0.09219389408826828, 0.09245806187391281, 0.09549596905708313, 0.09153348207473755, 0.09681680053472519, 0.09470347315073013], "val_loss": [2.3094234466552734, 2.3094234466552734, 2.3094234466552734, 2.3094234466552734, 2.3094234466552734, 2.3094234466552734], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]