[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7908571362495422, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2061047554016113, 1.5937230587005615, 1.1468770503997803, 0.9525688290596008, 0.902048647403717, 0.8240897059440613, 0.7651785612106323, 0.7565144300460815, 0.719473123550415, 0.6971442699432373, 0.6726204752922058, 0.6907340884208679, 0.6421433091163635, 0.6196366548538208, 0.6123533248901367, 0.6174126863479614, 0.5988388657569885, 0.5844908952713013, 0.5695436596870422], "accuracy": [0.27261921763420105, 0.5019152164459229, 0.5974111557006836, 0.6622639298439026, 0.672698438167572, 0.698190450668335, 0.7161537408828735, 0.7148329019546509, 0.726192057132721, 0.741909921169281, 0.7508915662765503, 0.7387399077415466, 0.7666094303131104, 0.7693831920623779, 0.7666094303131104, 0.7663452625274658, 0.7796856164932251, 0.7821952104568481, 0.7878747582435608], "val_loss": [1.9124759435653687, 1.1126821041107178, 0.9121557474136353, 0.8315759301185608, 0.7658394575119019, 0.6884076595306396, 0.7057657837867737, 0.6325578093528748, 0.6151126027107239, 0.5995066165924072, 0.7695406675338745, 0.5935778021812439, 0.5666690468788147, 0.5525492429733276, 0.5624763369560242, 0.567844569683075, 0.5629182457923889, 0.5445675849914551, 0.5443966388702393], "val_accuracy": [0.5226666927337646, 0.6276666522026062, 0.6786666512489319, 0.6956666707992554, 0.7106666564941406, 0.7493333220481873, 0.7269999980926514, 0.7599999904632568, 0.7799999713897705, 0.7663333415985107, 0.6776666641235352, 0.7739999890327454, 0.7836666703224182, 0.8040000200271606, 0.7886666655540466, 0.7860000133514404, 0.7776666879653931, 0.7906666398048401, 0.7846666574478149]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2, 8, 5, 1, 4, 8, 5, 9, 3, 2, 4, 4, 3, 7, 6, 6, 7, 7, 6, 2, 2, 8, 7, 3, 1, 7, 1, 6], [2, 0, 3, 1, 0, 3, 3, 2, 3, 4, 3, 1, 2, 1, 1, 4, 2, 1, 4, 1, 0, 3, 2, 1, 0], [16, 1, 11, 19, 42], [1, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 59, 34, 25, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.square(alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, beta)), grad)), tf.math.add(tf.math.add(grad, grad), tf.math.divide_no_nan(tf.math.add(alpha, beta), alpha))), alpha), tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, alpha))), tf.math.multiply(tf.math.subtract(tf.math.add(grad, alpha), tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad)), beta))))))), tf.math.divide_no_nan(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 5, 3, 1, 3, 5, 6, 4, 6, 8, 0, 7, 8, 8, 5, 7, 6], [1, 0, 1, 0, 2, 1, 1, 0, 0, 0], [0, 39, 39, 75, 24], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 2, 2], [2, 0, 3, 2, 0], [16, 37], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 7, 5, 3, 5], [6, 1, 1], [0], [0, 0, 1, 1], [0, 1], [2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 17, 10, 5, 4, 2, 2, 1, 9, 6, 3, 0, 4, 2, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(alpha, tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.sqrt(alpha)), alpha)))), tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.square(alpha))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, alpha))", "other_info": {"loss": [28550.7421875, 540864774144.0, 9.108634699961467e+18, 7.98333947270865e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10738343745470047, 0.09615638852119446, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1977196.25, 35051823693824.0, 5.805774645753052e+20, 2.3025853633880615, NaN, NaN, NaN, NaN, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.0976666659116745, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 1, 0, 2, 1, 3, 7, 6, 4, 2], [0, 0, 1, 0, 2, 1, 2, 0, 2, 3, 3, 0, 1], [0, 39, 39, 7, 28], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 4, 0, 6, 5, 2, 2], [2, 2, 1, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 15, 13, 5, 5, 3, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), grad), tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032066822052, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 0, 53], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 7, 2], [2, 0, 4, 1, 0], [16, 37], [0, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035595417022705, 2.3025858402252197, 2.3025856018066406, 2.3025858402252197, 2.3025858402252197, 2.3025853633880615], "accuracy": [0.09430722147226334, 0.0948355570435524, 0.09417514503002167, 0.09615638852119446, 0.09602430462837219, 0.09813763201236725], "val_loss": [2.3025851249694824, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025851249694824, 2.3025848865509033], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09966666996479034, 0.09966666996479034, 0.09666666388511658]}}]