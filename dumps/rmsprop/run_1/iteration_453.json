[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8117142915725708, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211544990539551, 1.623993992805481, 1.1399712562561035, 0.9831297993659973, 0.9105249047279358, 0.8419692516326904, 0.8144246935844421, 0.7697829008102417, 0.7547590732574463, 0.7184454202651978, 0.7013715505599976, 0.6813699007034302, 0.6738263964653015, 0.6659146547317505, 0.6458160281181335, 0.6361651420593262, 0.6066915392875671, 0.6055824160575867, 0.5834264755249023, 0.5782803893089294, 0.5858848094940186, 0.5643038153648376, 0.5533228516578674, 0.5581715703010559, 0.552324652671814, 0.531413197517395, 0.538788914680481, 0.5302366018295288, 0.5052315592765808, 0.5215764045715332, 0.5121001601219177, 0.4959271550178528, 0.492583692073822, 0.4846602976322174, 0.47933441400527954, 0.4769548773765564, 0.47945794463157654, 0.46654757857322693, 0.4695162773132324, 0.4638655483722687, 0.44476407766342163, 0.45809808373451233, 0.4472913444042206], "accuracy": [0.2654867172241211, 0.49385812878608704, 0.5987319946289062, 0.6420552134513855, 0.6696605682373047, 0.6936996579170227, 0.693831741809845, 0.7144366502761841, 0.719852089881897, 0.7297582626342773, 0.7421740889549255, 0.7457403540611267, 0.7460044622421265, 0.7515519857406616, 0.7589486241340637, 0.7633073329925537, 0.772288978099823, 0.7707040309906006, 0.7853652238845825, 0.7835160493850708, 0.7814027070999146, 0.7860256433486938, 0.7959318161010742, 0.7935543656349182, 0.7968564033508301, 0.8053097128868103, 0.8017435073852539, 0.8058380484580994, 0.8164047002792358, 0.8079513907432556, 0.8064984679222107, 0.817461371421814, 0.8201030492782593, 0.822348415851593, 0.821820080280304, 0.8238013386726379, 0.8255184292793274, 0.8272355198860168, 0.8302733898162842, 0.8321225643157959, 0.8367455005645752, 0.8321225643157959, 0.8397833704948425], "val_loss": [1.9243167638778687, 1.0900498628616333, 0.891428530216217, 0.8280194401741028, 0.755784809589386, 0.7255412340164185, 0.6800057888031006, 0.6295175552368164, 0.6146871447563171, 0.5936540365219116, 0.5932282209396362, 0.5937439799308777, 0.5889105200767517, 0.5517860651016235, 0.5471009612083435, 0.5305076241493225, 0.5295087695121765, 0.5163776874542236, 0.5037617087364197, 0.4969664216041565, 0.5114814639091492, 0.47999805212020874, 0.49994876980781555, 0.4706886410713196, 0.47271546721458435, 0.5074006915092468, 0.4733349084854126, 0.46332618594169617, 0.4664328694343567, 0.44864317774772644, 0.4472959339618683, 0.4576154053211212, 0.4345661699771881, 0.4546821713447571, 0.44065168499946594, 0.43385612964630127, 0.42539116740226746, 0.4256220757961273, 0.41727930307388306, 0.4264431893825531, 0.40980738401412964, 0.4150390923023224, 0.44145694375038147], "val_accuracy": [0.5019999742507935, 0.6576666831970215, 0.6813333630561829, 0.6740000247955322, 0.7066666483879089, 0.7133333086967468, 0.7450000047683716, 0.762666642665863, 0.7693333625793457, 0.7713333368301392, 0.7763333320617676, 0.7713333368301392, 0.7760000228881836, 0.7896666526794434, 0.7976666688919067, 0.7900000214576721, 0.7906666398048401, 0.7963333129882812, 0.8113333582878113, 0.8230000138282776, 0.8133333325386047, 0.8223333358764648, 0.8226666450500488, 0.8180000185966492, 0.828000009059906, 0.8046666383743286, 0.8246666789054871, 0.8276666402816772, 0.8246666789054871, 0.8366666436195374, 0.8356666564941406, 0.8363333344459534, 0.8486666679382324, 0.8323333263397217, 0.8373333215713501, 0.8383333086967468, 0.8506666421890259, 0.8526666760444641, 0.8489999771118164, 0.847000002861023, 0.8463333249092102, 0.8519999980926514, 0.8450000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 1, 3, 1], [0, 0, 1, 2, 2], [57, 39, 69], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, grad))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 1, 6, 9, 5, 7, 1, 5, 1, 4, 3, 4], [0, 0, 1, 0, 2, 3, 1, 1, 1, 1, 2, 1], [0, 39, 39, 35], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 17, 12, 4, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.square(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.subtract(grad, grad)), tf.math.pow(alpha, tf.math.multiply(alpha, alpha)))))), alpha), tf.math.pow(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 3, 2], [0, 39, 95], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 4, 0, 6, 3, 8, 2], [1, 2, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31062650680542, 2.309727907180786, 2.3101987838745117, 2.310384511947632, 2.3086326122283936, 2.3092870712280273], "accuracy": [0.09206181764602661, 0.09219389408826828, 0.08809932321310043, 0.08585391938686371, 0.09126931428909302, 0.08796724677085876], "val_loss": [2.307716131210327, 2.307716131210327, 2.307716131210327, 2.307716131210327, 2.307716131210327, 2.307716131210327], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [38, 37], [0, 1], [5], [1], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104970455169678, 2.309032917022705, 2.3095524311065674, 2.3094630241394043, 2.3091399669647217, 2.3095602989196777], "accuracy": [0.09192973375320435, 0.08942015469074249, 0.09298639744520187, 0.0870426595211029, 0.09259014576673508, 0.09060890227556229], "val_loss": [2.3086817264556885, 2.3086817264556885, 2.3086817264556885, 2.3086817264556885, 2.3086817264556885, 2.3086817264556885], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]