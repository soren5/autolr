[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8205714225769043, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208066701889038, 1.6004021167755127, 1.1407666206359863, 0.9959560632705688, 0.90663081407547, 0.8201149106025696, 0.8007640242576599, 0.7500202655792236, 0.7353693246841431, 0.7121101021766663, 0.6888761520385742, 0.6897585391998291, 0.6576269865036011, 0.6450223326683044, 0.6259037256240845, 0.6180356740951538, 0.6007771492004395, 0.5966024398803711, 0.5994928479194641, 0.5915416479110718, 0.5716392993927002, 0.5674026012420654, 0.5625534057617188, 0.5463175773620605, 0.5356926918029785, 0.5240384340286255, 0.528516948223114, 0.5182080864906311, 0.525722324848175, 0.500640869140625, 0.520442545413971, 0.4961358606815338, 0.48934853076934814, 0.47870439291000366], "accuracy": [0.2697133719921112, 0.5038964748382568, 0.5980715751647949, 0.6448289752006531, 0.6728305220603943, 0.6952846646308899, 0.6996433734893799, 0.7224937081336975, 0.7236824631690979, 0.7333245277404785, 0.7401928305625916, 0.7436270117759705, 0.7466648817062378, 0.7577598690986633, 0.7643640041351318, 0.7666094303131104, 0.7700436115264893, 0.7713643908500671, 0.7721568942070007, 0.7817989587783813, 0.7825914621353149, 0.7906485199928284, 0.7885351777076721, 0.7959318161010742, 0.7975168228149414, 0.8010830879211426, 0.8012151718139648, 0.8053097128868103, 0.800818920135498, 0.8092722296714783, 0.8063663840293884, 0.813498854637146, 0.8149517774581909, 0.8211596608161926], "val_loss": [1.9193675518035889, 1.120153784751892, 0.9073401093482971, 0.8469780087471008, 0.7106178402900696, 0.6856653690338135, 0.6440618634223938, 0.6353460550308228, 0.6245425343513489, 0.6637250781059265, 0.5756970643997192, 0.5759793519973755, 0.5704525709152222, 0.5610311031341553, 0.565778374671936, 0.5346642136573792, 0.5313736200332642, 0.5466774106025696, 0.5100361108779907, 0.5173827409744263, 0.5033465027809143, 0.49183389544487, 0.5265273451805115, 0.4958861470222473, 0.48192325234413147, 0.4778893291950226, 0.49236762523651123, 0.4845382869243622, 0.4638518989086151, 0.47198984026908875, 0.47429537773132324, 0.4610922932624817, 0.46088892221450806, 0.46000438928604126], "val_accuracy": [0.5099999904632568, 0.637666642665863, 0.6669999957084656, 0.6830000281333923, 0.7316666841506958, 0.7419999837875366, 0.7556666731834412, 0.7540000081062317, 0.765666663646698, 0.7413333058357239, 0.777999997138977, 0.7730000019073486, 0.7913333177566528, 0.7786666750907898, 0.7820000052452087, 0.7990000247955322, 0.8009999990463257, 0.7943333387374878, 0.8046666383743286, 0.8073333501815796, 0.8183333277702332, 0.8166666626930237, 0.8069999814033508, 0.8173333406448364, 0.8236666917800903, 0.8213333487510681, 0.8169999718666077, 0.8193333148956299, 0.8326666951179504, 0.8320000171661377, 0.8296666741371155, 0.82833331823349, 0.831333339214325, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 5, 5], [0, 0, 1, 0, 2], [42, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2, 0], [3, 0, 3, 1, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 13, 8, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [194154751590400.0, 4.818147786611119e+29, 7022.4052734375, 10587.6357421875, 13033.435546875, 16422.341796875, 18100.744140625], "accuracy": [0.10421344637870789, 0.09060890227556229, 0.10487385839223862, 0.09853387624025345, 0.10553427785634995, 0.09628847241401672, 0.09377889335155487], "val_loss": [973826254962688.0, 5662.5595703125, 8834.7099609375, 11855.8134765625, 14717.4375, 16915.283203125, 18193.34375], "val_accuracy": [0.09733333438634872, 0.10100000351667404, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [94, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 7, 5, 8, 7, 2, 0], [2, 0, 3, 1, 0, 2, 5, 1], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 21, 13, 8, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 3, 3, 5], [0, 3, 1, 3, 2], [0, 88, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 5, 7, 7, 1, 9], [2, 4, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 5, 3, 2, 1, 2, 1, 1, 0, 9, 6, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), grad), alpha)))", "other_info": {"loss": [2.314589023590088, 1.1682723842247095e+23, 416.2698669433594, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.1022322028875351, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3521175384521484, 137.12786865234375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 5, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 10, 7, 3, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309154987335205, 2.3100903034210205, 2.3093578815460205, 2.310821294784546, 2.309390068054199, 2.3102757930755615], "accuracy": [0.09628847241401672, 0.08889182657003403, 0.09457138925790787, 0.09192973375320435, 0.0936468094587326, 0.08796724677085876], "val_loss": [2.3080477714538574, 2.3080477714538574, 2.3080477714538574, 2.3080477714538574, 2.3080477714538574, 2.3080477714538574], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]