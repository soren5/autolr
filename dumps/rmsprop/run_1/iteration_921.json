[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8151428699493408, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134971618652344, 1.6190338134765625, 1.1440012454986572, 0.9722553491592407, 0.8884320855140686, 0.8379100561141968, 0.768370509147644, 0.739022970199585, 0.7481893301010132, 0.7081989049911499, 0.6658681035041809, 0.6560772657394409, 0.6456525921821594, 0.6285953521728516, 0.6406488418579102, 0.6028543710708618, 0.5898736715316772, 0.5949137210845947, 0.5766499042510986, 0.5719204545021057, 0.5486714243888855, 0.5512084364891052, 0.5540370345115662], "accuracy": [0.26337340474128723, 0.4979526996612549, 0.6056002974510193, 0.6536785364151001, 0.6752080321311951, 0.693831741809845, 0.7153612375259399, 0.7255316376686096, 0.7211728692054749, 0.7391361594200134, 0.7493065595626831, 0.752212405204773, 0.7536653280258179, 0.7631752490997314, 0.759080708026886, 0.7714964747428894, 0.7786290049552917, 0.774798572063446, 0.7814027070999146, 0.7810064554214478, 0.789988100528717, 0.7903843522071838, 0.7951393723487854], "val_loss": [1.930182933807373, 1.12044095993042, 0.9201223850250244, 0.8054303526878357, 0.7848519086837769, 0.6885380744934082, 0.6621305346488953, 0.6368682980537415, 0.6396887898445129, 0.6027863621711731, 0.6432158350944519, 0.6037245392799377, 0.5990686416625977, 0.586581289768219, 0.5899457335472107, 0.5661669373512268, 0.5574663281440735, 0.5193610787391663, 0.539901077747345, 0.5136852860450745, 0.527557373046875, 0.523737370967865, 0.5099517703056335], "val_accuracy": [0.531000018119812, 0.6353333592414856, 0.6913333535194397, 0.6963333487510681, 0.6899999976158142, 0.7283333539962769, 0.734666645526886, 0.7613333463668823, 0.7680000066757202, 0.7710000276565552, 0.7426666617393494, 0.7540000081062317, 0.7576666474342346, 0.7766666412353516, 0.7786666750907898, 0.7766666412353516, 0.8033333420753479, 0.812333345413208, 0.7946666479110718, 0.8076666593551636, 0.79666668176651, 0.8026666641235352, 0.8056666851043701]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 1, 2], [78, 1], [1, 1], [0], [0], [42], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [267338896.0, 40555872256.0, 696860278784.0, 4929827635200.0, 21787983216640.0, 71874130214912.0], "accuracy": [0.10091137140989304, 0.10289261490106583, 0.10011887550354004, 0.09866596013307571, 0.10328886657953262, 0.09747721254825592], "val_loss": [2734835712.0, 147414777856.0, 1582229749760.0, 8625799036928.0, 32309195571200.0, 95305047474176.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [33, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303565740585327, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30340313911438, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 7, 2, 6, 4, 8, 1, 7, 6, 6, 8, 1, 3, 1, 9, 4, 4, 7, 6, 7, 6, 0, 9, 9, 5], [0, 2, 1, 0, 2, 2, 1, 2, 3, 1, 3, 2, 3, 1, 1, 2, 0, 0, 3], [0, 39, 39, 74, 18, 79, 47], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [5, 2, 0, 6, 2, 8, 2], [2, 0, 3, 1, 0], [16, 95], [1, 1], [0], [6], [0], [1], [0], [0], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 49, 30, 19, 7, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.sqrt(tf.math.subtract(grad, alpha)), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(alpha)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), alpha), grad))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3101654052734375, 2.3101675510406494, 2.310392141342163, 2.310568332672119, 2.3094210624694824, 2.3093178272247314], "accuracy": [0.08809932321310043, 0.09245806187391281, 0.09140139818191528, 0.09232597798109055, 0.09179764986038208, 0.09285431355237961], "val_loss": [2.3082339763641357, 2.3082339763641357, 2.3082339763641357, 2.3082339763641357, 2.3082339763641357, 2.3082339763641357], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]