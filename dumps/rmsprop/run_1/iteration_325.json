[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207618236541748, 1.589658260345459, 1.132330060005188, 0.9490765929222107, 0.8774542808532715, 0.8173679709434509, 0.8010742664337158, 0.7650811672210693, 0.7123271226882935, 0.7116227149963379, 0.6802997589111328, 0.6683297753334045, 0.6543957591056824, 0.6400284767150879, 0.6127984523773193, 0.6116604804992676, 0.5958563089370728, 0.573320746421814, 0.5788171291351318, 0.5630272626876831, 0.5708407759666443, 0.5454258322715759, 0.541268527507782, 0.5349802374839783, 0.5167657136917114, 0.5191117525100708, 0.4984895586967468, 0.5089977383613586, 0.5100492835044861, 0.4955655336380005, 0.4947374761104584, 0.4832502603530884, 0.4796972870826721, 0.4713267385959625, 0.4677595794200897, 0.45818519592285156, 0.4455570876598358, 0.4505876302719116, 0.4441288411617279, 0.4512888789176941, 0.4417584240436554, 0.42829403281211853, 0.4296247065067291, 0.42361173033714294, 0.423545777797699, 0.4135226011276245, 0.4120752215385437], "accuracy": [0.2693171203136444, 0.5069343447685242, 0.6026945114135742, 0.6676793098449707, 0.6799629926681519, 0.7030775547027588, 0.7047945857048035, 0.7182670831680298, 0.7364945411682129, 0.7353057861328125, 0.7454761862754822, 0.7549861073493958, 0.7573636174201965, 0.7567031979560852, 0.7692511081695557, 0.7749306559562683, 0.7777044177055359, 0.789459764957428, 0.7823272943496704, 0.7938185334205627, 0.7829877138137817, 0.7957997918128967, 0.7957997918128967, 0.7972526550292969, 0.8088759779930115, 0.805177628993988, 0.8128384351730347, 0.8104609847068787, 0.804649293422699, 0.8165367841720581, 0.8109893202781677, 0.822348415851593, 0.8265751004219055, 0.8202351331710815, 0.8315942287445068, 0.8301413059234619, 0.8355567455291748, 0.833179235458374, 0.8358209133148193, 0.8352925777435303, 0.8301413059234619, 0.8438779711723328, 0.8400475382804871, 0.8474441766738892, 0.8441421389579773, 0.8445383906364441, 0.8515387773513794], "val_loss": [1.918829321861267, 1.113099455833435, 0.8679072856903076, 0.7964404225349426, 0.7203497886657715, 0.6920678019523621, 0.6755857467651367, 0.63921719789505, 0.6195279359817505, 0.6200438141822815, 0.6338075399398804, 0.591421365737915, 0.5816258788108826, 0.5856900811195374, 0.5532678961753845, 0.5739627480506897, 0.5328711867332458, 0.5170965790748596, 0.5121263861656189, 0.5396213531494141, 0.5200895071029663, 0.5196403861045837, 0.4892432987689972, 0.47967544198036194, 0.4810411036014557, 0.46495747566223145, 0.47023990750312805, 0.4873579144477844, 0.4902838170528412, 0.45460399985313416, 0.46560922265052795, 0.45218685269355774, 0.4611063301563263, 0.44829264283180237, 0.4477735161781311, 0.44480428099632263, 0.43084049224853516, 0.431597501039505, 0.43005090951919556, 0.4425085783004761, 0.44032368063926697, 0.4171312749385834, 0.43355491757392883, 0.4217849671840668, 0.4163534641265869, 0.4157373011112213, 0.4125896394252777], "val_accuracy": [0.5336666703224182, 0.6486666798591614, 0.6949999928474426, 0.7056666612625122, 0.7383333444595337, 0.7450000047683716, 0.7406666874885559, 0.7586666941642761, 0.7730000019073486, 0.7646666765213013, 0.7590000033378601, 0.7803333401679993, 0.7853333353996277, 0.7753333449363708, 0.7886666655540466, 0.7746666669845581, 0.7919999957084656, 0.8009999990463257, 0.7993333339691162, 0.793666660785675, 0.8036666512489319, 0.8090000152587891, 0.8159999847412109, 0.8213333487510681, 0.8193333148956299, 0.8246666789054871, 0.824999988079071, 0.8166666626930237, 0.8169999718666077, 0.8286666870117188, 0.8213333487510681, 0.8353333473205566, 0.8199999928474426, 0.8336666822433472, 0.8303333520889282, 0.828000009059906, 0.8403333425521851, 0.8410000205039978, 0.8446666598320007, 0.8370000123977661, 0.8336666822433472, 0.8476666808128357, 0.8423333168029785, 0.8420000076293945, 0.8443333506584167, 0.8453333377838135, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 0, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 92], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 4, 7, 0, 4, 6, 3, 6, 1, 1, 9, 0, 6, 4, 6, 2, 8, 3, 1, 6, 6, 2, 7, 0, 1, 0, 5, 9, 7], [2, 5, 2, 5, 6, 4, 0, 6, 2, 4, 4, 5, 7, 4, 6, 3, 0, 6, 7], [0, 96, 63, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 4, 3, 1, 0, 2, 1, 1, 0, 48, 29, 19, 4], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(beta, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.subtract(beta, grad))), grad)))), grad)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(grad, grad), sigma)))), tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(grad, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 2, 9, 1, 3, 5], [0, 0, 1, 3, 2], [94, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 7, 7, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 6, 1], [6, 1, 3, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.subtract(alpha, sigma), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 7, 2], [1, 0, 3, 4, 0, 4], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 6, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.0455297830470287e+18, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20314356684684753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 1, 8], [0, 0, 2, 0, 2, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 3, 1, 0], [60, 37], [0, 0, 0], [0, 8, 9], [6], [0], [1], [0], [3], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 14, 8, 6, 3, 2, 1, 1, 0, 3, 3, 0, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3093109130859375, 2.3100318908691406, 2.3109209537506104, 2.3094451427459717, 2.3098249435424805, 2.3112850189208984], "accuracy": [0.09589222073554993, 0.09272222965955734, 0.09074098616838455, 0.09708096832036972, 0.09496764093637466, 0.08809932321310043], "val_loss": [2.309330940246582, 2.309330940246582, 2.309330940246582, 2.309330940246582, 2.309330940246582, 2.309330940246582], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545]}}]