[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208099842071533, 1.5990338325500488, 1.14906644821167, 0.9766939878463745, 0.894509494304657, 0.8396686315536499, 0.8018631339073181, 0.7699156403541565, 0.7448816299438477, 0.703120231628418, 0.6896299719810486, 0.6836579442024231, 0.673976480960846, 0.6336236000061035, 0.6321690678596497, 0.6214922070503235, 0.6120979189872742, 0.5870352983474731, 0.5821564793586731, 0.5705732107162476, 0.5706609487533569, 0.5565153360366821, 0.5611401796340942, 0.5426681041717529, 0.5292654633522034, 0.531161367893219, 0.5210263729095459, 0.5131956934928894, 0.5165523290634155, 0.49890899658203125, 0.48423004150390625, 0.48072129487991333, 0.471436470746994, 0.482028067111969, 0.47713586688041687, 0.467359334230423, 0.46955424547195435, 0.4549868702888489, 0.45142510533332825, 0.4503009617328644, 0.448741614818573, 0.44295361638069153], "accuracy": [0.2728833854198456, 0.4970281422138214, 0.5947695374488831, 0.6479989290237427, 0.6754721999168396, 0.6948884129524231, 0.7004358768463135, 0.7143045663833618, 0.713908314704895, 0.7372870445251465, 0.7427024245262146, 0.7408532500267029, 0.7454761862754822, 0.7670056819915771, 0.7635715007781982, 0.7621186375617981, 0.7695152759552002, 0.7794214487075806, 0.7799497842788696, 0.7866860628128052, 0.7836481332778931, 0.7906485199928284, 0.7906485199928284, 0.7905164361000061, 0.8043851256370544, 0.7992339134216309, 0.8078193068504333, 0.8092722296714783, 0.8039889335632324, 0.8169330358505249, 0.8169330358505249, 0.819442629814148, 0.8273676037788391, 0.819970965385437, 0.819970965385437, 0.828292191028595, 0.8290846943855286, 0.8318583965301514, 0.8323867321014404, 0.8290846943855286, 0.8378021121025085, 0.8318583965301514], "val_loss": [1.9113157987594604, 1.1042213439941406, 0.9349010586738586, 0.7747016549110413, 0.8012548685073853, 0.6933364272117615, 0.6858813762664795, 0.6667104363441467, 0.6192613840103149, 0.6303498148918152, 0.6142488121986389, 0.5797742605209351, 0.5988849997520447, 0.5793367028236389, 0.6282795667648315, 0.5461799502372742, 0.5606618523597717, 0.5359446406364441, 0.5273432731628418, 0.53056401014328, 0.5202260613441467, 0.5362789034843445, 0.4965510368347168, 0.49770551919937134, 0.49069902300834656, 0.4806656837463379, 0.47666025161743164, 0.48681876063346863, 0.4871758222579956, 0.47410479187965393, 0.46482789516448975, 0.448068767786026, 0.4543246328830719, 0.4566935896873474, 0.43945086002349854, 0.44766926765441895, 0.43804794549942017, 0.435657262802124, 0.46338093280792236, 0.44586408138275146, 0.43217766284942627, 0.4320814311504364], "val_accuracy": [0.5339999794960022, 0.6623333096504211, 0.6883333325386047, 0.7176666855812073, 0.7120000123977661, 0.7443333268165588, 0.7426666617393494, 0.7566666603088379, 0.7736666798591614, 0.7693333625793457, 0.7526666522026062, 0.7856666445732117, 0.7829999923706055, 0.7916666865348816, 0.7703333497047424, 0.8019999861717224, 0.8026666641235352, 0.8066666722297668, 0.8163333535194397, 0.8100000023841858, 0.8193333148956299, 0.8040000200271606, 0.8180000185966492, 0.8183333277702332, 0.8270000219345093, 0.8306666612625122, 0.8253333568572998, 0.828000009059906, 0.8266666531562805, 0.8326666951179504, 0.8363333344459534, 0.8410000205039978, 0.8386666774749756, 0.8386666774749756, 0.8500000238418579, 0.8410000205039978, 0.8503333330154419, 0.846666693687439, 0.8330000042915344, 0.8339999914169312, 0.8446666598320007, 0.8489999771118164]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 2, 3, 2], [0, 4, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [9], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304030179977417, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 1, 3, 4, 5], [0, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 0, 3, 1, 0], [89, 1], [0, 1], [0], [6], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1080863104.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19178444147109985, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0303707082330735e+19, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 7, 4, 0, 1, 9], [0, 0, 1, 0, 2, 2], [83, 39, 39, 85], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 9], [2, 0, 0, 1, 0], [16, 46], [1, 1], [0], [0], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 4, 0, 8, 1, 6, 9, 5, 6, 5, 7, 5, 7, 0, 0, 0, 1, 9, 8, 0, 4, 7, 4, 1, 2, 4, 3, 2, 0, 9, 5, 2, 6, 4, 2, 6, 8, 8], [2, 2, 4, 0, 7, 2, 3, 7, 5, 6, 0, 5, 2, 5, 4, 1, 1, 2], [0, 97, 5, 85, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 4, 8, 4, 4, 2, 1, 0, 1, 1, 56, 38, 18, 5], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.sqrt(beta)), tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.square(beta), tf.math.add(grad, tf.math.negative(tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, beta), tf.math.pow(sigma, grad)))), grad), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), grad), grad)), alpha)))))))))), alpha))), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 9, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2, 3, 2], [2, 0, 3, 1, 0, 1, 3, 5], [16, 1], [0, 1, 1], [6], [0, 7], [22], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 2, 1, 1, 1, 17, 9, 8, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105974197387695, 2.310213804244995, 2.311429738998413, 2.3115458488464355, 2.3093841075897217, 2.3100786209106445], "accuracy": [0.09311848133802414, 0.09034473448991776, 0.09232597798109055, 0.08981640636920929, 0.09232597798109055, 0.09391097724437714], "val_loss": [2.308539628982544, 2.308539628982544, 2.308539628982544, 2.308539628982544, 2.308539628982544, 2.308539628982544], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545]}}]