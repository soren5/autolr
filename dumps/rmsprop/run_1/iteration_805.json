[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118356227874756, 1.6075186729431152, 1.1639411449432373, 0.9726594090461731, 0.8711115121841431, 0.8280976414680481, 0.7658302187919617, 0.7391541004180908, 0.728977620601654, 0.693244218826294, 0.6809260249137878, 0.666050910949707, 0.6368602514266968, 0.6358354687690735, 0.6011596322059631, 0.6030201315879822, 0.5833937525749207, 0.5808462500572205, 0.5651807188987732, 0.572831928730011, 0.5531774759292603, 0.5506700277328491, 0.5368303060531616, 0.5296406745910645, 0.5348350405693054, 0.5229025483131409, 0.5155726075172424, 0.5136781334877014, 0.4994610846042633, 0.48460376262664795, 0.4960813820362091, 0.47677427530288696, 0.47227606177330017, 0.4823860824108124, 0.46928444504737854, 0.4564126133918762, 0.4545561373233795, 0.45683103799819946, 0.44103342294692993, 0.43619799613952637], "accuracy": [0.26258090138435364, 0.502971887588501, 0.6038832664489746, 0.6519614458084106, 0.683000922203064, 0.6971337795257568, 0.718399167060852, 0.7214370369911194, 0.7314753532409668, 0.7425703406333923, 0.7465327978134155, 0.7531369924545288, 0.7557786107063293, 0.7607977986335754, 0.7726852297782898, 0.7693831920623779, 0.7802139520645142, 0.785101056098938, 0.7890635132789612, 0.7786290049552917, 0.7948752045631409, 0.791969358921051, 0.7960638999938965, 0.7991018295288086, 0.7985734939575195, 0.8063663840293884, 0.8149517774581909, 0.8076872229576111, 0.81112140417099, 0.8189142942428589, 0.8138951063156128, 0.8231409192085266, 0.8238013386726379, 0.8211596608161926, 0.8276317715644836, 0.8315942287445068, 0.8317263126373291, 0.8329150676727295, 0.8360850811004639, 0.8347642421722412], "val_loss": [1.9263193607330322, 1.1906418800354004, 0.894085705280304, 0.807727038860321, 0.7234458923339844, 0.7053303122520447, 0.6913130879402161, 0.6820911169052124, 0.6215817332267761, 0.6446084976196289, 0.6456037759780884, 0.5960787534713745, 0.6082651019096375, 0.5825338959693909, 0.5643747448921204, 0.5758063197135925, 0.5399762988090515, 0.5320753455162048, 0.5526149272918701, 0.5092106461524963, 0.5434880256652832, 0.5075886845588684, 0.5002394914627075, 0.5158880949020386, 0.476604700088501, 0.4793320298194885, 0.47266027331352234, 0.4778439998626709, 0.46968063712120056, 0.4842287302017212, 0.45960187911987305, 0.4579125642776489, 0.4662207067012787, 0.4426046907901764, 0.4391610026359558, 0.4512713551521301, 0.4572189152240753, 0.4469448924064636, 0.44023770093917847, 0.44389742612838745], "val_accuracy": [0.6076666712760925, 0.6016666889190674, 0.6899999976158142, 0.7070000171661377, 0.734666645526886, 0.734333336353302, 0.7379999756813049, 0.750333309173584, 0.7723333239555359, 0.7536666393280029, 0.7576666474342346, 0.7736666798591614, 0.7730000019073486, 0.7730000019073486, 0.7906666398048401, 0.7816666960716248, 0.7926666736602783, 0.8076666593551636, 0.778333306312561, 0.8133333325386047, 0.7913333177566528, 0.8149999976158142, 0.8133333325386047, 0.809333324432373, 0.8306666612625122, 0.828000009059906, 0.8226666450500488, 0.8209999799728394, 0.8370000123977661, 0.8143333196640015, 0.8383333086967468, 0.8346666693687439, 0.8296666741371155, 0.8420000076293945, 0.843666672706604, 0.8360000252723694, 0.8336666822433472, 0.8423333168029785, 0.8383333086967468, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [9, 2, 3, 1, 5, 5], [2, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 0, 6, 3, 8, 2], [0, 2, 3, 1, 0, 0], [4, 37, 33], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 13, 7, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [3, 2, 2, 1, 3, 5], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5, 4], [1, 0, 3, 3, 0, 4], [16, 1], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 15, 9, 6, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3115394115448, 2.326655626296997, 2.356003761291504, 2.4130587577819824, 2.536451578140259, 2.949915885925293, 10.556012153625488, 2096.20556640625, 153173952.0, 9.612305195910623e+28, NaN], "accuracy": [0.0886276587843895, 0.07740060985088348, 0.06630563735961914, 0.07013604789972305, 0.07568352669477463, 0.08479725569486618, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.317164421081543, 2.3418784141540527, 2.385842800140381, 2.4661171436309814, 2.669365406036377, 3.715198516845703, 55.24021911621094, 36204.0, 17174722560.0, NaN, NaN], "val_accuracy": [0.09233333170413971, 0.09399999678134918, 0.0976666659116745, 0.0989999994635582, 0.10166666656732559, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 3, 2], [0, 0, 1, 0, 2, 2, 0], [0, 39, 39, 55], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 6, 7, 0, 7, 8, 4, 9, 4, 7, 5, 6, 0, 2, 1, 7, 9, 5, 5, 4, 8], [3, 0, 3, 1, 0, 0, 0, 2, 0, 0, 2, 0, 5, 1], [16, 57, 24, 52, 58, 46, 19, 38, 90], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 4, 41, 27, 14, 9, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), beta), tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta)))), tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3087568283081055, 2.3106045722961426, 2.3108463287353516, 2.3102543354034424, 2.3094561100006104, 2.310886859893799], "accuracy": [0.09417514503002167, 0.09034473448991776, 0.09047681838274002, 0.09285431355237961, 0.09298639744520187, 0.09074098616838455], "val_loss": [2.3097188472747803, 2.3097188472747803, 2.3097188472747803, 2.3097188472747803, 2.3097188472747803, 2.3097188472747803], "val_accuracy": [0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122]}}]