[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8111428618431091, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2100203037261963, 1.6101371049880981, 1.1339538097381592, 0.9731854796409607, 0.8847659826278687, 0.8218257427215576, 0.7886572480201721, 0.7563136219978333, 0.7111701965332031, 0.7103840708732605, 0.6687567234039307, 0.6753734946250916, 0.6568986177444458, 0.6294572353363037, 0.6212350130081177, 0.6208415031433105, 0.6103988885879517, 0.568788468837738, 0.5648300051689148, 0.561748206615448, 0.5603482723236084, 0.5507937669754028, 0.5506510138511658, 0.5306968688964844, 0.5138198733329773, 0.5111836194992065, 0.5032011866569519, 0.5026504397392273, 0.5032117366790771, 0.48653602600097656, 0.4987105429172516, 0.474901407957077, 0.4763737916946411, 0.4641151428222656, 0.4645666480064392, 0.45664364099502563, 0.4549371004104614, 0.4570958614349365], "accuracy": [0.2665433883666992, 0.4998018741607666, 0.6041474342346191, 0.653150200843811, 0.6807554960250854, 0.7029454708099365, 0.709021270275116, 0.7145687341690063, 0.7428345084190369, 0.7347774505615234, 0.7491744756698608, 0.7429665923118591, 0.7534011602401733, 0.7655527591705322, 0.7630431652069092, 0.7658169269561768, 0.7730814814567566, 0.789459764957428, 0.7864218950271606, 0.791441023349762, 0.7913089394569397, 0.8001585006713867, 0.7964601516723633, 0.8016114234924316, 0.8138951063156128, 0.8161405324935913, 0.8191784620285034, 0.817989706993103, 0.8165367841720581, 0.8210275769233704, 0.8255184292793274, 0.8248580098152161, 0.8329150676727295, 0.8325188159942627, 0.8298771381378174, 0.8341038227081299, 0.8314621448516846, 0.8335754871368408], "val_loss": [1.9216340780258179, 1.1015328168869019, 0.9210695028305054, 0.8269668221473694, 0.7435872554779053, 0.7169020771980286, 0.7464731335639954, 0.6627898216247559, 0.6063507199287415, 0.5876021981239319, 0.5935739874839783, 0.5679835081100464, 0.5613954067230225, 0.5546607375144958, 0.5403268337249756, 0.5886626243591309, 0.5289775133132935, 0.4996573030948639, 0.5177882313728333, 0.5077205896377563, 0.5109636783599854, 0.5101309418678284, 0.5018573999404907, 0.46952807903289795, 0.4712947607040405, 0.48207351565361023, 0.47012537717819214, 0.4712534546852112, 0.4479564130306244, 0.44335779547691345, 0.4511972665786743, 0.4369860291481018, 0.4354301393032074, 0.4505957365036011, 0.440721720457077, 0.4342282712459564, 0.4339468479156494, 0.4248018264770508], "val_accuracy": [0.46666666865348816, 0.653333306312561, 0.67166668176651, 0.7089999914169312, 0.7363333106040955, 0.7356666922569275, 0.7116666436195374, 0.753000020980835, 0.7689999938011169, 0.7673333287239075, 0.7720000147819519, 0.781000018119812, 0.7770000100135803, 0.7893333435058594, 0.8029999732971191, 0.7693333625793457, 0.7990000247955322, 0.8073333501815796, 0.8033333420753479, 0.8100000023841858, 0.8069999814033508, 0.8056666851043701, 0.8069999814033508, 0.8276666402816772, 0.8183333277702332, 0.8173333406448364, 0.8203333616256714, 0.828000009059906, 0.8346666693687439, 0.8376666903495789, 0.8303333520889282, 0.8393333554267883, 0.8423333168029785, 0.8343333601951599, 0.8303333520889282, 0.8353333473205566, 0.8383333086967468, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [9, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 17, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2, 2, 6, 5, 4, 0, 4, 5, 6, 6, 0, 7], [2, 0, 3, 1, 0, 0, 4, 1, 0, 4, 0, 0, 1], [16, 1, 15, 59, 71, 67], [0, 1], [0], [0], [0], [1], [0], [6], [0]], "fitness": -0.26171427965164185, "mapping_values": [1, 1, 1, 0, 1, 31, 18, 13, 6, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.negative(tf.math.pow(grad, tf.math.square(alpha))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.31846022605896, 2.2395713329315186, 2.25771164894104, 2.2910337448120117, 2.4057624340057373, 2.3045718669891357, 2.2950122356414795, 2.2622225284576416, 2.3052639961242676], "accuracy": [0.20552106201648712, 0.1682736724615097, 0.1566503793001175, 0.13353586196899414, 0.12138422578573227, 0.1010434553027153, 0.12429005652666092, 0.1710474193096161, 0.10130762308835983], "val_loss": [2.2086689472198486, 2.3075013160705566, 2.3094537258148193, 2.163757085800171, 2.30483078956604, 2.3018970489501953, 2.15321946144104, 2.3062403202056885, 2.3029417991638184], "val_accuracy": [0.2303333282470703, 0.1003333330154419, 0.10000000149011612, 0.2563333213329315, 0.10000000149011612, 0.09966666996479034, 0.22466666996479034, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 6, 4, 9, 5, 4], [0, 0, 1, 0, 2, 3, 3], [0, 39, 39, 59], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 1], [0, 5, 0], [6], [95], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 4, 10, 6, 4, 0, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.pow(grad, grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 7, 3, 8, 3], [0, 0, 3, 0, 2, 0, 1, 3], [0, 39, 39, 12], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 4, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 1, 3, 5, 7, 1, 4, 3, 2, 3, 3, 8, 1, 3, 5, 0, 1, 1, 5], [1, 0, 1, 0, 2, 2, 3, 1, 1, 1, 3, 2, 0, 0, 3], [0, 52, 39, 81], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 1, 6], [2, 0, 3, 1, 0, 2], [14, 97], [0, 1], [0], [1], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 36, 21, 15, 4, 14, 8, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.subtract(alpha, tf.math.pow(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), grad)), tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.subtract(grad, tf.math.multiply(tf.math.square(alpha), alpha))), alpha), tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.square(grad), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(grad, alpha), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311054229736328, 2.310593605041504, 2.310546875, 2.310481071472168, 2.309577226638794, 2.310227394104004], "accuracy": [0.08796724677085876, 0.09021265059709549, 0.08955223858356476, 0.09008057415485382, 0.09694888442754745, 0.09219389408826828], "val_loss": [2.308802604675293, 2.308802604675293, 2.308802604675293, 2.308802604675293, 2.308802604675293, 2.308802604675293], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}]