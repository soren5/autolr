[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2074062824249268, 1.5886136293411255, 1.1277824640274048, 0.9705450534820557, 0.8822224736213684, 0.8280900716781616, 0.7628760933876038, 0.7475899457931519, 0.7321118712425232, 0.6928899884223938, 0.6799120903015137, 0.650321364402771, 0.6603734493255615, 0.6497889161109924, 0.612151026725769, 0.6173654794692993, 0.5911895632743835, 0.58797287940979, 0.5607525706291199, 0.5662505030632019, 0.5509082674980164, 0.5743604302406311, 0.5444298386573792, 0.523235559463501, 0.5158976912498474, 0.5084080100059509, 0.506417989730835, 0.5002197027206421, 0.49741700291633606, 0.5068161487579346, 0.48848357796669006, 0.4789333939552307, 0.4759642779827118, 0.46560874581336975, 0.45640185475349426, 0.456526517868042, 0.4475145637989044, 0.4431428015232086, 0.45925480127334595, 0.4555753171443939, 0.44306662678718567, 0.4317312240600586, 0.4347403645515442, 0.42742908000946045, 0.4225607216358185, 0.4251682162284851, 0.4198685884475708, 0.4137202501296997, 0.410667359828949, 0.39909377694129944, 0.4022757411003113, 0.40083110332489014, 0.39575549960136414, 0.39151155948638916, 0.392258882522583], "accuracy": [0.2627129852771759, 0.5168405771255493, 0.6009774208068848, 0.6559239029884338, 0.6882842183113098, 0.698190450668335, 0.7180029153823853, 0.7219653725624084, 0.7251353859901428, 0.7404569983482361, 0.7485140562057495, 0.7578919529914856, 0.7516840696334839, 0.759080708026886, 0.7700436115264893, 0.7660810947418213, 0.7832518815994263, 0.7857614755630493, 0.7906485199928284, 0.7862898111343384, 0.7918372750282288, 0.7836481332778931, 0.7959318161010742, 0.8105930685997009, 0.8107251524925232, 0.8170651197433472, 0.8132346868515015, 0.8169330358505249, 0.8136309385299683, 0.8103289008140564, 0.8153480291366577, 0.819970965385437, 0.8219521641731262, 0.8297450542449951, 0.8310658931732178, 0.8334434032440186, 0.8401796221733093, 0.8385946154594421, 0.8298771381378174, 0.8335754871368408, 0.8388587832450867, 0.8412362933158875, 0.8438779711723328, 0.8424250483512878, 0.8426892161369324, 0.8430854678153992, 0.8453308939933777, 0.8453308939933777, 0.8500858545303345, 0.8536521196365356, 0.8558974862098694, 0.854708731174469, 0.8582749962806702, 0.8565579056739807, 0.8574824929237366], "val_loss": [1.910794973373413, 1.0769487619400024, 0.8759633898735046, 0.8031244277954102, 0.7295322418212891, 0.6755325794219971, 0.6943749785423279, 0.6480143666267395, 0.6353299021720886, 0.5901491045951843, 0.5874447226524353, 0.6161399483680725, 0.5469264388084412, 0.5511459708213806, 0.5317398309707642, 0.5272669196128845, 0.5334352254867554, 0.5041212439537048, 0.49366551637649536, 0.5415040254592896, 0.520457923412323, 0.505141019821167, 0.49863940477371216, 0.4691576361656189, 0.46245673298835754, 0.45728185772895813, 0.4581880569458008, 0.4557247757911682, 0.4725187122821808, 0.4404953718185425, 0.44396764039993286, 0.4364528954029083, 0.43065759539604187, 0.4522055685520172, 0.4305073916912079, 0.42364582419395447, 0.43807873129844666, 0.4158739149570465, 0.41288691759109497, 0.42190203070640564, 0.4199362099170685, 0.4159974455833435, 0.42051827907562256, 0.3969647288322449, 0.39829307794570923, 0.39431068301200867, 0.39798030257225037, 0.3959708511829376, 0.3918803036212921, 0.3898453712463379, 0.40381717681884766, 0.38431647419929504, 0.38600772619247437, 0.3903025686740875, 0.39051195979118347], "val_accuracy": [0.6286666393280029, 0.6639999747276306, 0.6869999766349792, 0.6916666626930237, 0.7253333330154419, 0.737666666507721, 0.7176666855812073, 0.7573333382606506, 0.7633333206176758, 0.7760000228881836, 0.7730000019073486, 0.7616666555404663, 0.7863333225250244, 0.7829999923706055, 0.793666660785675, 0.7973333597183228, 0.8063333630561829, 0.8209999799728394, 0.8213333487510681, 0.7933333516120911, 0.7910000085830688, 0.8026666641235352, 0.8119999766349792, 0.8323333263397217, 0.8346666693687439, 0.8413333296775818, 0.8373333215713501, 0.8403333425521851, 0.8220000267028809, 0.8423333168029785, 0.8410000205039978, 0.8399999737739563, 0.847000002861023, 0.8256666660308838, 0.8503333330154419, 0.8510000109672546, 0.840666651725769, 0.8506666421890259, 0.8500000238418579, 0.8476666808128357, 0.8529999852180481, 0.8513333201408386, 0.8486666679382324, 0.8606666922569275, 0.8539999723434448, 0.8619999885559082, 0.8583333492279053, 0.859333336353302, 0.862666666507721, 0.8646666407585144, 0.8523333072662354, 0.862333357334137, 0.8640000224113464, 0.859666645526886, 0.8583333492279053]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 3, 3, 1, 3, 7, 5, 6, 7, 8, 2, 3], [3, 0, 1, 0, 2, 3, 0, 1, 3, 0, 2], [0, 39, 39, 65], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1], [0, 0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 12, 11, 4, 8, 4, 4, 1, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.multiply(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5, 3], [0, 0, 1, 0, 2, 0], [36, 39, 39, 54], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304161787033081, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 2, 2, 0, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [92.17395782470703, 10877.9892578125, 182354.390625, 1279383.25, 5558060.5, 18496104.0], "accuracy": [0.09800554811954498, 0.10302469879388809, 0.09615638852119446, 0.10196803510189056, 0.10460969805717468, 0.09800554811954498], "val_loss": [800.625, 39291.24609375, 417519.09375, 2269384.25, 8489494.0, 25024420.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [5, 2, 3, 1, 9, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 0, 1, 3, 0, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 6, 3, 3, 2, 4, 3, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096699714660645, 2.3092877864837646, 2.310429811477661, 2.3090426921844482, 2.309986114501953, 2.308746576309204], "accuracy": [0.0944393053650856, 0.09734513610601425, 0.09232597798109055, 0.09377889335155487, 0.09166556596755981, 0.08994849026203156], "val_loss": [2.3083550930023193, 2.3083550930023193, 2.3083550930023193, 2.3083550930023193, 2.3083550930023193, 2.3083550930023193], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]