[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131638526916504, 1.6169341802597046, 1.1591887474060059, 0.9882599711418152, 0.9005549550056458, 0.8429838418960571, 0.799394965171814, 0.7495120167732239, 0.7314434051513672, 0.7135122418403625, 0.7020663022994995, 0.6665893793106079, 0.6795692443847656, 0.6555758714675903, 0.6380233764648438, 0.622944176197052, 0.5963590145111084, 0.5997563004493713, 0.5826776027679443, 0.5676170587539673, 0.5750724673271179, 0.5655152201652527, 0.5461971759796143, 0.5394285917282104, 0.5452682971954346, 0.5365847945213318, 0.5135265588760376, 0.5198302268981934, 0.5016388297080994, 0.49639564752578735, 0.4928680956363678, 0.49408647418022156, 0.47588223218917847], "accuracy": [0.26495838165283203, 0.49332982301712036, 0.5861841440200806, 0.6481310129165649, 0.674679696559906, 0.6893408894538879, 0.709549605846405, 0.724210798740387, 0.7284374833106995, 0.7386078238487244, 0.7362303733825684, 0.7523444890975952, 0.750231146812439, 0.7552502751350403, 0.763967752456665, 0.7622507214546204, 0.780610203742981, 0.7817989587783813, 0.7882710099220276, 0.7932901978492737, 0.7847048044204712, 0.7915731072425842, 0.7985734939575195, 0.802271842956543, 0.7996301651000977, 0.8096684813499451, 0.8113855719566345, 0.8100647330284119, 0.8162726163864136, 0.8195747137069702, 0.8193105459213257, 0.816008448600769, 0.8257825970649719], "val_loss": [1.932958960533142, 1.1004385948181152, 0.9885097742080688, 0.7994368672370911, 0.765309751033783, 0.7402833700180054, 0.6762710213661194, 0.6513840556144714, 0.6207364797592163, 0.6070409417152405, 0.6317610144615173, 0.6223828792572021, 0.6007747650146484, 0.5596293210983276, 0.5710342526435852, 0.5461675524711609, 0.5431151390075684, 0.539507269859314, 0.5310440063476562, 0.5086937546730042, 0.5231614112854004, 0.507553219795227, 0.5072941780090332, 0.5060084462165833, 0.4882349967956543, 0.49114990234375, 0.485533207654953, 0.47962671518325806, 0.4744808077812195, 0.4760444462299347, 0.4752538800239563, 0.46824827790260315, 0.4675586223602295], "val_accuracy": [0.5066666603088379, 0.6209999918937683, 0.6156666874885559, 0.7026666402816772, 0.7206666469573975, 0.734000027179718, 0.7276666760444641, 0.7536666393280029, 0.753000020980835, 0.7776666879653931, 0.762333333492279, 0.7630000114440918, 0.7746666669845581, 0.7996666431427002, 0.781000018119812, 0.8016666769981384, 0.8063333630561829, 0.7993333339691162, 0.8019999861717224, 0.8140000104904175, 0.8113333582878113, 0.8113333582878113, 0.812666654586792, 0.8086666464805603, 0.8246666789054871, 0.8213333487510681, 0.8306666612625122, 0.8353333473205566, 0.8296666741371155, 0.8186666369438171, 0.8336666822433472, 0.8336666822433472, 0.8349999785423279]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 3], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037004470825195, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 3, 1, 3, 5, 2, 8, 9, 8, 6, 2, 2, 6, 5, 3, 2, 8, 1, 3, 1, 3, 5, 8, 7, 1, 0, 1, 6, 0, 8, 0, 5, 9], [0, 0, 1, 0, 2, 3, 2, 0, 2, 2, 3, 0, 1, 2, 0, 2, 0, 1], [0, 39, 39, 23, 61, 54, 27, 98, 84], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [4, 0, 3, 1, 0], [16, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 34, 18, 9, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(grad, grad)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.math.square(tf.math.sqrt(grad))), grad), tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.negative(grad)))), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.square(grad)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2574446201324463, 2.3284647464752197, 2.3258135318756104, 2.3195483684539795, 2.3169538974761963, 2.325016498565674, 2.3346197605133057, 2.323812246322632, 2.325376033782959], "accuracy": [0.1212521493434906, 0.09972262382507324, 0.09879804402589798, 0.10130762308835983, 0.10315678268671036, 0.09721305221319199, 0.1002509593963623, 0.10130762308835983, 0.1010434553027153], "val_loss": [2.322852849960327, 2.3049888610839844, 2.3121533393859863, 2.333324432373047, 2.3326058387756348, 2.3175621032714844, 2.3085875511169434, 2.323824644088745, 2.339109420776367], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.10000000149011612, 0.10233332961797714, 0.10000000149011612, 0.09966666996479034, 0.1003333330154419, 0.10000000149011612, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 32], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 2, 9], [0, 0, 1, 0, 0], [0, 39, 39, 76, 77], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 1, 1], [1, 5, 6, 0, 8], [0, 5, 1], [90], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 12, 7, 5, 5, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098554611206055, 2.3095760345458984, 2.3103861808776855, 2.3090829849243164, 2.3102691173553467, 2.3106682300567627], "accuracy": [0.09259014576673508, 0.09549596905708313, 0.09311848133802414, 0.09008057415485382, 0.09126931428909302, 0.09113723784685135], "val_loss": [2.3095295429229736, 2.3095295429229736, 2.3095295429229736, 2.3095295429229736, 2.3095295429229736, 2.3095295429229736], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]