[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8062857389450073, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21062970161438, 1.6168569326400757, 1.1513457298278809, 0.9846479296684265, 0.8848029375076294, 0.809792160987854, 0.7730597853660583, 0.7541418075561523, 0.7133255004882812, 0.683627724647522, 0.6941164135932922, 0.6765239834785461, 0.6439540982246399, 0.6550692319869995, 0.6349301338195801, 0.612151563167572, 0.602178156375885, 0.589451253414154, 0.5951192378997803, 0.5694379210472107, 0.5536304712295532], "accuracy": [0.2712983787059784, 0.49966979026794434, 0.5996565818786621, 0.64667809009552, 0.6781138777732849, 0.709549605846405, 0.71100252866745, 0.7202483415603638, 0.7297582626342773, 0.7430986762046814, 0.7420420050621033, 0.7519482374191284, 0.7637035846710205, 0.7567031979560852, 0.767401933670044, 0.7741381525993347, 0.7786290049552917, 0.78113853931427, 0.7758552432060242, 0.7885351777076721, 0.7967243194580078], "val_loss": [1.9232314825057983, 1.1524217128753662, 0.8748173713684082, 0.7969505190849304, 0.7426989078521729, 0.7286619544029236, 0.6619614362716675, 0.6273084282875061, 0.627558708190918, 0.6398808360099792, 0.5857374668121338, 0.5896537899971008, 0.6292328238487244, 0.5905572772026062, 0.557296097278595, 0.5375810265541077, 0.5798684358596802, 0.5823578834533691, 0.5355173945426941, 0.5160943269729614, 0.5641794204711914], "val_accuracy": [0.5786666870117188, 0.6243333220481873, 0.6959999799728394, 0.7016666531562805, 0.7276666760444641, 0.7243333458900452, 0.7443333268165588, 0.7649999856948853, 0.7593333125114441, 0.7459999918937683, 0.7749999761581421, 0.7829999923706055, 0.7620000243186951, 0.7839999794960022, 0.8009999990463257, 0.8019999861717224, 0.7749999761581421, 0.7749999761581421, 0.7943333387374878, 0.8006666898727417, 0.7900000214576721]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 7], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2, 3], [4, 0, 3, 1, 0, 0, 5], [53, 1, 91], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.multiply(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.0298975295053496e+18, 46280705310720.0, 6.751267910003662, 6.934247016906738, 6.706740856170654, 6.265764236450195], "accuracy": [0.15480121970176697, 0.1002509593963623, 0.1002509593963623, 0.10091137140989304, 0.09470347315073013, 0.0952318087220192], "val_loss": [322373500796928.0, 7.722775936126709, 7.054177284240723, 4.9664764404296875, 6.162929534912109, 6.7854180335998535], "val_accuracy": [0.10733333230018616, 0.09666666388511658, 0.09700000286102295, 0.09966666996479034, 0.10233332961797714, 0.10733333230018616]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 4, 0], [0, 1, 0, 0, 2], [33, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 6, 2], [2, 2, 2, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089427947998047, 2.309981346130371, 2.3100247383117676, 2.3097896575927734, 2.309718370437622, 2.309480667114258], "accuracy": [0.09192973375320435, 0.09272222965955734, 0.08889182657003403, 0.09126931428909302, 0.09087307006120682, 0.0944393053650856], "val_loss": [2.308652639389038, 2.308652639389038, 2.308652639389038, 2.308652639389038, 2.308652639389038, 2.308652639389038], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 4, 1, 3, 5, 1, 4, 5, 2, 4], [3, 3, 1, 0, 0, 1, 1, 2, 2, 1], [0, 12, 39], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [87, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 21, 11, 10, 2, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.subtract(grad, grad), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), tf.math.add(alpha, grad)), tf.math.pow(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309673547744751, 2.309425115585327, 2.3094818592071533, 2.309943437576294, 2.3104665279388428, 2.3096485137939453], "accuracy": [0.09351472556591034, 0.09285431355237961, 0.0936468094587326, 0.09325055778026581, 0.09021265059709549, 0.09087307006120682], "val_loss": [2.308716058731079, 2.308716058731079, 2.308716058731079, 2.308716058731079, 2.308716058731079, 2.308716058731079], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 1, 3, 5], [0, 0, 1, 2, 2], [0, 31, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [8, 2, 0, 6, 3, 9, 2], [2, 0, 4, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 2, 1, 1, 1, 9, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102757930755615, 2.3100087642669678, 2.3100900650024414, 2.3095779418945312, 2.3089284896850586, 2.3097000122070312], "accuracy": [0.08598599582910538, 0.09192973375320435, 0.09325055778026581, 0.09536388516426086, 0.09668471664190292, 0.09509972482919693], "val_loss": [2.308854579925537, 2.308854579925537, 2.308854579925537, 2.308854579925537, 2.308854579925537, 2.308854579925537], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]