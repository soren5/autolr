[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8165714144706726, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21008563041687, 1.6047884225845337, 1.1764792203903198, 0.9711867570877075, 0.9013178944587708, 0.8123301863670349, 0.7783357501029968, 0.7610427141189575, 0.713182270526886, 0.6991968750953674, 0.6823098659515381, 0.6706812977790833, 0.6448330879211426, 0.6443524360656738, 0.6239877343177795, 0.6088041067123413, 0.592716634273529, 0.578250527381897, 0.5886632800102234, 0.5413283705711365, 0.5616211891174316, 0.5542163848876953, 0.5301480889320374, 0.5292611122131348, 0.5265200734138489, 0.5219122171401978, 0.505051851272583, 0.5020087361335754, 0.5050756335258484, 0.48944374918937683, 0.4841233491897583, 0.46746212244033813, 0.4762846529483795, 0.4668946862220764, 0.46341460943222046, 0.46205899119377136, 0.4486272931098938, 0.4473910927772522, 0.4520949721336365, 0.4393000900745392, 0.43641987442970276, 0.42904800176620483, 0.4247780740261078, 0.42622238397598267, 0.4096525013446808, 0.41680461168289185, 0.41567331552505493, 0.40273547172546387, 0.39697062969207764, 0.40586280822753906, 0.39306822419166565, 0.4016329050064087], "accuracy": [0.270109623670578, 0.5004622936248779, 0.5885615944862366, 0.655527651309967, 0.6691322326660156, 0.7021529674530029, 0.7053229212760925, 0.7185312509536743, 0.7349095344543457, 0.7357020378112793, 0.7413815855979919, 0.744419515132904, 0.7584202885627747, 0.7563069462776184, 0.7658169269561768, 0.7700436115264893, 0.7745344042778015, 0.7844406366348267, 0.7816668748855591, 0.7991018295288086, 0.7858935594558716, 0.7946110367774963, 0.7987055778503418, 0.8014793395996094, 0.7994980812072754, 0.8047813773155212, 0.81112140417099, 0.8195747137069702, 0.8112534880638123, 0.8240655064582825, 0.8227446675300598, 0.8274996876716614, 0.8240655064582825, 0.82683926820755, 0.8313300609588623, 0.8274996876716614, 0.8348963260650635, 0.837141752243042, 0.8308017253875732, 0.8325188159942627, 0.839519202709198, 0.8446704745292664, 0.8441421389579773, 0.844010055065155, 0.8496896028518677, 0.8490291833877563, 0.8475762605667114, 0.8533879518508911, 0.8504821062088013, 0.8524633646011353, 0.852859616279602, 0.8487650156021118], "val_loss": [1.9219613075256348, 1.1110272407531738, 0.8553798794746399, 0.8280646204948425, 0.7913256883621216, 0.715192437171936, 0.7271134257316589, 0.6548036932945251, 0.6305403113365173, 0.6557321548461914, 0.6027510762214661, 0.6015892624855042, 0.5651730298995972, 0.5637193322181702, 0.5555900931358337, 0.5980343222618103, 0.5376302599906921, 0.5310918092727661, 0.522406816482544, 0.5158600211143494, 0.53127121925354, 0.4975467026233673, 0.4944938123226166, 0.5132237076759338, 0.501056432723999, 0.483940988779068, 0.48054027557373047, 0.49850115180015564, 0.4970010221004486, 0.46236351132392883, 0.4712224006652832, 0.49420246481895447, 0.44730353355407715, 0.4494553208351135, 0.4541335105895996, 0.46927979588508606, 0.4392964541912079, 0.46204352378845215, 0.43477514386177063, 0.43416982889175415, 0.42756664752960205, 0.4253281354904175, 0.42138156294822693, 0.42434170842170715, 0.42197099328041077, 0.42749202251434326, 0.41359683871269226, 0.41058096289634705, 0.42158666253089905, 0.410115122795105, 0.40318763256073, 0.4047071933746338], "val_accuracy": [0.5263333320617676, 0.6389999985694885, 0.7099999785423279, 0.7120000123977661, 0.715666651725769, 0.718999981880188, 0.7139999866485596, 0.7586666941642761, 0.7716666460037231, 0.7450000047683716, 0.7823333144187927, 0.7770000100135803, 0.7986666560173035, 0.7913333177566528, 0.8003333210945129, 0.7793333530426025, 0.8086666464805603, 0.8086666464805603, 0.8159999847412109, 0.8173333406448364, 0.7946666479110718, 0.8216666579246521, 0.8196666836738586, 0.8106666803359985, 0.8196666836738586, 0.8293333053588867, 0.8296666741371155, 0.8159999847412109, 0.8176666498184204, 0.8306666612625122, 0.8273333311080933, 0.8153333067893982, 0.8376666903495789, 0.8383333086967468, 0.8370000123977661, 0.8286666870117188, 0.8403333425521851, 0.8273333311080933, 0.8423333168029785, 0.8416666388511658, 0.846666693687439, 0.8493333458900452, 0.8486666679382324, 0.8489999771118164, 0.846666693687439, 0.8493333458900452, 0.8523333072662354, 0.8489999771118164, 0.8423333168029785, 0.8516666889190674, 0.8503333330154419, 0.8523333072662354]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 4, 5, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 2], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [28084.373046875, 543697895424.0, 8.797852790568255e+18, 6.667823292981507e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09602430462837219, 0.10038304328918457, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2001967.25, 35492884119552.0, 5.88248220640624e+20, 2.3025853633880615, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.09700000286102295, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [7, 2, 3, 1, 3, 5], [1, 1, 1, 0, 2], [0, 39, 21], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 1, 5, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(alpha, alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032121658325195, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 0, 3, 1, 0], [81, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.597597317641092e+25, 5.405172253589402e+25, 5.4472123833333865e+25, 5.246750231978579e+25, 5.325799603189045e+25, 5.422769525098518e+25], "accuracy": [0.11121384054422379, 0.11411966383457184, 0.11491216719150543, 0.1146479994058609, 0.1150442510843277, 0.10817593336105347], "val_loss": [5.1009955895231725e+25, 5.1009955895231725e+25, 5.1009955895231725e+25, 5.1009955895231725e+25, 5.1009955895231725e+25, 5.1009955895231725e+25], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39, 90], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 10, 5, 5, 4, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3090336322784424, 2.3109395503997803, 2.309703826904297, 2.3089232444763184, 2.309610605239868, 2.3100690841674805], "accuracy": [0.09813763201236725, 0.09338264167308807, 0.09681680053472519, 0.09391097724437714, 0.09457138925790787, 0.09470347315073013], "val_loss": [2.308885335922241, 2.308885335922241, 2.308885335922241, 2.308885335922241, 2.308885335922241, 2.308885335922241], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}]