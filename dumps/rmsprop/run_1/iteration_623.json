[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8157142996788025, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131989002227783, 1.6158063411712646, 1.1617885828018188, 0.9554148316383362, 0.8852300047874451, 0.8474331498146057, 0.7748491168022156, 0.7494211792945862, 0.7129629254341125, 0.7200701236724854, 0.6844496726989746, 0.6793345808982849, 0.641425609588623, 0.6495088934898376, 0.6264090538024902, 0.6052190065383911, 0.6048223972320557, 0.5970680117607117, 0.593362033367157, 0.5792112946510315, 0.5621535181999207, 0.5547000169754028, 0.5547671914100647, 0.5405660271644592, 0.5411731600761414, 0.5423009395599365], "accuracy": [0.2619204819202423, 0.5005943775177002, 0.5904107689857483, 0.6602826714515686, 0.6828688383102417, 0.6940959095954895, 0.7182670831680298, 0.7283053994178772, 0.7359662055969238, 0.7296261787414551, 0.7461365461349487, 0.7437590956687927, 0.7613261342048645, 0.7586844563484192, 0.7717606425285339, 0.7729493975639343, 0.7716285586357117, 0.783119797706604, 0.7746664881706238, 0.7837802171707153, 0.7911768555641174, 0.7932901978492737, 0.7930260300636292, 0.7997622489929199, 0.8043851256370544, 0.8020076751708984], "val_loss": [1.9345275163650513, 1.1056499481201172, 0.9040707349777222, 0.8241167664527893, 0.7981160283088684, 0.7243722081184387, 0.6980227828025818, 0.6623250246047974, 0.684147298336029, 0.6459136605262756, 0.6111028790473938, 0.617855429649353, 0.6074462532997131, 0.5907328128814697, 0.5948238968849182, 0.5534868240356445, 0.558988630771637, 0.5494211912155151, 0.5385105013847351, 0.548845112323761, 0.5189791917800903, 0.5558657646179199, 0.5220773816108704, 0.5279413461685181, 0.508268415927887, 0.541502833366394], "val_accuracy": [0.5063333511352539, 0.6499999761581421, 0.6836666464805603, 0.6986666917800903, 0.6930000185966492, 0.7353333234786987, 0.737333357334137, 0.7509999871253967, 0.7480000257492065, 0.765333354473114, 0.7799999713897705, 0.7580000162124634, 0.7706666588783264, 0.7760000228881836, 0.7786666750907898, 0.8050000071525574, 0.7973333597183228, 0.8059999942779541, 0.8019999861717224, 0.7883333563804626, 0.8166666626930237, 0.7979999780654907, 0.8130000233650208, 0.8109999895095825, 0.8100000023841858, 0.7990000247955322]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5, 7, 7, 2, 7, 7, 6, 9, 6, 3, 2, 9, 0, 3, 5, 4], [0, 0, 3, 0, 2, 2, 2, 3, 3, 3, 2, 2, 2, 3], [0, 39, 39, 29, 38], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 3, 3, 0], [16, 37], [0, 1], [0], [6], [0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 3, 6, 1, 9, 4, 5, 0, 5], [2, 1, 0, 7], [0, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 22, 14, 5, 1, 0, 1, 0, 2, 1, 1, 0, 13, 9, 4, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), tf.math.multiply(tf.math.add(grad, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), grad), tf.math.negative(tf.math.multiply(tf.math.square(grad), grad))), grad), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, alpha)), tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2, 7, 5], [2, 0, 1, 0, 2, 0, 0], [0, 39, 39, 17], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 6, 3, 8, 2, 2, 6, 8, 0], [0, 0, 3, 1, 0, 5, 0, 3], [16, 37, 46, 77], [0, 1, 0, 0, 1], [4, 0, 0], [0, 2], [44], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 19, 11, 8, 4, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(grad), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.divide_no_nan(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 3, 9], [3, 3, 0, 0, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 5, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311115026473999, 2.3110435009002686, 2.309577703475952, 2.310046434402466, 2.310805082321167, 2.3092031478881836], "accuracy": [0.08809932321310043, 0.08691058307886124, 0.0948355570435524, 0.08915598690509796, 0.09642054885625839, 0.09787346422672272], "val_loss": [2.308992385864258, 2.308992385864258, 2.308992385864258, 2.308992385864258, 2.308992385864258, 2.308992385864258], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100812435150146, 2.3086185455322266, 2.310586929321289, 2.3092703819274902, 2.308727264404297, 2.3097949028015137], "accuracy": [0.09179764986038208, 0.09430722147226334, 0.09391097724437714, 0.09325055778026581, 0.09272222965955734, 0.09325055778026581], "val_loss": [2.3088996410369873, 2.3088996410369873, 2.3088996410369873, 2.3088996410369873, 2.3088996410369873, 2.3088996410369873], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]