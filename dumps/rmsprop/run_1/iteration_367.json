[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20971417427063, 1.613922357559204, 1.12026047706604, 0.9951488971710205, 0.8827009201049805, 0.8295629024505615, 0.7608336210250854, 0.746639609336853, 0.7354770302772522, 0.7075064182281494, 0.6689116358757019, 0.6829331517219543, 0.6504632234573364, 0.6335144639015198, 0.6231940388679504, 0.6197059750556946, 0.5927355289459229, 0.6050447225570679, 0.5725762248039246, 0.5605688691139221, 0.5542168021202087, 0.5547244548797607, 0.5341086387634277, 0.5344707369804382, 0.5272887349128723, 0.5130239129066467, 0.5198627710342407, 0.5063192844390869, 0.5001043081283569, 0.49537619948387146, 0.49370017647743225, 0.48146459460258484, 0.4836539626121521], "accuracy": [0.2677321434020996, 0.5068022608757019, 0.6061286330223083, 0.640338122844696, 0.6767930388450623, 0.6925109028816223, 0.7147008180618286, 0.7206445932388306, 0.7213049530982971, 0.737947404384613, 0.7464007139205933, 0.7420420050621033, 0.7539294958114624, 0.7602694630622864, 0.7662131786346436, 0.7697794437408447, 0.7833839654922485, 0.7716285586357117, 0.7858935594558716, 0.7852331399917603, 0.793422281742096, 0.7975168228149414, 0.802271842956543, 0.8045172095298767, 0.8058380484580994, 0.8156121969223022, 0.8087438941001892, 0.8137630224227905, 0.8182538747787476, 0.8212917447090149, 0.8201030492782593, 0.8234050869941711, 0.8216879963874817], "val_loss": [1.9265937805175781, 1.0966798067092896, 0.9077814817428589, 0.8451090455055237, 0.7495086193084717, 0.693291425704956, 0.664239227771759, 0.6707003116607666, 0.6347721219062805, 0.6315454840660095, 0.6608071327209473, 0.6021748185157776, 0.567090630531311, 0.5929607152938843, 0.5610125064849854, 0.5346134901046753, 0.5478758215904236, 0.5242217779159546, 0.5380391478538513, 0.5126811265945435, 0.505364716053009, 0.5091478824615479, 0.513712465763092, 0.49646416306495667, 0.5128352642059326, 0.5155425071716309, 0.49624308943748474, 0.4671722948551178, 0.4694086015224457, 0.46503785252571106, 0.48121488094329834, 0.4711328148841858, 0.4582744240760803], "val_accuracy": [0.5590000152587891, 0.668666660785675, 0.6783333420753479, 0.6773333549499512, 0.7113333344459534, 0.7300000190734863, 0.7523333430290222, 0.7443333268165588, 0.7583333253860474, 0.7643333077430725, 0.750333309173584, 0.7620000243186951, 0.7793333530426025, 0.762666642665863, 0.7913333177566528, 0.8003333210945129, 0.7900000214576721, 0.7963333129882812, 0.7786666750907898, 0.8066666722297668, 0.8056666851043701, 0.8069999814033508, 0.8019999861717224, 0.8059999942779541, 0.800000011920929, 0.8059999942779541, 0.8080000281333923, 0.8309999704360962, 0.8213333487510681, 0.8253333568572998, 0.8146666884422302, 0.8220000267028809, 0.8240000009536743]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [23, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 6, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 4, 1, 3, 5, 7, 3, 0, 7, 8, 0, 9], [0, 0, 1, 0, 2, 3, 0], [83, 39, 39, 65, 78], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 3, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 13, 7, 5, 12, 7, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), grad), tf.math.add(grad, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 2, 0, 6, 3, 8, 2, 6, 3, 5, 0, 5, 1, 0], [2, 0, 5, 1, 0, 3, 2, 3], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 22, 14, 8, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.negative(alpha)))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(grad, beta)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 7, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [4, 1], [0, 1, 0, 0, 1, 1, 1], [6, 4, 2], [6, 3, 4, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 12, 7, 5, 3, 2, 1, 1, 0, 7, 3, 4, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(sigma, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3090407848358154, 2.309436798095703, 2.3086912631988525, 2.3096179962158203, 2.309387445449829, 2.3088748455047607], "accuracy": [0.09272222965955734, 0.08942015469074249, 0.0940430611371994, 0.09311848133802414, 0.08902391046285629, 0.08836349099874496], "val_loss": [2.3090577125549316, 2.3090577125549316, 2.3090577125549316, 2.3090577125549316, 2.3090577125549316, 2.3090577125549316], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]