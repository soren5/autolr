[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209346055984497, 1.6066908836364746, 1.1616308689117432, 0.957331120967865, 0.8964723944664001, 0.8284346461296082, 0.7758925557136536, 0.7467980980873108, 0.7201157808303833, 0.6954131722450256, 0.699683427810669, 0.6716583371162415, 0.6465076804161072, 0.6521156430244446, 0.6184645295143127, 0.6020751595497131, 0.5875012874603271, 0.6031538248062134, 0.5709000825881958, 0.5556398630142212, 0.5582450032234192, 0.5495445132255554, 0.5404664874076843, 0.539632260799408, 0.518628716468811, 0.516734778881073, 0.5087208151817322, 0.49271807074546814, 0.4893887937068939, 0.47583645582199097, 0.48102664947509766, 0.48539772629737854, 0.46744826436042786, 0.47166940569877625, 0.45916256308555603, 0.4569239020347595, 0.445965975522995, 0.45655226707458496, 0.44127213954925537, 0.44082874059677124, 0.43567055463790894, 0.4373488128185272, 0.4316522479057312, 0.4265672564506531, 0.40675869584083557, 0.41575324535369873, 0.4128399193286896, 0.4161793887615204, 0.40335971117019653, 0.4013928771018982, 0.3995581269264221, 0.3899225890636444, 0.3882744014263153, 0.3800567388534546, 0.3798314332962036, 0.37332063913345337, 0.38302356004714966, 0.37244468927383423, 0.37064501643180847, 0.3583036959171295, 0.3649417757987976, 0.37085357308387756, 0.36851420998573303, 0.3536977469921112, 0.3485456705093384], "accuracy": [0.2645621597766876, 0.5094439387321472, 0.5999207496643066, 0.6616035103797913, 0.6794346570968628, 0.6976621150970459, 0.7170783281326294, 0.7230220437049866, 0.7372870445251465, 0.7499669790267944, 0.7376832365989685, 0.7478536367416382, 0.767930269241333, 0.7597411274909973, 0.7771760821342468, 0.7800818681716919, 0.7848368883132935, 0.7808743715286255, 0.7890635132789612, 0.7952714562416077, 0.7960638999938965, 0.7969884872436523, 0.8006868362426758, 0.8055738806724548, 0.8098005652427673, 0.8092722296714783, 0.8148196935653687, 0.8208954930305481, 0.821820080280304, 0.8253863453865051, 0.8272355198860168, 0.8230088353157043, 0.829216718673706, 0.8280280232429504, 0.8315942287445068, 0.8337075710296631, 0.8376700282096863, 0.8358209133148193, 0.8409721255302429, 0.8436138033866882, 0.8445383906364441, 0.842028796672821, 0.844010055065155, 0.8442742228507996, 0.8549728989601135, 0.8516708612442017, 0.8506141901016235, 0.8544445633888245, 0.8532558679580688, 0.8593316674232483, 0.8529917001724243, 0.8570862412452698, 0.858671247959137, 0.8671245574951172, 0.8623695969581604, 0.8654074668884277, 0.8643507957458496, 0.86553955078125, 0.8647470474243164, 0.8709549307823181, 0.8684453964233398, 0.868049144744873, 0.8676528930664062, 0.8746532797813416, 0.8742570281028748], "val_loss": [1.921278953552246, 1.1112226247787476, 0.8941571712493896, 0.7856656908988953, 0.742173433303833, 0.7219863533973694, 0.6884183883666992, 0.6619313955307007, 0.6002994775772095, 0.6261392831802368, 0.59929358959198, 0.5758318901062012, 0.5672003626823425, 0.541240394115448, 0.5416988730430603, 0.5257940292358398, 0.5456911325454712, 0.5261796116828918, 0.5090657472610474, 0.5053554773330688, 0.5223599672317505, 0.4942614436149597, 0.5188849568367004, 0.4822128117084503, 0.4776022136211395, 0.4880988895893097, 0.49242815375328064, 0.4718676805496216, 0.4721391201019287, 0.4894961416721344, 0.46579989790916443, 0.46820324659347534, 0.4657832384109497, 0.45890170335769653, 0.46831485629081726, 0.46208471059799194, 0.4511413276195526, 0.446983277797699, 0.4442339539527893, 0.4403378963470459, 0.43687307834625244, 0.4478868842124939, 0.43533623218536377, 0.42720702290534973, 0.43549445271492004, 0.4368799328804016, 0.4307403862476349, 0.427755206823349, 0.42782172560691833, 0.43449872732162476, 0.43285655975341797, 0.4207148849964142, 0.415617436170578, 0.4088050127029419, 0.4188591241836548, 0.4425237774848938, 0.412382572889328, 0.4084037244319916, 0.41202008724212646, 0.40655258297920227, 0.417061984539032, 0.40455061197280884, 0.4091815650463104, 0.40519532561302185, 0.4025000035762787], "val_accuracy": [0.606333315372467, 0.6543333530426025, 0.6840000152587891, 0.7229999899864197, 0.7236666679382324, 0.7193333506584167, 0.7416666746139526, 0.7383333444595337, 0.7816666960716248, 0.7573333382606506, 0.7666666507720947, 0.7743333578109741, 0.7879999876022339, 0.7910000085830688, 0.8036666512489319, 0.7983333468437195, 0.7929999828338623, 0.8026666641235352, 0.8016666769981384, 0.8100000023841858, 0.793666660785675, 0.8183333277702332, 0.8083333373069763, 0.8226666450500488, 0.8209999799728394, 0.8209999799728394, 0.8169999718666077, 0.8263333439826965, 0.8263333439826965, 0.8190000057220459, 0.8309999704360962, 0.8330000042915344, 0.8270000219345093, 0.8266666531562805, 0.824999988079071, 0.8263333439826965, 0.8333333134651184, 0.8356666564941406, 0.8379999995231628, 0.8326666951179504, 0.8383333086967468, 0.8336666822433472, 0.8423333168029785, 0.843666672706604, 0.8416666388511658, 0.8366666436195374, 0.8413333296775818, 0.8413333296775818, 0.8450000286102295, 0.8396666646003723, 0.8426666855812073, 0.8463333249092102, 0.8473333120346069, 0.8496666550636292, 0.843999981880188, 0.8333333134651184, 0.8476666808128357, 0.8486666679382324, 0.8506666421890259, 0.8543333411216736, 0.847000002861023, 0.8519999980926514, 0.8483333587646484, 0.8536666631698608, 0.8539999723434448]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [0, 57, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2, 6, 5, 2, 7, 6, 9, 9, 7, 0, 3, 9, 5, 7, 5, 1, 0, 2, 1, 6, 2, 0, 5, 3, 7, 6, 9, 8, 2, 8, 2, 2, 3, 7, 7, 5, 4, 1, 6, 7, 2, 3], [2, 2, 3, 1, 0, 3, 4, 1, 2, 2, 0, 2, 0, 4, 3, 0, 2, 1, 5, 1, 5, 1, 1, 3, 0, 5, 5, 1], [99, 37, 55, 4, 23, 61, 60, 83, 76], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [4, 3, 0, 6, 7, 1, 8, 3, 1, 5, 4, 4, 6, 5, 8, 1, 9], [0, 6, 7, 7, 7, 6, 5, 1, 2, 5, 4], [52, 29], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 76, 48, 28, 9, 28, 17, 11, 2, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), grad), tf.math.square(tf.math.add(grad, tf.math.square(tf.math.subtract(tf.math.negative(tf.math.add(alpha, beta)), tf.math.subtract(tf.math.divide_no_nan(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))))))))), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.pow(grad, tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.multiply(grad, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), grad), grad))), alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.multiply(grad, tf.math.subtract(grad, grad))), tf.math.square(grad)), grad), tf.math.pow(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.square(alpha)), tf.math.sqrt(beta)), tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 7, 2, 5], [0, 0, 1, 0, 2], [0, 39, 24], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [1], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103737831115723, 2.309278726577759, 2.3092987537384033, 2.309410810470581, 2.308138847351074, 2.31025767326355], "accuracy": [0.09787346422672272, 0.09087307006120682, 0.09351472556591034, 0.09708096832036972, 0.09760929644107819, 0.08889182657003403], "val_loss": [2.3090484142303467, 2.3090484142303467, 2.3090484142303467, 2.3090484142303467, 2.3090484142303467, 2.3090484142303467], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 15], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 37], [1, 1], [7], [6], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095874786376953, 2.310471296310425, 2.30989933013916, 2.3098385334014893, 2.3105883598327637, 2.310588836669922], "accuracy": [0.09721305221319199, 0.08889182657003403, 0.09060890227556229, 0.09021265059709549, 0.08506141602993011, 0.09272222965955734], "val_loss": [2.309468984603882, 2.309468984603882, 2.309468984603882, 2.309468984603882, 2.309468984603882, 2.309468984603882], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]