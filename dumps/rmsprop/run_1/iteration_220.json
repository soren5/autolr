[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8397142887115479, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208348035812378, 1.593178153038025, 1.1379624605178833, 0.9599382877349854, 0.8776481747627258, 0.8302531838417053, 0.7819467782974243, 0.7334049940109253, 0.7257272601127625, 0.7160295248031616, 0.6640635132789612, 0.6652504801750183, 0.6491202116012573, 0.6287376284599304, 0.6086070537567139, 0.6175217032432556, 0.6024824976921082, 0.5710031390190125, 0.5743421912193298, 0.5486164689064026, 0.544465184211731, 0.5459321141242981, 0.541656494140625, 0.5264182686805725, 0.5138750672340393, 0.5192938446998596, 0.5020716786384583, 0.4988560080528259, 0.49824440479278564, 0.5001558661460876, 0.48459601402282715, 0.47920969128608704, 0.47075575590133667, 0.4810638427734375, 0.4716261923313141, 0.4541610777378082, 0.46095433831214905, 0.4548356831073761, 0.44881221652030945, 0.44547513127326965, 0.4444144070148468, 0.4374240040779114, 0.4316385090351105, 0.4231449067592621, 0.42059457302093506, 0.41332998871803284], "accuracy": [0.2709021270275116, 0.5097081065177917, 0.6019020080566406, 0.6546030640602112, 0.6831330060958862, 0.6971337795257568, 0.7082287669181824, 0.7259278893470764, 0.7290979027748108, 0.7276449799537659, 0.7528728246688843, 0.7504953145980835, 0.7556465268135071, 0.7655527591705322, 0.7709681391716003, 0.7652885913848877, 0.7720248103141785, 0.7837802171707153, 0.7861577272415161, 0.7981772422790527, 0.7957997918128967, 0.7987055778503418, 0.7957997918128967, 0.8061022162437439, 0.8047813773155212, 0.8059701323509216, 0.8120459914207458, 0.8138951063156128, 0.8127063512802124, 0.8124422430992126, 0.8197067975997925, 0.8215559124946594, 0.8232730031013489, 0.8203672170639038, 0.8264430165290833, 0.8347642421722412, 0.830669641494751, 0.8245938420295715, 0.8308017253875732, 0.8362171649932861, 0.8329150676727295, 0.8384625315666199, 0.8378021121025085, 0.844010055065155, 0.8433496356010437, 0.8481045961380005], "val_loss": [1.9216116666793823, 1.147221326828003, 0.9011735320091248, 0.7913756370544434, 0.803562581539154, 0.7412015795707703, 0.6850559711456299, 0.6447837948799133, 0.6419717073440552, 0.6126195192337036, 0.5946879982948303, 0.5861300230026245, 0.6762763857841492, 0.5593730211257935, 0.5857081413269043, 0.5455957651138306, 0.5375630259513855, 0.5358504056930542, 0.5214360356330872, 0.5227256417274475, 0.5070335865020752, 0.5198375582695007, 0.5036911964416504, 0.5005559921264648, 0.4980931878089905, 0.48703548312187195, 0.490386962890625, 0.47873467206954956, 0.4985882043838501, 0.4904896318912506, 0.4828369617462158, 0.46471548080444336, 0.47160783410072327, 0.47612664103507996, 0.4535660743713379, 0.4608725607395172, 0.45384249091148376, 0.45313790440559387, 0.44789770245552063, 0.4455958604812622, 0.4420607388019562, 0.44026508927345276, 0.4438420534133911, 0.4506464898586273, 0.4326837956905365, 0.4354196786880493], "val_accuracy": [0.5410000085830688, 0.5979999899864197, 0.6806666851043701, 0.7273333072662354, 0.6926666498184204, 0.7146666646003723, 0.7369999885559082, 0.7649999856948853, 0.7516666650772095, 0.7743333578109741, 0.7799999713897705, 0.7833333611488342, 0.7450000047683716, 0.7950000166893005, 0.7599999904632568, 0.7973333597183228, 0.8023333549499512, 0.8076666593551636, 0.8033333420753479, 0.8193333148956299, 0.8140000104904175, 0.8146666884422302, 0.824999988079071, 0.8166666626930237, 0.8259999752044678, 0.8169999718666077, 0.8230000138282776, 0.8266666531562805, 0.8163333535194397, 0.8203333616256714, 0.8339999914169312, 0.8330000042915344, 0.8339999914169312, 0.8293333053588867, 0.8416666388511658, 0.8360000252723694, 0.8356666564941406, 0.8356666564941406, 0.8423333168029785, 0.8423333168029785, 0.8473333120346069, 0.8413333296775818, 0.8373333215713501, 0.8413333296775818, 0.8420000076293945, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 7, 4, 3, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 7, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 0, 3, 7, 2], [2, 2, 5, 2, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.negative(tf.math.multiply(beta, grad))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038716316223145, 79.00137329101562, 1345162.125, 11475517440.0, 57061635260416.0, 2.3860214930551603e+17, 1.1584850686277656e+21, 1.3962124993069398e+25], "accuracy": [0.09747721254825592, 0.09826971590518951, 0.0956280529499054, 0.09668471664190292, 0.10487385839223862, 0.1026284471154213, 0.09945846349000931, 0.09826971590518951], "val_loss": [2.3029563426971436, 3152.404052734375, 10532323.0, 263022804992.0, 1585592001363968.0, 7.599639653234246e+18, 3.0630399699629365e+22, 8.817820368394271e+25], "val_accuracy": [0.09799999743700027, 0.10000000149011612, 0.10233332961797714, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [4, 2, 3, 1, 3, 5], [0, 0, 3, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2, 5, 9], [2, 2, 3, 4, 0], [16, 1], [0, 1], [0], [0], [0], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 7, 3, 4, 2, 13, 9, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 1, 5], [3, 0, 2, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 2, 0], [16, 37], [0, 1], [0], [2], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31026554107666, 2.3087332248687744, 2.3097422122955322, 2.3111467361450195, 2.308410167694092, 2.309465169906616], "accuracy": [0.09496764093637466, 0.09179764986038208, 0.09457138925790787, 0.08902391046285629, 0.08968432247638702, 0.09140139818191528], "val_loss": [2.308105707168579, 2.308105707168579, 2.308105707168579, 2.308105707168579, 2.308105707168579, 2.308105707168579], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]