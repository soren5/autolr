[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102887630462646, 1.6038967370986938, 1.1656020879745483, 0.962895393371582, 0.8738788962364197, 0.8192348480224609, 0.7639046311378479, 0.7826893925666809, 0.7031517028808594, 0.6959015130996704, 0.6942090392112732, 0.649158239364624, 0.6607634425163269, 0.633901059627533, 0.6240221858024597, 0.592311441898346, 0.5843620896339417, 0.5784139037132263, 0.560215175151825, 0.5624751448631287, 0.5572508573532104, 0.5483587384223938, 0.5321422815322876, 0.520917534828186, 0.5317213535308838, 0.5155486464500427, 0.5130134224891663, 0.5011420249938965, 0.4950195252895355, 0.49000367522239685, 0.47058573365211487, 0.4836066663265228, 0.4639360308647156, 0.47403737902641296, 0.47064146399497986, 0.45287224650382996, 0.43923884630203247], "accuracy": [0.2716946303844452, 0.5033681392669678, 0.587372899055481, 0.6568484902381897, 0.6905296444892883, 0.703209638595581, 0.722757875919342, 0.7127195596694946, 0.7461365461349487, 0.750231146812439, 0.7436270117759705, 0.7629110813140869, 0.7613261342048645, 0.7619865536689758, 0.7726852297782898, 0.7845727205276489, 0.7868181467056274, 0.7833839654922485, 0.7980451583862305, 0.7989697456359863, 0.7956677079200745, 0.7993659973144531, 0.8033285140991211, 0.8105930685997009, 0.806630551815033, 0.8105930685997009, 0.8136309385299683, 0.8195747137069702, 0.8183859586715698, 0.8187822103500366, 0.8333113193511963, 0.822348415851593, 0.8358209133148193, 0.8236692547798157, 0.8286884427070618, 0.8381983637809753, 0.8360850811004639], "val_loss": [1.9216094017028809, 1.1172319650650024, 0.8894474506378174, 0.7907661199569702, 0.7450445890426636, 0.7191014289855957, 0.7277162075042725, 0.6779212355613708, 0.6269020438194275, 0.625558614730835, 0.6186428070068359, 0.6055555939674377, 0.5761287212371826, 0.586652934551239, 0.5733494758605957, 0.5510507822036743, 0.5614787340164185, 0.5356936454772949, 0.5331583023071289, 0.5451364517211914, 0.5078032612800598, 0.5272298455238342, 0.5055519342422485, 0.49698519706726074, 0.4953397512435913, 0.48495954275131226, 0.48148274421691895, 0.49079379439353943, 0.4797244369983673, 0.4680822789669037, 0.4802057147026062, 0.45740124583244324, 0.46904996037483215, 0.47663819789886475, 0.46272745728492737, 0.45989999175071716, 0.45376497507095337], "val_accuracy": [0.5173333287239075, 0.6309999823570251, 0.6869999766349792, 0.7080000042915344, 0.718999981880188, 0.7143333554267883, 0.7143333554267883, 0.7443333268165588, 0.7573333382606506, 0.7633333206176758, 0.7749999761581421, 0.7713333368301392, 0.7870000004768372, 0.7826666831970215, 0.7886666655540466, 0.7919999957084656, 0.7900000214576721, 0.7990000247955322, 0.796999990940094, 0.7873333096504211, 0.8159999847412109, 0.8046666383743286, 0.8149999976158142, 0.8203333616256714, 0.8193333148956299, 0.8209999799728394, 0.8223333358764648, 0.8176666498184204, 0.8263333439826965, 0.8253333568572998, 0.8176666498184204, 0.8323333263397217, 0.828000009059906, 0.824999988079071, 0.8316666483879089, 0.8289999961853027, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 5, 0], [31, 37], [0, 1], [0], [6], [0], [0, 0, 1, 1], [0, 2], [6, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [10, 39, 50], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 1, 3, 9, 5, 7, 1, 7, 3, 8, 5], [2, 0, 2, 0, 2, 3, 2, 3, 1, 2], [21, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 26, 16, 10, 3, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.multiply(grad, grad)), alpha), tf.math.sqrt(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [982348812255232.0, 1133118538907648.0, 1138254917140480.0, 1267158965288960.0, 1241802954768384.0, 1138540264030208.0], "accuracy": [0.10236428678035736, 0.09536388516426086, 0.09602430462837219, 0.1018359512090683, 0.09998679161071777, 0.10196803510189056], "val_loss": [1165886991892480.0, 1165886991892480.0, 1165886991892480.0, 1165927659864064.0, 1165927659864064.0, 1165927659864064.0], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 0], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [0, 0, 0, 1, 0, 1], [0, 5, 7, 5], [2, 7], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 6, 4, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.square(grad))))", "other_info": {"loss": [2.3099405765533447, 2.3098373413085938, 2.3095552921295166, 2.3101840019226074, 2.3105366230010986, 2.3107404708862305], "accuracy": [0.08889182657003403, 0.0878351628780365, 0.09021265059709549, 0.09166556596755981, 0.09021265059709549, 0.09298639744520187], "val_loss": [2.308297634124756, 2.3082995414733887, 2.3083014488220215, 2.3083033561706543, 2.308305263519287, 2.30830717086792], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]