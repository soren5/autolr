[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2069876194000244, 1.5866755247116089, 1.1433885097503662, 0.9702732563018799, 0.8855303525924683, 0.8306062817573547, 0.7797433733940125, 0.7647910118103027, 0.726177453994751, 0.7096604108810425, 0.6773631572723389, 0.6685457229614258, 0.6480704545974731, 0.6421246528625488, 0.6145498156547546, 0.6309940218925476, 0.6126684546470642, 0.6100786328315735, 0.5686777830123901, 0.5640233159065247, 0.5600817203521729, 0.5437050461769104, 0.5578940510749817, 0.5365517735481262, 0.5322837233543396, 0.5174051523208618, 0.5164159536361694, 0.5069459676742554, 0.5095803141593933, 0.5030032992362976, 0.4878377318382263, 0.4865677058696747, 0.4865913987159729, 0.48019182682037354, 0.4705089032649994, 0.4573920965194702, 0.4698931574821472, 0.46123865246772766, 0.454413503408432, 0.44778943061828613, 0.44579020142555237, 0.44860008358955383, 0.43869727849960327, 0.43210121989250183, 0.4304523766040802, 0.4238433241844177, 0.40605831146240234, 0.4160202741622925, 0.4251929819583893, 0.40606415271759033, 0.409690260887146, 0.4034017026424408, 0.39977729320526123, 0.3953162431716919, 0.40332236886024475], "accuracy": [0.2736758589744568, 0.5175009965896606, 0.5979394912719727, 0.6559239029884338, 0.6787742972373962, 0.6901333928108215, 0.7135120630264282, 0.7144366502761841, 0.7297582626342773, 0.7342491149902344, 0.7478536367416382, 0.7503632307052612, 0.7611940503120422, 0.7510236501693726, 0.7683265209197998, 0.7569673657417297, 0.7666094303131104, 0.7733456492424011, 0.7907806038856506, 0.7893276810646057, 0.7903843522071838, 0.7979130744934082, 0.7956677079200745, 0.8014793395996094, 0.7960638999938965, 0.8034605979919434, 0.8057059645652771, 0.8100647330284119, 0.8129705190658569, 0.8112534880638123, 0.8164047002792358, 0.8157442808151245, 0.8193105459213257, 0.8232730031013489, 0.8252542614936829, 0.8315942287445068, 0.8219521641731262, 0.8294808864593506, 0.8356888294219971, 0.8337075710296631, 0.8367455005645752, 0.8359529972076416, 0.8367455005645752, 0.8376700282096863, 0.8437458872795105, 0.8421608805656433, 0.8544445633888245, 0.8459912538528442, 0.8457271456718445, 0.8451988101005554, 0.8477083444595337, 0.8471800088882446, 0.8529917001724243, 0.8532558679580688, 0.850350022315979], "val_loss": [1.9127575159072876, 1.0946789979934692, 0.906585693359375, 0.7678461670875549, 0.7337751388549805, 0.6957228183746338, 0.7454618215560913, 0.6348304748535156, 0.6266959309577942, 0.6608425974845886, 0.6085456609725952, 0.5875398516654968, 0.5541653633117676, 0.554822564125061, 0.5443755984306335, 0.5318745374679565, 0.5738508701324463, 0.5190020203590393, 0.5036877989768982, 0.5090878009796143, 0.5074586272239685, 0.49044886231422424, 0.5027103424072266, 0.48873600363731384, 0.4701736569404602, 0.4679771363735199, 0.4926743507385254, 0.47528329491615295, 0.46120718121528625, 0.4864768385887146, 0.4531482756137848, 0.4509308636188507, 0.4445561468601227, 0.44309377670288086, 0.4399440586566925, 0.4283815026283264, 0.43504035472869873, 0.43209022283554077, 0.43289315700531006, 0.4195321798324585, 0.4187352657318115, 0.4133510887622833, 0.4480644464492798, 0.4100089967250824, 0.41058337688446045, 0.4109586477279663, 0.4074079692363739, 0.40340447425842285, 0.41505447030067444, 0.4019337594509125, 0.40131208300590515, 0.3973281979560852, 0.3943029046058655, 0.3976477086544037, 0.39524203538894653], "val_accuracy": [0.4950000047683716, 0.6549999713897705, 0.6736666560173035, 0.7223333120346069, 0.7286666631698608, 0.7366666793823242, 0.7066666483879089, 0.7633333206176758, 0.7583333253860474, 0.7366666793823242, 0.7616666555404663, 0.7696666717529297, 0.7913333177566528, 0.7860000133514404, 0.8016666769981384, 0.8033333420753479, 0.7726666927337646, 0.8073333501815796, 0.8153333067893982, 0.8063333630561829, 0.8100000023841858, 0.8169999718666077, 0.8016666769981384, 0.8176666498184204, 0.82833331823349, 0.8223333358764648, 0.8080000281333923, 0.8153333067893982, 0.8320000171661377, 0.8169999718666077, 0.8320000171661377, 0.8320000171661377, 0.8356666564941406, 0.8376666903495789, 0.840666651725769, 0.8446666598320007, 0.8383333086967468, 0.8330000042915344, 0.8446666598320007, 0.8450000286102295, 0.8446666598320007, 0.8496666550636292, 0.8303333520889282, 0.8486666679382324, 0.847000002861023, 0.8426666855812073, 0.8519999980926514, 0.8536666631698608, 0.8516666889190674, 0.8579999804496765, 0.8483333587646484, 0.856333315372467, 0.8543333411216736, 0.8579999804496765, 0.856333315372467]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 1, 5], [1, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 3, 0, 6, 3, 0, 2], [2, 0, 3, 1, 0], [83, 37], [0, 1, 0, 1, 1], [7, 1], [2, 2, 1], [0], [1], [0], [7], [0]], "fitness": -0.4180000126361847, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.subtract(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.979940891265869, 2.3054068088531494, 2.184093475341797, 2.337648868560791, 2.3039350509643555, 2.3033339977264404, 2.3032636642456055, 2.3031246662139893], "accuracy": [0.17395325005054474, 0.1018359512090683, 0.2024831622838974, 0.13234710693359375, 0.09338264167308807, 0.10276053100824356, 0.09721305221319199, 0.09972262382507324], "val_loss": [2.3072190284729004, 2.298771381378174, 2.3780124187469482, 2.3038275241851807, 2.3030576705932617, 2.3027586936950684, 2.3030316829681396, 2.3026862144470215], "val_accuracy": [0.09799999743700027, 0.10199999809265137, 0.40833333134651184, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 5, 3, 1, 3, 5], [0, 3, 1, 0, 2], [46, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [32, 37], [0, 1], [0], [6], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 4, 2, 1, 6, 4], [2, 4, 4, 2, 7, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 4, 3, 1, 0, 2, 1, 1, 0, 13, 7, 6, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(grad, grad), beta), grad)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6, 1, 7, 6, 7], [0, 0, 1, 0, 2, 0, 3, 0, 0, 1], [0, 22, 39, 50, 13, 51], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [7, 2, 0, 6, 1, 8, 2, 8], [2, 2, 2, 0, 0, 3], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 8, 8, 3, 7, 8], [0, 2, 1, 3], [0], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 11, 10, 6, 14, 8, 6, 2, 10, 6, 4, 1, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.divide_no_nan(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(beta, beta), tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.add(tf.math.sqrt(alpha), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 2, 3, 0, 3, 5, 4], [0, 2, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 7, 2, 4, 8, 2], [2, 0, 3, 1, 0, 4], [96, 37], [1, 1], [0], [6], [0], [1], [0], [0], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 13, 7, 6, 2, 13, 7, 6, 2, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.308196544647217, 2.311323881149292, 2.3113648891448975, 2.3103175163269043, 2.3115572929382324, 2.310796022415161], "accuracy": [0.09681680053472519, 0.08809932321310043, 0.08717474341392517, 0.09060890227556229, 0.08572183549404144, 0.08902391046285629], "val_loss": [2.3083620071411133, 2.3083620071411133, 2.3083620071411133, 2.3083620071411133, 2.3083620071411133, 2.3083620071411133], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]