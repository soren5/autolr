[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8368571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212278127670288, 1.6115003824234009, 1.1571263074874878, 0.9667432308197021, 0.8847657442092896, 0.8071882128715515, 0.7883425951004028, 0.7451759576797485, 0.7418243885040283, 0.695574939250946, 0.6600736975669861, 0.6608076095581055, 0.6475034356117249, 0.6344995498657227, 0.6268816590309143, 0.605671763420105, 0.5857688784599304, 0.5861452221870422, 0.569329559803009, 0.5593019127845764, 0.5565173625946045, 0.5523214340209961, 0.5355994701385498, 0.5225465893745422, 0.5241294503211975, 0.5191347599029541, 0.5115242004394531, 0.5106431841850281, 0.4956304728984833, 0.48823145031929016, 0.48204541206359863, 0.4812798798084259, 0.47449174523353577, 0.4691203236579895, 0.46113651990890503, 0.45834264159202576, 0.44005489349365234, 0.4462387263774872, 0.4506974518299103, 0.4365067780017853, 0.42842942476272583, 0.4281945824623108, 0.41873887181282043, 0.4256182014942169, 0.4270702004432678, 0.40810561180114746, 0.4193257689476013, 0.4060909152030945, 0.40247389674186707, 0.39764195680618286, 0.3913578391075134, 0.39092907309532166, 0.3824584484100342], "accuracy": [0.26443007588386536, 0.5094439387321472, 0.5893540978431702, 0.6606789231300354, 0.6793025732040405, 0.7062475085258484, 0.7062475085258484, 0.7272487282752991, 0.7308149337768555, 0.7430986762046814, 0.7629110813140869, 0.7593448758125305, 0.7637035846710205, 0.7697794437408447, 0.7695152759552002, 0.7766477465629578, 0.7812706232070923, 0.7775723338127136, 0.7872143983840942, 0.7891955971717834, 0.7955356240272522, 0.7959318161010742, 0.8076872229576111, 0.8080834746360779, 0.8083476424217224, 0.8096684813499451, 0.8148196935653687, 0.8144234418869019, 0.8170651197433472, 0.8220842480659485, 0.8201030492782593, 0.8272355198860168, 0.8281601071357727, 0.828292191028595, 0.8335754871368408, 0.8310658931732178, 0.8416325449943542, 0.8358209133148193, 0.8347642421722412, 0.8437458872795105, 0.8481045961380005, 0.8451988101005554, 0.8491612672805786, 0.848368763923645, 0.8445383906364441, 0.852859616279602, 0.8453308939933777, 0.8533879518508911, 0.8494254350662231, 0.8537842035293579, 0.8548408150672913, 0.8560295701026917, 0.863558292388916], "val_loss": [1.9258486032485962, 1.1348416805267334, 0.8770504593849182, 0.7930881977081299, 0.7071183919906616, 0.672894299030304, 0.6907707452774048, 0.7207741737365723, 0.6069318652153015, 0.6070602536201477, 0.5818488001823425, 0.5706196427345276, 0.5630573034286499, 0.5505659580230713, 0.5443677306175232, 0.5363771915435791, 0.5360522866249084, 0.5131428837776184, 0.5230202078819275, 0.5152862668037415, 0.5016944408416748, 0.5092259049415588, 0.49231868982315063, 0.4942393898963928, 0.4806056618690491, 0.5059204697608948, 0.5096808075904846, 0.47348055243492126, 0.4701618552207947, 0.4605831801891327, 0.47642529010772705, 0.4657684862613678, 0.4750785231590271, 0.4455675184726715, 0.44573959708213806, 0.44612419605255127, 0.43982091546058655, 0.4435895085334778, 0.4320218563079834, 0.4399624764919281, 0.43451476097106934, 0.4274101257324219, 0.42545822262763977, 0.42704424262046814, 0.4146079123020172, 0.43504032492637634, 0.411846399307251, 0.4141199588775635, 0.4301638901233673, 0.41497454047203064, 0.4086792469024658, 0.4132385551929474, 0.42530709505081177], "val_accuracy": [0.5509999990463257, 0.5943333506584167, 0.70333331823349, 0.7110000252723694, 0.7443333268165588, 0.7523333430290222, 0.7463333606719971, 0.7276666760444641, 0.7816666960716248, 0.7716666460037231, 0.7816666960716248, 0.7870000004768372, 0.79666668176651, 0.7929999828338623, 0.7923333048820496, 0.8023333549499512, 0.8006666898727417, 0.8083333373069763, 0.8090000152587891, 0.8086666464805603, 0.8096666932106018, 0.8063333630561829, 0.8183333277702332, 0.812666654586792, 0.815666675567627, 0.8066666722297668, 0.8023333549499512, 0.8193333148956299, 0.8240000009536743, 0.8266666531562805, 0.8159999847412109, 0.8240000009536743, 0.8199999928474426, 0.8363333344459534, 0.8336666822433472, 0.8336666822433472, 0.8389999866485596, 0.8343333601951599, 0.8403333425521851, 0.8393333554267883, 0.8370000123977661, 0.8426666855812073, 0.843999981880188, 0.8399999737739563, 0.8513333201408386, 0.8413333296775818, 0.8513333201408386, 0.8529999852180481, 0.8383333086967468, 0.847000002861023, 0.8506666421890259, 0.8489999771118164, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [0, 21, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [5], [3], [0], [1], [0], [5], [0]], "fitness": -0.32685714960098267, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2882297039031982, 2.265820026397705, 2.2303884029388428, 2.3397650718688965, 2.3696250915527344, 2.3071939945220947, 2.304408311843872], "accuracy": [0.2071060687303543, 0.19653943181037903, 0.18478403985500336, 0.23074890673160553, 0.2226918488740921, 0.10117553919553757, 0.09853387624025345], "val_loss": [2.273312568664551, 1.8965071439743042, 2.087864875793457, 2.263843059539795, 2.3117682933807373, 2.304009199142456, 2.302987575531006], "val_accuracy": [0.24899999797344208, 0.33000001311302185, 0.2763333320617676, 0.16300000250339508, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 6, 1, 3, 5, 7, 0, 1, 7, 4, 6, 0, 6], [1, 2, 1, 0, 2, 3, 0, 3, 1, 1, 1], [36, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 37], [0, 1, 1], [7], [6, 3], [0], [1], [0], [5], [0]], "fitness": -0.12771429121494293, "mapping_values": [1, 25, 14, 11, 2, 2, 1, 1, 0, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.multiply(grad, tf.math.square(alpha))), tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), alpha), alpha))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.495390892028809, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20023775100708008, 0.107647605240345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [11.113142967224121, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1316666603088379, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 1, 3, 4, 4, 8, 0, 5, 2, 8, 4, 8, 5, 2], [0, 0, 1, 0, 2, 0, 0, 3, 0, 0, 3, 0], [0, 39, 39, 97, 27, 1, 71, 33], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 1], [2, 3, 2, 4, 0, 2], [16, 37], [0, 0, 0, 1], [0, 5, 5], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 19, 12, 8, 14, 8, 6, 1, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.sqrt(grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(tf.math.pow(grad, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), grad)))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, beta))), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]