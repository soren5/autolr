[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8057143092155457, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2123849391937256, 1.6026393175125122, 1.1532841920852661, 0.9707549214363098, 0.8923295736312866, 0.8313330411911011, 0.7792364358901978, 0.7438094615936279, 0.7156316041946411, 0.6805058121681213, 0.7099978923797607, 0.6531987190246582, 0.6494325995445251, 0.6166710257530212, 0.6256177425384521, 0.6122835278511047, 0.58548504114151, 0.5914050936698914, 0.5687754154205322, 0.5829241871833801, 0.550832986831665, 0.5564591288566589, 0.5267503261566162, 0.5323033928871155], "accuracy": [0.2712983787059784, 0.5127459764480591, 0.5930524468421936, 0.6470743417739868, 0.6777176260948181, 0.6984546184539795, 0.7125874757766724, 0.7326641082763672, 0.7309470176696777, 0.7467969655990601, 0.7383436560630798, 0.7580240368843079, 0.7553823590278625, 0.7703077793121338, 0.7647602558135986, 0.7693831920623779, 0.7833839654922485, 0.7734777331352234, 0.7932901978492737, 0.7821952104568481, 0.7947431206703186, 0.7895918488502502, 0.8030643463134766, 0.8014793395996094], "val_loss": [1.9275778532028198, 1.0860825777053833, 0.9281502962112427, 0.8483079671859741, 0.7084423303604126, 0.7224679589271545, 0.6598697304725647, 0.6558659672737122, 0.6134549975395203, 0.5979338884353638, 0.594873309135437, 0.5667000412940979, 0.5893672704696655, 0.5470321178436279, 0.5501058101654053, 0.5359288454055786, 0.5246082544326782, 0.5205504298210144, 0.5060044527053833, 0.5174221396446228, 0.5188881158828735, 0.5036923885345459, 0.4926087260246277, 0.4815833270549774], "val_accuracy": [0.5903333425521851, 0.675000011920929, 0.6743333339691162, 0.687666654586792, 0.7323333621025085, 0.7443333268165588, 0.7586666941642761, 0.7596666812896729, 0.7776666879653931, 0.7746666669845581, 0.7676666378974915, 0.7919999957084656, 0.7666666507720947, 0.7993333339691162, 0.7933333516120911, 0.8050000071525574, 0.8023333549499512, 0.812333345413208, 0.8243333101272583, 0.8066666722297668, 0.8073333501815796, 0.8163333535194397, 0.8203333616256714, 0.8226666450500488]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 95], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 4, 5, 2, 4, 7, 7, 4, 5, 7, 9, 1, 5], [5, 0, 3, 2, 0, 0, 5, 4, 1, 5, 2, 4], [16, 37, 13, 32], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 31, 19, 12, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), beta), tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, grad), tf.math.square(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.square(grad), beta)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [2, 2, 3, 1, 3, 8, 9, 6, 5, 5], [0, 0, 3, 1, 2, 3], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 16, 10, 6, 3, 2, 1, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.divide_no_nan(tf.math.square(tf.math.square(grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3094470500946045, 2.309598922729492, 2.310457468032837, 2.310058355331421, 2.309845447540283, 2.3106470108032227], "accuracy": [0.09417514503002167, 0.09153348207473755, 0.08730682730674744, 0.09100515395402908, 0.09074098616838455, 0.0944393053650856], "val_loss": [2.3073740005493164, 2.3073740005493164, 2.3073740005493164, 2.3073740005493164, 2.3073740005493164, 2.3073740005493164], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 93], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 3], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107988834381104, 2.309241533279419, 2.3107218742370605, 2.309892416000366, 2.3101181983947754, 2.309534788131714], "accuracy": [0.09338264167308807, 0.09536388516426086, 0.09338264167308807, 0.0874389111995697, 0.09034473448991776, 0.09668471664190292], "val_loss": [2.308795213699341, 2.308795213699341, 2.308795213699341, 2.308795213699341, 2.308795213699341, 2.308795213699341], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 0, 1, 0], [58, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309354543685913, 2.310405969619751, 2.309948205947876, 2.3101754188537598, 2.3095037937164307, 2.3095171451568604], "accuracy": [0.09245806187391281, 0.09430722147226334, 0.09457138925790787, 0.09549596905708313, 0.09153348207473755, 0.09047681838274002], "val_loss": [2.308767557144165, 2.308767557144165, 2.308767557144165, 2.308767557144165, 2.308767557144165, 2.308767557144165], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]