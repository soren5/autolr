[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110955715179443, 1.6049878597259521, 1.165558934211731, 0.974539577960968, 0.882786214351654, 0.8328396677970886, 0.7928833961486816, 0.7445363998413086, 0.7302704453468323, 0.712288498878479, 0.6801537871360779, 0.6660913825035095, 0.6504157185554504, 0.6215817332267761, 0.625461995601654, 0.6194081902503967, 0.6114042401313782, 0.5902926921844482, 0.5613750219345093, 0.5599541068077087, 0.5535491704940796, 0.5410662293434143, 0.5402415990829468, 0.545261025428772, 0.5193328857421875, 0.5199272632598877, 0.5046807527542114, 0.5106698870658875, 0.5034990310668945, 0.4881283938884735, 0.48356300592422485, 0.48136991262435913, 0.47171443700790405, 0.4669339954853058, 0.4648299515247345, 0.4676055610179901, 0.4522029757499695, 0.4467654228210449, 0.4401528835296631, 0.43784940242767334, 0.44561633467674255, 0.43972650170326233, 0.43029141426086426, 0.428347110748291, 0.4209880530834198, 0.42388275265693665, 0.40824049711227417, 0.4071303904056549, 0.41003334522247314, 0.40090683102607727, 0.39788109064102173], "accuracy": [0.26918503642082214, 0.49966979026794434, 0.587372899055481, 0.6535464525222778, 0.678642213344574, 0.7042662501335144, 0.7042662501335144, 0.7235503792762756, 0.7323999404907227, 0.7383436560630798, 0.7534011602401733, 0.759080708026886, 0.763439416885376, 0.7724210619926453, 0.7675340175628662, 0.7677981853485107, 0.7778365015983582, 0.7868181467056274, 0.800818920135498, 0.7895918488502502, 0.7992339134216309, 0.8076872229576111, 0.8020076751708984, 0.805177628993988, 0.8152159452438354, 0.8142913579940796, 0.817989706993103, 0.8183859586715698, 0.8142913579940796, 0.8198388814926147, 0.8259146809577942, 0.8293488025665283, 0.8314621448516846, 0.8354246616363525, 0.8302733898162842, 0.8310658931732178, 0.8417646288871765, 0.8396512866020203, 0.8433496356010437, 0.8408400416374207, 0.837141752243042, 0.842028796672821, 0.8462554216384888, 0.8461233377456665, 0.8491612672805786, 0.8487650156021118, 0.8508783578872681, 0.8553691506385803, 0.8556333184242249, 0.8595958352088928, 0.8615770936012268], "val_loss": [1.9255634546279907, 1.1239418983459473, 0.8845382332801819, 0.7874602675437927, 0.71915602684021, 0.6989597082138062, 0.6783531308174133, 0.66066575050354, 0.625133752822876, 0.614446222782135, 0.5850068926811218, 0.6049139499664307, 0.5792623162269592, 0.6000843644142151, 0.5391655564308167, 0.5717541575431824, 0.5278041958808899, 0.5218605399131775, 0.5338976383209229, 0.5036197304725647, 0.4936225712299347, 0.48403793573379517, 0.48920369148254395, 0.49620264768600464, 0.47227856516838074, 0.47481396794319153, 0.47639989852905273, 0.4636613428592682, 0.46738263964653015, 0.46168336272239685, 0.461238294839859, 0.45399612188339233, 0.4486556351184845, 0.43740618228912354, 0.4408871531486511, 0.4282541871070862, 0.42017969489097595, 0.4222550392150879, 0.42821577191352844, 0.43392467498779297, 0.4202808141708374, 0.4160204231739044, 0.4090474545955658, 0.4091252088546753, 0.4090128540992737, 0.4054606258869171, 0.4003527760505676, 0.41164350509643555, 0.40297770500183105, 0.3919476270675659, 0.40422046184539795], "val_accuracy": [0.5413333177566528, 0.5929999947547913, 0.6940000057220459, 0.7023333311080933, 0.7326666712760925, 0.7443333268165588, 0.7523333430290222, 0.7360000014305115, 0.7630000114440918, 0.7720000147819519, 0.781000018119812, 0.7649999856948853, 0.7766666412353516, 0.7603333592414856, 0.7979999780654907, 0.7866666913032532, 0.7990000247955322, 0.8033333420753479, 0.7826666831970215, 0.8063333630561829, 0.8206666707992554, 0.8186666369438171, 0.8176666498184204, 0.8083333373069763, 0.8240000009536743, 0.8199999928474426, 0.8206666707992554, 0.8253333568572998, 0.8209999799728394, 0.8276666402816772, 0.828000009059906, 0.8296666741371155, 0.8309999704360962, 0.8363333344459534, 0.8346666693687439, 0.8363333344459534, 0.8413333296775818, 0.8403333425521851, 0.8353333473205566, 0.8333333134651184, 0.8376666903495789, 0.8446666598320007, 0.8443333506584167, 0.8443333506584167, 0.8443333506584167, 0.8483333587646484, 0.8443333506584167, 0.8420000076293945, 0.8473333120346069, 0.8479999899864197, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 2, 3, 1, 3, 5, 5, 8, 8], [0, 0, 1, 0, 2, 3], [58, 39, 95], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 37, 65], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 3, 12, 7, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.square(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.sqrt(tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 4, 3, 1, 3, 5, 0, 7, 2, 7, 9], [0, 0, 1, 0, 2, 3, 0], [0, 39, 81, 24, 63], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [9, 9, 9, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [0], [6], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 5, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), grad), grad)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 2, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 6, 2, 7], [2, 0, 0, 1, 0, 4, 5], [16, 37, 61], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 15, 8, 7, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11028926074504852, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]