[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8059999942779541, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2078824043273926, 1.6083972454071045, 1.1670889854431152, 0.9906107783317566, 0.9298813939094543, 0.8403618931770325, 0.7899256944656372, 0.8115488290786743, 0.7366688847541809, 0.710105836391449, 0.6960563659667969, 0.6867454648017883, 0.6603270173072815, 0.6389599442481995, 0.6534348130226135, 0.6042405366897583, 0.6454522609710693, 0.6005575060844421, 0.5904780626296997, 0.5938838720321655, 0.5604925751686096, 0.5628877282142639, 0.5520887970924377, 0.5427115559577942, 0.5564004778862, 0.5333690047264099, 0.5286720395088196, 0.5254639387130737, 0.5065641403198242, 0.5109640955924988, 0.50050288438797, 0.49902161955833435, 0.49730315804481506, 0.47742462158203125, 0.4755108952522278, 0.4679434299468994, 0.4706057906150818, 0.46004587411880493, 0.4550416171550751, 0.4678973853588104, 0.4438408613204956, 0.44678887724876404, 0.44543057680130005, 0.4353480339050293, 0.43349146842956543, 0.424223929643631, 0.42515653371810913], "accuracy": [0.2736758589744568, 0.5046889185905457, 0.5906749367713928, 0.6498481035232544, 0.6680755615234375, 0.693831741809845, 0.7092854380607605, 0.6948884129524231, 0.7298903465270996, 0.7376832365989685, 0.7427024245262146, 0.7490423917770386, 0.7564390301704407, 0.763439416885376, 0.7549861073493958, 0.77677983045578, 0.7640998363494873, 0.7732135653495789, 0.7821952104568481, 0.7798177003860474, 0.7895918488502502, 0.7885351777076721, 0.7955356240272522, 0.800818920135498, 0.7944789528846741, 0.8041210174560547, 0.7985734939575195, 0.8038568496704102, 0.8124422430992126, 0.8120459914207458, 0.8166688680648804, 0.8149517774581909, 0.8156121969223022, 0.8253863453865051, 0.8264430165290833, 0.83119797706604, 0.8267071843147278, 0.8329150676727295, 0.830669641494751, 0.8248580098152161, 0.8388587832450867, 0.8367455005645752, 0.8356888294219971, 0.8384625315666199, 0.8374059200286865, 0.846387505531311, 0.8429533839225769], "val_loss": [1.911017894744873, 1.1163434982299805, 0.9048980474472046, 0.8483663201332092, 0.7552957534790039, 0.6871482729911804, 0.6987576484680176, 0.634893000125885, 0.6202892065048218, 0.6066954135894775, 0.6122111082077026, 0.6219905018806458, 0.5804015398025513, 0.557392418384552, 0.5362167954444885, 0.5815901160240173, 0.5441707968711853, 0.5313515663146973, 0.5197792053222656, 0.5383132100105286, 0.5054932832717896, 0.5042588114738464, 0.5035189986228943, 0.5228650569915771, 0.48686352372169495, 0.4742887020111084, 0.47845983505249023, 0.494271844625473, 0.4636886715888977, 0.4519122838973999, 0.4508722722530365, 0.45744243264198303, 0.4533992409706116, 0.4488515555858612, 0.45173510909080505, 0.4429081976413727, 0.42813125252723694, 0.44517603516578674, 0.46821147203445435, 0.4376090466976166, 0.4377950429916382, 0.4211079180240631, 0.43646499514579773, 0.4273422062397003, 0.4398079514503479, 0.4242222011089325, 0.42681294679641724], "val_accuracy": [0.5353333353996277, 0.6363333463668823, 0.6786666512489319, 0.6853333115577698, 0.7353333234786987, 0.7293333411216736, 0.7160000205039978, 0.7580000162124634, 0.7616666555404663, 0.7643333077430725, 0.7766666412353516, 0.7670000195503235, 0.7823333144187927, 0.7816666960716248, 0.8023333549499512, 0.7856666445732117, 0.7950000166893005, 0.8080000281333923, 0.8069999814033508, 0.7863333225250244, 0.8159999847412109, 0.8173333406448364, 0.8146666884422302, 0.8090000152587891, 0.8320000171661377, 0.8259999752044678, 0.8293333053588867, 0.8136666417121887, 0.8373333215713501, 0.8379999995231628, 0.8326666951179504, 0.8383333086967468, 0.8366666436195374, 0.847000002861023, 0.8366666436195374, 0.8343333601951599, 0.8510000109672546, 0.8393333554267883, 0.8216666579246521, 0.843666672706604, 0.8353333473205566, 0.8543333411216736, 0.8399999737739563, 0.8476666808128357, 0.8420000076293945, 0.8500000238418579, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 4, 6, 3, 8, 2], [2, 0, 3, 1, 0, 5], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 12, 6, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 0, 9], [0, 0, 1, 0, 2], [0, 39, 39, 35], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 37], [0, 1], [0], [7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 4, 8, 4, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 6, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 12, 7, 5, 2, 11, 7, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3084747791290283, 2.310014486312866, 2.310370445251465, 2.308584451675415, 2.3094584941864014, 2.309687852859497], "accuracy": [0.09457138925790787, 0.09377889335155487, 0.09457138925790787, 0.0956280529499054, 0.08889182657003403, 0.09655263274908066], "val_loss": [2.308413505554199, 2.308413505554199, 2.308413505554199, 2.308413505554199, 2.308413505554199, 2.308413505554199], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 6, 2, 8, 1, 5, 7, 9, 4, 4, 8, 4, 0, 1, 4, 7, 5, 3, 8, 7, 4, 0, 9, 9, 7, 5, 6, 9, 7, 5, 3], [2, 0, 3, 1, 0, 5, 3, 3, 1, 5, 2, 0, 1, 2, 2, 2, 2], [16, 1, 79, 79, 68, 52, 11], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 3, 52, 35, 17, 7, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), alpha)), tf.math.subtract(tf.math.square(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.negative(grad), grad)), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad))), beta)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, beta)))))), tf.math.square(tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.multiply(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310730218887329, 2.30971097946167, 2.3100268840789795, 2.3091320991516113, 2.3111844062805176, 2.309964418411255], "accuracy": [0.08757099509239197, 0.09034473448991776, 0.08994849026203156, 0.1022322028875351, 0.08677849918603897, 0.08955223858356476], "val_loss": [2.308502197265625, 2.308502197265625, 2.308502197265625, 2.308502197265625, 2.308502197265625, 2.308502197265625], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]