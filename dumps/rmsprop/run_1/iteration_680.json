[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210256338119507, 1.5978277921676636, 1.1555248498916626, 0.9626250863075256, 0.8984621167182922, 0.8301160335540771, 0.7662199139595032, 0.741399884223938, 0.7435934543609619, 0.6935964822769165, 0.69173663854599, 0.6705434918403625, 0.6370190382003784, 0.6408690214157104, 0.6313132047653198, 0.600777804851532, 0.5944550037384033, 0.589052140712738, 0.572498083114624, 0.5478100776672363, 0.5589906573295593, 0.5376123189926147, 0.5393043756484985, 0.5319774150848389, 0.5336987376213074, 0.501752495765686, 0.5169496536254883, 0.5137125253677368, 0.48260223865509033, 0.4773247241973877, 0.48212772607803345, 0.4805792272090912, 0.4672292470932007, 0.48157548904418945, 0.45790112018585205, 0.4499453008174896, 0.45110851526260376, 0.4379923641681671, 0.4415413439273834, 0.43422043323516846, 0.4377574026584625], "accuracy": [0.2731475234031677, 0.5172368288040161, 0.591731607913971, 0.6581693291664124, 0.6826046705245972, 0.7017567157745361, 0.7152291536331177, 0.7306828498840332, 0.7255316376686096, 0.743891179561615, 0.7429665923118591, 0.7490423917770386, 0.7660810947418213, 0.76106196641922, 0.7651565074920654, 0.7802139520645142, 0.7799497842788696, 0.7857614755630493, 0.785101056098938, 0.7947431206703186, 0.7866860628128052, 0.8087438941001892, 0.7965922355651855, 0.8055738806724548, 0.807158887386322, 0.8145555257797241, 0.8061022162437439, 0.8115176558494568, 0.8222163319587708, 0.8201030492782593, 0.8206313848495483, 0.8264430165290833, 0.8278959393501282, 0.822348415851593, 0.8317263126373291, 0.8370096683502197, 0.8358209133148193, 0.839519202709198, 0.8385946154594421, 0.8400475382804871, 0.845859169960022], "val_loss": [1.9222787618637085, 1.1258844137191772, 0.9183805584907532, 0.772068440914154, 0.7628471851348877, 0.6959142088890076, 0.6833222508430481, 0.6389133930206299, 0.6563016176223755, 0.6894018650054932, 0.5919474363327026, 0.591551661491394, 0.5689523220062256, 0.600455641746521, 0.5646396279335022, 0.5742976665496826, 0.5623721480369568, 0.5329607129096985, 0.5322760939598083, 0.5311212539672852, 0.5144253969192505, 0.5072924494743347, 0.544109046459198, 0.5334495306015015, 0.49446216225624084, 0.48876240849494934, 0.5288305878639221, 0.47953149676322937, 0.47204169631004333, 0.4831124544143677, 0.46977749466896057, 0.46760526299476624, 0.4729430675506592, 0.4597263038158417, 0.4529532194137573, 0.44770392775535583, 0.45499926805496216, 0.4475965201854706, 0.4498957097530365, 0.4470572769641876, 0.44095081090927124], "val_accuracy": [0.5353333353996277, 0.5843333601951599, 0.671999990940094, 0.7236666679382324, 0.718999981880188, 0.7493333220481873, 0.75, 0.7603333592414856, 0.7580000162124634, 0.7323333621025085, 0.7823333144187927, 0.7839999794960022, 0.7933333516120911, 0.7796666622161865, 0.7986666560173035, 0.7876666784286499, 0.793666660785675, 0.7979999780654907, 0.8029999732971191, 0.8116666674613953, 0.8109999895095825, 0.8096666932106018, 0.7826666831970215, 0.809333324432373, 0.8216666579246521, 0.8203333616256714, 0.8083333373069763, 0.8323333263397217, 0.8246666789054871, 0.8186666369438171, 0.824999988079071, 0.8373333215713501, 0.8213333487510681, 0.8276666402816772, 0.8360000252723694, 0.8420000076293945, 0.8413333296775818, 0.8389999866485596, 0.8296666741371155, 0.8383333086967468, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 5, 3, 0, 4, 3, 5, 3, 2, 1, 6, 2, 9, 6], [6, 3, 4, 4, 7, 3, 0, 0, 7, 2], [0, 14, 32], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 25, 15, 10, 3, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(grad, tf.math.square(tf.math.multiply(tf.math.negative(tf.math.pow(sigma, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(grad, grad), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)))), beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30377459526062, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 2, 3, 1, 3, 5, 2, 9, 2, 6, 0, 4, 6, 6, 9, 4, 0, 2, 6, 7, 1, 6, 1, 7, 8, 0, 6, 9, 8, 5, 6], [1, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 3, 0, 2, 0, 2, 0, 3, 0], [0, 37, 39, 73, 36, 67, 61, 92], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [5, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 31, 19, 8, 8, 4, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, alpha), tf.math.square(alpha)), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.pow(alpha, tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(alpha, grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), tf.math.square(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [603342241792000.0, 2.5267234620309504e+16, 1.890355638299525e+17, 7.317089079273718e+17, 2.0103349655977329e+18, 4.249573133813547e+18], "accuracy": [0.09932637959718704, 0.10579843819141388, 0.09681680053472519, 0.1022322028875351, 0.10157178342342377, 0.0948355570435524], "val_loss": [5104564336328704.0, 8.261739820036915e+16, 4.1985985377992704e+17, 1.3295168159230198e+18, 3.2496052415024333e+18, 6.74355110375483e+18], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 2, 4, 1, 3, 5, 2, 5, 2, 2, 4, 2, 0, 9], [3, 0, 1, 0, 2, 3, 0, 0, 1], [0, 39, 39, 14, 40], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 8, 0, 2, 3, 1, 2], [2, 0, 3, 1, 0], [65, 37], [0, 0, 1, 1], [0, 6], [6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 14, 9, 5, 11, 6, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(tf.math.add(grad, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.subtract(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 1, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [2], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 3, 5, 6, 2, 6, 9], [2, 2, 3, 0], [0, 82]], "fitness": -0.08971428871154785, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0, 11, 7, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), sigma))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309474229812622, 2.310054063796997, 2.310253858566284, 2.309929132461548, 2.3099660873413086, 2.3093395233154297], "accuracy": [0.0944393053650856, 0.09206181764602661, 0.09034473448991776, 0.09457138925790787, 0.09628847241401672, 0.1010434553027153], "val_loss": [2.3081912994384766, 2.3081912994384766, 2.3081912994384766, 2.3081912994384766, 2.3081912994384766, 2.3081912994384766], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]