[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8054285645484924, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210845708847046, 1.6100553274154663, 1.1548750400543213, 0.9930325746536255, 0.8935153484344482, 0.8590697646141052, 0.7926012873649597, 0.7536894679069519, 0.7390413880348206, 0.7230854034423828, 0.6920292377471924, 0.6750189065933228, 0.6767632365226746, 0.6505031585693359, 0.6458432078361511, 0.6121996641159058, 0.6195070147514343, 0.5902175903320312, 0.582687497138977, 0.5751987099647522, 0.5666729211807251, 0.5667819380760193, 0.5496426820755005, 0.5431551337242126, 0.5246123671531677, 0.5195273160934448, 0.5282847285270691, 0.5107702016830444, 0.5057944059371948, 0.49340882897377014, 0.5020133852958679, 0.48118528723716736, 0.4776949882507324, 0.471686452627182, 0.4810506999492645, 0.46097907423973083, 0.45770570635795593, 0.4639490246772766, 0.45628923177719116, 0.4443291425704956, 0.4377392828464508, 0.4384611248970032, 0.43904080986976624, 0.42886319756507874, 0.4199179410934448, 0.4202481508255005, 0.4175116717815399, 0.4130191206932068, 0.4122440814971924, 0.41122546792030334, 0.4007951319217682, 0.4030025005340576, 0.3911202549934387, 0.38794195652008057, 0.3888895809650421, 0.3930259943008423, 0.3897935152053833, 0.3813728392124176, 0.3712015151977539, 0.3775474727153778, 0.3718567192554474, 0.36344388127326965, 0.36394599080085754], "accuracy": [0.26403382420539856, 0.5023114681243896, 0.5938449501991272, 0.6469422578811646, 0.6803592443466187, 0.6872276067733765, 0.711530864238739, 0.7223616242408752, 0.7243428826332092, 0.7337207794189453, 0.7481178045272827, 0.7541936039924622, 0.746268630027771, 0.7580240368843079, 0.7614582180976868, 0.7703077793121338, 0.7676661014556885, 0.7817989587783813, 0.7861577272415161, 0.7909126877784729, 0.7886672616004944, 0.7943468689918518, 0.8012151718139648, 0.8014793395996094, 0.8082155585289001, 0.8095363974571228, 0.8084797263145447, 0.8187822103500366, 0.8150838613510132, 0.8251221776008606, 0.8149517774581909, 0.8277638554573059, 0.8272355198860168, 0.8321225643157959, 0.8256505131721497, 0.8356888294219971, 0.8404437899589539, 0.8310658931732178, 0.8325188159942627, 0.8412362933158875, 0.8421608805656433, 0.8441421389579773, 0.844010055065155, 0.8461233377456665, 0.8451988101005554, 0.8524633646011353, 0.8512746095657349, 0.8490291833877563, 0.8518029451370239, 0.8551049828529358, 0.8553691506385803, 0.8541803956031799, 0.8619733452796936, 0.8598600029945374, 0.8560295701026917, 0.8582749962806702, 0.8622375130653381, 0.8626337051391602, 0.8671245574951172, 0.8625016212463379, 0.8665962219238281, 0.8692378997802734, 0.8730682730674744], "val_loss": [1.9178636074066162, 1.0819549560546875, 0.905686616897583, 0.7831741571426392, 0.7706802487373352, 0.6742573380470276, 0.731413722038269, 0.6273277401924133, 0.6170986294746399, 0.6170272827148438, 0.5897020101547241, 0.5689500570297241, 0.5972288250923157, 0.6014941334724426, 0.546420156955719, 0.5246251225471497, 0.5206422805786133, 0.5330521464347839, 0.513635516166687, 0.5179705619812012, 0.4948546588420868, 0.4899379014968872, 0.48779186606407166, 0.4847275912761688, 0.484470933675766, 0.4811270236968994, 0.4764416515827179, 0.47738760709762573, 0.4586562216281891, 0.4530969262123108, 0.4713535010814667, 0.47436705231666565, 0.44505587220191956, 0.45679771900177, 0.44761645793914795, 0.4298577904701233, 0.43839550018310547, 0.4406813085079193, 0.43860533833503723, 0.42457133531570435, 0.4256265163421631, 0.4346022605895996, 0.445809006690979, 0.41606375575065613, 0.4279448390007019, 0.4167934060096741, 0.4242894649505615, 0.4093480110168457, 0.41577044129371643, 0.40283203125, 0.41014111042022705, 0.40918147563934326, 0.4023449718952179, 0.3994309902191162, 0.40647920966148376, 0.4023844301700592, 0.39768314361572266, 0.39201444387435913, 0.3913653492927551, 0.4067182242870331, 0.3877817690372467, 0.3860347867012024, 0.38170313835144043], "val_accuracy": [0.5370000004768372, 0.6759999990463257, 0.6836666464805603, 0.7223333120346069, 0.7076666951179504, 0.7379999756813049, 0.7123333215713501, 0.7586666941642761, 0.7716666460037231, 0.7620000243186951, 0.7833333611488342, 0.7960000038146973, 0.7736666798591614, 0.7716666460037231, 0.7886666655540466, 0.7923333048820496, 0.79666668176651, 0.7943333387374878, 0.8050000071525574, 0.8040000200271606, 0.8180000185966492, 0.8176666498184204, 0.8220000267028809, 0.8223333358764648, 0.8163333535194397, 0.828000009059906, 0.8199999928474426, 0.8259999752044678, 0.8316666483879089, 0.8339999914169312, 0.8289999961853027, 0.8136666417121887, 0.8386666774749756, 0.8236666917800903, 0.8320000171661377, 0.8420000076293945, 0.8396666646003723, 0.8333333134651184, 0.8429999947547913, 0.8476666808128357, 0.843666672706604, 0.8423333168029785, 0.831333339214325, 0.8489999771118164, 0.8453333377838135, 0.8506666421890259, 0.8426666855812073, 0.8539999723434448, 0.8453333377838135, 0.8516666889190674, 0.8476666808128357, 0.8543333411216736, 0.8569999933242798, 0.8510000109672546, 0.8483333587646484, 0.8550000190734863, 0.8526666760444641, 0.8606666922569275, 0.8553333282470703, 0.8523333072662354, 0.8579999804496765, 0.859000027179718, 0.859000027179718]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 3, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030569553375244, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 1, 3, 5], [2, 0, 0, 2, 0], [0, 63, 39], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 5, 0, 6, 3, 8, 2], [3, 0, 3, 1, 2], [16, 1], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [91, 39, 48], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 7, 6, 7, 0, 7, 0, 2, 7, 7, 1, 8, 8, 6, 2, 7, 1, 3, 8, 8, 5, 7, 3, 6, 8, 1, 6, 7], [2, 0, 4, 5, 5, 7, 7, 7, 4, 4, 6, 2, 1, 6, 2, 5, 7, 6, 7, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 7, 4, 3, 1, 2, 1, 1, 1, 48, 28, 20, 1], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.sqrt(grad))), tf.math.sqrt(grad)))), tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.subtract(grad, grad), tf.math.multiply(tf.math.sqrt(grad), grad)), tf.math.sqrt(grad))))), tf.math.square(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, alpha)), tf.math.divide_no_nan(grad, beta)), tf.math.add(grad, grad)), grad))), grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [29, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 2, 6, 3, 8, 6, 6, 3, 4, 1, 4, 5, 0, 7, 1, 9, 9, 8, 4, 4, 5], [1, 0, 3, 1, 2, 3, 3, 0, 5, 4, 2, 5, 0], [16, 1, 54, 51, 59], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 35, 22, 13, 5, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.square(tf.math.negative(beta)), tf.math.add(tf.math.subtract(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.pow(grad, beta))), tf.math.square(grad)))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]