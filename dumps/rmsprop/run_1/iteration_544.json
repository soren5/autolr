[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210481643676758, 1.620591163635254, 1.162287712097168, 1.0016615390777588, 0.8957478404045105, 0.8352256417274475, 0.8091237545013428, 0.7726448774337769, 0.7360756397247314, 0.714449942111969, 0.7210402488708496, 0.674345850944519, 0.6565026044845581, 0.6454194188117981, 0.6367260217666626, 0.624249279499054, 0.6097791194915771, 0.6067612171173096, 0.5940581560134888, 0.5641544461250305, 0.558506965637207, 0.561025083065033, 0.5350726246833801, 0.5458226799964905, 0.5406137108802795, 0.5193802118301392, 0.5127655863761902, 0.5260237455368042, 0.4963685870170593, 0.5072957277297974, 0.5090877413749695, 0.48529937863349915, 0.47474178671836853, 0.476879745721817, 0.4730623662471771, 0.4690306782722473, 0.4680714011192322, 0.4563366174697876, 0.46088823676109314, 0.45787549018859863, 0.45690709352493286, 0.4487900137901306, 0.44549256563186646, 0.4447394013404846, 0.4385985732078552, 0.42821717262268066], "accuracy": [0.2690529525279999, 0.5020473003387451, 0.5970149040222168, 0.6446968913078308, 0.6812838315963745, 0.6973979473114014, 0.7047945857048035, 0.7145687341690063, 0.7289658188819885, 0.7421740889549255, 0.7313432693481445, 0.7479857206344604, 0.7586844563484192, 0.763439416885376, 0.7625148296356201, 0.7703077793121338, 0.7737419009208679, 0.7761194109916687, 0.7802139520645142, 0.7954035401344299, 0.7921014428138733, 0.7926297783851624, 0.805177628993988, 0.8038568496704102, 0.8006868362426758, 0.8150838613510132, 0.8129705190658569, 0.8043851256370544, 0.8212917447090149, 0.8125742673873901, 0.8120459914207458, 0.8234050869941711, 0.8301413059234619, 0.826310932636261, 0.8309338092803955, 0.8286884427070618, 0.8305375576019287, 0.8334434032440186, 0.826310932636261, 0.835160493850708, 0.8304054737091064, 0.8315942287445068, 0.8407079577445984, 0.8364813327789307, 0.8418967127799988, 0.8428213000297546], "val_loss": [1.916103720664978, 1.0725339651107788, 0.8791230320930481, 0.7600252032279968, 0.7106554508209229, 0.7007394433021545, 0.6475645303726196, 0.6217225193977356, 0.608806848526001, 0.6374180316925049, 0.5880982875823975, 0.5716837048530579, 0.5554481744766235, 0.5644978880882263, 0.5499951839447021, 0.5302099585533142, 0.5382168889045715, 0.5365983843803406, 0.4947252869606018, 0.4941246807575226, 0.5055943727493286, 0.4728577435016632, 0.5139499306678772, 0.46502962708473206, 0.4571984112262726, 0.45050519704818726, 0.455878347158432, 0.4466809034347534, 0.44597071409225464, 0.4384916126728058, 0.44835665822029114, 0.43703198432922363, 0.441830575466156, 0.4442865252494812, 0.4481963813304901, 0.45586109161376953, 0.4190572202205658, 0.4404301643371582, 0.4222300350666046, 0.42155933380126953, 0.4029819071292877, 0.4108628034591675, 0.4031267762184143, 0.4189907908439636, 0.412324458360672, 0.40632304549217224], "val_accuracy": [0.5606666803359985, 0.6883333325386047, 0.6823333501815796, 0.7226666808128357, 0.7363333106040955, 0.7403333187103271, 0.7586666941642761, 0.765666663646698, 0.7699999809265137, 0.7573333382606506, 0.7833333611488342, 0.7926666736602783, 0.7873333096504211, 0.784333348274231, 0.7946666479110718, 0.8036666512489319, 0.8023333549499512, 0.7850000262260437, 0.8256666660308838, 0.8073333501815796, 0.8063333630561829, 0.8389999866485596, 0.8003333210945129, 0.8216666579246521, 0.8363333344459534, 0.8396666646003723, 0.8306666612625122, 0.8356666564941406, 0.8366666436195374, 0.8423333168029785, 0.8383333086967468, 0.843999981880188, 0.8293333053588867, 0.8346666693687439, 0.8333333134651184, 0.831333339214325, 0.8486666679382324, 0.8379999995231628, 0.8533333539962769, 0.8426666855812073, 0.859666645526886, 0.8516666889190674, 0.8553333282470703, 0.846666693687439, 0.8506666421890259, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 18], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0], [0, 9], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 12, 7, 5, 2, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 6], [2, 0, 3, 1, 0], [13, 37], [0, 1], [0], [0], [51], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 4, 4, 2, 2, 3, 5, 7, 3, 5, 2, 8, 8, 0, 2, 5, 3, 8, 8, 2, 2, 7, 7, 5, 7, 4, 3, 9], [2, 7, 0, 5, 6, 6, 6, 0, 1, 4, 3, 2, 4, 4, 5, 0, 1], [0, 14, 75, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 45, 28, 17, 4], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(tf.math.add(tf.math.multiply(tf.math.square(beta), tf.math.add(tf.math.multiply(grad, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.math.square(tf.math.multiply(grad, grad)), tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, grad)))))))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(sigma, tf.math.pow(beta, grad)))), grad)), tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [1113564288.0, 21531627520.0, 100768989184.0, 278615392256.0, 601753649152.0, 1112041717760.0], "accuracy": [0.09919429570436478, 0.10210011899471283, 0.09826971590518951, 0.1006472036242485, 0.1014397069811821, 0.10051512718200684], "val_loss": [5194638336.0, 41551900672.0, 140231655424.0, 332393840640.0, 649194176512.0, 1121794129920.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 4, 1, 3, 2, 1, 6, 3, 1, 8, 9, 3, 0, 1, 7, 8, 0, 4, 7, 9, 9, 2, 1, 2, 2, 9], [0, 0, 1, 0, 2, 2, 2, 0, 2, 2, 0, 1, 3, 2, 0, 1, 1, 2], [0, 39, 39, 32, 75, 88, 70, 9, 42, 12], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 6, 3, 8, 2, 5], [2, 0, 3, 1, 0, 2], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 30, 18, 10, 14, 8, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), grad), grad)), tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), grad)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 37], [0, 0, 1, 0, 0, 1, 1], [0, 6, 4, 0], [6, 7, 1], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 2, 1, 1, 0, 2, 1, 1, 0, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.negative(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3087427616119385, 2.3097128868103027, 2.310772180557251, 2.3105053901672363, 2.309971332550049, 2.310260772705078], "accuracy": [0.09351472556591034, 0.09589222073554993, 0.08994849026203156, 0.08849557489156723, 0.09166556596755981, 0.09153348207473755], "val_loss": [2.309553384780884, 2.309553384780884, 2.309553384780884, 2.309553384780884, 2.309553384780884, 2.309553384780884], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]