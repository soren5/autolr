[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2047119140625, 1.5851523876190186, 1.139930009841919, 0.9429893493652344, 0.8882825970649719, 0.8075097799301147, 0.7624616026878357, 0.7535076141357422, 0.7156310677528381, 0.6972952485084534, 0.6759607195854187, 0.6413547992706299, 0.6585094928741455, 0.6188988089561462, 0.6163915991783142, 0.6021113395690918, 0.5878795385360718, 0.5787225365638733, 0.567748486995697, 0.556898832321167, 0.5582368969917297, 0.5375996828079224, 0.5399739146232605, 0.5353637337684631], "accuracy": [0.26918503642082214, 0.5032360553741455, 0.5999207496643066, 0.6649055480957031, 0.6757363677024841, 0.7004358768463135, 0.7238145470619202, 0.726192057132721, 0.7364945411682129, 0.743891179561615, 0.7511557340621948, 0.7629110813140869, 0.7520803213119507, 0.769911527633667, 0.7695152759552002, 0.7749306559562683, 0.7866860628128052, 0.7865539789199829, 0.7905164361000061, 0.7984414100646973, 0.7968564033508301, 0.8009510040283203, 0.8000264167785645, 0.8000264167785645], "val_loss": [1.908429503440857, 1.0936588048934937, 0.9223004579544067, 0.8222008347511292, 0.7395333647727966, 0.7467007040977478, 0.7069283723831177, 0.670945942401886, 0.6606367826461792, 0.6645561456680298, 0.5998713374137878, 0.6158447265625, 0.5965148210525513, 0.5619921088218689, 0.5807991623878479, 0.5689336657524109, 0.5611811280250549, 0.5543729662895203, 0.5275970101356506, 0.5490872263908386, 0.5238847732543945, 0.5170400142669678, 0.52588951587677, 0.5146609544754028], "val_accuracy": [0.5596666932106018, 0.6703333258628845, 0.6866666674613953, 0.6886666417121887, 0.7213333249092102, 0.7133333086967468, 0.7366666793823242, 0.7459999918937683, 0.7603333592414856, 0.7620000243186951, 0.7739999890327454, 0.7613333463668823, 0.7716666460037231, 0.7993333339691162, 0.7799999713897705, 0.7879999876022339, 0.7836666703224182, 0.7933333516120911, 0.8166666626930237, 0.7976666688919067, 0.8143333196640015, 0.8143333196640015, 0.8023333549499512, 0.8153333067893982]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 6, 3, 5, 9], [0, 0, 3, 0, 2], [0, 39, 39, 51], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 0, 2, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1], [0, 3, 0, 5], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 9, 5, 4, 0, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8, 3], [0, 0, 1, 0, 2, 0], [0, 39, 39, 90], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [2], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 11, 6, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [22470178373632.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09800554811954498, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [8.334339370228122e+16, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [5, 2, 4, 1, 3, 7], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.97383451461792, 2.3078010082244873, 2.3032901287078857, 2.302933931350708, 2.3029630184173584, 2.3029861450195312], "accuracy": [0.19614318013191223, 0.0956280529499054, 0.09972262382507324, 0.09853387624025345, 0.09298639744520187, 0.09457138925790787], "val_loss": [2.308948040008545, 2.303147077560425, 2.3027284145355225, 2.30264949798584, 2.3026630878448486, 2.3025829792022705], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09733333438634872, 0.09533333033323288, 0.09533333033323288, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 4, 4, 6, 3, 2, 5, 2, 4, 1, 0, 0, 2, 6, 5, 2, 6, 5, 1, 0, 9, 1, 6, 5, 4, 1, 4, 9, 0, 6, 9, 7], [0, 0, 1, 0, 0, 2, 3, 3, 2, 2, 3, 0, 1, 2, 3, 3, 1, 1, 0, 3, 2, 1], [0, 39, 90, 10, 98, 82, 5, 15, 21], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 2, 6, 9, 8, 2, 1], [2, 0, 3, 1, 0], [16, 37, 19], [0, 1], [0], [1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 59, 37, 22, 9, 13, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.pow(grad, grad), tf.math.subtract(grad, tf.math.negative(grad)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.negative(grad), grad)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.square(alpha), tf.math.pow(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad)))), tf.math.add(grad, alpha))))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]