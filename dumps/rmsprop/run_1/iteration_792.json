[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131075859069824, 1.6015955209732056, 1.1436516046524048, 0.9751495122909546, 0.882992684841156, 0.8405649065971375, 0.7827876806259155, 0.7614125609397888, 0.7414604425430298, 0.7141693234443665, 0.6792917847633362, 0.6696068644523621, 0.6573459506034851, 0.644037127494812, 0.6177334785461426, 0.6105994582176208, 0.6248003244400024, 0.587798535823822, 0.587648332118988, 0.5696619153022766, 0.5724133253097534, 0.5566475987434387, 0.5434991717338562, 0.5388445854187012, 0.537326991558075, 0.5113556385040283, 0.5219441056251526, 0.5015357732772827, 0.5105307102203369, 0.48939546942710876, 0.48709189891815186, 0.4753313958644867, 0.48794054985046387, 0.46545088291168213, 0.46814119815826416, 0.4623926281929016, 0.44637441635131836, 0.45000454783439636, 0.4383891522884369, 0.4396955966949463, 0.42549222707748413, 0.4214247465133667, 0.42636430263519287, 0.4288836121559143, 0.42263439297676086, 0.41763490438461304, 0.4081949293613434, 0.40197932720184326, 0.4145042896270752, 0.3990039527416229, 0.39655569195747375, 0.3876194357872009, 0.39581039547920227, 0.38462167978286743, 0.3876475691795349, 0.37890753149986267, 0.3741767108440399, 0.37603795528411865], "accuracy": [0.27182671427726746, 0.5176330804824829, 0.5945053696632385, 0.6576409935951233, 0.6827367544174194, 0.6993792057037354, 0.713379979133606, 0.7165499925613403, 0.7210407853126526, 0.7372870445251465, 0.7491744756698608, 0.7540615797042847, 0.757099449634552, 0.763439416885376, 0.7693831920623779, 0.7726852297782898, 0.7672698497772217, 0.7824593782424927, 0.7852331399917603, 0.7864218950271606, 0.7890635132789612, 0.7977809906005859, 0.796328067779541, 0.7975168228149414, 0.7947431206703186, 0.8108572363853455, 0.8058380484580994, 0.8099326491355896, 0.807158887386322, 0.8187822103500366, 0.8203672170639038, 0.8256505131721497, 0.8165367841720581, 0.8304054737091064, 0.8294808864593506, 0.8310658931732178, 0.8363492488861084, 0.8352925777435303, 0.8405758738517761, 0.8393871188163757, 0.8404437899589539, 0.8417646288871765, 0.8432175517082214, 0.8408400416374207, 0.841500461101532, 0.8504821062088013, 0.8492933511734009, 0.8525954484939575, 0.8459912538528442, 0.8527275323867798, 0.8490291833877563, 0.8599920868873596, 0.8543124794960022, 0.8588033318519592, 0.8543124794960022, 0.8613129258155823, 0.8639545440673828, 0.8631620407104492], "val_loss": [1.9264581203460693, 1.0853525400161743, 0.9323068857192993, 0.7718067765235901, 0.6957980394363403, 0.6677971482276917, 0.6566845178604126, 0.587331235408783, 0.5955742001533508, 0.5674834847450256, 0.6111365556716919, 0.5615736246109009, 0.6056180596351624, 0.5215839743614197, 0.5039135217666626, 0.5083987712860107, 0.4965707063674927, 0.5048366189002991, 0.5086219310760498, 0.4769594669342041, 0.47988322377204895, 0.47886714339256287, 0.4657759666442871, 0.470213383436203, 0.45480525493621826, 0.4785780906677246, 0.45009440183639526, 0.4324389696121216, 0.43835946917533875, 0.4187968373298645, 0.4245704710483551, 0.42806848883628845, 0.42631077766418457, 0.4076787829399109, 0.400450199842453, 0.410433828830719, 0.40150994062423706, 0.39836278557777405, 0.39937683939933777, 0.3920777142047882, 0.3844289183616638, 0.3842238485813141, 0.38444453477859497, 0.3949606418609619, 0.384646475315094, 0.3782484531402588, 0.37565532326698303, 0.3715777099132538, 0.39263468980789185, 0.38435250520706177, 0.36387336254119873, 0.37739208340644836, 0.36707615852355957, 0.3598115146160126, 0.3694474697113037, 0.3577405512332916, 0.36256152391433716, 0.35941535234451294], "val_accuracy": [0.5866666436195374, 0.6629999876022339, 0.6893333196640015, 0.7326666712760925, 0.7456666827201843, 0.7599999904632568, 0.7563333511352539, 0.7770000100135803, 0.768666684627533, 0.7863333225250244, 0.7506666779518127, 0.7873333096504211, 0.7599999904632568, 0.7946666479110718, 0.8066666722297668, 0.8046666383743286, 0.8146666884422302, 0.809333324432373, 0.8053333163261414, 0.8180000185966492, 0.8180000185966492, 0.8216666579246521, 0.8286666870117188, 0.8199999928474426, 0.8293333053588867, 0.8173333406448364, 0.82833331823349, 0.8330000042915344, 0.8360000252723694, 0.8396666646003723, 0.8366666436195374, 0.8320000171661377, 0.8396666646003723, 0.8416666388511658, 0.8519999980926514, 0.8423333168029785, 0.8539999723434448, 0.8476666808128357, 0.843999981880188, 0.8506666421890259, 0.8543333411216736, 0.8553333282470703, 0.8529999852180481, 0.8483333587646484, 0.8553333282470703, 0.8543333411216736, 0.859000027179718, 0.8633333444595337, 0.843999981880188, 0.8526666760444641, 0.8616666793823242, 0.8543333411216736, 0.8663333058357239, 0.8610000014305115, 0.8619999885559082, 0.8629999756813049, 0.8663333058357239, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 8, 3], [0, 2, 1, 0, 2, 1], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 2, 0, 9, 0, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], [6, 6, 4, 4, 3, 6, 8, 7, 5, 7, 1, 3, 7, 2, 1, 7, 6, 1, 1, 1, 4, 2, 8, 6, 1, 5, 4, 6, 8, 9], [0, 0, 5, 4, 1, 3, 7, 2, 2, 2, 1, 4, 6, 0, 3, 7, 3, 2, 5, 2, 6, 6, 3, 3], [0, 39, 85, 1], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 4, 2, 2, 1, 54, 30, 24, 4, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(grad, alpha)), tf.math.subtract(tf.math.multiply(tf.math.add(sigma, tf.math.add(grad, beta)), tf.math.subtract(beta, beta)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.subtract(sigma, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(grad, sigma)), beta), grad)), tf.math.subtract(tf.math.square(beta), tf.math.pow(grad, grad))))), tf.math.divide_no_nan(sigma, sigma)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303802967071533, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [0, 7, 59], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 8, 2], [4, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [0, 1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [0, 70, 39, 9], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 11, 6, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303936719894409, 2.3284645080566406, 38.74104309082031, 9871.9814453125, 2457594.25, 627494400.0], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025715351104736, 2.9651503562927246, 360.8735046386719, 92383.6171875, 23650206.0, 6054452736.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [78, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [8], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 12, 7, 5, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [365859.125, 2.336786985397339, 2.4306631088256836, 2.588374614715576, 2.813420534133911, 3.1042261123657227], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.31675124168396, 2.388784408569336, 2.5258431434631348, 2.7285616397857666, 2.9974238872528076, 3.334301710128784], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]