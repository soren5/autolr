[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8199999928474426, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105329036712646, 1.6195887327194214, 1.1641892194747925, 0.9636609554290771, 0.9087232947349548, 0.8447815179824829, 0.7969126105308533, 0.7710786461830139, 0.7428105473518372, 0.7052106857299805, 0.6898855566978455, 0.6844521164894104, 0.6520293354988098, 0.6332035660743713, 0.6388679146766663, 0.6048179864883423, 0.6038406491279602, 0.6020972728729248, 0.5785796046257019, 0.5892415046691895, 0.5828219652175903, 0.5673773288726807, 0.538023829460144, 0.5390297770500183, 0.538312554359436, 0.5314165353775024, 0.5179863572120667], "accuracy": [0.26997753977775574, 0.49491479992866516, 0.5931845307350159, 0.6646413803100586, 0.6775855422019958, 0.6927750706672668, 0.7099458575248718, 0.7137762308120728, 0.7308149337768555, 0.7450799345970154, 0.7454761862754822, 0.7448157668113708, 0.7626469135284424, 0.7644960880279541, 0.7670056819915771, 0.7812706232070923, 0.7791573405265808, 0.7750627398490906, 0.7886672616004944, 0.7839123010635376, 0.7854973077774048, 0.7915731072425842, 0.8025360107421875, 0.8039889335632324, 0.8063663840293884, 0.8067626357078552, 0.8086118102073669], "val_loss": [1.9189738035202026, 1.1491608619689941, 0.886773943901062, 0.771689772605896, 0.7498612403869629, 0.7232402563095093, 0.6624969244003296, 0.6108261942863464, 0.6084051132202148, 0.5827964544296265, 0.5890292525291443, 0.5637614727020264, 0.5716467499732971, 0.5309019088745117, 0.5289435386657715, 0.5383211374282837, 0.5146622061729431, 0.49951761960983276, 0.5089083909988403, 0.5258516669273376, 0.4936062693595886, 0.4776802957057953, 0.47244149446487427, 0.4702891707420349, 0.4778255224227905, 0.47548818588256836, 0.45999160408973694], "val_accuracy": [0.559333324432373, 0.6150000095367432, 0.6930000185966492, 0.721666693687439, 0.7080000042915344, 0.7210000157356262, 0.7456666827201843, 0.7733333110809326, 0.7760000228881836, 0.7773333191871643, 0.7743333578109741, 0.7940000295639038, 0.7839999794960022, 0.7956666946411133, 0.7950000166893005, 0.7916666865348816, 0.8090000152587891, 0.8046666383743286, 0.8056666851043701, 0.8016666769981384, 0.8133333325386047, 0.8246666789054871, 0.8196666836738586, 0.8223333358764648, 0.8183333277702332, 0.815666675567627, 0.8209999799728394]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 2, 3, 9, 3, 9], [0, 0, 1, 0, 2], [0, 85, 39, 32], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 6, 2, 4, 12, 7, 5, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), alpha), tf.math.add(grad, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 37], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 0, 3, 8, 2], [2, 0, 0, 0, 0], [16, 1], [0, 1], [0], [0], [94], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034932613372803, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [8, 37], [0, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 6, 5, 3, 7, 4, 3, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309621810913086, 2.3093388080596924, 2.31058669090271, 2.3092851638793945, 2.310635566711426, 2.310373544692993], "accuracy": [0.09760929644107819, 0.09074098616838455, 0.0940430611371994, 0.09298639744520187, 0.09034473448991776, 0.09166556596755981], "val_loss": [2.3087494373321533, 2.3087494373321533, 2.3087494373321533, 2.3087494373321533, 2.3087494373321533, 2.3087494373321533], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 82], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 4, 0, 8, 2, 6, 0, 8, 7], [5, 0, 3, 1, 0, 0], [16, 37, 91], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 3, 2, 2, 3, 5, 8, 3, 8, 7, 7, 0, 4, 0, 2, 5], [0, 1, 2, 1, 7, 6, 5, 3, 3, 1, 2], [0], [1], [0], [0], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 10, 5, 5, 3, 17, 11, 6, 3, 28, 17, 11, 1, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.negative(tf.math.sqrt(grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, beta), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.multiply(grad, grad))), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.negative(grad), sigma), tf.math.pow(tf.math.negative(tf.math.add(sigma, alpha)), tf.math.square(beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.309600353240967, 2.3093509674072266, 2.309523344039917, 2.3101844787597656, 2.309138059616089, 2.3106818199157715], "accuracy": [0.09642054885625839, 0.09179764986038208, 0.09140139818191528, 0.09100515395402908, 0.09668471664190292, 0.09325055778026581], "val_loss": [2.308950424194336, 2.308950424194336, 2.308950424194336, 2.308950424194336, 2.308950424194336, 2.308950424194336], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]