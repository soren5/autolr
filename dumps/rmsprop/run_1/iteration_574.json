[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2094390392303467, 1.6072076559066772, 1.1733596324920654, 0.9635748267173767, 0.894155740737915, 0.8202027678489685, 0.7888773679733276, 0.7699592113494873, 0.7314908504486084, 0.7322203516960144, 0.6914523243904114, 0.6792204976081848, 0.6563641428947449, 0.6538063883781433, 0.6194491982460022, 0.6108668446540833, 0.6111086010932922, 0.5891091823577881, 0.5740566849708557, 0.5639328360557556, 0.5774260759353638, 0.5462449193000793, 0.540113091468811, 0.5228778123855591, 0.5252405405044556, 0.531635582447052, 0.5224206447601318, 0.5083963871002197, 0.49624380469322205, 0.5016693472862244, 0.4934561550617218, 0.47982513904571533, 0.48502063751220703, 0.46784818172454834], "accuracy": [0.2728833854198456, 0.4955752193927765, 0.587372899055481, 0.6585655808448792, 0.6756042838096619, 0.6996433734893799, 0.7135120630264282, 0.7125874757766724, 0.7316074371337891, 0.7281733155250549, 0.7408532500267029, 0.7475894689559937, 0.7598732113838196, 0.755118191242218, 0.7740060687065125, 0.7670056819915771, 0.7732135653495789, 0.7823272943496704, 0.789459764957428, 0.7887993454933167, 0.7843085527420044, 0.7994980812072754, 0.7924976944923401, 0.8072909712791443, 0.8055738806724548, 0.8087438941001892, 0.8029322624206543, 0.8128384351730347, 0.8157442808151245, 0.8146876096725464, 0.8210275769233704, 0.824329674243927, 0.8202351331710815, 0.8313300609588623], "val_loss": [1.9173250198364258, 1.1228039264678955, 0.8836745023727417, 0.8710763454437256, 0.7120787501335144, 0.7143253684043884, 0.6818246841430664, 0.6343424320220947, 0.6807327270507812, 0.5976328253746033, 0.6320592164993286, 0.6042870879173279, 0.5886613726615906, 0.5506269335746765, 0.5566229820251465, 0.5559395551681519, 0.5614855289459229, 0.5181717872619629, 0.5316348671913147, 0.5377216339111328, 0.5056238770484924, 0.4933229088783264, 0.48766016960144043, 0.4838128983974457, 0.5034986138343811, 0.47667333483695984, 0.4729568660259247, 0.46833154559135437, 0.45510387420654297, 0.4879232943058014, 0.46742764115333557, 0.44525644183158875, 0.45494747161865234, 0.4652740955352783], "val_accuracy": [0.4893333315849304, 0.6460000276565552, 0.6943333148956299, 0.6669999957084656, 0.7356666922569275, 0.7369999885559082, 0.7329999804496765, 0.7543333172798157, 0.7160000205039978, 0.7820000052452087, 0.7573333382606506, 0.777999997138977, 0.7839999794960022, 0.8080000281333923, 0.7916666865348816, 0.7860000133514404, 0.7870000004768372, 0.8169999718666077, 0.7906666398048401, 0.7953333258628845, 0.8069999814033508, 0.8113333582878113, 0.8289999961853027, 0.8220000267028809, 0.812333345413208, 0.8230000138282776, 0.8323333263397217, 0.8293333053588867, 0.8420000076293945, 0.8130000233650208, 0.828000009059906, 0.8383333086967468, 0.8379999995231628, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 4, 3, 5], [3, 3, 3, 0, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 9, 4, 5], [4, 0, 3, 1, 0], [16, 37, 59], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 4, 1, 0, 2, 7, 3, 4], [6, 4, 7, 3, 2, 3, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 15, 10, 5, 3, 15, 8, 7, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.pow(grad, grad), grad), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), tf.math.pow(alpha, tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(grad, tf.math.subtract(tf.math.negative(grad), tf.math.add(grad, tf.math.add(tf.math.multiply(sigma, tf.math.pow(beta, sigma)), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 99, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 1, 7, 0, 8, 2], [2, 0, 3, 4, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 8, 4, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [29001.908203125, 59441965694976.0, 7.250323709578183e+18, 1.3133426506735418e+22, 1.9829468198457645e+25, 9.074395163630368e+29, Infinity], "accuracy": [0.09747721254825592, 0.09760929644107819, 0.09919429570436478, 0.10196803510189056, 0.09774138033390045, 0.10447761416435242, 0.1002509593963623], "val_loss": [1650393.375, 3387991267475456.0, 1.3294938361299993e+20, 1.7938278668580168e+23, 4.6878703335820454e+26, 3.1689422602756642e+31, Infinity], "val_accuracy": [0.09566666930913925, 0.10366666316986084, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 7, 1, 1, 8, 9, 6, 6, 2, 2, 6, 1, 1, 2, 7, 1, 7, 4, 6, 2], [6, 2, 7, 6, 0, 0, 3, 6, 7, 2, 4, 7, 5, 4, 1, 0, 1], [0, 55, 56, 44], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 37, 20, 17, 4, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.subtract(tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad))), tf.math.add(tf.math.pow(grad, beta), grad))))), grad), grad), grad)), tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037259578704834, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 2, 2, 2], [2, 0, 3, 1, 0, 1, 0], [16, 37, 94], [0, 1, 1], [1], [6, 2], [0], [1], [0], [2], [0]], "fitness": -0.08457142859697342, "mapping_values": [1, 6, 3, 3, 1, 15, 8, 7, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.306490182876587, 2.3026976585388184, 2.3025856018066406, 2.3025856018066406, 2.3025858402252197, 2.3025856018066406], "accuracy": [0.09351472556591034, 0.0944393053650856, 0.09285431355237961, 0.09694888442754745, 0.09087307006120682, 0.09470347315073013], "val_loss": [2.302778959274292, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025851249694824, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582]}}]