[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2094743251800537, 1.6161338090896606, 1.1618850231170654, 0.9774066805839539, 0.902447521686554, 0.8412345051765442, 0.7891154289245605, 0.7771848440170288, 0.7364386916160583, 0.736942708492279, 0.680964469909668, 0.6905321478843689, 0.6445955634117126, 0.6535317897796631, 0.6159825921058655, 0.618797779083252, 0.6101879477500916, 0.6043981909751892, 0.5820303559303284, 0.5773420929908752, 0.5722999572753906, 0.5683115124702454, 0.5563188195228577, 0.5273247957229614, 0.5388787984848022, 0.5357452630996704, 0.5363315939903259, 0.5033968091011047, 0.5016660690307617, 0.5063769221305847, 0.5011919140815735, 0.4834594130516052, 0.492680162191391, 0.48862048983573914, 0.4696432054042816, 0.4775584042072296, 0.45984339714050293, 0.4623152017593384, 0.4536033868789673, 0.4570055902004242, 0.44849371910095215, 0.4370999336242676, 0.43715110421180725, 0.4360975921154022, 0.4249449074268341, 0.427280992269516, 0.4160451591014862], "accuracy": [0.26363757252693176, 0.5054814219474792, 0.5896182656288147, 0.6530181169509888, 0.6701889038085938, 0.6939638257026672, 0.7113987803459167, 0.7119271159172058, 0.7235503792762756, 0.726192057132721, 0.7449478507041931, 0.7432307600975037, 0.7605336308479309, 0.7588165402412415, 0.7687227725982666, 0.772288978099823, 0.7708360552787781, 0.7750627398490906, 0.7804781198501587, 0.7887993454933167, 0.7854973077774048, 0.7905164361000061, 0.7931581139564514, 0.809140145778656, 0.8021397590637207, 0.8005547523498535, 0.8039889335632324, 0.8148196935653687, 0.8171972036361694, 0.8120459914207458, 0.8092722296714783, 0.8224804997444153, 0.8190463781356812, 0.8185180425643921, 0.82683926820755, 0.822348415851593, 0.830669641494751, 0.8315942287445068, 0.8313300609588623, 0.8305375576019287, 0.8335754871368408, 0.8430854678153992, 0.8378021121025085, 0.8383304476737976, 0.8448025584220886, 0.8433496356010437, 0.8449346423149109], "val_loss": [1.9184927940368652, 1.108938217163086, 0.8720090389251709, 0.7636438012123108, 0.7528496980667114, 0.7174721956253052, 0.7232445478439331, 0.6801222562789917, 0.6494437456130981, 0.6161921620368958, 0.623132050037384, 0.5899106860160828, 0.623442530632019, 0.5691808462142944, 0.5582643151283264, 0.5706314444541931, 0.5653809905052185, 0.5568740367889404, 0.5498861074447632, 0.5409005284309387, 0.5203418135643005, 0.5151005983352661, 0.5010738372802734, 0.48810169100761414, 0.5086307525634766, 0.5004454851150513, 0.48574694991111755, 0.4841991364955902, 0.48969367146492004, 0.48291927576065063, 0.4690099358558655, 0.4786768853664398, 0.4614240825176239, 0.46516305208206177, 0.45637911558151245, 0.4627077579498291, 0.46034544706344604, 0.4561411142349243, 0.44536644220352173, 0.4479343295097351, 0.4467795491218567, 0.4436761736869812, 0.4478190839290619, 0.43526896834373474, 0.45893701910972595, 0.4472549557685852, 0.4335653483867645], "val_accuracy": [0.5776666402816772, 0.659333348274231, 0.6993333101272583, 0.7123333215713501, 0.6909999847412109, 0.7243333458900452, 0.7039999961853027, 0.7379999756813049, 0.7549999952316284, 0.7639999985694885, 0.7639999985694885, 0.7739999890327454, 0.7506666779518127, 0.777999997138977, 0.7943333387374878, 0.7716666460037231, 0.7846666574478149, 0.7723333239555359, 0.7996666431427002, 0.7910000085830688, 0.8046666383743286, 0.8116666674613953, 0.8196666836738586, 0.8186666369438171, 0.8149999976158142, 0.8190000057220459, 0.8193333148956299, 0.8213333487510681, 0.8113333582878113, 0.8220000267028809, 0.8259999752044678, 0.8213333487510681, 0.8330000042915344, 0.8206666707992554, 0.8306666612625122, 0.8296666741371155, 0.82833331823349, 0.8356666564941406, 0.8360000252723694, 0.8386666774749756, 0.8356666564941406, 0.8433333039283752, 0.8370000123977661, 0.8396666646003723, 0.8240000009536743, 0.8360000252723694, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 0, 8, 3, 5], [0, 0, 1, 1, 2], [0, 39, 31], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 6, 8, 7, 3, 2, 0, 7, 1, 7, 7, 4, 0, 9, 0], [0, 6, 1, 6, 7, 4, 6, 6, 0], [0, 9, 87], [0, 0, 0, 1, 1], [0, 5, 6], [2, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 5, 3, 2, 1, 24, 15, 9, 3, 5, 3, 2, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.pow(grad, tf.math.negative(grad)), grad)), grad))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(beta, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 7], [3, 0, 1, 0, 3, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [87, 1], [0, 1], [0], [0], [76], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089094161987305, 2.3092153072357178, 2.3093905448913574, 2.3091604709625244, 2.3092854022979736, 2.3097922801971436], "accuracy": [0.09272222965955734, 0.09747721254825592, 0.08889182657003403, 0.09285431355237961, 0.09325055778026581, 0.09787346422672272], "val_loss": [2.3092691898345947, 2.3092691898345947, 2.3092691898345947, 2.3092691898345947, 2.3092691898345947, 2.3092691898345947], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}]