[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210423707962036, 1.615486979484558, 1.1316630840301514, 0.9835904836654663, 0.8700553178787231, 0.8083817362785339, 0.7748632431030273, 0.7561221718788147, 0.727321207523346, 0.6849361658096313, 0.6723912358283997, 0.6526980400085449, 0.6455391049385071, 0.6345798373222351, 0.6141729950904846, 0.6119867563247681, 0.6102292537689209, 0.5794001221656799, 0.5851703882217407, 0.567112922668457, 0.5525598526000977, 0.548250675201416, 0.5424567461013794, 0.5197543501853943, 0.5280852913856506, 0.5171138644218445, 0.5126638412475586, 0.5066332817077637, 0.5034290552139282, 0.4929293394088745, 0.4931130111217499, 0.4794553816318512, 0.4864305853843689, 0.4710812270641327, 0.47262632846832275, 0.46805644035339355, 0.4622631371021271, 0.4502005875110626, 0.4478822350502014, 0.43821948766708374, 0.44395720958709717, 0.45347175002098083, 0.4347318410873413, 0.41561707854270935, 0.43545010685920715, 0.41270551085472107, 0.42575129866600037, 0.40883931517601013, 0.4113466739654541], "accuracy": [0.2670717239379883, 0.49729230999946594, 0.6019020080566406, 0.643772304058075, 0.6884163022041321, 0.7004358768463135, 0.7169462442398071, 0.7224937081336975, 0.7272487282752991, 0.7440232634544373, 0.7470611333847046, 0.7556465268135071, 0.7578919529914856, 0.7623828053474426, 0.7716285586357117, 0.7685906887054443, 0.7754589915275574, 0.7819310426712036, 0.7779685854911804, 0.7891955971717834, 0.7973847389221191, 0.7976489067077637, 0.7980451583862305, 0.8074230551719666, 0.7994980812072754, 0.8053097128868103, 0.8078193068504333, 0.8124422430992126, 0.8108572363853455, 0.8222163319587708, 0.8190463781356812, 0.8227446675300598, 0.824329674243927, 0.8260467648506165, 0.8251221776008606, 0.8319904804229736, 0.8308017253875732, 0.8378021121025085, 0.8354246616363525, 0.8387266993522644, 0.837537944316864, 0.8335754871368408, 0.8407079577445984, 0.8477083444595337, 0.8397833704948425, 0.8504821062088013, 0.8436138033866882, 0.8494254350662231, 0.8474441766738892], "val_loss": [1.922393560409546, 1.105275273323059, 0.8855490684509277, 0.7732996344566345, 0.7569065690040588, 0.6687042117118835, 0.6728610992431641, 0.6554736495018005, 0.6364783644676208, 0.585024356842041, 0.5793476104736328, 0.6507846713066101, 0.5703225135803223, 0.5592159628868103, 0.5480123162269592, 0.5589746236801147, 0.5302339792251587, 0.5317544937133789, 0.5369300842285156, 0.5138895511627197, 0.5142005085945129, 0.5372599959373474, 0.4778842329978943, 0.49649861454963684, 0.5158648490905762, 0.5037714242935181, 0.4688076972961426, 0.46934831142425537, 0.4712897837162018, 0.45109057426452637, 0.47282662987709045, 0.4531669020652771, 0.4678891599178314, 0.4625393748283386, 0.44816112518310547, 0.44525426626205444, 0.43892309069633484, 0.4497876465320587, 0.43974006175994873, 0.45074671506881714, 0.4324251711368561, 0.42716771364212036, 0.42347049713134766, 0.41093385219573975, 0.41921180486679077, 0.4218577742576599, 0.420014888048172, 0.41690754890441895, 0.40936538577079773], "val_accuracy": [0.5726666450500488, 0.624666690826416, 0.6726666688919067, 0.7253333330154419, 0.7059999704360962, 0.7566666603088379, 0.7336666584014893, 0.7583333253860474, 0.7670000195503235, 0.7793333530426025, 0.781333327293396, 0.737333357334137, 0.7873333096504211, 0.7960000038146973, 0.7976666688919067, 0.7906666398048401, 0.8040000200271606, 0.8009999990463257, 0.7889999747276306, 0.8103333115577698, 0.812666654586792, 0.8016666769981384, 0.8226666450500488, 0.8166666626930237, 0.8076666593551636, 0.8130000233650208, 0.8226666450500488, 0.828000009059906, 0.828000009059906, 0.8356666564941406, 0.8183333277702332, 0.8309999704360962, 0.8223333358764648, 0.8273333311080933, 0.8373333215713501, 0.8323333263397217, 0.8366666436195374, 0.8376666903495789, 0.8389999866485596, 0.8320000171661377, 0.8373333215713501, 0.8463333249092102, 0.8386666774749756, 0.8506666421890259, 0.8446666598320007, 0.8429999947547913, 0.8443333506584167, 0.8489999771118164, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), beta), grad)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 6, 5, 5], [2, 5, 3, 1, 0], [84, 37], [1, 1], [0], [6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 5, 3, 2, 0, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [9, 2, 3, 1, 3, 3], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 8, 6, 4, 8, 2], [2, 0, 3, 1, 0], [49, 37], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [9, 2, 6, 1, 3, 5], [0, 1, 2, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [1, 1], [3], [0], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092596530914307, 2.3093700408935547, 2.309452533721924, 2.3108527660369873, 2.309446334838867, 2.3091020584106445], "accuracy": [0.09179764986038208, 0.08889182657003403, 0.09668471664190292, 0.09153348207473755, 0.0940430611371994, 0.09047681838274002], "val_loss": [2.3080315589904785, 2.3080315589904785, 2.3080315589904785, 2.3080315589904785, 2.3080315589904785, 2.3080315589904785], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]