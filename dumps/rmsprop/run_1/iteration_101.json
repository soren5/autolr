[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8237142562866211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212996244430542, 1.6233022212982178, 1.1609995365142822, 0.991962730884552, 0.8937531113624573, 0.8114100694656372, 0.7712407112121582, 0.7581765651702881, 0.7341291308403015, 0.7297648787498474, 0.6792144775390625, 0.6633647680282593, 0.6608204245567322, 0.6358768939971924, 0.620222806930542, 0.6229860782623291, 0.6088557839393616, 0.598025918006897, 0.589180588722229, 0.5679386258125305, 0.5703778862953186, 0.5548595786094666, 0.5405600666999817, 0.5355725288391113, 0.5389738082885742, 0.5200046300888062, 0.5202580094337463, 0.5211113691329956, 0.5059177875518799, 0.49440181255340576, 0.502690851688385, 0.49053749442100525, 0.4877892732620239, 0.47894492745399475, 0.4818650782108307, 0.4703478515148163, 0.47120729088783264, 0.45935070514678955, 0.4581175446510315, 0.4560929834842682, 0.4474126100540161, 0.43674853444099426, 0.4341086745262146, 0.435071736574173, 0.42930370569229126, 0.43147289752960205, 0.42989954352378845, 0.41378167271614075], "accuracy": [0.25941091775894165, 0.501518964767456, 0.5937128663063049, 0.6539427042007446, 0.6804913282394409, 0.7106062769889832, 0.7154933214187622, 0.7172104120254517, 0.7277770638465881, 0.7280412316322327, 0.7532690763473511, 0.7519482374191284, 0.7530049085617065, 0.7633073329925537, 0.7638356685638428, 0.7670056819915771, 0.7750627398490906, 0.7783648371696472, 0.7808743715286255, 0.7854973077774048, 0.7824593782424927, 0.7898560166358948, 0.8024039268493652, 0.8067626357078552, 0.8005547523498535, 0.8078193068504333, 0.8078193068504333, 0.8054417967796326, 0.8117818236351013, 0.8234050869941711, 0.8112534880638123, 0.8216879963874817, 0.8228767514228821, 0.8253863453865051, 0.8249900937080383, 0.8257825970649719, 0.8314621448516846, 0.8337075710296631, 0.8309338092803955, 0.8309338092803955, 0.8300092220306396, 0.8391229510307312, 0.8380662798881531, 0.8418967127799988, 0.8389908671379089, 0.8405758738517761, 0.8370096683502197, 0.8491612672805786], "val_loss": [1.9268370866775513, 1.1331297159194946, 0.8902597427368164, 0.7609779238700867, 0.7097160816192627, 0.7071884870529175, 0.6995320916175842, 0.6154612302780151, 0.6494895815849304, 0.6026741862297058, 0.5737102627754211, 0.5612302422523499, 0.555916428565979, 0.5416668057441711, 0.5633277893066406, 0.5150318741798401, 0.5494850873947144, 0.5207282900810242, 0.5145173072814941, 0.5006798505783081, 0.5053840279579163, 0.5160881280899048, 0.4919601380825043, 0.47030502557754517, 0.4780655801296234, 0.47298935055732727, 0.4723508358001709, 0.48458385467529297, 0.46022623777389526, 0.4520476162433624, 0.46463656425476074, 0.47251054644584656, 0.45736628770828247, 0.43325772881507874, 0.4409037232398987, 0.4381222724914551, 0.4415903389453888, 0.4335601031780243, 0.422257661819458, 0.4238249659538269, 0.4225568473339081, 0.4275144338607788, 0.41291454434394836, 0.41105911135673523, 0.4552808403968811, 0.4100014567375183, 0.40801504254341125, 0.40667420625686646], "val_accuracy": [0.5606666803359985, 0.6460000276565552, 0.6830000281333923, 0.7146666646003723, 0.7363333106040955, 0.7193333506584167, 0.734666645526886, 0.7580000162124634, 0.7483333349227905, 0.7770000100135803, 0.7760000228881836, 0.7923333048820496, 0.7850000262260437, 0.7950000166893005, 0.7796666622161865, 0.8043333292007446, 0.7789999842643738, 0.8053333163261414, 0.8040000200271606, 0.815666675567627, 0.8096666932106018, 0.8006666898727417, 0.8149999976158142, 0.8236666917800903, 0.8163333535194397, 0.8296666741371155, 0.8196666836738586, 0.8213333487510681, 0.8309999704360962, 0.8299999833106995, 0.8226666450500488, 0.8100000023841858, 0.8270000219345093, 0.8423333168029785, 0.8333333134651184, 0.8410000205039978, 0.8330000042915344, 0.843666672706604, 0.8429999947547913, 0.8493333458900452, 0.8443333506584167, 0.8493333458900452, 0.8523333072662354, 0.8500000238418579, 0.8323333263397217, 0.8473333120346069, 0.8496666550636292, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 4, 2, 8], [2, 0, 5, 1, 0, 0], [16, 1, 73], [0, 1], [0], [7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 2, 14, 8, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 4, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 14], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 3], [16, 26], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 4, 6, 1, 1], [0, 4, 0, 7, 4], [0, 15], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 5, 8, 1, 7, 8, 7, 7, 6, 3, 0, 5, 6, 3, 6], [1, 2, 3, 5, 1, 0, 4, 5, 7, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 10, 5, 5, 2, 25, 15, 10, 1], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.negative(tf.math.square(sigma))), tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), grad))), grad), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 0, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [1, 1], [0], [0], [0], [0, 0, 1], [0, 5], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 4, 2, 2, 0, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [744740416913408.0, NaN, NaN, NaN, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09100515395402908, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.6218132607401984e+17, NaN, NaN, NaN, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 95, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [8, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 3], [16, 1], [0, 0, 1, 0, 1], [0, 6, 0], [0, 3], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]