[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7962856888771057, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2095277309417725, 1.5957990884780884, 1.137182593345642, 0.9767032861709595, 0.8836013078689575, 0.8213076591491699, 0.7859508395195007, 0.7454899549484253, 0.7160046100616455, 0.7090095281600952, 0.6848620772361755, 0.6778289675712585, 0.6677632927894592, 0.6349471807479858, 0.6196317076683044, 0.6139032244682312, 0.5946647524833679, 0.6074039340019226, 0.5914322137832642, 0.5757986903190613, 0.5615023970603943, 0.5607137084007263, 0.5498909950256348], "accuracy": [0.2723550498485565, 0.5099722743034363, 0.5996565818786621, 0.6482630968093872, 0.6824725866317749, 0.6968696117401123, 0.7087571024894714, 0.7244749665260315, 0.7359662055969238, 0.7349095344543457, 0.7477215528488159, 0.7437590956687927, 0.752212405204773, 0.763439416885376, 0.7701756954193115, 0.7717606425285339, 0.7783648371696472, 0.7765156626701355, 0.7798177003860474, 0.7840443849563599, 0.7876105904579163, 0.7913089394569397, 0.7948752045631409], "val_loss": [1.9116476774215698, 1.1113344430923462, 0.8691779971122742, 0.7521196007728577, 0.7339537739753723, 0.6894567012786865, 0.679212749004364, 0.6136787533760071, 0.6215558648109436, 0.6218206286430359, 0.6007980108261108, 0.561765193939209, 0.5435945391654968, 0.5387794375419617, 0.5289098024368286, 0.5548766851425171, 0.5210116505622864, 0.5273308753967285, 0.5402693152427673, 0.5279199481010437, 0.5115523934364319, 0.49301016330718994, 0.491206556558609], "val_accuracy": [0.5649999976158142, 0.637666642665863, 0.6776666641235352, 0.7319999933242798, 0.7296666502952576, 0.7416666746139526, 0.734666645526886, 0.7673333287239075, 0.7506666779518127, 0.7593333125114441, 0.750333309173584, 0.7953333258628845, 0.8043333292007446, 0.8026666641235352, 0.8069999814033508, 0.8013333082199097, 0.8053333163261414, 0.8213333487510681, 0.8023333549499512, 0.8056666851043701, 0.8183333277702332, 0.8080000281333923, 0.8166666626930237]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 3], [0, 1, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [174.52587890625, 1229.22705078125, 2721.024658203125, 4405.66943359375, 6247.884765625, 8280.015625, 10425.0537109375, 12648.720703125, 15017.3583984375, 17483.06640625, 19990.009765625, 22512.8984375, 25097.248046875], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10091137140989304], "val_loss": [695.619140625, 2068.069091796875, 3694.902099609375, 5480.82763671875, 7421.96044921875, 9548.9384765625, 11745.4931640625, 14030.587890625, 16488.4140625, 18978.0234375, 21504.224609375, 24042.177734375, 26754.619140625], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 3, 3, 7, 0, 3, 5, 9, 8, 7, 0], [7, 4, 4, 7, 2, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 2, 1, 1, 1, 18, 12, 6, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.add(grad, grad), tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), grad), tf.math.sqrt(tf.math.add(beta, tf.math.negative(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 0, 7, 6], [2, 1, 1, 3, 2, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 0, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, alpha)), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032944202423096, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 6], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [5, 2, 0, 6, 3, 0, 2], [2, 0, 2, 1, 0], [16, 37], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 3, 1, 5, 9, 2, 8, 7, 4], [4, 1, 1, 2, 5], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 6, 3, 3, 2, 9, 5, 4, 1, 14, 9, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.pow(beta, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3087780475616455, 2.308990240097046, 2.311004877090454, 2.3106391429901123, 2.309455394744873, 2.308987855911255], "accuracy": [0.09655263274908066, 0.09113723784685135, 0.0944393053650856, 0.08902391046285629, 0.09113723784685135, 0.09840179979801178], "val_loss": [2.308530330657959, 2.308530330657959, 2.308530330657959, 2.308530330657959, 2.308530330657959, 2.308530330657959], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]