[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211197853088379, 1.595139980316162, 1.1277079582214355, 0.9771692156791687, 0.8685776591300964, 0.8389196991920471, 0.7670860886573792, 0.7529982328414917, 0.708441972732544, 0.6910639405250549, 0.6842889189720154, 0.650399386882782, 0.6425765752792358, 0.6383332014083862, 0.6238954663276672, 0.5982096791267395, 0.5977051258087158, 0.5797611474990845, 0.592259407043457, 0.5555959343910217, 0.5624638199806213, 0.5388578176498413, 0.5321077704429626, 0.5331820249557495, 0.5271713137626648, 0.5037137866020203, 0.4923962354660034, 0.5138267874717712, 0.48402515053749084, 0.4847663938999176, 0.489045649766922], "accuracy": [0.26495838165283203, 0.5200105905532837, 0.616299033164978, 0.6551313996315002, 0.6919825673103333, 0.6948884129524231, 0.7217012047767639, 0.7271166443824768, 0.7423061728477478, 0.7458723783493042, 0.748778223991394, 0.763967752456665, 0.7576277852058411, 0.7652885913848877, 0.770439863204956, 0.7823272943496704, 0.7847048044204712, 0.7843085527420044, 0.7841764688491821, 0.793422281742096, 0.7951393723487854, 0.8038568496704102, 0.8109893202781677, 0.8034605979919434, 0.8119139075279236, 0.8191784620285034, 0.8195747137069702, 0.8186501264572144, 0.8240655064582825, 0.8278959393501282, 0.8257825970649719], "val_loss": [1.9153087139129639, 1.0655205249786377, 0.9412334561347961, 0.8360649943351746, 0.7254480123519897, 0.6774983406066895, 0.6822127103805542, 0.6218869686126709, 0.607746958732605, 0.6082708239555359, 0.5940735936164856, 0.5758258700370789, 0.5720892548561096, 0.5926181674003601, 0.5527775883674622, 0.5745617151260376, 0.5195711255073547, 0.5100654363632202, 0.5269142985343933, 0.5119243264198303, 0.49173831939697266, 0.49189698696136475, 0.4980495572090149, 0.4886552691459656, 0.4820152521133423, 0.45849016308784485, 0.4794655442237854, 0.45822975039482117, 0.4576547145843506, 0.4598883390426636, 0.46931716799736023], "val_accuracy": [0.5419999957084656, 0.6836666464805603, 0.6463333368301392, 0.6793333292007446, 0.7276666760444641, 0.734666645526886, 0.7350000143051147, 0.7726666927337646, 0.7786666750907898, 0.7753333449363708, 0.7803333401679993, 0.7829999923706055, 0.7910000085830688, 0.7776666879653931, 0.79666668176651, 0.7713333368301392, 0.8073333501815796, 0.8140000104904175, 0.7919999957084656, 0.8036666512489319, 0.8223333358764648, 0.8199999928474426, 0.8036666512489319, 0.8226666450500488, 0.8216666579246521, 0.8373333215713501, 0.8240000009536743, 0.8330000042915344, 0.8326666951179504, 0.8320000171661377, 0.8259999752044678]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 7, 4, 3, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10711926966905594, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 4, 5, 1, 0], [0, 0, 1, 1, 2, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [3, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(alpha, tf.math.square(tf.math.subtract(tf.math.negative(grad), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 5], [1, 0, 0, 0, 3], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 1, 1], [7, 2, 5], [6, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(grad), alpha), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098902702331543, 2.3109421730041504, 2.3097269535064697, 2.3109402656555176, 2.310468912124634, 2.309408664703369], "accuracy": [0.0948355570435524, 0.08968432247638702, 0.09206181764602661, 0.09113723784685135, 0.09576013684272766, 0.0948355570435524], "val_loss": [2.3081021308898926, 2.3081021308898926, 2.3081021308898926, 2.3081021308898926, 2.3081021308898926, 2.3081021308898926], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 8, 5, 1, 2, 6, 7, 5], [2, 0, 1, 2, 3, 1, 1, 0, 1], [15, 39, 87], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3, 1, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 22, 13, 9, 2, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(tf.math.sqrt(tf.math.square(tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309904098510742, 2.3090720176696777, 2.309044361114502, 2.308934450149536, 2.310593605041504, 2.309577465057373], "accuracy": [0.09285431355237961, 0.09311848133802414, 0.09074098616838455, 0.09351472556591034, 0.09113723784685135, 0.08928807079792023], "val_loss": [2.3092808723449707, 2.3092808723449707, 2.3092808723449707, 2.3092808723449707, 2.3092808723449707, 2.3092808723449707], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]