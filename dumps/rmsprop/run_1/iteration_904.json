[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8171428442001343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2083263397216797, 1.5897902250289917, 1.1577601432800293, 0.997437596321106, 0.8794988989830017, 0.8466267585754395, 0.7764347791671753, 0.7537984848022461, 0.7494346499443054, 0.6974592804908752, 0.6655280590057373, 0.6765259504318237, 0.644565761089325, 0.6422973275184631, 0.6141677498817444, 0.6104646325111389, 0.5838263630867004, 0.5822897553443909, 0.5942823886871338, 0.562813401222229, 0.5806441307067871, 0.564033567905426, 0.5568597912788391, 0.5363288521766663, 0.5269485116004944, 0.5405209064483643], "accuracy": [0.2705058753490448, 0.5134063959121704, 0.5956941246986389, 0.6478668451309204, 0.6779817938804626, 0.6861709356307983, 0.7123233675956726, 0.7289658188819885, 0.720380425453186, 0.7413815855979919, 0.7531369924545288, 0.7481178045272827, 0.7584202885627747, 0.7601373791694641, 0.767401933670044, 0.7708360552787781, 0.7798177003860474, 0.7844406366348267, 0.7803460359573364, 0.7976489067077637, 0.7839123010635376, 0.7909126877784729, 0.789988100528717, 0.8033285140991211, 0.8020076751708984, 0.7979130744934082], "val_loss": [1.907108187675476, 1.0709879398345947, 0.8637996315956116, 0.7588634490966797, 0.7211753129959106, 0.6863657236099243, 0.6579752564430237, 0.6746103763580322, 0.6157309412956238, 0.5988464951515198, 0.5708603262901306, 0.5647819638252258, 0.575632631778717, 0.5393584966659546, 0.5283025503158569, 0.5242739915847778, 0.5249708890914917, 0.5004080533981323, 0.534716784954071, 0.5322875380516052, 0.47101274132728577, 0.4722101092338562, 0.4907592236995697, 0.47134095430374146, 0.47138452529907227, 0.47791340947151184], "val_accuracy": [0.5513333082199097, 0.6790000200271606, 0.7116666436195374, 0.7296666502952576, 0.7383333444595337, 0.7383333444595337, 0.7593333125114441, 0.749666690826416, 0.7663333415985107, 0.7886666655540466, 0.7793333530426025, 0.7856666445732117, 0.7770000100135803, 0.8130000233650208, 0.800000011920929, 0.8086666464805603, 0.8009999990463257, 0.815666675567627, 0.8053333163261414, 0.7933333516120911, 0.8320000171661377, 0.8243333101272583, 0.8130000233650208, 0.8316666483879089, 0.831333339214325, 0.8233333230018616]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 37, 29], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 7, 1], [0, 0, 1, 0, 2, 3], [0, 39, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 6, 2, 8, 2], [2, 0, 3, 5, 0], [3, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 12, 6, 6, 3, 6, 3, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310027837753296, 2.309356927871704, 2.310356378555298, 2.3103713989257812, 2.3095157146453857, 2.3090479373931885], "accuracy": [0.09140139818191528, 0.09589222073554993, 0.09774138033390045, 0.09074098616838455, 0.09760929644107819, 0.09140139818191528], "val_loss": [2.3094117641448975, 2.3094117641448975, 2.3094117641448975, 2.3094117641448975, 2.3094117641448975, 2.3094117641448975], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 3, 1, 3, 5, 7], [0, 0, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 4, 3, 8, 2], [2, 0, 3, 1, 0], [20, 37], [0, 1], [0], [6], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 13, 7, 6, 3, 10, 6, 4, 1, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(beta, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310183048248291, 2.310229778289795, 2.309169054031372, 2.3112082481384277, 2.309110164642334, 2.3120932579040527], "accuracy": [0.09457138925790787, 0.09272222965955734, 0.09694888442754745, 0.09259014576673508, 0.09509972482919693, 0.09192973375320435], "val_loss": [2.3085427284240723, 2.3085427284240723, 2.3085427284240723, 2.3085427284240723, 2.3085427284240723, 2.3085427284240723], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 1], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [50, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 12, 6, 6, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309192657470703, 2.311077833175659, 2.310610771179199, 2.3089606761932373, 2.3097596168518066, 2.3098666667938232], "accuracy": [0.0936468094587326, 0.09008057415485382, 0.08994849026203156, 0.09034473448991776, 0.09206181764602661, 0.09351472556591034], "val_loss": [2.308413028717041, 2.308413028717041, 2.308413028717041, 2.308413028717041, 2.308413028717041, 2.308413028717041], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]