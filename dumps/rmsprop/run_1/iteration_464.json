[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2078771591186523, 1.6075286865234375, 1.1406943798065186, 0.9774212837219238, 0.8933371305465698, 0.8293015956878662, 0.8057898879051208, 0.7639179229736328, 0.7571496963500977, 0.7146123051643372, 0.7161431312561035, 0.6867641806602478, 0.6689121127128601, 0.6592943072319031, 0.6243066787719727, 0.629554033279419, 0.6155692934989929, 0.6077204346656799, 0.5905930995941162, 0.5906047224998474, 0.5770695209503174, 0.5691714882850647, 0.5568898320198059, 0.5508200526237488, 0.5450237393379211, 0.539374053478241, 0.532173216342926, 0.5278494954109192, 0.5255044102668762, 0.5187579989433289, 0.5091981887817383, 0.4990729093551636, 0.5019968748092651, 0.4927658438682556, 0.485530287027359, 0.4792298972606659, 0.47743794322013855, 0.4777435064315796, 0.47010308504104614, 0.4724756181240082, 0.4530242383480072, 0.4516703188419342, 0.4471305012702942], "accuracy": [0.27565711736679077, 0.4975564777851105, 0.5995244979858398, 0.6572447419166565, 0.6826046705245972, 0.7051908373832703, 0.709021270275116, 0.7166820764541626, 0.7244749665260315, 0.7401928305625916, 0.7358341217041016, 0.7523444890975952, 0.7535332441329956, 0.7642319202423096, 0.7729493975639343, 0.7676661014556885, 0.7717606425285339, 0.7765156626701355, 0.7796856164932251, 0.78113853931427, 0.7837802171707153, 0.7891955971717834, 0.7910447716712952, 0.7959318161010742, 0.8031964302062988, 0.8042530417442322, 0.8099326491355896, 0.8101968169212341, 0.8086118102073669, 0.8083476424217224, 0.8129705190658569, 0.819442629814148, 0.8148196935653687, 0.8222163319587708, 0.8230088353157043, 0.8245938420295715, 0.8289526104927063, 0.8230088353157043, 0.8290846943855286, 0.8313300609588623, 0.835160493850708, 0.8338396549224854, 0.8412362933158875], "val_loss": [1.9176435470581055, 1.1096664667129517, 0.9952131509780884, 0.7959363460540771, 0.7262134552001953, 0.7534621357917786, 0.671560525894165, 0.6530857086181641, 0.620171070098877, 0.7049612402915955, 0.6138025522232056, 0.6108790636062622, 0.6231192350387573, 0.5582932233810425, 0.5559571981430054, 0.5824658274650574, 0.574447512626648, 0.5344535112380981, 0.539560079574585, 0.5126809477806091, 0.527968168258667, 0.5048792362213135, 0.5524765253067017, 0.4909284710884094, 0.4865342974662781, 0.5086934566497803, 0.476494699716568, 0.4852587878704071, 0.4676750898361206, 0.4661997854709625, 0.4678382873535156, 0.44943100214004517, 0.4767490327358246, 0.4578898847103119, 0.4534814953804016, 0.4421061873435974, 0.44393807649612427, 0.4402754306793213, 0.4525589048862457, 0.42805299162864685, 0.43998193740844727, 0.43139761686325073, 0.4330419600009918], "val_accuracy": [0.5233333110809326, 0.6573333144187927, 0.6290000081062317, 0.7089999914169312, 0.734666645526886, 0.7196666598320007, 0.7546666860580444, 0.7593333125114441, 0.7666666507720947, 0.7166666388511658, 0.7639999985694885, 0.7696666717529297, 0.7603333592414856, 0.7850000262260437, 0.7866666913032532, 0.7796666622161865, 0.7820000052452087, 0.7926666736602783, 0.796999990940094, 0.8090000152587891, 0.7950000166893005, 0.8106666803359985, 0.781333327293396, 0.8233333230018616, 0.8240000009536743, 0.7886666655540466, 0.8243333101272583, 0.8116666674613953, 0.8293333053588867, 0.8296666741371155, 0.8240000009536743, 0.8356666564941406, 0.8163333535194397, 0.8293333053588867, 0.8343333601951599, 0.8386666774749756, 0.8343333601951599, 0.8453333377838135, 0.8309999704360962, 0.843999981880188, 0.8296666741371155, 0.8420000076293945, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 0, 6, 3, 9, 2], [5, 0, 4, 1, 0], [71, 1], [0, 1], [0], [1], [0], [1], [0], [5], [0]], "fitness": -0.1565714329481125, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3548760414123535, 5.496857166290283, 2.318347454071045, 2.3053066730499268, 2.303985834121704, 2.3013916015625], "accuracy": [0.2044644057750702, 0.17236824333667755, 0.0956280529499054, 0.10038304328918457, 0.10011887550354004, 0.11121384054422379], "val_loss": [2.292550802230835, 2.3302242755889893, 2.3072447776794434, 2.303224563598633, 2.301027774810791, 2.2991223335266113], "val_accuracy": [0.1509999930858612, 0.10000000149011612, 0.09866666793823242, 0.09866666793823242, 0.10466666519641876, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 3, 1, 5, 5], [0, 0, 1, 0, 2], [0, 34, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [3, 0, 3, 2, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 12, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311129570007324, 2.315340518951416, 2.32830810546875, 2.3804633617401123, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09800554811954498, 0.10130762308835983, 0.10011887550354004, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.312047243118286, 2.317988634109497, 2.328765392303467, 2.5071842670440674, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 43], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 4, 0, 5, 7, 1, 1, 9, 1, 6, 6, 8, 1, 1, 4, 8, 0, 1, 2, 6, 9, 1, 2, 4, 7, 3, 3, 9, 0], [6, 3, 2, 2, 2, 0, 0, 6, 5, 2, 7, 6, 2, 2, 4, 0, 0, 2], [0, 32, 26, 25, 16, 9, 1], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 11, 6, 5, 2, 48, 30, 18, 7, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(grad, tf.math.negative(tf.math.square(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.divide_no_nan(tf.math.divide_no_nan(beta, beta), tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.negative(beta)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad)), grad), beta)), tf.math.add(tf.math.pow(grad, grad), beta)))))), beta), tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [19004164.0, 2840185856.0, 47841759232.0, 343848157184.0, 1501883400192.0, 4951865032704.0], "accuracy": [0.10289261490106583, 0.09932637959718704, 0.09708096832036972, 0.10777968913316727, 0.10368511080741882, 0.09932637959718704], "val_loss": [193598656.0, 10432113664.0, 111963201536.0, 610375761920.0, 2286260060160.0, 6743873028096.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 2, 3, 1, 3, 2], [0, 0, 1, 0, 2], [18, 39, 48], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 3, 1, 5], [16, 37], [0, 1, 1], [3], [6, 2], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 3, 4, 3, 9, 5, 4, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311340808868408, 2.311068534851074, 2.31056547164917, 2.309173583984375, 2.310002326965332, 2.3108134269714355], "accuracy": [0.09047681838274002, 0.09496764093637466, 0.09628847241401672, 0.09509972482919693, 0.08875974267721176, 0.08955223858356476], "val_loss": [2.3084051609039307, 2.3084051609039307, 2.3084051609039307, 2.3084051609039307, 2.3084051609039307, 2.3084051609039307], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]