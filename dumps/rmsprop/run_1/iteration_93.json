[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7848571538925171, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2124791145324707, 1.6061655282974243, 1.1501013040542603, 1.0058835744857788, 0.8870962262153625, 0.8184253573417664, 0.8054304122924805, 0.7558853030204773, 0.7312303185462952, 0.7001200318336487, 0.7075492143630981, 0.6622375249862671, 0.6534790396690369, 0.6412592530250549, 0.63713538646698, 0.6100770831108093, 0.6259672045707703], "accuracy": [0.27499669790267944, 0.5004622936248779, 0.5995244979858398, 0.6429798007011414, 0.6748117804527283, 0.7016246318817139, 0.7005679607391357, 0.7223616242408752, 0.7205125093460083, 0.7436270117759705, 0.7351737022399902, 0.752212405204773, 0.7560427784919739, 0.7588165402412415, 0.7597411274909973, 0.7729493975639343, 0.7652885913848877], "val_loss": [1.9308677911758423, 1.0962224006652832, 0.8963542580604553, 0.8215891718864441, 0.7309579253196716, 0.7021087408065796, 0.6772234439849854, 0.6550789475440979, 0.6370022892951965, 0.6135810613632202, 0.6189492344856262, 0.5880223512649536, 0.5865158438682556, 0.5796878337860107, 0.5585471391677856, 0.5678931474685669, 0.5781524777412415], "val_accuracy": [0.4856666624546051, 0.6493333578109741, 0.703000009059906, 0.6940000057220459, 0.7206666469573975, 0.7263333201408386, 0.7436666488647461, 0.765999972820282, 0.7540000081062317, 0.7766666412353516, 0.7723333239555359, 0.7940000295639038, 0.7876666784286499, 0.7866666913032532, 0.7919999957084656, 0.7933333516120911, 0.781333327293396]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 0], [2, 0, 3, 1, 3], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 8, 5, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 5], [0, 1, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 4, 9, 2], [2, 0, 3, 2, 0], [5, 1], [1, 1], [0], [0], [22], [1], [0], [2], [0]], "fitness": -0.0974285677075386, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [20051579109376.0, 22398092967936.0, 22347908120576.0, 22503590199296.0, 23395882237952.0, 22769890754560.0], "accuracy": [0.09642054885625839, 0.1026284471154213, 0.10540219396352768, 0.108440101146698, 0.10289261490106583, 0.10659094154834747], "val_loss": [22343489421312.0, 22343489421312.0, 22343489421312.0, 22343489421312.0, 22343489421312.0, 22343489421312.0], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 3, 2, 3, 5, 4, 8, 4, 6, 7, 4, 6, 6, 2, 3, 5, 4, 1, 9, 4], [0, 3, 1, 0, 2, 3, 3, 0, 3, 1, 2, 0, 0, 0, 2, 0, 2], [0, 39, 39, 23, 17, 7, 2, 4], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 0, 2, 0, 8, 2], [2, 0, 3, 3, 1], [16, 1], [0, 1, 1], [1], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 38, 21, 17, 8, 4, 3, 1, 0, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.pow(tf.math.sqrt(grad), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), tf.math.divide_no_nan(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(tf.math.square(tf.math.pow(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3117921352386475, 2.3105661869049072, 2.3097879886627197, 2.3096730709075928, 2.310800552368164, 2.310068130493164], "accuracy": [0.08981640636920929, 0.09906221181154251, 0.09509972482919693, 0.0886276587843895, 0.09272222965955734, 0.08981640636920929], "val_loss": [2.3097007274627686, 2.3097007274627686, 2.3097007274627686, 2.3097007274627686, 2.3097007274627686, 2.3097007274627686], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 21], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.08342856913805008, "mapping_values": [1, 7, 4, 3, 1, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1042567139426304.0, 1146209196572672.0, 1169528453070848.0, 1280708244930560.0, 1192015559655424.0, 1218440882814976.0], "accuracy": [0.09708096832036972, 0.09325055778026581, 0.09760929644107819, 0.09536388516426086, 0.0936468094587326, 0.09496764093637466], "val_loss": [1103887662579712.0, 1103895044554752.0, 1103840015286272.0, 1103840015286272.0, 1103840015286272.0, 1103840015286272.0], "val_accuracy": [0.08266666531562805, 0.08266666531562805, 0.08266666531562805, 0.08266666531562805, 0.08266666531562805, 0.08266666531562805]}}]