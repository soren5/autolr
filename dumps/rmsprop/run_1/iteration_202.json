[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8740000128746033, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.597489356994629, 0.8611953854560852, 0.7081209421157837, 0.6296775937080383, 0.5730003714561462, 0.5167413353919983, 0.4906698763370514, 0.471977174282074, 0.4273917078971863, 0.40803420543670654, 0.38700729608535767, 0.3714583218097687, 0.34688320755958557, 0.3415917456150055, 0.3209376633167267, 0.32321280241012573], "accuracy": [0.4171179533004761, 0.6911900639533997, 0.7388719916343689, 0.7683265209197998, 0.789988100528717, 0.8129705190658569, 0.8232730031013489, 0.8350284099578857, 0.8465195894241333, 0.8527275323867798, 0.8618412613868713, 0.8687095642089844, 0.874389111995697, 0.8759741187095642, 0.8873332738876343, 0.8799365758895874], "val_loss": [0.8761370182037354, 0.6684905886650085, 0.5429312586784363, 0.5748382210731506, 0.5238962173461914, 0.49176645278930664, 0.43191173672676086, 0.41761642694473267, 0.4223204255104065, 0.39893120527267456, 0.3709444999694824, 0.3756745457649231, 0.42260605096817017, 0.3604733943939209, 0.3718315362930298, 0.3813425600528717], "val_accuracy": [0.6769999861717224, 0.7459999918937683, 0.7976666688919067, 0.7896666526794434, 0.7996666431427002, 0.8173333406448364, 0.8506666421890259, 0.8529999852180481, 0.846666693687439, 0.8569999933242798, 0.8709999918937683, 0.8709999918937683, 0.8410000205039978, 0.8676666617393494, 0.8683333396911621, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.805142879486084, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2123193740844727, 1.6090035438537598, 1.1647324562072754, 0.9775629639625549, 0.8622516989707947, 0.8189947009086609, 0.7808603644371033, 0.7448591589927673, 0.7540578246116638, 0.7030505537986755, 0.7034979462623596, 0.6738191843032837, 0.6405901908874512, 0.63669353723526, 0.6301418542861938, 0.611606240272522, 0.6017112731933594, 0.5924192667007446, 0.575805127620697, 0.5655502080917358, 0.5604652166366577, 0.5492902994155884, 0.5497655868530273, 0.5269801020622253, 0.5308699607849121, 0.5227231383323669, 0.5169973373413086, 0.5161601305007935, 0.49984657764434814, 0.4964280426502228, 0.4926416277885437, 0.4745110869407654, 0.48448172211647034, 0.47640395164489746, 0.4615601599216461], "accuracy": [0.2650904655456543, 0.5066701769828796, 0.5995244979858398, 0.6469422578811646, 0.6885483860969543, 0.6956809163093567, 0.7102100253105164, 0.7263241410255432, 0.7164179086685181, 0.737022876739502, 0.7342491149902344, 0.7495707273483276, 0.7606657147407532, 0.7626469135284424, 0.7609298825263977, 0.774270236492157, 0.7728173136711121, 0.7770439982414246, 0.7869502305984497, 0.7857614755630493, 0.7922335267066956, 0.7940827012062073, 0.793422281742096, 0.805177628993988, 0.800290584564209, 0.8049134612083435, 0.8095363974571228, 0.8030643463134766, 0.8121780753135681, 0.8144234418869019, 0.8183859586715698, 0.8234050869941711, 0.8183859586715698, 0.8238013386726379, 0.8238013386726379], "val_loss": [1.9214017391204834, 1.1867027282714844, 0.8646117448806763, 0.7940276861190796, 0.7326278686523438, 0.6912398338317871, 0.6651041507720947, 0.6818829774856567, 0.6304183602333069, 0.64351886510849, 0.5753614902496338, 0.5961711406707764, 0.5713327527046204, 0.5686562657356262, 0.558014452457428, 0.5329237580299377, 0.5354924201965332, 0.5360450744628906, 0.516191303730011, 0.5235323309898376, 0.5015016794204712, 0.5396887063980103, 0.49354687333106995, 0.48930326104164124, 0.49822983145713806, 0.4853145480155945, 0.4814777970314026, 0.4959956407546997, 0.4645342528820038, 0.4617743194103241, 0.46433064341545105, 0.4807715117931366, 0.4552551209926605, 0.45616352558135986, 0.4568363428115845], "val_accuracy": [0.609666645526886, 0.625, 0.7039999961853027, 0.7086666822433472, 0.7293333411216736, 0.737333357334137, 0.7406666874885559, 0.7463333606719971, 0.7666666507720947, 0.7543333172798157, 0.7863333225250244, 0.7773333191871643, 0.7856666445732117, 0.7773333191871643, 0.7856666445732117, 0.8069999814033508, 0.8026666641235352, 0.8029999732971191, 0.8136666417121887, 0.8009999990463257, 0.8149999976158142, 0.7919999957084656, 0.8206666707992554, 0.8220000267028809, 0.8169999718666077, 0.8193333148956299, 0.8199999928474426, 0.812333345413208, 0.8266666531562805, 0.831333339214325, 0.8240000009536743, 0.8193333148956299, 0.831333339214325, 0.8306666612625122, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 7, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 3, 2], [2, 0, 4, 1, 0], [16, 37], [0, 0, 1, 0, 1, 0, 1], [0, 6, 3, 8], [6, 5, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 3, 1, 1, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038549423217773, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 9, 9, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [9], [6], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309241533279419, 2.309940814971924, 2.3101398944854736, 2.310018539428711, 2.3104026317596436, 2.3106296062469482], "accuracy": [0.09259014576673508, 0.08611807972192764, 0.08519349992275238, 0.09496764093637466, 0.0940430611371994, 0.08994849026203156], "val_loss": [2.309255599975586, 2.309255599975586, 2.309255599975586, 2.309255599975586, 2.309255599975586, 2.309255599975586], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 7, 0, 6, 9, 8, 2], [2, 1, 3, 1, 1], [16, 1], [1, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 1, 1, 1, 8, 6, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), alpha)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100271224975586, 2.3104612827301025, 2.309457302093506, 2.3105688095092773, 2.309536933898926, 2.310418128967285], "accuracy": [0.08770307898521423, 0.09311848133802414, 0.08374059200286865, 0.09311848133802414, 0.09192973375320435, 0.0886276587843895], "val_loss": [2.308577060699463, 2.308577060699463, 2.308577060699463, 2.308577060699463, 2.308577060699463, 2.308577060699463], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 7], [1, 0, 1, 0, 1, 0], [0, 29, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 0, 2, 4, 6, 9], [6, 6, 7, 2], [0], [0, 1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 13, 7, 6, 3, 10, 6, 4, 1, 10, 6, 4, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(grad), tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3102166652679443, 2.310582160949707, 2.309687852859497, 2.3103718757629395, 2.3096415996551514, 2.3106908798217773], "accuracy": [0.09325055778026581, 0.09074098616838455, 0.09800554811954498, 0.08902391046285629, 0.09192973375320435, 0.0882314071059227], "val_loss": [2.3087046146392822, 2.3087046146392822, 2.3087046146392822, 2.3087046146392822, 2.3087046146392822, 2.3087046146392822], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]