[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.8768571615219116, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5719877481460571, 0.905035674571991, 0.7132470011711121, 0.6290118098258972, 0.5772889256477356, 0.5300399661064148, 0.4984924793243408, 0.4696540832519531, 0.4508989453315735, 0.4295291006565094, 0.3928512632846832, 0.36864352226257324, 0.3546794652938843, 0.3604147732257843, 0.3369254469871521, 0.3110351264476776, 0.3083447813987732, 0.29889360070228577, 0.28484824299812317, 0.2717207074165344, 0.2562370300292969, 0.24966870248317719, 0.2422468364238739], "accuracy": [0.44710078835487366, 0.6837934255599976, 0.7405890822410583, 0.7707040309906006, 0.7890635132789612, 0.8064984679222107, 0.8207634687423706, 0.8280280232429504, 0.839519202709198, 0.8490291833877563, 0.8580108284950256, 0.8656716346740723, 0.8728041052818298, 0.8716153502464294, 0.8775591254234314, 0.8887861371040344, 0.8902390599250793, 0.8963148593902588, 0.8939374089241028, 0.9019944667816162, 0.9070135951042175, 0.9078060984611511, 0.9115044474601746], "val_loss": [0.9975670576095581, 0.6447177529335022, 0.5735924243927002, 0.5706664323806763, 0.4915817081928253, 0.4848896563053131, 0.4657159447669983, 0.4201098680496216, 0.4190950393676758, 0.4140464961528778, 0.36485856771469116, 0.36031535267829895, 0.3616061210632324, 0.40839770436286926, 0.363942414522171, 0.3482498228549957, 0.3495192527770996, 0.3338126540184021, 0.3419082760810852, 0.3381653130054474, 0.3596552014350891, 0.3505549430847168, 0.36649438738822937], "val_accuracy": [0.6309999823570251, 0.762666642665863, 0.7979999780654907, 0.7820000052452087, 0.8320000171661377, 0.8116666674613953, 0.8339999914169312, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8703333139419556, 0.8709999918937683, 0.8659999966621399, 0.847000002861023, 0.8709999918937683, 0.8723333477973938, 0.8743333220481873, 0.8836666941642761, 0.8713333606719971, 0.8773333430290222, 0.8733333349227905, 0.8759999871253967, 0.8706666827201843]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210973024368286, 1.6114705801010132, 1.1440682411193848, 1.0127965211868286, 0.9024929404258728, 0.8411812782287598, 0.8149612545967102, 0.7680286169052124, 0.740905225276947, 0.7224007844924927, 0.6898453831672668, 0.6734868884086609, 0.6595451235771179, 0.6510874629020691, 0.634806752204895, 0.6139698028564453, 0.6124619245529175, 0.5742813348770142, 0.5755113363265991, 0.567776083946228, 0.5753586888313293, 0.5537807941436768, 0.5552743673324585, 0.5322687029838562], "accuracy": [0.26997753977775574, 0.5112931132316589, 0.6070532202720642, 0.6445648074150085, 0.6752080321311951, 0.6913221478462219, 0.7014925479888916, 0.7156254053115845, 0.7231541275978088, 0.7316074371337891, 0.7474573850631714, 0.7499669790267944, 0.759609043598175, 0.7635715007781982, 0.7640998363494873, 0.774798572063446, 0.7733456492424011, 0.7876105904579163, 0.7853652238845825, 0.7922335267066956, 0.7911768555641174, 0.7969884872436523, 0.7987055778503418, 0.802800178527832], "val_loss": [1.924526572227478, 1.1756025552749634, 0.8627476692199707, 0.7928194999694824, 0.7018417716026306, 0.6692178845405579, 0.6570174694061279, 0.6450943350791931, 0.6311501264572144, 0.6118342280387878, 0.5953683257102966, 0.5906592607498169, 0.6008690595626831, 0.5677064061164856, 0.5602875351905823, 0.5766983032226562, 0.5339905023574829, 0.5282710194587708, 0.5128201246261597, 0.5280353426933289, 0.5069860816001892, 0.5101604461669922, 0.4845339357852936, 0.49909502267837524], "val_accuracy": [0.628333330154419, 0.612666666507721, 0.7053333520889282, 0.7110000252723694, 0.7526666522026062, 0.7590000033378601, 0.7490000128746033, 0.7606666684150696, 0.7646666765213013, 0.7689999938011169, 0.7823333144187927, 0.7836666703224182, 0.7730000019073486, 0.7956666946411133, 0.784333348274231, 0.7806666493415833, 0.8053333163261414, 0.8113333582878113, 0.8223333358764648, 0.8050000071525574, 0.8180000185966492, 0.812333345413208, 0.8169999718666077, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 5, 3, 1, 0], [16, 37], [1, 1], [0], [2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.subtract(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [538317389824.0, 5909.8330078125, 10919.9404296875, 15917.4638671875, 20945.587890625, 25959.392578125], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3827.662109375, 8830.28125, 13835.416015625, 18849.267578125, 23862.314453125, 28871.712890625], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2, 2, 7, 6, 6], [0, 0, 1, 0, 2, 0, 0, 0, 1, 0], [0, 39, 39, 81, 94, 45, 21], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 0, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 11, 10, 7, 8, 5, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.458137035369873, 5.877161502838135, 2.3113863468170166, 2.305698871612549, 2.304008722305298, 1208.8248291015625, 143806208.0], "accuracy": [0.16431118547916412, 0.09800554811954498, 0.09721305221319199, 0.09787346422672272, 0.09074098616838455, 0.09813763201236725, 0.09008057415485382], "val_loss": [9.543519973754883, 2.314952850341797, 2.3054325580596924, 2.304413318634033, 2.3026113510131836, 1008040832.0, 2.320671796798706], "val_accuracy": [0.0989999994635582, 0.10233332961797714, 0.10133333504199982, 0.0976666659116745, 0.09733333438634872, 0.08566666394472122, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 68, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 37], [0, 1], [0], [6], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103291988372803, 2.3099122047424316, 2.309629440307617, 2.309661388397217, 2.3103930950164795, 2.3103015422821045], "accuracy": [0.09179764986038208, 0.09047681838274002, 0.09126931428909302, 0.10077928751707077, 0.09509972482919693, 0.09391097724437714], "val_loss": [2.3095264434814453, 2.3095264434814453, 2.3095264434814453, 2.3095264434814453, 2.3095264434814453, 2.3095264434814453], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 3], [0, 39, 57], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [7, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 1, 0, 3, 0, 7, 8, 2, 6, 6, 8, 6, 6, 1, 8, 9, 7, 4, 6, 1, 8, 7, 6, 9, 6, 7], [0, 2, 5, 3, 7, 0, 6, 5, 6, 1, 2, 3, 1, 5, 0, 3, 3], [0, 15, 2, 52, 92], [1], [0], [3], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 44, 27, 17, 5, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(sigma, grad)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.sqrt(grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), alpha))), tf.math.divide_no_nan(grad, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), sigma)))))), sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.310014486312866, 2.3095827102661133, 2.3086674213409424, 2.3102126121520996, 2.3100669384002686, 2.3094050884246826], "accuracy": [0.09391097724437714, 0.09338264167308807, 0.09866596013307571, 0.0952318087220192, 0.09589222073554993, 0.09681680053472519], "val_loss": [2.307737350463867, 2.307737350463867, 2.307737350463867, 2.307737350463867, 2.307737350463867, 2.307737350463867], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]