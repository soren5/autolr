[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206076145172119, 1.5884687900543213, 1.15999436378479, 0.9662244319915771, 0.8865777254104614, 0.8189735412597656, 0.7768112421035767, 0.7713678479194641, 0.720288872718811, 0.7015349268913269, 0.6856372952461243, 0.654974639415741, 0.6434313654899597, 0.6452319622039795, 0.6174200773239136, 0.6034244298934937, 0.5893091559410095, 0.595234751701355, 0.5724549889564514, 0.5595330595970154, 0.555650532245636, 0.5454225540161133, 0.5517927408218384, 0.5348809957504272, 0.5257046818733215, 0.5137822031974792, 0.5202212929725647, 0.5121989846229553, 0.5033382773399353, 0.5020560026168823, 0.48987123370170593, 0.48727115988731384, 0.4753972291946411, 0.47673851251602173, 0.4594272971153259, 0.4601300358772278, 0.4620564877986908, 0.45805418491363525, 0.44986873865127563, 0.445454865694046, 0.4498388469219208, 0.44177237153053284, 0.4326009452342987, 0.42427051067352295, 0.4251510202884674, 0.4220763146877289, 0.4152233600616455, 0.4085601568222046, 0.40763911604881287, 0.41958320140838623, 0.4041667878627777, 0.40286126732826233, 0.393190860748291, 0.3921925127506256, 0.3940165340900421, 0.3905119001865387, 0.3880191445350647], "accuracy": [0.2685246467590332, 0.5037643909454346, 0.6040153503417969, 0.6499801874160767, 0.677189290523529, 0.702681303024292, 0.718399167060852, 0.7124554514884949, 0.7316074371337891, 0.7450799345970154, 0.7469290494918823, 0.7572315335273743, 0.7593448758125305, 0.763967752456665, 0.7709681391716003, 0.7779685854911804, 0.7799497842788696, 0.7757231593132019, 0.7854973077774048, 0.7877426743507385, 0.7917051911354065, 0.7975168228149414, 0.798309326171875, 0.800290584564209, 0.8031964302062988, 0.8095363974571228, 0.8105930685997009, 0.8121780753135681, 0.8117818236351013, 0.8121780753135681, 0.8183859586715698, 0.824329674243927, 0.8222163319587708, 0.8198388814926147, 0.8294808864593506, 0.8310658931732178, 0.8317263126373291, 0.8313300609588623, 0.8350284099578857, 0.8393871188163757, 0.8317263126373291, 0.8385946154594421, 0.8405758738517761, 0.8380662798881531, 0.8428213000297546, 0.8432175517082214, 0.8451988101005554, 0.847840428352356, 0.8492933511734009, 0.8450667262077332, 0.8498216867446899, 0.8515387773513794, 0.8562937378883362, 0.8555012345314026, 0.8573504090309143, 0.8541803956031799, 0.8556333184242249], "val_loss": [1.9085814952850342, 1.100684404373169, 0.9199330806732178, 0.8401692509651184, 0.7116340398788452, 0.677867591381073, 0.7003276348114014, 0.6973869800567627, 0.6392666101455688, 0.7060302495956421, 0.6067033410072327, 0.5889583230018616, 0.6689345836639404, 0.5650933980941772, 0.555009126663208, 0.5410895943641663, 0.5533815026283264, 0.5198062062263489, 0.534151554107666, 0.5180075764656067, 0.5095482468605042, 0.5230634212493896, 0.5077494978904724, 0.49029818177223206, 0.4817783236503601, 0.5020191669464111, 0.48027774691581726, 0.48342058062553406, 0.5117876529693604, 0.46338629722595215, 0.47110119462013245, 0.45240095257759094, 0.49364957213401794, 0.45281511545181274, 0.4400397539138794, 0.4421652555465698, 0.4573754370212555, 0.45000723004341125, 0.43182626366615295, 0.4401971101760864, 0.4373152554035187, 0.4235374629497528, 0.41466081142425537, 0.4309611916542053, 0.4176504611968994, 0.43525218963623047, 0.4114059507846832, 0.4140286147594452, 0.42104727029800415, 0.4107761085033417, 0.4072490334510803, 0.4015871286392212, 0.4077511429786682, 0.3995252251625061, 0.3943485617637634, 0.399306058883667, 0.3928961455821991], "val_accuracy": [0.559333324432373, 0.6370000243186951, 0.6826666593551636, 0.7036666870117188, 0.734000027179718, 0.7443333268165588, 0.7146666646003723, 0.7129999995231628, 0.7356666922569275, 0.7386666536331177, 0.7643333077430725, 0.7776666879653931, 0.7459999918937683, 0.7886666655540466, 0.7900000214576721, 0.8066666722297668, 0.778333306312561, 0.8119999766349792, 0.7963333129882812, 0.7983333468437195, 0.8086666464805603, 0.8036666512489319, 0.8166666626930237, 0.8199999928474426, 0.8236666917800903, 0.8100000023841858, 0.8213333487510681, 0.8226666450500488, 0.79666668176651, 0.8256666660308838, 0.8169999718666077, 0.8330000042915344, 0.8146666884422302, 0.8286666870117188, 0.8356666564941406, 0.8333333134651184, 0.8243333101272583, 0.8273333311080933, 0.8379999995231628, 0.840666651725769, 0.8309999704360962, 0.846666693687439, 0.846666693687439, 0.8370000123977661, 0.8476666808128357, 0.8356666564941406, 0.8503333330154419, 0.8513333201408386, 0.8443333506584167, 0.8506666421890259, 0.8519999980926514, 0.8543333411216736, 0.847000002861023, 0.8510000109672546, 0.8529999852180481, 0.8533333539962769, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2101199626922607, 1.6090840101242065, 1.1411794424057007, 1.0134636163711548, 0.8878315687179565, 0.8407684564590454, 0.7875564098358154, 0.7539393901824951, 0.7348839640617371, 0.7032973766326904, 0.6935900449752808, 0.6676867008209229, 0.6376898288726807, 0.6538715958595276, 0.6248920559883118, 0.6044005155563354, 0.5991067290306091, 0.5991845726966858, 0.5848777294158936, 0.5651145577430725, 0.5526111721992493, 0.5518876314163208, 0.5398354530334473, 0.5255290865898132, 0.5279883146286011, 0.5185160040855408, 0.5149905681610107, 0.5106868147850037, 0.499237596988678, 0.49813270568847656, 0.4878815710544586, 0.4845122992992401, 0.48167163133621216, 0.4797836244106293, 0.46997085213661194, 0.4637073278427124, 0.46336784958839417, 0.4646932780742645], "accuracy": [0.26984545588493347, 0.5040285587310791, 0.6065248847007751, 0.6376964449882507, 0.6761326193809509, 0.6934354901313782, 0.7132478952407837, 0.7234182953834534, 0.7334566116333008, 0.7412495017051697, 0.7445515990257263, 0.7528728246688843, 0.7700436115264893, 0.7604015469551086, 0.7740060687065125, 0.7788931727409363, 0.7832518815994263, 0.7800818681716919, 0.7844406366348267, 0.7935543656349182, 0.7954035401344299, 0.798309326171875, 0.804649293422699, 0.8087438941001892, 0.8067626357078552, 0.8148196935653687, 0.8109893202781677, 0.816008448600769, 0.8161405324935913, 0.8202351331710815, 0.8232730031013489, 0.8255184292793274, 0.8267071843147278, 0.82683926820755, 0.828820526599884, 0.8325188159942627, 0.8313300609588623, 0.8342359066009521], "val_loss": [1.9271494150161743, 1.1084985733032227, 0.8655214309692383, 0.8269566297531128, 0.7099605202674866, 0.7042403817176819, 0.6688944697380066, 0.6574310660362244, 0.6168732047080994, 0.6474175453186035, 0.6132509112358093, 0.5969004034996033, 0.5878827571868896, 0.5566645264625549, 0.5552560091018677, 0.5449584722518921, 0.5764200687408447, 0.615372359752655, 0.5227670073509216, 0.5083756446838379, 0.5264276266098022, 0.4908407926559448, 0.48832470178604126, 0.502423107624054, 0.48518362641334534, 0.4936593770980835, 0.4755187928676605, 0.49268171191215515, 0.475555956363678, 0.46204516291618347, 0.45719778537750244, 0.457282155752182, 0.4514155983924866, 0.44692105054855347, 0.446999192237854, 0.4711706042289734, 0.4622904062271118, 0.4404377341270447], "val_accuracy": [0.47600001096725464, 0.640333354473114, 0.7039999961853027, 0.6899999976158142, 0.7400000095367432, 0.7256666421890259, 0.7543333172798157, 0.7536666393280029, 0.7666666507720947, 0.7446666955947876, 0.7739999890327454, 0.7713333368301392, 0.7683333158493042, 0.8040000200271606, 0.7879999876022339, 0.7876666784286499, 0.7666666507720947, 0.7450000047683716, 0.8116666674613953, 0.8076666593551636, 0.7900000214576721, 0.8199999928474426, 0.8176666498184204, 0.8119999766349792, 0.8230000138282776, 0.8230000138282776, 0.8223333358764648, 0.8109999895095825, 0.8236666917800903, 0.8309999704360962, 0.8349999785423279, 0.8326666951179504, 0.8379999995231628, 0.8309999704360962, 0.8339999914169312, 0.8163333535194397, 0.8323333263397217, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2045195116116185e+31, 1093.0535888671875, 2058.779541015625, 3026.36962890625, 3991.456787109375, 4957.00927734375], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [693.2345581054688, 1656.648193359375, 2622.261962890625, 3585.166259765625, 4548.4755859375, 5512.9990234375], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 2, 1, 9, 2, 4], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 1, 0], [2, 4, 3, 1, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 4, 5, 1, 6, 7, 7, 7, 8], [0, 2, 0, 1, 6, 7, 1], [57, 49], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 15, 9, 6, 1, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(tf.math.subtract(alpha, alpha), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.add(tf.math.add(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), grad), grad)), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 1, 6], [2, 0, 3, 1, 1], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105292320251465, 2.3098654747009277, 2.3091535568237305, 2.309976577758789, 2.308659791946411, 2.310417652130127], "accuracy": [0.09219389408826828, 0.0948355570435524, 0.0936468094587326, 0.0948355570435524, 0.08796724677085876, 0.08942015469074249], "val_loss": [2.308011293411255, 2.308011293411255, 2.308011293411255, 2.308011293411255, 2.308011293411255, 2.308011293411255], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 5, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 4, 5], [2, 0, 3, 1, 0, 2], [16, 1], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.math.square(alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090312480926514, 2.3095383644104004, 2.3088674545288086, 2.3087124824523926, 2.309859037399292, 2.309630870819092], "accuracy": [0.09126931428909302, 0.0936468094587326, 0.09008057415485382, 0.0940430611371994, 0.09206181764602661, 0.0944393053650856], "val_loss": [2.308912515640259, 2.308912515640259, 2.308912515640259, 2.308912515640259, 2.308912515640259, 2.308912515640259], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}, "mapping_values": [1, 2, 1, 1, 1, 15, 9, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 19}]