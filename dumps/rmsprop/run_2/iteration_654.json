[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209068775177002, 1.5974416732788086, 1.134866714477539, 1.0026984214782715, 0.8512426018714905, 0.8257498741149902, 0.7917010188102722, 0.7467281818389893, 0.7302415370941162, 0.7119068503379822, 0.6920165419578552, 0.6847876310348511, 0.6466887593269348, 0.6357740759849548, 0.6245031952857971, 0.6019430160522461, 0.5944825410842896, 0.5873782634735107, 0.5749595761299133, 0.5817606449127197, 0.5600523948669434, 0.5621675848960876, 0.5381603240966797, 0.5424285531044006, 0.5333812832832336, 0.5230448842048645, 0.5262870788574219, 0.5235370397567749, 0.50624018907547, 0.5019245743751526, 0.49340003728866577, 0.49242404103279114, 0.47315463423728943, 0.48897242546081543, 0.4728822410106659, 0.4675509035587311, 0.47896701097488403, 0.45725217461586, 0.4575553238391876, 0.45630937814712524, 0.45171666145324707, 0.4422038793563843, 0.44744229316711426, 0.4459269642829895, 0.4374036490917206, 0.4283345341682434, 0.42480704188346863, 0.42429402470588684, 0.4167683720588684, 0.41483214497566223, 0.40626204013824463, 0.40451204776763916, 0.4004646837711334, 0.4036083221435547, 0.39872995018959045, 0.39539578557014465, 0.3861853778362274, 0.38556143641471863, 0.38935279846191406, 0.3860546052455902, 0.3777351677417755, 0.3786410093307495, 0.37390658259391785, 0.3642876446247101, 0.36577263474464417, 0.36710113286972046, 0.3676254153251648, 0.3649776577949524, 0.36403989791870117, 0.3515830636024475, 0.35053709149360657, 0.3557090163230896, 0.34701886773109436, 0.3438720405101776, 0.34266722202301025, 0.34875205159187317, 0.3388306796550751, 0.3352836072444916, 0.3326003849506378, 0.33481743931770325, 0.3279418647289276, 0.32734814286231995], "accuracy": [0.2631092369556427, 0.505349338054657, 0.5972790718078613, 0.644300639629364, 0.6929071545600891, 0.6940959095954895, 0.7092854380607605, 0.7252674698829651, 0.7331924438476562, 0.7423061728477478, 0.7489103078842163, 0.7432307600975037, 0.754589855670929, 0.7609298825263977, 0.76542067527771, 0.7770439982414246, 0.778761088848114, 0.7878747582435608, 0.787082314491272, 0.7820631265640259, 0.7874785661697388, 0.7911768555641174, 0.7979130744934082, 0.7957997918128967, 0.7968564033508301, 0.8050455451011658, 0.8006868362426758, 0.8054417967796326, 0.8115176558494568, 0.8153480291366577, 0.8185180425643921, 0.8191784620285034, 0.8235371708869934, 0.8120459914207458, 0.8249900937080383, 0.8300092220306396, 0.821820080280304, 0.83119797706604, 0.832650899887085, 0.829216718673706, 0.837141752243042, 0.837537944316864, 0.833179235458374, 0.833179235458374, 0.8367455005645752, 0.8381983637809753, 0.8422929644584656, 0.8470479249954224, 0.8444063067436218, 0.8449346423149109, 0.8525954484939575, 0.8469158411026001, 0.8492933511734009, 0.8504821062088013, 0.8565579056739807, 0.8524633646011353, 0.858671247959137, 0.8598600029945374, 0.8527275323867798, 0.8529917001724243, 0.8613129258155823, 0.859199583530426, 0.8605204224586487, 0.86553955078125, 0.863029956817627, 0.8613129258155823, 0.8652753829956055, 0.8693699836730957, 0.8628978729248047, 0.8722757697105408, 0.874389111995697, 0.868049144744873, 0.8709549307823181, 0.8706908226013184, 0.8741249442100525, 0.868049144744873, 0.8757099509239197, 0.8768987059593201, 0.8745211958885193, 0.8766345381736755, 0.8823140859603882, 0.8761062026023865], "val_loss": [1.9140123128890991, 1.0990186929702759, 0.8669599890708923, 0.7875248193740845, 0.7670281529426575, 0.710955023765564, 0.659625232219696, 0.6357848048210144, 0.6227407455444336, 0.636518657207489, 0.608841061592102, 0.5927237272262573, 0.5738435983657837, 0.5927469730377197, 0.555173397064209, 0.5477489233016968, 0.5303117036819458, 0.5288186073303223, 0.5700315237045288, 0.5359216928482056, 0.4994901418685913, 0.5089178681373596, 0.49444469809532166, 0.48817747831344604, 0.5060274600982666, 0.5165578722953796, 0.4801650047302246, 0.47211626172065735, 0.4737406075000763, 0.47843262553215027, 0.5149474143981934, 0.4564386308193207, 0.4624178111553192, 0.46695059537887573, 0.44901707768440247, 0.4748590886592865, 0.4550744295120239, 0.4456436038017273, 0.44271981716156006, 0.47122225165367126, 0.4418579041957855, 0.4463536739349365, 0.44347909092903137, 0.4564140737056732, 0.45087406039237976, 0.43978777527809143, 0.4352509081363678, 0.42601239681243896, 0.4339462220668793, 0.43548479676246643, 0.4306448996067047, 0.41721004247665405, 0.4164315164089203, 0.4158787727355957, 0.4237435758113861, 0.42606106400489807, 0.410091757774353, 0.41163304448127747, 0.4236430525779724, 0.40460440516471863, 0.41039344668388367, 0.4013518989086151, 0.39487940073013306, 0.4123518168926239, 0.40437257289886475, 0.40396231412887573, 0.3954259157180786, 0.3995422422885895, 0.3935778737068176, 0.3919050991535187, 0.3926393985748291, 0.38943415880203247, 0.40882396697998047, 0.3964425027370453, 0.4027918577194214, 0.4088568389415741, 0.38566669821739197, 0.38412395119667053, 0.3862207531929016, 0.38616055250167847, 0.3904309868812561, 0.39399778842926025], "val_accuracy": [0.5590000152587891, 0.6579999923706055, 0.6956666707992554, 0.7160000205039978, 0.7020000219345093, 0.7193333506584167, 0.7506666779518127, 0.7620000243186951, 0.7486666440963745, 0.7689999938011169, 0.768666684627533, 0.7736666798591614, 0.7886666655540466, 0.7799999713897705, 0.7996666431427002, 0.8056666851043701, 0.8056666851043701, 0.8063333630561829, 0.7853333353996277, 0.8019999861717224, 0.8209999799728394, 0.8140000104904175, 0.8213333487510681, 0.8209999799728394, 0.815666675567627, 0.8086666464805603, 0.828000009059906, 0.8336666822433472, 0.8306666612625122, 0.831333339214325, 0.8076666593551636, 0.8339999914169312, 0.8353333473205566, 0.8353333473205566, 0.8433333039283752, 0.8316666483879089, 0.8396666646003723, 0.843999981880188, 0.846666693687439, 0.8299999833106995, 0.8429999947547913, 0.8433333039283752, 0.8483333587646484, 0.8306666612625122, 0.8420000076293945, 0.8473333120346069, 0.8423333168029785, 0.8546666502952576, 0.8516666889190674, 0.8460000157356262, 0.8479999899864197, 0.8529999852180481, 0.8583333492279053, 0.8519999980926514, 0.8473333120346069, 0.8516666889190674, 0.8629999756813049, 0.8576666712760925, 0.8556666374206543, 0.8643333315849304, 0.8619999885559082, 0.862333357334137, 0.8646666407585144, 0.8543333411216736, 0.8579999804496765, 0.8619999885559082, 0.8653333187103271, 0.862666666507721, 0.8663333058357239, 0.8656666874885559, 0.8640000224113464, 0.8676666617393494, 0.8573333621025085, 0.8656666874885559, 0.859333336353302, 0.8543333411216736, 0.8730000257492065, 0.8723333477973938, 0.8676666617393494, 0.8693333268165588, 0.8646666407585144, 0.8659999966621399]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 1, 6, 3, 8, 8], [2, 0, 3, 1, 0, 4], [12, 17], [0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 6, 6, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 7, 1, 8, 5], [0, 3, 1, 3, 1], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 4, 2, 1], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035640716552734, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 3, 0], [29, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 8, 2, 1, 2, 1], [3, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030641078948975, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 0, 7, 5, 4, 2, 4, 8, 0, 4, 5, 7, 7, 1, 6, 8, 1, 5, 6], [1, 2, 1, 0, 2, 0, 2, 2, 0, 3, 1, 0, 2, 0, 2, 3], [0, 39, 39, 19, 33], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [20, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 40, 24, 16, 5, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(alpha, grad), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))))), tf.math.square(grad)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.square(grad), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(tf.math.square(alpha), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093655109405518, 2.309248447418213, 2.309819459915161, 2.310997724533081, 2.3101844787597656, 2.308905601501465], "accuracy": [0.09457138925790787, 0.09153348207473755, 0.0870426595211029, 0.08968432247638702, 0.08585391938686371, 0.09391097724437714], "val_loss": [2.308795928955078, 2.308795928955078, 2.308795928955078, 2.308795928955078, 2.308795928955078, 2.308795928955078], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]