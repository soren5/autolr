[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2070729732513428, 1.5904844999313354, 1.1493397951126099, 0.9445635080337524, 0.8988977074623108, 0.8426640033721924, 0.7544111609458923, 0.7628860473632812, 0.7123985886573792, 0.7041519284248352, 0.684258222579956, 0.6933691501617432, 0.660022497177124, 0.6189215183258057, 0.6171634197235107, 0.6199734210968018, 0.5958996415138245, 0.5848369002342224, 0.578887403011322, 0.5563156008720398, 0.5667707920074463, 0.5348556637763977, 0.5240380764007568, 0.5254712700843811, 0.5139533877372742, 0.5147811770439148, 0.5095191597938538, 0.49128127098083496, 0.5107739567756653, 0.4841656982898712, 0.48688948154449463, 0.4786105453968048, 0.46700453758239746], "accuracy": [0.2654867172241211, 0.49993395805358887, 0.5938449501991272, 0.665830135345459, 0.6676793098449707, 0.6866992712020874, 0.7157574892044067, 0.7169462442398071, 0.7318716049194336, 0.7329282760620117, 0.7376832365989685, 0.7349095344543457, 0.7494386434555054, 0.7613261342048645, 0.7630431652069092, 0.7611940503120422, 0.7750627398490906, 0.7691190242767334, 0.7817989587783813, 0.7901201844215393, 0.7852331399917603, 0.8030643463134766, 0.8064984679222107, 0.8033285140991211, 0.809140145778656, 0.800818920135498, 0.8078193068504333, 0.8181217908859253, 0.8076872229576111, 0.8235371708869934, 0.819970965385437, 0.8220842480659485, 0.8259146809577942], "val_loss": [1.9099140167236328, 1.106706976890564, 0.9305157661437988, 0.8406325578689575, 0.7423583269119263, 0.6506969332695007, 0.6262111067771912, 0.620993971824646, 0.5803868174552917, 0.5772610306739807, 0.5655324459075928, 0.5643066167831421, 0.5466294884681702, 0.5639965534210205, 0.5408128499984741, 0.5327373743057251, 0.5450465083122253, 0.5014609098434448, 0.49249500036239624, 0.5257371068000793, 0.49857020378112793, 0.47857239842414856, 0.47180941700935364, 0.46009373664855957, 0.4896056354045868, 0.45776230096817017, 0.46239396929740906, 0.443974107503891, 0.4546370506286621, 0.4403533637523651, 0.44737154245376587, 0.4312175214290619, 0.46474316716194153], "val_accuracy": [0.5096666812896729, 0.6316666603088379, 0.7006666660308838, 0.6733333468437195, 0.7226666808128357, 0.7536666393280029, 0.7609999775886536, 0.7556666731834412, 0.7820000052452087, 0.7803333401679993, 0.7883333563804626, 0.7766666412353516, 0.7893333435058594, 0.7676666378974915, 0.7893333435058594, 0.8023333549499512, 0.7913333177566528, 0.8103333115577698, 0.8103333115577698, 0.7963333129882812, 0.8080000281333923, 0.8206666707992554, 0.8263333439826965, 0.8370000123977661, 0.8136666417121887, 0.8296666741371155, 0.8273333311080933, 0.8450000286102295, 0.8276666402816772, 0.8429999947547913, 0.8276666402816772, 0.8403333425521851, 0.8293333053588867]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 3, 2, 9, 5, 3, 4, 7, 8, 7], [0, 2, 1, 0, 0, 0, 3, 1], [11, 39, 39, 4, 64], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 2, 5, 2, 1, 9], [0, 6, 1, 7, 0], [0, 30], [1], [0], [2], [0]], "fitness": -0.1379999965429306, "mapping_values": [1, 19, 11, 8, 5, 7, 4, 3, 1, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha)))))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.070804604891955e+16, 5.965893828240998e+16, 5.946594822193152e+16, 6.09216371925975e+16, 6.124983711852134e+16, 6.064045856863027e+16], "accuracy": [0.10249637067317963, 0.11108175665140152, 0.10830801725387573, 0.10474177449941635, 0.108440101146698, 0.10936468094587326], "val_loss": [5.303149450703667e+16, 5.303149450703667e+16, 5.303149450703667e+16, 5.303149450703667e+16, 5.303149450703667e+16, 5.303149450703667e+16], "val_accuracy": [0.14033333957195282, 0.14033333957195282, 0.14033333957195282, 0.14033333957195282, 0.14033333957195282, 0.14033333957195282]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [8, 2, 0, 6, 3, 8, 2, 6, 8, 3, 2, 6, 4, 7, 5, 1, 0, 9, 7, 7, 4, 2, 8, 4, 7, 9, 4, 7, 5], [2, 0, 3, 5, 0, 1, 1, 2, 1, 3, 4, 3, 2, 2, 5, 1, 4, 1], [16, 1, 9, 41], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 7, 5, 2, 1], [0, 6, 1, 6, 0], [99, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 47, 29, 18, 4, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.square(alpha), tf.math.subtract(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), beta)), tf.math.add(tf.math.add(tf.math.pow(alpha, grad), grad), tf.math.add(grad, tf.math.sqrt(tf.math.pow(tf.math.add(beta, beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(grad, tf.math.add(alpha, tf.math.square(grad)))))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 9, 5], [0, 1, 1, 0, 2], [70, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [4, 5, 2, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309900999069214, 2.3105602264404297, 2.3096020221710205, 2.3101885318756104, 2.3104465007781982, 2.3105697631835938], "accuracy": [0.09192973375320435, 0.09417514503002167, 0.08757099509239197, 0.09113723784685135, 0.09113723784685135, 0.09285431355237961], "val_loss": [2.308505058288574, 2.308505058288574, 2.308505058288574, 2.308505058288574, 2.308505058288574, 2.308505058288574], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 6, 3, 6, 2, 3], [2, 5, 3, 1, 0, 0, 3], [16, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 0, 2, 3, 2, 1], [0, 6, 1, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 1, 15, 8, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101420402526855, 2.3102946281433105, 2.309067487716675, 2.3091838359832764, 2.3094680309295654, 2.3098175525665283, 2.3102331161499023, 2.309274911880493, 2.3080337047576904, 2.3081037998199463], "accuracy": [0.09311848133802414, 0.09417514503002167, 0.0940430611371994, 0.09430722147226334, 0.09430722147226334, 0.09140139818191528, 0.08981640636920929, 0.09377889335155487, 0.09576013684272766, 0.09496764093637466], "val_loss": [2.308558702468872, 2.30849552154541, 2.308396816253662, 2.3082642555236816, 2.3080976009368896, 2.307898759841919, 2.307662010192871, 2.3073887825012207, 2.30706787109375, 2.306696653366089], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09600000083446503, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]