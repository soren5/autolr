[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8117142915725708, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21138596534729, 1.6030489206314087, 1.1651790142059326, 0.9699868559837341, 0.90091872215271, 0.8172751665115356, 0.7733425498008728, 0.7519886493682861, 0.7197763323783875, 0.6936385035514832, 0.6816394925117493, 0.6784245371818542, 0.6389806866645813, 0.641849935054779, 0.6087003350257874, 0.6003523468971252, 0.6050524711608887, 0.6012121438980103, 0.5712918639183044, 0.5591274499893188, 0.5481773614883423, 0.541191816329956, 0.538850724697113, 0.530522346496582, 0.5313493013381958, 0.5161544680595398, 0.49916958808898926, 0.5084546208381653, 0.49622610211372375, 0.49615103006362915, 0.4820161759853363, 0.4812704622745514, 0.4742804765701294, 0.47905558347702026, 0.46472978591918945, 0.46036794781684875, 0.4513985812664032, 0.4450688362121582, 0.45474475622177124, 0.42981529235839844, 0.4371590316295624, 0.4323633015155792, 0.42996466159820557, 0.4342955946922302, 0.4147512912750244, 0.4266282320022583, 0.41657522320747375, 0.41598382592201233, 0.40091949701309204, 0.4016580581665039, 0.3953268229961395, 0.40200522541999817, 0.4024224579334259, 0.3924002945423126, 0.38394400477409363, 0.38374727964401245, 0.37979182600975037, 0.38124361634254456, 0.36796143651008606, 0.37528690695762634, 0.38562148809432983, 0.363440603017807], "accuracy": [0.27763834595680237, 0.505349338054657, 0.594241201877594, 0.6547351479530334, 0.6729626059532166, 0.705058753490448, 0.7187954187393188, 0.7234182953834534, 0.7366266250610352, 0.7363624572753906, 0.7427024245262146, 0.7474573850631714, 0.7627789974212646, 0.7593448758125305, 0.772288978099823, 0.7750627398490906, 0.7765156626701355, 0.7714964747428894, 0.7907806038856506, 0.7968564033508301, 0.7985734939575195, 0.8031964302062988, 0.7968564033508301, 0.8021397590637207, 0.8010830879211426, 0.8064984679222107, 0.817989706993103, 0.8140271902084351, 0.8198388814926147, 0.8162726163864136, 0.8256505131721497, 0.8224804997444153, 0.8267071843147278, 0.8296129703521729, 0.8325188159942627, 0.8278959393501282, 0.8358209133148193, 0.8367455005645752, 0.8322546482086182, 0.8453308939933777, 0.8428213000297546, 0.839519202709198, 0.8459912538528442, 0.8343679904937744, 0.8485008478164673, 0.8474441766738892, 0.8479725122451782, 0.8477083444595337, 0.8515387773513794, 0.8504821062088013, 0.852859616279602, 0.8533879518508911, 0.8491612672805786, 0.8599920868873596, 0.8564258217811584, 0.8570862412452698, 0.8602562546730042, 0.8618412613868713, 0.8622375130653381, 0.8610487580299377, 0.8573504090309143, 0.8652753829956055], "val_loss": [1.9270683526992798, 1.106511116027832, 0.8731316924095154, 0.8221116662025452, 0.7300248742103577, 0.7484763860702515, 0.685386061668396, 0.6538235545158386, 0.6349702477455139, 0.6533276438713074, 0.6096601486206055, 0.5627986788749695, 0.5703150033950806, 0.5474191308021545, 0.5434016585350037, 0.5320860743522644, 0.5381047129631042, 0.5250407457351685, 0.5289282202720642, 0.5007970929145813, 0.5082522630691528, 0.5182019472122192, 0.5014880895614624, 0.47997209429740906, 0.47928905487060547, 0.48745545744895935, 0.4615554213523865, 0.4715680480003357, 0.45846542716026306, 0.4638853371143341, 0.4478106200695038, 0.45886507630348206, 0.441374272108078, 0.4398473799228668, 0.4356081485748291, 0.4397985339164734, 0.4266830384731293, 0.43483608961105347, 0.42377758026123047, 0.42321473360061646, 0.41702279448509216, 0.4222146272659302, 0.4332045912742615, 0.4121827781200409, 0.4314742386341095, 0.40854695439338684, 0.40347325801849365, 0.39243775606155396, 0.40056437253952026, 0.39565223455429077, 0.4004426598548889, 0.3931484818458557, 0.3972494304180145, 0.38906827569007874, 0.3913826644420624, 0.3891618549823761, 0.3842447102069855, 0.385484904050827, 0.3849523067474365, 0.37946078181266785, 0.38201388716697693, 0.3795922100543976], "val_accuracy": [0.5643333196640015, 0.6539999842643738, 0.6963333487510681, 0.6840000152587891, 0.7366666793823242, 0.7113333344459534, 0.7426666617393494, 0.7570000290870667, 0.7450000047683716, 0.7519999742507935, 0.7633333206176758, 0.7876666784286499, 0.7896666526794434, 0.7950000166893005, 0.7926666736602783, 0.8046666383743286, 0.7933333516120911, 0.8003333210945129, 0.7940000295639038, 0.8159999847412109, 0.8053333163261414, 0.8056666851043701, 0.8133333325386047, 0.8226666450500488, 0.8270000219345093, 0.812333345413208, 0.8293333053588867, 0.8253333568572998, 0.8273333311080933, 0.8273333311080933, 0.8383333086967468, 0.8289999961853027, 0.8333333134651184, 0.8396666646003723, 0.8343333601951599, 0.8309999704360962, 0.8446666598320007, 0.8426666855812073, 0.8450000286102295, 0.8416666388511658, 0.8476666808128357, 0.8399999737739563, 0.8316666483879089, 0.8463333249092102, 0.8393333554267883, 0.8489999771118164, 0.8496666550636292, 0.8553333282470703, 0.8523333072662354, 0.8519999980926514, 0.8539999723434448, 0.8526666760444641, 0.8556666374206543, 0.8546666502952576, 0.8533333539962769, 0.8539999723434448, 0.8586666584014893, 0.8560000061988831, 0.8586666584014893, 0.8579999804496765, 0.8583333492279053, 0.8583333492279053]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 7, 6, 7, 8, 9, 2, 4, 9, 7, 1], [1, 2, 1, 0, 2, 1, 1, 0, 2, 3], [0, 39, 39, 93], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 7, 0, 2, 5, 2, 1], [0, 6, 0, 6, 0], [70, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 16, 10, 4, 11, 6, 5, 2, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), grad)))), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 1, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1], [0, 2, 0, 2, 5, 9], [0, 6, 6], [0, 37], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 8, 6, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308459758758545, 2.3093090057373047, 2.3093490600585938, 2.3108623027801514, 2.3090343475341797, 2.308807134628296], "accuracy": [0.1018359512090683, 0.0936468094587326, 0.09021265059709549, 0.08928807079792023, 0.09126931428909302, 0.09245806187391281], "val_loss": [2.3089687824249268, 2.3089687824249268, 2.3089687824249268, 2.3089687824249268, 2.3089687824249268, 2.3089687824249268], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 0, 1, 6, 2, 1, 3, 7, 6, 3, 1, 2, 9, 2, 3, 4, 4, 7, 2, 4], [0, 3, 1, 0, 2, 3, 1, 2, 0, 1, 1, 0, 2, 2, 1, 0, 0, 3, 0, 1, 3], [0, 39, 39, 50, 62, 50, 95, 33], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 2], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 46, 25, 21, 8, 5, 3, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)), tf.math.multiply(alpha, grad)))), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))), tf.math.multiply(tf.math.pow(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(grad, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), alpha), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311201572418213, 2.3108794689178467, 2.3107903003692627, 2.309757947921753, 2.309717893600464, 2.309854745864868], "accuracy": [0.08955223858356476, 0.08770307898521423, 0.09113723784685135, 0.09311848133802414, 0.09021265059709549, 0.09021265059709549], "val_loss": [2.307952642440796, 2.307952642440796, 2.307952642440796, 2.307952642440796, 2.307952642440796, 2.307952642440796], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 3, 1, 6, 5], [0, 0, 1, 0, 2], [0, 39, 45], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 0], [2, 0, 3, 1, 0], [5, 1], [1, 0, 0, 1, 0, 1, 1, 0], [8, 3, 0, 2, 5], [0, 6, 1], [0], [1], [0], [0], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3088643550872803, 2.309995174407959, 2.309816598892212, 2.310438632965088, 2.3093535900115967, 2.3099935054779053], "accuracy": [0.09047681838274002, 0.09232597798109055, 0.09285431355237961, 0.08928807079792023, 0.09259014576673508, 0.09219389408826828], "val_loss": [2.3085458278656006, 2.3085458278656006, 2.3085458278656006, 2.3085458278656006, 2.3085458278656006, 2.3085458278656006], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]