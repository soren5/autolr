[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213209390640259, 1.6143133640289307, 1.1587283611297607, 0.9716024398803711, 0.8772808909416199, 0.8103787302970886, 0.7795101404190063, 0.7366918325424194, 0.7012727856636047, 0.7025708556175232, 0.6716974377632141, 0.6434940695762634, 0.6561830639839172, 0.6236171126365662, 0.6172934770584106, 0.6015109419822693, 0.5758134126663208, 0.5903655290603638, 0.5546530485153198, 0.5644369125366211, 0.5506110787391663, 0.5351495742797852, 0.5179638266563416, 0.5435574054718018, 0.5116135478019714, 0.5112806558609009, 0.5031077861785889, 0.4803510308265686, 0.49444347620010376, 0.475552499294281, 0.487505704164505, 0.47626397013664246, 0.4738762378692627, 0.459466814994812, 0.4621347188949585, 0.45470714569091797, 0.44729363918304443, 0.43635767698287964, 0.43846240639686584, 0.44690319895744324, 0.430747926235199, 0.43705683946609497, 0.4181143641471863, 0.41651448607444763, 0.4192800521850586, 0.4174451231956482, 0.4103701412677765, 0.3972717821598053, 0.40778598189353943, 0.4088577926158905, 0.3907963037490845, 0.3896789252758026, 0.38562121987342834, 0.39279869198799133, 0.38304218649864197, 0.3736574351787567, 0.3837641179561615, 0.3794277310371399, 0.367099404335022, 0.36625298857688904, 0.3710300326347351, 0.3585888743400574, 0.35434502363204956, 0.35695675015449524, 0.35805144906044006, 0.35595399141311646], "accuracy": [0.2731475234031677, 0.5089156031608582, 0.5939770340919495, 0.6579051613807678, 0.6840575933456421, 0.702681303024292, 0.7169462442398071, 0.7248712182044983, 0.7358341217041016, 0.7317395210266113, 0.7497028112411499, 0.7582882046699524, 0.7495707273483276, 0.7662131786346436, 0.7677981853485107, 0.7751948237419128, 0.7825914621353149, 0.7817989587783813, 0.7951393723487854, 0.7917051911354065, 0.7926297783851624, 0.8005547523498535, 0.8083476424217224, 0.7913089394569397, 0.8100647330284119, 0.8078193068504333, 0.8125742673873901, 0.8238013386726379, 0.8153480291366577, 0.8248580098152161, 0.8175934553146362, 0.8239334225654602, 0.8231409192085266, 0.8261788487434387, 0.830669641494751, 0.8304054737091064, 0.8360850811004639, 0.8413683772087097, 0.8388587832450867, 0.8355567455291748, 0.8421608805656433, 0.8366134166717529, 0.8510104417800903, 0.8498216867446899, 0.8467837572097778, 0.8408400416374207, 0.8525954484939575, 0.8565579056739807, 0.8510104417800903, 0.8556333184242249, 0.8593316674232483, 0.8589354157447815, 0.860652506351471, 0.8564258217811584, 0.8510104417800903, 0.8663320541381836, 0.8590674996376038, 0.8597279191017151, 0.8679170608520508, 0.8665962219238281, 0.8614450097084045, 0.8672566413879395, 0.8702945709228516, 0.8714832663536072, 0.8698983192443848, 0.8688416481018066], "val_loss": [1.9342870712280273, 1.0948143005371094, 0.8981705904006958, 0.804818868637085, 0.7349538803100586, 0.7899584770202637, 0.6891790628433228, 0.6484683156013489, 0.6386591792106628, 0.6203768849372864, 0.6143608689308167, 0.6461408138275146, 0.6343351006507874, 0.5751098394393921, 0.6312732100486755, 0.5882330536842346, 0.5657381415367126, 0.5479439496994019, 0.5537118911743164, 0.5498920679092407, 0.5445333123207092, 0.5308319926261902, 0.5612823367118835, 0.5213136672973633, 0.5109127759933472, 0.5284890532493591, 0.4944233298301697, 0.4938628375530243, 0.4897040128707886, 0.5119263529777527, 0.48908165097236633, 0.4897255003452301, 0.47982925176620483, 0.47902384400367737, 0.4746989607810974, 0.4684304893016815, 0.4648975431919098, 0.46472880244255066, 0.4706612825393677, 0.4640997350215912, 0.4717247784137726, 0.45055094361305237, 0.4796621799468994, 0.46186938881874084, 0.45662641525268555, 0.4626072645187378, 0.4449714422225952, 0.44719257950782776, 0.45724162459373474, 0.4504716694355011, 0.44711947441101074, 0.43850094079971313, 0.45314547419548035, 0.4343337118625641, 0.42942529916763306, 0.43303394317626953, 0.46635523438453674, 0.4328595697879791, 0.43478718400001526, 0.4344872236251831, 0.4219556450843811, 0.42949169874191284, 0.4191979169845581, 0.4297866225242615, 0.44056379795074463, 0.4133816659450531], "val_accuracy": [0.518666684627533, 0.6646666526794434, 0.6976666450500488, 0.715666651725769, 0.7203333377838135, 0.6983333230018616, 0.7563333511352539, 0.7643333077430725, 0.7566666603088379, 0.7799999713897705, 0.7786666750907898, 0.7599999904632568, 0.7463333606719971, 0.7933333516120911, 0.7570000290870667, 0.7886666655540466, 0.7940000295639038, 0.8016666769981384, 0.8023333549499512, 0.8069999814033508, 0.8073333501815796, 0.8206666707992554, 0.7983333468437195, 0.812333345413208, 0.8253333568572998, 0.812666654586792, 0.8270000219345093, 0.831333339214325, 0.8323333263397217, 0.8193333148956299, 0.8276666402816772, 0.8286666870117188, 0.8389999866485596, 0.8379999995231628, 0.8423333168029785, 0.8433333039283752, 0.843999981880188, 0.8370000123977661, 0.8376666903495789, 0.8433333039283752, 0.8370000123977661, 0.8450000286102295, 0.8346666693687439, 0.843999981880188, 0.847000002861023, 0.8379999995231628, 0.8513333201408386, 0.8460000157356262, 0.8379999995231628, 0.8416666388511658, 0.8519999980926514, 0.8450000286102295, 0.8493333458900452, 0.8569999933242798, 0.8553333282470703, 0.8536666631698608, 0.8370000123977661, 0.8553333282470703, 0.8573333621025085, 0.8546666502952576, 0.859000027179718, 0.8519999980926514, 0.8553333282470703, 0.8536666631698608, 0.8473333120346069, 0.8579999804496765]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 9], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.7914285659790039, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.1971497535705566, 1.441824197769165, 1.1649489402770996, 0.9322469830513, 0.8424036502838135, 0.7946226596832275, 0.7841103076934814, 0.7191458344459534, 0.7034654021263123, 0.6699331998825073, 0.670986533164978, 0.6612483263015747, 0.6184447407722473, 0.6301229000091553, 0.6091299057006836, 0.6027452945709229, 0.5798664689064026, 0.5989605784416199, 0.549476683139801, 0.5656137466430664], "accuracy": [0.2715625464916229, 0.5156518220901489, 0.6009774208068848, 0.6597543358802795, 0.6868313550949097, 0.6999075412750244, 0.7051908373832703, 0.7251353859901428, 0.7359662055969238, 0.7450799345970154, 0.7440232634544373, 0.7453441023826599, 0.7613261342048645, 0.7516840696334839, 0.7633073329925537, 0.7660810947418213, 0.7769119143486023, 0.7716285586357117, 0.7898560166358948, 0.7839123010635376], "val_loss": [1.7569140195846558, 1.2378422021865845, 0.8113714456558228, 0.7605286240577698, 0.8020747303962708, 0.698924720287323, 0.6533454656600952, 0.6924797892570496, 0.6817403435707092, 0.6022037863731384, 0.6270707845687866, 0.6044614315032959, 0.5748200416564941, 0.5718221664428711, 0.5663691163063049, 0.550961971282959, 0.6035766005516052, 0.5397838354110718, 0.5261706113815308, 0.5222684144973755], "val_accuracy": [0.5616666674613953, 0.5716666579246521, 0.7039999961853027, 0.7149999737739563, 0.6946666836738586, 0.7390000224113464, 0.7536666393280029, 0.7413333058357239, 0.7406666874885559, 0.7703333497047424, 0.7546666860580444, 0.768666684627533, 0.7839999794960022, 0.7906666398048401, 0.7923333048820496, 0.7903333306312561, 0.7663333415985107, 0.7839999794960022, 0.7870000004768372, 0.7903333306312561]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 9, 2, 1, 7], [0, 6, 1, 4, 2, 2], [0, 7], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 14, 8, 6, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.subtract(alpha, tf.math.add(grad, beta)))), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4696719646453857, 2.3039984703063965, 2.303161382675171, 198676.59375, 2.3218069076538086, 2.3070294857025146], "accuracy": [0.1484612375497818, 0.09840179979801178, 0.0952318087220192, 0.09245806187391281, 0.09232597798109055, 0.09694888442754745], "val_loss": [2.3027095794677734, 2.3025259971618652, 2.316836357116699, 2.3359785079956055, 2.3108980655670166, 2.30446457862854], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.0989999994635582, 0.09933333098888397, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [0, 13, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 6, 5, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11279883980751038, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 5, 9], [0, 6, 5, 6, 1], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 6, 4, 2, 2, 8, 5, 3, 1, 11, 8, 3, 2, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3089163303375244, 2.3096771240234375, 2.3093185424804688, 2.309476852416992, 2.309814691543579, 2.3096888065338135], "accuracy": [0.09457138925790787, 0.0948355570435524, 0.09325055778026581, 0.09338264167308807, 0.08915598690509796, 0.08968432247638702], "val_loss": [2.3087191581726074, 2.3087191581726074, 2.3087191581726074, 2.3087191581726074, 2.3087191581726074, 2.3087191581726074], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]