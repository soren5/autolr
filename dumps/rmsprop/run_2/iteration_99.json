[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115159034729004, 1.6070725917816162, 1.1579359769821167, 0.9927880764007568, 0.8799535632133484, 0.827380359172821, 0.7988684773445129, 0.7732692956924438, 0.7325596213340759, 0.7320489883422852, 0.702750563621521, 0.6746280789375305, 0.666263222694397, 0.6556047797203064, 0.6271663904190063, 0.6260833144187927, 0.6035319566726685, 0.5862677097320557, 0.5971028804779053, 0.5779440999031067, 0.5577318072319031, 0.5470647215843201, 0.553250789642334, 0.5409507155418396, 0.5352231860160828, 0.5353115200996399, 0.5224339365959167, 0.513055145740509, 0.5138266682624817, 0.5022724866867065, 0.49182358384132385, 0.48559245467185974, 0.48397722840309143, 0.48471492528915405, 0.4892539381980896, 0.47150543332099915, 0.46229299902915955, 0.45930999517440796, 0.4522969424724579, 0.44389986991882324, 0.46036362648010254, 0.4425414800643921, 0.4425218105316162, 0.4256167709827423, 0.4278624653816223, 0.4198644161224365, 0.4217603802680969], "accuracy": [0.27116629481315613, 0.49887728691101074, 0.5939770340919495, 0.6390172839164734, 0.6837934255599976, 0.7037379741668701, 0.7059833407402039, 0.7170783281326294, 0.7314753532409668, 0.7312111854553223, 0.7416457533836365, 0.7494386434555054, 0.7555144429206848, 0.759609043598175, 0.7662131786346436, 0.7684586048126221, 0.7771760821342468, 0.7878747582435608, 0.778232753276825, 0.7852331399917603, 0.7957997918128967, 0.8059701323509216, 0.8018755912780762, 0.8049134612083435, 0.8059701323509216, 0.8039889335632324, 0.8082155585289001, 0.8178576231002808, 0.8109893202781677, 0.8186501264572144, 0.819442629814148, 0.8252542614936829, 0.8226125836372375, 0.8219521641731262, 0.8212917447090149, 0.829216718673706, 0.8298771381378174, 0.8345000743865967, 0.8401796221733093, 0.8405758738517761, 0.8304054737091064, 0.8462554216384888, 0.8408400416374207, 0.8473120927810669, 0.8469158411026001, 0.8482366800308228, 0.846387505531311], "val_loss": [1.928932785987854, 1.1098712682724, 0.9748119115829468, 0.8056036829948425, 0.729906439781189, 0.7037192583084106, 0.7109436988830566, 0.649011492729187, 0.6126402616500854, 0.6389208436012268, 0.6052091717720032, 0.6013587117195129, 0.5798366069793701, 0.5562890768051147, 0.5345569849014282, 0.5395189523696899, 0.52119380235672, 0.5141310691833496, 0.49894294142723083, 0.49494287371635437, 0.4878109097480774, 0.48092320561408997, 0.5135049819946289, 0.4837152063846588, 0.5038121938705444, 0.4793933629989624, 0.47029757499694824, 0.46441197395324707, 0.4651471674442291, 0.45911669731140137, 0.4537903964519501, 0.4477902054786682, 0.45633772015571594, 0.47392886877059937, 0.4354146420955658, 0.446223646402359, 0.482134610414505, 0.4337427616119385, 0.43394896388053894, 0.42864924669265747, 0.4302027225494385, 0.42267951369285583, 0.4316345155239105, 0.4254162609577179, 0.4174206852912903, 0.4236646294593811, 0.4108811914920807], "val_accuracy": [0.5713333487510681, 0.6586666703224182, 0.6570000052452087, 0.703000009059906, 0.7236666679382324, 0.7360000014305115, 0.7203333377838135, 0.749666690826416, 0.7733333110809326, 0.753333330154419, 0.765666663646698, 0.7753333449363708, 0.7770000100135803, 0.7953333258628845, 0.8086666464805603, 0.7983333468437195, 0.8053333163261414, 0.812666654586792, 0.8203333616256714, 0.8186666369438171, 0.828000009059906, 0.8330000042915344, 0.8103333115577698, 0.8233333230018616, 0.8153333067893982, 0.8193333148956299, 0.8366666436195374, 0.8343333601951599, 0.8326666951179504, 0.8346666693687439, 0.8360000252723694, 0.843666672706604, 0.8323333263397217, 0.8323333263397217, 0.8496666550636292, 0.8429999947547913, 0.8220000267028809, 0.8510000109672546, 0.8483333587646484, 0.8483333587646484, 0.846666693687439, 0.8560000061988831, 0.846666693687439, 0.8503333330154419, 0.8510000109672546, 0.8503333330154419, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 1, 8, 5, 5, 9], [0, 0, 2, 0, 2], [0, 39, 71], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 6, 3, 8, 2, 6, 3, 3, 3, 6, 6, 1, 8, 1, 0, 2, 8, 1, 4, 0, 1, 3, 7, 8], [2, 5, 4, 1, 0, 5, 0, 1, 1, 3, 1, 2, 1, 0, 1, 5, 1, 2, 5, 5], [16, 24, 7], [1, 0, 1, 1, 0, 1, 0, 1], [6, 2, 0, 3, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 8, 3, 3, 46, 26, 20, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(grad))), tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.math.sqrt(alpha))), grad)), alpha))), tf.math.subtract(beta, tf.math.negative(tf.math.add(tf.math.sqrt(alpha), tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.negative(tf.math.subtract(tf.math.multiply(grad, alpha), beta))))))))), tf.math.add(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 7, 6, 3, 0, 2, 0, 7, 9, 3, 7, 6, 0, 1, 8, 6, 6, 9, 0, 8], [2, 0, 3, 1, 0, 0, 1, 4, 3, 5, 3, 4], [16, 1, 9, 33, 39], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.negative(grad))), grad), grad), tf.math.sqrt(grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 8, 4, 4, 3, 33, 21, 12, 5, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 26}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 2, 0, 2, 5], [0, 6, 1, 7], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097567558288574, 2.309128999710083, 2.309831142425537, 2.3085813522338867, 2.3089962005615234, 2.3094639778137207], "accuracy": [0.09391097724437714, 0.0940430611371994, 0.09192973375320435, 0.09655263274908066, 0.10170386731624603, 0.09140139818191528], "val_loss": [2.3088085651397705, 2.3088085651397705, 2.3088085651397705, 2.3088085651397705, 2.3088085651397705, 2.3088085651397705], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [3, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [76, 39, 63], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0], [0, 5, 0, 1, 5], [0, 6, 1], [83], [1], [0], [2], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 7, 3, 4, 2, 2, 1, 1, 0, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309957981109619, 2.310826539993286, 2.3095951080322266, 2.3096187114715576, 2.311368942260742, 2.3100054264068604], "accuracy": [0.08994849026203156, 0.09298639744520187, 0.09245806187391281, 0.0866464152932167, 0.08281600475311279, 0.09047681838274002], "val_loss": [2.308068037033081, 2.308068037033081, 2.308068037033081, 2.308068037033081, 2.308068037033081, 2.308068037033081], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]