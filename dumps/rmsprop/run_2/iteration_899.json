[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8442857265472412, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099719047546387, 1.6036756038665771, 1.157812237739563, 1.012316346168518, 0.8941608667373657, 0.8374364376068115, 0.7884879112243652, 0.7663674354553223, 0.7305834889411926, 0.7182518243789673, 0.6924499273300171, 0.6905072331428528, 0.6416783928871155, 0.6408483386039734, 0.6363266706466675, 0.6118870973587036, 0.6164991855621338, 0.6117150783538818, 0.5734019875526428, 0.5704360008239746, 0.5730105638504028, 0.5599832534790039, 0.5582322478294373, 0.5326848030090332, 0.5236065983772278, 0.5275646448135376, 0.5179690718650818, 0.5184186697006226, 0.5007411241531372, 0.509000837802887, 0.4921831488609314, 0.48322203755378723, 0.48393937945365906, 0.4952981770038605, 0.4840385913848877, 0.4708656370639801, 0.464747816324234, 0.45039305090904236, 0.45480191707611084, 0.44100871682167053, 0.4512075185775757, 0.43095824122428894, 0.4417523741722107, 0.43574032187461853, 0.4272247850894928, 0.42504873871803284, 0.40985262393951416], "accuracy": [0.26865673065185547, 0.5038964748382568, 0.5945053696632385, 0.6370360851287842, 0.6732267737388611, 0.687887966632843, 0.709021270275116, 0.7087571024894714, 0.7298903465270996, 0.7289658188819885, 0.7375511527061462, 0.7425703406333923, 0.7541936039924622, 0.76106196641922, 0.7547219395637512, 0.769911527633667, 0.763967752456665, 0.7655527591705322, 0.7877426743507385, 0.7852331399917603, 0.7828556299209595, 0.7924976944923401, 0.7869502305984497, 0.800290584564209, 0.8053097128868103, 0.802271842956543, 0.8038568496704102, 0.8076872229576111, 0.8138951063156128, 0.8123101592063904, 0.8173292875289917, 0.8177255392074585, 0.8191784620285034, 0.8175934553146362, 0.8181217908859253, 0.8248580098152161, 0.8310658931732178, 0.8350284099578857, 0.8284242749214172, 0.8403117060661316, 0.8318583965301514, 0.8416325449943542, 0.8350284099578857, 0.8376700282096863, 0.8370096683502197, 0.8391229510307312, 0.8469158411026001], "val_loss": [1.9251171350479126, 1.167461633682251, 0.8988598585128784, 0.8918022513389587, 0.7726391553878784, 0.7264495491981506, 0.6872745752334595, 0.6628283858299255, 0.7035852670669556, 0.6380967497825623, 0.6327182054519653, 0.604380190372467, 0.6027801632881165, 0.5754338502883911, 0.6094377636909485, 0.5672560930252075, 0.581455409526825, 0.5602741241455078, 0.5392429828643799, 0.5784335136413574, 0.5266789197921753, 0.5229473114013672, 0.5178242325782776, 0.5166298151016235, 0.504426121711731, 0.49960482120513916, 0.5121981501579285, 0.49574199318885803, 0.4917202591896057, 0.4755626916885376, 0.4961864948272705, 0.478804349899292, 0.486191987991333, 0.46366870403289795, 0.471393883228302, 0.4862462878227234, 0.46140119433403015, 0.454511433839798, 0.4553435742855072, 0.46317219734191895, 0.46201810240745544, 0.4393948018550873, 0.45745760202407837, 0.44164836406707764, 0.43954604864120483, 0.43705371022224426, 0.4443897306919098], "val_accuracy": [0.5433333516120911, 0.5960000157356262, 0.6850000023841858, 0.690666675567627, 0.7143333554267883, 0.7326666712760925, 0.7269999980926514, 0.7553333044052124, 0.7369999885559082, 0.7506666779518127, 0.746666669845581, 0.7663333415985107, 0.7703333497047424, 0.7876666784286499, 0.7670000195503235, 0.7919999957084656, 0.7946666479110718, 0.7976666688919067, 0.8153333067893982, 0.7893333435058594, 0.8133333325386047, 0.8159999847412109, 0.8103333115577698, 0.8186666369438171, 0.8213333487510681, 0.8276666402816772, 0.8113333582878113, 0.8183333277702332, 0.828000009059906, 0.8363333344459534, 0.8270000219345093, 0.8326666951179504, 0.8286666870117188, 0.8426666855812073, 0.8360000252723694, 0.8193333148956299, 0.8376666903495789, 0.8456666469573975, 0.8333333134651184, 0.8403333425521851, 0.828000009059906, 0.8506666421890259, 0.8339999914169312, 0.8416666388511658, 0.843999981880188, 0.847000002861023, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [5, 0, 1, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 3, 8, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 6, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.sqrt(alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [9, 2, 5, 2, 3, 4], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 0, 6, 3, 1, 2], [1, 0, 3, 4, 0], [65, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 9, 5, 2, 1], [2, 6, 1, 6, 0], [0, 22], [0, 0, 1, 0, 1, 0, 1], [0, 6, 7, 8], [2, 6, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 7, 4, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(grad, tf.math.sqrt(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 0, 6], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 7, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0], [52, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3084557056427, 2.3096203804016113, 2.310042381286621, 2.3083863258361816, 2.3097259998321533, 2.309673547744751], "accuracy": [0.10038304328918457, 0.09311848133802414, 0.08955223858356476, 0.09774138033390045, 0.09377889335155487, 0.08942015469074249], "val_loss": [2.3085250854492188, 2.3085250854492188, 2.3085250854492188, 2.3085250854492188, 2.3085250854492188, 2.3085250854492188], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 6, 1, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 5], [0, 88], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3081910610198975, 2.310025215148926, 2.3090555667877197, 2.309967041015625, 2.3086957931518555, 2.3106091022491455], "accuracy": [0.09285431355237961, 0.0952318087220192, 0.09179764986038208, 0.08849557489156723, 0.08875974267721176, 0.09060890227556229], "val_loss": [2.3091847896575928, 2.3091847896575928, 2.3091847896575928, 2.3091847896575928, 2.3091847896575928, 2.3091847896575928], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]