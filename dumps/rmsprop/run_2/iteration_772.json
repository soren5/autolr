[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.205902338027954, 1.5841178894042969, 1.1243404150009155, 0.9784542918205261, 0.8844801187515259, 0.8393475413322449, 0.784739077091217, 0.764171838760376, 0.710242509841919, 0.7084253430366516, 0.6830567717552185, 0.6705752015113831, 0.6455476880073547, 0.6374261379241943, 0.6109449863433838, 0.6004787087440491, 0.6085231900215149, 0.5936850905418396, 0.6045883893966675, 0.5554525256156921, 0.5535101890563965, 0.5458775162696838, 0.544585645198822, 0.5214691162109375, 0.5263260006904602, 0.5118411183357239, 0.5052078366279602, 0.5160123705863953, 0.4920523464679718, 0.4914921224117279, 0.4819851219654083, 0.46640074253082275, 0.47137773036956787, 0.4758327305316925, 0.46681156754493713, 0.4685608446598053, 0.45302167534828186, 0.4661722779273987, 0.4540567696094513, 0.4369617998600006, 0.434334933757782, 0.4374711215496063, 0.4361029267311096, 0.42667004466056824, 0.42273157835006714, 0.42570623755455017, 0.4073164165019989, 0.4185056686401367, 0.41202837228775024, 0.4013039469718933, 0.3997785449028015, 0.39772704243659973, 0.3929995596408844, 0.38992056250572205, 0.3813696503639221, 0.38905277848243713, 0.38666701316833496, 0.3883627653121948, 0.37768906354904175, 0.36330389976501465], "accuracy": [0.2678642272949219, 0.5145951509475708, 0.6050719618797302, 0.6502443552017212, 0.6756042838096619, 0.6820763349533081, 0.7100779414176941, 0.713379979133606, 0.7411174178123474, 0.7367587089538574, 0.748778223991394, 0.7466648817062378, 0.7601373791694641, 0.7663452625274658, 0.7700436115264893, 0.7796856164932251, 0.7691190242767334, 0.7800818681716919, 0.7757231593132019, 0.7950072884559631, 0.793422281742096, 0.8000264167785645, 0.8020076751708984, 0.8080834746360779, 0.8018755912780762, 0.8137630224227905, 0.8121780753135681, 0.8108572363853455, 0.8181217908859253, 0.8193105459213257, 0.8206313848495483, 0.8280280232429504, 0.8314621448516846, 0.828292191028595, 0.8317263126373291, 0.829216718673706, 0.8317263126373291, 0.826310932636261, 0.8329150676727295, 0.8399154543876648, 0.8428213000297546, 0.8367455005645752, 0.8385946154594421, 0.8459912538528442, 0.843481719493866, 0.8437458872795105, 0.8525954484939575, 0.8479725122451782, 0.8479725122451782, 0.8557654023170471, 0.8548408150672913, 0.8561616539955139, 0.8562937378883362, 0.8584070801734924, 0.8627657890319824, 0.8590674996376038, 0.8601241707801819, 0.8551049828529358, 0.8628978729248047, 0.8664641380310059], "val_loss": [1.904276967048645, 1.0551059246063232, 0.9323316216468811, 0.8064044713973999, 0.8359401226043701, 0.723893404006958, 0.6678256392478943, 0.6310092210769653, 0.6396033763885498, 0.5936305522918701, 0.5987529158592224, 0.5783250331878662, 0.5801920294761658, 0.5450934767723083, 0.554388701915741, 0.531936526298523, 0.5193421244621277, 0.5724839568138123, 0.5142398476600647, 0.49942871928215027, 0.49588045477867126, 0.49855679273605347, 0.48933544754981995, 0.49254360795021057, 0.48452138900756836, 0.46293437480926514, 0.5141617059707642, 0.4706779718399048, 0.46519774198532104, 0.46270084381103516, 0.4575668275356293, 0.456554114818573, 0.4684893488883972, 0.4491548538208008, 0.4388275146484375, 0.4526468813419342, 0.45495280623435974, 0.4349253475666046, 0.4336974322795868, 0.4260070025920868, 0.42013925313949585, 0.4368765354156494, 0.41441404819488525, 0.4215357303619385, 0.41657960414886475, 0.4205271899700165, 0.4305180609226227, 0.4094916880130768, 0.4160104990005493, 0.40255558490753174, 0.4036374092102051, 0.4028815031051636, 0.40316909551620483, 0.3962310254573822, 0.39801692962646484, 0.4028477072715759, 0.38801708817481995, 0.39144906401634216, 0.3895306885242462, 0.3917020559310913], "val_accuracy": [0.5346666574478149, 0.6853333115577698, 0.6800000071525574, 0.7053333520889282, 0.671999990940094, 0.7123333215713501, 0.7316666841506958, 0.7566666603088379, 0.7453333139419556, 0.7756666541099548, 0.7680000066757202, 0.7853333353996277, 0.7756666541099548, 0.7943333387374878, 0.7900000214576721, 0.7973333597183228, 0.8130000233650208, 0.7703333497047424, 0.8140000104904175, 0.815666675567627, 0.8183333277702332, 0.8236666917800903, 0.8240000009536743, 0.8180000185966492, 0.8299999833106995, 0.8316666483879089, 0.8036666512489319, 0.8253333568572998, 0.824999988079071, 0.8356666564941406, 0.831333339214325, 0.8356666564941406, 0.8299999833106995, 0.8360000252723694, 0.8393333554267883, 0.8309999704360962, 0.8346666693687439, 0.8396666646003723, 0.8403333425521851, 0.8493333458900452, 0.8503333330154419, 0.8433333039283752, 0.8503333330154419, 0.8460000157356262, 0.8506666421890259, 0.8496666550636292, 0.8443333506584167, 0.8519999980926514, 0.8423333168029785, 0.8516666889190674, 0.8553333282470703, 0.8546666502952576, 0.8529999852180481, 0.859666645526886, 0.8606666922569275, 0.8543333411216736, 0.8586666584014893, 0.8600000143051147, 0.8606666922569275, 0.8569999933242798]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 0, 2, 6, 4], [0, 6, 4, 6, 0, 7, 6], [35, 20], [1], [0], [2], [0]], "fitness": -0.7931428551673889, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 17, 10, 7, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(tf.math.add(grad, grad))))), tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5946195125579834, 0.8695260286331177, 0.7408619523048401, 0.6879043579101562, 0.6619213223457336, 0.6400878429412842, 0.6278364658355713, 0.6280910968780518, 0.619574785232544, 0.6208131909370422, 0.6103842854499817, 0.6130130290985107], "accuracy": [0.4449874460697174, 0.6931713223457336, 0.7360982894897461, 0.7534011602401733, 0.7621186375617981, 0.770439863204956, 0.7737419009208679, 0.77677983045578, 0.7792893648147583, 0.7763835787773132, 0.7833839654922485, 0.774798572063446], "val_loss": [0.9391893744468689, 0.6821545362472534, 0.6340339779853821, 0.6093313694000244, 0.5921151041984558, 0.5843720436096191, 0.5784894227981567, 0.575532853603363, 0.5734562873840332, 0.5720836520195007, 0.5711004137992859, 0.5704410672187805], "val_accuracy": [0.6880000233650208, 0.7480000257492065, 0.7633333206176758, 0.7743333578109741, 0.7773333191871643, 0.7793333530426025, 0.784333348274231, 0.7829999923706055, 0.7829999923706055, 0.7833333611488342, 0.7826666831970215, 0.7836666703224182]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [81, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5, 1, 4], [2, 3, 3, 1, 0, 2, 3], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 2, 4], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 17, 10, 7, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.square(grad), grad)), alpha), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 7, 3, 1, 6, 5, 0, 7], [0, 0, 1, 0, 2, 1], [55, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 6, 2], [2, 0, 3, 1, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 8, 7, 2, 5, 1], [3, 6, 1, 2, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.09914285689592361, "mapping_values": [1, 14, 8, 6, 3, 4, 2, 2, 1, 11, 6, 5, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(sigma, tf.math.add(grad, tf.math.square(alpha)))), tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [27992.94921875, 555842338816.0, 9.256617969943839e+18, 6.858785832306956e+25, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.10091137140989304, 0.09787346422672272, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1964766.0, 34831928918016.0, 5.791662897795663e+20, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10300000011920929, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 3, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 58], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 2, 1, 1, 0, 2, 1, 1, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(grad, tf.math.square(alpha))), tf.math.add(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309147596359253, 2.3095757961273193, 2.3098859786987305, 2.309321165084839, 2.3088619709014893, 2.3094241619110107], "accuracy": [0.09245806187391281, 0.08928807079792023, 0.09285431355237961, 0.09311848133802414, 0.0952318087220192, 0.09549596905708313], "val_loss": [2.3095033168792725, 2.3095033168792725, 2.3095033168792725, 2.3095033168792725, 2.3095033168792725, 2.3095033168792725], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]