[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212087631225586, 1.61812162399292, 1.1507357358932495, 0.9947699904441833, 0.8822354078292847, 0.8164079189300537, 0.8127989768981934, 0.7449354529380798, 0.7253805994987488, 0.704721212387085, 0.7002906799316406, 0.6644637584686279, 0.6567361354827881, 0.6166753172874451, 0.6221007704734802, 0.6259325742721558, 0.5870426893234253, 0.5922338366508484, 0.5727932453155518, 0.5726369619369507, 0.5722865462303162, 0.545481264591217, 0.5392506122589111, 0.5314302444458008, 0.5216813683509827, 0.538672149181366, 0.5149539709091187, 0.5072106719017029, 0.4964638650417328, 0.5094912648200989, 0.4867324233055115, 0.48572221398353577, 0.4804342985153198, 0.4748898446559906, 0.46613168716430664, 0.46874964237213135, 0.47002938389778137, 0.45980823040008545, 0.44572630524635315], "accuracy": [0.2604675590991974, 0.5064060091972351, 0.5995244979858398, 0.6527539491653442, 0.6913221478462219, 0.7077004313468933, 0.7065116763114929, 0.7248712182044983, 0.7296261787414551, 0.7397965788841248, 0.744419515132904, 0.7580240368843079, 0.7565711140632629, 0.7716285586357117, 0.7677981853485107, 0.7638356685638428, 0.7866860628128052, 0.7861577272415161, 0.7957997918128967, 0.7935543656349182, 0.7857614755630493, 0.8062343001365662, 0.800290584564209, 0.8031964302062988, 0.8047813773155212, 0.7968564033508301, 0.8150838613510132, 0.8191784620285034, 0.8207634687423706, 0.8121780753135681, 0.8293488025665283, 0.8235371708869934, 0.8245938420295715, 0.8280280232429504, 0.8339717388153076, 0.8280280232429504, 0.8290846943855286, 0.8330471515655518, 0.8374059200286865], "val_loss": [1.9272370338439941, 1.109662652015686, 0.955834150314331, 0.8071591854095459, 0.7068136930465698, 0.6795711517333984, 0.6850190162658691, 0.6591395735740662, 0.6402285099029541, 0.6238433718681335, 0.6118581295013428, 0.6641800999641418, 0.5547951459884644, 0.5435906052589417, 0.5565279126167297, 0.530992329120636, 0.5221651792526245, 0.5194151401519775, 0.5230741500854492, 0.5166857242584229, 0.4963952302932739, 0.4972394108772278, 0.5019142627716064, 0.4992634952068329, 0.47564005851745605, 0.4732063412666321, 0.4734693467617035, 0.4514208137989044, 0.4671241343021393, 0.4554925858974457, 0.44356468319892883, 0.4586266577243805, 0.45427438616752625, 0.43487295508384705, 0.43207308650016785, 0.43247175216674805, 0.42671236395835876, 0.427442342042923, 0.44477105140686035], "val_accuracy": [0.5873333215713501, 0.6663333177566528, 0.6506666541099548, 0.7116666436195374, 0.7326666712760925, 0.7483333349227905, 0.7423333525657654, 0.7549999952316284, 0.7546666860580444, 0.7713333368301392, 0.7703333497047424, 0.7463333606719971, 0.7850000262260437, 0.7896666526794434, 0.7916666865348816, 0.7979999780654907, 0.8026666641235352, 0.8003333210945129, 0.8019999861717224, 0.7963333129882812, 0.8180000185966492, 0.8080000281333923, 0.7973333597183228, 0.800000011920929, 0.8163333535194397, 0.8193333148956299, 0.8246666789054871, 0.8306666612625122, 0.824999988079071, 0.8336666822433472, 0.8373333215713501, 0.8243333101272583, 0.8240000009536743, 0.8446666598320007, 0.8373333215713501, 0.8410000205039978, 0.8373333215713501, 0.8396666646003723, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1, 8, 7, 3, 9], [2, 6, 1, 6, 0, 0], [0, 22, 69], [1], [0], [2], [0]], "fitness": -0.19914285838603973, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 1, 17, 11, 6, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(beta, tf.math.sqrt(grad)), alpha)), tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.269045114517212, 2.3223226070404053, 2.3202970027923584, 2.320388078689575, 2.3162007331848145, 2.322675943374634], "accuracy": [0.1438383311033249, 0.10368511080741882, 0.0944393053650856, 0.0956280529499054, 0.10210011899471283, 0.09985470771789551], "val_loss": [2.1721439361572266, 2.3054397106170654, 2.3205559253692627, 2.3339056968688965, 2.3287417888641357, 2.313262939453125], "val_accuracy": [0.195333331823349, 0.10533333569765091, 0.10066666454076767, 0.10100000351667404, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 5, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 0, 4, 5], [0, 2, 3, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1, 8], [0, 3, 1, 6, 0], [18, 22], [0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2], [2, 5, 3, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 2, 9, 5, 4, 1, 13, 8, 5, 2, 8, 4, 4, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(grad))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.square(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(alpha, grad)))), tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, sigma), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16602826118469238, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [5, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 0, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094992637634277, 2.3097879886627197, 2.310487747192383, 2.3104822635650635, 2.3099310398101807, 2.3093559741973877], "accuracy": [0.09285431355237961, 0.09153348207473755, 0.09351472556591034, 0.09496764093637466, 0.09298639744520187, 0.09430722147226334], "val_loss": [2.307898998260498, 2.307898998260498, 2.307898998260498, 2.307898998260498, 2.307898998260498, 2.307898998260498], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]