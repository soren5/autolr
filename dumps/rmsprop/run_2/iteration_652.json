[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2119553089141846, 1.61653470993042, 1.155387282371521, 1.0282119512557983, 0.9007741808891296, 0.8667037487030029, 0.7993025183677673, 0.7900077104568481, 0.7556204795837402, 0.7295580506324768, 0.6968767642974854, 0.6863329410552979, 0.6813994646072388, 0.6585323214530945, 0.6346138119697571, 0.6188603639602661, 0.6184647083282471, 0.614750325679779, 0.5990949869155884, 0.5934263467788696, 0.5801485776901245, 0.556386411190033, 0.5600714683532715, 0.5474583506584167, 0.5523779988288879, 0.5290132164955139, 0.5346583127975464, 0.5246163010597229, 0.5283649563789368, 0.5264344811439514, 0.49992963671684265, 0.5025481581687927, 0.4907078742980957, 0.49977582693099976, 0.4855867028236389, 0.4875132739543915, 0.4712716341018677, 0.47272270917892456, 0.4697517156600952, 0.4713001251220703, 0.45104050636291504, 0.4625353217124939, 0.4514580965042114, 0.4445241391658783, 0.44859495759010315, 0.4371620714664459, 0.43601760268211365, 0.43622809648513794, 0.42842528223991394, 0.42684102058410645, 0.4176722466945648, 0.4227757751941681, 0.41650184988975525, 0.40608638525009155, 0.40803638100624084, 0.4016365110874176, 0.40822833776474, 0.3979352116584778, 0.3828798532485962, 0.39102447032928467, 0.3872152268886566, 0.38512346148490906, 0.3827192783355713, 0.37308409810066223, 0.38210606575012207, 0.36926785111427307, 0.37089061737060547, 0.36757588386535645, 0.3612782955169678, 0.3604815602302551, 0.3665013611316681, 0.3650376796722412, 0.35560184717178345, 0.35323938727378845, 0.3414517641067505, 0.3431134819984436, 0.34444791078567505, 0.3432411551475525, 0.3405489921569824, 0.33680814504623413, 0.3460322320461273], "accuracy": [0.2650904655456543, 0.49953770637512207, 0.6012415885925293, 0.63096022605896, 0.6765288710594177, 0.6814159154891968, 0.7047945857048035, 0.7092854380607605, 0.7280412316322327, 0.7255316376686096, 0.7400607466697693, 0.7485140562057495, 0.7469290494918823, 0.7588165402412415, 0.7670056819915771, 0.7701756954193115, 0.7713643908500671, 0.7718927264213562, 0.7803460359573364, 0.776251494884491, 0.7821952104568481, 0.7968564033508301, 0.7911768555641174, 0.7938185334205627, 0.7928939461708069, 0.8059701323509216, 0.8031964302062988, 0.8087438941001892, 0.8072909712791443, 0.806630551815033, 0.8124422430992126, 0.8128384351730347, 0.8232730031013489, 0.816008448600769, 0.8244617581367493, 0.8251221776008606, 0.8296129703521729, 0.8264430165290833, 0.8241975903511047, 0.8245938420295715, 0.8330471515655518, 0.8339717388153076, 0.8355567455291748, 0.8384625315666199, 0.8337075710296631, 0.8388587832450867, 0.8389908671379089, 0.8401796221733093, 0.8470479249954224, 0.8453308939933777, 0.8448025584220886, 0.8418967127799988, 0.8475762605667114, 0.8507462739944458, 0.8504821062088013, 0.8531237840652466, 0.8487650156021118, 0.8548408150672913, 0.8627657890319824, 0.8607845902442932, 0.854708731174469, 0.8621054291725159, 0.8640866279602051, 0.8651432991027832, 0.8580108284950256, 0.863029956817627, 0.8628978729248047, 0.8664641380310059, 0.8705587387084961, 0.8706908226013184, 0.8683133125305176, 0.8636903762817383, 0.8710870146751404, 0.868049144744873, 0.8771628737449646, 0.8786157965660095, 0.8714832663536072, 0.8716153502464294, 0.8751816153526306, 0.8710870146751404, 0.867520809173584], "val_loss": [1.9227131605148315, 1.0928953886032104, 0.8668887615203857, 0.8488255739212036, 0.7294028997421265, 0.6958383917808533, 0.7075263857841492, 0.6525676846504211, 0.609657883644104, 0.6968544721603394, 0.5973793864250183, 0.5794269442558289, 0.5725783109664917, 0.5510423183441162, 0.55489182472229, 0.5530699491500854, 0.5428659319877625, 0.5736472010612488, 0.5270187258720398, 0.5192287564277649, 0.522817075252533, 0.5160759687423706, 0.5104177594184875, 0.52388596534729, 0.49550655484199524, 0.48072248697280884, 0.4909030795097351, 0.4736761152744293, 0.4858962297439575, 0.4703766703605652, 0.5059986114501953, 0.4702952206134796, 0.4788149297237396, 0.48863375186920166, 0.45638537406921387, 0.4503210484981537, 0.46603626012802124, 0.4512151777744293, 0.4482717216014862, 0.4456859529018402, 0.46496325731277466, 0.4323197305202484, 0.4474542737007141, 0.4300800859928131, 0.42939794063568115, 0.4285198450088501, 0.42200690507888794, 0.4299597144126892, 0.4148848354816437, 0.42423346638679504, 0.42286714911460876, 0.4158204197883606, 0.40631964802742004, 0.4247698485851288, 0.407973051071167, 0.4077359139919281, 0.40885305404663086, 0.40775179862976074, 0.40173664689064026, 0.3959268033504486, 0.4003894329071045, 0.3933081030845642, 0.39831721782684326, 0.3950384557247162, 0.39192432165145874, 0.38837873935699463, 0.43310683965682983, 0.39065226912498474, 0.3828293979167938, 0.38874250650405884, 0.3969322443008423, 0.38792285323143005, 0.38665971159935, 0.3798859715461731, 0.38112378120422363, 0.37842902541160583, 0.38217130303382874, 0.38831648230552673, 0.38513004779815674, 0.39327338337898254, 0.37958377599716187], "val_accuracy": [0.578000009059906, 0.659333348274231, 0.6930000185966492, 0.6996666789054871, 0.7353333234786987, 0.7419999837875366, 0.7266666889190674, 0.762666642665863, 0.7703333497047424, 0.7143333554267883, 0.7726666927337646, 0.7976666688919067, 0.7856666445732117, 0.8053333163261414, 0.8080000281333923, 0.79666668176651, 0.8096666932106018, 0.778333306312561, 0.8080000281333923, 0.8073333501815796, 0.8116666674613953, 0.8119999766349792, 0.8199999928474426, 0.8006666898727417, 0.8293333053588867, 0.8296666741371155, 0.8166666626930237, 0.8270000219345093, 0.8270000219345093, 0.8349999785423279, 0.8206666707992554, 0.8323333263397217, 0.8270000219345093, 0.8256666660308838, 0.8383333086967468, 0.8410000205039978, 0.8273333311080933, 0.8496666550636292, 0.8443333506584167, 0.8416666388511658, 0.8273333311080933, 0.8536666631698608, 0.8443333506584167, 0.8456666469573975, 0.846666693687439, 0.8486666679382324, 0.856333315372467, 0.8510000109672546, 0.8583333492279053, 0.8486666679382324, 0.8533333539962769, 0.8556666374206543, 0.8616666793823242, 0.8543333411216736, 0.8646666407585144, 0.859333336353302, 0.8556666374206543, 0.8573333621025085, 0.8666666746139526, 0.8643333315849304, 0.8646666407585144, 0.8640000224113464, 0.8640000224113464, 0.8669999837875366, 0.8669999837875366, 0.8673333525657654, 0.8379999995231628, 0.8659999966621399, 0.8683333396911621, 0.8663333058357239, 0.8600000143051147, 0.8659999966621399, 0.8666666746139526, 0.8706666827201843, 0.8686666488647461, 0.8733333349227905, 0.8709999918937683, 0.8629999756813049, 0.8679999709129333, 0.8646666407585144, 0.8683333396911621]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5, 0, 5, 9], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 1], [0, 22], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 9, 4, 3, 8, 5, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.0456578731536865, 2.487947463989258, 2.3037264347076416, 2.30342435836792, 2.303056478500366, 2.3029415607452393, 2.30314302444458], "accuracy": [0.18702945113182068, 0.10289261490106583, 0.09998679161071777, 0.09179764986038208, 0.09496764093637466, 0.09615638852119446, 0.0944393053650856], "val_loss": [3.461052179336548, 2.303234100341797, 2.302506923675537, 2.3025457859039307, 2.3026230335235596, 2.302757501602173, 2.3026962280273438], "val_accuracy": [0.09799999743700027, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.0989999994635582, 0.0989999994635582, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5], [3, 3, 3, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 3, 0, 2], [2, 0, 0, 1, 0], [16, 1, 23], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 7, 2, 1], [0, 0, 1, 6, 0], [0, 22, 88], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 12, 7, 5, 3, 11, 6, 5, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.multiply(grad, grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3053078651428223, 2.305211305618286, 2.3012912273406982, 2.3076999187469482, 2.3106586933135986, 2.308725595474243, 2.3107998371124268, 2.3132309913635254], "accuracy": [0.09377889335155487, 0.09826971590518951, 0.11596883088350296, 0.10051512718200684, 0.10011887550354004, 0.10117553919553757, 0.10315678268671036, 0.09826971590518951], "val_loss": [2.303056240081787, 2.302738666534424, 2.288361072540283, 2.3075833320617676, 2.3075928688049316, 2.311638593673706, 2.308206558227539, 2.3073666095733643], "val_accuracy": [0.09966666996479034, 0.10233332961797714, 0.10300000011920929, 0.10100000351667404, 0.10300000011920929, 0.09933333098888397, 0.10300000011920929, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [39, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 2, 8, 2, 2], [2, 0, 2, 1, 0, 1], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034064769744873, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 2, 1, 1, 1, 14, 8, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 8, 3, 1, 5, 5], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 6], [2, 1, 0, 1, 0], [16, 78], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 8], [0, 6, 1], [0], [1], [0], [1], [0]], "fitness": -0.0917142853140831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3097004890441895, 2.3093044757843018, 2.310260534286499, 2.3090178966522217, 2.3096864223480225, 2.3104636669158936], "accuracy": [0.09113723784685135, 0.09311848133802414, 0.09179764986038208, 0.09351472556591034, 0.0952318087220192, 0.09206181764602661], "val_loss": [2.308414936065674, 2.308414936065674, 2.308414936065674, 2.308414936065674, 2.308414936065674, 2.308414936065674], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}, "mapping_values": [1, 3, 2, 1, 0, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}]