[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2081565856933594, 1.6041033267974854, 1.163640022277832, 0.983942449092865, 0.8971387147903442, 0.8737246990203857, 0.7882087826728821, 0.7545974254608154, 0.7292312383651733, 0.7010405659675598, 0.7010478377342224, 0.6684257984161377, 0.6683451533317566, 0.6449264287948608, 0.6425015926361084, 0.6190413236618042, 0.5960932374000549, 0.5941694378852844, 0.5600680112838745, 0.5790682435035706, 0.5725730657577515, 0.5502040386199951, 0.5454418659210205, 0.5468406677246094, 0.528506338596344, 0.5242672562599182, 0.5160269737243652, 0.5039072036743164, 0.5041183233261108, 0.49698853492736816, 0.4867529571056366, 0.501035213470459, 0.4847188889980316, 0.4710000455379486, 0.4791328012943268, 0.46210598945617676, 0.45526108145713806, 0.459164023399353, 0.4453202486038208, 0.44000813364982605, 0.43885764479637146, 0.4404451251029968, 0.4382482171058655, 0.4291433095932007, 0.4232330322265625, 0.4311234652996063, 0.4181140661239624, 0.40679794549942017, 0.411300390958786, 0.4109780192375183], "accuracy": [0.27341169118881226, 0.49465063214302063, 0.59661865234375, 0.6482630968093872, 0.6740192770957947, 0.6781138777732849, 0.7147008180618286, 0.7255316376686096, 0.7239466309547424, 0.7423061728477478, 0.7411174178123474, 0.7581561207771301, 0.7515519857406616, 0.7573636174201965, 0.76106196641922, 0.7708360552787781, 0.7832518815994263, 0.7802139520645142, 0.7922335267066956, 0.7820631265640259, 0.7835160493850708, 0.8000264167785645, 0.7955356240272522, 0.7993659973144531, 0.8041210174560547, 0.8058380484580994, 0.8074230551719666, 0.813498854637146, 0.8123101592063904, 0.8148196935653687, 0.8252542614936829, 0.8121780753135681, 0.8267071843147278, 0.8269713521003723, 0.8239334225654602, 0.8308017253875732, 0.8300092220306396, 0.8308017253875732, 0.8364813327789307, 0.8350284099578857, 0.8368775844573975, 0.837537944316864, 0.8387266993522644, 0.8429533839225769, 0.8461233377456665, 0.843481719493866, 0.8474441766738892, 0.8532558679580688, 0.8541803956031799, 0.8481045961380005], "val_loss": [1.9177637100219727, 1.1282806396484375, 0.9024251103401184, 0.8366284966468811, 0.7386594414710999, 0.7001823782920837, 0.6817023754119873, 0.6789765357971191, 0.6416568756103516, 0.6122354865074158, 0.6135213375091553, 0.6319891214370728, 0.6037739515304565, 0.5765389204025269, 0.5923632979393005, 0.5680584907531738, 0.5721417665481567, 0.5439353585243225, 0.5271403193473816, 0.5629264712333679, 0.5403308272361755, 0.5184929370880127, 0.5123336911201477, 0.5080440640449524, 0.5080708265304565, 0.5050355792045593, 0.4987508952617645, 0.5208645462989807, 0.4994170665740967, 0.4877306818962097, 0.5193848013877869, 0.49619409441947937, 0.4860083758831024, 0.49243590235710144, 0.47061142325401306, 0.4768173098564148, 0.5078770518302917, 0.46923941373825073, 0.47108927369117737, 0.45707380771636963, 0.45464062690734863, 0.45430704951286316, 0.4605705142021179, 0.45626798272132874, 0.44611886143684387, 0.44585180282592773, 0.46155768632888794, 0.4396499693393707, 0.46013614535331726, 0.4551866352558136], "val_accuracy": [0.515999972820282, 0.6523333191871643, 0.6800000071525574, 0.6880000233650208, 0.7303333282470703, 0.7486666440963745, 0.7543333172798157, 0.7540000081062317, 0.7609999775886536, 0.7753333449363708, 0.7726666927337646, 0.7633333206176758, 0.7760000228881836, 0.7900000214576721, 0.7886666655540466, 0.7926666736602783, 0.7823333144187927, 0.8029999732971191, 0.8073333501815796, 0.7889999747276306, 0.8023333549499512, 0.8096666932106018, 0.8220000267028809, 0.8116666674613953, 0.8130000233650208, 0.8130000233650208, 0.8223333358764648, 0.8080000281333923, 0.8173333406448364, 0.8236666917800903, 0.8163333535194397, 0.8216666579246521, 0.82833331823349, 0.8230000138282776, 0.8323333263397217, 0.8270000219345093, 0.8190000057220459, 0.8306666612625122, 0.828000009059906, 0.8333333134651184, 0.8356666564941406, 0.8323333263397217, 0.8296666741371155, 0.8309999704360962, 0.8386666774749756, 0.8326666951179504, 0.8336666822433472, 0.8356666564941406, 0.8309999704360962, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [1, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.5608571171760559, "mapping_values": [1, 12, 7, 5, 2, 11, 6, 5, 2, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.square(alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [28.21790885925293, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19891692698001862, 0.13881917297840118, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.192979335784912, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5699999928474426, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 4], [0, 2, 1, 0, 2], [0, 97, 39], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 0, 1, 5, 2, 8], [0, 6, 1, 6, 0], [22, 22], [1], [0], [7], [0]], "fitness": -0.2774285674095154, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.040691375732422, 2.2853612899780273, 2.319037914276123, 2.3023524284362793, 2.204094409942627, 2.5371155738830566, 2.3041062355041504, 2.302294969558716, 2.2667019367218018, 2.1900558471679688], "accuracy": [0.17857614159584045, 0.11478008329868317, 0.13736626505851746, 0.10672302544116974, 0.19284109771251678, 0.18663319945335388, 0.09800554811954498, 0.11411966383457184, 0.1430458277463913, 0.20182274281978607], "val_loss": [2.301145076751709, 2.2973062992095947, 2.304611921310425, 2.2778725624084473, 2.058694362640381, 2.3045010566711426, 2.302232265472412, 2.299450635910034, 2.070200204849243, 2.3151214122772217], "val_accuracy": [0.09933333098888397, 0.1080000028014183, 0.09833333641290665, 0.2070000022649765, 0.27266666293144226, 0.10100000351667404, 0.09833333641290665, 0.16433332860469818, 0.18433333933353424, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 4, 6, 0], [91, 79], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 11, 6, 5, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(grad, grad), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, grad)))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2, 1], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 0, 7], [0, 6, 1, 6, 0], [0], [0, 1], [0], [2], [0]], "fitness": -0.08742856979370117, "mapping_values": [1, 11, 6, 5, 1, 13, 8, 5, 2, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309199571609497, 2.3102357387542725, 2.3094048500061035, 2.309870958328247, 2.3106911182403564, 2.309056520462036], "accuracy": [0.09338264167308807, 0.09325055778026581, 0.09008057415485382, 0.09430722147226334, 0.08717474341392517, 0.0940430611371994], "val_loss": [2.308523416519165, 2.308523416519165, 2.308523416519165, 2.308523416519165, 2.308523416519165, 2.308523416519165], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]