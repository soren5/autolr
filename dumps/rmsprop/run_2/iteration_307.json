[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8111428618431091, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209792375564575, 1.605080246925354, 1.1454569101333618, 0.9843134880065918, 0.8845075368881226, 0.8508652448654175, 0.7896216511726379, 0.7757081389427185, 0.7472634315490723, 0.7178176641464233, 0.7011997103691101, 0.6588233709335327, 0.6516938209533691, 0.6442198753356934, 0.6316329836845398, 0.6221042275428772, 0.6191298365592957, 0.6045140624046326, 0.5826535224914551, 0.5908347964286804, 0.5752208232879639, 0.5567578077316284, 0.5653691291809082, 0.5479766130447388], "accuracy": [0.2654867172241211, 0.4951789677143097, 0.6056002974510193, 0.6495839357376099, 0.6767930388450623, 0.6925109028816223, 0.707568347454071, 0.7131158113479614, 0.7190595865249634, 0.7323999404907227, 0.7397965788841248, 0.757099449634552, 0.7555144429206848, 0.7582882046699524, 0.7648923397064209, 0.7652885913848877, 0.7717606425285339, 0.7721568942070007, 0.7817989587783813, 0.7799497842788696, 0.7868181467056274, 0.7935543656349182, 0.7877426743507385, 0.8014793395996094], "val_loss": [1.9191783666610718, 1.1576741933822632, 0.9311782121658325, 0.8059936761856079, 0.7745053172111511, 0.7316190004348755, 0.6781932711601257, 0.661688506603241, 0.680450439453125, 0.6516206860542297, 0.6178255677223206, 0.5992078185081482, 0.5919540524482727, 0.5725690126419067, 0.5697800517082214, 0.5672333836555481, 0.5803815722465515, 0.5559998750686646, 0.5430364012718201, 0.5823708772659302, 0.5564122200012207, 0.5329639315605164, 0.5480663776397705, 0.5259701609611511], "val_accuracy": [0.5276666879653931, 0.6183333396911621, 0.6579999923706055, 0.7089999914169312, 0.7133333086967468, 0.7183333039283752, 0.7513333559036255, 0.7616666555404663, 0.734333336353302, 0.7426666617393494, 0.7676666378974915, 0.7826666831970215, 0.7833333611488342, 0.7910000085830688, 0.7913333177566528, 0.7916666865348816, 0.7873333096504211, 0.7986666560173035, 0.8043333292007446, 0.7863333225250244, 0.8043333292007446, 0.8040000200271606, 0.7956666946411133, 0.8043333292007446]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 4, 3, 0, 3, 5, 8, 7, 9], [0, 2, 1, 3, 0], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10685714334249496, "mapping_values": [1, 13, 9, 4, 2, 7, 4, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.sqrt(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3744944357376.0, 4428304220160.0, 4247668654080.0, 4309045215232.0, 4391500251136.0, 4489039314944.0], "accuracy": [0.09311848133802414, 0.09087307006120682, 0.09787346422672272, 0.09840179979801178, 0.08598599582910538, 0.09391097724437714], "val_loss": [3237063426048.0, 3237063163904.0, 3237063163904.0, 3237063163904.0, 3237063163904.0, 3237063163904.0], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [5, 2, 2, 2, 3, 5, 0, 5], [3, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [85, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 0, 0, 1, 0, 1], [0, 1, 4, 0, 9], [5, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 1, 8, 6, 2, 2, 8, 5, 3, 1, 7, 5, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.add(tf.math.add(grad, grad), tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.negative(grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [22953282.0, 2.314286708831787, 2.305784225463867, 2.3036985397338867, 2.3031411170959473, 2.303208112716675, 2.3030645847320557, 2.30295991897583, 2.3030478954315186, 2.303013801574707, 2.3029565811157227], "accuracy": [0.09893012791872025, 0.10051512718200684, 0.09272222965955734, 0.09245806187391281, 0.0956280529499054, 0.0948355570435524, 0.09325055778026581, 0.09325055778026581, 0.09311848133802414, 0.09642054885625839, 0.09602430462837219], "val_loss": [2.3207945823669434, 2.3073434829711914, 2.3037474155426025, 2.3028993606567383, 2.3028032779693604, 2.3025729656219482, 2.3025851249694824, 2.3026328086853027, 2.302619457244873, 2.3025963306427, 2.3025741577148438], "val_accuracy": [0.0976666659116745, 0.09933333098888397, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.10166666656732559, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 1], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 2, 0, 6, 3, 8, 2, 4, 1, 1, 7, 4, 7, 8, 2, 1, 0, 3, 0, 7, 8, 8, 5, 5], [2, 0, 3, 1, 0, 1, 2, 3, 0, 0, 3, 5, 4, 2, 3, 5], [16, 1, 45, 60], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 7, 0, 2, 2, 2, 1], [0, 6, 1, 6, 0], [0, 57], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 40, 24, 16, 4, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.add(grad, alpha), tf.math.pow(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), beta)), tf.math.sqrt(grad)), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.subtract(tf.math.negative(grad), tf.math.multiply(grad, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.sqrt(beta)), grad))))), tf.math.square(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 7, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 6, 3, 2], [2, 0, 3, 1, 0, 2], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 7, 4, 1], [0, 6, 1, 6, 0], [0, 82], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 6, 3, 3, 1, 13, 7, 6, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095552921295166, 2.3103857040405273, 2.3089118003845215, 2.3098835945129395, 2.3100531101226807, 2.309919834136963], "accuracy": [0.09245806187391281, 0.09298639744520187, 0.09391097724437714, 0.08717474341392517, 0.09628847241401672, 0.09311848133802414], "val_loss": [2.3094608783721924, 2.3094608783721924, 2.3094608783721924, 2.3094608783721924, 2.3094608783721924, 2.3094608783721924], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}]