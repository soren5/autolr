[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8451428413391113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2146389484405518, 1.6067583560943604, 1.1301637887954712, 0.9769561290740967, 0.9028301239013672, 0.8336068987846375, 0.7845784425735474, 0.7572511434555054, 0.699404776096344, 0.7243971228599548, 0.671902060508728, 0.6990426182746887, 0.6490800976753235, 0.6145008206367493, 0.6065292954444885, 0.5933815836906433, 0.611760675907135, 0.581171989440918, 0.5843999981880188, 0.5658414959907532, 0.5552002787590027, 0.5503542423248291, 0.5393213033676147, 0.5302768349647522, 0.5268862843513489, 0.5121240019798279, 0.5046693086624146, 0.49365100264549255, 0.5086316466331482, 0.4748483896255493, 0.4706040918827057, 0.4805276691913605, 0.4700899124145508, 0.46482235193252563, 0.45585897564888, 0.4575943350791931, 0.45051294565200806, 0.4492139220237732, 0.44324666261672974, 0.4390614628791809, 0.4321470260620117, 0.4367702603340149, 0.4289371073246002, 0.41729316115379333], "accuracy": [0.25795799493789673, 0.507330596446991, 0.6036190986633301, 0.6501122713088989, 0.6750759482383728, 0.6964733600616455, 0.7077004313468933, 0.7186633348464966, 0.7326641082763672, 0.7260599732398987, 0.7486461400985718, 0.7362303733825684, 0.7576277852058411, 0.7677981853485107, 0.7697794437408447, 0.7795535326004028, 0.759080708026886, 0.7843085527420044, 0.7808743715286255, 0.7878747582435608, 0.7935543656349182, 0.7951393723487854, 0.7981772422790527, 0.8021397590637207, 0.8017435073852539, 0.805177628993988, 0.8094043135643005, 0.8164047002792358, 0.8068947196006775, 0.821820080280304, 0.8256505131721497, 0.8296129703521729, 0.8235371708869934, 0.824329674243927, 0.8327829837799072, 0.8322546482086182, 0.8363492488861084, 0.8308017253875732, 0.8348963260650635, 0.8367455005645752, 0.8367455005645752, 0.8352925777435303, 0.846387505531311, 0.8486329317092896], "val_loss": [1.9242336750030518, 1.068508505821228, 0.8739593029022217, 0.7551943063735962, 0.7642825245857239, 0.706673800945282, 0.686244547367096, 0.6162424087524414, 0.7002051472663879, 0.5862401723861694, 0.6334542632102966, 0.5709475874900818, 0.5721341967582703, 0.5434213280677795, 0.5510371327400208, 0.5381404757499695, 0.5207276344299316, 0.5417625904083252, 0.5272389054298401, 0.5440915822982788, 0.5069138407707214, 0.5015823841094971, 0.49489298462867737, 0.48822566866874695, 0.49792802333831787, 0.5006557703018188, 0.4699045419692993, 0.4979988634586334, 0.4607255160808563, 0.4596574604511261, 0.45892998576164246, 0.45246008038520813, 0.4628775119781494, 0.44706571102142334, 0.44700562953948975, 0.4397360384464264, 0.4333250820636749, 0.43837109208106995, 0.4273419976234436, 0.42793819308280945, 0.4275211691856384, 0.42186638712882996, 0.43808647990226746, 0.42265811562538147], "val_accuracy": [0.5339999794960022, 0.6596666574478149, 0.687666654586792, 0.7293333411216736, 0.734000027179718, 0.7366666793823242, 0.7286666631698608, 0.7696666717529297, 0.7390000224113464, 0.7773333191871643, 0.753333330154419, 0.7893333435058594, 0.7913333177566528, 0.8019999861717224, 0.7993333339691162, 0.7996666431427002, 0.8113333582878113, 0.8040000200271606, 0.8009999990463257, 0.784333348274231, 0.8176666498184204, 0.8186666369438171, 0.8216666579246521, 0.8199999928474426, 0.8180000185966492, 0.8149999976158142, 0.8336666822433472, 0.8220000267028809, 0.8373333215713501, 0.8360000252723694, 0.8330000042915344, 0.8389999866485596, 0.8306666612625122, 0.8426666855812073, 0.8386666774749756, 0.8429999947547913, 0.8476666808128357, 0.8473333120346069, 0.8510000109672546, 0.8500000238418579, 0.8489999771118164, 0.8496666550636292, 0.8373333215713501, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [9, 2, 3, 1, 6, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 8, 6, 3, 8, 2, 7, 7, 7, 3, 1, 2, 0, 3, 6, 6], [0, 0, 3, 1, 0, 3, 0, 2, 0, 3, 2, 0, 4, 5], [48, 1, 46, 52, 75, 56], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 2, 5, 8, 8, 4], [0, 6, 1, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 31, 17, 14, 6, 11, 8, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(grad, beta), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 65], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 3, 1, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303436040878296, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 2, 3, 2, 3, 4], [0, 2, 1, 2, 2], [0, 42, 39], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 7, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.add(tf.math.subtract(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308354377746582, 2.308654546737671, 2.3098082542419434, 2.3110909461975098, 2.3098456859588623, 2.3090996742248535], "accuracy": [0.09100515395402908, 0.09285431355237961, 0.09166556596755981, 0.09021265059709549, 0.09153348207473755, 0.08374059200286865], "val_loss": [2.3092284202575684, 2.3092284202575684, 2.3092284202575684, 2.3092284202575684, 2.3092284202575684, 2.3092284202575684], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 0, 7, 3, 8], [0, 0, 1, 0, 2, 2, 1], [0, 39, 39], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [78, 1], [0, 0, 0, 1, 1, 1, 0, 1], [4, 2, 0, 2, 5], [1, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.08657142519950867, "mapping_values": [1, 16, 9, 7, 3, 1, 0, 1, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.sqrt(grad), alpha)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(alpha), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.307816505432129, 2.3110668659210205, 2.3094232082366943, 2.309040069580078, 2.3102004528045654, 2.309845447540283], "accuracy": [0.09536388516426086, 0.08598599582910538, 0.0940430611371994, 0.09206181764602661, 0.0936468094587326, 0.08809932321310043], "val_loss": [2.309267044067383, 2.309267044067383, 2.309267044067383, 2.309267044067383, 2.309267044067383, 2.309267044067383], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]