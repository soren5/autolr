[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208195686340332, 1.5940296649932861, 1.105394721031189, 1.019570231437683, 0.8524953722953796, 0.8290232419967651, 0.7787995934486389, 0.7496602535247803, 0.7072259783744812, 0.7149471044540405, 0.6798570156097412, 0.6687125563621521, 0.650139331817627, 0.6363154053688049, 0.6054433584213257, 0.6135566830635071, 0.5954594612121582, 0.5878504514694214, 0.5810096263885498, 0.5663564801216125, 0.5558950901031494, 0.5593515634536743, 0.5423137545585632, 0.5351395010948181, 0.5357115268707275, 0.5309688448905945, 0.5110176205635071, 0.5209656357765198, 0.49715983867645264, 0.5081903338432312, 0.4984705150127411, 0.4981592297554016, 0.4911423623561859, 0.4784071445465088, 0.46674585342407227, 0.47465503215789795, 0.46543341875076294, 0.4604342579841614, 0.45300644636154175, 0.4489617943763733, 0.4491541087627411, 0.4453890323638916, 0.4385089576244354, 0.4437764585018158, 0.43020519614219666, 0.4277476370334625, 0.4378426671028137, 0.43061771988868713, 0.4143331050872803, 0.4168896973133087, 0.404693067073822, 0.41544488072395325, 0.40390363335609436, 0.40619131922721863, 0.40163999795913696, 0.39759162068367004, 0.3957064747810364, 0.385652095079422, 0.38683488965034485, 0.3818625509738922, 0.3874168395996094, 0.38764727115631104, 0.3813468813896179, 0.36675605177879333, 0.37016627192497253, 0.3660227954387665, 0.3681407868862152, 0.36518338322639465, 0.3567141890525818, 0.35048621892929077], "accuracy": [0.26561880111694336, 0.5056135058403015, 0.6140536069869995, 0.6337339878082275, 0.6911900639533997, 0.6973979473114014, 0.7049266695976257, 0.7181349992752075, 0.7375511527061462, 0.7359662055969238, 0.7490423917770386, 0.7508915662765503, 0.7656848430633545, 0.7623828053474426, 0.7732135653495789, 0.774270236492157, 0.7771760821342468, 0.7791573405265808, 0.7827235460281372, 0.791441023349762, 0.7930260300636292, 0.7891955971717834, 0.7977809906005859, 0.8014793395996094, 0.8053097128868103, 0.8076872229576111, 0.8138951063156128, 0.800290584564209, 0.8144234418869019, 0.8104609847068787, 0.8171972036361694, 0.8177255392074585, 0.8187822103500366, 0.8215559124946594, 0.8290846943855286, 0.8232730031013489, 0.8247259259223938, 0.8261788487434387, 0.8309338092803955, 0.8329150676727295, 0.8297450542449951, 0.8363492488861084, 0.839519202709198, 0.8355567455291748, 0.8412362933158875, 0.8451988101005554, 0.8383304476737976, 0.8411042094230652, 0.8466516733169556, 0.8485008478164673, 0.846387505531311, 0.8506141901016235, 0.8531237840652466, 0.8499537706375122, 0.854708731174469, 0.8555012345314026, 0.8548408150672913, 0.8564258217811584, 0.857218325138092, 0.8615770936012268, 0.8577466607093811, 0.8589354157447815, 0.860652506351471, 0.8619733452796936, 0.8671245574951172, 0.8644828796386719, 0.8631620407104492, 0.8614450097084045, 0.8683133125305176, 0.8701624870300293], "val_loss": [1.916189432144165, 1.1182039976119995, 0.9893180131912231, 0.8067119121551514, 0.7758587002754211, 0.7657729387283325, 0.6964815855026245, 0.669150173664093, 0.7458393573760986, 0.6396393775939941, 0.6722710132598877, 0.6205723285675049, 0.6006432175636292, 0.5992133021354675, 0.6029326319694519, 0.605550229549408, 0.5558305382728577, 0.5558557510375977, 0.5563978552818298, 0.5545276403427124, 0.5650078654289246, 0.5330808758735657, 0.5497042536735535, 0.5311842560768127, 0.5231528878211975, 0.5099917054176331, 0.5300000905990601, 0.5029289722442627, 0.5014302730560303, 0.5102910995483398, 0.5016815662384033, 0.49255192279815674, 0.4715263545513153, 0.48004594445228577, 0.4693225622177124, 0.4672994017601013, 0.47183743119239807, 0.4644503891468048, 0.4681740403175354, 0.4610614478588104, 0.4528723955154419, 0.4502639174461365, 0.4637708365917206, 0.446440726518631, 0.4383564591407776, 0.4453147351741791, 0.44914644956588745, 0.4485018849372864, 0.44832172989845276, 0.42956477403640747, 0.43629691004753113, 0.42500820755958557, 0.4201408624649048, 0.43092045187950134, 0.4146169126033783, 0.4234645962715149, 0.4190250337123871, 0.42931026220321655, 0.4082930386066437, 0.4121665954589844, 0.43680623173713684, 0.42213040590286255, 0.402139812707901, 0.4114742577075958, 0.4015567898750305, 0.44007250666618347, 0.40119725465774536, 0.39573878049850464, 0.4069562256336212, 0.4050678014755249], "val_accuracy": [0.5289999842643738, 0.6346666812896729, 0.6103333234786987, 0.7103333473205566, 0.715666651725769, 0.7049999833106995, 0.7300000190734863, 0.7363333106040955, 0.7196666598320007, 0.7613333463668823, 0.7446666955947876, 0.7716666460037231, 0.7850000262260437, 0.777999997138977, 0.7649999856948853, 0.7673333287239075, 0.7906666398048401, 0.7896666526794434, 0.7933333516120911, 0.7906666398048401, 0.7910000085830688, 0.7963333129882812, 0.7940000295639038, 0.8023333549499512, 0.8053333163261414, 0.8116666674613953, 0.8016666769981384, 0.8143333196640015, 0.8176666498184204, 0.8063333630561829, 0.8130000233650208, 0.8116666674613953, 0.824999988079071, 0.8220000267028809, 0.8336666822433472, 0.8320000171661377, 0.8236666917800903, 0.8339999914169312, 0.8339999914169312, 0.831333339214325, 0.8353333473205566, 0.8316666483879089, 0.8263333439826965, 0.8393333554267883, 0.8410000205039978, 0.8316666483879089, 0.8333333134651184, 0.8286666870117188, 0.8286666870117188, 0.8496666550636292, 0.8386666774749756, 0.8476666808128357, 0.8516666889190674, 0.843666672706604, 0.8523333072662354, 0.8500000238418579, 0.8533333539962769, 0.8463333249092102, 0.8529999852180481, 0.8560000061988831, 0.8373333215713501, 0.8510000109672546, 0.8586666584014893, 0.8553333282470703, 0.8616666793823242, 0.8316666483879089, 0.8513333201408386, 0.859333336353302, 0.8556666374206543, 0.8566666841506958]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 67, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.11142857372760773, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9.170340151505715e+16, 1.0358190666625843e+17, 1.042881453186089e+17, 1.0211033061156454e+17, 1.0406649923633152e+17, 1.0140026943832064e+17], "accuracy": [0.10513802617788315, 0.10540219396352768, 0.10421344637870789, 0.10632677376270294, 0.10579843819141388, 0.10474177449941635], "val_loss": [8.709929965296026e+16, 8.709929965296026e+16, 8.709929965296026e+16, 8.709929965296026e+16, 8.709929965296026e+16, 8.709929965296026e+16], "val_accuracy": [0.1106666699051857, 0.1106666699051857, 0.1106666699051857, 0.1106666699051857, 0.1106666699051857, 0.1106666699051857]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 9, 6], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 5, 3, 2, 0, 12, 7, 5, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 5], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [7, 6, 6, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 4, 2, 2, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(grad, grad)))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303680658340454, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 5, 1, 0, 5], [3, 2, 0, 0, 2], [0, 75, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 5, 6, 3, 6, 2], [2, 0, 3, 1, 0], [70, 1], [1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [0], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 7, 4, 3, 1, 11, 6, 5, 2, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(grad, grad)), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3088908195495605, 2.308506488800049, 2.3093204498291016, 2.3102505207061768, 2.3101513385772705, 2.3099029064178467], "accuracy": [0.10051512718200684, 0.09470347315073013, 0.09721305221319199, 0.0886276587843895, 0.09311848133802414, 0.09219389408826828], "val_loss": [2.308838129043579, 2.308838129043579, 2.308838129043579, 2.308838129043579, 2.308838129043579, 2.308838129043579], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]