[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208038806915283, 1.5976110696792603, 1.1467829942703247, 1.0001696348190308, 0.8646272420883179, 0.8342432975769043, 0.8019886612892151, 0.7440842986106873, 0.7140533328056335, 0.7201229929924011, 0.6932377219200134, 0.676973819732666, 0.6529325246810913, 0.6293269991874695, 0.6350352168083191, 0.6145910620689392, 0.5984368920326233, 0.5761446952819824, 0.5842103362083435, 0.5646101236343384, 0.5480204224586487, 0.5595836043357849, 0.5542650818824768, 0.5325442552566528, 0.527090847492218, 0.526725172996521, 0.5162802338600159, 0.5015709400177002, 0.5009641051292419, 0.4929703176021576, 0.48458173871040344, 0.47828879952430725], "accuracy": [0.26997753977775574, 0.5095760226249695, 0.6057323813438416, 0.6428477168083191, 0.6857746839523315, 0.6959450244903564, 0.7033417224884033, 0.724739134311676, 0.7366266250610352, 0.7312111854553223, 0.737022876739502, 0.7518161535263062, 0.7555144429206848, 0.7602694630622864, 0.7664773464202881, 0.7720248103141785, 0.7790252566337585, 0.7903843522071838, 0.7869502305984497, 0.7906485199928284, 0.802271842956543, 0.7969884872436523, 0.796328067779541, 0.8053097128868103, 0.8100647330284119, 0.8098005652427673, 0.8108572363853455, 0.8149517774581909, 0.8104609847068787, 0.8240655064582825, 0.8190463781356812, 0.8293488025665283], "val_loss": [1.9050159454345703, 1.0924465656280518, 0.85658860206604, 0.7560478448867798, 0.7501896023750305, 0.6860093474388123, 0.6951113343238831, 0.6110548973083496, 0.6388643980026245, 0.5698930025100708, 0.5841046571731567, 0.5890621542930603, 0.560993492603302, 0.5618624091148376, 0.5503963232040405, 0.5250991582870483, 0.5130437612533569, 0.5270437598228455, 0.5115382671356201, 0.48353856801986694, 0.5187540054321289, 0.49495455622673035, 0.4794926047325134, 0.4633471667766571, 0.4586631953716278, 0.48230069875717163, 0.4508773684501648, 0.4636276364326477, 0.4436940848827362, 0.43926864862442017, 0.4480770230293274, 0.4459386467933655], "val_accuracy": [0.5870000123977661, 0.6203333139419556, 0.6930000185966492, 0.7289999723434448, 0.7210000157356262, 0.7396666407585144, 0.7236666679382324, 0.7743333578109741, 0.7450000047683716, 0.7940000295639038, 0.7943333387374878, 0.7760000228881836, 0.796999990940094, 0.7940000295639038, 0.7993333339691162, 0.8046666383743286, 0.8106666803359985, 0.7950000166893005, 0.8109999895095825, 0.8320000171661377, 0.8096666932106018, 0.824999988079071, 0.8296666741371155, 0.8403333425521851, 0.8399999737739563, 0.8133333325386047, 0.8416666388511658, 0.8266666531562805, 0.8399999737739563, 0.8416666388511658, 0.8349999785423279, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [1, 1, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 7, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.3854285776615143, "mapping_values": [1, 4, 2, 2, 0, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.394192695617676, 2.2846970558166504, 2.3122503757476807, 2.3041768074035645, 2.303241491317749, 2.303112745285034, 2.3024954795837402], "accuracy": [0.1830669641494751, 0.1674811840057373, 0.1542728841304779, 0.10091137140989304, 0.09681680053472519, 0.09628847241401672, 0.10328886657953262], "val_loss": [2.3037707805633545, 1.947993516921997, 2.304675817489624, 2.3026273250579834, 2.302549123764038, 2.302537441253662, 2.3024473190307617], "val_accuracy": [0.10400000214576721, 0.3803333342075348, 0.10000000149011612, 0.10199999809265137, 0.10499999672174454, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 2, 3, 1, 6, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 1, 4, 0, 8], [2, 4, 3, 3, 0, 4, 3], [16, 63], [0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 18, 11, 7, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.math.negative(grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 9, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 0, 3, 6, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 1, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 8, 5, 3, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31071400642395, 2.30896258354187, 2.3094849586486816, 2.3129522800445557, 2.3148443698883057, 2.316972017288208, 2.3299975395202637, 2.343813180923462, 2.368121862411499, 2.41182017326355], "accuracy": [0.0948355570435524, 0.09417514503002167, 0.09959053993225098, 0.09496764093637466, 0.09747721254825592, 0.09628847241401672, 0.0952318087220192, 0.10077928751707077, 0.09998679161071777, 0.10011887550354004], "val_loss": [2.3096489906311035, 2.3100783824920654, 2.310727596282959, 2.31141996383667, 2.3126797676086426, 2.315462112426758, 2.321371555328369, 2.332648754119873, 2.3521406650543213, 2.388197660446167], "val_accuracy": [0.08799999952316284, 0.09099999815225601, 0.09366666525602341, 0.09366666525602341, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 8], [0, 2, 1, 2, 2], [70, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 6, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 2, 2, 1], [0, 6, 1, 6, 0, 0], [47, 22, 57], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 11, 6, 5, 1, 2, 1, 1, 0, 13, 7, 6, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, alpha), tf.math.multiply(grad, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, alpha), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090415000915527, 2.309169054031372, 2.3107800483703613, 2.310520648956299, 2.3090078830718994, 2.309551954269409], "accuracy": [0.09377889335155487, 0.08770307898521423, 0.08730682730674744, 0.09628847241401672, 0.08915598690509796, 0.09126931428909302], "val_loss": [2.3085899353027344, 2.3085899353027344, 2.3085899353027344, 2.3085899353027344, 2.3085899353027344, 2.3085899353027344], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]