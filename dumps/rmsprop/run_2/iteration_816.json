[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8168571591377258, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20802640914917, 1.5937423706054688, 1.1290377378463745, 0.9884026646614075, 0.8818948268890381, 0.8307410478591919, 0.7859513759613037, 0.7697689533233643, 0.7376400828361511, 0.7105271220207214, 0.6915839910507202, 0.6768949031829834, 0.6572854518890381, 0.6460850238800049, 0.6293702721595764, 0.6068099737167358, 0.6099193692207336, 0.62342369556427, 0.5986738801002502, 0.5715193152427673, 0.5601317286491394, 0.5583810210227966, 0.5547167658805847, 0.548810601234436, 0.5525832772254944, 0.5384068489074707, 0.5302770733833313, 0.5199236869812012, 0.5154737830162048, 0.5214307308197021, 0.4989393949508667, 0.5043049454689026, 0.49325287342071533, 0.4767990708351135, 0.4814046025276184, 0.48210209608078003, 0.47346773743629456, 0.46740442514419556, 0.46212995052337646, 0.452200323343277, 0.4372820556163788], "accuracy": [0.26495838165283203, 0.507330596446991, 0.6106194853782654, 0.6472064256668091, 0.6845859289169312, 0.6988508701324463, 0.7152291536331177, 0.7202483415603638, 0.7246070504188538, 0.7386078238487244, 0.7401928305625916, 0.744419515132904, 0.7523444890975952, 0.7635715007781982, 0.7651565074920654, 0.7751948237419128, 0.7771760821342468, 0.7703077793121338, 0.7761194109916687, 0.7823272943496704, 0.7928939461708069, 0.793950617313385, 0.7989697456359863, 0.7973847389221191, 0.7976489067077637, 0.8005547523498535, 0.8050455451011658, 0.8107251524925232, 0.81112140417099, 0.8090080618858337, 0.8158763647079468, 0.8119139075279236, 0.8201030492782593, 0.8232730031013489, 0.8238013386726379, 0.8234050869941711, 0.8238013386726379, 0.8255184292793274, 0.8297450542449951, 0.834632158279419, 0.8397833704948425], "val_loss": [1.917339563369751, 1.130190372467041, 0.9010733962059021, 0.8229733109474182, 0.7324833273887634, 0.7532811164855957, 0.6494988203048706, 0.6700782775878906, 0.6243788003921509, 0.6216926574707031, 0.5729609131813049, 0.6005171537399292, 0.6007057428359985, 0.564487636089325, 0.5355654954910278, 0.5716122388839722, 0.5264464616775513, 0.5091792941093445, 0.4981648623943329, 0.5176210403442383, 0.5064704418182373, 0.4884117841720581, 0.5032356381416321, 0.48525097966194153, 0.47199520468711853, 0.48224738240242004, 0.4610383212566376, 0.4594438374042511, 0.4552064538002014, 0.4412277340888977, 0.4700465202331543, 0.4316500723361969, 0.43649762868881226, 0.436134934425354, 0.455657422542572, 0.42251554131507874, 0.42048346996307373, 0.4308217763900757, 0.42065104842185974, 0.40931209921836853, 0.4132222533226013], "val_accuracy": [0.4256666600704193, 0.6466666460037231, 0.6539999842643738, 0.6986666917800903, 0.7319999933242798, 0.7059999704360962, 0.7586666941642761, 0.7446666955947876, 0.762333333492279, 0.7526666522026062, 0.7796666622161865, 0.7620000243186951, 0.7609999775886536, 0.7846666574478149, 0.7926666736602783, 0.7680000066757202, 0.7963333129882812, 0.8056666851043701, 0.812333345413208, 0.7943333387374878, 0.8080000281333923, 0.8040000200271606, 0.8103333115577698, 0.8140000104904175, 0.8209999799728394, 0.8130000233650208, 0.8286666870117188, 0.8286666870117188, 0.8266666531562805, 0.8296666741371155, 0.8153333067893982, 0.8323333263397217, 0.828000009059906, 0.8346666693687439, 0.8206666707992554, 0.8399999737739563, 0.8353333473205566, 0.8353333473205566, 0.8379999995231628, 0.8396666646003723, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [17, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 6, 1, 8, 5, 8, 1], [0, 6, 7, 6, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.12542857229709625, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [59992426151936.0, 68082135465984.0, 70005504868352.0, 68574567727104.0, 69033240035328.0, 68970711351296.0], "accuracy": [0.11610091477632523, 0.1254788041114807, 0.1224408894777298, 0.1286487877368927, 0.11993131786584854, 0.12732796370983124], "val_loss": [45976807014400.0, 45976807014400.0, 45976807014400.0, 45976807014400.0, 45976807014400.0, 45976807014400.0], "val_accuracy": [0.1236666664481163, 0.1236666664481163, 0.1236666664481163, 0.1236666664481163, 0.1236666664481163, 0.1236666664481163]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 6, 5], [0, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 1, 3, 8, 2], [2, 0, 4, 4, 0], [0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 11, 6, 5, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 1, 2, 3, 6, 4], [0, 2, 1, 3, 2, 1, 0], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 4, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 4, 0, 3, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 14, 7, 7, 2, 2, 1, 1, 0, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(grad, grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.square(grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3093841075897217, 2.310487747192383, 2.3090386390686035, 2.3110597133636475, 2.3090708255767822, 2.310385227203369], "accuracy": [0.09417514503002167, 0.08849557489156723, 0.09206181764602661, 0.09153348207473755, 0.09298639744520187, 0.09166556596755981], "val_loss": [2.3085296154022217, 2.3085296154022217, 2.3085296154022217, 2.3085296154022217, 2.3085296154022217, 2.3085296154022217], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 0, 6, 3, 9, 3], [2, 0, 5, 1, 0], [16, 31], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [71], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 10, 5, 5, 2, 9, 6, 3, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309487819671631, 2.310941219329834, 2.3100554943084717, 2.3109443187713623, 2.3098933696746826, 2.3100194931030273], "accuracy": [0.09391097724437714, 0.09509972482919693, 0.09100515395402908, 0.09126931428909302, 0.09021265059709549, 0.08875974267721176], "val_loss": [2.3078997135162354, 2.3078997135162354, 2.3078997135162354, 2.3078997135162354, 2.3078997135162354, 2.3078997135162354], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]