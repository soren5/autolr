[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8199999928474426, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2100229263305664, 1.595323085784912, 1.1390430927276611, 0.9694538712501526, 0.890813946723938, 0.8146506547927856, 0.7630838751792908, 0.7637266516685486, 0.7099428772926331, 0.7087191939353943, 0.6879575848579407, 0.6668713688850403, 0.6512970924377441, 0.6304740905761719, 0.605779230594635, 0.614872395992279, 0.5901379585266113, 0.5958982706069946, 0.5727502107620239, 0.5794676542282104, 0.5602132081985474, 0.5419169664382935, 0.5473899245262146, 0.5363237261772156, 0.5308750867843628, 0.5164484977722168, 0.5091656446456909, 0.5146364569664001, 0.5042697787284851, 0.501042366027832, 0.4901914894580841, 0.4945298731327057, 0.47940656542778015, 0.48276910185813904, 0.4753013849258423, 0.48218607902526855, 0.46291813254356384], "accuracy": [0.26839256286621094, 0.507330596446991, 0.6052040457725525, 0.6456214785575867, 0.6779817938804626, 0.7058512568473816, 0.7246070504188538, 0.7135120630264282, 0.7360982894897461, 0.7382115721702576, 0.7420420050621033, 0.7511557340621948, 0.7586844563484192, 0.7650244235992432, 0.7754589915275574, 0.7676661014556885, 0.7804781198501587, 0.7799497842788696, 0.7823272943496704, 0.7825914621353149, 0.7895918488502502, 0.8013472557067871, 0.7984414100646973, 0.800818920135498, 0.8029322624206543, 0.8099326491355896, 0.8113855719566345, 0.8049134612083435, 0.8117818236351013, 0.8166688680648804, 0.8149517774581909, 0.8152159452438354, 0.824329674243927, 0.8211596608161926, 0.8235371708869934, 0.8203672170639038, 0.8265751004219055], "val_loss": [1.9250651597976685, 1.1587930917739868, 0.9309104681015015, 0.8132874369621277, 0.7768614292144775, 0.7172711491584778, 0.6662594676017761, 0.6662754416465759, 0.6368765234947205, 0.6494924426078796, 0.6005196571350098, 0.6084589958190918, 0.5860979557037354, 0.5593947768211365, 0.5591557621955872, 0.5545704960823059, 0.5808818936347961, 0.5378386974334717, 0.5305985808372498, 0.5346341729164124, 0.5108527541160583, 0.5120644569396973, 0.49901294708251953, 0.4999364912509918, 0.48888590931892395, 0.503616452217102, 0.48407140374183655, 0.4826917350292206, 0.49397769570350647, 0.4727648198604584, 0.47975605726242065, 0.4613252282142639, 0.45739802718162537, 0.47248804569244385, 0.47448116540908813, 0.45180514454841614, 0.44916409254074097], "val_accuracy": [0.5256666541099548, 0.5863333344459534, 0.637666642665863, 0.7016666531562805, 0.7306666374206543, 0.7323333621025085, 0.746999979019165, 0.7516666650772095, 0.7636666893959045, 0.7400000095367432, 0.7796666622161865, 0.7736666798591614, 0.7893333435058594, 0.7960000038146973, 0.7870000004768372, 0.7910000085830688, 0.7806666493415833, 0.8096666932106018, 0.8143333196640015, 0.8106666803359985, 0.8199999928474426, 0.8273333311080933, 0.8193333148956299, 0.8240000009536743, 0.8330000042915344, 0.8323333263397217, 0.8353333473205566, 0.8336666822433472, 0.8256666660308838, 0.8403333425521851, 0.8429999947547913, 0.8496666550636292, 0.8463333249092102, 0.8396666646003723, 0.8316666483879089, 0.843999981880188, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 8, 3], [0, 2, 0, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 2], [5, 0, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10542856901884079, "mapping_values": [1, 14, 8, 6, 3, 7, 4, 3, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8.231504109266534e+16, 8.899352625938432e+16, 9.48502639232942e+16, 9.657195310350336e+16, 9.160425648999629e+16, 9.139522043169997e+16], "accuracy": [0.10830801725387573, 0.11372341960668564, 0.11781799048185349, 0.11530841141939163, 0.11240258812904358, 0.11596883088350296], "val_loss": [6.713988225381171e+16, 6.713988225381171e+16, 6.713988225381171e+16, 6.713988225381171e+16, 6.713988225381171e+16, 6.713988225381171e+16], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 3, 2, 8, 3, 4, 2, 6, 6, 6, 2, 2, 0, 5, 8, 8], [0, 2, 1, 0, 2, 0, 1, 2, 0, 2, 0, 1, 0, 3, 3], [0, 39, 39, 45, 90, 5], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 0, 2, 5, 2, 1], [0, 0, 1, 6, 0], [0, 53, 41], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 21, 15, 6, 10, 6, 4, 2, 12, 7, 5, 3, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(alpha)))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, grad)))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 1, 0, 2], [0, 32, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 5, 7, 6], [0, 3, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101296424865723, 2.3102376461029053, 2.3096861839294434, 2.309431314468384, 2.3098068237304688, 2.310521364212036], "accuracy": [0.08849557489156723, 0.09206181764602661, 0.09668471664190292, 0.09959053993225098, 0.09391097724437714, 0.09232597798109055], "val_loss": [2.309574604034424, 2.309574604034424, 2.309574604034424, 2.309574604034424, 2.309574604034424, 2.309574604034424], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 3, 1, 2, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(alpha, beta)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309220314025879, 2.310655117034912, 2.311183452606201, 2.309929132461548, 2.3097448348999023, 2.309516191482544], "accuracy": [0.09430722147226334, 0.09140139818191528, 0.09206181764602661, 0.09219389408826828, 0.09589222073554993, 0.09708096832036972], "val_loss": [2.3081400394439697, 2.3081400394439697, 2.3081400394439697, 2.3081400394439697, 2.3081400394439697, 2.3081400394439697], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]