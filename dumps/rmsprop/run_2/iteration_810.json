[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2093422412872314, 1.6079169511795044, 1.1301811933517456, 0.9797539114952087, 0.8705369830131531, 0.8429006934165955, 0.7921667098999023, 0.7517760396003723, 0.7384958863258362, 0.7063238024711609, 0.6806567907333374, 0.6677506566047668, 0.6459499597549438, 0.6318880319595337, 0.6364325284957886, 0.612557053565979, 0.5948219299316406, 0.5888105034828186, 0.5872054100036621, 0.582670271396637, 0.5590530037879944, 0.5596341490745544, 0.5378844738006592, 0.5523231029510498, 0.5358068346977234, 0.5344222784042358, 0.5316429138183594, 0.5191187858581543, 0.5045931339263916, 0.4975346028804779, 0.5000475645065308, 0.4930873215198517, 0.48393145203590393, 0.48416492342948914, 0.4792460501194, 0.46776291728019714, 0.4792627692222595, 0.453528493642807, 0.45109978318214417, 0.4530394375324249], "accuracy": [0.2678642272949219, 0.502971887588501, 0.6022982597351074, 0.6509047746658325, 0.6859067678451538, 0.6907938122749329, 0.7055870890617371, 0.7239466309547424, 0.7165499925613403, 0.7420420050621033, 0.7427024245262146, 0.7524765729904175, 0.7541936039924622, 0.7619865536689758, 0.7549861073493958, 0.765949010848999, 0.7827235460281372, 0.7783648371696472, 0.778232753276825, 0.7817989587783813, 0.7876105904579163, 0.7882710099220276, 0.800818920135498, 0.7936864495277405, 0.800290584564209, 0.8049134612083435, 0.8000264167785645, 0.8096684813499451, 0.8129705190658569, 0.8224804997444153, 0.8185180425643921, 0.8168009519577026, 0.8195747137069702, 0.822348415851593, 0.8272355198860168, 0.8305375576019287, 0.8224804997444153, 0.8364813327789307, 0.8338396549224854, 0.8374059200286865], "val_loss": [1.913266897201538, 1.0973403453826904, 0.9904539585113525, 0.7994236946105957, 0.8287290334701538, 0.6691220998764038, 0.6767138838768005, 0.6625440716743469, 0.662039041519165, 0.6066499352455139, 0.5899724364280701, 0.5791334509849548, 0.5812711119651794, 0.6069902777671814, 0.57607501745224, 0.5250447392463684, 0.5550262331962585, 0.5615511536598206, 0.5296670198440552, 0.5107231736183167, 0.5336245894432068, 0.4992905557155609, 0.5111064314842224, 0.48915109038352966, 0.49264195561408997, 0.4868854582309723, 0.47016215324401855, 0.46485841274261475, 0.4677063524723053, 0.4674438536167145, 0.46331802010536194, 0.4655646085739136, 0.46896493434906006, 0.4446902573108673, 0.44468986988067627, 0.4643212556838989, 0.43547993898391724, 0.4407701790332794, 0.45002636313438416, 0.44805753231048584], "val_accuracy": [0.5550000071525574, 0.6463333368301392, 0.6299999952316284, 0.6913333535194397, 0.6880000233650208, 0.750333309173584, 0.7286666631698608, 0.7400000095367432, 0.7606666684150696, 0.765333354473114, 0.7730000019073486, 0.7749999761581421, 0.784333348274231, 0.7649999856948853, 0.7900000214576721, 0.8050000071525574, 0.7799999713897705, 0.781000018119812, 0.8153333067893982, 0.809333324432373, 0.7973333597183228, 0.8033333420753479, 0.7946666479110718, 0.8190000057220459, 0.8136666417121887, 0.824999988079071, 0.8306666612625122, 0.8253333568572998, 0.824999988079071, 0.8286666870117188, 0.8316666483879089, 0.824999988079071, 0.8243333101272583, 0.8389999866485596, 0.8396666646003723, 0.82833331823349, 0.8386666774749756, 0.8389999866485596, 0.8226666450500488, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 9, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 4, 1], [0, 22], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [8, 2, 3, 2, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 5], [16, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 8, 2, 0, 6, 4, 4], [0, 6, 1, 4, 4, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 5, 3, 2, 1, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.pow(grad, grad)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303797483444214, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [5, 2, 8, 1, 3, 5], [0, 3, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 5, 2, 1, 3, 8, 2, 1, 4, 5, 4, 2, 4, 9], [0, 6, 1, 5, 5, 7, 2, 1, 4, 6, 3, 2], [44, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 1, 29, 17, 12, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.subtract(grad, grad), tf.math.pow(beta, alpha)))))), tf.math.square(tf.math.pow(grad, tf.math.add(tf.math.pow(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), sigma))))), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098459243774414, 2.309541702270508, 2.3098840713500977, 2.3091228008270264, 2.3100388050079346, 2.309617757797241], "accuracy": [0.08638224750757217, 0.09602430462837219, 0.08651433140039444, 0.0936468094587326, 0.0940430611371994, 0.08796724677085876], "val_loss": [2.3079471588134766, 2.3079471588134766, 2.3079471588134766, 2.3079471588134766, 2.3079471588134766, 2.3079471588134766], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 58, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 3, 2, 1, 1, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102777004241943, 2.3098840713500977, 2.3097951412200928, 2.3100039958953857, 2.3082401752471924, 2.3102030754089355], "accuracy": [0.09074098616838455, 0.09285431355237961, 0.08981640636920929, 0.08928807079792023, 0.09192973375320435, 0.09272222965955734], "val_loss": [2.3088693618774414, 2.3088693618774414, 2.3088693618774414, 2.3088693618774414, 2.3088693618774414, 2.3088693618774414], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]