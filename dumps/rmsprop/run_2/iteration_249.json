[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2077512741088867, 1.5950466394424438, 1.1402645111083984, 0.9466880559921265, 0.8976432681083679, 0.8245530128479004, 0.7947021722793579, 0.7750123739242554, 0.7198876738548279, 0.700872540473938, 0.6857188940048218, 0.6734886169433594, 0.6485326290130615, 0.6327067017555237, 0.6092436909675598, 0.6266368627548218, 0.6072247624397278, 0.6083171963691711, 0.5786120295524597, 0.5706347823143005, 0.5731556415557861, 0.5530176758766174, 0.5529295802116394, 0.5299721956253052, 0.5379514098167419, 0.5345844030380249, 0.5243238210678101, 0.5050283670425415, 0.5040348768234253, 0.49078568816185, 0.5055862665176392, 0.48561403155326843, 0.48208367824554443, 0.47532176971435547, 0.4691118597984314, 0.46883320808410645, 0.4678873121738434, 0.46733352541923523, 0.44305649399757385, 0.4491007626056671, 0.4371332824230194, 0.43546977639198303, 0.43207573890686035, 0.43479129672050476, 0.42385509610176086], "accuracy": [0.26601505279541016, 0.5041606426239014, 0.6009774208068848, 0.6592260003089905, 0.6770572066307068, 0.7042662501335144, 0.7047945857048035, 0.7121912837028503, 0.7302865982055664, 0.7372870445251465, 0.7440232634544373, 0.7452120184898376, 0.7564390301704407, 0.7611940503120422, 0.7741381525993347, 0.7625148296356201, 0.7717606425285339, 0.7718927264213562, 0.785101056098938, 0.7874785661697388, 0.7848368883132935, 0.7976489067077637, 0.7915731072425842, 0.8067626357078552, 0.8012151718139648, 0.8054417967796326, 0.8103289008140564, 0.8150838613510132, 0.8170651197433472, 0.822348415851593, 0.8156121969223022, 0.819442629814148, 0.8202351331710815, 0.8252542614936829, 0.8286884427070618, 0.8304054737091064, 0.8314621448516846, 0.8297450542449951, 0.8380662798881531, 0.8337075710296631, 0.8428213000297546, 0.8397833704948425, 0.8381983637809753, 0.8399154543876648, 0.8474441766738892], "val_loss": [1.9227155447006226, 1.1340746879577637, 0.9177276492118835, 0.8210012912750244, 0.766096830368042, 0.7244765758514404, 0.6814857721328735, 0.6597925424575806, 0.6454451084136963, 0.6343597173690796, 0.6171690821647644, 0.5827591419219971, 0.5662632584571838, 0.5816986560821533, 0.5714544057846069, 0.5393967032432556, 0.5848920345306396, 0.528886616230011, 0.5421470403671265, 0.507860004901886, 0.5000920295715332, 0.522159993648529, 0.5204902291297913, 0.511968731880188, 0.5110249519348145, 0.48482218384742737, 0.4848268926143646, 0.4753216505050659, 0.4698063135147095, 0.4890574514865875, 0.471591055393219, 0.4922927916049957, 0.4754164218902588, 0.45629897713661194, 0.4613892734050751, 0.4620738625526428, 0.44381698966026306, 0.4480290412902832, 0.4374329149723053, 0.4349744915962219, 0.4470515251159668, 0.45471879839897156, 0.4408744275569916, 0.43157801032066345, 0.44653406739234924], "val_accuracy": [0.5669999718666077, 0.6389999985694885, 0.6386666893959045, 0.7086666822433472, 0.7246666550636292, 0.7163333296775818, 0.7440000176429749, 0.7456666827201843, 0.7586666941642761, 0.7590000033378601, 0.7696666717529297, 0.7839999794960022, 0.7870000004768372, 0.7806666493415833, 0.7776666879653931, 0.8076666593551636, 0.7743333578109741, 0.8016666769981384, 0.7933333516120911, 0.812333345413208, 0.8220000267028809, 0.7953333258628845, 0.8053333163261414, 0.8023333549499512, 0.809333324432373, 0.824999988079071, 0.8230000138282776, 0.8273333311080933, 0.8333333134651184, 0.8216666579246521, 0.8273333311080933, 0.8213333487510681, 0.82833331823349, 0.8343333601951599, 0.8299999833106995, 0.8259999752044678, 0.8416666388511658, 0.8403333425521851, 0.8413333296775818, 0.8473333120346069, 0.843666672706604, 0.8323333263397217, 0.8416666388511658, 0.8443333506584167, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 4, 6, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [6, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [50], [1], [0], [2], [0]], "fitness": -0.1842857152223587, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.59999942779541, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20657773315906525, 0.1336679458618164, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3044610023498535, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1863333284854889, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 9, 0, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 4], [2, 5, 3, 1, 0, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 9, 2, 5, 2, 1], [0, 6, 1, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 14, 8, 6, 2, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.pow(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [0, 39, 83], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 9, 0, 6, 8, 6, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031082153320312, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 1, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 3], [2, 0, 0, 1, 0], [74, 1, 69], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 0, 5], [0, 6, 1], [19], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 3, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3113179206848145, 2.311060905456543, 2.3093771934509277, 2.3092281818389893, 2.3099567890167236, 2.309359312057495], "accuracy": [0.08928807079792023, 0.08849557489156723, 0.09219389408826828, 0.0956280529499054, 0.09259014576673508, 0.08955223858356476], "val_loss": [2.307692766189575, 2.307692766189575, 2.307692766189575, 2.307692766189575, 2.307692766189575, 2.307692766189575], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]