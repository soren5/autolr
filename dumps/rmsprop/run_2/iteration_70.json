[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214167833328247, 1.6179578304290771, 1.157741665840149, 0.9944568872451782, 0.9218178987503052, 0.8277531862258911, 0.8001930117607117, 0.7788121700286865, 0.7195109724998474, 0.7034105658531189, 0.693653404712677, 0.6450400352478027, 0.6758167147636414, 0.6344161629676819, 0.6404228210449219, 0.6271591186523438, 0.6165911555290222, 0.583894670009613, 0.5734153985977173, 0.571002721786499, 0.5518284440040588, 0.5472308397293091, 0.5368182063102722, 0.5362160801887512, 0.5285447239875793, 0.5204013586044312, 0.5150106549263, 0.5128849148750305, 0.5076967477798462, 0.4966268837451935, 0.4877292513847351, 0.495389461517334, 0.4812920093536377], "accuracy": [0.2646942138671875, 0.5007264614105225, 0.5987319946289062, 0.6446968913078308, 0.6699247360229492, 0.6976621150970459, 0.7082287669181824, 0.7140403985977173, 0.7397965788841248, 0.7416457533836365, 0.7420420050621033, 0.7600052952766418, 0.7481178045272827, 0.7658169269561768, 0.7606657147407532, 0.7693831920623779, 0.7733456492424011, 0.7844406366348267, 0.791969358921051, 0.7866860628128052, 0.800290584564209, 0.7967243194580078, 0.8112534880638123, 0.8006868362426758, 0.8108572363853455, 0.8087438941001892, 0.8084797263145447, 0.8146876096725464, 0.8186501264572144, 0.8193105459213257, 0.8259146809577942, 0.8190463781356812, 0.8310658931732178], "val_loss": [1.9299805164337158, 1.1390502452850342, 0.992743730545044, 0.8100330233573914, 0.7187932729721069, 0.7096749544143677, 0.683606743812561, 0.6316224336624146, 0.6265490651130676, 0.6361448764801025, 0.5739953517913818, 0.571304202079773, 0.5779849290847778, 0.591396152973175, 0.5311692953109741, 0.5458833575248718, 0.5214748382568359, 0.5126601457595825, 0.5362117290496826, 0.5143662691116333, 0.5004611015319824, 0.5001222491264343, 0.48888617753982544, 0.4902704358100891, 0.47715917229652405, 0.4871375262737274, 0.48020321130752563, 0.4677361249923706, 0.47224190831184387, 0.46200719475746155, 0.45686787366867065, 0.46441954374313354, 0.45391374826431274], "val_accuracy": [0.609666645526886, 0.6366666555404663, 0.640666663646698, 0.7053333520889282, 0.746666669845581, 0.7300000190734863, 0.7599999904632568, 0.7706666588783264, 0.7630000114440918, 0.7573333382606506, 0.7900000214576721, 0.7873333096504211, 0.7960000038146973, 0.7826666831970215, 0.8076666593551636, 0.8033333420753479, 0.8159999847412109, 0.8186666369438171, 0.8009999990463257, 0.8146666884422302, 0.8209999799728394, 0.8193333148956299, 0.8276666402816772, 0.8223333358764648, 0.8309999704360962, 0.82833331823349, 0.8316666483879089, 0.8416666388511658, 0.8296666741371155, 0.8379999995231628, 0.8393333554267883, 0.8396666646003723, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 29], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 6, 2, 9], [2, 0, 3, 1, 0], [99, 1, 71], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 6, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10028571635484695, "mapping_values": [1, 11, 6, 5, 3, 13, 8, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1338427047936.0, 1527315300352.0, 1550852423680.0, 1527773921280.0, 1544412069888.0, 1540237295616.0, 1540482531328.0], "accuracy": [0.10962884873151779, 0.11174217611551285, 0.11293092370033264, 0.11042134463787079, 0.11187426000833511, 0.11187426000833511, 0.11147800832986832], "val_loss": [1114409271296.0, 1114375192576.0, 1114349240320.0, 1114327613440.0, 1114300612608.0, 1114276364288.0, 1114254868480.0], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 5, 7], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 1], [2, 1, 3, 0, 0], [79, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 5, 6], [0, 6, 6, 0], [0, 65], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 7, 4, 1], [2, 2, 3, 4, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 7, 4, 3, 0, 11, 7, 4, 2, 10, 5, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.square(grad)), tf.math.divide_no_nan(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(beta, beta), tf.math.subtract(sigma, grad)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 7, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036491870880127, 2.302670955657959, 2.302542209625244, 2.302841901779175, 2.302736759185791, 2.3026630878448486, 2.3026468753814697, 2.3027873039245605], "accuracy": [0.1014397069811821, 0.09708096832036972, 0.09576013684272766, 0.09853387624025345, 0.10170386731624603, 0.10051512718200684, 0.09959053993225098, 0.10408136248588562], "val_loss": [2.3028059005737305, 2.3028059005737305, 2.3027966022491455, 2.3029074668884277, 2.3028557300567627, 2.3027138710021973, 2.3027591705322266, 2.303025007247925], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.10233332961797714, 0.09733333438634872, 0.09966666996479034, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 4, 9, 5], [0, 0, 0, 1, 2], [0, 39, 39, 72], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 7, 8, 5, 0], [2, 0, 4, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [45], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 4, 14, 9, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.sqrt(beta), tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]