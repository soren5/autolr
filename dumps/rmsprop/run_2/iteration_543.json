[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2050509452819824, 1.5779756307601929, 1.1434451341629028, 0.975498616695404, 0.8804207444190979, 0.8586113452911377, 0.7715346813201904, 0.7643027305603027, 0.7313656210899353, 0.7136178612709045, 0.6874076724052429, 0.6508064866065979, 0.6533336043357849, 0.6303086876869202, 0.6181591153144836, 0.6046628355979919, 0.597566545009613, 0.5906203985214233, 0.5935536026954651, 0.5762832760810852, 0.5639730095863342, 0.5616008043289185, 0.5433639883995056, 0.5418745279312134, 0.5353661775588989, 0.5195999145507812, 0.5283422470092773, 0.5147700309753418, 0.5094075798988342, 0.49914029240608215, 0.49871087074279785, 0.4869425594806671, 0.4919387698173523, 0.4896462559700012, 0.4877001941204071, 0.4634077548980713, 0.46194061636924744, 0.4569300413131714, 0.4521467983722687, 0.4535495340824127, 0.4472615122795105, 0.4608006477355957, 0.44308727979660034, 0.4299362599849701, 0.42828354239463806], "accuracy": [0.2801479399204254, 0.5194822549819946, 0.6007132530212402, 0.650640606880188, 0.6822084188461304, 0.6847180128097534, 0.717870831489563, 0.7206445932388306, 0.7333245277404785, 0.7334566116333008, 0.7433628439903259, 0.7585523724555969, 0.7530049085617065, 0.763439416885376, 0.7676661014556885, 0.7714964747428894, 0.7824593782424927, 0.776251494884491, 0.7792893648147583, 0.7835160493850708, 0.7961959838867188, 0.7872143983840942, 0.7956677079200745, 0.7957997918128967, 0.7996301651000977, 0.8045172095298767, 0.7976489067077637, 0.8070268034934998, 0.8101968169212341, 0.8099326491355896, 0.8158763647079468, 0.8189142942428589, 0.8153480291366577, 0.81548011302948, 0.8187822103500366, 0.8253863453865051, 0.8253863453865051, 0.8296129703521729, 0.8276317715644836, 0.8347642421722412, 0.8368775844573975, 0.8310658931732178, 0.8378021121025085, 0.8405758738517761, 0.8404437899589539], "val_loss": [1.9039543867111206, 1.111504316329956, 0.9322068095207214, 0.8107653260231018, 0.8293823003768921, 0.6974784135818481, 0.6743012070655823, 0.6734192967414856, 0.6737009882926941, 0.6131048798561096, 0.6066321730613708, 0.590835690498352, 0.6160634160041809, 0.5946868658065796, 0.5686514377593994, 0.5583553314208984, 0.560498833656311, 0.5354057550430298, 0.5229292511940002, 0.5166975259780884, 0.5068160891532898, 0.4992177188396454, 0.5033491253852844, 0.5024240612983704, 0.4788523316383362, 0.49198609590530396, 0.47626376152038574, 0.47467610239982605, 0.47903189063072205, 0.4728362262248993, 0.45847347378730774, 0.45207324624061584, 0.47442626953125, 0.45227327942848206, 0.4524323642253876, 0.4468773603439331, 0.43962621688842773, 0.43297937512397766, 0.4370275139808655, 0.42421483993530273, 0.440239816904068, 0.42703360319137573, 0.4171757400035858, 0.4329034388065338, 0.44079333543777466], "val_accuracy": [0.5986666679382324, 0.6203333139419556, 0.6586666703224182, 0.6946666836738586, 0.6976666450500488, 0.7406666874885559, 0.75, 0.7536666393280029, 0.7279999852180481, 0.7799999713897705, 0.7720000147819519, 0.7713333368301392, 0.7636666893959045, 0.7670000195503235, 0.7923333048820496, 0.7903333306312561, 0.7873333096504211, 0.7996666431427002, 0.8046666383743286, 0.8026666641235352, 0.8190000057220459, 0.812666654586792, 0.8090000152587891, 0.812666654586792, 0.8213333487510681, 0.8153333067893982, 0.8256666660308838, 0.8333333134651184, 0.8233333230018616, 0.828000009059906, 0.8336666822433472, 0.8396666646003723, 0.8253333568572998, 0.8379999995231628, 0.8339999914169312, 0.8336666822433472, 0.840666651725769, 0.8486666679382324, 0.8410000205039978, 0.8526666760444641, 0.840666651725769, 0.8423333168029785, 0.8503333330154419, 0.8420000076293945, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 1, 6, 8, 9, 5, 9], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0, 0], [16, 1, 72], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 0, 2, 5, 2, 1], [3, 7, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 12, 5, 3, 13, 7, 6, 3, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100438117980957, 3.944955825805664, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.08492933213710785, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3153088092803955, 83.38241577148438, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09033333510160446, 0.09799999743700027, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 6, 2, 3, 5, 7], [0, 2, 1, 0, 2, 0], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 0], [0, 6, 1, 6, 0], [57, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 5, 3, 2, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.negative(alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303283452987671, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 3, 2, 3, 4], [0, 1, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 2, 5, 8], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 14, 9, 5, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), alpha)), grad)), tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090622425079346, 2.309213161468506, 2.308410406112671, 2.3092830181121826, 2.3104677200317383, 2.309356689453125], "accuracy": [0.09087307006120682, 0.09192973375320435, 0.09536388516426086, 0.0940430611371994, 0.09206181764602661, 0.09853387624025345], "val_loss": [2.308730363845825, 2.308730363845825, 2.308730363845825, 2.308730363845825, 2.308730363845825, 2.308730363845825], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 8, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 4, 2], [2, 6, 1, 6, 5], [0, 34], [1], [0], [0], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3101987838745117, 2.310133934020996, 2.310084819793701, 2.310772657394409, 2.312321424484253, 2.3100976943969727], "accuracy": [0.09457138925790787, 0.08770307898521423, 0.09351472556591034, 0.0874389111995697, 0.08928807079792023, 0.09338264167308807], "val_loss": [2.3089067935943604, 2.3089067935943604, 2.3089067935943604, 2.3089067935943604, 2.3089067935943604, 2.3089067935943604], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]