[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2126245498657227, 1.5991520881652832, 1.1332277059555054, 0.974064290523529, 0.9047621488571167, 0.8230574131011963, 0.7689566016197205, 0.7540732026100159, 0.7660241723060608, 0.6875653266906738, 0.7077053189277649, 0.6699075102806091, 0.6390275359153748, 0.6635249257087708, 0.6114490628242493, 0.6220330595970154, 0.600849986076355, 0.5795056819915771, 0.5804945826530457, 0.5722575187683105, 0.578303337097168, 0.55401211977005, 0.5365501046180725, 0.5448317527770996, 0.5424451231956482, 0.5245479345321655, 0.5223032832145691, 0.5035992860794067, 0.502882719039917, 0.49752742052078247, 0.4966575503349304, 0.4848121404647827, 0.4697267413139343, 0.47911617159843445, 0.46702277660369873, 0.4562206566333771, 0.4737183749675751, 0.445259690284729, 0.4445370137691498, 0.45604631304740906, 0.4369330406188965, 0.4353711009025574, 0.43080055713653564], "accuracy": [0.26482629776000977, 0.5152555704116821, 0.6021661758422852, 0.6552634835243225, 0.6696605682373047, 0.6983225345611572, 0.719852089881897, 0.7174745798110962, 0.7201162576675415, 0.746268630027771, 0.7363624572753906, 0.7548540234565735, 0.761590301990509, 0.7576277852058411, 0.7769119143486023, 0.7728173136711121, 0.7848368883132935, 0.7891955971717834, 0.7852331399917603, 0.7924976944923401, 0.787082314491272, 0.7988376617431641, 0.8054417967796326, 0.8082155585289001, 0.7998943328857422, 0.8101968169212341, 0.8098005652427673, 0.8216879963874817, 0.8164047002792358, 0.8175934553146362, 0.822348415851593, 0.8238013386726379, 0.830669641494751, 0.828820526599884, 0.8318583965301514, 0.8391229510307312, 0.8257825970649719, 0.8404437899589539, 0.8403117060661316, 0.8350284099578857, 0.8436138033866882, 0.8432175517082214, 0.8455950617790222], "val_loss": [1.9238249063491821, 1.0830336809158325, 0.8782118558883667, 0.7842589616775513, 0.809502363204956, 0.708018958568573, 0.6782673597335815, 0.7608606219291687, 0.622194766998291, 0.5953027606010437, 0.5978848338127136, 0.5780958533287048, 0.6660784482955933, 0.5714964270591736, 0.5587405562400818, 0.5237626433372498, 0.531141996383667, 0.5058537721633911, 0.5141286849975586, 0.5605655908584595, 0.5289227962493896, 0.49709585309028625, 0.49012091755867004, 0.484182208776474, 0.5006082653999329, 0.47779688239097595, 0.45818209648132324, 0.4565581977367401, 0.4672625660896301, 0.4640997052192688, 0.4645808935165405, 0.4372498393058777, 0.4298029839992523, 0.4395693838596344, 0.4432620704174042, 0.43543604016304016, 0.42045077681541443, 0.41962170600891113, 0.4274475574493408, 0.42085400223731995, 0.4190846383571625, 0.40644320845603943, 0.40881702303886414], "val_accuracy": [0.5616666674613953, 0.6690000295639038, 0.6806666851043701, 0.7059999704360962, 0.6896666884422302, 0.7360000014305115, 0.7513333559036255, 0.7203333377838135, 0.7593333125114441, 0.7663333415985107, 0.7713333368301392, 0.7693333625793457, 0.737666666507721, 0.7710000276565552, 0.784333348274231, 0.8033333420753479, 0.796999990940094, 0.8033333420753479, 0.8040000200271606, 0.781000018119812, 0.7960000038146973, 0.8096666932106018, 0.8193333148956299, 0.8186666369438171, 0.8146666884422302, 0.8206666707992554, 0.8293333053588867, 0.8320000171661377, 0.8186666369438171, 0.8299999833106995, 0.8199999928474426, 0.8376666903495789, 0.8450000286102295, 0.8343333601951599, 0.8346666693687439, 0.8370000123977661, 0.8486666679382324, 0.8503333330154419, 0.8486666679382324, 0.8463333249092102, 0.8416666388511658, 0.8479999899864197, 0.8500000238418579]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 2, 3, 2, 5, 5, 1, 9], [3, 2, 0, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 5, 3, 2], [1, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 8, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 3, 5, 3, 2, 0, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3111093044281006, 2.3142712116241455, 2.3226592540740967, 2.334083080291748, 2.3616137504577637, 2.426036834716797, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.09192973375320435, 0.08545766770839691, 0.08994849026203156, 0.09126931428909302, 0.09509972482919693, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3101868629455566, 2.317535400390625, 2.326834201812744, 2.3417694568634033, 2.3705849647521973, 2.483518123626709, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09099999815225601, 0.09600000083446503, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 6, 8, 2, 2, 3, 1, 4, 2, 7, 4, 4, 3], [3, 2, 1, 0, 0, 2, 0, 3, 3, 0, 0, 2, 0, 1, 0, 3], [0, 39, 39, 55, 49, 46, 58], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [70, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 8, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 18, 16, 7, 4, 2, 2, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.multiply(grad, tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha)))))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303520441055298, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 4, 3, 2, 3, 5, 4], [0, 2, 1, 0, 2, 0], [50, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 2, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [8, 5, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 13, 7, 6, 3, 10, 6, 4, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(grad, tf.math.multiply(beta, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106529712677, 2.3109130859375, 2.3102505207061768, 2.3112645149230957, 2.3110945224761963, 2.3101096153259277], "accuracy": [0.09298639744520187, 0.08717474341392517, 0.09047681838274002, 0.08942015469074249, 0.0886276587843895, 0.08638224750757217], "val_loss": [2.309803009033203, 2.309803009033203, 2.309803009033203, 2.309803009033203, 2.309803009033203, 2.309803009033203], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 6, 7, 4, 8], [1, 2, 1, 0, 2, 1, 1], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 2, 2, 5, 8, 5, 2, 6, 2, 7, 5], [0, 6, 1, 6, 0, 3, 4, 1], [47, 22], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 15, 8, 7, 1, 4, 3, 1, 0, 20, 12, 8, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.math.square(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(sigma), grad)))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310518980026245, 2.310244560241699, 2.30855655670166, 2.3104629516601562, 2.310619592666626, 2.3105881214141846], "accuracy": [0.09166556596755981, 0.09536388516426086, 0.09721305221319199, 0.09272222965955734, 0.09166556596755981, 0.09113723784685135], "val_loss": [2.3083879947662354, 2.3083879947662354, 2.3083879947662354, 2.3083879947662354, 2.3083879947662354, 2.3083879947662354], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]