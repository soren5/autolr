[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212160587310791, 1.6086007356643677, 1.1377774477005005, 0.987072765827179, 0.8728926181793213, 0.816246747970581, 0.7856658697128296, 0.7421709895133972, 0.7385594844818115, 0.6896051168441772, 0.6894608736038208, 0.6590924263000488, 0.655562162399292, 0.648834764957428, 0.6217592358589172, 0.6176977753639221, 0.594244122505188, 0.5871230363845825, 0.587291419506073, 0.5693126320838928, 0.5646723508834839, 0.5558663606643677, 0.5610469579696655, 0.5302979350090027, 0.5331801176071167, 0.5262808799743652, 0.5076130032539368, 0.5079883337020874, 0.5067038536071777, 0.4898107945919037, 0.49940767884254456, 0.4721180498600006, 0.47272762656211853, 0.48098024725914, 0.46854525804519653, 0.47384798526763916, 0.4551249146461487, 0.45766815543174744, 0.4454081356525421, 0.4588378071784973, 0.4370349049568176, 0.4399183392524719, 0.4328664243221283], "accuracy": [0.2645621597766876, 0.5042926669120789, 0.6021661758422852, 0.6479989290237427, 0.6840575933456421, 0.696209192276001, 0.7092854380607605, 0.722757875919342, 0.7256637215614319, 0.737947404384613, 0.739400327205658, 0.7485140562057495, 0.7519482374191284, 0.757099449634552, 0.76542067527771, 0.7664773464202881, 0.7784969210624695, 0.7795535326004028, 0.7837802171707153, 0.7898560166358948, 0.7878747582435608, 0.7881389260292053, 0.7921014428138733, 0.8054417967796326, 0.7984414100646973, 0.802800178527832, 0.8129705190658569, 0.8082155585289001, 0.8109893202781677, 0.8165367841720581, 0.8137630224227905, 0.8248580098152161, 0.822348415851593, 0.8201030492782593, 0.8257825970649719, 0.822348415851593, 0.8315942287445068, 0.8325188159942627, 0.8364813327789307, 0.8341038227081299, 0.8381983637809753, 0.8409721255302429, 0.8396512866020203], "val_loss": [1.9227125644683838, 1.0901515483856201, 0.9211069941520691, 0.77597576379776, 0.7799263596534729, 0.6946682929992676, 0.6479960680007935, 0.6505617499351501, 0.6285293102264404, 0.642421305179596, 0.5964640378952026, 0.598586916923523, 0.6357656121253967, 0.5915725231170654, 0.54176926612854, 0.5607045888900757, 0.5259804129600525, 0.5401294231414795, 0.5257650017738342, 0.5065737366676331, 0.5238502025604248, 0.49655622243881226, 0.5084776282310486, 0.5214236378669739, 0.4838962256908417, 0.48285409808158875, 0.4669918119907379, 0.4739524722099304, 0.4672606587409973, 0.46423229575157166, 0.45328229665756226, 0.4593981206417084, 0.4787842333316803, 0.44798681139945984, 0.4485338628292084, 0.44215691089630127, 0.4507250189781189, 0.4286669194698334, 0.4389108419418335, 0.4401954412460327, 0.4348689317703247, 0.44345468282699585, 0.4232131242752075], "val_accuracy": [0.5820000171661377, 0.6566666960716248, 0.6673333048820496, 0.7279999852180481, 0.7143333554267883, 0.7440000176429749, 0.7616666555404663, 0.7523333430290222, 0.7789999842643738, 0.7620000243186951, 0.7866666913032532, 0.7726666927337646, 0.7636666893959045, 0.7596666812896729, 0.7996666431427002, 0.7943333387374878, 0.8013333082199097, 0.8063333630561829, 0.8006666898727417, 0.8199999928474426, 0.8026666641235352, 0.8240000009536743, 0.8193333148956299, 0.7976666688919067, 0.8323333263397217, 0.831333339214325, 0.8366666436195374, 0.8330000042915344, 0.8376666903495789, 0.8326666951179504, 0.840666651725769, 0.8410000205039978, 0.8090000152587891, 0.8396666646003723, 0.8386666774749756, 0.8486666679382324, 0.8379999995231628, 0.8496666550636292, 0.846666693687439, 0.8479999899864197, 0.8456666469573975, 0.8403333425521851, 0.8493333458900452]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 5, 2, 7, 4, 3, 8, 1], [0, 2, 2, 0, 2, 3, 3, 3, 3], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [10, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [21, 53], [1], [0], [0], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 20, 11, 9, 2, 12, 7, 5, 2, 12, 7, 5, 2, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.multiply(tf.math.sqrt(tf.math.subtract(grad, grad)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310234785079956, 2.310382127761841, 2.3112874031066895, 2.311372756958008, 2.3107221126556396, 2.310887336730957], "accuracy": [0.09192973375320435, 0.09655263274908066, 0.09047681838274002, 0.09259014576673508, 0.09140139818191528, 0.08875974267721176], "val_loss": [2.308288097381592, 2.308288097381592, 2.308288097381592, 2.308288097381592, 2.308288097381592, 2.308288097381592], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 8, 3, 2, 3, 5, 5, 3], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 13, 8, 5, 3, 1, 0, 1, 0, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha))), grad), tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100948333740234, 2.3089561462402344, 2.310091018676758, 2.3093457221984863, 2.3093693256378174, 2.310317039489746], "accuracy": [0.09338264167308807, 0.09060890227556229, 0.09245806187391281, 0.09576013684272766, 0.09192973375320435, 0.09008057415485382], "val_loss": [2.308743715286255, 2.308743715286255, 2.308743715286255, 2.308743715286255, 2.308743715286255, 2.308743715286255], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 4, 8], [0, 2, 1, 0, 2, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 14, 8, 6, 2, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.sqrt(grad), grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310286521911621, 2.3091397285461426, 2.3096156120300293, 2.308985948562622, 2.309562921524048, 2.3097612857818604], "accuracy": [0.09034473448991776, 0.09681680053472519, 0.0956280529499054, 0.09893012791872025, 0.09325055778026581, 0.09206181764602661], "val_loss": [2.308210849761963, 2.308210849761963, 2.308210849761963, 2.308210849761963, 2.308210849761963, 2.308210849761963], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 2], [0, 2, 1, 0, 1, 0], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 2, 0, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 7, 0, 2, 5, 2, 7], [0, 6, 1, 6, 0], [91, 22], [0, 0, 0, 0, 1], [0, 8, 3, 9], [0], [0, 77]], "fitness": -0.08828571438789368, "mapping_values": [1, 13, 7, 6, 3, 8, 5, 3, 2, 10, 6, 4, 1, 5, 4, 1, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3100461959838867, 2.31023907661438, 2.3088085651397705, 2.309450626373291, 2.309117555618286, 2.3106698989868164], "accuracy": [0.08968432247638702, 0.08994849026203156, 0.09985470771789551, 0.09338264167308807, 0.08889182657003403, 0.09298639744520187], "val_loss": [2.3086864948272705, 2.3086864948272705, 2.3086864948272705, 2.3086864948272705, 2.3086864948272705, 2.3086864948272705], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]