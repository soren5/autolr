[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8197143077850342, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2120208740234375, 1.6052724123001099, 1.1372084617614746, 1.00885808467865, 0.8805714249610901, 0.8345041275024414, 0.7986168265342712, 0.7540307641029358, 0.7333722710609436, 0.6960510611534119, 0.690290629863739, 0.6747907400131226, 0.663661539554596, 0.6502721309661865, 0.6311359405517578, 0.6297527551651001, 0.6248030662536621, 0.6014918684959412, 0.5846220254898071, 0.5774906873703003, 0.576827883720398, 0.5629432797431946, 0.5568968653678894, 0.5411052703857422, 0.5404432415962219, 0.5319861173629761, 0.5378732085227966, 0.5128400921821594, 0.5238920450210571, 0.5065736174583435, 0.5056110620498657, 0.49153366684913635, 0.4894140660762787, 0.47855859994888306, 0.47976699471473694, 0.473413348197937, 0.45822563767433167, 0.47493776679039, 0.4647967219352722, 0.45647940039634705, 0.4497373700141907, 0.44903844594955444, 0.43791669607162476, 0.4487563967704773, 0.4339370131492615], "accuracy": [0.25320300459861755, 0.5044247508049011, 0.6108836531639099, 0.6390172839164734, 0.678642213344574, 0.6919825673103333, 0.6985867023468018, 0.7189275026321411, 0.7224937081336975, 0.739400327205658, 0.7417778372764587, 0.7437590956687927, 0.7460044622421265, 0.7577598690986633, 0.7598732113838196, 0.7592127919197083, 0.7644960880279541, 0.7728173136711121, 0.7795535326004028, 0.7837802171707153, 0.7832518815994263, 0.787082314491272, 0.7927618622779846, 0.7975168228149414, 0.7968564033508301, 0.7993659973144531, 0.7947431206703186, 0.8095363974571228, 0.8034605979919434, 0.8150838613510132, 0.8156121969223022, 0.8158763647079468, 0.8191784620285034, 0.8231409192085266, 0.8181217908859253, 0.8252542614936829, 0.837141752243042, 0.8207634687423706, 0.8300092220306396, 0.8317263126373291, 0.8359529972076416, 0.8364813327789307, 0.8380662798881531, 0.8330471515655518, 0.8372738361358643], "val_loss": [1.9284653663635254, 1.1296441555023193, 0.8837521076202393, 0.7765455842018127, 0.7365716099739075, 0.7367295622825623, 0.6656491160392761, 0.6405069231987, 0.6256653070449829, 0.6033613085746765, 0.6031737327575684, 0.6007351279258728, 0.5735509991645813, 0.5459562540054321, 0.5626556277275085, 0.5464098453521729, 0.5318379998207092, 0.5224165916442871, 0.528420627117157, 0.5191479921340942, 0.5017864108085632, 0.5172449350357056, 0.4948257505893707, 0.5068325996398926, 0.48436975479125977, 0.4854189157485962, 0.4633834660053253, 0.4708189368247986, 0.46621444821357727, 0.46052086353302, 0.4598885774612427, 0.44750478863716125, 0.45611056685447693, 0.4418278932571411, 0.44330599904060364, 0.4345019459724426, 0.44544747471809387, 0.43000367283821106, 0.432187020778656, 0.42039477825164795, 0.42306187748908997, 0.42747998237609863, 0.438687264919281, 0.4288257360458374, 0.4322753846645355], "val_accuracy": [0.5806666612625122, 0.6363333463668823, 0.6973333358764648, 0.7143333554267883, 0.7213333249092102, 0.7056666612625122, 0.7506666779518127, 0.7513333559036255, 0.7596666812896729, 0.7710000276565552, 0.7673333287239075, 0.762333333492279, 0.7693333625793457, 0.7886666655540466, 0.784333348274231, 0.8006666898727417, 0.7946666479110718, 0.8043333292007446, 0.7940000295639038, 0.7943333387374878, 0.8173333406448364, 0.8053333163261414, 0.815666675567627, 0.8023333549499512, 0.824999988079071, 0.815666675567627, 0.8293333053588867, 0.8236666917800903, 0.828000009059906, 0.8246666789054871, 0.8266666531562805, 0.8373333215713501, 0.8253333568572998, 0.8416666388511658, 0.8339999914169312, 0.843999981880188, 0.82833331823349, 0.8473333120346069, 0.8429999947547913, 0.8489999771118164, 0.847000002861023, 0.8446666598320007, 0.843666672706604, 0.8446666598320007, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 6, 6, 7], [0, 36], [1], [0], [2], [0]], "fitness": -0.10285714268684387, "mapping_values": [1, 7, 4, 3, 1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.247905917868442e+16, 8.237907046511411e+16, 8.30429865097298e+16, 8.385352414789632e+16, 8.229915830360474e+16, 8.285802803809485e+16], "accuracy": [0.10645885765552521, 0.109232597053051, 0.10500594228506088, 0.11187426000833511, 0.10527011007070541, 0.10579843819141388], "val_loss": [6.33839419433943e+16, 6.33839419433943e+16, 6.33839419433943e+16, 6.33839419433943e+16, 6.33839419433943e+16, 6.33839419433943e+16], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 6, 1, 7, 4, 7, 0, 9, 6, 2, 7, 9, 3, 9, 9, 0, 0, 6, 0], [0, 2, 1, 0, 0, 2, 0, 2, 1, 2, 0], [0, 39, 39, 42, 40, 91, 73, 25, 71], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 3, 0], [68, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 8, 5, 2, 1, 8], [5, 6, 1, 6, 0], [0, 22], [0, 0, 0, 0, 1, 1], [0, 1, 0, 0], [2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 23, 11, 9, 4, 3, 1, 1, 12, 8, 4, 0, 6, 4, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(grad))))), alpha)), tf.math.negative(tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.sqrt(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.negative(beta)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 7, 3, 4, 7, 2, 8, 2, 1, 9, 4, 9, 4, 0, 1, 8, 6, 1], [0, 2, 1, 0, 1, 0, 1, 1, 0, 2, 1, 0, 3], [0, 39, 39, 64, 2, 20, 87], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 1, 1], [6, 6, 1, 6, 0], [0, 22], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 20, 13, 7, 4, 2, 2, 1, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.pow(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(alpha), tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.negative(tf.math.subtract(alpha, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), grad))), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.06500768661499, 2.283379077911377, 2.304962396621704, 2.3032162189483643, 2.303252696990967, 2.3030123710632324, 2.3030099868774414, 2.303126811981201, 2.3028275966644287, 2.3028814792633057], "accuracy": [0.1946902722120285, 0.12112006545066833, 0.09906221181154251, 0.09694888442754745, 0.09536388516426086, 0.09642054885625839, 0.09602430462837219, 0.09311848133802414, 0.09853387624025345, 0.09853387624025345], "val_loss": [2.311171293258667, 2.3081650733947754, 2.302840232849121, 2.302600145339966, 2.302576780319214, 2.3026797771453857, 2.3027100563049316, 2.3025245666503906, 2.3025319576263428, 2.3025600910186768], "val_accuracy": [0.10166666656732559, 0.09700000286102295, 0.09700000286102295, 0.09933333098888397, 0.10266666859388351, 0.10100000351667404, 0.09933333098888397, 0.10266666859388351, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 5, 3, 2, 3, 5], [0, 1, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [36, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 4, 2, 1], [0, 1, 1, 6, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 7, 4, 3, 1, 11, 6, 5, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099284172058105, 2.309673309326172, 2.3107903003692627, 2.3103678226470947, 2.310962438583374, 2.31001877784729], "accuracy": [0.0948355570435524, 0.09377889335155487, 0.09008057415485382, 0.09126931428909302, 0.0886276587843895, 0.09721305221319199], "val_loss": [2.3083817958831787, 2.3083817958831787, 2.3083817958831787, 2.3083817958831787, 2.3083817958831787, 2.3083817958831787], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]