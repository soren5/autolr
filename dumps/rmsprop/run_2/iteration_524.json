[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103426456451416, 1.6032543182373047, 1.1528873443603516, 0.9876863360404968, 0.8830830454826355, 0.8176916837692261, 0.7668835520744324, 0.7301816344261169, 0.7475326061248779, 0.7131734490394592, 0.6722246408462524, 0.670102596282959, 0.6410159468650818, 0.6300077438354492, 0.6466726064682007, 0.6060037016868591, 0.5872353315353394, 0.585974931716919, 0.5795177221298218, 0.5571674704551697, 0.5451544523239136, 0.5602732300758362, 0.54495769739151, 0.5265108942985535, 0.5284686088562012, 0.5093280076980591, 0.5192514061927795, 0.5132433176040649, 0.5087007284164429, 0.49658840894699097, 0.4910059869289398, 0.4749121069908142, 0.4743584096431732, 0.47140875458717346, 0.4669008255004883, 0.4687075614929199, 0.45532557368278503, 0.4577084183692932, 0.4531306028366089, 0.43669313192367554, 0.441836953163147, 0.4394310414791107, 0.44348323345184326, 0.43093252182006836, 0.4289797842502594, 0.4186175465583801, 0.42166048288345337, 0.4197571873664856, 0.40751975774765015, 0.40158647298812866, 0.4131823778152466, 0.39948770403862, 0.38970568776130676, 0.3967077136039734, 0.3822140693664551], "accuracy": [0.2715625464916229, 0.5056135058403015, 0.5989961624145508, 0.6448289752006531, 0.6767930388450623, 0.6999075412750244, 0.7214370369911194, 0.7271166443824768, 0.720380425453186, 0.7364945411682129, 0.7483819723129272, 0.748778223991394, 0.7604015469551086, 0.7647602558135986, 0.754589855670929, 0.7720248103141785, 0.7857614755630493, 0.7773081660270691, 0.7769119143486023, 0.7907806038856506, 0.7977809906005859, 0.7860256433486938, 0.7903843522071838, 0.8033285140991211, 0.7996301651000977, 0.8157442808151245, 0.8078193068504333, 0.8074230551719666, 0.8117818236351013, 0.8177255392074585, 0.819970965385437, 0.8198388814926147, 0.8206313848495483, 0.8256505131721497, 0.8301413059234619, 0.8249900937080383, 0.8302733898162842, 0.829216718673706, 0.8315942287445068, 0.8393871188163757, 0.8383304476737976, 0.8348963260650635, 0.8350284099578857, 0.8399154543876648, 0.8376700282096863, 0.843481719493866, 0.8418967127799988, 0.8391229510307312, 0.8481045961380005, 0.8520671129226685, 0.844010055065155, 0.8512746095657349, 0.8569541573524475, 0.8520671129226685, 0.852859616279602], "val_loss": [1.9296995401382446, 1.1017193794250488, 0.9702504277229309, 0.8101476430892944, 0.7717049717903137, 0.7225583791732788, 0.6791260242462158, 0.6303975582122803, 0.6526591777801514, 0.6139008402824402, 0.6206455230712891, 0.5840062499046326, 0.5567966103553772, 0.5694068074226379, 0.5535900592803955, 0.5456334352493286, 0.5440487265586853, 0.524663507938385, 0.5227723717689514, 0.5092131495475769, 0.5390226244926453, 0.4907372295856476, 0.4925752878189087, 0.4950602352619171, 0.4823819696903229, 0.47349339723587036, 0.48142796754837036, 0.4730522036552429, 0.469570517539978, 0.4786393940448761, 0.4554271697998047, 0.4606284201145172, 0.4478221833705902, 0.4399300515651703, 0.44115063548088074, 0.43648576736450195, 0.4315067529678345, 0.44715192914009094, 0.4370281994342804, 0.44454747438430786, 0.42233923077583313, 0.4410156309604645, 0.42488300800323486, 0.4418402910232544, 0.4202084541320801, 0.42256253957748413, 0.42066875100135803, 0.41816791892051697, 0.4072206914424896, 0.4094986617565155, 0.4097692370414734, 0.4122581481933594, 0.40069079399108887, 0.4136623442173004, 0.3988002836704254], "val_accuracy": [0.5189999938011169, 0.6576666831970215, 0.6213333606719971, 0.6996666789054871, 0.6856666803359985, 0.7440000176429749, 0.7329999804496765, 0.7523333430290222, 0.7360000014305115, 0.7776666879653931, 0.7506666779518127, 0.7816666960716248, 0.8009999990463257, 0.7873333096504211, 0.7919999957084656, 0.7910000085830688, 0.7956666946411133, 0.8053333163261414, 0.8073333501815796, 0.8183333277702332, 0.8026666641235352, 0.8140000104904175, 0.8173333406448364, 0.8136666417121887, 0.8190000057220459, 0.8303333520889282, 0.8163333535194397, 0.8243333101272583, 0.8270000219345093, 0.8213333487510681, 0.8360000252723694, 0.8296666741371155, 0.8379999995231628, 0.8399999737739563, 0.8383333086967468, 0.8456666469573975, 0.8429999947547913, 0.8389999866485596, 0.8333333134651184, 0.8343333601951599, 0.846666693687439, 0.8333333134651184, 0.8456666469573975, 0.8339999914169312, 0.8543333411216736, 0.847000002861023, 0.8523333072662354, 0.8529999852180481, 0.8569999933242798, 0.8586666584014893, 0.8539999723434448, 0.8473333120346069, 0.8516666889190674, 0.8443333506584167, 0.8586666584014893]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 3, 5], [0, 2, 2, 1, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 7, 2, 5, 2, 5], [0, 3, 1, 6, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 8, 7, 9, 7], [0, 2, 1, 0, 2, 1], [91, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [5, 0, 3, 1, 0], [44, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 2, 1], [0, 6, 1, 5, 0], [0, 22], [0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0], [2, 6, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 9, 5, 4, 1, 12, 7, 5, 2, 7, 4, 3, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.math.subtract(tf.math.negative(grad), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 5, 3, 1, 3, 0], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 1, 5], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 7, 4, 3, 1, 9, 5, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095855712890625, 2.3093161582946777, 2.3101603984832764, 2.3097922801971436, 2.3104400634765625, 2.3094677925109863], "accuracy": [0.09126931428909302, 0.09787346422672272, 0.0886276587843895, 0.08625016361474991, 0.0948355570435524, 0.09576013684272766], "val_loss": [2.3089029788970947, 2.3089029788970947, 2.3089029788970947, 2.3089029788970947, 2.3089029788970947, 2.3089029788970947], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 0, 3, 3, 3, 0], [3, 0, 1, 0, 3, 2, 2, 1], [0, 27, 39], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [2, 4, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 0, 2, 5, 5, 5], [0, 6, 6, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 19, 11, 8, 2, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.multiply(tf.math.multiply(grad, grad), tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105268478393555, 2.31099271774292, 2.3097290992736816, 2.3105239868164062, 2.308823347091675, 2.309668779373169], "accuracy": [0.08942015469074249, 0.08889182657003403, 0.08757099509239197, 0.08942015469074249, 0.09113723784685135, 0.09747721254825592], "val_loss": [2.3074147701263428, 2.3074147701263428, 2.3074147701263428, 2.3074147701263428, 2.3074147701263428, 2.3074147701263428], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]