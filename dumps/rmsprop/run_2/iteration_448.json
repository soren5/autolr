[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8379999995231628, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111551761627197, 1.6124601364135742, 1.1547118425369263, 0.9868013858795166, 0.8868049383163452, 0.8548486828804016, 0.795318603515625, 0.7604727745056152, 0.7434497475624084, 0.7083503007888794, 0.7008334994316101, 0.6748778820037842, 0.6596797108650208, 0.6413249969482422, 0.6371254324913025, 0.6206077337265015, 0.6082178354263306, 0.6023101806640625, 0.5995630025863647, 0.5924149751663208, 0.5756310224533081, 0.5746917724609375, 0.5535927414894104, 0.538054883480072, 0.5369411110877991, 0.5186758637428284, 0.5372747182846069, 0.512383759021759, 0.5105863809585571, 0.5188077688217163, 0.49277886748313904, 0.4998922348022461, 0.49228140711784363, 0.48595887422561646, 0.4791046977043152, 0.4735735058784485, 0.47343528270721436, 0.46991440653800964, 0.45330798625946045, 0.4574032723903656, 0.45870667695999146, 0.4515092968940735, 0.44565549492836, 0.4372911751270294, 0.43465086817741394, 0.43372926115989685, 0.4266805946826935, 0.4296480715274811, 0.4184202551841736, 0.41341128945350647, 0.4236553907394409, 0.4146415889263153, 0.40071266889572144], "accuracy": [0.26535463333129883, 0.5046889185905457, 0.5941091179847717, 0.6477347612380981, 0.677189290523529, 0.6844538450241089, 0.7106062769889832, 0.7166820764541626, 0.7207766771316528, 0.7376832365989685, 0.741909921169281, 0.7511557340621948, 0.7516840696334839, 0.7582882046699524, 0.7618544697761536, 0.7656848430633545, 0.77677983045578, 0.7754589915275574, 0.7790252566337585, 0.7820631265640259, 0.7911768555641174, 0.7889314293861389, 0.7987055778503418, 0.8031964302062988, 0.8057059645652771, 0.81112140417099, 0.8054417967796326, 0.8140271902084351, 0.8115176558494568, 0.8092722296714783, 0.8216879963874817, 0.8175934553146362, 0.8197067975997925, 0.8232730031013489, 0.8281601071357727, 0.8251221776008606, 0.8251221776008606, 0.830669641494751, 0.8319904804229736, 0.8309338092803955, 0.8309338092803955, 0.8330471515655518, 0.8383304476737976, 0.8397833704948425, 0.8413683772087097, 0.8392550349235535, 0.8430854678153992, 0.8411042094230652, 0.847840428352356, 0.8499537706375122, 0.842028796672821, 0.8496896028518677, 0.8506141901016235], "val_loss": [1.9184987545013428, 1.1074219942092896, 0.9177712202072144, 0.7812987565994263, 0.7421452403068542, 0.7365580797195435, 0.6562799215316772, 0.6706315875053406, 0.6271200180053711, 0.6189019083976746, 0.6043288707733154, 0.5985824465751648, 0.5690704584121704, 0.5571750402450562, 0.5511046648025513, 0.5468910336494446, 0.5631363391876221, 0.5540798306465149, 0.5465162992477417, 0.5171934962272644, 0.501062273979187, 0.5164694786071777, 0.5015368461608887, 0.4883807897567749, 0.49304819107055664, 0.4845636487007141, 0.47886011004447937, 0.46550607681274414, 0.4695289731025696, 0.4680720269680023, 0.45605048537254333, 0.4702725410461426, 0.45621782541275024, 0.4502905309200287, 0.449125736951828, 0.43932801485061646, 0.4556867778301239, 0.42846477031707764, 0.4435902535915375, 0.43091848492622375, 0.41939201951026917, 0.4418523907661438, 0.41488802433013916, 0.4289614260196686, 0.41465049982070923, 0.43397513031959534, 0.40547770261764526, 0.4030797481536865, 0.40514010190963745, 0.4234628975391388, 0.41141000390052795, 0.3987548351287842, 0.39680927991867065], "val_accuracy": [0.5226666927337646, 0.6326666474342346, 0.6623333096504211, 0.7236666679382324, 0.737333357334137, 0.7273333072662354, 0.7576666474342346, 0.7486666440963745, 0.765999972820282, 0.7749999761581421, 0.7749999761581421, 0.777999997138977, 0.7956666946411133, 0.7940000295639038, 0.7876666784286499, 0.7940000295639038, 0.7866666913032532, 0.8029999732971191, 0.800000011920929, 0.8080000281333923, 0.8176666498184204, 0.812333345413208, 0.8159999847412109, 0.8240000009536743, 0.8169999718666077, 0.8196666836738586, 0.8263333439826965, 0.8343333601951599, 0.831333339214325, 0.8303333520889282, 0.8353333473205566, 0.8339999914169312, 0.8346666693687439, 0.8410000205039978, 0.8346666693687439, 0.8453333377838135, 0.8356666564941406, 0.8510000109672546, 0.8349999785423279, 0.8446666598320007, 0.8513333201408386, 0.8383333086967468, 0.8560000061988831, 0.8503333330154419, 0.859333336353302, 0.8423333168029785, 0.856333315372467, 0.8636666536331177, 0.8610000014305115, 0.846666693687439, 0.8560000061988831, 0.8616666793823242, 0.8613333106040955]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 3, 2, 0, 5], [0, 3, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.1022857129573822, "mapping_values": [1, 9, 6, 3, 1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [232539545403392.0, 285656060264448.0, 287042160295936.0, 295709672734720.0, 292871873757184.0, 294621670277120.0], "accuracy": [0.09747721254825592, 0.1072513535618782, 0.10038304328918457, 0.09721305221319199, 0.10170386731624603, 0.10196803510189056], "val_loss": [244593119461376.0, 244593119461376.0, 244593119461376.0, 244593119461376.0, 244593119461376.0, 244593119461376.0], "val_accuracy": [0.10733333230018616, 0.10733333230018616, 0.10733333230018616, 0.10733333230018616, 0.10733333230018616, 0.10733333230018616]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 4, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 7, 0, 2, 5, 7, 0], [0, 6, 1, 6, 0], [13, 22], [0, 0, 1, 1], [0, 7], [2, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 10, 6, 4, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 9, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 73, 39], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 4, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 1, 1, 0, 1, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033761978149414, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [9, 8, 3, 3, 3, 5], [0, 1, 1, 2, 3], [0, 39, 39], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 4, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 8], [0, 6, 1, 6, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099167346954346, 2.3090271949768066, 2.3100426197052, 2.309420108795166, 2.3100130558013916, 2.3103113174438477], "accuracy": [0.08691058307886124, 0.09496764093637466, 0.08915598690509796, 0.08479725569486618, 0.09153348207473755, 0.09100515395402908], "val_loss": [2.308738946914673, 2.308738946914673, 2.308738946914673, 2.308738946914673, 2.308738946914673, 2.308738946914673], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]