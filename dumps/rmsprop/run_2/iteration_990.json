[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2073025703430176, 1.570585012435913, 1.1311650276184082, 0.9735928177833557, 0.8885460495948792, 0.8167623281478882, 0.7794268727302551, 0.74737149477005, 0.7330798506736755, 0.7007550001144409, 0.6801913380622864, 0.6797541379928589, 0.6456749439239502, 0.6510469913482666, 0.6311674118041992, 0.594875156879425, 0.6238332390785217, 0.5924206376075745, 0.5809506773948669, 0.563412070274353, 0.5654692053794861, 0.5653387308120728, 0.5552133321762085, 0.5315126180648804, 0.5287171602249146, 0.5354699492454529, 0.5304591059684753, 0.5113140940666199, 0.5108776092529297, 0.5022513270378113, 0.502237856388092, 0.4998040497303009, 0.48069387674331665, 0.48092612624168396, 0.4782658517360687, 0.4658241271972656, 0.47031673789024353, 0.4643215239048004, 0.4469577372074127, 0.4494938850402832, 0.4563392400741577, 0.44139865040779114, 0.4401898682117462, 0.43067312240600586, 0.4287489950656891, 0.4289572834968567, 0.4241434931755066, 0.4230349361896515, 0.4173831045627594, 0.4089861214160919, 0.409394234418869, 0.39531898498535156, 0.40696555376052856, 0.4016861617565155, 0.40151697397232056, 0.39375805854797363, 0.3958168625831604, 0.3891655504703522, 0.3745078146457672, 0.388679176568985, 0.37752118706703186, 0.38067707419395447, 0.38056567311286926, 0.36771565675735474, 0.36886104941368103, 0.3605867624282837, 0.36067473888397217, 0.36357593536376953, 0.35534241795539856, 0.36132389307022095, 0.3569870591163635, 0.3503490388393402, 0.3492954671382904, 0.35089144110679626, 0.34596776962280273, 0.3390352725982666], "accuracy": [0.270109623670578, 0.5218597054481506, 0.6136573553085327, 0.651168942451477, 0.6800950765609741, 0.7021529674530029, 0.7135120630264282, 0.7292299270629883, 0.7349095344543457, 0.7456082701683044, 0.7541936039924622, 0.7506273984909058, 0.7611940503120422, 0.7576277852058411, 0.7700436115264893, 0.785101056098938, 0.7721568942070007, 0.7816668748855591, 0.7861577272415161, 0.7980451583862305, 0.7930260300636292, 0.7985734939575195, 0.7992339134216309, 0.8045172095298767, 0.8033285140991211, 0.8016114234924316, 0.8072909712791443, 0.81548011302948, 0.81548011302948, 0.817989706993103, 0.8201030492782593, 0.8164047002792358, 0.8231409192085266, 0.8274996876716614, 0.8318583965301514, 0.8327829837799072, 0.8318583965301514, 0.8355567455291748, 0.8391229510307312, 0.8387266993522644, 0.8387266993522644, 0.8383304476737976, 0.8412362933158875, 0.8442742228507996, 0.8437458872795105, 0.8473120927810669, 0.8466516733169556, 0.8459912538528442, 0.8466516733169556, 0.8524633646011353, 0.8520671129226685, 0.856689989566803, 0.8573504090309143, 0.8539162874221802, 0.857218325138092, 0.8601241707801819, 0.8555012345314026, 0.8560295701026917, 0.8677849769592285, 0.8610487580299377, 0.8615770936012268, 0.8619733452796936, 0.8644828796386719, 0.867520809173584, 0.8659358024597168, 0.8725399374961853, 0.8693699836730957, 0.8671245574951172, 0.8640866279602051, 0.8658037185668945, 0.8710870146751404, 0.8726720213890076, 0.8754457831382751, 0.8672566413879395, 0.8720116019248962, 0.876370370388031], "val_loss": [1.9086418151855469, 1.0677192211151123, 0.8670509457588196, 0.7856361269950867, 0.746522843837738, 0.6759600639343262, 0.6523999571800232, 0.6730651259422302, 0.6147539019584656, 0.6201037764549255, 0.6241580247879028, 0.6042484641075134, 0.5602664351463318, 0.5653595924377441, 0.5605129599571228, 0.5601513981819153, 0.5489411354064941, 0.5196531414985657, 0.5215741395950317, 0.4974084794521332, 0.5431471467018127, 0.5039097666740417, 0.4927078187465668, 0.47682520747184753, 0.47629472613334656, 0.5001766085624695, 0.4801093637943268, 0.45813485980033875, 0.450300931930542, 0.45099130272865295, 0.4520590007305145, 0.43998393416404724, 0.45037129521369934, 0.43433794379234314, 0.42705151438713074, 0.4546401798725128, 0.4427679777145386, 0.42310017347335815, 0.41382673382759094, 0.4137258231639862, 0.4151705801486969, 0.41064226627349854, 0.4129808843135834, 0.40219229459762573, 0.40310904383659363, 0.397854745388031, 0.4050258696079254, 0.3935217261314392, 0.40446192026138306, 0.38911136984825134, 0.38593029975891113, 0.402805894613266, 0.3869853615760803, 0.4182593524456024, 0.3889020085334778, 0.3770120143890381, 0.3883395493030548, 0.37363335490226746, 0.3712519407272339, 0.37754321098327637, 0.38224032521247864, 0.374979168176651, 0.3698948621749878, 0.3723103702068329, 0.368814617395401, 0.3740808963775635, 0.3665415048599243, 0.3742021918296814, 0.36749356985092163, 0.36412930488586426, 0.3558048605918884, 0.36505046486854553, 0.36194750666618347, 0.35414037108421326, 0.35785648226737976, 0.35428914427757263], "val_accuracy": [0.593666672706604, 0.6603333353996277, 0.6990000009536743, 0.721666693687439, 0.7223333120346069, 0.7433333396911621, 0.7556666731834412, 0.7369999885559082, 0.7596666812896729, 0.7606666684150696, 0.7490000128746033, 0.7509999871253967, 0.7870000004768372, 0.7833333611488342, 0.7820000052452087, 0.7823333144187927, 0.7886666655540466, 0.7950000166893005, 0.7990000247955322, 0.809333324432373, 0.784333348274231, 0.8119999766349792, 0.8116666674613953, 0.8143333196640015, 0.8153333067893982, 0.8033333420753479, 0.8103333115577698, 0.8296666741371155, 0.8299999833106995, 0.8309999704360962, 0.8303333520889282, 0.8389999866485596, 0.82833331823349, 0.8333333134651184, 0.8420000076293945, 0.8286666870117188, 0.8259999752044678, 0.8426666855812073, 0.843999981880188, 0.8446666598320007, 0.8413333296775818, 0.8479999899864197, 0.8453333377838135, 0.8526666760444641, 0.8416666388511658, 0.8536666631698608, 0.8536666631698608, 0.8539999723434448, 0.8476666808128357, 0.8543333411216736, 0.8583333492279053, 0.8453333377838135, 0.8560000061988831, 0.8336666822433472, 0.8569999933242798, 0.8633333444595337, 0.8513333201408386, 0.8606666922569275, 0.8636666536331177, 0.8553333282470703, 0.859666645526886, 0.8633333444595337, 0.8653333187103271, 0.8656666874885559, 0.8629999756813049, 0.8603333234786987, 0.8640000224113464, 0.8610000014305115, 0.8669999837875366, 0.8693333268165588, 0.8723333477973938, 0.862333357334137, 0.8669999837875366, 0.8723333477973938, 0.8706666827201843, 0.8693333268165588]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 7], [0, 0, 0, 0, 2], [0, 50, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 5, 3, 1, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [4, 2, 0, 2, 7, 2, 1, 5], [0, 6, 5, 6, 5, 0, 3], [0, 71], [1], [0], [7], [0]], "fitness": -0.21314285695552826, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 15, 8, 7, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.add(grad, grad))), tf.math.subtract(tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.8363442420959473, 2.2999489307403564, 2.2386815547943115, 2.8841567039489746, 2.3322722911834717, 2.3034605979919434, 2.2844510078430176, 2.5054471492767334, 2.3032913208007812, 2.3030641078948975, 2.302898645401001, 2.3030388355255127], "accuracy": [0.17355699837207794, 0.10659094154834747, 0.17302866280078888, 0.1162329912185669, 0.10500594228506088, 0.09655263274908066, 0.12112006545066833, 0.109232597053051, 0.09708096832036972, 0.09457138925790787, 0.09668471664190292, 0.09272222965955734], "val_loss": [2.30470609664917, 2.2847278118133545, 2.33286452293396, 2.286210536956787, 2.303295612335205, 2.302187919616699, 3.3672139644622803, 2.303570032119751, 2.3027446269989014, 2.3025615215301514, 2.302652359008789, 2.3026058673858643], "val_accuracy": [0.09733333438634872, 0.17599999904632568, 0.09733333438634872, 0.19599999487400055, 0.10000000149011612, 0.09966666996479034, 0.21766667068004608, 0.0976666659116745, 0.10133333504199982, 0.10133333504199982, 0.09966666996479034, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 2, 3, 1, 3, 5, 4, 2, 0, 1, 2, 2, 0, 2, 2, 0], [0, 0, 1, 0, 2, 3, 0, 2, 3, 2, 3, 3, 2], [90, 39, 39, 5], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 82], [0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 0, 2, 5], [0, 6, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 16, 13, 4, 2, 2, 0, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.add(tf.math.negative(grad), grad), tf.math.subtract(tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(tf.math.add(grad, grad), tf.math.negative(grad))), grad)), grad))))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033337593078613, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 4, 3, 2, 9, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 4, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 10, 6, 4, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), alpha), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1220446452498436, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [8, 2, 0, 7, 5, 7, 1], [0, 6, 1, 6, 4], [0, 22], [1], [0], [1], [0]], "fitness": -0.09600000083446503, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3106956481933594, 2.3103435039520264, 2.309786558151245, 2.310070514678955, 2.3101255893707275, 2.3107683658599854], "accuracy": [0.09272222965955734, 0.08677849918603897, 0.10011887550354004, 0.09074098616838455, 0.08942015469074249, 0.0948355570435524], "val_loss": [2.3079686164855957, 2.3079686164855957, 2.3079686164855957, 2.3079686164855957, 2.3079686164855957, 2.3079686164855957], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]