[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108757495880127, 1.6046079397201538, 1.1639105081558228, 0.9796939492225647, 0.8781127333641052, 0.8212390542030334, 0.7683559656143188, 0.7414552569389343, 0.7315225601196289, 0.720418393611908, 0.6989696025848389, 0.6768393516540527, 0.6362941861152649, 0.6435158848762512, 0.6270754933357239, 0.6145401000976562, 0.5955432057380676, 0.5988451242446899, 0.5745821595191956, 0.5769649744033813, 0.5749816298484802, 0.5584824085235596, 0.5653955340385437, 0.5365784764289856, 0.5289425849914551, 0.522138774394989, 0.5132672786712646, 0.5080541372299194, 0.5140313506126404, 0.5045011639595032, 0.49707767367362976, 0.4871939420700073, 0.48456963896751404, 0.4793294072151184, 0.4650326073169708, 0.47056877613067627, 0.4594089090824127, 0.46101194620132446, 0.4501274526119232, 0.45623305439949036, 0.44519779086112976, 0.44186127185821533, 0.43958067893981934, 0.43344464898109436, 0.4293001890182495, 0.4265941381454468, 0.41566628217697144, 0.41924893856048584, 0.40665242075920105, 0.413904070854187, 0.39963820576667786, 0.4091986417770386, 0.39491981267929077, 0.4026929438114166, 0.3875921368598938, 0.38934099674224854, 0.3824900984764099], "accuracy": [0.2623167335987091, 0.5123497843742371, 0.5960903167724609, 0.6454893946647644, 0.6837934255599976, 0.6979262828826904, 0.7180029153823853, 0.7333245277404785, 0.7326641082763672, 0.7337207794189453, 0.7375511527061462, 0.7493065595626831, 0.7637035846710205, 0.7638356685638428, 0.7676661014556885, 0.7712323069572449, 0.7758552432060242, 0.7761194109916687, 0.7887993454933167, 0.7898560166358948, 0.7821952104568481, 0.7988376617431641, 0.7992339134216309, 0.8039889335632324, 0.8061022162437439, 0.8078193068504333, 0.8105930685997009, 0.8128384351730347, 0.8123101592063904, 0.8149517774581909, 0.8210275769233704, 0.8240655064582825, 0.8189142942428589, 0.8252542614936829, 0.8314621448516846, 0.8308017253875732, 0.8376700282096863, 0.8317263126373291, 0.8362171649932861, 0.832650899887085, 0.8358209133148193, 0.844010055065155, 0.8436138033866882, 0.842028796672821, 0.8450667262077332, 0.8482366800308228, 0.8426892161369324, 0.8437458872795105, 0.8508783578872681, 0.8518029451370239, 0.8524633646011353, 0.8502179384231567, 0.8544445633888245, 0.8535200357437134, 0.8582749962806702, 0.8581429123878479, 0.8634262084960938], "val_loss": [1.9168528318405151, 1.0870040655136108, 0.8545615077018738, 0.7631185054779053, 0.7074515223503113, 0.6650650501251221, 0.6131101250648499, 0.6516234278678894, 0.589069664478302, 0.6194294691085815, 0.6024503111839294, 0.5561079978942871, 0.5558961033821106, 0.5602833032608032, 0.5520623922348022, 0.5213741660118103, 0.5118577480316162, 0.5101863741874695, 0.48384273052215576, 0.5171985030174255, 0.5243351459503174, 0.486490398645401, 0.4795362055301666, 0.47527942061424255, 0.500408947467804, 0.4551757276058197, 0.45554137229919434, 0.444169282913208, 0.44685032963752747, 0.43676456809043884, 0.44436198472976685, 0.43450167775154114, 0.42443302273750305, 0.437360018491745, 0.42410147190093994, 0.4273979365825653, 0.4177687466144562, 0.40875592827796936, 0.40945854783058167, 0.4339689612388611, 0.40342435240745544, 0.4038718342781067, 0.4011053442955017, 0.39664486050605774, 0.39652636647224426, 0.39287182688713074, 0.40150171518325806, 0.39837202429771423, 0.3857369124889374, 0.3853168189525604, 0.3851635754108429, 0.3812667727470398, 0.37858647108078003, 0.38310644030570984, 0.382109671831131, 0.3860897123813629, 0.38049641251564026], "val_accuracy": [0.609333336353302, 0.6553333401679993, 0.6966666579246521, 0.7183333039283752, 0.7493333220481873, 0.7483333349227905, 0.7643333077430725, 0.7360000014305115, 0.7796666622161865, 0.7433333396911621, 0.7646666765213013, 0.7940000295639038, 0.7913333177566528, 0.7910000085830688, 0.7723333239555359, 0.8023333549499512, 0.8053333163261414, 0.8040000200271606, 0.812666654586792, 0.8019999861717224, 0.8006666898727417, 0.8209999799728394, 0.8186666369438171, 0.8193333148956299, 0.8066666722297668, 0.8353333473205566, 0.8326666951179504, 0.8393333554267883, 0.8263333439826965, 0.8339999914169312, 0.8386666774749756, 0.8383333086967468, 0.8483333587646484, 0.8323333263397217, 0.8416666388511658, 0.8473333120346069, 0.8443333506584167, 0.8543333411216736, 0.8550000190734863, 0.8316666483879089, 0.8533333539962769, 0.8516666889190674, 0.856333315372467, 0.8583333492279053, 0.8543333411216736, 0.8573333621025085, 0.8526666760444641, 0.8576666712760925, 0.8586666584014893, 0.859000027179718, 0.859666645526886, 0.8629999756813049, 0.8606666922569275, 0.8613333106040955, 0.8579999804496765, 0.8629999756813049, 0.8573333621025085]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 3], [0, 2, 1, 3, 2, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [79, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 6, 3, 2, 5, 2, 1], [0, 6, 3, 2, 0], [0, 84], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 11, 6, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 7, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 3, 3, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 9], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 2, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 7, 2, 5, 7, 1], [3, 6, 1, 6, 0, 4], [0, 22], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 5, 2, 4, 6, 2, 6, 5, 3, 1, 9, 6, 9, 5], [2, 0, 1, 7, 5, 6, 2], [0, 99, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 2, 1, 1, 0, 13, 7, 6, 1, 21, 14, 7, 3], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), grad))), grad), tf.math.square(grad)), beta)))", "other_info": {"loss": [20.757015228271484, 26.728933334350586, 25.952274322509766, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10487385839223862, 0.10632677376270294, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13.105298042297363, 13.106362342834473, 13.106907844543457, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 3, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 4, 2, 2, 1, 9, 5, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101806640625, 2.308779716491699, 2.309704542160034, 2.3105356693267822, 2.3104324340820312, 2.31001615524292], "accuracy": [0.0948355570435524, 0.09245806187391281, 0.09668471664190292, 0.09008057415485382, 0.08994849026203156, 0.09496764093637466], "val_loss": [2.308290481567383, 2.308290481567383, 2.308290481567383, 2.308290481567383, 2.308290481567383, 2.308290481567383], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]