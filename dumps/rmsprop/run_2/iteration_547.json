[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2144477367401123, 1.6234245300292969, 1.1537423133850098, 0.9865262508392334, 0.9037002325057983, 0.829577624797821, 0.7942443490028381, 0.7659052610397339, 0.7138139009475708, 0.7046119570732117, 0.6867225766181946, 0.6666168570518494, 0.6615762114524841, 0.6617111563682556, 0.6242222785949707, 0.6185055375099182, 0.6033812761306763, 0.5854114294052124, 0.5903910994529724, 0.5841193199157715, 0.5648215413093567, 0.5654603242874146, 0.5468735694885254, 0.5473904609680176, 0.5401591658592224, 0.5288330912590027, 0.5134713649749756, 0.5084644556045532, 0.5108819007873535, 0.49871915578842163, 0.4926663041114807], "accuracy": [0.2615242302417755, 0.5024435520172119, 0.5941091179847717, 0.6494518518447876, 0.6793025732040405, 0.694360077381134, 0.7073041796684265, 0.7193237543106079, 0.7407211661338806, 0.741909921169281, 0.7494386434555054, 0.7523444890975952, 0.7589486241340637, 0.7584202885627747, 0.7709681391716003, 0.7733456492424011, 0.778761088848114, 0.7873464822769165, 0.7835160493850708, 0.7844406366348267, 0.7930260300636292, 0.7915731072425842, 0.802271842956543, 0.7967243194580078, 0.8026680946350098, 0.8025360107421875, 0.8117818236351013, 0.8141592741012573, 0.8145555257797241, 0.8204993009567261, 0.8256505131721497], "val_loss": [1.9384417533874512, 1.113211750984192, 1.0209612846374512, 0.811852216720581, 0.7499194145202637, 0.7259142398834229, 0.7162455916404724, 0.6774365901947021, 0.6307429075241089, 0.6272937655448914, 0.6359397172927856, 0.666804850101471, 0.6293959021568298, 0.582274317741394, 0.5759400129318237, 0.5751989483833313, 0.5806910395622253, 0.5515090227127075, 0.5598458051681519, 0.5561904907226562, 0.5305894613265991, 0.5355561375617981, 0.5190130472183228, 0.5128646492958069, 0.5611856579780579, 0.4998902678489685, 0.49742528796195984, 0.506305992603302, 0.5184054374694824, 0.4936071038246155, 0.4875519275665283], "val_accuracy": [0.5329999923706055, 0.6460000276565552, 0.5816666483879089, 0.6959999799728394, 0.7283333539962769, 0.7260000109672546, 0.7200000286102295, 0.7480000257492065, 0.768666684627533, 0.7493333220481873, 0.7540000081062317, 0.7396666407585144, 0.7476666569709778, 0.7850000262260437, 0.7863333225250244, 0.778333306312561, 0.7796666622161865, 0.8003333210945129, 0.7916666865348816, 0.7839999794960022, 0.8043333292007446, 0.7953333258628845, 0.8100000023841858, 0.8073333501815796, 0.7786666750907898, 0.8183333277702332, 0.8176666498184204, 0.8116666674613953, 0.8019999861717224, 0.8169999718666077, 0.8173333406448364]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5, 4, 8, 7, 5], [0, 2, 1, 0, 2, 1, 2], [94, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 5], [0, 6, 3, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.1362857073545456, "mapping_values": [1, 17, 10, 7, 2, 11, 6, 5, 2, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.square(grad), alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(sigma)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.3009607791900635, 15.79525089263916, 347.4659423828125, 416.6408996582031, 438.4544982910156, 462.6263732910156], "accuracy": [0.10408136248588562, 0.11861048638820648, 0.07224937528371811, 0.07066437602043152, 0.07660810649394989, 0.07726852595806122], "val_loss": [3.0362186431884766, 32.4416618347168, 325.24072265625, 340.54119873046875, 354.8439025878906, 368.7344970703125], "val_accuracy": [0.12533333897590637, 0.04399999976158142, 0.052666667848825455, 0.05966666713356972, 0.056333333253860474, 0.04833333194255829]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 7, 2, 3, 5, 6, 4, 5], [3, 2, 1, 0, 2, 0, 1], [64, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 1, 7, 8], [0, 5, 1, 6, 1, 1, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 10, 6, 4, 2, 17, 10, 7, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.math.sqrt(grad), alpha)), alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2, 2, 8], [2, 0, 3, 1, 0, 2], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 0, 5, 2, 1], [0, 6, 1, 7, 4], [0], [1], [0], [3], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 3, 15, 9, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3103044033050537, 2.309767007827759, 2.3094241619110107, 2.310372829437256, 2.3092150688171387, 2.309955596923828], "accuracy": [0.08928807079792023, 0.09536388516426086, 0.09668471664190292, 0.09311848133802414, 0.0948355570435524, 0.0874389111995697], "val_loss": [2.3090767860412598, 2.3090767860412598, 2.3090767860412598, 2.3090767860412598, 2.3090767860412598, 2.3090767860412598], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 6, 3, 3, 5], [0, 3, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 3, 7, 2], [2, 5, 0, 1, 0], [16, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 8, 0, 2, 5, 2, 1], [0, 6, 5, 6, 0], [79, 22], [1], [0], [0], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 6, 3, 3, 1, 8, 5, 3, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3105945587158203, 2.309065580368042, 2.3095157146453857, 2.309276580810547, 2.310291290283203, 2.3097078800201416], "accuracy": [0.09060890227556229, 0.0956280529499054, 0.09549596905708313, 0.09800554811954498, 0.09192973375320435, 0.09496764093637466], "val_loss": [2.308605194091797, 2.308605194091797, 2.308605194091797, 2.308605194091797, 2.308605194091797, 2.308605194091797], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]