[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209409236907959, 1.6002836227416992, 1.154492974281311, 0.9972569346427917, 0.8838258385658264, 0.8050776124000549, 0.8156874775886536, 0.7592884302139282, 0.729107141494751, 0.7126563191413879, 0.6911233067512512, 0.6648291945457458, 0.6624299883842468, 0.6237016916275024, 0.614698052406311, 0.6090067625045776, 0.6115822196006775, 0.5880652666091919, 0.585920512676239, 0.5794222950935364, 0.5620831251144409, 0.5510508418083191, 0.5632999539375305, 0.5368703603744507, 0.5272430181503296, 0.5328876972198486, 0.5164204835891724, 0.5030044913291931, 0.500386655330658, 0.5089684724807739, 0.49650076031684875, 0.4866131842136383, 0.48094987869262695, 0.47196632623672485, 0.47012194991111755, 0.46761542558670044, 0.45164725184440613, 0.4574846029281616, 0.4598676860332489, 0.44617408514022827, 0.4402810037136078, 0.4293091595172882, 0.4418588876724243, 0.4248800575733185, 0.4261430501937866, 0.43337470293045044], "accuracy": [0.2727513015270233, 0.5060097575187683, 0.599128246307373, 0.639809787273407, 0.6812838315963745, 0.7025492191314697, 0.6954167485237122, 0.7182670831680298, 0.7288337349891663, 0.7351737022399902, 0.7445515990257263, 0.7535332441329956, 0.7466648817062378, 0.7736098170280457, 0.7685906887054443, 0.7737419009208679, 0.7771760821342468, 0.7803460359573364, 0.7791573405265808, 0.7827235460281372, 0.793950617313385, 0.7977809906005859, 0.7911768555641174, 0.7976489067077637, 0.8018755912780762, 0.7989697456359863, 0.806630551815033, 0.8142913579940796, 0.8164047002792358, 0.8119139075279236, 0.8131026029586792, 0.8216879963874817, 0.8204993009567261, 0.8272355198860168, 0.828292191028595, 0.826310932636261, 0.8355567455291748, 0.8339717388153076, 0.8297450542449951, 0.8354246616363525, 0.8376700282096863, 0.842028796672821, 0.8360850811004639, 0.8453308939933777, 0.8445383906364441, 0.8413683772087097], "val_loss": [1.9148554801940918, 1.1551806926727295, 0.9207280278205872, 0.7881878018379211, 0.6945375800132751, 0.6854461431503296, 0.6707518100738525, 0.6444664597511292, 0.5983438491821289, 0.6136895418167114, 0.5754956007003784, 0.5663517117500305, 0.5599909424781799, 0.5350698828697205, 0.5828552842140198, 0.6157063245773315, 0.5314270853996277, 0.5419865846633911, 0.49918684363365173, 0.5024026036262512, 0.4908689856529236, 0.4802137315273285, 0.4911487102508545, 0.4697282016277313, 0.4548032581806183, 0.49372875690460205, 0.4615410566329956, 0.4419204890727997, 0.4512311518192291, 0.4397923946380615, 0.4550071954727173, 0.4310576319694519, 0.4308938682079315, 0.4239087402820587, 0.43585100769996643, 0.4154832661151886, 0.41084927320480347, 0.4118289351463318, 0.41711539030075073, 0.4049464464187622, 0.40144383907318115, 0.4121360182762146, 0.40968558192253113, 0.41394558548927307, 0.3969388008117676, 0.4167485237121582], "val_accuracy": [0.5149999856948853, 0.6380000114440918, 0.6646666526794434, 0.7049999833106995, 0.7336666584014893, 0.7279999852180481, 0.75, 0.7519999742507935, 0.768666684627533, 0.762333333492279, 0.765999972820282, 0.7820000052452087, 0.7910000085830688, 0.809333324432373, 0.7720000147819519, 0.7416666746139526, 0.7986666560173035, 0.7943333387374878, 0.8130000233650208, 0.8130000233650208, 0.8176666498184204, 0.8246666789054871, 0.8220000267028809, 0.828000009059906, 0.8213333487510681, 0.8226666450500488, 0.831333339214325, 0.8386666774749756, 0.8306666612625122, 0.8423333168029785, 0.8253333568572998, 0.8483333587646484, 0.8399999737739563, 0.8379999995231628, 0.8366666436195374, 0.8496666550636292, 0.8456666469573975, 0.8456666469573975, 0.847000002861023, 0.8526666760444641, 0.8539999723434448, 0.8523333072662354, 0.8460000157356262, 0.8396666646003723, 0.8529999852180481, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 8, 2, 3, 5, 5], [0, 0, 1, 0, 2], [0, 39, 36], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [64, 22], [1], [0], [4], [0]], "fitness": -0.2922857105731964, "mapping_values": [1, 11, 7, 4, 3, 12, 7, 5, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.46773362159729, 2.57588267326355, 2.3040363788604736, 2.298844337463379, 2.189100980758667, 2.4099178314208984, 2.303982973098755, 2.3028666973114014, 2.2515416145324707, 2.306328296661377], "accuracy": [0.18121780455112457, 0.16034869849681854, 0.10157178342342377, 0.12693171203136444, 0.21714437007904053, 0.1706511676311493, 0.1072513535618782, 0.10328886657953262, 0.18914277851581573, 0.09760929644107819], "val_loss": [2.273709297180176, 2.3052821159362793, 2.301741600036621, 2.2828056812286377, 2.0459463596343994, 2.305260419845581, 2.30298113822937, 2.2993392944335938, 2.3051698207855225, 2.3024840354919434], "val_accuracy": [0.09833333641290665, 0.09466666728258133, 0.09466666728258133, 0.18933333456516266, 0.29766666889190674, 0.10133333504199982, 0.09466666728258133, 0.0963333323597908, 0.10133333504199982, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 8], [3, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 4, 1], [4, 6, 1, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.2891428470611572, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.pow(grad, tf.math.subtract(alpha, grad)))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3032381534576416, 2.4078798294067383, 2.267982006072998, 2.3077847957611084, 2.2483294010162354, 2.2179267406463623, 2.901362657546997, 2.3091444969177246, 2.303837299346924, 2.303396701812744], "accuracy": [0.22097477316856384, 0.1686699241399765, 0.15414080023765564, 0.11240258812904358, 0.1504424810409546, 0.16563200950622559, 0.19878484308719635, 0.10051512718200684, 0.09853387624025345, 0.09893012791872025], "val_loss": [3.0236055850982666, 2.305227518081665, 1.8931629657745361, 2.2998058795928955, 1.9126067161560059, 2.2269463539123535, 2.311275005340576, 2.3042004108428955, 2.3029043674468994, 2.3024914264678955], "val_accuracy": [0.2043333351612091, 0.10066666454076767, 0.26866665482521057, 0.17466667294502258, 0.28866666555404663, 0.2096666693687439, 0.10066666454076767, 0.10066666454076767, 0.09866666793823242, 0.11133333295583725]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 1, 1], [43, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 2, 5, 6, 9, 7, 5, 5, 4], [0, 2, 1, 0, 1, 2, 1], [0, 32, 39], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [99, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 0, 3, 1, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 19, 12, 7, 3, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, grad))))), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3093924522399902, 2.3096659183502197, 2.3095359802246094, 2.310739040374756, 2.3095498085021973, 2.309796094894409], "accuracy": [0.09430722147226334, 0.09166556596755981, 0.08981640636920929, 0.08994849026203156, 0.09430722147226334, 0.09166556596755981], "val_loss": [2.3088784217834473, 2.3088784217834473, 2.3088784217834473, 2.3088784217834473, 2.3088784217834473, 2.3088784217834473], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]