[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8431428670883179, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2130794525146484, 1.6079317331314087, 1.1662505865097046, 0.9943716526031494, 0.8757086396217346, 0.8684951663017273, 0.8118653893470764, 0.7520567178726196, 0.738610029220581, 0.7245951294898987, 0.6859126687049866, 0.677969753742218, 0.6442282199859619, 0.6580087542533875, 0.6281281113624573, 0.6230882406234741, 0.6149232387542725, 0.6127930879592896, 0.5866085290908813, 0.5861876010894775, 0.5820658206939697, 0.5602527856826782, 0.559708833694458, 0.54453444480896, 0.550657331943512, 0.5321601629257202, 0.5306263566017151, 0.5270982980728149, 0.5122579336166382, 0.5040609240531921, 0.5009920001029968, 0.49809831380844116, 0.4953985810279846, 0.4766969084739685, 0.48663291335105896, 0.47346529364585876, 0.46789371967315674, 0.46718674898147583, 0.4648943543434143, 0.46126583218574524, 0.45569127798080444, 0.45138296484947205, 0.45186570286750793, 0.4344820976257324, 0.45012250542640686, 0.4384309947490692, 0.4257029891014099, 0.4198111891746521, 0.4195205569267273, 0.4218921959400177, 0.41840246319770813, 0.41339215636253357, 0.4135633707046509, 0.40934398770332336, 0.40441346168518066, 0.3943239450454712, 0.3999403417110443, 0.391155868768692, 0.3929866552352905, 0.3857191503047943, 0.38412705063819885, 0.3819860816001892, 0.375443696975708, 0.3658604919910431, 0.38209494948387146, 0.3706095218658447, 0.3669069707393646, 0.3667237162590027, 0.3622450530529022, 0.36086606979370117, 0.34833166003227234, 0.3600291311740875, 0.35914674401283264, 0.3539791703224182], "accuracy": [0.2658829689025879, 0.505349338054657, 0.5801082849502563, 0.6425835490226746, 0.681547999382019, 0.6844538450241089, 0.7013604640960693, 0.717870831489563, 0.722229540348053, 0.7279091477394104, 0.750231146812439, 0.7498348951339722, 0.7601373791694641, 0.7526086568832397, 0.7597411274909973, 0.7676661014556885, 0.7695152759552002, 0.7687227725982666, 0.7817989587783813, 0.778761088848114, 0.7812706232070923, 0.7889314293861389, 0.793950617313385, 0.7943468689918518, 0.7959318161010742, 0.7973847389221191, 0.8016114234924316, 0.804649293422699, 0.8109893202781677, 0.8121780753135681, 0.8182538747787476, 0.8129705190658569, 0.8168009519577026, 0.8224804997444153, 0.8156121969223022, 0.824329674243927, 0.8294808864593506, 0.8227446675300598, 0.8278959393501282, 0.8265751004219055, 0.8300092220306396, 0.8363492488861084, 0.8294808864593506, 0.8407079577445984, 0.8338396549224854, 0.8338396549224854, 0.8432175517082214, 0.8450667262077332, 0.8453308939933777, 0.8457271456718445, 0.8462554216384888, 0.8512746095657349, 0.8470479249954224, 0.8518029451370239, 0.8491612672805786, 0.8539162874221802, 0.8524633646011353, 0.8553691506385803, 0.8535200357437134, 0.8568220734596252, 0.8564258217811584, 0.8589354157447815, 0.8581429123878479, 0.8661999702453613, 0.8610487580299377, 0.8659358024597168, 0.8660678863525391, 0.8660678863525391, 0.8656716346740723, 0.8628978729248047, 0.8734645247459412, 0.8654074668884277, 0.8681812286376953, 0.8712190985679626], "val_loss": [1.9277184009552002, 1.0832430124282837, 0.9202551245689392, 0.7912284135818481, 0.7895167469978333, 0.7103011012077332, 0.6775951385498047, 0.6381118297576904, 0.6518650650978088, 0.6047134399414062, 0.601004958152771, 0.5616363883018494, 0.5641355514526367, 0.5563732385635376, 0.5428324341773987, 0.5392426252365112, 0.5282057523727417, 0.5417882204055786, 0.5136148929595947, 0.5399789810180664, 0.48765382170677185, 0.49484872817993164, 0.4714268743991852, 0.4722725450992584, 0.4862012267112732, 0.47952166199684143, 0.4780825674533844, 0.46127432584762573, 0.45574384927749634, 0.4526648223400116, 0.44746842980384827, 0.4510550796985626, 0.45963117480278015, 0.43390917778015137, 0.4404281675815582, 0.429848313331604, 0.43049290776252747, 0.4278748631477356, 0.41966503858566284, 0.42222872376441956, 0.41461995244026184, 0.4108434319496155, 0.4153458774089813, 0.4033816456794739, 0.39983484148979187, 0.39857974648475647, 0.4044554531574249, 0.3955741226673126, 0.38828951120376587, 0.3928581476211548, 0.41211485862731934, 0.3829970359802246, 0.3875415027141571, 0.39418283104896545, 0.38481631875038147, 0.3871691823005676, 0.37679627537727356, 0.377286821603775, 0.4041484296321869, 0.37429478764533997, 0.37519147992134094, 0.3740321397781372, 0.38994479179382324, 0.3651811182498932, 0.3832707107067108, 0.37207841873168945, 0.3600929379463196, 0.3628835380077362, 0.36105602979660034, 0.3578735291957855, 0.3884851038455963, 0.36145642399787903, 0.36523279547691345, 0.36483851075172424], "val_accuracy": [0.5559999942779541, 0.6600000262260437, 0.6713333129882812, 0.718666672706604, 0.7080000042915344, 0.7360000014305115, 0.7260000109672546, 0.750333309173584, 0.7333333492279053, 0.7789999842643738, 0.7670000195503235, 0.7910000085830688, 0.7883333563804626, 0.7870000004768372, 0.8026666641235352, 0.8036666512489319, 0.8069999814033508, 0.7996666431427002, 0.8063333630561829, 0.8019999861717224, 0.8266666531562805, 0.8159999847412109, 0.8293333053588867, 0.8286666870117188, 0.8143333196640015, 0.8146666884422302, 0.8226666450500488, 0.8389999866485596, 0.8299999833106995, 0.8349999785423279, 0.8423333168029785, 0.8356666564941406, 0.8309999704360962, 0.8396666646003723, 0.8389999866485596, 0.8456666469573975, 0.8450000286102295, 0.8429999947547913, 0.846666693687439, 0.8420000076293945, 0.8536666631698608, 0.8506666421890259, 0.8483333587646484, 0.859333336353302, 0.8573333621025085, 0.8569999933242798, 0.8566666841506958, 0.8613333106040955, 0.856333315372467, 0.8619999885559082, 0.8443333506584167, 0.8603333234786987, 0.8600000143051147, 0.8619999885559082, 0.8646666407585144, 0.8616666793823242, 0.8633333444595337, 0.8656666874885559, 0.8476666808128357, 0.8640000224113464, 0.8603333234786987, 0.8673333525657654, 0.8516666889190674, 0.8679999709129333, 0.8606666922569275, 0.8653333187103271, 0.8686666488647461, 0.8686666488647461, 0.874666690826416, 0.8706666827201843, 0.8523333072662354, 0.8690000176429749, 0.8663333058357239, 0.8693333268165588]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 2, 3, 4], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [1, 0, 4, 3, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 7, 2, 1], [0, 6, 1, 6, 1], [84, 22], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 4, 7, 2, 4, 9, 6], [4, 1, 4, 1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 4, 2, 2, 1, 7, 4, 3, 1, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(alpha, grad)), alpha), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 2, 2], [22, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 9, 0, 6, 3, 6, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1, 2, 9], [0, 6, 5, 6, 0], [0, 22, 2], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 2, 2, 0, 1, 14, 9, 5, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303502082824707, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 1, 6, 1, 3, 7, 7, 9, 6, 8, 6, 9, 1], [0, 3, 1, 0, 2, 0, 0, 1, 1, 1, 1, 1], [0, 39, 39, 43, 90, 46], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [99, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 4, 2, 0, 2, 1, 4, 8], [0, 6, 1, 6, 0, 2, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 17, 12, 6, 9, 5, 4, 1, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)))))), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(alpha))), tf.math.add(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 2, 3, 9, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 5, 0, 4, 3, 9, 2], [5, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 0, 8, 5, 2, 1], [0, 4, 6, 6, 0], [8, 22], [0, 0, 1], [0, 5], [2], [0]], "fitness": -0.09885714203119278, "mapping_values": [1, 7, 4, 3, 2, 4, 3, 1, 0, 2, 1, 1, 1, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.309597969055176, 2.308406114578247, 2.309703826904297, 2.309372901916504, 2.311560869216919, 2.312798023223877, 2.314105749130249, 2.3151097297668457, 2.316786289215088, 2.3188047409057617, 2.3217358589172363, 2.323864221572876], "accuracy": [0.09272222965955734, 0.09074098616838455, 0.09377889335155487, 0.09245806187391281, 0.09153348207473755, 0.09179764986038208, 0.09800554811954498, 0.09496764093637466, 0.09206181764602661, 0.09576013684272766, 0.09549596905708313, 0.1022322028875351], "val_loss": [2.308243751525879, 2.3084137439727783, 2.308852434158325, 2.309504270553589, 2.310292959213257, 2.3113338947296143, 2.312023878097534, 2.312500238418579, 2.312985897064209, 2.313728094100952, 2.3152310848236084, 2.31758713722229], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09566666930913925, 0.09600000083446503, 0.09533333033323288, 0.09966666996479034, 0.10166666656732559, 0.10133333504199982, 0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]