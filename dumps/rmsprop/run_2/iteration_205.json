[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8122857213020325, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2156245708465576, 1.6178357601165771, 1.1844111680984497, 0.9841839671134949, 0.8928912878036499, 0.8564867377281189, 0.816957414150238, 0.7448610663414001, 0.7491441965103149, 0.7167975306510925, 0.704716682434082, 0.689091145992279, 0.6575664281845093, 0.6599803566932678, 0.6398300528526306, 0.6250582933425903, 0.6281043887138367, 0.5977688431739807, 0.5874935984611511, 0.5863210558891296, 0.5753273367881775, 0.5588369965553284, 0.550097644329071, 0.5443617105484009, 0.5388361215591431, 0.5391604900360107, 0.5147291421890259, 0.506892204284668, 0.5213449597358704, 0.499074250459671, 0.4984658360481262, 0.4978911578655243, 0.490987092256546, 0.4864314794540405, 0.4726884067058563, 0.46434760093688965, 0.4624955654144287, 0.46676674485206604, 0.45078665018081665, 0.46030232310295105, 0.4415433704853058, 0.43052569031715393, 0.4327946603298187, 0.43327778577804565, 0.42680421471595764, 0.4212718605995178, 0.4220168888568878, 0.416378378868103], "accuracy": [0.26020342111587524, 0.502971887588501, 0.5918636918067932, 0.6518293619155884, 0.6820763349533081, 0.6906617283821106, 0.6963412761688232, 0.7301545143127441, 0.7321357727050781, 0.7374191284179688, 0.7430986762046814, 0.750231146812439, 0.7574957013130188, 0.7568352818489075, 0.7650244235992432, 0.7713643908500671, 0.7662131786346436, 0.7761194109916687, 0.7893276810646057, 0.7876105904579163, 0.7886672616004944, 0.7961959838867188, 0.791441023349762, 0.8005547523498535, 0.8059701323509216, 0.802271842956543, 0.817461371421814, 0.8175934553146362, 0.8050455451011658, 0.8230088353157043, 0.8152159452438354, 0.8190463781356812, 0.8236692547798157, 0.8235371708869934, 0.8285563588142395, 0.835160493850708, 0.8310658931732178, 0.8272355198860168, 0.8405758738517761, 0.833179235458374, 0.8409721255302429, 0.8437458872795105, 0.8418967127799988, 0.8432175517082214, 0.8438779711723328, 0.8482366800308228, 0.8496896028518677, 0.8524633646011353], "val_loss": [1.9383206367492676, 1.1698517799377441, 0.8867775797843933, 0.7617421746253967, 0.7692252397537231, 0.7281362414360046, 0.7029760479927063, 0.6404834389686584, 0.64473956823349, 0.6132876873016357, 0.6828494668006897, 0.5696191191673279, 0.5789708495140076, 0.5650597214698792, 0.6028075218200684, 0.5300392508506775, 0.5450366735458374, 0.5361970663070679, 0.5554052591323853, 0.5161865949630737, 0.5071436762809753, 0.5312516689300537, 0.486888587474823, 0.4936394989490509, 0.4991863965988159, 0.47490739822387695, 0.4807107746601105, 0.49101513624191284, 0.4813597500324249, 0.4723699688911438, 0.4581681787967682, 0.4603607952594757, 0.44902485609054565, 0.449972003698349, 0.4446936845779419, 0.4559521973133087, 0.45808613300323486, 0.4366145730018616, 0.4401642680168152, 0.4309244453907013, 0.43440738320350647, 0.4252937138080597, 0.4237757921218872, 0.4214763045310974, 0.4117555022239685, 0.4256603717803955, 0.40951797366142273, 0.41403084993362427], "val_accuracy": [0.5446666479110718, 0.5993333458900452, 0.6936666369438171, 0.7223333120346069, 0.7023333311080933, 0.7083333134651184, 0.7173333168029785, 0.7443333268165588, 0.7480000257492065, 0.762333333492279, 0.7333333492279053, 0.7886666655540466, 0.7760000228881836, 0.7829999923706055, 0.7583333253860474, 0.7993333339691162, 0.7986666560173035, 0.8043333292007446, 0.7856666445732117, 0.812666654586792, 0.8056666851043701, 0.7946666479110718, 0.8226666450500488, 0.8196666836738586, 0.8056666851043701, 0.8209999799728394, 0.8263333439826965, 0.8113333582878113, 0.8149999976158142, 0.8196666836738586, 0.8306666612625122, 0.8286666870117188, 0.8330000042915344, 0.8306666612625122, 0.8293333053588867, 0.8236666917800903, 0.824999988079071, 0.8429999947547913, 0.8346666693687439, 0.8376666903495789, 0.8393333554267883, 0.8389999866485596, 0.8506666421890259, 0.843999981880188, 0.8446666598320007, 0.8410000205039978, 0.8476666808128357, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 6, 0, 3, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 2, 5, 2, 1], [0, 6, 1, 6, 0, 0], [0, 22, 31], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 3, 0, 4, 2, 3, 8, 0], [2, 6, 0, 0, 3], [0, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 5, 3, 2, 1, 13, 7, 6, 3, 13, 8, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 0, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [9, 2, 7, 8, 5, 9, 1], [0, 6, 1, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 3, 2, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309953212738037, 2.310454845428467, 2.311093330383301, 2.3100476264953613, 2.3101229667663574, 2.3114893436431885], "accuracy": [0.09787346422672272, 0.0882314071059227, 0.09219389408826828, 0.09734513610601425, 0.09642054885625839, 0.08691058307886124], "val_loss": [2.3085877895355225, 2.3085877895355225, 2.3085877895355225, 2.3085877895355225, 2.3085877895355225, 2.3085877895355225], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 0, 2, 5, 2, 1], [2, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 0, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310924530029297, 2.309431791305542, 2.309358835220337, 2.3093788623809814, 2.309462547302246, 2.3098180294036865], "accuracy": [0.09034473448991776, 0.09126931428909302, 0.09100515395402908, 0.08928807079792023, 0.09391097724437714, 0.09377889335155487], "val_loss": [2.3083364963531494, 2.3083364963531494, 2.3083364963531494, 2.3083364963531494, 2.3083364963531494, 2.3083364963531494], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [9, 2, 3, 2, 3, 1], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098082542419434, 2.30879545211792, 2.308697462081909, 2.3105838298797607, 2.3102800846099854, 2.3098223209381104], "accuracy": [0.08426892012357712, 0.09906221181154251, 0.0952318087220192, 0.0882314071059227, 0.08968432247638702, 0.09219389408826828], "val_loss": [2.3095335960388184, 2.3095335960388184, 2.3095335960388184, 2.3095335960388184, 2.3095335960388184, 2.3095335960388184], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]