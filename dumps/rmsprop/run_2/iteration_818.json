[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8008571267127991, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2133469581604004, 1.6193596124649048, 1.152808666229248, 1.0034071207046509, 0.881799578666687, 0.8322389721870422, 0.8164203763008118, 0.7532457709312439, 0.760096549987793, 0.7116669416427612, 0.6958275437355042, 0.6797398924827576, 0.6609646081924438, 0.6502821445465088, 0.6566133499145508, 0.6128093600273132, 0.6145708560943604, 0.5965269804000854, 0.5889785289764404, 0.5671259760856628, 0.5628206729888916, 0.5752965211868286, 0.5495266914367676, 0.541096568107605, 0.5335885286331177, 0.5209334492683411, 0.5211771130561829], "accuracy": [0.2592788338661194, 0.5037643909454346, 0.602562427520752, 0.6428477168083191, 0.6794346570968628, 0.7022850513458252, 0.6942279934883118, 0.7215691208839417, 0.722229540348053, 0.7346453666687012, 0.7421740889549255, 0.748778223991394, 0.7523444890975952, 0.7580240368843079, 0.759080708026886, 0.7718927264213562, 0.7736098170280457, 0.7810064554214478, 0.7810064554214478, 0.7909126877784729, 0.7881389260292053, 0.7820631265640259, 0.8006868362426758, 0.793950617313385, 0.8018755912780762, 0.8121780753135681, 0.807158887386322], "val_loss": [1.9304977655410767, 1.1248914003372192, 0.8904200792312622, 0.8316166996955872, 0.7134712934494019, 0.6917063593864441, 0.6957828998565674, 0.6426507830619812, 0.603980302810669, 0.5966231822967529, 0.6148722171783447, 0.55990070104599, 0.6025708913803101, 0.5461844801902771, 0.5449578762054443, 0.5193085670471191, 0.5305445194244385, 0.4987926483154297, 0.49814534187316895, 0.488963782787323, 0.4987668991088867, 0.4691639840602875, 0.49177759885787964, 0.4785710573196411, 0.4703877866268158, 0.46819445490837097, 0.4547595679759979], "val_accuracy": [0.5743333101272583, 0.652999997138977, 0.6856666803359985, 0.6826666593551636, 0.737666666507721, 0.7296666502952576, 0.7366666793823242, 0.7583333253860474, 0.7666666507720947, 0.7730000019073486, 0.7556666731834412, 0.7806666493415833, 0.765999972820282, 0.7870000004768372, 0.7863333225250244, 0.8029999732971191, 0.7943333387374878, 0.8036666512489319, 0.8073333501815796, 0.8183333277702332, 0.8166666626930237, 0.8266666531562805, 0.8086666464805603, 0.8183333277702332, 0.8230000138282776, 0.8176666498184204, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 2, 3], [68, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 8, 7, 5, 7, 4, 0, 5, 7, 0], [0, 6, 1, 6, 0, 4, 3, 1, 6], [0, 29], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 1, 25, 16, 9, 2, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(sigma))))))))), tf.math.square(tf.math.add(tf.math.negative(alpha), grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036410808563232, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 7], [0, 3, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105125427246094, 2.3102571964263916, 2.3109984397888184, 20.129751205444336, 6.599361535916378e+21, 7958.2216796875, 2064250.125, NaN], "accuracy": [0.09338264167308807, 0.09166556596755981, 0.09470347315073013, 0.09959053993225098, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.10077928751707077], "val_loss": [2.3088011741638184, 2.308854579925537, 2.3185997009277344, 573.8065185546875, 302.1068420410156, 77339.3515625, 19798874.0, NaN], "val_accuracy": [0.08966666460037231, 0.08933333307504654, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [61, 49, 39], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 7, 2, 5, 2, 1], [0, 5, 1, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 4, 2, 2, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094844818115234, 2.3117430210113525, 2.309302568435669, 2.310192108154297, 2.310004711151123, 2.310800313949585], "accuracy": [0.09826971590518951, 0.08902391046285629, 0.09206181764602661, 0.09219389408826828, 0.0940430611371994, 0.0874389111995697], "val_loss": [2.3097736835479736, 2.3097736835479736, 2.3097736835479736, 2.3097736835479736, 2.3097736835479736, 2.3097736835479736], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 7, 3, 2, 9, 4, 3, 6], [1, 2, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 3, 0, 2], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 3, 7, 0], [0, 0, 3, 6, 0, 5, 3], [33, 22, 86], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 14, 8, 6, 2, 13, 7, 6, 2, 17, 10, 7, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, alpha)), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(sigma, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.negative(grad), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096182346343994, 2.310196876525879, 2.3105039596557617, 2.30853009223938, 2.3087122440338135, 2.3093700408935547], "accuracy": [0.09747721254825592, 0.09034473448991776, 0.09126931428909302, 0.09153348207473755, 0.0886276587843895, 0.08981640636920929], "val_loss": [2.308467388153076, 2.308467388153076, 2.308467388153076, 2.308467388153076, 2.308467388153076, 2.308467388153076], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]