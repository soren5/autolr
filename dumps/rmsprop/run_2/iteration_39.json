[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8394285440444946, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20987868309021, 1.604857325553894, 1.1679264307022095, 0.9752788543701172, 0.8885841369628906, 0.8250882029533386, 0.8171471953392029, 0.7584258317947388, 0.7255887389183044, 0.7253121733665466, 0.6892403364181519, 0.6798376441001892, 0.6740577816963196, 0.6402851343154907, 0.6387923359870911, 0.6193668246269226, 0.6006284952163696, 0.6049268245697021, 0.5933315753936768, 0.5681436061859131, 0.5631768703460693, 0.5742170810699463, 0.556490957736969, 0.5443487763404846, 0.5516067743301392, 0.5485987067222595, 0.5202664136886597, 0.5239169597625732, 0.507247269153595, 0.5134862661361694, 0.5114895105361938, 0.49402883648872375, 0.4870643615722656, 0.4834330379962921, 0.4831956624984741, 0.470093309879303, 0.48586300015449524, 0.46130552887916565, 0.47828003764152527, 0.4550422728061676, 0.45442479848861694, 0.4497322738170624, 0.4473366439342499, 0.4477497935295105, 0.4334724247455597, 0.43978074193000793, 0.43098896741867065, 0.4319309890270233, 0.4334089756011963], "accuracy": [0.2627129852771759, 0.5097081065177917, 0.591731607913971, 0.6514331102371216, 0.6863030195236206, 0.7046625018119812, 0.6989829540252686, 0.715889573097229, 0.72672039270401, 0.7308149337768555, 0.741909921169281, 0.7473253011703491, 0.752740740776062, 0.7601373791694641, 0.7646281719207764, 0.7720248103141785, 0.7795535326004028, 0.7759873270988464, 0.7796856164932251, 0.7898560166358948, 0.7891955971717834, 0.7861577272415161, 0.7955356240272522, 0.798309326171875, 0.787082314491272, 0.7938185334205627, 0.8064984679222107, 0.8084797263145447, 0.8113855719566345, 0.8137630224227905, 0.8099326491355896, 0.8162726163864136, 0.8203672170639038, 0.8231409192085266, 0.8202351331710815, 0.8274996876716614, 0.8162726163864136, 0.8323867321014404, 0.8238013386726379, 0.83119797706604, 0.8322546482086182, 0.8322546482086182, 0.8364813327789307, 0.8348963260650635, 0.8438779711723328, 0.8360850811004639, 0.8408400416374207, 0.8401796221733093, 0.8379341959953308], "val_loss": [1.9216989278793335, 1.0802192687988281, 0.8668854236602783, 0.8448933362960815, 0.7311071753501892, 0.8493601679801941, 0.6508973240852356, 0.6376338005065918, 0.5998376607894897, 0.6410537362098694, 0.5875025391578674, 0.6114038825035095, 0.5716989636421204, 0.5382357239723206, 0.5476984977722168, 0.5213348269462585, 0.5196841359138489, 0.5135902762413025, 0.5183218717575073, 0.5096368193626404, 0.5081667304039001, 0.4876325726509094, 0.48134276270866394, 0.5187695622444153, 0.4702956974506378, 0.4738728106021881, 0.45493802428245544, 0.46259254217147827, 0.4460083842277527, 0.45631974935531616, 0.4379954934120178, 0.45879971981048584, 0.44444888830184937, 0.43145787715911865, 0.4319746196269989, 0.4427829086780548, 0.43482473492622375, 0.4328133165836334, 0.41238537430763245, 0.4294278919696808, 0.43319112062454224, 0.4202120304107666, 0.4381959140300751, 0.4037628173828125, 0.4249510169029236, 0.4076278805732727, 0.40431126952171326, 0.39936164021492004, 0.40653765201568604], "val_accuracy": [0.6056666374206543, 0.6776666641235352, 0.6990000009536743, 0.6993333101272583, 0.7366666793823242, 0.6679999828338623, 0.7486666440963745, 0.749666690826416, 0.7756666541099548, 0.7450000047683716, 0.7766666412353516, 0.750333309173584, 0.7716666460037231, 0.809333324432373, 0.7866666913032532, 0.7979999780654907, 0.7983333468437195, 0.812333345413208, 0.8040000200271606, 0.8149999976158142, 0.8103333115577698, 0.8159999847412109, 0.8173333406448364, 0.7946666479110718, 0.8236666917800903, 0.82833331823349, 0.8360000252723694, 0.8270000219345093, 0.8323333263397217, 0.831333339214325, 0.8416666388511658, 0.8323333263397217, 0.8360000252723694, 0.8450000286102295, 0.843999981880188, 0.8339999914169312, 0.8376666903495789, 0.8453333377838135, 0.8503333330154419, 0.8356666564941406, 0.8346666693687439, 0.8443333506584167, 0.8446666598320007, 0.8543333411216736, 0.8433333039283752, 0.8519999980926514, 0.8536666631698608, 0.8543333411216736, 0.8543333411216736]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 7, 3, 5, 8, 1, 1, 8, 5], [3, 1, 1, 0, 2, 2, 1], [74, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 5, 0, 6, 3, 8, 4], [2, 4, 5, 1, 2], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 8, 8], [0, 0, 1], [0, 68], [0, 0, 1], [0, 8], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 1, 1, 0, 1, 0, 10, 7, 3, 2, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.multiply(alpha, tf.math.square(alpha))), tf.math.sqrt(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.sqrt(grad), tf.math.square(grad)), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 2], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 9, 0, 2, 5], [0, 6, 1], [40], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031277656555176, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 8, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 8, 0, 1, 5], [0, 6, 7], [0], [1], [0], [2], [0]], "fitness": -0.09571428596973419, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 0, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309601306915283, 2.3097612857818604, 2.309542417526245, 2.310600996017456, 2.309285879135132, 2.31044340133667], "accuracy": [0.09430722147226334, 0.09391097724437714, 0.09325055778026581, 0.09047681838274002, 0.09457138925790787, 0.09259014576673508], "val_loss": [2.30838680267334, 2.30838680267334, 2.30838680267334, 2.30838680267334, 2.30838680267334, 2.30838680267334], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 3, 5], [0, 3, 1, 0, 2, 0], [0, 33, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 6], [2, 0, 3, 1, 0], [16, 0], [0, 1, 0, 1, 1, 1, 0, 1], [0, 5, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 14, 8, 6, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105967044830322, 2.3098347187042236, 2.3092544078826904, 2.3099465370178223, 2.310091018676758, 2.309720754623413], "accuracy": [0.08558975160121918, 0.09391097724437714, 0.09642054885625839, 0.09311848133802414, 0.09034473448991776, 0.09060890227556229], "val_loss": [2.307935953140259, 2.307935953140259, 2.307935953140259, 2.307935953140259, 2.307935953140259, 2.307935953140259], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]