[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2157952785491943, 1.6209131479263306, 1.1659764051437378, 0.9917683005332947, 0.8860158324241638, 0.8446767926216125, 0.800011396408081, 0.7664403915405273, 0.7363688945770264, 0.7035136222839355, 0.7007048726081848, 0.6625770330429077, 0.666192352771759, 0.6641135215759277, 0.6347327828407288, 0.6184825301170349, 0.6287752389907837, 0.6008207201957703, 0.5916568040847778, 0.57887202501297, 0.5817306637763977, 0.5609870553016663, 0.5636013150215149, 0.5590839385986328, 0.5433008074760437, 0.5357459783554077, 0.5260068774223328, 0.5132174491882324, 0.5362247228622437, 0.5159931182861328, 0.5196937918663025, 0.5037493705749512, 0.4914046823978424, 0.49566909670829773, 0.4814717173576355, 0.4876478612422943, 0.477457195520401, 0.47070783376693726, 0.47196105122566223, 0.46317315101623535, 0.45985153317451477, 0.45359236001968384, 0.449551522731781, 0.45531171560287476, 0.45248568058013916, 0.4320562481880188, 0.43918779492378235, 0.430078387260437, 0.4289315640926361, 0.42027947306632996, 0.4135456383228302, 0.42152905464172363], "accuracy": [0.2658829689025879, 0.5005943775177002, 0.5927882790565491, 0.6498481035232544, 0.6800950765609741, 0.6940959095954895, 0.7037379741668701, 0.7147008180618286, 0.7256637215614319, 0.7437590956687927, 0.7360982894897461, 0.7552502751350403, 0.7503632307052612, 0.7568352818489075, 0.7647602558135986, 0.7718927264213562, 0.7604015469551086, 0.7799497842788696, 0.7823272943496704, 0.7913089394569397, 0.7860256433486938, 0.7973847389221191, 0.791969358921051, 0.7951393723487854, 0.8016114234924316, 0.8047813773155212, 0.8016114234924316, 0.8145555257797241, 0.8005547523498535, 0.8137630224227905, 0.8101968169212341, 0.8171972036361694, 0.8193105459213257, 0.8211596608161926, 0.8261788487434387, 0.8208954930305481, 0.8253863453865051, 0.830669641494751, 0.8281601071357727, 0.8304054737091064, 0.8308017253875732, 0.8321225643157959, 0.8370096683502197, 0.8374059200286865, 0.8411042094230652, 0.8457271456718445, 0.8389908671379089, 0.8436138033866882, 0.8437458872795105, 0.8482366800308228, 0.8482366800308228, 0.8446704745292664], "val_loss": [1.9343359470367432, 1.1039806604385376, 0.9069178700447083, 0.7617374658584595, 0.7242695093154907, 0.7092169523239136, 0.7338566184043884, 0.6499069333076477, 0.6414723992347717, 0.6286574602127075, 0.6019013524055481, 0.6308488845825195, 0.6350669860839844, 0.5619036555290222, 0.5471788644790649, 0.5514256954193115, 0.5279273986816406, 0.5328465700149536, 0.5224505662918091, 0.5078938603401184, 0.5309107899665833, 0.5069547295570374, 0.4930914640426636, 0.49653172492980957, 0.4806452989578247, 0.47540974617004395, 0.4663734436035156, 0.46633049845695496, 0.4662500023841858, 0.5094771385192871, 0.4751368463039398, 0.4527008533477783, 0.45143139362335205, 0.45251476764678955, 0.45224592089653015, 0.45309606194496155, 0.4410493075847626, 0.4396989643573761, 0.4290052056312561, 0.4333944618701935, 0.432858407497406, 0.43883341550827026, 0.42700183391571045, 0.41615918278694153, 0.4167426824569702, 0.42239847779273987, 0.4131472110748291, 0.4122602641582489, 0.40470582246780396, 0.41545483469963074, 0.4038518965244293, 0.4041841924190521], "val_accuracy": [0.574999988079071, 0.6316666603088379, 0.6703333258628845, 0.7236666679382324, 0.7233333587646484, 0.7353333234786987, 0.7020000219345093, 0.7446666955947876, 0.7526666522026062, 0.7450000047683716, 0.7576666474342346, 0.749666690826416, 0.7353333234786987, 0.7900000214576721, 0.7956666946411133, 0.7839999794960022, 0.8073333501815796, 0.796999990940094, 0.8023333549499512, 0.809333324432373, 0.8006666898727417, 0.8086666464805603, 0.815666675567627, 0.8086666464805603, 0.8233333230018616, 0.8169999718666077, 0.8226666450500488, 0.8203333616256714, 0.8263333439826965, 0.7983333468437195, 0.8180000185966492, 0.8243333101272583, 0.8296666741371155, 0.8273333311080933, 0.8299999833106995, 0.8259999752044678, 0.8346666693687439, 0.8373333215713501, 0.8386666774749756, 0.8379999995231628, 0.8399999737739563, 0.8356666564941406, 0.8416666388511658, 0.8456666469573975, 0.8443333506584167, 0.8426666855812073, 0.8486666679382324, 0.8479999899864197, 0.8486666679382324, 0.8420000076293945, 0.8486666679382324, 0.846666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [7, 2, 3, 0, 3, 5, 4], [0, 2, 2, 0, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 2, 1], [0, 6, 1, 6, 0], [0, 29], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 8, 5, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(grad), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 4, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 9], [0, 6, 1], [0, 17], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 8, 6, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3039040565490723, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 9, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1, 1, 0, 2, 8, 9], [0, 6, 1, 6, 0, 1], [44, 22, 25], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 4, 2, 2, 1, 0, 1, 0, 18, 12, 6, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.subtract(grad, alpha), grad), tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31083083152771, 2.3094263076782227, 2.3088693618774414, 2.310704469680786, 2.310765266418457, 2.3091509342193604], "accuracy": [0.0956280529499054, 0.09153348207473755, 0.09470347315073013, 0.09021265059709549, 0.09126931428909302, 0.09457138925790787], "val_loss": [2.308917760848999, 2.308917760848999, 2.308917760848999, 2.308917760848999, 2.308917760848999, 2.308917760848999], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 5, 4], [0, 0, 1, 0, 2], [0, 39, 33], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 0, 8, 5], [5, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5], [0, 4, 1], [0], [1], [0], [0], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3097710609436035, 2.309215545654297, 2.3100883960723877, 2.3101806640625, 2.3102800846099854, 2.310100793838501], "accuracy": [0.0936468094587326, 0.08836349099874496, 0.09153348207473755, 0.08915598690509796, 0.08757099509239197, 0.09259014576673508], "val_loss": [2.308765411376953, 2.308765411376953, 2.308765411376953, 2.308765411376953, 2.308765411376953, 2.308765411376953], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]