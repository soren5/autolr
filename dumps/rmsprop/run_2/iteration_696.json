[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2123024463653564, 1.5970271825790405, 1.1388710737228394, 0.9611904621124268, 0.8886938095092773, 0.8082619905471802, 0.7622436285018921, 0.7486385107040405, 0.7464416027069092, 0.6959154605865479, 0.6802413463592529, 0.6818016171455383, 0.6502004861831665, 0.6439260840415955, 0.6181286573410034, 0.6071107387542725, 0.6021243333816528, 0.6061789393424988, 0.5717988014221191, 0.5737509727478027, 0.5684242844581604, 0.5497910976409912, 0.5474637150764465, 0.543181300163269, 0.5569905638694763, 0.5275757908821106, 0.5326989889144897, 0.5231413245201111, 0.503246545791626, 0.5076761841773987, 0.49852800369262695, 0.49098700284957886, 0.49386849999427795, 0.48977190256118774, 0.4810789227485657, 0.4675178527832031, 0.4721640348434448, 0.4611596167087555], "accuracy": [0.2565050721168518, 0.5145951509475708, 0.6022982597351074, 0.6522256135940552, 0.6725663542747498, 0.7037379741668701, 0.7153612375259399, 0.7226257920265198, 0.7195879220962524, 0.7400607466697693, 0.7481178045272827, 0.7506273984909058, 0.7588165402412415, 0.7601373791694641, 0.76542067527771, 0.7761194109916687, 0.7729493975639343, 0.7672698497772217, 0.7886672616004944, 0.7869502305984497, 0.789459764957428, 0.7947431206703186, 0.7948752045631409, 0.7959318161010742, 0.7869502305984497, 0.7979130744934082, 0.8013472557067871, 0.8029322624206543, 0.8119139075279236, 0.8092722296714783, 0.8109893202781677, 0.8182538747787476, 0.8187822103500366, 0.8212917447090149, 0.8161405324935913, 0.8238013386726379, 0.8241975903511047, 0.828292191028595], "val_loss": [1.9261595010757446, 1.0821547508239746, 0.8871765732765198, 0.845443844795227, 0.752789318561554, 0.6710790395736694, 0.6794931888580322, 0.6374317407608032, 0.6320251226425171, 0.6050592660903931, 0.6338505148887634, 0.5818365812301636, 0.6089677214622498, 0.5733490586280823, 0.5483396649360657, 0.5721622109413147, 0.5429153442382812, 0.5325027108192444, 0.5214816927909851, 0.5030460953712463, 0.5113757848739624, 0.5195774435997009, 0.5001544952392578, 0.5068896412849426, 0.4886051416397095, 0.47780224680900574, 0.4899104833602905, 0.47438135743141174, 0.492037832736969, 0.4593147337436676, 0.45658326148986816, 0.4444408416748047, 0.4469927251338959, 0.4392809271812439, 0.4359528720378876, 0.43698444962501526, 0.43422627449035645, 0.43419530987739563], "val_accuracy": [0.6236666440963745, 0.6629999876022339, 0.684333324432373, 0.6833333373069763, 0.7149999737739563, 0.7506666779518127, 0.7356666922569275, 0.7613333463668823, 0.762333333492279, 0.7673333287239075, 0.7590000033378601, 0.7703333497047424, 0.7693333625793457, 0.7633333206176758, 0.7916666865348816, 0.7763333320617676, 0.7860000133514404, 0.7853333353996277, 0.7950000166893005, 0.8066666722297668, 0.8009999990463257, 0.7940000295639038, 0.8069999814033508, 0.8119999766349792, 0.812666654586792, 0.8230000138282776, 0.8040000200271606, 0.8223333358764648, 0.7976666688919067, 0.8246666789054871, 0.8209999799728394, 0.8323333263397217, 0.8373333215713501, 0.8306666612625122, 0.8346666693687439, 0.8349999785423279, 0.8366666436195374, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 0, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 7, 0, 5, 5, 2, 1], [0, 6, 1, 1, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.1028200756450578e+24, 287.2878112792969, 297.51470947265625, 264.897216796875, 248.96017456054688, 261.5439758300781, 287.72265625], "accuracy": [0.10342095047235489, 0.10157178342342377, 0.1080438494682312, 0.10077928751707077, 0.09945846349000931, 0.10051512718200684, 0.10051512718200684], "val_loss": [289.20733642578125, 220.37803649902344, 167.6244354248047, 284.838134765625, 339.4668273925781, 291.9006042480469, 217.29637145996094], "val_accuracy": [0.10266666859388351, 0.10466666519641876, 0.0949999988079071, 0.09966666996479034, 0.09933333098888397, 0.10266666859388351, 0.10466666519641876]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 0, 6, 3, 0, 2], [2, 3, 3, 1, 0], [90, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 5, 2, 1, 8, 1, 6], [0, 6, 1, 6, 0, 5, 0, 5], [0, 17, 49], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 0, 18, 10, 8, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.sqrt(alpha), grad))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101131916046143, 2.3096446990966797, 2.3095431327819824, 2.3102550506591797, 2.3095154762268066, 2.31003475189209], "accuracy": [0.09113723784685135, 0.09140139818191528, 0.09602430462837219, 0.08994849026203156, 0.09576013684272766, 0.09153348207473755], "val_loss": [2.309143304824829, 2.309143304824829, 2.309143304824829, 2.309143304824829, 2.309143304824829, 2.309143304824829], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 7, 6, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 9, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 2, 0, 2, 9, 1, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3113455772399902, 2.3104238510131836, 2.312107563018799, 2.3106160163879395, 2.3095974922180176, 2.3110268115997314], "accuracy": [0.09470347315073013, 0.08928807079792023, 0.08889182657003403, 0.09536388516426086, 0.08955223858356476, 0.09074098616838455], "val_loss": [2.308897018432617, 2.308897018432617, 2.308897018432617, 2.308897018432617, 2.308897018432617, 2.308897018432617], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 6, 8, 7, 7, 4, 1, 2, 8, 5], [0, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0], [0, 20, 39, 35, 93, 36, 1, 41], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [3, 6, 1, 6, 0], [13, 22], [0, 0, 1, 1], [0, 6], [2, 5], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 25, 14, 11, 8, 1, 0, 1, 0, 12, 7, 5, 1, 4, 2, 2, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(sigma, grad)), tf.math.square(tf.math.add(tf.math.divide_no_nan(alpha, grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, grad))", "other_info": {"loss": [2.3097078800201416, 2.3096916675567627, 2.309455156326294, 2.309792995452881, 2.3080050945281982, 2.3109545707702637], "accuracy": [0.09430722147226334, 0.09206181764602661, 0.09721305221319199, 0.09087307006120682, 0.09708096832036972, 0.08915598690509796], "val_loss": [2.3090338706970215, 2.3090338706970215, 2.3090338706970215, 2.3090338706970215, 2.3090338706970215, 2.3090338706970215], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]