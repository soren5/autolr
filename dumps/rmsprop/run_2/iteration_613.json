[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2060017585754395, 1.5845255851745605, 1.1468008756637573, 0.9631435871124268, 0.8777180910110474, 0.8431512117385864, 0.7824415564537048, 0.7587543725967407, 0.7215664982795715, 0.6947140097618103, 0.7115671634674072, 0.6709059476852417, 0.6775298118591309, 0.6303043365478516, 0.624723494052887, 0.5977543592453003, 0.6055047512054443, 0.5940262675285339, 0.5893977880477905, 0.5657331943511963, 0.5639033317565918, 0.5594344139099121, 0.5534257888793945, 0.53471839427948, 0.5281460285186768, 0.538295567035675, 0.5252183079719543, 0.5069893598556519, 0.5020492672920227, 0.4979848563671112, 0.5019375681877136, 0.48394182324409485, 0.480270117521286, 0.4861743748188019, 0.46915698051452637, 0.4604412615299225, 0.47249168157577515, 0.4629407227039337, 0.45138654112815857, 0.4503786265850067, 0.4480033814907074], "accuracy": [0.2678642272949219, 0.5149914026260376, 0.6000528335571289, 0.6580372452735901, 0.6832650899887085, 0.6894729733467102, 0.7150970697402954, 0.7205125093460083, 0.733060359954834, 0.741909921169281, 0.7412495017051697, 0.7503632307052612, 0.7494386434555054, 0.7637035846710205, 0.7711002230644226, 0.7819310426712036, 0.7774402499198914, 0.7829877138137817, 0.7865539789199829, 0.793422281742096, 0.7946110367774963, 0.7959318161010742, 0.7971205711364746, 0.8058380484580994, 0.8043851256370544, 0.8031964302062988, 0.8076872229576111, 0.8138951063156128, 0.816008448600769, 0.8197067975997925, 0.8136309385299683, 0.824329674243927, 0.8269713521003723, 0.8265751004219055, 0.8355567455291748, 0.8317263126373291, 0.8309338092803955, 0.8335754871368408, 0.8376700282096863, 0.8360850811004639, 0.837141752243042], "val_loss": [1.9086122512817383, 1.1083227396011353, 0.9010627269744873, 0.7919092774391174, 0.7342156767845154, 0.6773912310600281, 0.6861588358879089, 0.6412276029586792, 0.6169818639755249, 0.6271591782569885, 0.5943333506584167, 0.6719212532043457, 0.5798624157905579, 0.5548123121261597, 0.5591782331466675, 0.5432051420211792, 0.5379834771156311, 0.5436957478523254, 0.518822193145752, 0.5215284824371338, 0.520409107208252, 0.4900878369808197, 0.49274057149887085, 0.4824923574924469, 0.5086715221405029, 0.47897273302078247, 0.46902936697006226, 0.478949636220932, 0.4660416543483734, 0.47142794728279114, 0.4555670917034149, 0.4593503773212433, 0.4475107491016388, 0.44893547892570496, 0.4467484951019287, 0.431947261095047, 0.4376678466796875, 0.4419298470020294, 0.431613028049469, 0.4520948827266693, 0.44516417384147644], "val_accuracy": [0.5709999799728394, 0.621999979019165, 0.6816666722297668, 0.7136666774749756, 0.7236666679382324, 0.7326666712760925, 0.7393333315849304, 0.7450000047683716, 0.7730000019073486, 0.7666666507720947, 0.7599999904632568, 0.7450000047683716, 0.7746666669845581, 0.8009999990463257, 0.7870000004768372, 0.7926666736602783, 0.7879999876022339, 0.7826666831970215, 0.8033333420753479, 0.8043333292007446, 0.8043333292007446, 0.8186666369438171, 0.8046666383743286, 0.8240000009536743, 0.79666668176651, 0.815666675567627, 0.8240000009536743, 0.8136666417121887, 0.8289999961853027, 0.8309999704360962, 0.8323333263397217, 0.824999988079071, 0.8403333425521851, 0.8303333520889282, 0.8326666951179504, 0.8433333039283752, 0.8326666951179504, 0.8320000171661377, 0.8389999866485596, 0.8343333601951599, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 0, 2, 5, 2, 1, 2, 0, 6, 7, 4, 8, 1, 7, 6], [0, 6, 1, 6, 0, 1, 2, 4, 1, 4, 6, 6, 5], [12, 81], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 29, 16, 13, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.math.add(tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.pow(alpha, beta), grad), alpha))), tf.math.sqrt(tf.math.subtract(grad, tf.math.add(tf.math.divide_no_nan(grad, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304081916809082, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 2, 3, 2, 8, 5], [0, 2, 1, 0, 2], [0, 55, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 0, 3, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 0, 2, 5, 2, 1], [0, 6, 7, 6, 0], [0, 53], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, grad)))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.10637664794922, 11044.880859375, 180347.671875, 1292832.625, 5632015.5, 18477220.0], "accuracy": [0.10210011899471283, 0.1002509593963623, 0.10038304328918457, 0.09985470771789551, 0.1006472036242485, 0.09800554811954498], "val_loss": [793.8259887695312, 38882.828125, 413094.21875, 2245193.5, 8398765.0, 24756622.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 0], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [70, 2], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100216388702393, 2.3091821670532227, 2.309832811355591, 2.3095543384552, 2.3105344772338867, 2.3101110458374023], "accuracy": [0.09245806187391281, 0.0956280529499054, 0.09615638852119446, 0.09232597798109055, 0.09100515395402908, 0.09470347315073013], "val_loss": [2.3082728385925293, 2.3082728385925293, 2.3082728385925293, 2.3082728385925293, 2.3082728385925293, 2.3082728385925293], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 2, 3, 2, 3, 5], [0, 2, 2, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [8, 2, 0, 2, 5, 7, 1], [0, 4, 1, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309859275817871, 2.309072494506836, 2.3099863529205322, 2.310624837875366, 2.3122718334198, 2.310065507888794], "accuracy": [0.09060890227556229, 0.09311848133802414, 0.08809932321310043, 0.08968432247638702, 0.09232597798109055, 0.09047681838274002], "val_loss": [2.3083841800689697, 2.3083841800689697, 2.3083841800689697, 2.3083841800689697, 2.3083841800689697, 2.3083841800689697], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]