[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211656332015991, 1.6087943315505981, 1.1775540113449097, 0.9568544030189514, 0.8972101807594299, 0.8330779075622559, 0.7893123626708984, 0.7616022229194641, 0.7519867420196533, 0.6997977495193481, 0.6805095076560974, 0.6801740527153015, 0.6597121953964233, 0.6364024877548218, 0.6141608953475952, 0.6163651347160339, 0.590425431728363, 0.6060212254524231, 0.6063535213470459, 0.5629933476448059, 0.5506467819213867, 0.5421554446220398, 0.5413832664489746, 0.5323864221572876, 0.5274693369865417, 0.5114803314208984, 0.5220573544502258, 0.5108857750892639, 0.5064986944198608, 0.4908828139305115, 0.5022321343421936, 0.4820225238800049, 0.473896324634552, 0.4786912500858307, 0.466838538646698, 0.45128747820854187, 0.4575701653957367, 0.4470210671424866, 0.44566017389297485, 0.44687220454216003, 0.43822309374809265, 0.42972204089164734], "accuracy": [0.27222296595573425, 0.49887728691101074, 0.5888257622718811, 0.6623960137367249, 0.6769251227378845, 0.6935675740242004, 0.707040011882782, 0.7232862114906311, 0.7218332886695862, 0.739400327205658, 0.7452120184898376, 0.7511557340621948, 0.7534011602401733, 0.761590301990509, 0.76542067527771, 0.7676661014556885, 0.7788931727409363, 0.7751948237419128, 0.7721568942070007, 0.7887993454933167, 0.7943468689918518, 0.7979130744934082, 0.7973847389221191, 0.8017435073852539, 0.8063663840293884, 0.8153480291366577, 0.8080834746360779, 0.8107251524925232, 0.813498854637146, 0.8240655064582825, 0.8144234418869019, 0.8240655064582825, 0.8241975903511047, 0.8260467648506165, 0.8277638554573059, 0.8327829837799072, 0.8300092220306396, 0.8345000743865967, 0.8372738361358643, 0.8368775844573975, 0.8388587832450867, 0.8436138033866882], "val_loss": [1.9319628477096558, 1.1358526945114136, 0.889595627784729, 0.8007470965385437, 0.7376985549926758, 0.7106543183326721, 0.6748031377792358, 0.6926472783088684, 0.6700650453567505, 0.6104145050048828, 0.677978515625, 0.6090506315231323, 0.5777761936187744, 0.6123366951942444, 0.5755940079689026, 0.5646588802337646, 0.5449161529541016, 0.5664766430854797, 0.5329089164733887, 0.5340649485588074, 0.5205363035202026, 0.5189869999885559, 0.5184839963912964, 0.5407459139823914, 0.49911776185035706, 0.5033261775970459, 0.49382805824279785, 0.4844634532928467, 0.4827750325202942, 0.4885547161102295, 0.4759442210197449, 0.47697892785072327, 0.4721636176109314, 0.46432560682296753, 0.4632285237312317, 0.4529592990875244, 0.452145516872406, 0.4482453167438507, 0.4540519118309021, 0.4494814872741699, 0.44104892015457153, 0.46038296818733215], "val_accuracy": [0.5133333206176758, 0.5876666903495789, 0.6919999718666077, 0.6923333406448364, 0.7229999899864197, 0.7296666502952576, 0.734666645526886, 0.7360000014305115, 0.7383333444595337, 0.7680000066757202, 0.7446666955947876, 0.7666666507720947, 0.7826666831970215, 0.7716666460037231, 0.7753333449363708, 0.7850000262260437, 0.800000011920929, 0.7846666574478149, 0.8043333292007446, 0.8003333210945129, 0.8106666803359985, 0.812666654586792, 0.8069999814033508, 0.7953333258628845, 0.8140000104904175, 0.8209999799728394, 0.8169999718666077, 0.8240000009536743, 0.8263333439826965, 0.8243333101272583, 0.8236666917800903, 0.8256666660308838, 0.831333339214325, 0.8309999704360962, 0.8286666870117188, 0.8336666822433472, 0.8413333296775818, 0.8383333086967468, 0.8339999914169312, 0.8356666564941406, 0.8366666436195374, 0.8266666531562805]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [35, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6], [2, 0, 3, 4, 0, 5], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 14, 8, 6, 2, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11768590658903122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 6, 7, 1, 0, 3], [0, 1, 1, 0, 2, 3, 1, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 0, 6, 8, 8, 2], [3, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 5, 2, 9], [0, 6, 1, 1, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 20, 11, 9, 2, 9, 5, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.math.subtract(tf.math.negative(tf.math.multiply(alpha, grad)), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100733757019043, 2.309901475906372, 2.3097729682922363, 2.309213399887085, 2.3091177940368652, 2.31095290184021], "accuracy": [0.09338264167308807, 0.0944393053650856, 0.09589222073554993, 0.09642054885625839, 0.08981640636920929, 0.09100515395402908], "val_loss": [2.3087985515594482, 2.3087985515594482, 2.3087985515594482, 2.3087985515594482, 2.3087985515594482, 2.3087985515594482], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [5, 2, 3, 2, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 4, 3, 1, 0], [16, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [3, 2, 0, 2, 5, 2, 1], [0, 6, 1, 2, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 4, 2, 2, 1, 10, 6, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106484413146973, 2.311021566390991, 2.3103058338165283, 2.310971736907959, 2.309837818145752, 2.3115155696868896], "accuracy": [0.09166556596755981, 0.09008057415485382, 0.09021265059709549, 0.09219389408826828, 0.09192973375320435, 0.08334434032440186], "val_loss": [2.308079242706299, 2.308079242706299, 2.308079242706299, 2.308079242706299, 2.308079242706299, 2.308079242706299], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 3, 1, 3, 2, 8, 1, 6], [0, 0, 1, 1, 3, 2, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [1, 7, 1], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 16, 9, 7, 2, 2, 1, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(alpha, grad), grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309638500213623, 2.3109469413757324, 2.309288263320923, 2.3090574741363525, 2.310166835784912, 2.3098275661468506], "accuracy": [0.08796724677085876, 0.08994849026203156, 0.09602430462837219, 0.0952318087220192, 0.09166556596755981, 0.08809932321310043], "val_loss": [2.3092598915100098, 2.3092598915100098, 2.3092598915100098, 2.3092598915100098, 2.3092598915100098, 2.3092598915100098], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]