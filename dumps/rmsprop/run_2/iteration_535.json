[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8022857308387756, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2090296745300293, 1.5997494459152222, 1.1242609024047852, 0.9817467331886292, 0.8512081503868103, 0.8381534218788147, 0.7940670847892761, 0.7559342980384827, 0.7213680744171143, 0.7080436944961548, 0.6797966361045837, 0.6566178798675537, 0.6412909626960754, 0.6362559795379639, 0.6227470636367798, 0.6062930226325989, 0.6179615259170532, 0.5897635221481323, 0.5729848146438599, 0.5919559001922607, 0.5535224080085754, 0.5574610233306885, 0.5543180704116821, 0.535657525062561, 0.5258967280387878, 0.5252566933631897, 0.5346676111221313, 0.511955976486206, 0.5070191025733948, 0.5033292174339294, 0.5032187700271606, 0.4861648380756378, 0.4848778247833252, 0.47620752453804016, 0.4625731110572815, 0.47019022703170776, 0.47068434953689575], "accuracy": [0.27460044622421265, 0.49966979026794434, 0.6106194853782654, 0.6505085229873657, 0.6913221478462219, 0.694360077381134, 0.7096816897392273, 0.7164179086685181, 0.7308149337768555, 0.737022876739502, 0.7427024245262146, 0.7549861073493958, 0.7647602558135986, 0.7643640041351318, 0.770439863204956, 0.7740060687065125, 0.7691190242767334, 0.7843085527420044, 0.7877426743507385, 0.776251494884491, 0.7959318161010742, 0.7928939461708069, 0.7910447716712952, 0.8045172095298767, 0.8072909712791443, 0.8058380484580994, 0.7996301651000977, 0.8068947196006775, 0.8082155585289001, 0.8113855719566345, 0.8125742673873901, 0.8210275769233704, 0.8215559124946594, 0.8215559124946594, 0.8273676037788391, 0.8267071843147278, 0.8298771381378174], "val_loss": [1.9200761318206787, 1.1109392642974854, 0.8785478472709656, 0.7852954864501953, 0.8413068056106567, 0.7942397594451904, 0.7398875951766968, 0.6795960068702698, 0.653657078742981, 0.6090747714042664, 0.6018999218940735, 0.6316648125648499, 0.6069654822349548, 0.5743893384933472, 0.5611628293991089, 0.5421959757804871, 0.5362817645072937, 0.5436562895774841, 0.527651846408844, 0.5306292772293091, 0.5233224034309387, 0.5150476694107056, 0.5005459189414978, 0.48744383454322815, 0.4876187741756439, 0.4972066581249237, 0.4785705506801605, 0.473540335893631, 0.4681733250617981, 0.48324519395828247, 0.4577701687812805, 0.4417142868041992, 0.45589306950569153, 0.4510137140750885, 0.4539538621902466, 0.4389684796333313, 0.4361531436443329], "val_accuracy": [0.5669999718666077, 0.6526666879653931, 0.6790000200271606, 0.7139999866485596, 0.6880000233650208, 0.6959999799728394, 0.7089999914169312, 0.7453333139419556, 0.7393333315849304, 0.7706666588783264, 0.7606666684150696, 0.7670000195503235, 0.765666663646698, 0.7676666378974915, 0.7846666574478149, 0.7916666865348816, 0.8009999990463257, 0.7856666445732117, 0.800000011920929, 0.7953333258628845, 0.7986666560173035, 0.8069999814033508, 0.8223333358764648, 0.8163333535194397, 0.8240000009536743, 0.8149999976158142, 0.8209999799728394, 0.8293333053588867, 0.8316666483879089, 0.812333345413208, 0.8330000042915344, 0.8453333377838135, 0.8309999704360962, 0.8366666436195374, 0.8363333344459534, 0.8443333506584167, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [63, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 3, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 9, 6, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11610091477632523, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 3, 5, 0, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 9, 2, 1], [0, 6, 4, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 10, 5, 5, 2, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [62091370496.0, 16214952771584.0, 473333548187648.0, 5397742025179136.0, 3.4049366851321856e+16, 1.58804921120981e+17], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [867986374656.0, 94712451039232.0, 1765516234457088.0, 1.4968806061375488e+16, 8.07941416335442e+16, 3.2512682528394445e+17], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [90, 36, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 1, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 1], [0, 6, 3, 6, 0], [0, 34], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 5, 3, 2, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.654805905225646e+31, 29.40991973876953, 113.83797454833984, 256.3091125488281, 456.4264831542969, 713.6219482421875], "accuracy": [0.08268392831087112, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.08072280883789, 70.09717559814453, 189.17066955566406, 366.00048828125, 600.6029052734375, 893.1649169921875], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 3, 2, 3, 5, 8, 2, 7, 1, 7, 8, 3, 8, 8, 1, 1, 6, 3, 7, 1, 7, 5, 1, 5, 0, 6, 3, 8, 8, 0], [2, 2, 1, 0, 2, 2, 3, 0, 3, 2, 0, 0, 3, 2, 2, 3, 1, 2, 3, 0, 2], [0, 58, 39, 68, 94], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [2, 1, 3, 5, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [2, 6, 1, 3, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 31, 21, 5, 12, 7, 5, 1, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.math.square(tf.math.sqrt(grad)), alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(tf.math.sqrt(grad), grad), grad), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(grad), tf.math.sqrt(grad)))), tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(grad, tf.math.square(grad)), grad)), tf.math.subtract(tf.math.square(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(alpha, grad)))), tf.math.sqrt(tf.math.sqrt(tf.math.negative(grad)))))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]