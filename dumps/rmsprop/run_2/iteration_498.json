[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8408571481704712, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2135486602783203, 1.6132031679153442, 1.1677554845809937, 0.9662756323814392, 0.9074863791465759, 0.8168193101882935, 0.7857529520988464, 0.7733076810836792, 0.7520492672920227, 0.7123126983642578, 0.6936687231063843, 0.6796329021453857, 0.6673394441604614, 0.6364408731460571, 0.6202238202095032, 0.6400039792060852, 0.6061644554138184, 0.6018471717834473, 0.5766202211380005, 0.5803611874580383, 0.5762901306152344, 0.5659745335578918, 0.5466160774230957, 0.5473909974098206, 0.5454455018043518, 0.5294461250305176, 0.5221607089042664, 0.5215403437614441, 0.5043245553970337, 0.503047525882721, 0.4839256703853607, 0.48977670073509216, 0.48350101709365845, 0.4861847460269928, 0.47669389843940735, 0.47197413444519043, 0.4646173119544983, 0.45681339502334595, 0.46627721190452576, 0.45773550868034363], "accuracy": [0.26099589467048645, 0.5017831325531006, 0.5959582328796387, 0.6551313996315002, 0.6711134314537048, 0.7034738063812256, 0.7104741930961609, 0.7140403985977173, 0.7251353859901428, 0.739400327205658, 0.7392682433128357, 0.7448157668113708, 0.7544577717781067, 0.7617223858833313, 0.7726852297782898, 0.761590301990509, 0.7773081660270691, 0.7781006693840027, 0.787082314491272, 0.7841764688491821, 0.7844406366348267, 0.7873464822769165, 0.798309326171875, 0.7951393723487854, 0.796328067779541, 0.8042530417442322, 0.8031964302062988, 0.802800178527832, 0.8115176558494568, 0.8113855719566345, 0.8240655064582825, 0.8212917447090149, 0.8227446675300598, 0.8247259259223938, 0.8197067975997925, 0.82683926820755, 0.8274996876716614, 0.8330471515655518, 0.8244617581367493, 0.8286884427070618], "val_loss": [1.927252173423767, 1.110432744026184, 0.8521580696105957, 0.7879137992858887, 0.7090629935264587, 0.6747249960899353, 0.6909235119819641, 0.6758696436882019, 0.6041850447654724, 0.5806499123573303, 0.5645357966423035, 0.569378674030304, 0.555862307548523, 0.5304847955703735, 0.5709373950958252, 0.5285291075706482, 0.5322121977806091, 0.5191659331321716, 0.5001457333564758, 0.5086052417755127, 0.49928632378578186, 0.49278202652931213, 0.4809630215167999, 0.49722737073898315, 0.4943697154521942, 0.46509668231010437, 0.5034956336021423, 0.4398044943809509, 0.4429788291454315, 0.445534348487854, 0.43278205394744873, 0.45325204730033875, 0.426138311624527, 0.44004589319229126, 0.4160647690296173, 0.42325595021247864, 0.4225785732269287, 0.4149298369884491, 0.4238189160823822, 0.42015135288238525], "val_accuracy": [0.5933333039283752, 0.6439999938011169, 0.7039999961853027, 0.7026666402816772, 0.750333309173584, 0.75, 0.7223333120346069, 0.7326666712760925, 0.7670000195503235, 0.7806666493415833, 0.7903333306312561, 0.7839999794960022, 0.784333348274231, 0.8006666898727417, 0.7770000100135803, 0.8119999766349792, 0.8036666512489319, 0.8066666722297668, 0.8140000104904175, 0.800000011920929, 0.809333324432373, 0.8100000023841858, 0.8220000267028809, 0.8113333582878113, 0.8026666641235352, 0.8296666741371155, 0.8006666898727417, 0.8413333296775818, 0.8349999785423279, 0.8356666564941406, 0.843999981880188, 0.8236666917800903, 0.8426666855812073, 0.8373333215713501, 0.8496666550636292, 0.8483333587646484, 0.8433333039283752, 0.8476666808128357, 0.8399999737739563, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 8], [2, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [4, 0, 4, 0, 0, 1], [16, 1, 81], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 8, 2, 1], [0, 6, 1, 5, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 13, 7, 6, 3, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 7, 2, 5, 2, 1, 4], [7, 6, 1, 6, 6, 3, 7], [29, 22], [0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 2, 6], [2, 3, 6, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 10, 6, 4, 0, 15, 8, 7, 0, 8, 4, 4, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.math.pow(grad, alpha), grad), grad)), sigma), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(beta, sigma), grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 7, 5], [0, 2, 1, 3, 2], [27, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 7, 2, 4, 7, 0, 8, 9, 0], [0, 6, 1, 6, 0, 0], [0, 22, 53, 77], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 8, 4, 4, 1, 1, 0, 1, 0, 18, 12, 6, 4, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), alpha), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(tf.math.negative(tf.math.sqrt(grad)), alpha), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309507131576538, 2.3101372718811035, 2.30934739112854, 2.3098185062408447, 2.3081343173980713, 2.309213876724243], "accuracy": [0.09694888442754745, 0.09021265059709549, 0.09708096832036972, 0.09470347315073013, 0.09879804402589798, 0.09192973375320435], "val_loss": [2.308537483215332, 2.308537483215332, 2.308537483215332, 2.308537483215332, 2.308537483215332, 2.308537483215332], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 2, 8, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103127479553223, 2.3113045692443848, 2.3097193241119385, 2.3110764026641846, 2.3120334148406982, 2.3106236457824707], "accuracy": [0.0952318087220192, 0.0866464152932167, 0.09285431355237961, 0.09034473448991776, 0.08915598690509796, 0.0874389111995697], "val_loss": [2.3085367679595947, 2.3085367679595947, 2.3085367679595947, 2.3085367679595947, 2.3085367679595947, 2.3085367679595947], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]