[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2092959880828857, 1.5988287925720215, 1.1382702589035034, 0.9696674346923828, 0.8839737772941589, 0.8391960263252258, 0.7676077485084534, 0.7507385611534119, 0.7256807684898376, 0.6870258450508118, 0.690518856048584, 0.6507136821746826, 0.6479224562644958, 0.6293737292289734, 0.6266637444496155, 0.6167528033256531, 0.5968870520591736, 0.5855363011360168, 0.579672634601593, 0.5581976175308228, 0.5512740612030029, 0.5449585318565369, 0.5461723804473877, 0.5264477133750916, 0.5198588371276855, 0.510218620300293, 0.5024813413619995, 0.5124487280845642, 0.4952153265476227, 0.4855906367301941, 0.4870302677154541, 0.473319947719574, 0.4813905656337738, 0.4657381474971771, 0.4645533561706543, 0.4642857313156128, 0.46750691533088684, 0.44994592666625977, 0.45032063126564026, 0.440502792596817, 0.44011130928993225, 0.4333359897136688, 0.4216827154159546, 0.4187926650047302, 0.41925719380378723, 0.41481244564056396], "accuracy": [0.26826047897338867, 0.5101043581962585, 0.6052040457725525, 0.6608110070228577, 0.67666095495224, 0.6985867023468018, 0.7186633348464966, 0.7193237543106079, 0.7297582626342773, 0.7498348951339722, 0.7417778372764587, 0.7614582180976868, 0.7565711140632629, 0.7695152759552002, 0.763967752456665, 0.7744023203849792, 0.7790252566337585, 0.7810064554214478, 0.7911768555641174, 0.7955356240272522, 0.7969884872436523, 0.8018755912780762, 0.7979130744934082, 0.8100647330284119, 0.8092722296714783, 0.8079513907432556, 0.81548011302948, 0.8128384351730347, 0.8117818236351013, 0.8204993009567261, 0.8216879963874817, 0.8297450542449951, 0.8230088353157043, 0.833179235458374, 0.8348963260650635, 0.8304054737091064, 0.8281601071357727, 0.8366134166717529, 0.8366134166717529, 0.8416325449943542, 0.8416325449943542, 0.8445383906364441, 0.8512746095657349, 0.8445383906364441, 0.8508783578872681, 0.850350022315979], "val_loss": [1.9181185960769653, 1.109621286392212, 0.9366976022720337, 0.8449357151985168, 0.7302370667457581, 0.6878539323806763, 0.680800199508667, 0.6640580892562866, 0.6185216307640076, 0.6004607081413269, 0.5955023765563965, 0.573728084564209, 0.5919063091278076, 0.57244473695755, 0.5653886795043945, 0.5393193960189819, 0.5214898586273193, 0.5178003907203674, 0.5159182548522949, 0.5085076689720154, 0.48861974477767944, 0.5147382020950317, 0.4868605434894562, 0.48449620604515076, 0.4811244308948517, 0.46501925587654114, 0.47575947642326355, 0.49924764037132263, 0.4594252109527588, 0.4436105191707611, 0.4539927840232849, 0.4714795649051666, 0.4506914019584656, 0.42663052678108215, 0.4281691014766693, 0.42828238010406494, 0.41631248593330383, 0.44922110438346863, 0.42111149430274963, 0.41607141494750977, 0.40780481696128845, 0.4227331876754761, 0.40284019708633423, 0.4071159362792969, 0.40872061252593994, 0.40029317140579224], "val_accuracy": [0.5486666560173035, 0.6616666913032532, 0.6526666879653931, 0.6806666851043701, 0.7369999885559082, 0.7413333058357239, 0.7273333072662354, 0.7400000095367432, 0.7706666588783264, 0.7673333287239075, 0.7680000066757202, 0.7829999923706055, 0.7543333172798157, 0.7620000243186951, 0.7793333530426025, 0.7896666526794434, 0.8006666898727417, 0.8103333115577698, 0.7976666688919067, 0.8069999814033508, 0.8169999718666077, 0.7993333339691162, 0.8106666803359985, 0.8159999847412109, 0.8230000138282776, 0.8293333053588867, 0.8113333582878113, 0.8029999732971191, 0.8223333358764648, 0.8346666693687439, 0.8276666402816772, 0.8183333277702332, 0.8286666870117188, 0.8443333506584167, 0.8443333506584167, 0.8379999995231628, 0.8473333120346069, 0.8306666612625122, 0.8450000286102295, 0.8460000157356262, 0.8519999980926514, 0.8376666903495789, 0.8453333377838135, 0.8500000238418579, 0.8396666646003723, 0.8489999771118164]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [97, 80, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2, 0], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [1, 2, 0, 2, 5], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 8, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 9, 6, 7, 3, 8, 3, 3, 3, 9], [0, 2, 1, 0, 2, 1, 1, 0, 0], [0, 39, 39, 72, 39, 61], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 7, 7, 5, 3], [0, 6, 1, 6, 0, 3, 1, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 24, 15, 9, 6, 5, 3, 2, 0, 19, 11, 8, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.sqrt(tf.math.multiply(tf.math.multiply(alpha, alpha), tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(grad, alpha), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), sigma))), tf.math.square(tf.math.multiply(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309156894683838, 2.310363531112671, 2.3095366954803467, 2.3099708557128906, 2.309068441390991, 2.3107199668884277], "accuracy": [0.09166556596755981, 0.09140139818191528, 0.08994849026203156, 0.09351472556591034, 0.09430722147226334, 0.08994849026203156], "val_loss": [2.3089652061462402, 2.3089652061462402, 2.3089652061462402, 2.3089652061462402, 2.3089652061462402, 2.3089652061462402], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 8, 2, 5, 4, 1], [0, 4, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309453010559082, 2.310397148132324, 2.3101325035095215, 2.3109829425811768, 2.307734966278076, 2.3102939128875732], "accuracy": [0.09509972482919693, 0.09285431355237961, 0.0956280529499054, 0.09259014576673508, 0.09391097724437714, 0.08492933213710785], "val_loss": [2.3088672161102295, 2.3088672161102295, 2.3088672161102295, 2.3088672161102295, 2.3088672161102295, 2.3088672161102295], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 0], [2, 0, 3, 1, 0], [16, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 0, 2, 5, 7, 1], [5, 6, 1, 3, 5], [34], [1], [0], [2], [0]], "fitness": -0.06142857298254967, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 1, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.2201584402366464e+16, 1.391760529948672e+16, 1.3508283105017856e+16, 1.3760712291647488e+16, 1.3841824896516096e+16, 1.3862421412184064e+16], "accuracy": [0.07647603005170822, 0.07132479548454285, 0.07251353561878204, 0.07528728246688843, 0.07832518965005875, 0.06947562843561172], "val_loss": [1.0409151742083072e+16, 1.0409151742083072e+16, 1.0409151742083072e+16, 1.0409151742083072e+16, 1.0409151742083072e+16, 1.0409151742083072e+16], "val_accuracy": [0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972]}}]