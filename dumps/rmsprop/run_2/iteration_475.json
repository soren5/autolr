[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2128567695617676, 1.6192456483840942, 1.1678386926651, 1.0286983251571655, 0.9222631454467773, 0.8417630195617676, 0.804558277130127, 0.7961018681526184, 0.7413758039474487, 0.7327609658241272, 0.7180598974227905, 0.6955970525741577, 0.6810250878334045, 0.6641120314598083, 0.6600385904312134, 0.6263341903686523, 0.6231132745742798, 0.6137678027153015, 0.5994537472724915, 0.6032398343086243, 0.5718700289726257, 0.5701614618301392, 0.5638340711593628, 0.559095561504364, 0.5536498427391052, 0.5363974571228027, 0.5364492535591125, 0.5319787263870239, 0.523967444896698, 0.5183147192001343, 0.5204293727874756, 0.5091326236724854, 0.4903053641319275, 0.5015237331390381, 0.4861125946044922, 0.4834806025028229, 0.47356921434402466, 0.4795146584510803, 0.47092950344085693, 0.4668165147304535, 0.45837974548339844, 0.4423329830169678, 0.4436919391155243, 0.44735532999038696, 0.4309456944465637, 0.44264668226242065, 0.43853020668029785, 0.43313729763031006, 0.43204715847969055, 0.43181928992271423, 0.41947856545448303, 0.4143059253692627, 0.4195193946361542, 0.4030943214893341, 0.4110797941684723, 0.40350326895713806, 0.39282602071762085, 0.40229368209838867, 0.38960835337638855, 0.385531485080719, 0.3931991457939148], "accuracy": [0.26244881749153137, 0.4991414546966553, 0.5952978730201721, 0.6343944072723389, 0.6605468392372131, 0.6956809163093567, 0.7028133869171143, 0.7024171352386475, 0.7234182953834534, 0.7284374833106995, 0.7297582626342773, 0.7465327978134155, 0.7473253011703491, 0.7552502751350403, 0.7516840696334839, 0.7740060687065125, 0.769911527633667, 0.7718927264213562, 0.7765156626701355, 0.7749306559562683, 0.789459764957428, 0.7952714562416077, 0.7932901978492737, 0.8009510040283203, 0.7992339134216309, 0.8086118102073669, 0.8070268034934998, 0.8041210174560547, 0.8128384351730347, 0.8101968169212341, 0.8109893202781677, 0.8125742673873901, 0.8234050869941711, 0.8222163319587708, 0.8235371708869934, 0.8272355198860168, 0.8304054737091064, 0.828820526599884, 0.8335754871368408, 0.8343679904937744, 0.8367455005645752, 0.8388587832450867, 0.8413683772087097, 0.8425571322441101, 0.8477083444595337, 0.843481719493866, 0.8421608805656433, 0.843481719493866, 0.8450667262077332, 0.8436138033866882, 0.850350022315979, 0.8520671129226685, 0.8506141901016235, 0.8573504090309143, 0.8520671129226685, 0.8602562546730042, 0.8569541573524475, 0.8552370667457581, 0.8623695969581604, 0.8627657890319824, 0.8597279191017151], "val_loss": [1.9244753122329712, 1.113741397857666, 0.9156858921051025, 0.7932209372520447, 0.715896487236023, 0.6844673752784729, 0.6936023831367493, 0.6349671483039856, 0.6312516927719116, 0.5865890979766846, 0.6022399663925171, 0.5691983103752136, 0.5703607797622681, 0.5695224404335022, 0.5366905331611633, 0.5372084379196167, 0.53182053565979, 0.5131589770317078, 0.5273847579956055, 0.503993809223175, 0.49844133853912354, 0.4944303333759308, 0.49209919571876526, 0.5007303953170776, 0.4861651062965393, 0.4809548258781433, 0.48260340094566345, 0.4695183038711548, 0.46664559841156006, 0.46240100264549255, 0.4580693244934082, 0.4528396725654602, 0.44235163927078247, 0.45932409167289734, 0.4340057075023651, 0.4733220934867859, 0.44510993361473083, 0.4436682164669037, 0.426960289478302, 0.43712151050567627, 0.42984822392463684, 0.4177797734737396, 0.4141545295715332, 0.41910824179649353, 0.4160709083080292, 0.41876155138015747, 0.4325512647628784, 0.45180457830429077, 0.40743640065193176, 0.40862467885017395, 0.39746028184890747, 0.4057522714138031, 0.40195924043655396, 0.3977130651473999, 0.40917733311653137, 0.3941912353038788, 0.40731915831565857, 0.3891369104385376, 0.39238834381103516, 0.3919348418712616, 0.40263158082962036], "val_accuracy": [0.5696666836738586, 0.640666663646698, 0.6736666560173035, 0.7236666679382324, 0.7326666712760925, 0.734333336353302, 0.7303333282470703, 0.7593333125114441, 0.7693333625793457, 0.7803333401679993, 0.7663333415985107, 0.7896666526794434, 0.7879999876022339, 0.7866666913032532, 0.812666654586792, 0.7956666946411133, 0.8016666769981384, 0.8149999976158142, 0.7926666736602783, 0.8076666593551636, 0.815666675567627, 0.8163333535194397, 0.8180000185966492, 0.8100000023841858, 0.8199999928474426, 0.8276666402816772, 0.8183333277702332, 0.8306666612625122, 0.8236666917800903, 0.8286666870117188, 0.8360000252723694, 0.8336666822433472, 0.8389999866485596, 0.828000009059906, 0.8396666646003723, 0.8106666803359985, 0.8293333053588867, 0.8429999947547913, 0.846666693687439, 0.8379999995231628, 0.847000002861023, 0.8489999771118164, 0.8479999899864197, 0.8489999771118164, 0.8483333587646484, 0.8533333539962769, 0.8393333554267883, 0.8333333134651184, 0.8519999980926514, 0.8510000109672546, 0.8556666374206543, 0.8506666421890259, 0.8586666584014893, 0.859000027179718, 0.8513333201408386, 0.8636666536331177, 0.8546666502952576, 0.8573333621025085, 0.8586666584014893, 0.8606666922569275, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 5, 4, 8], [0, 2, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 4, 1], [97, 22], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.450019598007202, 2.304227113723755, 2.3033828735351562, 2.3033368587493896, 2.302966833114624, 2.3029985427856445], "accuracy": [0.18544445931911469, 0.10091137140989304, 0.09245806187391281, 0.09047681838274002, 0.0940430611371994, 0.09813763201236725], "val_loss": [2.3047900199890137, 2.303025007247925, 2.3027265071868896, 2.3026485443115234, 2.30267333984375, 2.3026123046875], "val_accuracy": [0.10166666656732559, 0.10000000149011612, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 3, 3, 2], [0, 74, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 7, 1], [0, 6, 1, 6, 0], [2, 22], [1], [0], [0], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.311788558959961, 2.3096730709075928, 2.309990882873535, 2.3089828491210938, 2.3099770545959473, 2.309863567352295], "accuracy": [0.09126931428909302, 0.08968432247638702, 0.09377889335155487, 0.09285431355237961, 0.0948355570435524, 0.09245806187391281], "val_loss": [2.3085217475891113, 2.3085217475891113, 2.3085217475891113, 2.3085217475891113, 2.3085217475891113, 2.3085217475891113], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 2, 1, 5], [0, 0, 1, 3, 2], [0, 39, 47], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 8], [0, 4, 1, 3, 7], [56, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 3, 2, 1, 1, 1, 0, 1, 0, 13, 8, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.sqrt(grad), alpha), sigma))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309990167617798, 2.3090152740478516, 2.3099172115325928, 2.3107216358184814, 2.311267137527466, 2.3090403079986572], "accuracy": [0.09074098616838455, 0.09192973375320435, 0.08849557489156723, 0.09074098616838455, 0.09113723784685135, 0.09034473448991776], "val_loss": [2.308586359024048, 2.308586359024048, 2.308586359024048, 2.308586359024048, 2.308586359024048, 2.308586359024048], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 2, 3, 5], [3, 2, 1, 0, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 6, 7, 5, 2, 5], [0, 6, 3, 0, 0], [0, 55, 22], [1], [0], [0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 11, 6, 5, 1, 2, 1, 1, 0, 12, 7, 5, 3, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(sigma))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310931921005249, 2.3090033531188965, 2.310049295425415, 2.3092427253723145, 2.3086655139923096, 2.3101820945739746], "accuracy": [0.09179764986038208, 0.09087307006120682, 0.09259014576673508, 0.09338264167308807, 0.09060890227556229, 0.0952318087220192], "val_loss": [2.3083255290985107, 2.3083255290985107, 2.3083255290985107, 2.3083255290985107, 2.3083255290985107, 2.3083255290985107], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}]