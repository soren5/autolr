[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212080240249634, 1.6169557571411133, 1.17808198928833, 0.9773200154304504, 0.8843627572059631, 0.8316211104393005, 0.780773937702179, 0.7532041668891907, 0.7538383603096008, 0.7088264226913452, 0.6996417045593262, 0.6740150451660156, 0.6512163877487183, 0.6288650035858154, 0.621204674243927, 0.6121659874916077, 0.5960737466812134, 0.58067786693573, 0.5586968660354614, 0.5776220560073853, 0.5604299902915955, 0.5512418746948242, 0.5458105206489563, 0.5373051762580872, 0.5266849398612976, 0.5165755748748779, 0.5114971399307251, 0.5083764791488647, 0.5005593299865723, 0.49205705523490906, 0.4955540895462036, 0.4697721302509308, 0.47943443059921265, 0.4618489146232605, 0.47666051983833313, 0.4556254744529724, 0.44965028762817383, 0.4523572027683258, 0.4470188021659851, 0.4358403980731964, 0.43910494446754456, 0.4332411289215088, 0.43493109941482544, 0.42018604278564453, 0.4232821464538574, 0.4122045636177063, 0.40696316957473755, 0.4055216610431671, 0.408721923828125, 0.39373070001602173], "accuracy": [0.2670717239379883, 0.5011227130889893, 0.5801082849502563, 0.6516972780227661, 0.6787742972373962, 0.6973979473114014, 0.7088891863822937, 0.7202483415603638, 0.7199841737747192, 0.7342491149902344, 0.7390040755271912, 0.7486461400985718, 0.7555144429206848, 0.76542067527771, 0.7692511081695557, 0.767401933670044, 0.7757231593132019, 0.7784969210624695, 0.7957997918128967, 0.7836481332778931, 0.7906485199928284, 0.7924976944923401, 0.7956677079200745, 0.8018755912780762, 0.806630551815033, 0.8117818236351013, 0.8088759779930115, 0.811649739742279, 0.8080834746360779, 0.8186501264572144, 0.8125742673873901, 0.8286884427070618, 0.822348415851593, 0.8284242749214172, 0.8158763647079468, 0.8298771381378174, 0.835160493850708, 0.835160493850708, 0.8359529972076416, 0.841500461101532, 0.8400475382804871, 0.8370096683502197, 0.8389908671379089, 0.8461233377456665, 0.8418967127799988, 0.852331280708313, 0.8508783578872681, 0.8491612672805786, 0.8499537706375122, 0.8585391640663147], "val_loss": [1.9266802072525024, 1.1122366189956665, 0.9131970405578613, 0.7979556322097778, 0.7139012813568115, 0.6667889952659607, 0.6578137278556824, 0.6964627504348755, 0.6211774349212646, 0.6121788024902344, 0.6180057525634766, 0.6172804236412048, 0.5649800896644592, 0.531089186668396, 0.5294306874275208, 0.5181335210800171, 0.529839277267456, 0.5028285384178162, 0.5001676678657532, 0.49902042746543884, 0.4987635910511017, 0.5039820671081543, 0.49793747067451477, 0.48117440938949585, 0.46455374360084534, 0.4677111804485321, 0.4644898772239685, 0.45889484882354736, 0.47192850708961487, 0.44764918088912964, 0.44169625639915466, 0.4557933211326599, 0.4456516206264496, 0.4594283401966095, 0.44023796916007996, 0.4302046597003937, 0.4304884076118469, 0.45034798979759216, 0.4371349811553955, 0.41694310307502747, 0.42382878065109253, 0.41829434037208557, 0.4314750134944916, 0.4366793632507324, 0.4109952449798584, 0.4084637463092804, 0.4065908193588257, 0.4127347469329834, 0.4113610088825226, 0.4308238625526428], "val_accuracy": [0.5926666855812073, 0.652999997138977, 0.6786666512489319, 0.718666672706604, 0.7333333492279053, 0.7516666650772095, 0.7516666650772095, 0.7319999933242798, 0.7620000243186951, 0.7683333158493042, 0.765999972820282, 0.7573333382606506, 0.7863333225250244, 0.800000011920929, 0.8033333420753479, 0.79666668176651, 0.7860000133514404, 0.7996666431427002, 0.8169999718666077, 0.8206666707992554, 0.812333345413208, 0.8106666803359985, 0.8006666898727417, 0.8276666402816772, 0.8293333053588867, 0.8299999833106995, 0.8263333439826965, 0.8159999847412109, 0.8159999847412109, 0.8353333473205566, 0.8363333344459534, 0.8199999928474426, 0.8276666402816772, 0.8223333358764648, 0.8326666951179504, 0.840666651725769, 0.8356666564941406, 0.8163333535194397, 0.8353333473205566, 0.8443333506584167, 0.8389999866485596, 0.846666693687439, 0.8373333215713501, 0.8323333263397217, 0.847000002861023, 0.8429999947547913, 0.8453333377838135, 0.8463333249092102, 0.8446666598320007, 0.8336666822433472]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 8, 3, 2, 3, 4, 7, 4, 3, 8, 7, 0, 9], [0, 2, 1, 0, 2, 3, 1, 0], [0, 94, 39, 83], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 8, 0, 6, 0, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 0, 0, 7, 8], [0, 6, 1, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.24057142436504364, "mapping_values": [1, 21, 13, 8, 4, 4, 3, 1, 0, 13, 9, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.pow(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), tf.math.negative(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(grad), alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3174355030059814, 2.2097012996673584, 3.0894055366516113, 2.3297953605651855, 2.2261617183685303, 2.3084492683410645], "accuracy": [0.1982565075159073, 0.17633073031902313, 0.15651829540729523, 0.14410249888896942, 0.16734910011291504, 0.09945846349000931], "val_loss": [2.1599531173706055, 2.303792953491211, 2.263606071472168, 2.303054094314575, 2.314410924911499, 2.3032357692718506], "val_accuracy": [0.23333333432674408, 0.10100000351667404, 0.21033333241939545, 0.19166666269302368, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 1, 1, 1, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1, 38], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 5, 0], [0, 22], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 8, 3, 1, 6, 6, 0, 9, 0, 2, 7], [4, 3, 2, 2, 6, 3, 5, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 3, 2, 1, 1, 1, 21, 13, 8, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.sqrt(tf.math.multiply(sigma, tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(sigma, grad)))), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 6, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [88, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103537559509277, 2.3106284141540527, 2.3098485469818115, 2.3098559379577637, 2.309197187423706, 2.309398651123047], "accuracy": [0.08440100401639938, 0.08994849026203156, 0.09140139818191528, 0.09126931428909302, 0.09760929644107819, 0.09470347315073013], "val_loss": [2.309030532836914, 2.309030532836914, 2.309030532836914, 2.309030532836914, 2.309030532836914, 2.309030532836914], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 0, 6, 9, 8, 2], [3, 0, 2, 1, 0], [16, 1], [0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 9, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 7, 4, 3, 1, 8, 5, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3078765869140625, 2.309460401535034, 2.3106794357299805, 2.310091733932495, 2.3101918697357178, 2.3105356693267822], "accuracy": [0.08836349099874496, 0.08994849026203156, 0.09074098616838455, 0.08955223858356476, 0.09245806187391281, 0.09219389408826828], "val_loss": [2.308309555053711, 2.308309555053711, 2.308309555053711, 2.308309555053711, 2.308309555053711, 2.308309555053711], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]