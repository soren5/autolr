[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2087562084198, 1.602288007736206, 1.1361719369888306, 1.0087006092071533, 0.8991219997406006, 0.8253698348999023, 0.7917807698249817, 0.7348254323005676, 0.7551528215408325, 0.6976451277732849, 0.6884008049964905, 0.6799424290657043, 0.6435474753379822, 0.6545370221138, 0.6137988567352295, 0.6087409257888794, 0.6022582650184631, 0.5957478284835815, 0.5795696377754211, 0.565545916557312, 0.5639984011650085, 0.5619156956672668, 0.5413908362388611, 0.5443486571311951, 0.529213011264801, 0.5208376049995422, 0.5280495285987854, 0.5083338022232056, 0.49567660689353943, 0.5141056776046753, 0.4927327334880829, 0.48120811581611633, 0.49356651306152344, 0.4701382517814636, 0.46240925788879395, 0.46254467964172363, 0.4548846185207367, 0.4548996686935425, 0.4514644742012024, 0.448048859834671, 0.4479164183139801, 0.4313177168369293, 0.42355772852897644, 0.4196954667568207, 0.4256237745285034, 0.4221923351287842, 0.41658928990364075, 0.40577659010887146, 0.4085485637187958, 0.40928104519844055, 0.39522215723991394, 0.3944186866283417, 0.39134982228279114, 0.39641261100769043, 0.3944786489009857, 0.38995036482810974, 0.3844349980354309, 0.3776189684867859, 0.38056042790412903, 0.3765697777271271], "accuracy": [0.26641130447387695, 0.5079910159111023, 0.6056002974510193, 0.6433760523796082, 0.6753401160240173, 0.7067758440971375, 0.7108704447746277, 0.7358341217041016, 0.7228899598121643, 0.7458723783493042, 0.7456082701683044, 0.750759482383728, 0.7688548564910889, 0.7598732113838196, 0.7741381525993347, 0.7758552432060242, 0.7757231593132019, 0.7845727205276489, 0.7845727205276489, 0.7935543656349182, 0.7918372750282288, 0.7942147850990295, 0.798309326171875, 0.7971205711364746, 0.8076872229576111, 0.8156121969223022, 0.8088759779930115, 0.8142913579940796, 0.8220842480659485, 0.8137630224227905, 0.8231409192085266, 0.8248580098152161, 0.8201030492782593, 0.8293488025665283, 0.8362171649932861, 0.8358209133148193, 0.8339717388153076, 0.8366134166717529, 0.8321225643157959, 0.8384625315666199, 0.8359529972076416, 0.8467837572097778, 0.8457271456718445, 0.8525954484939575, 0.8499537706375122, 0.8490291833877563, 0.8499537706375122, 0.8519350290298462, 0.8545766472816467, 0.8520671129226685, 0.8569541573524475, 0.8588033318519592, 0.8568220734596252, 0.8577466607093811, 0.8610487580299377, 0.8584070801734924, 0.8590674996376038, 0.8625016212463379, 0.8613129258155823, 0.86118084192276], "val_loss": [1.9176781177520752, 1.0823569297790527, 0.9218994379043579, 0.7821194529533386, 0.7330600619316101, 0.6764483451843262, 0.6483610272407532, 0.6262851357460022, 0.6587828993797302, 0.5731083154678345, 0.6218252182006836, 0.5650960206985474, 0.5832244753837585, 0.5378284454345703, 0.541485071182251, 0.537408173084259, 0.5413170456886292, 0.5243025422096252, 0.5039430856704712, 0.4882907271385193, 0.49709224700927734, 0.48538443446159363, 0.48482900857925415, 0.47918325662612915, 0.46614423394203186, 0.4557194411754608, 0.4694136679172516, 0.44937586784362793, 0.46433088183403015, 0.4458526074886322, 0.44916877150535583, 0.43970686197280884, 0.4443533420562744, 0.42931827902793884, 0.44684097170829773, 0.4328044354915619, 0.4243628680706024, 0.4372551143169403, 0.4388114809989929, 0.41519513726234436, 0.4197727143764496, 0.4162715971469879, 0.40976038575172424, 0.4079321622848511, 0.41356360912323, 0.4099622070789337, 0.40193384885787964, 0.40381497144699097, 0.4028204679489136, 0.3963806927204132, 0.39215466380119324, 0.3941856622695923, 0.3924030065536499, 0.39683422446250916, 0.3880794942378998, 0.39302879571914673, 0.3933219313621521, 0.4050655961036682, 0.3897228240966797, 0.3941274881362915], "val_accuracy": [0.6156666874885559, 0.653333306312561, 0.6423333287239075, 0.718666672706604, 0.7233333587646484, 0.7416666746139526, 0.7459999918937683, 0.7586666941642761, 0.7300000190734863, 0.778333306312561, 0.7646666765213013, 0.777999997138977, 0.7723333239555359, 0.7926666736602783, 0.7910000085830688, 0.7846666574478149, 0.7826666831970215, 0.8023333549499512, 0.8133333325386047, 0.8130000233650208, 0.8153333067893982, 0.8220000267028809, 0.8199999928474426, 0.82833331823349, 0.82833331823349, 0.8356666564941406, 0.8213333487510681, 0.8360000252723694, 0.8266666531562805, 0.8336666822433472, 0.8326666951179504, 0.8383333086967468, 0.8413333296775818, 0.8433333039283752, 0.8349999785423279, 0.8370000123977661, 0.846666693687439, 0.8299999833106995, 0.8293333053588867, 0.8506666421890259, 0.847000002861023, 0.8450000286102295, 0.8500000238418579, 0.8536666631698608, 0.8496666550636292, 0.8529999852180481, 0.8543333411216736, 0.8556666374206543, 0.8539999723434448, 0.8560000061988831, 0.8586666584014893, 0.8566666841506958, 0.859666645526886, 0.8553333282470703, 0.8603333234786987, 0.8539999723434448, 0.8523333072662354, 0.8543333411216736, 0.8560000061988831, 0.8566666841506958]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 2, 2, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 4, 9], [0, 6, 1, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.29257142543792725, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3138427734375, 2.5541129112243652, 2.245281457901001, 2.3034846782684326, 2.2916572093963623, 2.3056247234344482, 2.3024544715881348], "accuracy": [0.20578522980213165, 0.11094967275857925, 0.16510368883609772, 0.09615638852119446, 0.16840575635433197, 0.1006472036242485, 0.10315678268671036], "val_loss": [3.7716875076293945, 2.219575881958008, 2.3041813373565674, 2.299748659133911, 2.309479236602783, 2.3030223846435547, 2.3007450103759766], "val_accuracy": [0.15000000596046448, 0.2906666696071625, 0.09933333098888397, 0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.1693333387374878]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2, 1, 3], [0, 2, 2, 0, 2, 0, 1, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 0, 6, 3, 8, 2, 4, 6, 0], [2, 0, 3, 1, 0, 1, 4], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [5, 2, 0, 2, 5, 7, 1], [0, 6, 1, 4, 5], [48, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 3, 17, 10, 7, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.subtract(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 1, 3, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 8, 2, 5, 1, 1], [0, 4, 1, 6, 0], [0, 22], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 6, 7, 3, 2, 2, 1, 5, 1, 2, 0, 4], [2, 7, 7, 6, 7, 2, 7, 4, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 12, 7, 5, 2, 22, 12, 10, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.subtract(tf.math.square(grad), grad), grad)), tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.math.pow(grad, grad)), beta)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 9, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [1, 4, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 5, 4, 1, 2, 1, 0, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100404739379883, 2.3093392848968506, 2.308671236038208, 2.31003737449646, 2.3099725246429443, 2.3099205493927], "accuracy": [0.09259014576673508, 0.09602430462837219, 0.09576013684272766, 0.09351472556591034, 0.08968432247638702, 0.09192973375320435], "val_loss": [2.3080358505249023, 2.3080358505249023, 2.3080358505249023, 2.3080358505249023, 2.3080358505249023, 2.3080358505249023], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]