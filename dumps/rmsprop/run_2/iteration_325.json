[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8137142658233643, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212773561477661, 1.6113829612731934, 1.1337260007858276, 0.988571047782898, 0.8876420259475708, 0.827354907989502, 0.7844472527503967, 0.7693400382995605, 0.7413040399551392, 0.7119944095611572, 0.677424430847168, 0.6931003332138062, 0.6724544763565063, 0.6417136788368225, 0.6365928053855896, 0.6189406514167786, 0.6057748794555664, 0.6093663573265076, 0.5898094177246094, 0.584578275680542, 0.5766229629516602, 0.5682032108306885, 0.5594351887702942, 0.546596109867096, 0.5461953282356262, 0.5291740298271179, 0.523836612701416, 0.5210104584693909, 0.5111095309257507, 0.5139755606651306, 0.4948219656944275, 0.4980277121067047, 0.49376076459884644, 0.4854557514190674, 0.48213788866996765, 0.4730331599712372, 0.47794267535209656, 0.46974965929985046, 0.46818622946739197, 0.45897653698921204, 0.4488762319087982, 0.43881142139434814, 0.4418751895427704, 0.43437659740448, 0.42733216285705566, 0.4227222204208374, 0.42014047503471375, 0.424791544675827, 0.43133676052093506, 0.41147541999816895, 0.41558703780174255, 0.4105919599533081, 0.40084561705589294, 0.4024714231491089, 0.4068492650985718, 0.3999028205871582], "accuracy": [0.2599392533302307, 0.5019152164459229, 0.6036190986633301, 0.6520935297012329, 0.6782459616661072, 0.7017567157745361, 0.7091533541679382, 0.7144366502761841, 0.7277770638465881, 0.7374191284179688, 0.7442874312400818, 0.746268630027771, 0.7498348951339722, 0.7703077793121338, 0.7642319202423096, 0.7738739848136902, 0.7775723338127136, 0.7777044177055359, 0.780610203742981, 0.7814027070999146, 0.7873464822769165, 0.7913089394569397, 0.7942147850990295, 0.796328067779541, 0.8000264167785645, 0.8031964302062988, 0.8079513907432556, 0.8105930685997009, 0.8142913579940796, 0.8083476424217224, 0.8210275769233704, 0.8166688680648804, 0.8228767514228821, 0.8244617581367493, 0.8238013386726379, 0.8271034359931946, 0.8226125836372375, 0.8255184292793274, 0.8300092220306396, 0.834632158279419, 0.8379341959953308, 0.8445383906364441, 0.8387266993522644, 0.8444063067436218, 0.8482366800308228, 0.8451988101005554, 0.8457271456718445, 0.8454629778862, 0.8407079577445984, 0.8511425256729126, 0.848368763923645, 0.8498216867446899, 0.8527275323867798, 0.8557654023170471, 0.8506141901016235, 0.8573504090309143], "val_loss": [1.9274342060089111, 1.1108461618423462, 1.0079972743988037, 0.7991101741790771, 0.8180442452430725, 0.6950545907020569, 0.672159731388092, 0.6288538575172424, 0.6311571598052979, 0.634223222732544, 0.6262107491493225, 0.6174178123474121, 0.5919672846794128, 0.5949970483779907, 0.5666670203208923, 0.5351845622062683, 0.5466375350952148, 0.5349442362785339, 0.5376558303833008, 0.5037351250648499, 0.5757288932800293, 0.5264194011688232, 0.5093379020690918, 0.48667842149734497, 0.48059049248695374, 0.47322407364845276, 0.4745740294456482, 0.4718838334083557, 0.45728495717048645, 0.46596598625183105, 0.4767926335334778, 0.45475733280181885, 0.44979459047317505, 0.45224612951278687, 0.4391617476940155, 0.45478594303131104, 0.46864429116249084, 0.44942188262939453, 0.44753962755203247, 0.4218074083328247, 0.4358571469783783, 0.4309452772140503, 0.4359113276004791, 0.42712724208831787, 0.4132055640220642, 0.4077548384666443, 0.4076719582080841, 0.4063107967376709, 0.40519991517066956, 0.40102139115333557, 0.4001122713088989, 0.3989153504371643, 0.4080635607242584, 0.40451574325561523, 0.4115874171257019, 0.3960832953453064], "val_accuracy": [0.5323333144187927, 0.6506666541099548, 0.6273333430290222, 0.7066666483879089, 0.7083333134651184, 0.7433333396911621, 0.7276666760444641, 0.7549999952316284, 0.7459999918937683, 0.7490000128746033, 0.749666690826416, 0.7716666460037231, 0.7770000100135803, 0.7710000276565552, 0.7900000214576721, 0.7956666946411133, 0.7786666750907898, 0.7900000214576721, 0.7753333449363708, 0.8076666593551636, 0.7796666622161865, 0.7943333387374878, 0.8069999814033508, 0.8186666369438171, 0.815666675567627, 0.8180000185966492, 0.8203333616256714, 0.8169999718666077, 0.8246666789054871, 0.8256666660308838, 0.8240000009536743, 0.8240000009536743, 0.8336666822433472, 0.8306666612625122, 0.8389999866485596, 0.8276666402816772, 0.8243333101272583, 0.8309999704360962, 0.8360000252723694, 0.8420000076293945, 0.8420000076293945, 0.8403333425521851, 0.8416666388511658, 0.8376666903495789, 0.8450000286102295, 0.8500000238418579, 0.8483333587646484, 0.8486666679382324, 0.8526666760444641, 0.8516666889190674, 0.8579999804496765, 0.8566666841506958, 0.8506666421890259, 0.8573333621025085, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 0], [0, 0, 1, 0, 2], [0, 39, 89], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 0, 3, 2, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 0, 2, 4, 1, 9], [3, 2, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 9, 6, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1072513535618782, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 0, 6, 3, 4, 2, 0, 4], [2, 0, 3, 1, 0, 1, 2, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [5, 6, 1, 7, 0], [79, 22], [1], [0], [2], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 6, 3, 3, 1, 17, 9, 8, 2, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)))), tf.math.pow(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.317638397216797, 1236.8690185546875, NaN, NaN, NaN, NaN], "accuracy": [0.08558975160121918, 0.09192973375320435, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3791351318359375, 917224.125, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 1, 1, 6, 7], [33, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31003999710083, 2.3100061416625977, 2.309363603591919, 2.3110790252685547, 2.310565710067749, 2.3105175495147705], "accuracy": [0.08928807079792023, 0.09166556596755981, 0.09642054885625839, 0.08915598690509796, 0.08902391046285629, 0.09470347315073013], "val_loss": [2.308824062347412, 2.308824062347412, 2.308824062347412, 2.308824062347412, 2.308824062347412, 2.308824062347412], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 2, 3, 1, 3, 5], [2, 2, 3, 2, 3], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 2, 5], [0, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 8, 4, 4, 0, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), grad), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100619316101074, 2.3099677562713623, 2.308856248855591, 2.309450626373291, 2.3095037937164307, 2.309903383255005], "accuracy": [0.0886276587843895, 0.09034473448991776, 0.0956280529499054, 0.09655263274908066, 0.09074098616838455, 0.09457138925790787], "val_loss": [2.308361291885376, 2.308361291885376, 2.308361291885376, 2.308361291885376, 2.308361291885376, 2.308361291885376], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]