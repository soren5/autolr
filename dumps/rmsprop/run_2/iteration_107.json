[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8077142834663391, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2165238857269287, 1.624708652496338, 1.1345555782318115, 0.988595187664032, 0.923766553401947, 0.8388295769691467, 0.7797752022743225, 0.7731082439422607, 0.7301504611968994, 0.7162886261940002, 0.6962718963623047, 0.6816293597221375, 0.6867967247962952, 0.6539060473442078, 0.6440367102622986, 0.6345289945602417, 0.5985713601112366, 0.6161812543869019, 0.5944323539733887, 0.5826003551483154, 0.5806404948234558, 0.5616570115089417, 0.5781800746917725, 0.5440249443054199, 0.5335729718208313, 0.5339792370796204, 0.5259049534797668, 0.518366813659668, 0.5338141918182373, 0.5069108605384827, 0.5026858448982239, 0.5026297569274902, 0.484941691160202, 0.48579126596450806, 0.49205872416496277, 0.47476309537887573, 0.4707987904548645, 0.4787742793560028, 0.46318715810775757, 0.4536636173725128, 0.44988200068473816, 0.44882073998451233, 0.4359765648841858, 0.43491849303245544, 0.42973002791404724, 0.4368849992752075, 0.4288334250450134, 0.42654770612716675, 0.41634926199913025, 0.4165653884410858, 0.4111187756061554, 0.4058091938495636, 0.4137955605983734], "accuracy": [0.2607317268848419, 0.4971602261066437, 0.6026945114135742, 0.6536785364151001, 0.6604147553443909, 0.696209192276001, 0.7119271159172058, 0.7091533541679382, 0.7217012047767639, 0.7263241410255432, 0.7383436560630798, 0.7416457533836365, 0.7432307600975037, 0.7555144429206848, 0.7588165402412415, 0.767930269241333, 0.7740060687065125, 0.7707040309906006, 0.7749306559562683, 0.7794214487075806, 0.7835160493850708, 0.7913089394569397, 0.7837802171707153, 0.7957997918128967, 0.8013472557067871, 0.8058380484580994, 0.8055738806724548, 0.8088759779930115, 0.8001585006713867, 0.809140145778656, 0.8080834746360779, 0.8117818236351013, 0.8202351331710815, 0.8131026029586792, 0.8113855719566345, 0.8208954930305481, 0.8245938420295715, 0.8208954930305481, 0.8284242749214172, 0.8304054737091064, 0.8327829837799072, 0.8317263126373291, 0.8385946154594421, 0.841500461101532, 0.8376700282096863, 0.8372738361358643, 0.8424250483512878, 0.8405758738517761, 0.8396512866020203, 0.8457271456718445, 0.8444063067436218, 0.8524633646011353, 0.8413683772087097], "val_loss": [1.9382431507110596, 1.0972906351089478, 0.9590021967887878, 0.8310090899467468, 0.7130058407783508, 0.6685250401496887, 0.6638793349266052, 0.6423836946487427, 0.6210501194000244, 0.6135305166244507, 0.6050511002540588, 0.5746726393699646, 0.5580658912658691, 0.5848771929740906, 0.567522406578064, 0.5440555214881897, 0.5265361070632935, 0.5174174904823303, 0.5142788290977478, 0.5127770900726318, 0.4942839443683624, 0.5007638931274414, 0.48330599069595337, 0.48779532313346863, 0.4671874940395355, 0.45845645666122437, 0.4780374765396118, 0.4814383089542389, 0.46137455105781555, 0.4705931544303894, 0.44842228293418884, 0.45228517055511475, 0.4330918788909912, 0.4638599753379822, 0.43572407960891724, 0.42860889434814453, 0.42995670437812805, 0.43409213423728943, 0.4274158477783203, 0.42909014225006104, 0.41088762879371643, 0.4171603322029114, 0.4124097228050232, 0.4148886799812317, 0.40375813841819763, 0.3939685821533203, 0.3981688916683197, 0.38692691922187805, 0.3943977952003479, 0.390663206577301, 0.39326563477516174, 0.39368563890457153, 0.3850284814834595], "val_accuracy": [0.5619999766349792, 0.6633333563804626, 0.6389999985694885, 0.6779999732971191, 0.7300000190734863, 0.7586666941642761, 0.7393333315849304, 0.7646666765213013, 0.7639999985694885, 0.7599999904632568, 0.7693333625793457, 0.7919999957084656, 0.7903333306312561, 0.7763333320617676, 0.7923333048820496, 0.796999990940094, 0.7940000295639038, 0.8096666932106018, 0.8116666674613953, 0.8056666851043701, 0.8166666626930237, 0.8050000071525574, 0.8153333067893982, 0.8086666464805603, 0.828000009059906, 0.8289999961853027, 0.8206666707992554, 0.8230000138282776, 0.8336666822433472, 0.8226666450500488, 0.8343333601951599, 0.8316666483879089, 0.8366666436195374, 0.8220000267028809, 0.8339999914169312, 0.840666651725769, 0.8506666421890259, 0.8346666693687439, 0.8389999866485596, 0.8336666822433472, 0.8523333072662354, 0.8500000238418579, 0.8519999980926514, 0.8529999852180481, 0.8513333201408386, 0.8553333282470703, 0.8556666374206543, 0.8616666793823242, 0.8613333106040955, 0.8576666712760925, 0.8610000014305115, 0.8539999723434448, 0.859000027179718]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 1, 8], [3, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2, 4, 7, 7, 9, 3, 8, 7, 9], [4, 5, 3, 1, 0, 1, 2, 1], [16, 1, 34], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [0, 0, 1, 0, 1, 0, 1], [0, 7, 2, 5], [2, 2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 23, 15, 8, 3, 8, 5, 3, 1, 7, 4, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), grad), tf.math.add(tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.multiply(alpha, tf.math.sqrt(beta))))), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.square(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 7, 3, 1, 3, 5, 4], [0, 1, 1, 0, 2, 2], [0, 8, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 4, 0], [2, 0, 3, 1, 0, 0, 2], [16, 1, 50], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 17, 10, 7, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 60, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 2], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 3, 0, 2, 5], [0, 6, 1], [71], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310467481613159, 2.309997081756592, 2.3103697299957275, 2.3094725608825684, 2.310298204421997, 2.309831142425537], "accuracy": [0.09008057415485382, 0.08492933213710785, 0.08796724677085876, 0.09192973375320435, 0.09166556596755981, 0.09298639744520187], "val_loss": [2.3088016510009766, 2.3088016510009766, 2.3088016510009766, 2.3088016510009766, 2.3088016510009766, 2.3088016510009766], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [5, 2, 3, 0, 3, 5], [0, 2, 1, 0, 2], [49, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 7, 5, 6, 3, 8, 2, 1, 9], [2, 0, 3, 1, 2], [16, 1], [0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 7, 4, 3, 1, 14, 9, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088605403900146, 2.308655261993408, 2.309549570083618, 2.3106915950775146, 2.310361623764038, 2.3107049465179443], "accuracy": [0.09219389408826828, 0.0944393053650856, 0.09496764093637466, 0.0886276587843895, 0.09272222965955734, 0.09179764986038208], "val_loss": [2.308528423309326, 2.308528423309326, 2.308528423309326, 2.308528423309326, 2.308528423309326, 2.308528423309326], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]