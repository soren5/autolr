[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7951428294181824, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2106876373291016, 1.6082897186279297, 1.1569896936416626, 0.9511185884475708, 0.865303099155426, 0.8327709436416626, 0.7849950790405273, 0.7542764544487, 0.7366291880607605, 0.7002117037773132, 0.6762763857841492, 0.6544844508171082, 0.6575477123260498, 0.6368559002876282, 0.6202854514122009, 0.6071391701698303], "accuracy": [0.26495838165283203, 0.5044247508049011, 0.5872408151626587, 0.6559239029884338, 0.6888125538825989, 0.6884163022041321, 0.7046625018119812, 0.7180029153823853, 0.72672039270401, 0.7403249144554138, 0.7423061728477478, 0.7528728246688843, 0.7534011602401733, 0.7604015469551086, 0.7675340175628662, 0.7714964747428894], "val_loss": [1.9258419275283813, 1.096346378326416, 0.8910693526268005, 0.7851330041885376, 0.7313704490661621, 0.7211324572563171, 0.6635092496871948, 0.7142864465713501, 0.6293278336524963, 0.5950096249580383, 0.5914865732192993, 0.5891856551170349, 0.5752464532852173, 0.5748023986816406, 0.5611420273780823, 0.5818889141082764], "val_accuracy": [0.5709999799728394, 0.6606666445732117, 0.6919999718666077, 0.6953333616256714, 0.7276666760444641, 0.7183333039283752, 0.753000020980835, 0.7336666584014893, 0.7643333077430725, 0.7726666927337646, 0.7853333353996277, 0.784333348274231, 0.7789999842643738, 0.7760000228881836, 0.778333306312561, 0.768666684627533]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 5, 5], [0, 3, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0], [79, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 9], [0, 6, 1, 6, 0], [48, 22], [1], [0], [2], [0]], "fitness": -0.2514285743236542, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [229460.625, 350751.6875, 339561.46875, 333644.5625, 326164.15625, 318848.09375, 309284.40625, 314441.90625, 305429.5, 306123.0625, 303922.59375, 295321.625, 295171.03125, 291645.71875, 287969.625, 287333.25, 281928.59375, 285998.46875, 281875.65625, 281111.96875, 285306.96875, 277488.0, 274793.78125, 276764.28125, 278737.9375, 281434.71875, 275338.09375, 269734.0, 272155.1875, 271761.375, 271076.8125, 271764.03125, 275381.6875, 271472.1875, 271386.5, 268702.8125, 269945.21875, 271805.5, 265551.375, 264155.5625, 265473.75, 265904.0625, 262768.5625, 262828.90625, 261796.109375, 265719.03125, 261232.3125, 260597.21875, 263270.34375, 260997.8125, 262276.03125, 260142.265625], "accuracy": [0.10210011899471283, 0.11213842034339905, 0.11306300014257431, 0.1146479994058609, 0.11795007437467575, 0.11940298229455948, 0.12481838464736938, 0.11557257920503616, 0.12508255243301392, 0.1228371411561966, 0.12838461995124817, 0.13089419901371002, 0.13089419901371002, 0.13472460210323334, 0.13168670237064362, 0.1438383311033249, 0.13459251821041107, 0.1364416927099228, 0.1450270712375641, 0.13313961029052734, 0.14053626358509064, 0.14515915513038635, 0.15149913728237152, 0.14436666667461395, 0.14912164211273193, 0.14119666814804077, 0.14515915513038635, 0.15215955674648285, 0.14542332291603088, 0.14555540680885315, 0.14898955821990967, 0.15176330506801605, 0.14093250036239624, 0.14898955821990967, 0.1516312211751938, 0.15070664882659912, 0.14621582627296448, 0.15057456493377686, 0.1500462293624878, 0.15836745500564575, 0.151234969496727, 0.15215955674648285, 0.15414080023765564, 0.15942411124706268, 0.1530841439962387, 0.15414080023765564, 0.15876370668411255, 0.16180160641670227, 0.1604807823896408, 0.15810328722000122, 0.1574428677558899, 0.16114120185375214], "val_loss": [256609.0, 227369.34375, 211009.109375, 199948.203125, 191048.71875, 182831.78125, 176476.359375, 171078.90625, 166573.484375, 162361.078125, 157933.234375, 154221.421875, 151250.609375, 148452.78125, 146230.703125, 144023.015625, 142053.65625, 140066.375, 138264.234375, 136908.046875, 135314.6875, 133903.046875, 132673.234375, 131682.875, 130357.6875, 129224.2109375, 128050.34375, 126869.0546875, 125778.796875, 125104.984375, 124269.484375, 123432.6953125, 122722.4296875, 122083.7109375, 121517.953125, 120863.9140625, 120166.078125, 119701.7265625, 119138.15625, 118660.6640625, 118146.015625, 117833.7890625, 117429.2890625, 116979.859375, 116652.546875, 116240.4453125, 115903.6015625, 115517.203125, 115156.671875, 114861.9921875, 114527.3671875, 114116.2890625], "val_accuracy": [0.1120000034570694, 0.11266666650772095, 0.11299999803304672, 0.11299999803304672, 0.1133333370089531, 0.11599999666213989, 0.11833333224058151, 0.11933333426713943, 0.12133333086967468, 0.125, 0.12999999523162842, 0.13566666841506958, 0.14133332669734955, 0.1509999930858612, 0.1599999964237213, 0.16599999368190765, 0.17466667294502258, 0.18133333325386047, 0.1886666715145111, 0.19499999284744263, 0.20100000500679016, 0.20399999618530273, 0.20866666734218597, 0.2136666625738144, 0.21766667068004608, 0.2213333398103714, 0.22300000488758087, 0.22433333098888397, 0.22866666316986084, 0.23366667330265045, 0.2370000034570694, 0.24066667258739471, 0.24266666173934937, 0.24300000071525574, 0.2446666657924652, 0.24633333086967468, 0.24766667187213898, 0.2473333328962326, 0.24899999797344208, 0.24899999797344208, 0.24933333694934845, 0.24966666102409363, 0.25, 0.25, 0.25033333897590637, 0.25066667795181274, 0.25200000405311584, 0.2516666650772095, 0.25099998712539673, 0.2513333261013031, 0.2513333261013031, 0.2513333261013031]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 3, 8, 2], [4, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 2, 5, 2, 1, 4, 0, 3, 2, 1, 7, 5, 6, 1, 2, 3], [0, 3, 1, 6, 0, 2, 1, 1, 3, 4, 0, 4, 2, 0], [91, 69, 30, 6], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 3, 1, 0, 32, 18, 14, 4, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.pow(sigma, alpha), tf.math.negative(tf.math.multiply(grad, tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(alpha, alpha)))))), tf.math.square(sigma)))), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, beta)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [10.58879566192627, 2.9938952922821045, 2.4110822677612305, 2.4148621559143066, 2.428086519241333, 2.4134767055511475, 2.407788038253784, 2.4254262447357178, 2.4055566787719727, 2.406343936920166], "accuracy": [0.20023775100708008, 0.09708096832036972, 0.10527011007070541, 0.1006472036242485, 0.1010434553027153, 0.09602430462837219, 0.09932637959718704, 0.09813763201236725, 0.10157178342342377, 0.09853387624025345], "val_loss": [5.675918102264404, 2.374685287475586, 2.4240124225616455, 2.4487035274505615, 2.4237897396087646, 2.4094557762145996, 2.416646718978882, 2.3569283485412598, 2.406965732574463, 2.4387013912200928], "val_accuracy": [0.10133333504199982, 0.07833333313465118, 0.10133333504199982, 0.10100000351667404, 0.10166666656732559, 0.10133333504199982, 0.09833333641290665, 0.10166666656732559, 0.10100000351667404, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 1, 0, 0, 2], [12, 84, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 9, 0, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46010761216.0, 6984003223552.0, 119159371333632.0, 848181348794368.0, 3783771430060032.0, 1.2227429368070144e+16], "accuracy": [0.09721305221319199, 0.10553427785634995, 0.10130762308835983, 0.10091137140989304, 0.09589222073554993, 0.10210011899471283], "val_loss": [482258223104.0, 26107239727104.0, 281366763667456.0, 1540333380829184.0, 5793272005918720.0, 1.7153891074310144e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 1, 5], [0, 2, 1, 1, 2, 0], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 2, 8, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 4, 7, 2, 1, 0], [0, 6, 1, 6, 0, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 5, 2, 3, 1, 14, 8, 6, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(alpha, tf.math.square(grad)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]