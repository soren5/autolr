[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8342857360839844, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2070443630218506, 1.5961288213729858, 1.1384286880493164, 0.9735661149024963, 0.8652653694152832, 0.8277797102928162, 0.7861326336860657, 0.749407947063446, 0.7165457606315613, 0.7023331522941589, 0.6888891458511353, 0.6707583665847778, 0.6425142884254456, 0.6376526355743408, 0.6082260012626648, 0.6301741600036621, 0.6024428009986877, 0.5895506143569946, 0.5763612389564514, 0.5561436414718628, 0.5759689807891846, 0.5624198317527771, 0.5433629155158997, 0.5265427231788635, 0.5239629149436951, 0.5335787534713745, 0.5088754296302795, 0.5141465663909912, 0.49801379442214966, 0.5002964735031128, 0.5017543435096741, 0.4825950860977173, 0.49285897612571716, 0.4763137996196747, 0.47335901856422424, 0.4712999165058136, 0.4612428843975067, 0.4538687467575073, 0.45241013169288635, 0.4527515769004822, 0.4375806450843811, 0.4398494064807892, 0.4383067786693573, 0.4375626742839813, 0.44224563241004944, 0.417289137840271, 0.4167349636554718, 0.41669246554374695, 0.4033454954624176, 0.40850117802619934, 0.4048144221305847, 0.4203452169895172, 0.3997591435909271, 0.40253499150276184, 0.3939783573150635, 0.3857530951499939, 0.38767099380493164, 0.391304075717926, 0.3920252323150635, 0.3779428005218506, 0.38998639583587646, 0.37595346570014954], "accuracy": [0.27301543951034546, 0.5044247508049011, 0.5987319946289062, 0.655527651309967, 0.6894729733467102, 0.6976621150970459, 0.7147008180618286, 0.7238145470619202, 0.7382115721702576, 0.7392682433128357, 0.7440232634544373, 0.750759482383728, 0.7675340175628662, 0.7695152759552002, 0.7763835787773132, 0.7685906887054443, 0.7788931727409363, 0.7819310426712036, 0.7884030938148499, 0.7991018295288086, 0.7882710099220276, 0.7923656105995178, 0.7988376617431641, 0.8078193068504333, 0.8082155585289001, 0.8062343001365662, 0.8120459914207458, 0.8033285140991211, 0.8141592741012573, 0.8161405324935913, 0.8181217908859253, 0.8222163319587708, 0.8175934553146362, 0.8220842480659485, 0.8298771381378174, 0.8236692547798157, 0.8319904804229736, 0.8370096683502197, 0.8343679904937744, 0.8352925777435303, 0.8364813327789307, 0.8384625315666199, 0.8383304476737976, 0.8433496356010437, 0.8418967127799988, 0.8512746095657349, 0.8467837572097778, 0.8474441766738892, 0.854708731174469, 0.8521991968154907, 0.8502179384231567, 0.8441421389579773, 0.8498216867446899, 0.8545766472816467, 0.8551049828529358, 0.8581429123878479, 0.8564258217811584, 0.8569541573524475, 0.8601241707801819, 0.8615770936012268, 0.856689989566803, 0.8602562546730042], "val_loss": [1.9101895093917847, 1.1303410530090332, 0.8861334919929504, 0.7705329656600952, 0.7174586653709412, 0.7125476002693176, 0.6852357387542725, 0.6436668634414673, 0.6148528456687927, 0.6088930368423462, 0.6554188132286072, 0.5795170664787292, 0.592338502407074, 0.5535233616828918, 0.6087309718132019, 0.553727388381958, 0.5715218782424927, 0.5337005853652954, 0.5066342949867249, 0.5343842506408691, 0.5313764810562134, 0.49095022678375244, 0.5116831064224243, 0.49134010076522827, 0.520326554775238, 0.4794602394104004, 0.46421560645103455, 0.4653293490409851, 0.45748624205589294, 0.4835865795612335, 0.45553743839263916, 0.4552777409553528, 0.4475913941860199, 0.4440229535102844, 0.4615941047668457, 0.4421917796134949, 0.43651461601257324, 0.4278971254825592, 0.4463423788547516, 0.43323397636413574, 0.42030566930770874, 0.4328325092792511, 0.4534299373626709, 0.4212634265422821, 0.41220715641975403, 0.4142380356788635, 0.4210833013057709, 0.40586531162261963, 0.41421428322792053, 0.40452200174331665, 0.40273404121398926, 0.39953190088272095, 0.4113539755344391, 0.4013722240924835, 0.40086644887924194, 0.3957076072692871, 0.39113500714302063, 0.3942718207836151, 0.38632404804229736, 0.3992938697338104, 0.39017102122306824, 0.3930521309375763], "val_accuracy": [0.5350000262260437, 0.6439999938011169, 0.6803333163261414, 0.7196666598320007, 0.7419999837875366, 0.7213333249092102, 0.7483333349227905, 0.7586666941642761, 0.7680000066757202, 0.7720000147819519, 0.7486666440963745, 0.7733333110809326, 0.7643333077430725, 0.7993333339691162, 0.7599999904632568, 0.7776666879653931, 0.7673333287239075, 0.7906666398048401, 0.8176666498184204, 0.7856666445732117, 0.7976666688919067, 0.8193333148956299, 0.8053333163261414, 0.8136666417121887, 0.7986666560173035, 0.8216666579246521, 0.8276666402816772, 0.8330000042915344, 0.8316666483879089, 0.8109999895095825, 0.8370000123977661, 0.8309999704360962, 0.8383333086967468, 0.8383333086967468, 0.8273333311080933, 0.8373333215713501, 0.8383333086967468, 0.8463333249092102, 0.8320000171661377, 0.8426666855812073, 0.8496666550636292, 0.8393333554267883, 0.8270000219345093, 0.8493333458900452, 0.8519999980926514, 0.8460000157356262, 0.8446666598320007, 0.8546666502952576, 0.8560000061988831, 0.8546666502952576, 0.8539999723434448, 0.859666645526886, 0.843999981880188, 0.8610000014305115, 0.8576666712760925, 0.8513333201408386, 0.8613333106040955, 0.8583333492279053, 0.8600000143051147, 0.8556666374206543, 0.859333336353302, 0.8583333492279053]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 2, 0, 6, 3, 1, 2, 9], [3, 2, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 2], [79, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 8, 5, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.subtract(tf.math.add(grad, alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 1, 5], [1, 2, 1, 0, 2], [0, 50, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 1, 6, 4, 7, 2], [2, 0, 3, 1, 0, 3], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [8, 2, 0, 6, 5, 2, 1, 1, 9, 0, 3, 6, 0, 5, 0], [1, 1, 1, 6, 4, 3, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 11, 5, 6, 2, 22, 15, 7, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(grad, alpha), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.square(sigma)), tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 2, 3, 2, 3, 5, 1, 9, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 2, 1], [0, 6, 3, 6, 0], [73, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 14, 9, 5, 3, 1, 0, 1, 0, 6, 5, 1, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096535205841064, 2.3101160526275635, 2.309361696243286, 2.3107199668884277, 2.309185743331909, 2.30915904045105], "accuracy": [0.09615638852119446, 0.08942015469074249, 0.0874389111995697, 0.08928807079792023, 0.09813763201236725, 0.09536388516426086], "val_loss": [2.3087217807769775, 2.3087217807769775, 2.3087217807769775, 2.3087217807769775, 2.3087217807769775, 2.3087217807769775], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 2, 2, 3, 5, 3], [3, 2, 1, 0, 2, 1], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 8, 8, 2, 0], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 13, 7, 6, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098320960998535, 2.3098740577697754, 2.3102872371673584, 2.3082711696624756, 2.308394193649292, 2.3098034858703613], "accuracy": [0.09060890227556229, 0.09377889335155487, 0.09232597798109055, 0.09694888442754745, 0.09166556596755981, 0.09338264167308807], "val_loss": [2.3088793754577637, 2.3088793754577637, 2.3088793754577637, 2.3088793754577637, 2.3088793754577637, 2.3088793754577637], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]