[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102842330932617, 1.5959205627441406, 1.1538461446762085, 0.9797741770744324, 0.8802691102027893, 0.8337215781211853, 0.7862085103988647, 0.7625535130500793, 0.7382165789604187, 0.6979398131370544, 0.7012615203857422, 0.6863193511962891, 0.6615071892738342, 0.6554870009422302, 0.6359694600105286, 0.6323270201683044, 0.6256682276725769, 0.5953770279884338, 0.5837172865867615, 0.5875962376594543, 0.5862374305725098, 0.5573428273200989, 0.5515261888504028, 0.5519596934318542, 0.543842613697052, 0.5295748710632324, 0.5330386757850647, 0.5276508331298828, 0.5214741230010986, 0.5309057235717773, 0.5054295063018799, 0.5030736327171326, 0.4905185401439667, 0.4967358112335205, 0.4824710488319397, 0.47327491641044617, 0.4684457778930664], "accuracy": [0.2685246467590332, 0.5160480737686157, 0.5978074073791504, 0.64667809009552, 0.6828688383102417, 0.6991150379180908, 0.7078325152397156, 0.7181349992752075, 0.7288337349891663, 0.7425703406333923, 0.7417778372764587, 0.743891179561615, 0.7537974119186401, 0.7588165402412415, 0.7630431652069092, 0.7650244235992432, 0.767401933670044, 0.7796856164932251, 0.7803460359573364, 0.7807422876358032, 0.7804781198501587, 0.7952714562416077, 0.7926297783851624, 0.7924976944923401, 0.798309326171875, 0.8025360107421875, 0.7971205711364746, 0.8031964302062988, 0.8033285140991211, 0.8000264167785645, 0.8142913579940796, 0.8182538747787476, 0.8222163319587708, 0.8145555257797241, 0.8215559124946594, 0.8248580098152161, 0.82683926820755], "val_loss": [1.9132075309753418, 1.1337443590164185, 0.8623278141021729, 0.8024929165840149, 0.7772660255432129, 0.6712284088134766, 0.6701082587242126, 0.6497143507003784, 0.5921014547348022, 0.563497006893158, 0.5593580007553101, 0.5457249879837036, 0.5272411108016968, 0.5206887722015381, 0.5554441809654236, 0.6161662340164185, 0.5164012312889099, 0.5146644711494446, 0.5053048133850098, 0.494242787361145, 0.48579320311546326, 0.4722050428390503, 0.47931042313575745, 0.4712574779987335, 0.46085938811302185, 0.45488518476486206, 0.4462297856807709, 0.440713495016098, 0.4516388773918152, 0.4546651244163513, 0.42745378613471985, 0.42558375000953674, 0.42803552746772766, 0.4217827618122101, 0.4214306175708771, 0.412261962890625, 0.4374476671218872], "val_accuracy": [0.5743333101272583, 0.621999979019165, 0.6899999976158142, 0.6966666579246521, 0.6983333230018616, 0.7369999885559082, 0.7513333559036255, 0.7590000033378601, 0.777999997138977, 0.7803333401679993, 0.7860000133514404, 0.7963333129882812, 0.8066666722297668, 0.8069999814033508, 0.7886666655540466, 0.765333354473114, 0.8083333373069763, 0.8040000200271606, 0.8019999861717224, 0.8083333373069763, 0.8136666417121887, 0.8263333439826965, 0.8119999766349792, 0.8270000219345093, 0.8236666917800903, 0.8256666660308838, 0.8330000042915344, 0.8386666774749756, 0.82833331823349, 0.8289999961853027, 0.8453333377838135, 0.8489999771118164, 0.8336666822433472, 0.8450000286102295, 0.8456666469573975, 0.8460000157356262, 0.8336666822433472]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 2, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 4, 0, 2, 5], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.14257143437862396, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [20164722556928.0, 23529168830464.0, 23526205554688.0, 23344439099392.0, 23398526746624.0, 23301212602368.0], "accuracy": [0.1258750557899475, 0.12402588874101639, 0.12376172095537186, 0.1262712925672531, 0.1262712925672531, 0.12930920720100403], "val_loss": [14419230720000.0, 14419230720000.0, 14418945507328.0, 14418942361600.0, 14418944458752.0, 14418944458752.0], "val_accuracy": [0.13766667246818542, 0.13766667246818542, 0.13766667246818542, 0.13766667246818542, 0.13766667246818542, 0.13766667246818542]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 52], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 0, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 8, 1, 3], [0, 6, 1, 2, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.1120000034570694, "mapping_values": [1, 11, 6, 5, 2, 7, 4, 3, 1, 13, 8, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), tf.math.subtract(tf.math.multiply(alpha, beta), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [286860161056768.0, 333622288580608.0, 328806757826560.0, 332481135902720.0, 330508940607488.0, 330862906310656.0], "accuracy": [0.10434553027153015, 0.11161009222269058, 0.11253467202186584, 0.11808215826749802, 0.11372341960668564, 0.11359133571386337], "val_loss": [310335412109312.0, 310335412109312.0, 310335412109312.0, 310335412109312.0, 310335412109312.0, 310335412109312.0], "val_accuracy": [0.11400000005960464, 0.11400000005960464, 0.11400000005960464, 0.11400000005960464, 0.11400000005960464, 0.11400000005960464]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 0, 5], [0, 2, 3, 0, 2], [0, 39, 28], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 1], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036692142486572, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 8, 4, 4, 2, 5, 3, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 3, 5, 1, 5], [2, 0, 3, 0, 2], [0, 14, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 0, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]