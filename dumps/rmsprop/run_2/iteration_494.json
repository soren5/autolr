[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8237142562866211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2073559761047363, 1.5969895124435425, 1.160374641418457, 0.9750891923904419, 0.8778640627861023, 0.8158878087997437, 0.8051755428314209, 0.7637960314750671, 0.7269377112388611, 0.7119842171669006, 0.6770434975624084, 0.6864611506462097, 0.6410006284713745, 0.6322142481803894, 0.6427544355392456, 0.6164858341217041, 0.6139976382255554, 0.5965600609779358, 0.5863094329833984, 0.5746728777885437, 0.5607982873916626, 0.5647441148757935, 0.5576947927474976, 0.5364800095558167, 0.5396419167518616, 0.5390893816947937, 0.5168204307556152, 0.5041054487228394, 0.5096859335899353, 0.5024899244308472, 0.4944244921207428, 0.4809167981147766, 0.47860950231552124, 0.4781946837902069, 0.4679394066333771, 0.4753507375717163, 0.4738912284374237], "accuracy": [0.2677321434020996, 0.5102364420890808, 0.5997886657714844, 0.6528860330581665, 0.6820763349533081, 0.7047945857048035, 0.7024171352386475, 0.7240787148475647, 0.7363624572753906, 0.7364945411682129, 0.750231146812439, 0.7442874312400818, 0.7676661014556885, 0.7691190242767334, 0.7619865536689758, 0.7713643908500671, 0.7714964747428894, 0.7844406366348267, 0.7812706232070923, 0.7922335267066956, 0.7951393723487854, 0.7910447716712952, 0.7943468689918518, 0.8033285140991211, 0.8038568496704102, 0.8050455451011658, 0.8084797263145447, 0.8178576231002808, 0.8128384351730347, 0.8170651197433472, 0.8197067975997925, 0.8230088353157043, 0.8220842480659485, 0.8309338092803955, 0.8271034359931946, 0.8253863453865051, 0.8244617581367493], "val_loss": [1.910496473312378, 1.0908184051513672, 0.9266706705093384, 0.7992994785308838, 0.7365906834602356, 0.7031840682029724, 0.7432241439819336, 0.6240033507347107, 0.6962521076202393, 0.6019913554191589, 0.5947651267051697, 0.6311658620834351, 0.5784393548965454, 0.6011107563972473, 0.5665323734283447, 0.5561892986297607, 0.537807285785675, 0.5257971286773682, 0.5673531293869019, 0.5159404873847961, 0.5482796430587769, 0.502653956413269, 0.5193130970001221, 0.4913567006587982, 0.49742570519447327, 0.48734185099601746, 0.471774697303772, 0.5089274644851685, 0.4794391691684723, 0.48288798332214355, 0.47616374492645264, 0.4580528438091278, 0.46049124002456665, 0.4578823745250702, 0.46575263142585754, 0.5016219615936279, 0.46757784485816956], "val_accuracy": [0.574999988079071, 0.6506666541099548, 0.6773333549499512, 0.7013333439826965, 0.7269999980926514, 0.7183333039283752, 0.7166666388511658, 0.7680000066757202, 0.7213333249092102, 0.7739999890327454, 0.7736666798591614, 0.7696666717529297, 0.781333327293396, 0.7590000033378601, 0.7853333353996277, 0.7836666703224182, 0.7956666946411133, 0.7943333387374878, 0.7873333096504211, 0.8083333373069763, 0.7773333191871643, 0.8063333630561829, 0.7953333258628845, 0.8116666674613953, 0.8100000023841858, 0.8096666932106018, 0.8243333101272583, 0.7996666431427002, 0.8206666707992554, 0.8190000057220459, 0.8153333067893982, 0.8273333311080933, 0.8240000009536743, 0.8240000009536743, 0.8213333487510681, 0.8069999814033508, 0.8223333358764648]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [8, 2, 3, 2, 5, 2, 1], [0, 6, 1, 6, 0], [8, 22], [1], [0], [4], [0]], "fitness": -0.2834285795688629, "mapping_values": [1, 7, 4, 3, 1, 4, 2, 2, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2989134788513184, 2.2858405113220215, 2.3069324493408203, 2.256099224090576, 2.3049144744873047, 2.3038182258605957, 2.303014039993286], "accuracy": [0.21014396846294403, 0.18742570281028748, 0.1504424810409546, 0.18716153502464294, 0.10210011899471283, 0.09747721254825592, 0.09734513610601425], "val_loss": [2.28515887260437, 1.9186533689498901, 2.2961654663085938, 2.305370807647705, 2.3027849197387695, 2.302459478378296, 2.3023247718811035], "val_accuracy": [0.10133333504199982, 0.2840000092983246, 0.11733333021402359, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.06300000101327896]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 1, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 2], [16, 74], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10342857241630554, "mapping_values": [1, 6, 3, 3, 1, 8, 5, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.0788217876226507e+19, 1.248720413418691e+19, 1.214637971883216e+19, 1.2888537972953055e+19, 1.2489063408349479e+19, 1.2791865612104106e+19], "accuracy": [0.09972262382507324, 0.10038304328918457, 0.09826971590518951, 0.09866596013307571, 0.09774138033390045, 0.0944393053650856], "val_loss": [9.408088890809516e+18, 9.408088890809516e+18, 9.408088890809516e+18, 9.408088890809516e+18, 9.408088890809516e+18, 9.408148264437416e+18], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 6], [0, 2, 2, 0, 2, 1], [8, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 0, 3, 8, 2, 3], [2, 0, 3, 2, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 8, 1], [0, 6, 1, 6, 6], [37, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 13, 8, 5, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5, 6, 5, 1, 1, 5, 6, 0, 5, 0, 9, 0, 1, 2, 9, 5, 9], [0, 3, 1, 0, 2, 3, 3, 1], [0, 39, 39, 9, 82], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 5, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 6, 2, 1], [0, 7, 1, 6, 2], [0, 51], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 22, 8, 5, 10, 6, 4, 1, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(alpha, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.square(grad))))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]