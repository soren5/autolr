[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208580493927002, 1.6122181415557861, 1.166000247001648, 0.9759135842323303, 0.8943063020706177, 0.8331412076950073, 0.784532904624939, 0.7553232908248901, 0.7273621559143066, 0.7113049626350403, 0.7095571160316467, 0.6755443811416626, 0.6697555184364319, 0.6446370482444763, 0.6414505839347839, 0.625333309173584, 0.612062394618988, 0.6163352727890015, 0.6054193377494812, 0.5839869379997253, 0.5729773044586182, 0.5748890042304993, 0.5585141777992249, 0.5417410731315613, 0.5480596423149109, 0.5407466292381287, 0.5288116931915283, 0.5204606056213379, 0.5235022306442261, 0.5134775042533875, 0.5020103454589844, 0.5038594007492065, 0.5019353628158569, 0.49585655331611633, 0.4864826202392578, 0.4848507046699524, 0.4702017307281494, 0.47818535566329956, 0.46350398659706116, 0.4686492681503296, 0.4597354531288147, 0.45766815543174744, 0.4499981701374054], "accuracy": [0.27063795924186707, 0.497820645570755, 0.5884295105934143, 0.6535464525222778, 0.6705851554870605, 0.6959450244903564, 0.709549605846405, 0.7201162576675415, 0.7302865982055664, 0.7413815855979919, 0.7349095344543457, 0.7490423917770386, 0.7547219395637512, 0.7642319202423096, 0.755118191242218, 0.772288978099823, 0.7685906887054443, 0.7753269076347351, 0.7753269076347351, 0.7835160493850708, 0.7858935594558716, 0.7876105904579163, 0.7964601516723633, 0.8000264167785645, 0.7954035401344299, 0.7964601516723633, 0.8087438941001892, 0.8103289008140564, 0.8112534880638123, 0.8117818236351013, 0.8162726163864136, 0.8148196935653687, 0.8153480291366577, 0.8148196935653687, 0.8236692547798157, 0.8224804997444153, 0.8290846943855286, 0.8232730031013489, 0.8309338092803955, 0.8255184292793274, 0.8334434032440186, 0.8313300609588623, 0.8341038227081299], "val_loss": [1.9163401126861572, 1.1111406087875366, 0.9117155075073242, 0.8114846348762512, 0.8479503393173218, 0.7145822644233704, 0.7187972068786621, 0.6691746711730957, 0.6295905113220215, 0.6150001883506775, 0.6741145253181458, 0.6167815923690796, 0.6182459592819214, 0.6130149960517883, 0.5719289779663086, 0.5668806433677673, 0.5686011910438538, 0.5596410036087036, 0.5451105237007141, 0.5344347953796387, 0.534145176410675, 0.5313604474067688, 0.5290317535400391, 0.5211731791496277, 0.5384470820426941, 0.5041663646697998, 0.4966064393520355, 0.4931376576423645, 0.4832867980003357, 0.4728187620639801, 0.47879844903945923, 0.47141698002815247, 0.4688034653663635, 0.46036580204963684, 0.4525168836116791, 0.4529964327812195, 0.44891345500946045, 0.44732651114463806, 0.44773975014686584, 0.44805532693862915, 0.45895418524742126, 0.4391988217830658, 0.43477773666381836], "val_accuracy": [0.5720000267028809, 0.6466666460037231, 0.6790000200271606, 0.6973333358764648, 0.6646666526794434, 0.737333357334137, 0.715666651725769, 0.7383333444595337, 0.7603333592414856, 0.765666663646698, 0.7483333349227905, 0.7636666893959045, 0.7676666378974915, 0.7540000081062317, 0.7879999876022339, 0.7940000295639038, 0.781333327293396, 0.7860000133514404, 0.7906666398048401, 0.7979999780654907, 0.8006666898727417, 0.8009999990463257, 0.7986666560173035, 0.8006666898727417, 0.7900000214576721, 0.8043333292007446, 0.812666654586792, 0.8136666417121887, 0.8190000057220459, 0.8223333358764648, 0.8173333406448364, 0.8163333535194397, 0.8209999799728394, 0.8293333053588867, 0.8299999833106995, 0.8323333263397217, 0.8323333263397217, 0.8399999737739563, 0.8336666822433472, 0.8320000171661377, 0.8243333101272583, 0.8373333215713501, 0.8386666774749756]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 0, 9, 3, 4, 2], [2, 0, 1, 1, 2], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 5, 8], [0, 6, 1, 2], [25], [1], [0], [7], [0]], "fitness": -0.2191428542137146, "mapping_values": [1, 2, 1, 1, 1, 5, 4, 1, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), alpha), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.790769577026367, 3.4116461277008057, 2.3048386573791504, 2.3031885623931885, 2.302640914916992, 2.298511266708374, 2.2295196056365967, 2.304713726043701, 2.3032660484313965, 2.3030481338500977, 2.303053855895996], "accuracy": [0.1904636174440384, 0.10645885765552521, 0.0956280529499054, 0.10091137140989304, 0.10315678268671036, 0.13089419901371002, 0.1954827606678009, 0.10011887550354004, 0.09391097724437714, 0.09813763201236725, 0.09787346422672272], "val_loss": [4.136778831481934, 2.3056540489196777, 2.303614616394043, 2.302583932876587, 2.301744222640991, 2.2750120162963867, 2.3059072494506836, 2.3030781745910645, 2.303054094314575, 2.3026297092437744, 2.3024938106536865], "val_accuracy": [0.17933332920074463, 0.09733333438634872, 0.09733333438634872, 0.15299999713897705, 0.10000000149011612, 0.22066666185855865, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10566666722297668]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 9, 3, 1, 3, 5], [0, 0, 1, 1, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 4, 7, 8, 2, 0, 8, 4], [2, 0, 3, 1, 0, 4], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [4, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 16, 10, 6, 2, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.pow(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 7, 5], [2, 0, 3, 1, 0, 4], [16, 65], [0, 0, 0, 1, 0, 1, 0, 0], [0, 2, 9, 2, 5], [5, 6, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 15, 9, 6, 2, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11557257920503616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 8, 2, 5], [0, 6, 7], [0], [0, 0, 0, 1], [0, 8, 0], [2], [0]], "fitness": -0.09114285558462143, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta)))", "other_info": {"loss": [2.309439182281494, 2.3109371662139893, 2.3106918334960938, 2.3093671798706055, 2.311243772506714, 2.3097927570343018], "accuracy": [0.09391097724437714, 0.09113723784685135, 0.09285431355237961, 0.09615638852119446, 0.09153348207473755, 0.09232597798109055], "val_loss": [2.308295965194702, 2.308295965194702, 2.308295965194702, 2.308295965194702, 2.308295965194702, 2.308295965194702], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 8, 5, 3, 1, 4, 3, 1, 0], "tree_depth": 12}]