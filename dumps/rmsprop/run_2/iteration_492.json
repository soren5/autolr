[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2142553329467773, 1.620412826538086, 1.1543065309524536, 1.000461459159851, 0.9037755131721497, 0.856938362121582, 0.7958856225013733, 0.7634609341621399, 0.7498137950897217, 0.7223387360572815, 0.7134304642677307, 0.6752405762672424, 0.6647608876228333, 0.6423593163490295, 0.6417730450630188, 0.6179180145263672, 0.6315552592277527, 0.6035014390945435, 0.5898709297180176, 0.5833867192268372, 0.5677162408828735, 0.5618404746055603, 0.5631095170974731, 0.5522409081459045, 0.5358253121376038, 0.5262160301208496, 0.5224459767341614, 0.5132895112037659, 0.5165144801139832, 0.5064941048622131, 0.49721577763557434, 0.4942636787891388, 0.5053775906562805, 0.48412024974823, 0.48499584197998047, 0.4843461811542511, 0.4728246033191681, 0.45845261216163635, 0.4639425277709961, 0.45735764503479004, 0.453319251537323, 0.43914780020713806, 0.4518846273422241, 0.4447067975997925, 0.4275760352611542, 0.43538898229599, 0.4184560179710388, 0.42801353335380554, 0.42456570267677307, 0.41832348704338074, 0.42535200715065, 0.4106089770793915, 0.4060768783092499, 0.3975973427295685, 0.3969133794307709, 0.3853762447834015, 0.39516308903694153, 0.3829260468482971, 0.3835957646369934, 0.3880006968975067, 0.38272443413734436, 0.37706440687179565, 0.37178221344947815, 0.3696659505367279], "accuracy": [0.26482629776000977, 0.501518964767456, 0.5979394912719727, 0.6421872973442078, 0.6693964004516602, 0.6906617283821106, 0.7066437602043152, 0.7125874757766724, 0.7232862114906311, 0.728701651096344, 0.7318716049194336, 0.7506273984909058, 0.7493065595626831, 0.76106196641922, 0.7643640041351318, 0.7684586048126221, 0.7553823590278625, 0.7759873270988464, 0.7761194109916687, 0.7845727205276489, 0.7886672616004944, 0.7940827012062073, 0.7881389260292053, 0.7959318161010742, 0.7996301651000977, 0.8017435073852539, 0.809140145778656, 0.8080834746360779, 0.8086118102073669, 0.8112534880638123, 0.8125742673873901, 0.8165367841720581, 0.8119139075279236, 0.8165367841720581, 0.8222163319587708, 0.8252542614936829, 0.8251221776008606, 0.8330471515655518, 0.8302733898162842, 0.8305375576019287, 0.834632158279419, 0.837537944316864, 0.8313300609588623, 0.8315942287445068, 0.8437458872795105, 0.8360850811004639, 0.8477083444595337, 0.8444063067436218, 0.841500461101532, 0.8448025584220886, 0.8426892161369324, 0.8491612672805786, 0.8479725122451782, 0.8541803956031799, 0.8560295701026917, 0.8581429123878479, 0.8531237840652466, 0.8569541573524475, 0.8582749962806702, 0.8564258217811584, 0.8617091774940491, 0.8615770936012268, 0.8650112152099609, 0.8650112152099609], "val_loss": [1.9341858625411987, 1.1073932647705078, 0.9648076295852661, 0.768959641456604, 0.7761403918266296, 0.7191901206970215, 0.6729509830474854, 0.6288379430770874, 0.6034307479858398, 0.5962626338005066, 0.5839518904685974, 0.6307950615882874, 0.575935959815979, 0.546758770942688, 0.5949469208717346, 0.5517501831054688, 0.5197130441665649, 0.5393790602684021, 0.5157915949821472, 0.5246368050575256, 0.5188058614730835, 0.496560662984848, 0.49407699704170227, 0.4783647358417511, 0.5044562220573425, 0.482045978307724, 0.4833669066429138, 0.47474971413612366, 0.4780293107032776, 0.48128974437713623, 0.47716590762138367, 0.45810189843177795, 0.45802637934684753, 0.45733341574668884, 0.4519621729850769, 0.4567277133464813, 0.43648800253868103, 0.4509088397026062, 0.43171313405036926, 0.44254687428474426, 0.4332423508167267, 0.4297737777233124, 0.4343867897987366, 0.420925498008728, 0.4417111277580261, 0.41921135783195496, 0.41851308941841125, 0.43705493211746216, 0.41413620114326477, 0.43200594186782837, 0.41014641523361206, 0.41557276248931885, 0.41583332419395447, 0.4074573516845703, 0.40791285037994385, 0.4381478726863861, 0.4001094102859497, 0.4178636968135834, 0.4025832414627075, 0.39548566937446594, 0.40221020579338074, 0.3960121273994446, 0.40533381700515747, 0.4016043245792389], "val_accuracy": [0.5736666917800903, 0.6566666960716248, 0.6303333044052124, 0.7149999737739563, 0.7206666469573975, 0.7229999899864197, 0.75, 0.7710000276565552, 0.7746666669845581, 0.7699999809265137, 0.7853333353996277, 0.7613333463668823, 0.784333348274231, 0.8009999990463257, 0.7599999904632568, 0.765999972820282, 0.8033333420753479, 0.7900000214576721, 0.8059999942779541, 0.7979999780654907, 0.8026666641235352, 0.8143333196640015, 0.8190000057220459, 0.8243333101272583, 0.8100000023841858, 0.8243333101272583, 0.824999988079071, 0.8246666789054871, 0.8190000057220459, 0.8206666707992554, 0.8220000267028809, 0.8293333053588867, 0.8360000252723694, 0.8346666693687439, 0.8356666564941406, 0.8383333086967468, 0.8410000205039978, 0.8336666822433472, 0.8396666646003723, 0.840666651725769, 0.8399999737739563, 0.8433333039283752, 0.8360000252723694, 0.8510000109672546, 0.8323333263397217, 0.8463333249092102, 0.8473333120346069, 0.8366666436195374, 0.8523333072662354, 0.8393333554267883, 0.8496666550636292, 0.8533333539962769, 0.8500000238418579, 0.8519999980926514, 0.8506666421890259, 0.8323333263397217, 0.8560000061988831, 0.8486666679382324, 0.859666645526886, 0.8579999804496765, 0.8533333539962769, 0.859666645526886, 0.8553333282470703, 0.8533333539962769]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5, 3, 6, 2, 1, 6, 0, 1, 3, 2, 0, 4, 1, 2, 9, 2, 9], [0, 2, 1, 0, 2, 2, 3, 0, 1, 1, 1, 3, 0, 2, 1], [0, 39, 39, 41, 36, 63], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 7, 8, 2, 9], [3, 3, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 2, 0, 2, 5, 5, 1], [6, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 22, 15, 6, 12, 8, 4, 1, 10, 6, 4, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.pow(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(grad), grad), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.square(alpha)))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 3, 2, 5], [0, 2, 1, 0, 2, 2, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 8, 5, 2, 1], [0, 6, 7, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 7, 5, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(grad, tf.math.add(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036465644836426, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 5, 3, 7], [0, 6, 1, 6, 4, 7], [0, 22], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 4, 2, 2, 1, 15, 9, 6, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.multiply(alpha, tf.math.add(grad, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18016114830970764, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 5, 9, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 8, 0, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3042359352111816, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]