[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2113723754882812, 1.6049365997314453, 1.149756669998169, 0.9750961661338806, 0.8984490036964417, 0.8106234073638916, 0.7904843688011169, 0.7725755572319031, 0.7337273955345154, 0.6962246298789978, 0.6723625659942627, 0.6997999548912048, 0.662795901298523, 0.6297973394393921, 0.6320691704750061, 0.6201371550559998, 0.6025581955909729, 0.5846424102783203, 0.5579768419265747, 0.563406765460968, 0.5658289194107056, 0.556706964969635, 0.5332173705101013, 0.5376481413841248, 0.5265974998474121, 0.5228404402732849, 0.5138522386550903, 0.5073612332344055, 0.5057357549667358, 0.5048034191131592, 0.47409194707870483, 0.4713321030139923, 0.48497772216796875, 0.4723068177700043, 0.4801193177700043, 0.4701661169528961, 0.446916788816452, 0.44569408893585205, 0.4506085515022278, 0.44534504413604736, 0.45142507553100586, 0.4437291622161865, 0.43630337715148926, 0.43750011920928955, 0.4196939766407013], "accuracy": [0.27578920125961304, 0.5143309831619263, 0.6032228469848633, 0.6563201546669006, 0.6744155287742615, 0.7125874757766724, 0.7104741930961609, 0.7143045663833618, 0.7298903465270996, 0.7416457533836365, 0.7518161535263062, 0.7359662055969238, 0.7520803213119507, 0.7675340175628662, 0.7601373791694641, 0.7720248103141785, 0.7769119143486023, 0.785101056098938, 0.7940827012062073, 0.7913089394569397, 0.7869502305984497, 0.793950617313385, 0.8031964302062988, 0.7981772422790527, 0.8078193068504333, 0.8076872229576111, 0.8084797263145447, 0.813498854637146, 0.8157442808151245, 0.8145555257797241, 0.8305375576019287, 0.8296129703521729, 0.8207634687423706, 0.8273676037788391, 0.8247259259223938, 0.828820526599884, 0.8355567455291748, 0.8407079577445984, 0.8356888294219971, 0.8391229510307312, 0.8412362933158875, 0.8360850811004639, 0.8393871188163757, 0.839519202709198, 0.8466516733169556], "val_loss": [1.9261881113052368, 1.08212411403656, 0.8933713436126709, 0.7999972105026245, 0.7390365600585938, 0.6812676787376404, 0.6765515804290771, 0.6554426550865173, 0.6422781348228455, 0.6093641519546509, 0.616383969783783, 0.5965664386749268, 0.5754647850990295, 0.623264491558075, 0.5900078415870667, 0.5425429940223694, 0.541748046875, 0.5237566232681274, 0.5325056314468384, 0.5045793652534485, 0.5569921731948853, 0.5066710710525513, 0.4881724417209625, 0.502683162689209, 0.5080178380012512, 0.49118462204933167, 0.49629077315330505, 0.47388768196105957, 0.4738827347755432, 0.4666863679885864, 0.46284720301628113, 0.4640214741230011, 0.4696378707885742, 0.4631137549877167, 0.46503889560699463, 0.4352254271507263, 0.4567091464996338, 0.4315294623374939, 0.43105101585388184, 0.42233988642692566, 0.42917245626449585, 0.4270358383655548, 0.4206560552120209, 0.43080705404281616, 0.4249728322029114], "val_accuracy": [0.5490000247955322, 0.6650000214576721, 0.6830000281333923, 0.70333331823349, 0.7356666922569275, 0.7336666584014893, 0.7516666650772095, 0.7403333187103271, 0.7609999775886536, 0.7583333253860474, 0.7726666927337646, 0.7760000228881836, 0.7883333563804626, 0.7526666522026062, 0.7706666588783264, 0.8046666383743286, 0.7933333516120911, 0.8029999732971191, 0.7919999957084656, 0.8176666498184204, 0.7853333353996277, 0.8223333358764648, 0.8240000009536743, 0.8130000233650208, 0.8186666369438171, 0.8203333616256714, 0.8193333148956299, 0.8273333311080933, 0.8289999961853027, 0.8316666483879089, 0.8343333601951599, 0.8320000171661377, 0.8273333311080933, 0.8233333230018616, 0.8266666531562805, 0.8443333506584167, 0.8289999961853027, 0.8479999899864197, 0.843999981880188, 0.8486666679382324, 0.8446666598320007, 0.847000002861023, 0.8433333039283752, 0.8460000157356262, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [5, 5, 3, 2, 5, 5], [0, 0, 1, 0, 2], [57, 39, 89], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 2, 0, 6, 4, 8, 7], [2, 1, 3, 1, 2], [16, 13], [1, 0, 0, 1, 0, 1, 1, 1], [0, 5, 0, 2, 6, 2, 1], [0, 6, 1], [0], [0, 0, 1], [0, 8], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 8, 4, 4, 0, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 7, 3, 5], [0, 2, 3, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 8, 8, 2, 5, 2, 1], [0, 6, 1, 4, 0], [0, 13], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 3, 0, 7, 7, 7], [2, 6, 3, 7, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 0, 11, 7, 4, 1, 11, 6, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.add(tf.math.add(tf.math.add(grad, sigma), grad), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [58, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 2, 2, 1], [0, 3, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 1, 1, 1, 4, 3, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309384346008301, 2.3105669021606445, 2.3100156784057617, 2.3106462955474854, 2.3095920085906982, 2.3098573684692383], "accuracy": [0.09219389408826828, 0.09219389408826828, 0.0886276587843895, 0.09087307006120682, 0.09417514503002167, 0.09285431355237961], "val_loss": [2.308959484100342, 2.308959484100342, 2.308959484100342, 2.308959484100342, 2.308959484100342, 2.308959484100342], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 3, 2], [9, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [31, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 6, 2, 5, 2, 5, 4, 3], [0, 6, 1, 6, 0, 2, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.math.pow(grad, alpha)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110151290893555, 2.309859275817871, 2.3101184368133545, 2.30972957611084, 2.309648036956787, 2.309800863265991], "accuracy": [0.0936468094587326, 0.0878351628780365, 0.09417514503002167, 0.08968432247638702, 0.0936468094587326, 0.09866596013307571], "val_loss": [2.308607816696167, 2.308607816696167, 2.308607816696167, 2.308607816696167, 2.308607816696167, 2.308607816696167], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]