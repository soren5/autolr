[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102386951446533, 1.6066864728927612, 1.1559981107711792, 0.9614980220794678, 0.877359926700592, 0.8369318842887878, 0.8072898387908936, 0.7585543990135193, 0.7407343983650208, 0.7281962037086487, 0.6962745785713196, 0.6725192666053772, 0.6592638492584229, 0.6397777199745178, 0.6275294423103333, 0.6344958543777466, 0.6088153719902039, 0.5987617373466492, 0.600847065448761, 0.5791749358177185, 0.5681236982345581, 0.5666983127593994, 0.5615495443344116, 0.5461161732673645, 0.5436320304870605, 0.5339551568031311, 0.5211780667304993, 0.5159997940063477, 0.524039626121521, 0.513225793838501, 0.5062689781188965, 0.4995550811290741, 0.4807299077510834, 0.48468443751335144, 0.4836287498474121, 0.47674086689949036, 0.47379839420318604, 0.474957674741745, 0.4630974233150482, 0.44592341780662537, 0.45101651549339294, 0.44214051961898804, 0.44840729236602783, 0.44945573806762695, 0.4393972158432007, 0.4366140365600586, 0.4257376790046692, 0.42880672216415405, 0.42399632930755615, 0.42693421244621277, 0.41341590881347656, 0.41796454787254333, 0.40710538625717163, 0.4067818820476532, 0.39577561616897583, 0.4033903479576111, 0.39295315742492676, 0.37988898158073425, 0.38639989495277405, 0.3907947838306427, 0.37927699089050293, 0.3830043375492096, 0.3721422553062439, 0.38223475217819214, 0.3718079626560211], "accuracy": [0.2694492042064667, 0.5005943775177002, 0.5983357429504395, 0.6551313996315002, 0.6831330060958862, 0.6980583667755127, 0.7025492191314697, 0.7201162576675415, 0.7288337349891663, 0.7283053994178772, 0.7405890822410583, 0.7423061728477478, 0.752740740776062, 0.7625148296356201, 0.7668735980987549, 0.7638356685638428, 0.7769119143486023, 0.7788931727409363, 0.7763835787773132, 0.7878747582435608, 0.7890635132789612, 0.7928939461708069, 0.7954035401344299, 0.8001585006713867, 0.8001585006713867, 0.8058380484580994, 0.8086118102073669, 0.8129705190658569, 0.8047813773155212, 0.8138951063156128, 0.8187822103500366, 0.8149517774581909, 0.8278959393501282, 0.8215559124946594, 0.8226125836372375, 0.8260467648506165, 0.8285563588142395, 0.8248580098152161, 0.8342359066009521, 0.8376700282096863, 0.8374059200286865, 0.8397833704948425, 0.8338396549224854, 0.8339717388153076, 0.8374059200286865, 0.8425571322441101, 0.8426892161369324, 0.8429533839225769, 0.8446704745292664, 0.846387505531311, 0.848368763923645, 0.8473120927810669, 0.8524633646011353, 0.8561616539955139, 0.8564258217811584, 0.8540483713150024, 0.8560295701026917, 0.8627657890319824, 0.8568220734596252, 0.8558974862098694, 0.86118084192276, 0.8568220734596252, 0.86118084192276, 0.8617091774940491, 0.8598600029945374], "val_loss": [1.9185032844543457, 1.0871039628982544, 0.8812329173088074, 0.7575022578239441, 0.7205185294151306, 0.6675596237182617, 0.6552565693855286, 0.6556884050369263, 0.64287930727005, 0.651079535484314, 0.5905495882034302, 0.6166434288024902, 0.5753355622291565, 0.5759971737861633, 0.5686619281768799, 0.5282884836196899, 0.5216373205184937, 0.5339363813400269, 0.5301095247268677, 0.5083802342414856, 0.48999249935150146, 0.4852856397628784, 0.4886951446533203, 0.4787413775920868, 0.5025842189788818, 0.47071993350982666, 0.48108041286468506, 0.4644950330257416, 0.48221060633659363, 0.47347167134284973, 0.46172526478767395, 0.4515473544597626, 0.4444357454776764, 0.44163191318511963, 0.44599777460098267, 0.4365721046924591, 0.4562767744064331, 0.4369816780090332, 0.42818987369537354, 0.4275875389575958, 0.41783836483955383, 0.42900049686431885, 0.44222232699394226, 0.42255884408950806, 0.41793566942214966, 0.4194640815258026, 0.41248056292533875, 0.41048601269721985, 0.41915494203567505, 0.40983283519744873, 0.4053930640220642, 0.4071711301803589, 0.4062381088733673, 0.4049939513206482, 0.40035754442214966, 0.397682249546051, 0.39180535078048706, 0.3950331211090088, 0.39215803146362305, 0.3941177427768707, 0.38813725113868713, 0.3870680332183838, 0.4138897657394409, 0.3908286988735199, 0.3957958221435547], "val_accuracy": [0.5260000228881836, 0.6470000147819519, 0.6930000185966492, 0.7266666889190674, 0.722000002861023, 0.7493333220481873, 0.737333357334137, 0.7279999852180481, 0.7443333268165588, 0.7563333511352539, 0.7699999809265137, 0.765999972820282, 0.7799999713897705, 0.762333333492279, 0.7896666526794434, 0.8040000200271606, 0.8106666803359985, 0.7900000214576721, 0.7993333339691162, 0.8119999766349792, 0.828000009059906, 0.8253333568572998, 0.8216666579246521, 0.8306666612625122, 0.8080000281333923, 0.8293333053588867, 0.8226666450500488, 0.8309999704360962, 0.824999988079071, 0.8253333568572998, 0.8303333520889282, 0.8373333215713501, 0.8370000123977661, 0.8413333296775818, 0.8366666436195374, 0.8473333120346069, 0.8326666951179504, 0.8386666774749756, 0.846666693687439, 0.843999981880188, 0.8489999771118164, 0.8473333120346069, 0.8289999961853027, 0.8453333377838135, 0.847000002861023, 0.8503333330154419, 0.8489999771118164, 0.8529999852180481, 0.8513333201408386, 0.8536666631698608, 0.8550000190734863, 0.8493333458900452, 0.856333315372467, 0.8519999980926514, 0.8566666841506958, 0.8586666584014893, 0.8610000014305115, 0.8616666793823242, 0.8603333234786987, 0.862333357334137, 0.862333357334137, 0.8600000143051147, 0.8503333330154419, 0.8566666841506958, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 4], [0, 2, 1, 0, 2, 2], [0, 1, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 2, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 1, 3, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 12, 7, 5, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 4, 3], [0, 2, 1, 3, 2, 0, 1], [0, 39, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 0, 5, 2, 1], [0, 6, 3, 6, 0], [40, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 2, 1, 1, 0, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.pow(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.49636840820312, 10934.5625, 182509.78125, 1300392.625, 5753446.0, 18918484.0], "accuracy": [0.09985470771789551, 0.10196803510189056, 0.1006472036242485, 0.10091137140989304, 0.1026284471154213, 0.09628847241401672], "val_loss": [805.0266723632812, 39501.4296875, 419747.3125, 2281485.25, 8534744.0, 25157788.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 4, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308856248855591, 2.31052565574646, 2.3112542629241943, 2.311384916305542, 2.3093175888061523, 2.309250593185425], "accuracy": [0.09377889335155487, 0.08598599582910538, 0.08928807079792023, 0.08981640636920929, 0.09536388516426086, 0.09721305221319199], "val_loss": [2.30907940864563, 2.30907940864563, 2.30907940864563, 2.30907940864563, 2.30907940864563, 2.30907940864563], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 0], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 0, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098270893096924, 2.310089111328125, 2.310948610305786, 2.3091940879821777, 2.3108150959014893, 2.310426950454712], "accuracy": [0.09430722147226334, 0.09338264167308807, 0.08994849026203156, 0.09259014576673508, 0.09272222965955734, 0.08717474341392517], "val_loss": [2.3086776733398438, 2.3086776733398438, 2.3086776733398438, 2.3086776733398438, 2.3086776733398438, 2.3086776733398438], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]