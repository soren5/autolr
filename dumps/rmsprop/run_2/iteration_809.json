[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2107670307159424, 1.61524498462677, 1.1565066576004028, 0.9725216627120972, 0.8973186612129211, 0.8160083293914795, 0.7850761413574219, 0.7547481656074524, 0.7377568483352661, 0.7036251425743103, 0.6889876127243042, 0.6819754838943481, 0.6582594513893127, 0.6226796507835388, 0.6231934428215027, 0.6160610318183899, 0.5993754863739014, 0.5801067352294922, 0.579687237739563, 0.5715050101280212, 0.5616990923881531, 0.5567216277122498, 0.5376014113426208, 0.5314503908157349, 0.5228568911552429, 0.5248842835426331, 0.5222006440162659, 0.49468186497688293, 0.5206199884414673, 0.49953603744506836, 0.49290066957473755, 0.47337356209754944], "accuracy": [0.26376965641975403, 0.4998018741607666, 0.598599910736084, 0.6536785364151001, 0.6754721999168396, 0.6992471218109131, 0.7059833407402039, 0.7236824631690979, 0.7169462442398071, 0.7384757399559021, 0.7392682433128357, 0.7433628439903259, 0.7467969655990601, 0.7660810947418213, 0.7648923397064209, 0.7709681391716003, 0.7732135653495789, 0.7819310426712036, 0.778232753276825, 0.7814027070999146, 0.7918372750282288, 0.789988100528717, 0.7976489067077637, 0.8006868362426758, 0.8049134612083435, 0.8013472557067871, 0.800818920135498, 0.8127063512802124, 0.7985734939575195, 0.8104609847068787, 0.8146876096725464, 0.8190463781356812], "val_loss": [1.9168437719345093, 1.143987774848938, 0.8523452877998352, 0.7952348589897156, 0.7035415172576904, 0.6600184440612793, 0.6421990990638733, 0.628618061542511, 0.5957745313644409, 0.6021873354911804, 0.5994077920913696, 0.5571222305297852, 0.5479673743247986, 0.5333660244941711, 0.5328310132026672, 0.5459761023521423, 0.4896562397480011, 0.5116314888000488, 0.4912257492542267, 0.48831892013549805, 0.4808019995689392, 0.48993128538131714, 0.46829015016555786, 0.4642077684402466, 0.46473729610443115, 0.46797534823417664, 0.4422299861907959, 0.4523973762989044, 0.4394495487213135, 0.43481579422950745, 0.4435558319091797, 0.4360324442386627], "val_accuracy": [0.5849999785423279, 0.5879999995231628, 0.7059999704360962, 0.7210000157356262, 0.7426666617393494, 0.7593333125114441, 0.7639999985694885, 0.7620000243186951, 0.7616666555404663, 0.7683333158493042, 0.7683333158493042, 0.7876666784286499, 0.8033333420753479, 0.7973333597183228, 0.8019999861717224, 0.777999997138977, 0.8209999799728394, 0.7976666688919067, 0.8026666641235352, 0.812333345413208, 0.8226666450500488, 0.8153333067893982, 0.8090000152587891, 0.8303333520889282, 0.8256666660308838, 0.8243333101272583, 0.8346666693687439, 0.8299999833106995, 0.8330000042915344, 0.8289999961853027, 0.8316666483879089, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 0, 8, 0], [0, 2, 1, 2, 2], [0, 26, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 9, 2, 5, 8, 2], [0, 2, 1, 1, 0], [0, 22], [0, 1], [0], [3], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 13, 8, 5, 1, 5, 3, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(alpha))), tf.math.sqrt(tf.math.negative(grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.309817314147949, 2.3097856044769287, 2.309434413909912, 2.3095085620880127, 2.309546709060669, 2.310093641281128], "accuracy": [0.09140139818191528, 0.09285431355237961, 0.08757099509239197, 0.09351472556591034, 0.0936468094587326, 0.09100515395402908], "val_loss": [2.3089823722839355, 2.3089823722839355, 2.3089823722839355, 2.3089823722839355, 2.3089823722839355, 2.3089823722839355], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 5, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 6], [0, 6, 1, 6, 0], [0, 52], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(alpha, grad)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30908203125, 2.3106677532196045, 2.3092191219329834, 2.3087527751922607, 2.310185194015503, 2.309459686279297], "accuracy": [0.09074098616838455, 0.09549596905708313, 0.09549596905708313, 0.0948355570435524, 0.09192973375320435, 0.09417514503002167], "val_loss": [2.308772087097168, 2.308772087097168, 2.308772087097168, 2.308772087097168, 2.308772087097168, 2.308772087097168], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [6, 2, 3, 2, 3, 5], [3, 2, 3, 1, 2], [20, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 3, 1, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [7, 2, 0, 2, 5, 8, 4, 7, 1, 0, 7, 7, 1, 6, 3, 6, 9, 9, 5, 0, 0, 3, 1, 5], [0, 6, 1, 7, 6, 6, 2, 2, 6, 5, 5, 3, 4], [0, 58, 60], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 37, 24, 13, 3, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha))), tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(grad))), tf.math.negative(tf.math.multiply(beta, beta))))), grad)), tf.math.subtract(tf.math.square(grad), grad)), sigma), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31074595451355, 2.309506893157959, 2.3093247413635254, 2.3107404708862305, 2.3102669715881348, 2.309499502182007], "accuracy": [0.08889182657003403, 0.09166556596755981, 0.09457138925790787, 0.09021265059709549, 0.09140139818191528, 0.08915598690509796], "val_loss": [2.3089044094085693, 2.3089044094085693, 2.3089044094085693, 2.3089044094085693, 2.3089044094085693, 2.3089044094085693], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 8, 2, 6, 6], [2, 0, 3, 1, 0, 4, 2, 3], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 5, 2, 5, 2, 1], [6, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 11, 6, 5, 2, 17, 9, 8, 2, 11, 7, 4, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102314472198486, 2.310004949569702, 2.3103742599487305, 2.310029983520508, 2.309490442276001, 2.309913396835327], "accuracy": [0.0936468094587326, 0.09285431355237961, 0.09787346422672272, 0.0940430611371994, 0.09338264167308807, 0.09047681838274002], "val_loss": [2.3081674575805664, 2.3081674575805664, 2.3081674575805664, 2.3081674575805664, 2.3081674575805664, 2.3081674575805664], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]