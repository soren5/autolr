[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7837142944335938, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2140676975250244, 1.61161470413208, 1.1451501846313477, 0.9840559363365173, 0.8838973641395569, 0.8554455041885376, 0.7768202424049377, 0.7624925971031189, 0.7453941702842712, 0.7086759209632874, 0.7106442451477051, 0.6722586154937744, 0.6612193584442139, 0.6274368166923523, 0.6297553777694702, 0.6377941966056824, 0.6240545511245728], "accuracy": [0.25901466608047485, 0.5110289454460144, 0.6020340919494629, 0.6497160196304321, 0.6789063811302185, 0.6901333928108215, 0.7207766771316528, 0.7235503792762756, 0.7268524765968323, 0.7420420050621033, 0.7387399077415466, 0.7515519857406616, 0.7582882046699524, 0.7691190242767334, 0.7711002230644226, 0.7684586048126221, 0.7741381525993347], "val_loss": [1.9329975843429565, 1.0940476655960083, 0.9391819834709167, 0.818798840045929, 0.7052586078643799, 0.7299388647079468, 0.70125412940979, 0.7088925838470459, 0.6488344669342041, 0.6258251667022705, 0.6098002791404724, 0.5840080976486206, 0.5908114314079285, 0.5931034088134766, 0.5684049129486084, 0.580303430557251, 0.5734310746192932], "val_accuracy": [0.5523333549499512, 0.653333306312561, 0.6603333353996277, 0.6663333177566528, 0.7356666922569275, 0.7206666469573975, 0.7206666469573975, 0.6956666707992554, 0.7360000014305115, 0.7433333396911621, 0.7620000243186951, 0.7889999747276306, 0.7879999876022339, 0.7620000243186951, 0.7829999923706055, 0.7876666784286499, 0.7826666831970215]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 4], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 8, 2, 1, 7, 9, 1, 5, 0, 1, 2, 9, 8, 8, 1, 4], [1, 6, 1, 6, 1, 2, 6, 1, 0], [0, 22, 17], [1], [0], [2], [0]], "fitness": -0.7488571405410767, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 28, 19, 9, 3, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), alpha)), grad)), tf.math.subtract(tf.math.square(tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(alpha))), tf.math.subtract(tf.math.pow(beta, grad), alpha)))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.1955299377441406, 1.5473383665084839, 1.0802465677261353, 0.9687060713768005, 0.8312430381774902, 0.8287945985794067, 0.7477937340736389, 0.7150865793228149, 0.7169374227523804, 0.6967341899871826, 0.6782256364822388], "accuracy": [0.2673358917236328, 0.48210275173187256, 0.6139215230941772, 0.6420552134513855, 0.6853784322738647, 0.6859067678451538, 0.7205125093460083, 0.7277770638465881, 0.7256637215614319, 0.7306828498840332, 0.7412495017051697], "val_loss": [1.7462866306304932, 1.0357067584991455, 0.9442788362503052, 0.7793651819229126, 0.8098526000976562, 0.6967849135398865, 0.6660372018814087, 0.6891162395477295, 0.6703227758407593, 0.6496273875236511, 0.6182039976119995], "val_accuracy": [0.5440000295639038, 0.6453333497047424, 0.6656666398048401, 0.7136666774749756, 0.6796666383743286, 0.7473333477973938, 0.7233333587646484, 0.722000002861023, 0.7283333539962769, 0.7393333315849304, 0.7473333477973938]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 3, 2, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 2, 2, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 6, 3, 9, 3, 1, 0, 7, 8], [0, 6, 1, 6, 0, 3, 0, 3, 5], [0, 22, 35, 25], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 4, 2, 2, 1, 24, 15, 9, 4, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(alpha, grad), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.subtract(sigma, tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), sigma))), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303537607192993, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [97, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 4, 5, 4, 6, 9, 8, 6, 2, 7, 3, 7], [0, 6, 1, 6, 0, 5, 6, 7, 6], [0, 24, 59], [1], [0], [2], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 23, 14, 9, 3, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.pow(grad, tf.math.divide_no_nan(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad), grad), grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309570550918579, 2.31024432182312, 2.309253215789795, 2.310581684112549, 2.3097305297851562, 2.3096375465393066], "accuracy": [0.09536388516426086, 0.09377889335155487, 0.09206181764602661, 0.09060890227556229, 0.09509972482919693, 0.08928807079792023], "val_loss": [2.3095500469207764, 2.3095500469207764, 2.3095500469207764, 2.3095500469207764, 2.3095500469207764, 2.3095500469207764], "val_accuracy": [0.08433333039283752, 0.08433333039283752, 0.08433333039283752, 0.08433333039283752, 0.08433333039283752, 0.08433333039283752]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 7, 0], [0, 2, 1, 0, 0, 0], [0, 39, 39, 67], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [6, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 14, 8, 6, 4, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310107946395874, 2.310065746307373, 2.3103017807006836, 2.3105409145355225, 2.308602809906006, 2.3100194931030273], "accuracy": [0.08796724677085876, 0.09232597798109055, 0.09602430462837219, 0.08968432247638702, 0.09192973375320435, 0.08691058307886124], "val_loss": [2.308314561843872, 2.308314561843872, 2.308314561843872, 2.308314561843872, 2.308314561843872, 2.308314561843872], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]