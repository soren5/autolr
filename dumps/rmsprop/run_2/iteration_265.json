[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209916353225708, 1.5961546897888184, 1.1586843729019165, 0.9604486227035522, 0.8805509805679321, 0.8284605741500854, 0.7721751928329468, 0.7321165800094604, 0.7183194756507874, 0.706117570400238, 0.6719523072242737, 0.6747373342514038, 0.6448007822036743, 0.6420202255249023, 0.6369132995605469, 0.6107414364814758, 0.5984071493148804, 0.5740877389907837, 0.5799105167388916, 0.5683335661888123, 0.5514664053916931, 0.5459684729576111, 0.5475690364837646, 0.5385459661483765, 0.5147204399108887, 0.5293013453483582, 0.5145463943481445, 0.49881577491760254, 0.5058401823043823], "accuracy": [0.26020342111587524, 0.5122177004814148, 0.5951657891273499, 0.651168942451477, 0.6826046705245972, 0.6956809163093567, 0.7197200059890747, 0.728701651096344, 0.7296261787414551, 0.735569953918457, 0.7543256878852844, 0.7519482374191284, 0.7600052952766418, 0.7564390301704407, 0.7589486241340637, 0.7720248103141785, 0.77677983045578, 0.7827235460281372, 0.7827235460281372, 0.7869502305984497, 0.7967243194580078, 0.7922335267066956, 0.7972526550292969, 0.802800178527832, 0.8101968169212341, 0.7997622489929199, 0.8095363974571228, 0.8109893202781677, 0.811649739742279], "val_loss": [1.9226839542388916, 1.0979211330413818, 0.8967112898826599, 0.8275927901268005, 0.7382374405860901, 0.6838525533676147, 0.6453757286071777, 0.6148447394371033, 0.674288272857666, 0.6155696511268616, 0.6162132024765015, 0.5859643816947937, 0.5886328220367432, 0.5706904530525208, 0.5394561886787415, 0.5336308479309082, 0.5154569745063782, 0.5591699481010437, 0.5029899477958679, 0.49736514687538147, 0.49829214811325073, 0.5034244060516357, 0.48913395404815674, 0.47390469908714294, 0.47773200273513794, 0.5119192004203796, 0.4758736193180084, 0.4656537175178528, 0.4759748876094818], "val_accuracy": [0.5809999704360962, 0.6643333435058594, 0.6883333325386047, 0.706333339214325, 0.7386666536331177, 0.7480000257492065, 0.7649999856948853, 0.7753333449363708, 0.7369999885559082, 0.7603333592414856, 0.7670000195503235, 0.7836666703224182, 0.7806666493415833, 0.7960000038146973, 0.8116666674613953, 0.8043333292007446, 0.8159999847412109, 0.781000018119812, 0.8180000185966492, 0.8190000057220459, 0.8090000152587891, 0.8076666593551636, 0.8273333311080933, 0.8363333344459534, 0.8193333148956299, 0.8196666836738586, 0.8253333568572998, 0.8330000042915344, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 8, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 9, 3, 8, 3], [2, 0, 2, 0, 0], [48, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 6, 2, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [6, 2, 6, 2, 3, 5], [2, 2, 1, 2, 2], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 6, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 9, 3, 2, 5, 3, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 3, 1, 2, 0, 1, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308335781097412, 2.310046672821045, 2.3089499473571777, 2.3086514472961426, 2.3095462322235107, 2.309962749481201], "accuracy": [0.09668471664190292, 0.09496764093637466, 0.09457138925790787, 0.09496764093637466, 0.09298639744520187, 0.0952318087220192], "val_loss": [2.3094234466552734, 2.3094234466552734, 2.3094234466552734, 2.3094234466552734, 2.3094234466552734, 2.3094234466552734], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [2, 7, 3, 2, 3, 5, 4, 8, 3, 1, 2, 0, 5, 0, 8], [0, 2, 1, 0, 2, 1, 0, 2, 0, 3], [0, 39, 39, 86], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [9, 2, 0, 2, 5, 2, 1], [0, 6, 1, 5, 0], [0, 77], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 25, 15, 10, 4, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(grad, tf.math.subtract(tf.math.add(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.square(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099770545959473, 2.310396671295166, 2.310530185699463, 2.3106255531311035, 2.3106942176818848, 2.309615135192871], "accuracy": [0.08875974267721176, 0.08255184441804886, 0.09047681838274002, 0.09232597798109055, 0.08558975160121918, 0.09470347315073013], "val_loss": [2.309218406677246, 2.309218406677246, 2.309218406677246, 2.309218406677246, 2.309218406677246, 2.309218406677246], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [2, 2, 8, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 0, 3, 1, 0], [55, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1, 3, 0], [0, 6, 1, 6, 0, 5], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.08742856979370117, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 0, 15, 9, 6, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.sqrt(grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.multiply(grad, alpha), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309656858444214, 2.3102004528045654, 2.3103559017181396, 2.3095908164978027, 2.309406280517578, 2.308298349380493], "accuracy": [0.0936468094587326, 0.09470347315073013, 0.08770307898521423, 0.09074098616838455, 0.08875974267721176, 0.0944393053650856], "val_loss": [2.3084299564361572, 2.3084299564361572, 2.3084299564361572, 2.3084299564361572, 2.3084299564361572, 2.3084299564361572], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]