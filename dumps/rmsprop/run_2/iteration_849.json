[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8088571429252625, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2084059715270996, 1.6024607419967651, 1.1326831579208374, 1.001672625541687, 0.8737902045249939, 0.8297153115272522, 0.7692665457725525, 0.7812696099281311, 0.7295047640800476, 0.7137552499771118, 0.710796058177948, 0.6677514314651489, 0.656592071056366, 0.6439329385757446, 0.621261715888977, 0.6288682818412781, 0.6188588738441467, 0.5953676104545593, 0.6027496457099915, 0.5614532828330994, 0.5661168098449707, 0.5589200854301453, 0.5510639548301697, 0.5342068672180176, 0.5294439196586609, 0.5310008525848389, 0.52188640832901, 0.5156065821647644, 0.5060109496116638, 0.5121098160743713, 0.5019017457962036, 0.48974621295928955, 0.49885880947113037, 0.4822102189064026, 0.4873104989528656, 0.47874224185943604, 0.4708671271800995], "accuracy": [0.27327960729599, 0.5048210024833679, 0.604939877986908, 0.6435081362724304, 0.6769251227378845, 0.6923788189888, 0.7153612375259399, 0.7082287669181824, 0.7284374833106995, 0.7346453666687012, 0.7297582626342773, 0.7491744756698608, 0.7592127919197083, 0.7623828053474426, 0.7676661014556885, 0.7607977986335754, 0.7676661014556885, 0.7786290049552917, 0.7754589915275574, 0.7898560166358948, 0.7921014428138733, 0.7946110367774963, 0.7931581139564514, 0.8012151718139648, 0.7976489067077637, 0.8031964302062988, 0.8063663840293884, 0.8096684813499451, 0.8125742673873901, 0.8064984679222107, 0.8170651197433472, 0.8185180425643921, 0.8144234418869019, 0.8185180425643921, 0.8198388814926147, 0.8234050869941711, 0.8215559124946594], "val_loss": [1.9166653156280518, 1.169367790222168, 0.9892516136169434, 0.7998702526092529, 0.7347402572631836, 0.6871602535247803, 0.6605185270309448, 0.6551620960235596, 0.647633969783783, 0.622683584690094, 0.5831584334373474, 0.6194486618041992, 0.6003934741020203, 0.5650874972343445, 0.5414114594459534, 0.5539341568946838, 0.5282935500144958, 0.5475803017616272, 0.5103915929794312, 0.5188455581665039, 0.5262221693992615, 0.4833121597766876, 0.5055987238883972, 0.5163906812667847, 0.48198506236076355, 0.48059871792793274, 0.47244760394096375, 0.4629269540309906, 0.49003076553344727, 0.45822834968566895, 0.4800772964954376, 0.4469252824783325, 0.4701274037361145, 0.4575667381286621, 0.4490666389465332, 0.43721410632133484, 0.43970897793769836], "val_accuracy": [0.5090000033378601, 0.6206666827201843, 0.6636666655540466, 0.7013333439826965, 0.7193333506584167, 0.7513333559036255, 0.7393333315849304, 0.7456666827201843, 0.7409999966621399, 0.7580000162124634, 0.7786666750907898, 0.7670000195503235, 0.7699999809265137, 0.777999997138977, 0.7896666526794434, 0.7889999747276306, 0.8036666512489319, 0.7916666865348816, 0.8103333115577698, 0.7963333129882812, 0.7996666431427002, 0.8209999799728394, 0.8036666512489319, 0.8016666769981384, 0.8236666917800903, 0.8166666626930237, 0.8166666626930237, 0.8289999961853027, 0.8096666932106018, 0.8309999704360962, 0.8186666369438171, 0.8370000123977661, 0.8203333616256714, 0.8213333487510681, 0.8276666402816772, 0.8343333601951599, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 7, 1, 3, 8, 2, 0, 6, 6, 1, 5, 8, 7, 4, 6, 5, 8, 7, 0, 3, 6], [2, 0, 3, 1, 0, 2, 2, 2, 5, 0, 2, 5, 5, 4, 4], [16, 31, 48], [0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 0, 0, 5, 2, 1], [1, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 37, 22, 15, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.divide_no_nan(grad, alpha)), tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.square(beta)), beta))), beta), tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.negative(grad))))), tf.math.multiply(grad, tf.math.divide_no_nan(grad, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [6, 8, 3, 2, 3, 5], [0, 1, 0, 1, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [5], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.multiply(tf.math.multiply(alpha, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [8.943977355957031, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1748778223991394, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [77.78423309326172, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 7, 4, 3, 3, 0, 7, 3, 0, 3, 3, 0, 8, 1, 9, 7, 1, 0, 8, 9, 1, 3, 6, 1, 0], [0, 1, 1, 0, 3, 1, 1, 2, 2, 0, 2, 2, 1, 0, 1, 2, 0, 0], [0, 68, 39, 53, 51, 8, 87, 74], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 48, 30, 18, 8, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.add(grad, alpha)), alpha)))), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(grad), tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(grad, tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), alpha)), grad)))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096232414245605, 2.308692455291748, 2.3094379901885986, 2.3094899654388428, 2.3091683387756348, 2.3103413581848145], "accuracy": [0.08915598690509796, 0.09470347315073013, 0.09338264167308807, 0.09272222965955734, 0.09430722147226334, 0.09576013684272766], "val_loss": [2.308198928833008, 2.308198928833008, 2.308198928833008, 2.308198928833008, 2.308198928833008, 2.308198928833008], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 2, 1, 0, 2], [0, 96, 39], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 9, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096656799316406, 2.3086822032928467, 2.3086304664611816, 2.3097140789031982, 2.309419870376587, 2.309943199157715], "accuracy": [0.09470347315073013, 0.09338264167308807, 0.0940430611371994, 0.09206181764602661, 0.09047681838274002, 0.09219389408826828], "val_loss": [2.3088700771331787, 2.3088700771331787, 2.3088700771331787, 2.3088700771331787, 2.3088700771331787, 2.3088700771331787], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}]