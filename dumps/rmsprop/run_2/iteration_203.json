[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2129123210906982, 1.617931604385376, 1.1527146100997925, 1.006441593170166, 0.897522509098053, 0.832394540309906, 0.8071648478507996, 0.7502400279045105, 0.7311022281646729, 0.7133165001869202, 0.6863167881965637, 0.7087721824645996, 0.6573443412780762, 0.6752665638923645, 0.631393313407898, 0.6277194023132324, 0.6048554182052612, 0.5905410647392273, 0.5909422636032104, 0.5841560363769531, 0.5588541030883789, 0.5563045740127563, 0.5726088881492615, 0.5390205383300781, 0.533191978931427, 0.5273050665855408, 0.5255832076072693, 0.5193008780479431, 0.49922803044319153, 0.5044910311698914, 0.49816274642944336, 0.4925400912761688, 0.4766758382320404, 0.4753885567188263, 0.48300832509994507, 0.47492432594299316, 0.45703125, 0.4588923752307892, 0.45756423473358154, 0.43722259998321533, 0.4417480230331421, 0.4400627315044403, 0.43742072582244873, 0.4200984835624695, 0.4186229705810547, 0.4211587607860565, 0.41616424918174744, 0.41472482681274414, 0.420099139213562], "accuracy": [0.26641130447387695, 0.5016510486602783, 0.5964865684509277, 0.633469820022583, 0.6709813475608826, 0.6944921612739563, 0.6999075412750244, 0.7239466309547424, 0.7296261787414551, 0.7269845604896545, 0.7461365461349487, 0.7368907928466797, 0.7508915662765503, 0.743891179561615, 0.7601373791694641, 0.7609298825263977, 0.7725531458854675, 0.7763835787773132, 0.7808743715286255, 0.785101056098938, 0.7926297783851624, 0.793950617313385, 0.7860256433486938, 0.8038568496704102, 0.8105930685997009, 0.8024039268493652, 0.805177628993988, 0.8083476424217224, 0.8165367841720581, 0.8161405324935913, 0.816008448600769, 0.8187822103500366, 0.8191784620285034, 0.8224804997444153, 0.8240655064582825, 0.8230088353157043, 0.8342359066009521, 0.8319904804229736, 0.8310658931732178, 0.8374059200286865, 0.8359529972076416, 0.8356888294219971, 0.8401796221733093, 0.8473120927810669, 0.8474441766738892, 0.8432175517082214, 0.8437458872795105, 0.8494254350662231, 0.8445383906364441], "val_loss": [1.9296282529830933, 1.0924633741378784, 0.9044778943061829, 0.8237158060073853, 0.7445567846298218, 0.7387316823005676, 0.6942477226257324, 0.6590144634246826, 0.6479136943817139, 0.6164216995239258, 0.7080846428871155, 0.6043025255203247, 0.5876314640045166, 0.5783013701438904, 0.5875639915466309, 0.5561053156852722, 0.5703880786895752, 0.5714768171310425, 0.5459262132644653, 0.5237879753112793, 0.5270717144012451, 0.5315912365913391, 0.521665632724762, 0.5084934234619141, 0.5266384482383728, 0.5052318572998047, 0.4931131601333618, 0.4951159358024597, 0.49100297689437866, 0.48738574981689453, 0.4758613705635071, 0.48188161849975586, 0.47190868854522705, 0.47006648778915405, 0.4632498025894165, 0.4590577781200409, 0.5030462145805359, 0.4530779719352722, 0.47296634316444397, 0.44262459874153137, 0.4564586579799652, 0.4590180516242981, 0.43816399574279785, 0.44425928592681885, 0.43755850195884705, 0.44387680292129517, 0.4535002112388611, 0.43794259428977966, 0.42690396308898926], "val_accuracy": [0.5049999952316284, 0.6676666736602783, 0.6696666479110718, 0.6890000104904175, 0.7200000286102295, 0.7136666774749756, 0.734333336353302, 0.753000020980835, 0.7546666860580444, 0.7706666588783264, 0.7260000109672546, 0.768666684627533, 0.7706666588783264, 0.7753333449363708, 0.7836666703224182, 0.7856666445732117, 0.7760000228881836, 0.7723333239555359, 0.7996666431427002, 0.8066666722297668, 0.8046666383743286, 0.7986666560173035, 0.8076666593551636, 0.8136666417121887, 0.8046666383743286, 0.8096666932106018, 0.8159999847412109, 0.8096666932106018, 0.8140000104904175, 0.8140000104904175, 0.8176666498184204, 0.8140000104904175, 0.8236666917800903, 0.8253333568572998, 0.8299999833106995, 0.8303333520889282, 0.8080000281333923, 0.8376666903495789, 0.8216666579246521, 0.8396666646003723, 0.8266666531562805, 0.8259999752044678, 0.8363333344459534, 0.8433333039283752, 0.8396666646003723, 0.8326666951179504, 0.8216666579246521, 0.8366666436195374, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 7, 2, 3, 5], [0, 2, 1, 0, 2], [0, 44, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 97], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3687.88525390625, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1608770340681076, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [226932539392.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [78, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 7, 0], [4, 6], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 0, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3085999488830566, 2.3100619316101074, 2.309591770172119, 2.3093419075012207, 2.3097808361053467, 2.3106558322906494], "accuracy": [0.09470347315073013, 0.09245806187391281, 0.09100515395402908, 0.08942015469074249, 0.10091137140989304, 0.09232597798109055], "val_loss": [2.3087000846862793, 2.3087000846862793, 2.3087000846862793, 2.3087000846862793, 2.3087000846862793, 2.3087000846862793], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 3, 2, 3, 5], [3, 2, 1, 0, 1], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 0, 2, 5, 2, 1, 7, 8, 9], [0, 6, 1, 6, 0], [0, 91, 99], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 2, 0, 1, 1, 0, 1, 0, 15, 10, 5, 3, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.add(grad, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30972957611084, 2.3100807666778564, 2.3107919692993164, 2.3106093406677246, 2.309701442718506, 2.3110086917877197], "accuracy": [0.09245806187391281, 0.09113723784685135, 0.09047681838274002, 0.09338264167308807, 0.0956280529499054, 0.08770307898521423], "val_loss": [2.309150457382202, 2.309150457382202, 2.309150457382202, 2.309150457382202, 2.309150457382202, 2.309150457382202], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 7, 3, 2, 3, 9, 1, 1, 0, 3, 8], [0, 2, 1, 0, 2, 1, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 7, 3, 8, 3], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 2, 5, 9], [0, 6, 1, 6, 0], [0, 42], [0, 1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 18, 11, 7, 3, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.negative(tf.math.multiply(tf.math.sqrt(alpha), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3100173473358154, 2.3090455532073975, 2.310344934463501, 2.3094334602355957, 2.3089892864227295, 2.3104255199432373], "accuracy": [0.09496764093637466, 0.09509972482919693, 0.09113723784685135, 0.09272222965955734, 0.09496764093637466, 0.09166556596755981], "val_loss": [2.3086423873901367, 2.3086423873901367, 2.3086423873901367, 2.3086423873901367, 2.3086423873901367, 2.3086423873901367], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]