[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8059999942779541, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209944725036621, 1.5990630388259888, 1.1724357604980469, 0.9814874529838562, 0.877050518989563, 0.8564836382865906, 0.7690578699111938, 0.7608675360679626, 0.7326223254203796, 0.7141767740249634, 0.6947397589683533, 0.6853792071342468, 0.6410787105560303, 0.6343621015548706, 0.6362615823745728, 0.6412133574485779, 0.6174690127372742, 0.5838040113449097, 0.5880613923072815], "accuracy": [0.26997753977775574, 0.5056135058403015, 0.5761458277702332, 0.6567164063453674, 0.6799629926681519, 0.683000922203064, 0.7234182953834534, 0.7185312509536743, 0.7260599732398987, 0.7308149337768555, 0.739928662776947, 0.7460044622421265, 0.7633073329925537, 0.76542067527771, 0.7643640041351318, 0.7565711140632629, 0.7652885913848877, 0.7824593782424927, 0.78113853931427], "val_loss": [1.9166353940963745, 1.1381380558013916, 0.8606336116790771, 0.8262342214584351, 0.7630410194396973, 0.6965259313583374, 0.6806502342224121, 0.644930362701416, 0.6305946707725525, 0.640399694442749, 0.609822154045105, 0.5957042574882507, 0.5979341268539429, 0.5688175559043884, 0.5808348655700684, 0.5629186034202576, 0.5647021532058716, 0.5765364766120911, 0.5362088084220886], "val_accuracy": [0.5476666688919067, 0.5693333148956299, 0.7056666612625122, 0.7009999752044678, 0.7233333587646484, 0.7459999918937683, 0.7450000047683716, 0.7639999985694885, 0.765333354473114, 0.7586666941642761, 0.778333306312561, 0.7803333401679993, 0.778333306312561, 0.793666660785675, 0.7749999761581421, 0.784333348274231, 0.7786666750907898, 0.7820000052452087, 0.7916666865348816]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 2, 5], [0, 2, 1, 0, 2], [0, 23, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [5, 2, 0, 5, 5, 2, 1], [0, 6, 1, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.7731428742408752, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.199310779571533, 1.529410719871521, 1.1137256622314453, 0.9448009133338928, 0.8385255932807922, 0.7932330965995789, 0.7901148200035095, 0.7510808706283569, 0.6939343810081482, 0.6792013645172119, 0.6784898638725281, 0.6630293130874634, 0.6484437584877014, 0.6517906785011292, 0.6156478524208069], "accuracy": [0.27037379145622253, 0.48329150676727295, 0.6037511825561523, 0.6557918190956116, 0.6833971738815308, 0.7061154246330261, 0.7012283802032471, 0.7205125093460083, 0.743891179561615, 0.7457403540611267, 0.7423061728477478, 0.748778223991394, 0.7559106945991516, 0.7532690763473511, 0.770439863204956], "val_loss": [1.7668921947479248, 0.9962441325187683, 0.8937323689460754, 0.8364105820655823, 0.7889469265937805, 0.7253695726394653, 0.6517274379730225, 0.6598575711250305, 0.6761621236801147, 0.602552592754364, 0.6295102834701538, 0.5896604657173157, 0.5740068554878235, 0.5931243300437927, 0.5798226594924927], "val_accuracy": [0.5576666593551636, 0.6573333144187927, 0.6583333611488342, 0.6783333420753479, 0.6970000267028809, 0.7049999833106995, 0.7583333253860474, 0.7543333172798157, 0.7043333053588867, 0.7706666588783264, 0.7413333058357239, 0.7680000066757202, 0.7696666717529297, 0.7483333349227905, 0.7573333382606506]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 2, 6, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 1, 4, 2, 5, 1, 8, 4, 4, 7, 8, 9], [2, 0, 3, 0, 0, 2, 4, 4, 1], [16, 1, 24, 66], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0, 2], [93, 62], [1], [0], [5], [0]], "fitness": -0.1428571492433548, "mapping_values": [1, 2, 1, 1, 1, 24, 15, 9, 4, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.math.sqrt(tf.math.pow(tf.math.pow(grad, tf.math.add(tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, grad))))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.295711040496826, 2.2348005771636963, 2.1837172508239746, 2.30513596534729, 2.3037681579589844, 2.303018808364868, 2.302974224090576], "accuracy": [0.19719983637332916, 0.18399155139923096, 0.20684190094470978, 0.10157178342342377, 0.09509972482919693, 0.09853387624025345, 0.09972262382507324], "val_loss": [2.313793182373047, 2.2718896865844727, 2.3063104152679443, 2.302976369857788, 2.302790641784668, 2.302565574645996, 2.302400827407837], "val_accuracy": [0.10100000351667404, 0.1420000046491623, 0.1003333330154419, 0.10166666656732559, 0.10133333504199982, 0.10233332961797714, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 28, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 4, 2, 9, 2, 1], [0, 0, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 4, 3, 2, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3087222576141357, 2.3093323707580566, 2.3090367317199707, 2.3100643157958984, 2.309253454208374, 2.3109660148620605], "accuracy": [0.09721305221319199, 0.0886276587843895, 0.09655263274908066, 0.09192973375320435, 0.08981640636920929, 0.08915598690509796], "val_loss": [2.308553695678711, 2.308553695678711, 2.308553695678711, 2.308553695678711, 2.308553695678711, 2.308553695678711], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]