[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2090816497802734, 1.6040464639663696, 1.125432014465332, 0.9813864231109619, 0.8888503909111023, 0.8080973625183105, 0.7793945670127869, 0.7370519638061523, 0.7400557398796082, 0.6918590068817139, 0.696395993232727, 0.6792519092559814, 0.647882342338562, 0.6363414525985718, 0.6182730793952942, 0.6178754568099976, 0.5942751169204712, 0.6016756296157837, 0.5767790675163269, 0.582216203212738, 0.5669676065444946, 0.54449063539505, 0.5559038519859314, 0.5399380922317505, 0.5299220681190491, 0.5349252223968506, 0.5291078686714172, 0.5121790170669556, 0.5080525875091553, 0.49230751395225525, 0.49819958209991455, 0.4851140081882477, 0.49215447902679443, 0.4732729196548462, 0.48092228174209595, 0.4579443633556366, 0.4624219834804535, 0.4635796844959259, 0.4566646218299866, 0.4465802013874054, 0.4474770724773407, 0.4456978440284729, 0.4376313388347626, 0.4361693561077118], "accuracy": [0.27063795924186707, 0.5081230998039246, 0.609959065914154, 0.650640606880188, 0.6770572066307068, 0.7051908373832703, 0.7161537408828735, 0.7284374833106995, 0.7244749665260315, 0.7433628439903259, 0.7392682433128357, 0.7478536367416382, 0.7565711140632629, 0.7607977986335754, 0.7672698497772217, 0.7642319202423096, 0.7751948237419128, 0.7732135653495789, 0.7829877138137817, 0.7820631265640259, 0.7872143983840942, 0.7936864495277405, 0.7860256433486938, 0.7988376617431641, 0.8005547523498535, 0.7954035401344299, 0.8031964302062988, 0.8109893202781677, 0.8121780753135681, 0.8211596608161926, 0.8142913579940796, 0.8204993009567261, 0.8182538747787476, 0.8259146809577942, 0.8249900937080383, 0.8325188159942627, 0.8298771381378174, 0.8300092220306396, 0.8298771381378174, 0.8358209133148193, 0.8337075710296631, 0.8401796221733093, 0.8396512866020203, 0.8368775844573975], "val_loss": [1.9177665710449219, 1.1049693822860718, 0.8985706567764282, 0.761437177658081, 0.7304502129554749, 0.7032540440559387, 0.6429672241210938, 0.6563646793365479, 0.6317630410194397, 0.6091296672821045, 0.6489568948745728, 0.5864577293395996, 0.5824835896492004, 0.5546213388442993, 0.5427964925765991, 0.5587599873542786, 0.547804057598114, 0.5409612059593201, 0.5401670932769775, 0.5085733532905579, 0.5081308484077454, 0.5580593347549438, 0.509957492351532, 0.5027048587799072, 0.5101625323295593, 0.5004904866218567, 0.5000195503234863, 0.47586697340011597, 0.46851488947868347, 0.4755537509918213, 0.4635624885559082, 0.4789738655090332, 0.4553565979003906, 0.4489183723926544, 0.44553372263908386, 0.4456164240837097, 0.44309359788894653, 0.4496921896934509, 0.4325387477874756, 0.42887425422668457, 0.4226453900337219, 0.4362123906612396, 0.42745694518089294, 0.4421204924583435], "val_accuracy": [0.5576666593551636, 0.6503333449363708, 0.6836666464805603, 0.7283333539962769, 0.7319999933242798, 0.7353333234786987, 0.7519999742507935, 0.734666645526886, 0.7670000195503235, 0.7596666812896729, 0.7540000081062317, 0.7606666684150696, 0.7773333191871643, 0.7919999957084656, 0.8026666641235352, 0.7836666703224182, 0.7960000038146973, 0.7903333306312561, 0.7833333611488342, 0.8196666836738586, 0.8056666851043701, 0.781000018119812, 0.7986666560173035, 0.8243333101272583, 0.8113333582878113, 0.8190000057220459, 0.8036666512489319, 0.8296666741371155, 0.8336666822433472, 0.8293333053588867, 0.8349999785423279, 0.824999988079071, 0.8349999785423279, 0.8336666822433472, 0.8306666612625122, 0.8433333039283752, 0.8343333601951599, 0.8270000219345093, 0.8486666679382324, 0.8486666679382324, 0.8456666469573975, 0.840666651725769, 0.843666672706604, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 2, 3, 5], [0, 2, 0, 0, 2], [0, 55, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 0, 6, 3, 8, 2, 6], [5, 0, 3, 1, 0, 0, 4], [16, 1, 82], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 7, 0], [0, 22], [1], [0], [7], [0]], "fitness": -0.4099999964237213, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 3, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3082849979400635, 2.729877233505249, 2.2743139266967773, 2.704270362854004, 2.305427312850952, 2.2607853412628174, 2.2614834308624268, 1.9856425523757935], "accuracy": [0.1982565075159073, 0.16470743715763092, 0.13921542465686798, 0.15493330359458923, 0.10619468986988068, 0.14991414546966553, 0.14529123902320862, 0.3259807229042053], "val_loss": [2.240750312805176, 2.3049654960632324, 1.8973162174224854, 2.307906150817871, 2.2991983890533447, 2.2991294860839844, 2.090641498565674, 1.9315974712371826], "val_accuracy": [0.1966666728258133, 0.0976666659116745, 0.40666666626930237, 0.10166666656732559, 0.10700000077486038, 0.10866666585206985, 0.2616666555404663, 0.3713333308696747]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 2, 3, 2, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [4, 0, 5, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [2, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.19428572058677673, "mapping_values": [1, 5, 2, 3, 2, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.2779111862182617, 3.4251503944396973, NaN, NaN, NaN, NaN], "accuracy": [0.18451987206935883, 0.1138555034995079, 0.108440101146698, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2893264293670654, 2.5230510234832764, NaN, NaN, NaN, NaN], "val_accuracy": [0.19066666066646576, 0.10466666519641876, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 4, 2, 8, 5], [0, 2, 1, 0, 2], [96, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 3, 3, 1, 0], [42, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 4, 7, 6, 5, 7, 4, 0, 6, 5, 5, 7, 2, 1, 4, 0, 5, 7, 9, 0, 8, 6, 6, 3, 0, 2, 9, 1, 0, 1, 7, 1, 8, 0, 1, 6, 4, 0, 1, 9, 8, 0, 0, 4, 0, 5, 3, 7, 4, 5, 0, 5, 0, 8, 9, 5, 0, 3], [0, 6, 1, 6, 0, 5, 0, 1, 5, 4, 0, 5, 4, 4, 7, 2, 6, 2, 6, 3, 1, 5, 7, 4, 6, 6, 4, 2, 7], [0, 22, 62, 78, 19, 95, 17, 27], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 3, 2, 0, 93, 64, 29, 8, 1, 0, 1, 0], "tree_depth": 57, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(grad, alpha), grad), tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.square(grad)), tf.math.add(grad, tf.math.add(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.square(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(grad, grad)))))), tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.negative(beta))))), tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.subtract(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(sigma), alpha))))), tf.math.square(tf.math.multiply(tf.math.add(grad, tf.math.pow(grad, tf.math.square(grad))), tf.math.negative(grad))))))), grad), tf.math.square(tf.math.negative(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.negative(tf.math.multiply(grad, beta)))))))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [38.35097885131836, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20895522832870483, 0.10553427785634995, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [82.23734283447266, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 44, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 5, 3, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303377389907837, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]