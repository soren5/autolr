[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2056753635406494, 1.58808434009552, 1.1608152389526367, 0.9786341190338135, 0.8824833035469055, 0.8172888159751892, 0.7951244711875916, 0.7516737580299377, 0.7258403897285461, 0.6810647249221802, 0.6704842448234558, 0.6691341996192932, 0.6452905535697937, 0.6316262483596802, 0.6103971004486084, 0.5923684239387512, 0.6061239242553711, 0.5956430435180664, 0.5813474059104919, 0.573147714138031, 0.5581353306770325, 0.5458837747573853, 0.5360124707221985, 0.5472079515457153, 0.530702531337738, 0.5112146735191345, 0.5184899568557739, 0.5164166688919067, 0.4938318431377411, 0.48804494738578796, 0.4905635118484497, 0.4767618477344513, 0.4790608286857605, 0.4753994345664978, 0.4777500629425049, 0.45911142230033875, 0.4549918472766876, 0.44915950298309326, 0.4396495521068573, 0.4411521553993225, 0.43067440390586853, 0.4297120273113251, 0.4286041557788849, 0.42406928539276123, 0.42264866828918457, 0.41005170345306396, 0.4132350981235504, 0.4174635112285614, 0.4027591645717621, 0.40324676036834717, 0.4012899696826935, 0.3961896300315857, 0.39026132225990295, 0.38908934593200684, 0.39112764596939087, 0.37953314185142517, 0.3756994605064392, 0.38582643866539, 0.3724748492240906, 0.37567123770713806, 0.37062302231788635, 0.3704579174518585, 0.3589476943016052, 0.3707965612411499, 0.3610382080078125, 0.35495492815971375, 0.3596639335155487, 0.34931355714797974, 0.3505857586860657, 0.3473304510116577, 0.34816423058509827, 0.32983624935150146, 0.3361996114253998], "accuracy": [0.2728833854198456, 0.5111610293388367, 0.6032228469848633, 0.6477347612380981, 0.681547999382019, 0.7010962963104248, 0.7129837274551392, 0.719852089881897, 0.7376832365989685, 0.7446836829185486, 0.755118191242218, 0.7565711140632629, 0.7585523724555969, 0.7697794437408447, 0.7755910754203796, 0.7837802171707153, 0.7737419009208679, 0.7810064554214478, 0.7872143983840942, 0.7864218950271606, 0.7903843522071838, 0.7973847389221191, 0.8053097128868103, 0.8041210174560547, 0.8087438941001892, 0.8190463781356812, 0.809140145778656, 0.8101968169212341, 0.822348415851593, 0.8204993009567261, 0.8211596608161926, 0.8232730031013489, 0.829216718673706, 0.8255184292793274, 0.8201030492782593, 0.8338396549224854, 0.8318583965301514, 0.8294808864593506, 0.8391229510307312, 0.8378021121025085, 0.8450667262077332, 0.8449346423149109, 0.8380662798881531, 0.846387505531311, 0.8487650156021118, 0.8500858545303345, 0.852331280708313, 0.8499537706375122, 0.8498216867446899, 0.8520671129226685, 0.8504821062088013, 0.8541803956031799, 0.8565579056739807, 0.8545766472816467, 0.852859616279602, 0.8607845902442932, 0.863029956817627, 0.8569541573524475, 0.8602562546730042, 0.8640866279602051, 0.8636903762817383, 0.8621054291725159, 0.868049144744873, 0.8632941246032715, 0.8651432991027832, 0.8728041052818298, 0.868049144744873, 0.8730682730674744, 0.869502067565918, 0.8746532797813416, 0.8716153502464294, 0.878879964351654, 0.8721436858177185], "val_loss": [1.9083415269851685, 1.080003261566162, 0.8921946883201599, 0.8401549458503723, 0.7335507273674011, 0.7484064102172852, 0.6545791625976562, 0.6846189498901367, 0.6485214829444885, 0.6955142617225647, 0.6170346736907959, 0.6711599230766296, 0.5783951282501221, 0.5780813097953796, 0.5729156732559204, 0.5791525840759277, 0.5873660445213318, 0.5263961553573608, 0.5562779903411865, 0.5310505628585815, 0.5206740498542786, 0.5148358941078186, 0.5201284289360046, 0.49328115582466125, 0.4927328824996948, 0.5500399470329285, 0.4795463979244232, 0.48065128922462463, 0.47943517565727234, 0.4862959384918213, 0.47808557748794556, 0.4812396764755249, 0.45728540420532227, 0.4635525047779083, 0.4580501317977905, 0.4499257504940033, 0.4787062108516693, 0.46085721254348755, 0.4456973969936371, 0.4430024325847626, 0.4362980127334595, 0.4400022029876709, 0.44468507170677185, 0.4432929754257202, 0.430746465921402, 0.4344734251499176, 0.4318310618400574, 0.4348478615283966, 0.43108904361724854, 0.42603954672813416, 0.42564573884010315, 0.422017365694046, 0.4210488796234131, 0.4268958270549774, 0.4263911843299866, 0.4150026738643646, 0.414109468460083, 0.41496536135673523, 0.4187445342540741, 0.41357776522636414, 0.3989759385585785, 0.400983065366745, 0.3950011432170868, 0.4024735987186432, 0.3990747928619385, 0.40334734320640564, 0.3978266716003418, 0.3949483335018158, 0.4106801748275757, 0.4026060104370117, 0.40117719769477844, 0.39814692735671997, 0.4070318937301636], "val_accuracy": [0.5796666741371155, 0.6736666560173035, 0.6753333210945129, 0.6886666417121887, 0.7350000143051147, 0.7196666598320007, 0.762333333492279, 0.7443333268165588, 0.7553333044052124, 0.7250000238418579, 0.765333354473114, 0.7333333492279053, 0.7836666703224182, 0.7886666655540466, 0.7846666574478149, 0.7776666879653931, 0.7746666669845581, 0.8069999814033508, 0.7943333387374878, 0.8076666593551636, 0.8076666593551636, 0.8193333148956299, 0.8080000281333923, 0.8203333616256714, 0.815666675567627, 0.796999990940094, 0.8263333439826965, 0.8276666402816772, 0.8326666951179504, 0.8270000219345093, 0.8176666498184204, 0.8220000267028809, 0.8386666774749756, 0.8360000252723694, 0.8396666646003723, 0.8420000076293945, 0.8236666917800903, 0.8339999914169312, 0.8416666388511658, 0.8423333168029785, 0.8446666598320007, 0.8446666598320007, 0.8339999914169312, 0.8413333296775818, 0.8489999771118164, 0.8453333377838135, 0.8463333249092102, 0.8429999947547913, 0.8416666388511658, 0.8506666421890259, 0.8463333249092102, 0.8553333282470703, 0.8529999852180481, 0.8496666550636292, 0.8473333120346069, 0.8566666841506958, 0.8513333201408386, 0.8479999899864197, 0.8446666598320007, 0.8533333539962769, 0.8586666584014893, 0.859666645526886, 0.8616666793823242, 0.8556666374206543, 0.8579999804496765, 0.8550000190734863, 0.8603333234786987, 0.8619999885559082, 0.8519999980926514, 0.8566666841506958, 0.8616666793823242, 0.8579999804496765, 0.856333315372467]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [0, 10, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 7, 0, 6, 3, 6, 2], [2, 0, 3, 1, 0, 0], [16, 1, 94], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [5, 5, 1], [0, 22], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 7, 6, 3, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 2, 1, 4, 8, 0, 4, 9], [0, 0, 1, 3, 2, 2, 1, 3], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 1, 1], [0, 6, 1, 6, 0], [0, 2], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 3, 10, 6, 4, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.math.subtract(grad, tf.math.pow(grad, grad)), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2, 0], [2, 5, 3, 1, 0], [37, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 3, 9], [0, 6, 1, 2, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 13, 8, 5, 1, 10, 7, 3, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(grad)), tf.math.add(tf.math.negative(alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 4, 3, 1, 2, 4, 3, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310070037841797, 2.30948805809021, 2.3103580474853516, 2.3097290992736816, 2.3087384700775146, 2.309065341949463], "accuracy": [0.08942015469074249, 0.09325055778026581, 0.08651433140039444, 0.09325055778026581, 0.09377889335155487, 0.09259014576673508], "val_loss": [2.3085289001464844, 2.3085289001464844, 2.3085289001464844, 2.3085289001464844, 2.3085289001464844, 2.3085289001464844], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]