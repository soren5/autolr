[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2094128131866455, 1.5982728004455566, 1.1538012027740479, 0.9757634401321411, 0.8748524188995361, 0.8362089395523071, 0.778654932975769, 0.7719631791114807, 0.7209839224815369, 0.7088975310325623, 0.7112149596214294, 0.6803183555603027, 0.6562278270721436, 0.6434440016746521, 0.6184104681015015, 0.6227989792823792, 0.6050134301185608, 0.5902746915817261, 0.5802968144416809, 0.5732206106185913, 0.5786532163619995, 0.5703235864639282, 0.5571168661117554, 0.537988007068634, 0.5354984402656555, 0.5332790017127991, 0.5128955841064453, 0.5265150666236877, 0.5096312761306763, 0.5033442974090576, 0.4992664158344269, 0.49706095457077026, 0.4874051511287689, 0.48223286867141724, 0.4741933345794678, 0.4664681553840637, 0.4712494909763336, 0.4608725905418396, 0.4558163583278656, 0.4565983712673187, 0.44928064942359924, 0.44002479314804077, 0.4441189467906952, 0.42825251817703247, 0.43138644099235535], "accuracy": [0.260071337223053, 0.4991414546966553, 0.5934486985206604, 0.654999315738678, 0.6822084188461304, 0.6886804699897766, 0.7137762308120728, 0.7137762308120728, 0.7316074371337891, 0.7357020378112793, 0.7268524765968323, 0.7469290494918823, 0.7588165402412415, 0.7592127919197083, 0.7666094303131104, 0.7680623531341553, 0.7705719470977783, 0.7778365015983582, 0.7804781198501587, 0.7923656105995178, 0.7820631265640259, 0.7848368883132935, 0.7931581139564514, 0.8014793395996094, 0.8024039268493652, 0.8000264167785645, 0.8087438941001892, 0.8062343001365662, 0.8140271902084351, 0.8107251524925232, 0.8149517774581909, 0.8164047002792358, 0.8228767514228821, 0.8169330358505249, 0.8247259259223938, 0.8284242749214172, 0.8232730031013489, 0.829216718673706, 0.8281601071357727, 0.8313300609588623, 0.8341038227081299, 0.8372738361358643, 0.8378021121025085, 0.8442742228507996, 0.8399154543876648], "val_loss": [1.9179050922393799, 1.105154037475586, 0.9071975946426392, 0.8508318066596985, 0.7011992931365967, 0.6960457563400269, 0.6725530028343201, 0.6278873085975647, 0.6812795400619507, 0.5933915376663208, 0.5759482979774475, 0.5555816888809204, 0.5718351006507874, 0.5695544481277466, 0.5528189539909363, 0.5293335914611816, 0.5170067548751831, 0.5333964824676514, 0.5081592798233032, 0.503237247467041, 0.4873058795928955, 0.4856449067592621, 0.5010908246040344, 0.467441201210022, 0.516310453414917, 0.4648459851741791, 0.4950227737426758, 0.45060238242149353, 0.45135098695755005, 0.4581211805343628, 0.46062996983528137, 0.4552296996116638, 0.4373762309551239, 0.4394952058792114, 0.4281153976917267, 0.4339684247970581, 0.42316389083862305, 0.42405664920806885, 0.4133826196193695, 0.4180911183357239, 0.42079851031303406, 0.41139960289001465, 0.40350741147994995, 0.40666088461875916, 0.4053962528705597], "val_accuracy": [0.4763333201408386, 0.6696666479110718, 0.6850000023841858, 0.6943333148956299, 0.75, 0.7473333477973938, 0.7616666555404663, 0.7760000228881836, 0.7253333330154419, 0.7756666541099548, 0.7896666526794434, 0.8009999990463257, 0.7903333306312561, 0.7913333177566528, 0.7873333096504211, 0.8023333549499512, 0.8103333115577698, 0.7986666560173035, 0.8109999895095825, 0.8106666803359985, 0.8193333148956299, 0.8240000009536743, 0.8140000104904175, 0.828000009059906, 0.7953333258628845, 0.8223333358764648, 0.8136666417121887, 0.8303333520889282, 0.8293333053588867, 0.8276666402816772, 0.8293333053588867, 0.8330000042915344, 0.8389999866485596, 0.8363333344459534, 0.840666651725769, 0.8339999914169312, 0.8450000286102295, 0.8363333344459534, 0.8489999771118164, 0.8516666889190674, 0.8446666598320007, 0.8500000238418579, 0.8516666889190674, 0.847000002861023, 0.8496666550636292]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2129721641540527, 1.6095762252807617, 1.154282808303833, 0.958427369594574, 0.9169329404830933, 0.8267349600791931, 0.7773522734642029, 0.7518165707588196, 0.7343524098396301, 0.7021023631095886, 0.6803818345069885, 0.6748371720314026, 0.6575139164924622, 0.633410632610321, 0.6035845875740051, 0.6307167410850525, 0.5944404602050781, 0.5955958962440491, 0.5815122723579407, 0.5618703961372375, 0.5709251761436462, 0.5522730946540833, 0.5443692803382874, 0.5380623936653137, 0.5203051567077637, 0.5215551853179932, 0.5270690321922302, 0.5022361874580383, 0.5148693323135376, 0.49480053782463074], "accuracy": [0.2583542466163635, 0.5003302097320557, 0.5983357429504395, 0.6502443552017212, 0.672698438167572, 0.6995112895965576, 0.713908314704895, 0.7239466309547424, 0.7280412316322327, 0.7411174178123474, 0.7504953145980835, 0.7512878179550171, 0.7555144429206848, 0.7637035846710205, 0.776251494884491, 0.7644960880279541, 0.7775723338127136, 0.7755910754203796, 0.7848368883132935, 0.7976489067077637, 0.7852331399917603, 0.7935543656349182, 0.7969884872436523, 0.7989697456359863, 0.8107251524925232, 0.8080834746360779, 0.8021397590637207, 0.8186501264572144, 0.811649739742279, 0.8145555257797241], "val_loss": [1.9319523572921753, 1.0933619737625122, 0.850999653339386, 0.8464918732643127, 0.731063961982727, 0.7148171663284302, 0.6941505670547485, 0.6897522807121277, 0.6670534014701843, 0.6071892976760864, 0.6450258493423462, 0.6027372479438782, 0.5544359683990479, 0.5510681867599487, 0.5664692521095276, 0.5404251217842102, 0.5668954253196716, 0.5575082302093506, 0.5123769640922546, 0.5404064655303955, 0.5038784146308899, 0.4965352416038513, 0.5221922397613525, 0.4862041473388672, 0.46898436546325684, 0.4760196805000305, 0.46939876675605774, 0.49763500690460205, 0.48400789499282837, 0.4693969190120697], "val_accuracy": [0.4793333411216736, 0.6446666717529297, 0.7110000252723694, 0.6996666789054871, 0.7273333072662354, 0.7160000205039978, 0.7350000143051147, 0.7310000061988831, 0.7586666941642761, 0.7649999856948853, 0.7446666955947876, 0.7553333044052124, 0.7889999747276306, 0.784333348274231, 0.7823333144187927, 0.7943333387374878, 0.7643333077430725, 0.7879999876022339, 0.8023333549499512, 0.7896666526794434, 0.8026666641235352, 0.8143333196640015, 0.7976666688919067, 0.8173333406448364, 0.824999988079071, 0.824999988079071, 0.8226666450500488, 0.8026666641235352, 0.8190000057220459, 0.8203333616256714]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 49], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [17], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 1, 0, 4, 1, 1, 0, 0], [0, 0, 1, 0, 2, 1, 0, 0, 3], [0, 39, 39, 69, 73], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 2, 0, 6, 8, 8, 2, 0, 3, 6, 2, 6], [3, 0, 0, 1, 0, 2, 4, 1, 3], [16, 1, 58], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 1, 5, 9, 4, 1, 0, 5], [0, 6, 1, 3, 2], [0, 52], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 5, 21, 12, 9, 3, 17, 12, 5, 2, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.negative(tf.math.pow(grad, alpha)), tf.math.subtract(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))), tf.math.negative(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.add(grad, tf.math.divide_no_nan(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.subtract(tf.math.negative(alpha), tf.math.square(sigma)), beta))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 5, 5], [0, 0, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9], [2, 0, 0, 1, 5], [16, 1, 80], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [78], [1], [0], [0], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 4, 2, 2, 2, 10, 7, 3, 3, 5, 3, 2, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3108842372894287, 2.309453248977661, 2.309774875640869, 2.309969902038574, 2.3100104331970215, 2.310283899307251], "accuracy": [0.09721305221319199, 0.09272222965955734, 0.0948355570435524, 0.09391097724437714, 0.09338264167308807, 0.09179764986038208], "val_loss": [2.308865547180176, 2.308865547180176, 2.308865547180176, 2.308865547180176, 2.308865547180176, 2.308865547180176], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2, 0], [0, 39, 39, 20], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 5, 6, 3, 8, 1], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 11, 5, 6, 4, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104000091552734, 2.310511589050293, 2.30998158454895, 2.3099255561828613, 2.309476613998413, 2.3098316192626953], "accuracy": [0.09285431355237961, 0.09074098616838455, 0.09457138925790787, 0.09298639744520187, 0.09417514503002167, 0.10051512718200684], "val_loss": [2.3096976280212402, 2.3096976280212402, 2.3096976280212402, 2.3096976280212402, 2.3096976280212402, 2.3096976280212402], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]