[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2136945724487305, 1.614917278289795, 1.1535954475402832, 0.9496275782585144, 0.8961831331253052, 0.8002325892448425, 0.784238338470459, 0.7337743639945984, 0.7070613503456116, 0.713050901889801, 0.6816356182098389, 0.6497737169265747, 0.6451564431190491, 0.629905104637146, 0.6238677501678467, 0.5959339737892151, 0.5969985723495483, 0.5755296945571899, 0.5756374597549438, 0.570521354675293, 0.5540395379066467, 0.5530298352241516, 0.5278840661048889, 0.5201677083969116, 0.5280513763427734, 0.5080810785293579, 0.4990888237953186, 0.506346583366394, 0.484849750995636, 0.493947297334671, 0.48432818055152893, 0.4790101647377014, 0.47538313269615173, 0.47519242763519287, 0.4718610346317291], "accuracy": [0.2645621597766876, 0.5075947642326355, 0.5947695374488831, 0.6616035103797913, 0.6716417670249939, 0.7104741930961609, 0.7096816897392273, 0.7304186820983887, 0.7396644949913025, 0.7341170310974121, 0.7403249144554138, 0.7548540234565735, 0.752740740776062, 0.7600052952766418, 0.7652885913848877, 0.7740060687065125, 0.7687227725982666, 0.7860256433486938, 0.7828556299209595, 0.7873464822769165, 0.7910447716712952, 0.7884030938148499, 0.804649293422699, 0.8075551390647888, 0.8043851256370544, 0.8157442808151245, 0.8131026029586792, 0.8131026029586792, 0.8168009519577026, 0.81548011302948, 0.8195747137069702, 0.8238013386726379, 0.8219521641731262, 0.8245938420295715, 0.8257825970649719], "val_loss": [1.9355990886688232, 1.1072547435760498, 0.8720129132270813, 0.7779661417007446, 0.72747403383255, 0.7116134166717529, 0.6729048490524292, 0.6275471448898315, 0.6980583667755127, 0.6549221277236938, 0.6544288992881775, 0.6206592321395874, 0.5689428448677063, 0.5741358995437622, 0.5607233643531799, 0.5601950883865356, 0.5390116572380066, 0.5278870463371277, 0.5359777808189392, 0.5387036800384521, 0.5069236159324646, 0.5162144899368286, 0.499418705701828, 0.5247700214385986, 0.4870279133319855, 0.48817747831344604, 0.477430135011673, 0.4718966484069824, 0.47074300050735474, 0.45950716733932495, 0.46987882256507874, 0.47270849347114563, 0.45145589113235474, 0.46306881308555603, 0.46199971437454224], "val_accuracy": [0.5920000076293945, 0.6416666507720947, 0.6949999928474426, 0.7066666483879089, 0.7336666584014893, 0.737333357334137, 0.7319999933242798, 0.753333330154419, 0.7106666564941406, 0.7369999885559082, 0.737333357334137, 0.7506666779518127, 0.7789999842643738, 0.7879999876022339, 0.7789999842643738, 0.7789999842643738, 0.7906666398048401, 0.7946666479110718, 0.7833333611488342, 0.7876666784286499, 0.8130000233650208, 0.7993333339691162, 0.8063333630561829, 0.7940000295639038, 0.8159999847412109, 0.8106666803359985, 0.8216666579246521, 0.8243333101272583, 0.8146666884422302, 0.8306666612625122, 0.8173333406448364, 0.8263333439826965, 0.8289999961853027, 0.8196666836738586, 0.8206666707992554]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 7], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [2, 9, 1, 6, 3, 8, 2], [2, 0, 5, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 6, 2, 0], [3, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 2, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(sigma, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6.902576923370361, 51.97911071777344, 179.7447052001953, 434.3404541015625, 876.0768432617188, 1546.74169921875], "accuracy": [0.10117553919553757, 0.10077928751707077, 0.09549596905708313, 0.10077928751707077, 0.10196803510189056, 0.09932637959718704], "val_loss": [18.53240394592285, 85.21171569824219, 233.2606658935547, 504.64007568359375, 941.1922607421875, 1585.17138671875], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 0], [0, 39, 39, 24], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 8, 9, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 3], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 8, 2, 5], [1, 6, 1], [0], [1], [0], [0], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 7, 4, 4, 3, 3, 0, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310009479522705, 2.3102777004241943, 2.3108394145965576, 2.310992479324341, 2.309446096420288, 2.3104701042175293], "accuracy": [0.09219389408826828, 0.09430722147226334, 0.0870426595211029, 0.08875974267721176, 0.08942015469074249, 0.08955223858356476], "val_loss": [2.3093111515045166, 2.3093111515045166, 2.3093111515045166, 2.3093111515045166, 2.3093111515045166, 2.3093111515045166], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [5, 63, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 7, 2, 5, 5, 1, 4, 5, 2, 4, 0, 1, 8], [0, 6, 1, 0, 5, 5, 5, 6, 1, 1], [0, 13], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 24, 14, 10, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.subtract(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.negative(grad))), tf.math.subtract(grad, tf.math.sqrt(grad)))), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310454845428467, 2.3107526302337646, 2.310652732849121, 2.310971260070801, 2.3096368312835693, 2.3098127841949463], "accuracy": [0.09298639744520187, 0.08955223858356476, 0.09219389408826828, 0.09100515395402908, 0.09113723784685135, 0.0940430611371994], "val_loss": [2.3086249828338623, 2.3086249828338623, 2.3086249828338623, 2.3086249828338623, 2.3086249828338623, 2.3086249828338623], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 6, 2, 5, 4, 5], [0, 6, 1, 7, 0], [0, 22], [1], [0], [3], [0]], "fitness": -0.08428571373224258, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, alpha)), grad), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [9.541748672467554e+27, 3.98737018547876e+29, 3.01433956763603e+30, 1.1591218235165473e+31, 3.155384640779014e+31, 7.176094204721787e+31], "accuracy": [0.0754193663597107, 0.08294808864593506, 0.07555144280195236, 0.07594769448041916, 0.07290978729724884, 0.07594769448041916], "val_loss": [6.315074304180608e+28, 1.0104128709211257e+30, 5.115215390434156e+30, 1.616660714366383e+31, 3.9469261615348893e+31, 8.184347526116617e+31], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]