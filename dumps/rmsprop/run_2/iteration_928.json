[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8002856969833374, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2086989879608154, 1.5939154624938965, 1.1242320537567139, 0.9698356986045837, 0.8898058533668518, 0.8313197493553162, 0.7958421111106873, 0.7545803785324097, 0.7350596189498901, 0.7171176075935364, 0.6890760660171509, 0.6646832227706909, 0.6789247393608093, 0.6377831101417542, 0.6535744667053223, 0.6102949976921082, 0.6151953339576721, 0.6077517867088318, 0.5913066864013672, 0.5789958834648132, 0.5755550861358643, 0.5554155111312866, 0.5535884499549866, 0.5569103360176086, 0.5319620370864868, 0.5488913059234619, 0.5266855955123901, 0.5273457765579224, 0.5130341053009033, 0.5074426531791687, 0.505411684513092, 0.5031092166900635, 0.480923056602478, 0.49038392305374146, 0.47146210074424744, 0.4771297872066498, 0.46693655848503113, 0.46280694007873535, 0.46708470582962036, 0.47202274203300476, 0.45988816022872925, 0.4610711336135864, 0.43906620144844055, 0.4459492266178131, 0.43606358766555786, 0.43603381514549255, 0.43488404154777527, 0.4257730543613434, 0.4181756377220154, 0.4187532067298889, 0.4144303798675537, 0.4103010594844818, 0.4068502187728882, 0.41148245334625244, 0.3920634090900421, 0.3931639790534973, 0.396154522895813, 0.384875625371933, 0.3950117528438568, 0.3879190683364868, 0.38057929277420044], "accuracy": [0.27327960729599, 0.509311854839325, 0.6112799048423767, 0.6604147553443909, 0.6756042838096619, 0.6976621150970459, 0.7077004313468933, 0.7239466309547424, 0.7310791015625, 0.7333245277404785, 0.7465327978134155, 0.754589855670929, 0.748778223991394, 0.7606657147407532, 0.7578919529914856, 0.7755910754203796, 0.7717606425285339, 0.772288978099823, 0.7840443849563599, 0.7852331399917603, 0.7860256433486938, 0.7921014428138733, 0.7954035401344299, 0.7943468689918518, 0.8017435073852539, 0.7943468689918518, 0.8058380484580994, 0.8038568496704102, 0.8108572363853455, 0.8149517774581909, 0.8107251524925232, 0.8125742673873901, 0.828292191028595, 0.8203672170639038, 0.8251221776008606, 0.8260467648506165, 0.8278959393501282, 0.8305375576019287, 0.8252542614936829, 0.8269713521003723, 0.8300092220306396, 0.8290846943855286, 0.8408400416374207, 0.8403117060661316, 0.8387266993522644, 0.8358209133148193, 0.8392550349235535, 0.8442742228507996, 0.846387505531311, 0.8499537706375122, 0.8486329317092896, 0.8506141901016235, 0.8518029451370239, 0.8441421389579773, 0.8537842035293579, 0.857218325138092, 0.8581429123878479, 0.8582749962806702, 0.8539162874221802, 0.8555012345314026, 0.8654074668884277], "val_loss": [1.9184833765029907, 1.1250275373458862, 0.9319490790367126, 0.7803087830543518, 0.7621168494224548, 0.7031610608100891, 0.6772699356079102, 0.65740966796875, 0.6370680928230286, 0.6105949878692627, 0.5934446454048157, 0.5658311247825623, 0.6152224540710449, 0.5753705501556396, 0.5534232258796692, 0.539423942565918, 0.544486939907074, 0.538347065448761, 0.5347420573234558, 0.5141407251358032, 0.5074610710144043, 0.4830230176448822, 0.48890528082847595, 0.47892528772354126, 0.4824739694595337, 0.46537256240844727, 0.46674105525016785, 0.4609423279762268, 0.45108434557914734, 0.44357699155807495, 0.44847142696380615, 0.43949443101882935, 0.44370752573013306, 0.4270934760570526, 0.43590831756591797, 0.4503308832645416, 0.4230409264564514, 0.43715861439704895, 0.42868009209632874, 0.4117099642753601, 0.4504839777946472, 0.40839558839797974, 0.411374032497406, 0.40942975878715515, 0.43163248896598816, 0.39276501536369324, 0.4036116600036621, 0.40051180124282837, 0.4020107686519623, 0.3943706452846527, 0.39352917671203613, 0.402736097574234, 0.38427358865737915, 0.3899361491203308, 0.38224244117736816, 0.3847008943557739, 0.3856956660747528, 0.37770384550094604, 0.3732571601867676, 0.37541714310646057, 0.3741992115974426], "val_accuracy": [0.5889999866485596, 0.6446666717529297, 0.6669999957084656, 0.7110000252723694, 0.6909999847412109, 0.7293333411216736, 0.7403333187103271, 0.7436666488647461, 0.7433333396911621, 0.768666684627533, 0.7643333077430725, 0.7766666412353516, 0.7450000047683716, 0.7756666541099548, 0.7699999809265137, 0.7850000262260437, 0.7850000262260437, 0.8073333501815796, 0.7853333353996277, 0.8050000071525574, 0.8013333082199097, 0.8116666674613953, 0.8133333325386047, 0.8080000281333923, 0.8133333325386047, 0.8183333277702332, 0.8119999766349792, 0.8133333325386047, 0.8173333406448364, 0.8303333520889282, 0.8259999752044678, 0.8309999704360962, 0.824999988079071, 0.8309999704360962, 0.8263333439826965, 0.8216666579246521, 0.8330000042915344, 0.8326666951179504, 0.8299999833106995, 0.8376666903495789, 0.828000009059906, 0.840666651725769, 0.8416666388511658, 0.8423333168029785, 0.8236666917800903, 0.8453333377838135, 0.8413333296775818, 0.8460000157356262, 0.847000002861023, 0.8476666808128357, 0.8410000205039978, 0.8416666388511658, 0.8463333249092102, 0.8463333249092102, 0.8486666679382324, 0.8546666502952576, 0.8486666679382324, 0.8479999899864197, 0.8533333539962769, 0.8523333072662354, 0.8473333120346069]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 8, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [8, 2, 0, 2, 5, 2, 1, 1, 7, 9, 1], [0, 6, 1, 6, 0, 7, 0], [0, 40, 50, 89], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 10, 6, 4, 1, 18, 11, 7, 4, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.subtract(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 5, 3, 2, 3, 4], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [52, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 2, 8, 2, 5, 2, 1], [0, 6, 1, 2, 0], [0, 22], [0, 0, 0, 0, 1], [0, 5, 5, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 12, 7, 5, 2, 12, 7, 5, 2, 5, 4, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, beta)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.square(tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 9, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [89, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [2, 6, 2, 2, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(grad, tf.math.subtract(beta, beta)))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3109891414642334, 2.3105967044830322, 2.3106045722961426, 2.311544418334961, 2.30991268157959, 2.3103344440460205], "accuracy": [0.09232597798109055, 0.09206181764602661, 0.09034473448991776, 0.09060890227556229, 0.08691058307886124, 0.08902391046285629], "val_loss": [2.309122085571289, 2.309122085571289, 2.309122085571289, 2.309122085571289, 2.309122085571289, 2.309122085571289], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 3, 5, 2], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 12, 7, 5, 2, 2, 1, 1, 0, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3085436820983887, 2.3098812103271484, 2.31026554107666, 2.309522867202759, 2.3093059062957764, 2.308743715286255], "accuracy": [0.09113723784685135, 0.09377889335155487, 0.09417514503002167, 0.09615638852119446, 0.1002509593963623, 0.09879804402589798], "val_loss": [2.3088700771331787, 2.3088700771331787, 2.3088700771331787, 2.3088700771331787, 2.3088700771331787, 2.3088700771331787], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]