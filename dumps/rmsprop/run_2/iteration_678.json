[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2080743312835693, 1.6026653051376343, 1.157210111618042, 0.998518168926239, 0.867557942867279, 0.8610249161720276, 0.7871446013450623, 0.7490062713623047, 0.7348921298980713, 0.7044342160224915, 0.698576807975769, 0.6846243143081665, 0.6387825608253479, 0.6404135823249817, 0.6339556574821472, 0.6126231551170349, 0.6053737998008728, 0.5937149524688721, 0.5847589373588562, 0.5723324418067932, 0.5611738562583923, 0.5512070655822754, 0.5483704209327698, 0.5357738137245178, 0.5313299298286438, 0.5287561416625977, 0.5036608576774597, 0.5132644772529602, 0.5195915102958679, 0.49697646498680115, 0.4908864498138428, 0.4829367995262146, 0.48476865887641907, 0.4700556993484497, 0.4766719341278076, 0.46880361437797546, 0.4522073268890381, 0.45514118671417236, 0.4576229453086853, 0.4475596249103546, 0.4448874890804291, 0.4347858428955078, 0.4267304539680481, 0.4325905442237854, 0.4245850145816803, 0.4200212061405182, 0.4190598726272583, 0.4160458743572235, 0.41283226013183594, 0.4065752625465393, 0.4079144299030304, 0.4049890339374542, 0.3964902460575104, 0.3993176221847534, 0.3931202292442322, 0.3918114900588989, 0.38055774569511414], "accuracy": [0.26641130447387695, 0.5028398036956787, 0.5929203629493713, 0.6462818384170532, 0.6897371411323547, 0.6863030195236206, 0.7112666964530945, 0.7240787148475647, 0.7351737022399902, 0.7380794882774353, 0.7396644949913025, 0.7424382567405701, 0.7663452625274658, 0.7644960880279541, 0.7668735980987549, 0.7759873270988464, 0.7720248103141785, 0.7812706232070923, 0.7852331399917603, 0.7845727205276489, 0.7932901978492737, 0.7948752045631409, 0.7940827012062073, 0.802271842956543, 0.8045172095298767, 0.8030643463134766, 0.8165367841720581, 0.8105930685997009, 0.8092722296714783, 0.8182538747787476, 0.822348415851593, 0.819442629814148, 0.8193105459213257, 0.824329674243927, 0.8256505131721497, 0.8247259259223938, 0.833179235458374, 0.8317263126373291, 0.8356888294219971, 0.8380662798881531, 0.8374059200286865, 0.8409721255302429, 0.839519202709198, 0.8416325449943542, 0.8454629778862, 0.8485008478164673, 0.8492933511734009, 0.8524633646011353, 0.8496896028518677, 0.8518029451370239, 0.8540483713150024, 0.8500858545303345, 0.8558974862098694, 0.8521991968154907, 0.8515387773513794, 0.8610487580299377, 0.8609166741371155], "val_loss": [1.912847638130188, 1.1128852367401123, 0.8983414769172668, 0.8031368851661682, 0.7398428320884705, 0.7189283967018127, 0.6648722290992737, 0.6378752589225769, 0.6434998512268066, 0.6821253299713135, 0.6117638945579529, 0.5859842300415039, 0.5884634852409363, 0.5989230275154114, 0.5552754998207092, 0.5424925088882446, 0.5356720089912415, 0.5802329778671265, 0.5310324430465698, 0.5249413847923279, 0.5043799877166748, 0.49136531352996826, 0.5041278600692749, 0.5083021521568298, 0.5047827959060669, 0.4959316551685333, 0.4674895107746124, 0.48157572746276855, 0.48269617557525635, 0.4768410921096802, 0.46795275807380676, 0.47967398166656494, 0.45667415857315063, 0.4473569393157959, 0.4634448289871216, 0.4406893849372864, 0.4437110126018524, 0.45202773809432983, 0.4280183017253876, 0.4290594458580017, 0.43475309014320374, 0.4304611086845398, 0.4472212791442871, 0.4342174530029297, 0.4172598123550415, 0.4253014028072357, 0.4232847988605499, 0.4275532364845276, 0.4244935214519501, 0.41235727071762085, 0.4028466045856476, 0.3986632227897644, 0.4099843204021454, 0.40742796659469604, 0.4145258367061615, 0.40149539709091187, 0.39606940746307373], "val_accuracy": [0.5646666884422302, 0.6449999809265137, 0.6893333196640015, 0.7023333311080933, 0.7273333072662354, 0.7183333039283752, 0.7459999918937683, 0.7549999952316284, 0.7536666393280029, 0.7306666374206543, 0.7646666765213013, 0.7746666669845581, 0.7799999713897705, 0.7553333044052124, 0.7906666398048401, 0.796999990940094, 0.8083333373069763, 0.7879999876022339, 0.8046666383743286, 0.7986666560173035, 0.8176666498184204, 0.8243333101272583, 0.8159999847412109, 0.8196666836738586, 0.8143333196640015, 0.8159999847412109, 0.8326666951179504, 0.8243333101272583, 0.8216666579246521, 0.8233333230018616, 0.8349999785423279, 0.8176666498184204, 0.8299999833106995, 0.8376666903495789, 0.8286666870117188, 0.8393333554267883, 0.8346666693687439, 0.8333333134651184, 0.8389999866485596, 0.8423333168029785, 0.8416666388511658, 0.843999981880188, 0.8266666531562805, 0.8353333473205566, 0.8463333249092102, 0.8450000286102295, 0.8429999947547913, 0.8426666855812073, 0.8383333086967468, 0.8479999899864197, 0.8513333201408386, 0.8533333539962769, 0.8500000238418579, 0.8479999899864197, 0.8476666808128357, 0.8503333330154419, 0.8510000109672546]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 0, 5, 2, 1], [0, 2, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 2, 5], [0, 2, 1, 0, 2], [0, 32, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 9, 0, 0, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [95, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 3, 1, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [83.19729614257812, 9497.2421875, 157626.921875, 1113363.125, 4852862.0, 16031807.0], "accuracy": [0.09840179979801178, 0.10487385839223862, 0.09734513610601425, 0.09879804402589798, 0.10038304328918457, 0.10130762308835983], "val_loss": [701.1724853515625, 34083.44921875, 361898.9375, 1966666.75, 7356454.0, 21683670.0], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 5, 8], [0, 2, 1, 1, 2], [27, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1, 68], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 2, 1, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 1, 11, 6, 5, 3, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(alpha))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3039023876190186, 2.304838180541992, 2.308323621749878, 2.31404972076416, 2.3140947818756104, 2.3180835247039795, 2.334383010864258, 2.346522808074951, 2.4041032791137695], "accuracy": [0.09615638852119446, 0.10077928751707077, 0.09826971590518951, 0.09694888442754745, 0.10249637067317963, 0.1002509593963623, 0.0952318087220192, 0.09734513610601425, 0.0940430611371994], "val_loss": [2.3027029037475586, 2.3067286014556885, 2.308471441268921, 2.3186233043670654, 2.3109560012817383, 2.3232686519622803, 2.3435070514678955, 2.387446641921997, 2.382075786590576], "val_accuracy": [0.09833333641290665, 0.10100000351667404, 0.10300000011920929, 0.10466666519641876, 0.10466666519641876, 0.0963333323597908, 0.0963333323597908, 0.0989999994635582, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 2, 1, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [7, 2, 0, 6, 3, 8, 2, 6, 5, 5, 8], [2, 0, 3, 1, 0, 2, 1], [95, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 7, 2, 1, 3, 2], [0, 6, 1, 6, 5, 2, 2, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 18, 11, 7, 2, 17, 9, 8, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), beta), tf.math.square(tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, grad)), tf.math.multiply(grad, tf.math.add(beta, beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3100359439849854, 2.3087542057037354, 2.309220790863037, 2.3089709281921387, 2.309349536895752, 2.309694290161133], "accuracy": [0.09219389408826828, 0.09192973375320435, 0.09338264167308807, 0.09760929644107819, 0.0952318087220192, 0.09338264167308807], "val_loss": [2.3085196018218994, 2.3085196018218994, 2.3085196018218994, 2.3085196018218994, 2.3085196018218994, 2.3085196018218994], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]