[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8045714497566223, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2146871089935303, 1.6076189279556274, 1.1378601789474487, 0.9782772064208984, 0.8734626770019531, 0.8144951462745667, 0.7748069167137146, 0.7555173635482788, 0.7058194279670715, 0.6979951858520508, 0.6888867616653442, 0.6592534780502319, 0.6442731022834778, 0.6327906250953674, 0.6040945649147034, 0.6115562915802002, 0.5905052423477173, 0.5819560289382935, 0.5651450157165527, 0.568936288356781, 0.5667542815208435, 0.5647332072257996, 0.5402778387069702, 0.5238533616065979, 0.5304843783378601, 0.5136536955833435, 0.5180010795593262, 0.5001780390739441, 0.5029039978981018, 0.4937332272529602, 0.49373146891593933, 0.4826870262622833, 0.47692036628723145, 0.46933090686798096, 0.4700240194797516, 0.4787522256374359, 0.4579956829547882, 0.4575357735157013, 0.4510933458805084, 0.45683783292770386, 0.44450679421424866, 0.4405980110168457, 0.430941641330719, 0.4220098555088043, 0.4323192238807678, 0.4180071949958801], "accuracy": [0.2608638107776642, 0.507330596446991, 0.6000528335571289, 0.6462818384170532, 0.6843217611312866, 0.7055870890617371, 0.7141724824905396, 0.7191916704177856, 0.7333245277404785, 0.741909921169281, 0.7376832365989685, 0.7532690763473511, 0.7578919529914856, 0.7577598690986633, 0.7751948237419128, 0.7713643908500671, 0.7755910754203796, 0.7795535326004028, 0.7872143983840942, 0.7898560166358948, 0.7857614755630493, 0.7898560166358948, 0.7938185334205627, 0.8042530417442322, 0.8013472557067871, 0.8079513907432556, 0.8084797263145447, 0.813498854637146, 0.8129705190658569, 0.8153480291366577, 0.8144234418869019, 0.8152159452438354, 0.8197067975997925, 0.8227446675300598, 0.8264430165290833, 0.8211596608161926, 0.8278959393501282, 0.8264430165290833, 0.8354246616363525, 0.8294808864593506, 0.8348963260650635, 0.8374059200286865, 0.8401796221733093, 0.8383304476737976, 0.8409721255302429, 0.8437458872795105], "val_loss": [1.9344621896743774, 1.119844675064087, 0.9254225492477417, 0.8185893297195435, 0.7244381308555603, 0.7259586453437805, 0.6698455214500427, 0.6424620151519775, 0.6484361886978149, 0.6560250520706177, 0.613362193107605, 0.5943145155906677, 0.6252396106719971, 0.5693123936653137, 0.5457714200019836, 0.5596569776535034, 0.5747132301330566, 0.5464947819709778, 0.5560928583145142, 0.529848575592041, 0.504657506942749, 0.5128923058509827, 0.5108039379119873, 0.5068676471710205, 0.49067139625549316, 0.4983733296394348, 0.4847867488861084, 0.4806852638721466, 0.46794337034225464, 0.48061051964759827, 0.46652987599372864, 0.4684300124645233, 0.4753967821598053, 0.4576120972633362, 0.4901992976665497, 0.45840588212013245, 0.4414359927177429, 0.4448113739490509, 0.45205220580101013, 0.45725157856941223, 0.43104371428489685, 0.4335060119628906, 0.43207186460494995, 0.4318699240684509, 0.4284425973892212, 0.4279669523239136], "val_accuracy": [0.5206666588783264, 0.6110000014305115, 0.6713333129882812, 0.6996666789054871, 0.7233333587646484, 0.7080000042915344, 0.7483333349227905, 0.7630000114440918, 0.750333309173584, 0.7369999885559082, 0.7516666650772095, 0.7699999809265137, 0.7509999871253967, 0.7773333191871643, 0.7973333597183228, 0.7853333353996277, 0.7676666378974915, 0.7919999957084656, 0.7806666493415833, 0.8053333163261414, 0.8090000152587891, 0.8106666803359985, 0.8119999766349792, 0.8116666674613953, 0.815666675567627, 0.8153333067893982, 0.8216666579246521, 0.8270000219345093, 0.8330000042915344, 0.8240000009536743, 0.8246666789054871, 0.8303333520889282, 0.824999988079071, 0.8333333134651184, 0.8169999718666077, 0.8316666483879089, 0.8346666693687439, 0.8343333601951599, 0.8320000171661377, 0.8293333053588867, 0.8483333587646484, 0.8393333554267883, 0.8423333168029785, 0.8460000157356262, 0.8479999899864197, 0.8483333587646484]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 8, 5, 3, 1], [0, 1, 1, 6, 0], [16, 22], [1], [0], [2], [0]], "fitness": -0.7985714077949524, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.1985583305358887, 1.4893767833709717, 1.1104816198349, 0.9578801393508911, 0.858173668384552, 0.8138175010681152, 0.757638692855835, 0.7436893582344055, 0.7184315919876099, 0.6973066926002502, 0.7013342976570129, 0.6791152358055115, 0.6340247392654419, 0.6388579607009888, 0.6336545348167419, 0.6181802153587341, 0.5789275169372559], "accuracy": [0.2561088502407074, 0.49993395805358887, 0.603090763092041, 0.6384889483451843, 0.6843217611312866, 0.6952846646308899, 0.7150970697402954, 0.7124554514884949, 0.7256637215614319, 0.7388719916343689, 0.7334566116333008, 0.7425703406333923, 0.7619865536689758, 0.7589486241340637, 0.7553823590278625, 0.7594769597053528, 0.7790252566337585], "val_loss": [1.7507953643798828, 1.0205814838409424, 0.8591079115867615, 0.8288238048553467, 0.7334937453269958, 0.7156140804290771, 0.6763657331466675, 0.6764832735061646, 0.6549615859985352, 0.6267289519309998, 0.6700556874275208, 0.5626141428947449, 0.5626096129417419, 0.6364090442657471, 0.5571893453598022, 0.5343120098114014, 0.5407113432884216], "val_accuracy": [0.6060000061988831, 0.640333354473114, 0.6629999876022339, 0.6893333196640015, 0.7049999833106995, 0.7049999833106995, 0.7179999947547913, 0.7363333106040955, 0.737333357334137, 0.7483333349227905, 0.7443333268165588, 0.8029999732971191, 0.7823333144187927, 0.746999979019165, 0.7756666541099548, 0.7893333435058594, 0.7960000038146973]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 6], [0, 2, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 6, 5], [2, 0, 1, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 9], [0, 5, 6, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.11114285886287689, "mapping_values": [1, 6, 3, 3, 1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9220177002496.0, 10598027886592.0, 10559190728704.0, 10405485215744.0, 10304460161024.0, 10515076087808.0], "accuracy": [0.109232597053051, 0.10711926966905594, 0.10130762308835983, 0.10632677376270294, 0.10368511080741882, 0.10289261490106583], "val_loss": [6741546762240.0, 6741546237952.0, 6741546237952.0, 6741546237952.0, 6741546237952.0, 6741546237952.0], "val_accuracy": [0.125, 0.125, 0.125, 0.125, 0.125, 0.125]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [8, 2, 3, 2, 3, 0], [3, 2, 1, 0, 2], [7, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 0, 8, 2], [5, 0, 3, 0, 0], [50, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 5, 8, 2, 2, 1, 1, 3, 2, 1, 4, 2, 6, 1, 3, 8, 6, 9, 3, 6, 8, 8, 2, 0, 2, 8, 5], [0, 6, 1, 6, 0, 5, 2, 5, 6, 7, 0, 2, 2, 2, 0, 2, 3, 0], [0, 22, 21, 81, 65, 96], [1], [0], [4], [0]], "fitness": -0.10285714268684387, "mapping_values": [1, 11, 6, 5, 1, 11, 7, 4, 2, 46, 28, 18, 6, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(grad, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.add(grad, grad), grad)), tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))))))))), tf.math.square(sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [156.39242553710938, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19865275919437408, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [61545.265625, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 6, 2, 3, 7], [0, 2, 1, 2, 2, 0], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [4, 6, 3, 6, 0], [0, 22], [0, 0, 0, 1, 0, 1], [0, 6, 8, 5], [2, 3], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 12, 6, 6, 2, 5, 3, 2, 1, 8, 5, 3, 0, 6, 4, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.square(sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.square(sigma)))", "other_info": {"loss": [2.3107283115386963, 2.3101465702056885, 2.3095579147338867, 2.310065507888794, 2.3114778995513916, 2.3088746070861816], "accuracy": [0.09087307006120682, 0.09192973375320435, 0.08757099509239197, 0.09430722147226334, 0.09126931428909302, 0.09642054885625839], "val_loss": [2.308441162109375, 2.308441162109375, 2.308441162109375, 2.308441162109375, 2.308441162109375, 2.308441162109375], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]