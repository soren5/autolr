[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131872177124023, 1.6229702234268188, 1.143924593925476, 1.0143018960952759, 0.916004478931427, 0.8462438583374023, 0.7928210496902466, 0.8021824955940247, 0.7451279163360596, 0.7388790845870972, 0.6984220147132874, 0.6880294680595398, 0.6791538000106812, 0.660317599773407, 0.6393399834632874, 0.6368806958198547, 0.6322051286697388, 0.6108028292655945, 0.6091989278793335, 0.5806563496589661, 0.5864685773849487, 0.5614715218544006, 0.5590168833732605, 0.5662245750427246, 0.5488235950469971, 0.5354186296463013, 0.5289075374603271, 0.5274801850318909, 0.5176604986190796, 0.5170087218284607, 0.498829185962677, 0.4976402819156647, 0.4909091591835022, 0.47884801030158997, 0.4725048542022705, 0.4695949852466583, 0.4672687351703644, 0.4781111478805542, 0.46670323610305786, 0.4538632035255432, 0.4642024338245392, 0.4511435329914093, 0.44347289204597473, 0.4439980983734131], "accuracy": [0.261260062456131, 0.49927353858947754, 0.59225994348526, 0.6330735683441162, 0.6686038970947266, 0.6922467350959778, 0.7091533541679382, 0.7040021419525146, 0.7235503792762756, 0.7205125093460083, 0.7456082701683044, 0.7411174178123474, 0.7508915662765503, 0.7552502751350403, 0.7642319202423096, 0.7663452625274658, 0.7651565074920654, 0.7750627398490906, 0.7734777331352234, 0.7832518815994263, 0.7821952104568481, 0.7930260300636292, 0.789459764957428, 0.7886672616004944, 0.7989697456359863, 0.802800178527832, 0.8038568496704102, 0.8035926818847656, 0.8099326491355896, 0.8064984679222107, 0.8144234418869019, 0.8146876096725464, 0.8189142942428589, 0.8247259259223938, 0.8211596608161926, 0.8236692547798157, 0.829216718673706, 0.8273676037788391, 0.8267071843147278, 0.8304054737091064, 0.82683926820755, 0.8348963260650635, 0.8363492488861084, 0.8360850811004639], "val_loss": [1.9353556632995605, 1.1019012928009033, 0.8903624415397644, 0.8389469385147095, 0.7535468935966492, 0.6794717907905579, 0.6907300353050232, 0.6603633165359497, 0.6283637881278992, 0.6145414113998413, 0.5610973238945007, 0.58760666847229, 0.5527293086051941, 0.5688586235046387, 0.5383752584457397, 0.5329828262329102, 0.5369269251823425, 0.5136551260948181, 0.5059414505958557, 0.5085052847862244, 0.4847567081451416, 0.4770878851413727, 0.4787742495536804, 0.4773484766483307, 0.4710867404937744, 0.4514859914779663, 0.45943838357925415, 0.4480522572994232, 0.4375115931034088, 0.448151171207428, 0.43767252564430237, 0.42856478691101074, 0.4398120641708374, 0.43291765451431274, 0.4176265001296997, 0.4299629032611847, 0.43203064799308777, 0.4169180393218994, 0.4108828008174896, 0.4379165470600128, 0.42750924825668335, 0.4029684364795685, 0.395670086145401, 0.4132443070411682], "val_accuracy": [0.5546666383743286, 0.656000018119812, 0.6933333277702332, 0.6903333067893982, 0.7136666774749756, 0.7383333444595337, 0.7223333120346069, 0.7476666569709778, 0.762666642665863, 0.7736666798591614, 0.7956666946411133, 0.7836666703224182, 0.7889999747276306, 0.7870000004768372, 0.7979999780654907, 0.8006666898727417, 0.7839999794960022, 0.8076666593551636, 0.8166666626930237, 0.8116666674613953, 0.8173333406448364, 0.831333339214325, 0.8190000057220459, 0.8293333053588867, 0.8246666789054871, 0.8386666774749756, 0.8293333053588867, 0.8323333263397217, 0.8413333296775818, 0.8386666774749756, 0.843999981880188, 0.8413333296775818, 0.8296666741371155, 0.8396666646003723, 0.8496666550636292, 0.8386666774749756, 0.8389999866485596, 0.8513333201408386, 0.8516666889190674, 0.840666651725769, 0.8309999704360962, 0.8453333377838135, 0.8506666421890259, 0.8503333330154419]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 6, 4, 6], [0, 2, 1, 0, 2, 3, 1, 2], [9, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [2, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0], [0, 0, 1, 1], [0, 1], [2, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 8, 8, 2, 12, 7, 5, 2, 8, 5, 3, 1, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.divide_no_nan(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1258750557899475, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 4, 1, 3, 5, 7, 4, 5], [0, 2, 1, 0, 2, 1, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [1, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.add(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 2, 4, 8, 1, 4, 2, 0, 3], [0, 6, 1, 6, 0, 2, 1, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 2, 19, 11, 8, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, alpha), grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(beta), tf.math.multiply(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303530693054199, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 87, 26], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 7, 0, 6, 3, 8, 2], [2, 2, 3, 1, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0], [0, 2, 9, 2, 5], [0, 6, 1], [0, 47], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099160194396973, 2.310716390609741, 2.3103342056274414, 2.309934377670288, 2.31037974357605, 2.3083460330963135], "accuracy": [0.09417514503002167, 0.09668471664190292, 0.08809932321310043, 0.08942015469074249, 0.09153348207473755, 0.09496764093637466], "val_loss": [2.307996988296509, 2.307996988296509, 2.307996988296509, 2.307996988296509, 2.307996988296509, 2.307996988296509], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]