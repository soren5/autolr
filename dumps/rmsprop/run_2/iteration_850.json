[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8008571267127991, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2113349437713623, 1.5958715677261353, 1.1308215856552124, 0.9698706865310669, 0.9026764035224915, 0.8242154717445374, 0.7931199669837952, 0.7768905758857727, 0.7453456521034241, 0.7103510499000549, 0.701373815536499, 0.6761355996131897, 0.6752317547798157, 0.6526147723197937, 0.6367226839065552, 0.6359267830848694, 0.6038736701011658, 0.6152810454368591, 0.5901685357093811, 0.5761575102806091, 0.5873680114746094, 0.5724349617958069, 0.5566105246543884, 0.5480063557624817, 0.5432330965995789, 0.5372129678726196, 0.5370610356330872, 0.5223847031593323, 0.5132212042808533, 0.5033465623855591, 0.5066892504692078, 0.49783310294151306, 0.4985103905200958, 0.4901019036769867, 0.49154341220855713, 0.4893486797809601, 0.48085206747055054, 0.46312078833580017, 0.47127556800842285, 0.451838880777359, 0.46059179306030273, 0.4466179609298706, 0.4478374719619751, 0.4421703517436981, 0.4457588493824005, 0.43896839022636414, 0.43676599860191345, 0.43326535820961, 0.43023332953453064, 0.4234406650066376, 0.42434611916542053, 0.40894290804862976, 0.4126196503639221, 0.42032042145729065, 0.4057651460170746, 0.3966503143310547, 0.4031692445278168, 0.39258718490600586, 0.3946046829223633, 0.39448079466819763, 0.3855947256088257, 0.386046826839447], "accuracy": [0.26495838165283203, 0.5116893649101257, 0.6073173880577087, 0.6543388962745667, 0.6763967871665955, 0.7010962963104248, 0.7100779414176941, 0.7191916704177856, 0.7239466309547424, 0.7392682433128357, 0.7384757399559021, 0.7473253011703491, 0.7526086568832397, 0.7572315335273743, 0.7651565074920654, 0.7585523724555969, 0.778761088848114, 0.7688548564910889, 0.7849689722061157, 0.7898560166358948, 0.7825914621353149, 0.7865539789199829, 0.7973847389221191, 0.7980451583862305, 0.800290584564209, 0.8059701323509216, 0.8020076751708984, 0.8095363974571228, 0.8169330358505249, 0.8123101592063904, 0.8162726163864136, 0.8186501264572144, 0.8186501264572144, 0.8195747137069702, 0.8239334225654602, 0.8241975903511047, 0.8267071843147278, 0.8294808864593506, 0.83119797706604, 0.8392550349235535, 0.8335754871368408, 0.8383304476737976, 0.8396512866020203, 0.8388587832450867, 0.8391229510307312, 0.8389908671379089, 0.8409721255302429, 0.8392550349235535, 0.8421608805656433, 0.8488970994949341, 0.8444063067436218, 0.854708731174469, 0.8499537706375122, 0.8462554216384888, 0.8515387773513794, 0.8581429123878479, 0.8514066934585571, 0.8564258217811584, 0.8539162874221802, 0.8564258217811584, 0.8602562546730042, 0.8562937378883362], "val_loss": [1.9175779819488525, 1.0809086561203003, 0.9389141201972961, 0.8146502375602722, 0.711865246295929, 0.6892272233963013, 0.6958025693893433, 0.6911779642105103, 0.6318375468254089, 0.6145113706588745, 0.5961950421333313, 0.5743350386619568, 0.5996780395507812, 0.5667285919189453, 0.5851166248321533, 0.5474015474319458, 0.5222536325454712, 0.509779691696167, 0.5253358483314514, 0.5026172399520874, 0.5215245485305786, 0.4868265688419342, 0.48807868361473083, 0.48744499683380127, 0.47535285353660583, 0.4799669682979584, 0.469433069229126, 0.4783192276954651, 0.4568219780921936, 0.451179563999176, 0.47506189346313477, 0.45278531312942505, 0.44883328676223755, 0.4611116647720337, 0.454955518245697, 0.46168282628059387, 0.43194645643234253, 0.4348051846027374, 0.42618513107299805, 0.42290955781936646, 0.42434388399124146, 0.42290055751800537, 0.43981802463531494, 0.42192065715789795, 0.42853987216949463, 0.42489004135131836, 0.40735822916030884, 0.40895065665245056, 0.4117060601711273, 0.40326038002967834, 0.4148266613483429, 0.40204334259033203, 0.4019434452056885, 0.4037100076675415, 0.4008089601993561, 0.41111424565315247, 0.3909599184989929, 0.39502444863319397, 0.3934177756309509, 0.4005165696144104, 0.38656026124954224, 0.39212045073509216], "val_accuracy": [0.6110000014305115, 0.6663333177566528, 0.6846666932106018, 0.7023333311080933, 0.7490000128746033, 0.7540000081062317, 0.7226666808128357, 0.7419999837875366, 0.768666684627533, 0.762666642665863, 0.7743333578109741, 0.7906666398048401, 0.7670000195503235, 0.7839999794960022, 0.7670000195503235, 0.7806666493415833, 0.8046666383743286, 0.8153333067893982, 0.8080000281333923, 0.8100000023841858, 0.8023333549499512, 0.8253333568572998, 0.8240000009536743, 0.8203333616256714, 0.8276666402816772, 0.8293333053588867, 0.8386666774749756, 0.8253333568572998, 0.8330000042915344, 0.8410000205039978, 0.828000009059906, 0.8346666693687439, 0.8426666855812073, 0.8306666612625122, 0.8353333473205566, 0.8286666870117188, 0.847000002861023, 0.8399999737739563, 0.8510000109672546, 0.8500000238418579, 0.8496666550636292, 0.8513333201408386, 0.8386666774749756, 0.8523333072662354, 0.8456666469573975, 0.8486666679382324, 0.8583333492279053, 0.8506666421890259, 0.859333336353302, 0.859000027179718, 0.8576666712760925, 0.8586666584014893, 0.8613333106040955, 0.8579999804496765, 0.8576666712760925, 0.8510000109672546, 0.8650000095367432, 0.8613333106040955, 0.8636666536331177, 0.8556666374206543, 0.862333357334137, 0.8610000014305115]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 2, 3, 1, 3, 5, 3, 5, 3, 8, 8, 9, 2, 0, 3, 1, 3, 2, 4, 5, 8, 2, 0, 8, 9, 4, 8, 0, 5, 4], [1, 0, 1, 0, 2, 3, 3, 2, 1, 3, 3, 2, 3, 3], [0, 39, 39, 96], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 4, 1, 0], [16, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 1, 2, 5, 2, 1], [0, 6, 1, 0, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 30, 14, 4, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(grad, grad)), grad)), tf.math.add(tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), tf.math.square(grad)))))))), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 3, 0, 2, 5], [4, 2, 3], [10], [0, 0, 0, 0, 1], [0, 4, 9, 0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 11, 6, 5, 2, 8, 5, 3, 0, 5, 4, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(beta)))", "other_info": {"loss": [1101250816.0, 21564745728.0, 99760963584.0, 274618843136.0, 579450568704.0, 1081080872960.0], "accuracy": [0.09417514503002167, 0.09879804402589798, 0.10117553919553757, 0.09602430462837219, 0.10038304328918457, 0.1010434553027153], "val_loss": [5124753920.0, 40992821248.0, 138344660992.0, 327922745344.0, 640458686464.0, 1106710233088.0], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 0], [0, 2, 3, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 9, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 12, 7, 5, 2, 2, 1, 1, 0, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(grad)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310588836669922, 2.3091213703155518, 2.3095717430114746, 2.3100645542144775, 2.3117711544036865, 2.3103764057159424], "accuracy": [0.09166556596755981, 0.09391097724437714, 0.0866464152932167, 0.09206181764602661, 0.0882314071059227, 0.09179764986038208], "val_loss": [2.308695077896118, 2.308695077896118, 2.308695077896118, 2.308695077896118, 2.308695077896118, 2.308695077896118], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 6, 2], [0, 2, 1, 2, 2, 2, 2], [88, 22, 39], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 9], [0, 6, 1, 6, 0], [68, 22], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 14, 7, 7, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.add(grad, grad)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309159994125366, 2.310077667236328, 2.3100759983062744, 2.3096752166748047, 2.310565710067749, 2.3104066848754883], "accuracy": [0.09338264167308807, 0.09219389408826828, 0.09351472556591034, 0.09245806187391281, 0.0956280529499054, 0.09100515395402908], "val_loss": [2.309598684310913, 2.309598684310913, 2.309598684310913, 2.309598684310913, 2.309598684310913, 2.309598684310913], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]