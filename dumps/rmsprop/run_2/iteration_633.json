[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212933301925659, 1.614466667175293, 1.1505383253097534, 0.9820595979690552, 0.8947718739509583, 0.8546721935272217, 0.7897074222564697, 0.7652121782302856, 0.7640982866287231, 0.7047483921051025, 0.6904041767120361, 0.6793534159660339, 0.6556470394134521, 0.6664172410964966, 0.6377896070480347, 0.6176126599311829, 0.620624303817749, 0.6044362187385559, 0.5966423749923706, 0.6008634567260742, 0.5712655782699585, 0.568787693977356, 0.5586063861846924, 0.5582011938095093, 0.537020206451416, 0.5372599959373474, 0.5303047299385071, 0.5112755298614502, 0.5191577076911926, 0.5063345432281494, 0.5030124187469482, 0.4987858235836029, 0.49014678597450256, 0.4870447516441345, 0.4784213900566101, 0.4708966910839081, 0.46285203099250793, 0.4669988751411438], "accuracy": [0.2677321434020996, 0.5024435520172119, 0.5938449501991272, 0.6505085229873657, 0.6802271604537964, 0.6914542317390442, 0.7092854380607605, 0.715889573097229, 0.7205125093460083, 0.7413815855979919, 0.7464007139205933, 0.7470611333847046, 0.7584202885627747, 0.7494386434555054, 0.7606657147407532, 0.7685906887054443, 0.7675340175628662, 0.7732135653495789, 0.7794214487075806, 0.7754589915275574, 0.7889314293861389, 0.7835160493850708, 0.7955356240272522, 0.7886672616004944, 0.8010830879211426, 0.8018755912780762, 0.7996301651000977, 0.8039889335632324, 0.8075551390647888, 0.8078193068504333, 0.8136309385299683, 0.8133667707443237, 0.817461371421814, 0.821820080280304, 0.8177255392074585, 0.8211596608161926, 0.8323867321014404, 0.8281601071357727], "val_loss": [1.9204539060592651, 1.1001261472702026, 0.867136538028717, 0.7621655464172363, 0.7030876278877258, 0.6680539846420288, 0.6477078199386597, 0.6360966563224792, 0.6215962171554565, 0.6274479627609253, 0.5893623232841492, 0.5864088535308838, 0.5598272085189819, 0.5710533261299133, 0.5368213057518005, 0.5333958268165588, 0.5375534892082214, 0.5109146237373352, 0.49933910369873047, 0.4987635612487793, 0.49586522579193115, 0.4935055375099182, 0.533987820148468, 0.4813655912876129, 0.4872748553752899, 0.5026583075523376, 0.46445006132125854, 0.4615266025066376, 0.4686391055583954, 0.4600181579589844, 0.4528231918811798, 0.4411877989768982, 0.43316450715065, 0.44084426760673523, 0.4568440616130829, 0.43333375453948975, 0.4196774363517761, 0.4447750747203827], "val_accuracy": [0.5416666865348816, 0.6179999709129333, 0.6863333582878113, 0.7206666469573975, 0.7413333058357239, 0.746666669845581, 0.7393333315849304, 0.7570000290870667, 0.7549999952316284, 0.7570000290870667, 0.7706666588783264, 0.7643333077430725, 0.7893333435058594, 0.777999997138977, 0.7973333597183228, 0.7900000214576721, 0.7860000133514404, 0.8083333373069763, 0.8013333082199097, 0.7976666688919067, 0.8083333373069763, 0.8119999766349792, 0.7910000085830688, 0.8073333501815796, 0.8066666722297668, 0.8073333501815796, 0.8153333067893982, 0.812666654586792, 0.8173333406448364, 0.8206666707992554, 0.8263333439826965, 0.8293333053588867, 0.8336666822433472, 0.8293333053588867, 0.82833331823349, 0.8309999704360962, 0.8309999704360962, 0.8230000138282776]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 9, 4], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0, 22], [1], [0], [4], [0]], "fitness": -0.24657142162322998, "mapping_values": [1, 8, 5, 3, 3, 8, 5, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4413483142852783, 2.205944061279297, 2.2748959064483643, 2.218963146209717, 2.2418322563171387, 2.305480718612671], "accuracy": [0.2056531459093094, 0.1868973672389984, 0.14581957459449768, 0.17751948535442352, 0.14912164211273193, 0.09589222073554993], "val_loss": [2.0847578048706055, 2.292156457901001, 2.299889087677002, 2.255427360534668, 2.3044376373291016, 2.3030264377593994], "val_accuracy": [0.2460000067949295, 0.10100000351667404, 0.10066666454076767, 0.22100000083446503, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 5], [2, 0, 3, 1, 0, 0], [16, 1, 7], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 9, 3, 2, 5, 2, 1], [6, 6, 1, 6, 0], [0, 98], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 15, 9, 6, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 5, 2], [3, 2, 1, 0, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 6, 0, 2, 5, 2, 1, 6, 1, 2], [0, 6, 1, 6, 0, 6, 1, 2], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 1, 11, 6, 5, 2, 18, 10, 8, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, alpha), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.add(alpha, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [22503882752.0, 5729161838592.0, 1485041850908672.0, 3.8507920861691904e+17, 1.034335481192136e+20, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [229497798656.0, 58980923604992.0, 1.5099347297370112e+16, 3.8654329081267487e+18, 9.895508244804477e+20, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 3, 9, 7, 4, 6, 9], [0, 2, 2, 0, 2, 3, 0], [0, 39, 39, 83, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [0, 0, 3, 1, 0], [42, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 3, 5, 2, 1], [0, 6, 1, 3, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 5, 5, 3, 2, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033204078674316, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]