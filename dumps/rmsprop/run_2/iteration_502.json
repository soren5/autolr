[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7951428294181824, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109215259552, 1.6004040241241455, 1.1493037939071655, 0.9737924933433533, 0.9017007350921631, 0.8275532126426697, 0.7845603823661804, 0.7490994334220886, 0.7142868638038635, 0.7164669632911682, 0.6965121030807495, 0.6776519417762756, 0.6689208745956421, 0.6271513104438782, 0.6288306713104248, 0.6093253493309021, 0.6007328033447266, 0.6048097014427185], "accuracy": [0.2693171203136444, 0.5103685259819031, 0.6012415885925293, 0.6509047746658325, 0.6712455153465271, 0.7003037929534912, 0.7107383608818054, 0.728701651096344, 0.7366266250610352, 0.7357020378112793, 0.7432307600975037, 0.7481178045272827, 0.7531369924545288, 0.7667415142059326, 0.7627789974212646, 0.7721568942070007, 0.7814027070999146, 0.7754589915275574], "val_loss": [1.928943395614624, 1.0944772958755493, 0.8957722187042236, 0.8162705898284912, 0.7487159967422485, 0.7130283117294312, 0.688161313533783, 0.6380796432495117, 0.6837434768676758, 0.6692571640014648, 0.643216073513031, 0.5905356407165527, 0.5727903842926025, 0.5701398849487305, 0.5652326345443726, 0.5727487206459045, 0.5532798171043396, 0.6040794849395752], "val_accuracy": [0.5683333277702332, 0.6586666703224182, 0.6803333163261414, 0.6800000071525574, 0.7103333473205566, 0.7166666388511658, 0.7396666407585144, 0.7620000243186951, 0.7226666808128357, 0.7300000190734863, 0.7360000014305115, 0.7723333239555359, 0.7896666526794434, 0.7833333611488342, 0.7770000100135803, 0.7756666541099548, 0.7796666622161865, 0.7490000128746033]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [60, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1, 84], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [7, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [74, 22], [1], [0], [2], [0]], "fitness": -0.7911428809165955, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2907614707946777, 2.2440624237060547, 2.16776442527771, 2.013309955596924, 1.7318336963653564, 1.42827570438385, 1.230899453163147, 1.117175817489624, 1.0342541933059692, 0.9838269948959351, 0.9252488017082214, 0.9011585116386414, 0.8712297081947327, 0.8480522036552429, 0.8340147137641907, 0.8131229281425476, 0.7945917844772339, 0.7842682003974915, 0.7696224451065063, 0.754522442817688, 0.7403615117073059, 0.7360080480575562, 0.7165123224258423, 0.7113772630691528, 0.7155146598815918, 0.7055901885032654, 0.6929629445075989, 0.6911066174507141, 0.6866185069084167, 0.6792759895324707, 0.6776570081710815, 0.6668661236763, 0.668879508972168, 0.6581670045852661, 0.6474776864051819], "accuracy": [0.1282525360584259, 0.25280675292015076, 0.3516048192977905, 0.4095892310142517, 0.4757627844810486, 0.5301809310913086, 0.5699379444122314, 0.6037511825561523, 0.6321489810943604, 0.6457535624504089, 0.6688680648803711, 0.6671509742736816, 0.678642213344574, 0.6880200505256653, 0.693831741809845, 0.7010962963104248, 0.7066437602043152, 0.7113987803459167, 0.7128516435623169, 0.7218332886695862, 0.7279091477394104, 0.7265883088111877, 0.7368907928466797, 0.7420420050621033, 0.7363624572753906, 0.7366266250610352, 0.7475894689559937, 0.7446836829185486, 0.746268630027771, 0.7495707273483276, 0.7494386434555054, 0.7526086568832397, 0.7553823590278625, 0.7564390301704407, 0.7623828053474426], "val_loss": [2.2611567974090576, 2.199903726577759, 2.077397346496582, 1.8208955526351929, 1.4365941286087036, 1.1405235528945923, 0.9811654686927795, 0.8918161392211914, 0.8329691290855408, 0.7873263359069824, 0.7481482625007629, 0.7227083444595337, 0.700609028339386, 0.6840479969978333, 0.6681188344955444, 0.6559131741523743, 0.6473771929740906, 0.6464444994926453, 0.6272772550582886, 0.6158244609832764, 0.6152887344360352, 0.6023025512695312, 0.5954982042312622, 0.5931954979896545, 0.5882454514503479, 0.5888746976852417, 0.5814072489738464, 0.5751001238822937, 0.5672011971473694, 0.561072826385498, 0.5614243745803833, 0.5666791796684265, 0.5526865124702454, 0.55093914270401, 0.5539135932922363], "val_accuracy": [0.3089999854564667, 0.46266666054725647, 0.5243333578109741, 0.5963333249092102, 0.6363333463668823, 0.6466666460037231, 0.6756666898727417, 0.6896666884422302, 0.7066666483879089, 0.7203333377838135, 0.7336666584014893, 0.7383333444595337, 0.7453333139419556, 0.7426666617393494, 0.7613333463668823, 0.7673333287239075, 0.762666642665863, 0.7643333077430725, 0.7763333320617676, 0.7816666960716248, 0.7760000228881836, 0.7870000004768372, 0.7870000004768372, 0.7826666831970215, 0.7860000133514404, 0.7879999876022339, 0.7863333225250244, 0.7910000085830688, 0.7850000262260437, 0.7996666431427002, 0.7973333597183228, 0.7853333353996277, 0.7976666688919067, 0.7896666526794434, 0.7923333048820496]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 1, 3, 5, 9, 8, 7, 2, 3, 9, 9], [0, 2, 1, 0, 2, 0, 1], [0, 14, 39, 60, 21, 84], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 9, 0, 5, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 4, 4, 4, 8, 7, 3, 2, 6, 0, 2, 6, 0, 0], [0, 6, 1, 6, 0, 1, 7, 7, 2, 6, 3, 4, 2], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 16, 7, 6, 2, 2, 0, 1, 32, 19, 13, 2, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(grad, tf.math.multiply(alpha, tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(alpha, tf.math.pow(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.negative(sigma))))), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [96.5830078125, 10824.2890625, 182908.984375, 1273310.125, 5531503.5, 18626262.0], "accuracy": [0.1014397069811821, 0.09893012791872025, 0.09800554811954498, 0.10276053100824356, 0.10698718577623367, 0.09774138033390045], "val_loss": [806.4873046875, 39601.41015625, 420845.53125, 2287517.0, 8557405.0, 25224724.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 4, 2, 5, 2, 1, 6, 1, 4], [0, 4, 1, 6, 0, 4, 7, 3, 3], [84, 46], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 3, 1, 4, 2, 8, 0, 2], [2, 1, 3, 7, 3, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 19, 10, 9, 2, 14, 8, 6, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.add(tf.math.subtract(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.pow(grad, sigma), sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.subtract(tf.math.pow(alpha, sigma), tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(grad, sigma))), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1, 9], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309711217880249, 2.3114306926727295, 2.3095083236694336, 2.3094847202301025, 2.3102364540100098, 2.3103652000427246], "accuracy": [0.0936468094587326, 0.08889182657003403, 0.09192973375320435, 0.09166556596755981, 0.08955223858356476, 0.09100515395402908], "val_loss": [2.309323787689209, 2.309323787689209, 2.309323787689209, 2.309323787689209, 2.309323787689209, 2.309323787689209], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]