[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8091428279876709, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2177488803863525, 1.6320334672927856, 1.1674362421035767, 0.9875478744506836, 0.8910882472991943, 0.8071039915084839, 0.847477912902832, 0.7627235651016235, 0.720402717590332, 0.7178834080696106, 0.6996104121208191, 0.6735261678695679, 0.6534724235534668, 0.6397475600242615, 0.6459900140762329, 0.63467937707901, 0.5946221351623535, 0.5976996421813965, 0.5824097990989685, 0.5777355432510376, 0.5764306783676147, 0.557106614112854, 0.5470141768455505, 0.5511982440948486, 0.5448600053787231, 0.5230230689048767, 0.5219090580940247, 0.5120581388473511, 0.5150867700576782, 0.5141856074333191, 0.5021608471870422, 0.48947861790657043, 0.4886082112789154, 0.4843808710575104, 0.478884220123291, 0.47961679100990295, 0.4665200412273407, 0.4569703936576843, 0.45753389596939087, 0.4705013930797577, 0.454448938369751, 0.4455195367336273, 0.4428562521934509, 0.43717437982559204, 0.4516136050224304, 0.4161597788333893, 0.4249018728733063, 0.4297567903995514, 0.4189286530017853, 0.42349788546562195, 0.4222395718097687, 0.41120895743370056, 0.408755362033844, 0.402952641248703, 0.39923998713493347, 0.39003416895866394, 0.3943610191345215, 0.3934859335422516], "accuracy": [0.2603355050086975, 0.501518964767456, 0.5884295105934143, 0.6499801874160767, 0.6734909415245056, 0.7020208835601807, 0.6812838315963745, 0.7132478952407837, 0.7292299270629883, 0.7259278893470764, 0.7382115721702576, 0.7448157668113708, 0.7516840696334839, 0.7543256878852844, 0.7478536367416382, 0.7543256878852844, 0.7724210619926453, 0.7730814814567566, 0.7779685854911804, 0.776251494884491, 0.7837802171707153, 0.787082314491272, 0.7947431206703186, 0.7921014428138733, 0.7980451583862305, 0.802800178527832, 0.7994980812072754, 0.8086118102073669, 0.8031964302062988, 0.8078193068504333, 0.81548011302948, 0.8208954930305481, 0.8166688680648804, 0.8168009519577026, 0.8165367841720581, 0.8207634687423706, 0.8280280232429504, 0.8285563588142395, 0.8297450542449951, 0.8210275769233704, 0.8322546482086182, 0.8348963260650635, 0.8372738361358643, 0.8408400416374207, 0.8301413059234619, 0.8455950617790222, 0.8417646288871765, 0.8411042094230652, 0.8441421389579773, 0.8442742228507996, 0.8425571322441101, 0.8485008478164673, 0.8444063067436218, 0.8500858545303345, 0.8495575189590454, 0.8577466607093811, 0.8524633646011353, 0.8531237840652466], "val_loss": [1.9421461820602417, 1.1263916492462158, 0.8645725250244141, 0.8047210574150085, 0.7120134830474854, 0.7243344783782959, 0.6821736097335815, 0.6470142006874084, 0.6224106550216675, 0.6138604879379272, 0.613175630569458, 0.5980498194694519, 0.5636602640151978, 0.5591393709182739, 0.5701294541358948, 0.5470037460327148, 0.5523541569709778, 0.5388004779815674, 0.5481283068656921, 0.5146010518074036, 0.5273612141609192, 0.5047208070755005, 0.5031383037567139, 0.5027933120727539, 0.48411816358566284, 0.4982902407646179, 0.4755972623825073, 0.47164762020111084, 0.514011561870575, 0.47612425684928894, 0.46814101934432983, 0.4838848114013672, 0.4652009606361389, 0.4728737771511078, 0.46447262167930603, 0.4522143006324768, 0.4477033317089081, 0.44456037878990173, 0.46213147044181824, 0.47503459453582764, 0.4446060359477997, 0.43600040674209595, 0.43072232604026794, 0.4358104169368744, 0.43175625801086426, 0.42743009328842163, 0.4306759536266327, 0.4176480770111084, 0.418864369392395, 0.42103517055511475, 0.43262067437171936, 0.4197893738746643, 0.4115849733352661, 0.4154682755470276, 0.41899803280830383, 0.4160919487476349, 0.4088606834411621, 0.4084842801094055], "val_accuracy": [0.593666672706604, 0.6323333382606506, 0.6959999799728394, 0.7129999995231628, 0.7276666760444641, 0.7173333168029785, 0.7450000047683716, 0.753000020980835, 0.7670000195503235, 0.7746666669845581, 0.7716666460037231, 0.7823333144187927, 0.7946666479110718, 0.7799999713897705, 0.7933333516120911, 0.8036666512489319, 0.7950000166893005, 0.8013333082199097, 0.7913333177566528, 0.7996666431427002, 0.809333324432373, 0.8173333406448364, 0.8063333630561829, 0.8013333082199097, 0.8273333311080933, 0.8149999976158142, 0.8230000138282776, 0.8289999961853027, 0.7960000038146973, 0.8293333053588867, 0.8289999961853027, 0.8213333487510681, 0.8346666693687439, 0.8263333439826965, 0.8289999961853027, 0.8410000205039978, 0.8386666774749756, 0.8410000205039978, 0.8256666660308838, 0.8233333230018616, 0.843999981880188, 0.843666672706604, 0.8510000109672546, 0.8450000286102295, 0.8513333201408386, 0.8460000157356262, 0.8443333506584167, 0.8560000061988831, 0.8529999852180481, 0.8523333072662354, 0.847000002861023, 0.8516666889190674, 0.859000027179718, 0.8536666631698608, 0.8546666502952576, 0.8560000061988831, 0.8583333492279053, 0.8556666374206543]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 3], [0, 3, 1, 0, 2, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 6, 2, 1], [0, 0, 0, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 12, 6, 6, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104090690612793, 2.3105876445770264, 2.311145067214966, 2.310331106185913, 2.3097164630889893, 2.308712959289551], "accuracy": [0.09351472556591034, 0.09272222965955734, 0.08875974267721176, 0.09417514503002167, 0.09206181764602661, 0.09325055778026581], "val_loss": [2.3086397647857666, 2.3086397647857666, 2.3086397647857666, 2.3086397647857666, 2.3086397647857666, 2.3086397647857666], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [5, 2, 3, 2, 9, 1], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 9, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 6], [0, 22], [0, 0], [0, 9], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 8, 5, 3, 2, 8, 5, 3, 2, 12, 7, 5, 1, 2, 2, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309246778488159, 2.310384511947632, 2.31044864654541, 2.3107285499572754, 2.310218334197998, 2.310096025466919], "accuracy": [0.09800554811954498, 0.09179764986038208, 0.09074098616838455, 0.08994849026203156, 0.09153348207473755, 0.09391097724437714], "val_loss": [2.308988094329834, 2.308988094329834, 2.308988094329834, 2.308988094329834, 2.308988094329834, 2.308988094329834], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 3, 6, 3, 5, 2, 1, 5, 8, 8], [0, 2, 1, 0, 2, 0, 1, 2], [46, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 4, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 19, 11, 8, 3, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.subtract(tf.math.square(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31091046333313, 2.309725522994995, 2.3116183280944824, 2.3085649013519287, 2.309929609298706, 2.3112399578094482], "accuracy": [0.09311848133802414, 0.09179764986038208, 0.08440100401639938, 0.09628847241401672, 0.09377889335155487, 0.08677849918603897], "val_loss": [2.308875322341919, 2.308875322341919, 2.308875322341919, 2.308875322341919, 2.308875322341919, 2.308875322341919], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 3, 3, 2, 2, 4], [0, 2, 1, 0, 2], [58, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [78, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.negative(beta)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(grad, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309295654296875, 2.3098039627075195, 2.30915904045105, 2.3105382919311523, 2.308527708053589, 2.3100392818450928], "accuracy": [0.09192973375320435, 0.09285431355237961, 0.09377889335155487, 0.08955223858356476, 0.09245806187391281, 0.09074098616838455], "val_loss": [2.309370994567871, 2.309370994567871, 2.309370994567871, 2.309370994567871, 2.309370994567871, 2.309370994567871], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]