[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211296796798706, 1.6080100536346436, 1.1575018167495728, 0.9738495945930481, 0.8878751397132874, 0.8516604900360107, 0.7910473942756653, 0.7490580081939697, 0.7370966076850891, 0.7160968780517578, 0.6922922730445862, 0.6529262065887451, 0.6631874442100525, 0.6344971656799316, 0.630031168460846, 0.6196437478065491, 0.6085546016693115, 0.5817691683769226, 0.5821429491043091, 0.566515326499939, 0.5612526535987854, 0.5546779036521912, 0.5375418663024902, 0.5358047485351562, 0.5273600220680237, 0.5226944088935852, 0.5033814907073975, 0.5005892515182495, 0.5122857689857483, 0.5066589713096619, 0.49791446328163147], "accuracy": [0.2654867172241211, 0.5086514353752136, 0.5904107689857483, 0.6559239029884338, 0.6730946898460388, 0.6927750706672668, 0.709549605846405, 0.7250033020973206, 0.7269845604896545, 0.7382115721702576, 0.7433628439903259, 0.7573636174201965, 0.7494386434555054, 0.7676661014556885, 0.7631752490997314, 0.7703077793121338, 0.7721568942070007, 0.7803460359573364, 0.7882710099220276, 0.787082314491272, 0.7938185334205627, 0.7956677079200745, 0.800818920135498, 0.8026680946350098, 0.8074230551719666, 0.8074230551719666, 0.8168009519577026, 0.8161405324935913, 0.8086118102073669, 0.8137630224227905, 0.8149517774581909], "val_loss": [1.9266389608383179, 1.1571859121322632, 0.9372053742408752, 0.8347330689430237, 0.7460668683052063, 0.7001644968986511, 0.6740050315856934, 0.6331024765968323, 0.6441934704780579, 0.6041731238365173, 0.6040775775909424, 0.5902253985404968, 0.6424868702888489, 0.5697627067565918, 0.5858572721481323, 0.5535991191864014, 0.5596011877059937, 0.544889509677887, 0.5390239953994751, 0.5343378782272339, 0.510948657989502, 0.5142107605934143, 0.5032252669334412, 0.49948811531066895, 0.49999842047691345, 0.4704035222530365, 0.4687936305999756, 0.47395873069763184, 0.4951426684856415, 0.4912978410720825, 0.4722411632537842], "val_accuracy": [0.5336666703224182, 0.5870000123977661, 0.6546666622161865, 0.6923333406448364, 0.7206666469573975, 0.7293333411216736, 0.7260000109672546, 0.753333330154419, 0.7559999823570251, 0.7680000066757202, 0.7663333415985107, 0.777999997138977, 0.7480000257492065, 0.7793333530426025, 0.7590000033378601, 0.7793333530426025, 0.7856666445732117, 0.7900000214576721, 0.7893333435058594, 0.7913333177566528, 0.8056666851043701, 0.7996666431427002, 0.8090000152587891, 0.8096666932106018, 0.8086666464805603, 0.8276666402816772, 0.8199999928474426, 0.8196666836738586, 0.8090000152587891, 0.8096666932106018, 0.8186666369438171]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 7, 2, 9, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 1, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.24400000274181366, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3807971477508545, 2.4970505237579346, 2.2630386352539062, 2.311018228530884, 2.3321893215179443, 2.336742639541626, 2.3041393756866455, 2.2661044597625732, 2.279707193374634], "accuracy": [0.21040813624858856, 0.15110288560390472, 0.1694624274969101, 0.10487385839223862, 0.16853784024715424, 0.10645885765552521, 0.10091137140989304, 0.14040417969226837, 0.16972659528255463], "val_loss": [2.296544313430786, 2.3018243312835693, 2.314707040786743, 2.273312568664551, 2.286428928375244, 2.305716037750244, 2.2995665073394775, 2.293745517730713, 2.3038809299468994], "val_accuracy": [0.10000000149011612, 0.10166666656732559, 0.10366666316986084, 0.24433332681655884, 0.19866666197776794, 0.10066666454076767, 0.14533333480358124, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 3, 0, 2], [0, 80, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 8, 4], [1, 6, 1, 1], [46, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [183612485926912.0, 214866241519616.0, 206383077130240.0, 213166038450176.0, 208223571279872.0, 215869854580736.0], "accuracy": [0.09206181764602661, 0.09140139818191528, 0.09391097724437714, 0.09787346422672272, 0.09391097724437714, 0.09285431355237961], "val_loss": [203575225483264.0, 203575124819968.0, 203575124819968.0, 203575124819968.0, 203575124819968.0, 203575124819968.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 4, 1], [0, 6, 1, 6, 6], [28, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 6, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 2, 0, 2], [0, 39, 94], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311269521713257, 2.3098607063293457, 2.3108716011047363, 2.310272693634033, 2.3094797134399414, 2.309796094894409], "accuracy": [0.09232597798109055, 0.08994849026203156, 0.0936468094587326, 0.09285431355237961, 0.09826971590518951, 0.09245806187391281], "val_loss": [2.308872938156128, 2.308872938156128, 2.308872938156128, 2.308872938156128, 2.308872938156128, 2.308872938156128], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]