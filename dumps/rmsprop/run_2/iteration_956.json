[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.817714273929596, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111127376556396, 1.5980892181396484, 1.1416419744491577, 0.9722685217857361, 0.8980971574783325, 0.8352770209312439, 0.785938560962677, 0.7749473452568054, 0.722429096698761, 0.7078613042831421, 0.6837582588195801, 0.6734358668327332, 0.6505007743835449, 0.6317412853240967, 0.6344037055969238, 0.6100842356681824, 0.6162187457084656, 0.5901014804840088, 0.5727968811988831, 0.5734568238258362, 0.580403745174408, 0.5518555641174316, 0.5563933849334717, 0.5465518236160278, 0.5395991802215576, 0.5287410616874695, 0.5282975435256958, 0.5116588473320007, 0.5063341856002808, 0.5030904412269592, 0.5013961791992188, 0.5056020617485046, 0.4883841872215271, 0.48822030425071716, 0.485539048910141, 0.4701542258262634, 0.47118183970451355, 0.4715096354484558, 0.45891645550727844, 0.4495084881782532, 0.44752535223960876, 0.4580564498901367, 0.4487587511539459, 0.4360460042953491, 0.4405348300933838, 0.43171221017837524, 0.428947776556015, 0.42658430337905884, 0.4146769642829895, 0.4151197373867035], "accuracy": [0.26376965641975403, 0.5126138925552368, 0.6053361296653748, 0.6482630968093872, 0.6787742972373962, 0.6972658634185791, 0.7145687341690063, 0.7147008180618286, 0.7293620109558105, 0.7376832365989685, 0.7504953145980835, 0.7448157668113708, 0.7631752490997314, 0.7640998363494873, 0.7656848430633545, 0.7724210619926453, 0.7773081660270691, 0.7824593782424927, 0.7886672616004944, 0.7903843522071838, 0.7786290049552917, 0.798309326171875, 0.7980451583862305, 0.7959318161010742, 0.8001585006713867, 0.8014793395996094, 0.8026680946350098, 0.8078193068504333, 0.8113855719566345, 0.8140271902084351, 0.8190463781356812, 0.8120459914207458, 0.8140271902084351, 0.8162726163864136, 0.8197067975997925, 0.8245938420295715, 0.8234050869941711, 0.8249900937080383, 0.8278959393501282, 0.8325188159942627, 0.8352925777435303, 0.8335754871368408, 0.8319904804229736, 0.8376700282096863, 0.837537944316864, 0.8362171649932861, 0.8374059200286865, 0.8465195894241333, 0.8455950617790222, 0.8477083444595337], "val_loss": [1.9229410886764526, 1.0860474109649658, 0.9036660194396973, 0.7894824743270874, 0.7603108882904053, 0.6938962936401367, 0.6953810453414917, 0.6508215069770813, 0.639315128326416, 0.6284809112548828, 0.6475959420204163, 0.5951510667800903, 0.5952033400535583, 0.6180241703987122, 0.5754192471504211, 0.5736171007156372, 0.5509799718856812, 0.557174563407898, 0.5269133448600769, 0.5385116934776306, 0.5388230085372925, 0.5373426675796509, 0.5588002800941467, 0.5179732441902161, 0.5035045146942139, 0.5311495661735535, 0.5067074298858643, 0.4875214397907257, 0.4984036386013031, 0.49152684211730957, 0.5009974837303162, 0.47984015941619873, 0.48022836446762085, 0.4927656352519989, 0.47021961212158203, 0.47426992654800415, 0.4865769147872925, 0.46025627851486206, 0.4547269344329834, 0.45683515071868896, 0.4959072768688202, 0.4516139328479767, 0.45481157302856445, 0.46357959508895874, 0.44269075989723206, 0.44405871629714966, 0.4628075063228607, 0.44989094138145447, 0.4343680143356323, 0.4463852643966675], "val_accuracy": [0.5889999866485596, 0.6706666946411133, 0.6970000267028809, 0.7293333411216736, 0.7170000076293945, 0.7459999918937683, 0.7300000190734863, 0.7436666488647461, 0.75, 0.7616666555404663, 0.7566666603088379, 0.7793333530426025, 0.7603333592414856, 0.7586666941642761, 0.7836666703224182, 0.7863333225250244, 0.8003333210945129, 0.7900000214576721, 0.8090000152587891, 0.7816666960716248, 0.7996666431427002, 0.796999990940094, 0.7826666831970215, 0.8183333277702332, 0.824999988079071, 0.7950000166893005, 0.8183333277702332, 0.828000009059906, 0.8213333487510681, 0.8316666483879089, 0.8196666836738586, 0.8346666693687439, 0.8236666917800903, 0.8209999799728394, 0.8376666903495789, 0.8356666564941406, 0.8203333616256714, 0.8379999995231628, 0.8403333425521851, 0.8420000076293945, 0.8193333148956299, 0.8479999899864197, 0.8356666564941406, 0.8356666564941406, 0.8510000109672546, 0.8450000286102295, 0.8306666612625122, 0.8456666469573975, 0.8496666550636292, 0.8463333249092102]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [2, 2, 0, 2, 5, 9, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.15199999511241913, "mapping_values": [1, 10, 5, 5, 2, 7, 4, 3, 1, 11, 7, 4, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [13651233734656.0, 16597433450496.0, 16178817794048.0, 16285772546048.0, 17033939910656.0, 16301850361856.0], "accuracy": [0.1162329912185669, 0.11068551242351532, 0.12455421686172485, 0.11715757846832275, 0.11451591551303864, 0.12098798155784607], "val_loss": [11384394874880.0, 11384394874880.0, 11384394874880.0, 11384394874880.0, 11384394874880.0, 11384395923456.0], "val_accuracy": [0.15566666424274445, 0.15566666424274445, 0.15566666424274445, 0.15566666424274445, 0.15566666424274445, 0.15566666424274445]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 4, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 1, 9], [0, 6, 6, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 8, 4, 4, 1, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [43, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 2, 5, 2, 1], [0, 2, 1, 6, 0], [0, 87], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30865216255188, 2.3109500408172607, 2.3093326091766357, 2.3097105026245117, 2.3106796741485596, 2.3103671073913574], "accuracy": [0.09694888442754745, 0.09338264167308807, 0.09074098616838455, 0.09074098616838455, 0.08889182657003403, 0.09259014576673508], "val_loss": [2.3088910579681396, 2.3088910579681396, 2.3088910579681396, 2.3088910579681396, 2.3088910579681396, 2.3088910579681396], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 1], [0, 2, 1, 0, 2], [76, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 2, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 2, 4, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310595989227295, 2.3089168071746826, 2.3094894886016846, 2.3109660148620605, 2.3107750415802, 2.309995174407959], "accuracy": [0.09100515395402908, 0.09272222965955734, 0.09417514503002167, 0.0878351628780365, 0.09060890227556229, 0.09140139818191528], "val_loss": [2.3093807697296143, 2.3093807697296143, 2.3093807697296143, 2.3093807697296143, 2.3093807697296143, 2.3093807697296143], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]