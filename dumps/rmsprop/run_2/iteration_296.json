[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8077142834663391, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207648515701294, 1.593576431274414, 1.1295251846313477, 0.9780589938163757, 0.8509114980697632, 0.8439378142356873, 0.7681425213813782, 0.7303988337516785, 0.7305583357810974, 0.7036553025245667, 0.692762017250061, 0.6439401507377625, 0.6702223420143127, 0.6409461498260498, 0.608620285987854, 0.6022828221321106, 0.6110683679580688, 0.5785272717475891, 0.5725255608558655, 0.5589081645011902, 0.5705998539924622, 0.5477234125137329, 0.5493818521499634, 0.5295487642288208, 0.5291718244552612, 0.5141095519065857, 0.5090335607528687, 0.5129459500312805, 0.501308798789978, 0.48729777336120605, 0.48376962542533875, 0.4758378267288208, 0.46765798330307007, 0.4630676805973053, 0.4794531464576721, 0.46381041407585144, 0.45336291193962097, 0.4379437565803528, 0.4441373646259308, 0.4309496283531189, 0.4445575475692749, 0.4306432604789734, 0.4375801682472229, 0.4195323884487152, 0.4254780113697052, 0.4055902063846588, 0.40910816192626953, 0.4160919785499573, 0.39467665553092957, 0.40996047854423523, 0.40002375841140747, 0.39527827501296997, 0.3968982398509979], "accuracy": [0.2771100103855133, 0.5114251971244812, 0.6115440726280212, 0.653150200843811, 0.6939638257026672, 0.6944921612739563, 0.7185312509536743, 0.7305507659912109, 0.7345132827758789, 0.7437590956687927, 0.7440232634544373, 0.7627789974212646, 0.7475894689559937, 0.7619865536689758, 0.7807422876358032, 0.7775723338127136, 0.7737419009208679, 0.7829877138137817, 0.7872143983840942, 0.7895918488502502, 0.7885351777076721, 0.7946110367774963, 0.7969884872436523, 0.8062343001365662, 0.8013472557067871, 0.8087438941001892, 0.8103289008140564, 0.8083476424217224, 0.8166688680648804, 0.8255184292793274, 0.8247259259223938, 0.8255184292793274, 0.8298771381378174, 0.8271034359931946, 0.819970965385437, 0.8315942287445068, 0.8350284099578857, 0.8383304476737976, 0.8405758738517761, 0.8428213000297546, 0.837537944316864, 0.8433496356010437, 0.8391229510307312, 0.8482366800308228, 0.8387266993522644, 0.8519350290298462, 0.8520671129226685, 0.8446704745292664, 0.858671247959137, 0.8487650156021118, 0.8545766472816467, 0.8588033318519592, 0.850350022315979], "val_loss": [1.917065143585205, 1.1137665510177612, 0.8987205624580383, 0.7893323302268982, 0.7259548902511597, 0.6842520236968994, 0.6546852588653564, 0.7624667882919312, 0.6360044479370117, 0.626258373260498, 0.5956016182899475, 0.5912108421325684, 0.6158413290977478, 0.5618554949760437, 0.5846346616744995, 0.5522850155830383, 0.5686154365539551, 0.5453073978424072, 0.547095537185669, 0.52545565366745, 0.541269838809967, 0.5122291445732117, 0.5055026412010193, 0.5051918029785156, 0.4932933747768402, 0.4914262294769287, 0.49748244881629944, 0.494392991065979, 0.48900672793388367, 0.47653424739837646, 0.46707433462142944, 0.46532848477363586, 0.47767773270606995, 0.4833300709724426, 0.44515877962112427, 0.4511857032775879, 0.46276912093162537, 0.4387536346912384, 0.436526894569397, 0.4366540014743805, 0.4402971565723419, 0.4283997416496277, 0.42496705055236816, 0.4339955747127533, 0.4160727262496948, 0.4234641194343567, 0.4274447560310364, 0.4141286611557007, 0.41060879826545715, 0.4150077700614929, 0.4101589322090149, 0.4098104238510132, 0.41869214177131653], "val_accuracy": [0.5320000052452087, 0.6396666765213013, 0.6766666769981384, 0.6996666789054871, 0.7256666421890259, 0.737666666507721, 0.7526666522026062, 0.690666675567627, 0.753333330154419, 0.7596666812896729, 0.7726666927337646, 0.7576666474342346, 0.7540000081062317, 0.781000018119812, 0.7763333320617676, 0.784333348274231, 0.7683333158493042, 0.7896666526794434, 0.7816666960716248, 0.79666668176651, 0.7836666703224182, 0.8036666512489319, 0.8063333630561829, 0.8096666932106018, 0.8066666722297668, 0.8153333067893982, 0.8119999766349792, 0.8083333373069763, 0.8103333115577698, 0.8190000057220459, 0.8253333568572998, 0.8230000138282776, 0.8196666836738586, 0.8153333067893982, 0.8349999785423279, 0.8330000042915344, 0.824999988079071, 0.8376666903495789, 0.8346666693687439, 0.8356666564941406, 0.8349999785423279, 0.8423333168029785, 0.8446666598320007, 0.8356666564941406, 0.843999981880188, 0.8356666564941406, 0.8403333425521851, 0.8483333587646484, 0.8473333120346069, 0.8426666855812073, 0.8443333506584167, 0.8463333249092102, 0.8426666855812073]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 38, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 2, 0, 5, 3, 6, 2], [2, 0, 3, 5, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 0, 2, 5, 2, 1], [0, 6, 4, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.14342856407165527, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4334191254315729e+19, 4.1782061100436763e+21, 1.2678462189840135e+25, 1.6894470854276853e+30, Infinity, NaN], "accuracy": [0.12257297337055206, 0.09959053993225098, 0.09866596013307571, 0.09826971590518951, 0.09826971590518951, 0.09959053993225098], "val_loss": [8.2912131157007e+19, 5.273284619526474e+22, 2.950288498931011e+26, 9.620145200743406e+31, NaN, NaN], "val_accuracy": [0.14100000262260437, 0.09866666793823242, 0.09966666996479034, 0.0989999994635582, 0.09799999743700027, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 7, 2, 3, 5], [0, 2, 1, 0, 2], [0, 85, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [0, 0, 1, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 6, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 1, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [57, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [40, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032476902008057, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 2, 3, 9], [0, 1, 1, 0, 0], [0, 10, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 7, 4, 3, 1, 8, 4, 4, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [27733.515625, 518446743552.0, 9.07063722737297e+18, 7.151252964403797e+25, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09840179979801178, 0.1002509593963623, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1941028.75, 34410321674240.0, 5.730435053486678e+20, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10499999672174454, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]