[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8125714063644409, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2095561027526855, 1.6005749702453613, 1.1673369407653809, 0.9957453608512878, 0.8745964765548706, 0.8161182403564453, 0.7957382798194885, 0.7714536786079407, 0.7362821698188782, 0.735307514667511, 0.6836575269699097, 0.6904816031455994, 0.6447110176086426, 0.6559136509895325, 0.6457521319389343, 0.6086585521697998, 0.6024043560028076, 0.5874596238136292, 0.5885323882102966, 0.5677080154418945, 0.5777873396873474, 0.5624317526817322, 0.5518444180488586, 0.5427531599998474, 0.5306620597839355, 0.5229879021644592, 0.5268385410308838, 0.5145032405853271, 0.5060079097747803, 0.5138596296310425], "accuracy": [0.26099589467048645, 0.5052172541618347, 0.5930524468421936, 0.6485272645950317, 0.677189290523529, 0.7014925479888916, 0.7087571024894714, 0.7190595865249634, 0.7290979027748108, 0.7305507659912109, 0.7471932172775269, 0.739400327205658, 0.7580240368843079, 0.7536653280258179, 0.7597411274909973, 0.7744023203849792, 0.778232753276825, 0.7786290049552917, 0.7792893648147583, 0.7926297783851624, 0.7885351777076721, 0.7948752045631409, 0.7960638999938965, 0.7975168228149414, 0.8087438941001892, 0.8107251524925232, 0.8024039268493652, 0.8140271902084351, 0.8146876096725464, 0.8109893202781677], "val_loss": [1.9147584438323975, 1.1173545122146606, 0.8670312762260437, 0.7920823693275452, 0.730055034160614, 0.6792282462120056, 0.6774904727935791, 0.6598395705223083, 0.6630816459655762, 0.5868061780929565, 0.5970664620399475, 0.5942503213882446, 0.548797607421875, 0.5404824614524841, 0.5447637438774109, 0.5392093658447266, 0.5256497263908386, 0.5127052664756775, 0.5029994249343872, 0.4932137727737427, 0.4954678416252136, 0.5089846849441528, 0.47180378437042236, 0.4691143333911896, 0.45553117990493774, 0.4897345304489136, 0.4789879620075226, 0.4455950856208801, 0.4442856013774872, 0.43517041206359863], "val_accuracy": [0.5643333196640015, 0.6566666960716248, 0.7036666870117188, 0.7256666421890259, 0.7296666502952576, 0.7379999756813049, 0.7400000095367432, 0.7356666922569275, 0.75, 0.7793333530426025, 0.781333327293396, 0.7703333497047424, 0.7893333435058594, 0.7990000247955322, 0.7886666655540466, 0.8013333082199097, 0.7986666560173035, 0.8033333420753479, 0.8086666464805603, 0.8159999847412109, 0.8146666884422302, 0.8063333630561829, 0.8256666660308838, 0.8316666483879089, 0.8389999866485596, 0.8163333535194397, 0.8183333277702332, 0.8349999785423279, 0.8323333263397217, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 8], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 4, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.2168571501970291, "mapping_values": [1, 11, 6, 5, 1, 8, 5, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.384737253189087, 2.424004316329956, 2.2292985916137695, 2.7164862155914307, 2.2726492881774902, 2.259930372238159], "accuracy": [0.1842557191848755, 0.15136705338954926, 0.25082552433013916, 0.14278165996074677, 0.13340377807617188, 0.16166952252388], "val_loss": [2.290102481842041, 2.293745994567871, 2.2912211418151855, 2.306881904602051, 2.3176610469818115, 2.3075835704803467], "val_accuracy": [0.2293333262205124, 0.15033333003520966, 0.11533333361148834, 0.09933333098888397, 0.10000000149011612, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 3, 2, 3, 5], [0, 2, 1, 0, 2], [33, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 5, 2, 1, 5], [0, 3, 1, 6, 0, 2], [0, 6], [1], [0], [2], [0]], "fitness": -0.10457143187522888, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 14, 8, 6, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(alpha, tf.math.square(grad))))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.1458329531425751e+19, 2.976261234643041e+21, 6.4912187372741534e+22, 5.815365612850492e+23, 3.3920999983507877e+24, 1.3940171061778675e+25, 4.379278256854332e+25, 1.1867176921905699e+26], "accuracy": [0.108440101146698, 0.1014397069811821, 0.09721305221319199, 0.10236428678035736, 0.10368511080741882, 0.09919429570436478, 0.10315678268671036, 0.1018359512090683], "val_loss": [1.4727880848440925e+20, 1.2229354777238649e+22, 1.827083527370431e+23, 1.2413905039172892e+24, 6.015413490685656e+24, 2.222328142431585e+25, 5.345708712899198e+25, 1.1655334512963218e+26], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.109333336353302, 0.09099999815225601, 0.1003333330154419, 0.09799999743700027, 0.10433333367109299, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 8, 5], [0, 2, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 6, 3, 2, 2, 8], [2, 3, 3, 1, 0, 4], [86, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 7, 1], [6, 6, 2, 0, 0], [37, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 14, 8, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.add(grad, alpha), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 65, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.subtract(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3116939067840576, 2.310035228729248, 2.3091211318969727, 2.311180353164673, 2.3107223510742188, 2.3107666969299316], "accuracy": [0.08492933213710785, 0.09060890227556229, 0.0944393053650856, 0.08928807079792023, 0.08875974267721176, 0.09351472556591034], "val_loss": [2.308288812637329, 2.308288812637329, 2.308288812637329, 2.308288812637329, 2.308288812637329, 2.308288812637329], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]