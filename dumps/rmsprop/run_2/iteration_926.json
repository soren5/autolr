[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7977142930030823, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.215043306350708, 1.6212189197540283, 1.1653308868408203, 0.9898287653923035, 0.8782946467399597, 0.8391704559326172, 0.7792088389396667, 0.7712920904159546, 0.7185977101325989, 0.713270902633667, 0.6811524033546448, 0.6713322401046753, 0.6494225859642029, 0.6603058576583862, 0.634763240814209, 0.6112657189369202, 0.5955285429954529, 0.5874104499816895, 0.5750803351402283], "accuracy": [0.2642979919910431, 0.5048210024833679, 0.5964865684509277, 0.6503764390945435, 0.6774534583091736, 0.6989829540252686, 0.7201162576675415, 0.7173424959182739, 0.7359662055969238, 0.7323999404907227, 0.7416457533836365, 0.748778223991394, 0.754589855670929, 0.7514199018478394, 0.7588165402412415, 0.7761194109916687, 0.7821952104568481, 0.7800818681716919, 0.7837802171707153], "val_loss": [1.9315623044967651, 1.0926330089569092, 0.8895826935768127, 0.8079254627227783, 0.727260410785675, 0.7353366017341614, 0.6615007519721985, 0.6763304471969604, 0.630178689956665, 0.6677905321121216, 0.6685754656791687, 0.6406002044677734, 0.5894151926040649, 0.5717467665672302, 0.5711652636528015, 0.5689992904663086, 0.5814439654350281, 0.5746440291404724, 0.5629963278770447], "val_accuracy": [0.5759999752044678, 0.6600000262260437, 0.6796666383743286, 0.6926666498184204, 0.7329999804496765, 0.7046666741371155, 0.7443333268165588, 0.746666669845581, 0.7573333382606506, 0.7396666407585144, 0.7269999980926514, 0.7463333606719971, 0.7760000228881836, 0.7820000052452087, 0.778333306312561, 0.7773333191871643, 0.7680000066757202, 0.7680000066757202, 0.7763333320617676]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 1, 6, 3, 8, 2, 3], [2, 0, 3, 0, 0, 5, 5, 4], [16, 1, 77], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 1, 3, 6], [0, 6, 1, 6, 6], [0], [1], [0], [4], [0]], "fitness": -0.1225714311003685, "mapping_values": [1, 2, 1, 1, 1, 16, 8, 8, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.415097713470459, 2.3049726486206055, 2.3032214641571045, 2.3032009601593018, 2.2649481296539307, 2.3018131256103516], "accuracy": [0.19072777032852173, 0.10962884873151779, 0.10328886657953262, 0.09734513610601425, 0.13472460210323334, 0.10474177449941635], "val_loss": [2.1870157718658447, 2.3030812740325928, 2.302720069885254, 2.3023672103881836, 2.3048360347747803, 2.2694249153137207], "val_accuracy": [0.12200000137090683, 0.10133333504199982, 0.09333333373069763, 0.10066666454076767, 0.10233332961797714, 0.11166666448116302]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 2, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 4, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 5, 5], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1, 1], [0, 7], [1, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 0, 11, 6, 5, 1, 6, 4, 2, 1, 4, 2, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), grad), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(grad, grad), tf.math.pow(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3133368492126465, 2.3749096393585205, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.1022322028875351, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3199849128723145, 7.624385356903076, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 3, 2, 3, 5, 7, 1, 1, 7, 5, 2, 3, 2, 9], [0, 2, 1, 0, 2, 1, 1, 2, 1, 0, 1, 0], [0, 39, 39, 28, 90], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 2, 0, 8, 5, 9, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 27, 15, 12, 5, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(grad, tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.add(grad, tf.math.square(alpha)), tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), alpha), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093647956848145, 2.310223340988159, 2.3084123134613037, 2.3104329109191895, 2.3092539310455322, 2.309863328933716], "accuracy": [0.08875974267721176, 0.09272222965955734, 0.09298639744520187, 0.09179764986038208, 0.09034473448991776, 0.09192973375320435], "val_loss": [2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 2, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 7, 1, 8, 2, 8], [0, 6, 1, 6, 0, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 16, 10, 6, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.sqrt(alpha), tf.math.add(grad, tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310614824295044, 2.309976577758789, 2.3096859455108643, 2.309499740600586, 2.3106777667999268, 2.3107032775878906], "accuracy": [0.08889182657003403, 0.09470347315073013, 0.09219389408826828, 0.0956280529499054, 0.08981640636920929, 0.09232597798109055], "val_loss": [2.308588743209839, 2.308588743209839, 2.308588743209839, 2.308588743209839, 2.308588743209839, 2.308588743209839], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]