[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8162857294082642, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2090444564819336, 1.6063636541366577, 1.1658912897109985, 0.9844024777412415, 0.9085254073143005, 0.8179717063903809, 0.8055108189582825, 0.7608221173286438, 0.7359997034072876, 0.7253432273864746, 0.6698489189147949, 0.6846193075180054, 0.6478148102760315, 0.6457350850105286, 0.6320355534553528, 0.6192318797111511, 0.608022153377533, 0.575371265411377, 0.5796454548835754, 0.5708481073379517, 0.5603951215744019, 0.5598770976066589, 0.5521696209907532, 0.5341299176216125, 0.5411836504936218, 0.5283280611038208, 0.5140910148620605, 0.5098069906234741, 0.5083804726600647, 0.5094026327133179, 0.4951925575733185, 0.48094379901885986], "accuracy": [0.2779025137424469, 0.5013868808746338, 0.5975432395935059, 0.6535464525222778, 0.6672830581665039, 0.7028133869171143, 0.7083608508110046, 0.7152291536331177, 0.7235503792762756, 0.7338528633117676, 0.7548540234565735, 0.7510236501693726, 0.7611940503120422, 0.7664773464202881, 0.76542067527771, 0.7712323069572449, 0.772288978099823, 0.7903843522071838, 0.7905164361000061, 0.7869502305984497, 0.791969358921051, 0.7910447716712952, 0.7948752045631409, 0.8033285140991211, 0.8026680946350098, 0.8063663840293884, 0.8080834746360779, 0.8119139075279236, 0.8146876096725464, 0.8131026029586792, 0.8193105459213257, 0.8271034359931946], "val_loss": [1.915294885635376, 1.1111396551132202, 0.8517017960548401, 0.7925758361816406, 0.7660589814186096, 0.6688520312309265, 0.6497405767440796, 0.6796237826347351, 0.6233832836151123, 0.6010642647743225, 0.5845610499382019, 0.56521075963974, 0.6194400191307068, 0.5412427186965942, 0.5564513206481934, 0.5420502424240112, 0.5259549021720886, 0.5124044418334961, 0.5419889092445374, 0.5137699842453003, 0.5135545134544373, 0.5141748785972595, 0.5010003447532654, 0.49802467226982117, 0.4914299249649048, 0.48132938146591187, 0.4688279628753662, 0.4954031705856323, 0.4623613953590393, 0.46993106603622437, 0.45957058668136597, 0.4613180458545685], "val_accuracy": [0.5189999938011169, 0.6523333191871643, 0.7103333473205566, 0.7056666612625122, 0.7073333263397217, 0.7536666393280029, 0.7616666555404663, 0.7413333058357239, 0.7556666731834412, 0.7736666798591614, 0.7786666750907898, 0.793666660785675, 0.7419999837875366, 0.7943333387374878, 0.7833333611488342, 0.8023333549499512, 0.8063333630561829, 0.812333345413208, 0.7913333177566528, 0.809333324432373, 0.8056666851043701, 0.8069999814033508, 0.8213333487510681, 0.8063333630561829, 0.8146666884422302, 0.8223333358764648, 0.828000009059906, 0.8176666498184204, 0.828000009059906, 0.8223333358764648, 0.8273333311080933, 0.8180000185966492]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 6, 2, 5, 2, 1, 4, 2, 4, 4, 9], [0, 0, 0, 6, 0, 0, 6, 2, 1], [48, 22, 48, 3, 97, 21], [1], [0], [2], [0]], "fitness": -0.22828571498394012, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 21, 12, 9, 6, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad), beta), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.816619634628296, 2.278688907623291, 2.397624969482422, 2.445746660232544, 2.431406021118164, 2.434168577194214, NaN, NaN], "accuracy": [0.19680359959602356, 0.14529123902320862, 0.1604807823896408, 0.1472724825143814, 0.1002509593963623, 0.10038304328918457, 0.10077928751707077, 0.09998679161071777], "val_loss": [2.319857597351074, 2.181147813796997, 2.127092123031616, 2.4925904273986816, 2.3101160526275635, 184.90521240234375, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.20100000500679016, 0.23466666042804718, 0.10833333432674408, 0.1666666716337204, 0.12999999523162842, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 6, 3, 5], [2, 3, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 9, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 7, 2, 1], [3, 6, 1, 6, 0], [65, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 1, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034613132476807, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 3, 3, 9, 0, 3, 1], [1, 2, 1, 0, 1, 2, 2, 1], [0, 16, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 1, 40], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 8, 2, 5, 2, 1, 6, 8, 0], [6, 3, 1, 6, 0, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 12, 8, 2, 12, 7, 5, 3, 16, 10, 6, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(tf.math.square(alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.subtract(alpha, grad), grad)))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(sigma, tf.math.sqrt(alpha))), tf.math.negative(grad))), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [411585407352832.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [4, 1, 3, 2, 7, 5, 8, 6, 4, 8, 3, 8, 0], [0, 2, 1, 0, 2, 1, 0, 1, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [77, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 1, 2, 2], [2, 3, 4, 2, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 13, 9, 3, 4, 2, 2, 1, 12, 7, 5, 2, 10, 5, 5, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.multiply(grad, alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.add(sigma, grad)), tf.math.add(beta, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]