[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8482857346534729, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2114367485046387, 1.6178662776947021, 1.141381025314331, 0.9936307668685913, 0.8955139517784119, 0.8166497349739075, 0.7829779982566833, 0.7992013692855835, 0.7344962954521179, 0.7065559029579163, 0.6964085102081299, 0.6840072870254517, 0.6452570557594299, 0.6590619683265686, 0.6375516653060913, 0.6172282099723816, 0.6170404553413391, 0.5986950397491455, 0.5832998752593994, 0.6030638217926025, 0.5714667439460754, 0.5669710040092468, 0.555321991443634, 0.5408900380134583, 0.5471770167350769, 0.5280536413192749, 0.5442042946815491, 0.5246263742446899, 0.5153980851173401, 0.5112802386283875, 0.5030320286750793, 0.49642351269721985, 0.4851979613304138, 0.48720094561576843, 0.4827255308628082, 0.4826091527938843, 0.46835359930992126, 0.46427202224731445, 0.47474759817123413, 0.45706817507743835, 0.45477432012557983, 0.4517127275466919, 0.4592949151992798, 0.4375745356082916, 0.43680036067962646, 0.43677183985710144], "accuracy": [0.25941091775894165, 0.4939902126789093, 0.605468213558197, 0.6387531161308289, 0.6851142644882202, 0.7004358768463135, 0.7079645991325378, 0.7045304179191589, 0.72672039270401, 0.737947404384613, 0.7400607466697693, 0.7471932172775269, 0.7582882046699524, 0.7520803213119507, 0.7584202885627747, 0.7687227725982666, 0.7718927264213562, 0.7734777331352234, 0.7812706232070923, 0.7717606425285339, 0.7882710099220276, 0.7923656105995178, 0.7947431206703186, 0.7942147850990295, 0.7944789528846741, 0.8001585006713867, 0.7979130744934082, 0.8105930685997009, 0.8104609847068787, 0.8061022162437439, 0.8161405324935913, 0.8150838613510132, 0.8232730031013489, 0.8215559124946594, 0.8203672170639038, 0.8224804997444153, 0.8305375576019287, 0.8276317715644836, 0.8272355198860168, 0.8370096683502197, 0.8352925777435303, 0.833179235458374, 0.8343679904937744, 0.8391229510307312, 0.8409721255302429, 0.8411042094230652], "val_loss": [1.9254720211029053, 1.1458021402359009, 0.8931729197502136, 0.7813040614128113, 0.7098388671875, 0.6717486381530762, 0.6599334478378296, 0.6398466229438782, 0.6291581988334656, 0.5957229137420654, 0.6123557686805725, 0.5933148860931396, 0.6018226742744446, 0.5760966539382935, 0.5754140019416809, 0.5470178127288818, 0.5547153949737549, 0.5250425934791565, 0.5489230751991272, 0.5230182409286499, 0.5132582783699036, 0.5252518653869629, 0.4975167512893677, 0.4978296756744385, 0.49958598613739014, 0.5094658136367798, 0.48058435320854187, 0.49023571610450745, 0.4678390622138977, 0.46144774556159973, 0.4656119644641876, 0.4670884907245636, 0.45594921708106995, 0.4569251835346222, 0.46536844968795776, 0.4546761214733124, 0.4513167440891266, 0.4526345729827881, 0.4502534568309784, 0.43436893820762634, 0.4360980689525604, 0.44594255089759827, 0.43880224227905273, 0.4492071568965912, 0.433430016040802, 0.4238179922103882], "val_accuracy": [0.5523333549499512, 0.6296666860580444, 0.675000011920929, 0.7086666822433472, 0.7403333187103271, 0.7426666617393494, 0.7570000290870667, 0.7613333463668823, 0.7620000243186951, 0.7726666927337646, 0.765333354473114, 0.7746666669845581, 0.7643333077430725, 0.7839999794960022, 0.7846666574478149, 0.7943333387374878, 0.7829999923706055, 0.8029999732971191, 0.7956666946411133, 0.7996666431427002, 0.8076666593551636, 0.8019999861717224, 0.8186666369438171, 0.8176666498184204, 0.8066666722297668, 0.8056666851043701, 0.8236666917800903, 0.8149999976158142, 0.8286666870117188, 0.82833331823349, 0.8309999704360962, 0.8306666612625122, 0.8326666951179504, 0.82833331823349, 0.8263333439826965, 0.8346666693687439, 0.8330000042915344, 0.8299999833106995, 0.8349999785423279, 0.8386666774749756, 0.8413333296775818, 0.8373333215713501, 0.8360000252723694, 0.8289999961853027, 0.8379999995231628, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 8, 0, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [0, 0, 3, 2, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 9], [0, 6, 1], [0, 65], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [95.72645568847656, 10666.5244140625, 180326.25, 1286141.0, 5564534.0, 18861988.0], "accuracy": [0.09589222073554993, 0.10593052208423615, 0.09998679161071777, 0.09959053993225098, 0.10011887550354004, 0.10038304328918457], "val_loss": [806.2656860351562, 39609.375, 420945.90625, 2288076.75, 8559514.0, 25230962.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [7, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 7, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 5, 3, 2, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3029425144195557, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 2, 3, 5, 9], [0, 2, 1, 3, 2], [0, 39, 39], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 2, 0, 2, 5, 2, 1], [1, 6, 1, 6, 0], [0, 70], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 7, 4, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105568885803223, 2.309755563735962, 2.311321258544922, 2.309077262878418, 2.30814266204834, 2.310544013977051], "accuracy": [0.08836349099874496, 0.09126931428909302, 0.08955223858356476, 0.09721305221319199, 0.09311848133802414, 0.08730682730674744], "val_loss": [2.309080123901367, 2.309080123901367, 2.309080123901367, 2.309080123901367, 2.309080123901367, 2.309080123901367], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 1, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 0, 2, 5, 8, 8, 6, 7, 4, 8, 3, 0, 0], [0, 6, 1, 1, 0, 7, 5], [0, 76], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 21, 14, 7, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)))), tf.math.pow(tf.math.sqrt(alpha), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.negative(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309011936187744, 2.310112237930298, 2.309558868408203, 2.309370279312134, 2.3097941875457764, 2.310302972793579], "accuracy": [0.0944393053650856, 0.08955223858356476, 0.09245806187391281, 0.09602430462837219, 0.09932637959718704, 0.09668471664190292], "val_loss": [2.309337615966797, 2.309337615966797, 2.309337615966797, 2.309337615966797, 2.309337615966797, 2.309337615966797], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]