[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8460000157356262, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115213871002197, 1.6035518646240234, 1.1275091171264648, 0.9605789184570312, 0.899074375629425, 0.8218628764152527, 0.7674354910850525, 0.7567363381385803, 0.7054775357246399, 0.6905444860458374, 0.6720731854438782, 0.6750778555870056, 0.6319993138313293, 0.6231991052627563, 0.6099893450737, 0.5930700302124023, 0.6025733947753906, 0.5835455060005188, 0.5549008846282959, 0.5613900423049927, 0.5504114031791687, 0.5417618155479431, 0.525894820690155, 0.5338351130485535, 0.5211982727050781, 0.514241099357605, 0.5105997920036316, 0.508783757686615, 0.4984301030635834, 0.495052695274353, 0.485470175743103, 0.4902355372905731, 0.4709733724594116, 0.46637123823165894, 0.4670984745025635, 0.4574081003665924, 0.4608893096446991, 0.441865473985672], "accuracy": [0.2631092369556427, 0.5094439387321472, 0.6083740592002869, 0.6573768258094788, 0.6684718132019043, 0.7047945857048035, 0.715889573097229, 0.7213049530982971, 0.7368907928466797, 0.7430986762046814, 0.7518161535263062, 0.7460044622421265, 0.767401933670044, 0.7683265209197998, 0.7693831920623779, 0.7800818681716919, 0.7769119143486023, 0.7807422876358032, 0.7911768555641174, 0.7880068421363831, 0.7913089394569397, 0.7996301651000977, 0.8024039268493652, 0.8076872229576111, 0.8076872229576111, 0.807158887386322, 0.8088759779930115, 0.8087438941001892, 0.8169330358505249, 0.8148196935653687, 0.8241975903511047, 0.8204993009567261, 0.8274996876716614, 0.8289526104927063, 0.830669641494751, 0.8339717388153076, 0.8318583965301514, 0.8362171649932861], "val_loss": [1.9218577146530151, 1.0922735929489136, 0.8897356986999512, 0.8821458220481873, 0.7294356226921082, 0.7094075679779053, 0.6877594590187073, 0.6497145295143127, 0.636620044708252, 0.6156511902809143, 0.65572589635849, 0.5789298415184021, 0.5877798795700073, 0.580005943775177, 0.568648099899292, 0.5414900183677673, 0.5489321947097778, 0.5378743410110474, 0.5518214702606201, 0.5302776098251343, 0.5143672823905945, 0.5063518285751343, 0.5001890659332275, 0.48847895860671997, 0.48394715785980225, 0.4992660582065582, 0.502274751663208, 0.469897985458374, 0.5057491064071655, 0.48395222425460815, 0.46909570693969727, 0.4546973407268524, 0.4514615833759308, 0.4591594338417053, 0.45208799839019775, 0.4480642080307007, 0.4547567069530487, 0.4484480023384094], "val_accuracy": [0.5630000233650208, 0.6589999794960022, 0.6863333582878113, 0.6556666493415833, 0.7170000076293945, 0.7183333039283752, 0.7409999966621399, 0.7536666393280029, 0.7540000081062317, 0.7616666555404663, 0.7476666569709778, 0.7739999890327454, 0.7683333158493042, 0.7566666603088379, 0.7689999938011169, 0.7893333435058594, 0.7799999713897705, 0.7910000085830688, 0.7643333077430725, 0.7916666865348816, 0.796999990940094, 0.8056666851043701, 0.8090000152587891, 0.8056666851043701, 0.8143333196640015, 0.8063333630561829, 0.8043333292007446, 0.8186666369438171, 0.7963333129882812, 0.812333345413208, 0.8276666402816772, 0.8309999704360962, 0.8323333263397217, 0.82833331823349, 0.8299999833106995, 0.8323333263397217, 0.8266666531562805, 0.8263333439826965]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7960000038146973, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210474729537964, 1.6082926988601685, 1.1650006771087646, 0.9785119295120239, 0.9062426686286926, 0.8140755891799927, 0.7916812896728516, 0.7537678480148315, 0.7190572023391724, 0.7055980563163757, 0.6872207522392273, 0.6629789471626282, 0.6364262700080872, 0.645726203918457, 0.6286564469337463, 0.618177592754364, 0.587944746017456, 0.6077961921691895, 0.5800518989562988, 0.5643690228462219, 0.5542330145835876, 0.5530135631561279, 0.5397790670394897, 0.5425379276275635], "accuracy": [0.2690529525279999, 0.5042926669120789, 0.5904107689857483, 0.6487914323806763, 0.6664905548095703, 0.7025492191314697, 0.707040011882782, 0.7165499925613403, 0.7351737022399902, 0.735041618347168, 0.7428345084190369, 0.7515519857406616, 0.7619865536689758, 0.7593448758125305, 0.7656848430633545, 0.7687227725982666, 0.7803460359573364, 0.7711002230644226, 0.7903843522071838, 0.7893276810646057, 0.7969884872436523, 0.7930260300636292, 0.8009510040283203, 0.7946110367774963], "val_loss": [1.9201629161834717, 1.0869032144546509, 0.8680558204650879, 0.7652536630630493, 0.6978070735931396, 0.6684309840202332, 0.6571685671806335, 0.6344670653343201, 0.6178696155548096, 0.5883715748786926, 0.5860700607299805, 0.5555030703544617, 0.5508762001991272, 0.5986202955245972, 0.5202828049659729, 0.5140166878700256, 0.5242498517036438, 0.5095820426940918, 0.5025233030319214, 0.5096116065979004, 0.5066967606544495, 0.5040599703788757, 0.5153538584709167, 0.4988284409046173], "val_accuracy": [0.47433334589004517, 0.6453333497047424, 0.6943333148956299, 0.7126666903495789, 0.7493333220481873, 0.7513333559036255, 0.7559999823570251, 0.7723333239555359, 0.7766666412353516, 0.7799999713897705, 0.777999997138977, 0.7986666560173035, 0.7913333177566528, 0.7716666460037231, 0.8040000200271606, 0.8113333582878113, 0.8009999990463257, 0.8183333277702332, 0.8203333616256714, 0.8029999732971191, 0.8130000233650208, 0.8169999718666077, 0.8026666641235352, 0.8149999976158142]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 2, 3, 1, 3, 5, 7, 5, 5, 7, 9], [0, 1, 1, 0, 2, 3, 0], [0, 27, 39, 92], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 1, 87], [0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 7, 2, 5, 9], [0, 6, 1], [0, 77], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 4, 12, 7, 5, 3, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(alpha))), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 1, 2, 2], [0, 6, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [3, 2, 0, 6, 2, 7, 2], [4, 0, 3, 3, 0], [16, 1], [0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 9, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.413578748703003, 2.455787181854248, 3.1259238719940186, 3.8402462005615234, 3.8798344135284424, 3.2996089458465576], "accuracy": [0.09840179979801178, 0.0956280529499054, 0.09285431355237961, 0.10342095047235489, 0.09747721254825592, 0.09826971590518951], "val_loss": [2.3266866207122803, 2.7588512897491455, 3.54831600189209, 3.95139217376709, 3.485954523086548, 3.1646525859832764], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.0989999994635582, 0.09966666996479034, 0.0989999994635582, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [3, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 2, 3, 4, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [8, 8, 3, 2, 5], [0, 1, 7], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 4, 2, 2, 1, 5, 3, 2, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3084404468536377, 2.310197591781616, 2.3099002838134766, 2.3103864192962646, 2.309326648712158, 2.309832811355591], "accuracy": [0.09681680053472519, 0.09192973375320435, 0.09074098616838455, 0.0886276587843895, 0.09192973375320435, 0.09074098616838455], "val_loss": [2.30851411819458, 2.30851411819458, 2.30851411819458, 2.30851411819458, 2.30851411819458, 2.30851411819458], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 0, 6, 3, 8, 4], [2, 0, 3, 1, 5], [16, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 0, 2, 5, 1, 0, 3, 2, 0], [0, 6, 1, 0, 5, 0, 6], [33, 77, 14], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31069016456604, 2.3100247383117676, 2.3092610836029053, 2.3096094131469727, 2.3096883296966553, 2.3107621669769287], "accuracy": [0.08902391046285629, 0.09576013684272766, 0.09245806187391281, 0.09906221181154251, 0.0940430611371994, 0.09893012791872025], "val_loss": [2.3081634044647217, 2.3081634044647217, 2.3081634044647217, 2.3081634044647217, 2.3081634044647217, 2.3081634044647217], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}, "mapping_values": [1, 11, 6, 5, 2, 3, 2, 1, 0, 17, 10, 7, 3, 1, 0, 1, 0], "tree_depth": 20}]