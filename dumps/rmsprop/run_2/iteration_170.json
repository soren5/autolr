[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8014285564422607, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211493730545044, 1.6065222024917603, 1.1349045038223267, 1.0057629346847534, 0.8923511505126953, 0.8320052623748779, 0.7878250479698181, 0.8026430606842041, 0.7237945795059204, 0.7072108387947083, 0.7129835486412048, 0.6887349486351013, 0.6562739014625549, 0.6454585790634155, 0.6325758695602417, 0.6238740086555481, 0.60516756772995, 0.629686176776886, 0.597797155380249, 0.5740465521812439, 0.5707941651344299, 0.5740764141082764, 0.5616286993026733, 0.55965656042099, 0.543581485748291, 0.5379704236984253, 0.5260041952133179, 0.5281842947006226, 0.5186396241188049, 0.5083528161048889, 0.5057022571563721, 0.4973771870136261, 0.5037217140197754, 0.4838840663433075, 0.47378164529800415, 0.47624722123146057, 0.4646300971508026, 0.46514755487442017, 0.46910566091537476, 0.4514826238155365, 0.45568332076072693, 0.4583772122859955, 0.4501784145832062, 0.43406516313552856, 0.43612128496170044, 0.43492019176483154, 0.43835943937301636, 0.42239171266555786, 0.42308172583580017, 0.4234749674797058, 0.41643792390823364, 0.4134357273578644, 0.41085368394851685, 0.40709933638572693, 0.4053087532520294], "accuracy": [0.26535463333129883, 0.5045568346977234, 0.6057323813438416, 0.6355831623077393, 0.6789063811302185, 0.6977941989898682, 0.7125874757766724, 0.7012283802032471, 0.7334566116333008, 0.7392682433128357, 0.7366266250610352, 0.7407211661338806, 0.755118191242218, 0.7584202885627747, 0.7670056819915771, 0.765949010848999, 0.7786290049552917, 0.7646281719207764, 0.7783648371696472, 0.7924976944923401, 0.7922335267066956, 0.7814027070999146, 0.7926297783851624, 0.7928939461708069, 0.7985734939575195, 0.7984414100646973, 0.8030643463134766, 0.800290584564209, 0.8112534880638123, 0.8112534880638123, 0.8121780753135681, 0.8170651197433472, 0.8125742673873901, 0.8201030492782593, 0.8227446675300598, 0.8241975903511047, 0.8273676037788391, 0.8228767514228821, 0.8240655064582825, 0.8314621448516846, 0.8381983637809753, 0.8280280232429504, 0.8362171649932861, 0.8389908671379089, 0.8381983637809753, 0.8384625315666199, 0.8383304476737976, 0.8490291833877563, 0.8424250483512878, 0.8428213000297546, 0.8474441766738892, 0.8457271456718445, 0.8492933511734009, 0.8495575189590454, 0.8511425256729126], "val_loss": [1.928952932357788, 1.1075847148895264, 0.8891655206680298, 0.7747990489006042, 0.7410886883735657, 0.7335405945777893, 0.6625975966453552, 0.6458922028541565, 0.6435188055038452, 0.6603535413742065, 0.6175423264503479, 0.593245267868042, 0.5629501342773438, 0.5538598895072937, 0.5627939701080322, 0.5379945635795593, 0.5661401152610779, 0.5169994831085205, 0.5033445358276367, 0.5120133757591248, 0.5427629947662354, 0.5025940537452698, 0.500436007976532, 0.5059967637062073, 0.47670605778694153, 0.4763404130935669, 0.4640561640262604, 0.49154263734817505, 0.46621423959732056, 0.48102006316185, 0.44576171040534973, 0.485301673412323, 0.44446659088134766, 0.43624451756477356, 0.4396112859249115, 0.4367002844810486, 0.4292943477630615, 0.43856245279312134, 0.421836256980896, 0.4231722056865692, 0.4275636672973633, 0.41300076246261597, 0.41899943351745605, 0.43116316199302673, 0.41849765181541443, 0.4290819764137268, 0.40216466784477234, 0.40853142738342285, 0.4205356538295746, 0.3992519974708557, 0.4152517020702362, 0.39380592107772827, 0.4025818705558777, 0.4221152663230896, 0.3971720337867737], "val_accuracy": [0.5789999961853027, 0.6586666703224182, 0.6690000295639038, 0.722000002861023, 0.7210000157356262, 0.7129999995231628, 0.7386666536331177, 0.7606666684150696, 0.7400000095367432, 0.75, 0.7573333382606506, 0.7720000147819519, 0.7846666574478149, 0.7886666655540466, 0.7733333110809326, 0.8053333163261414, 0.781333327293396, 0.7979999780654907, 0.8080000281333923, 0.8063333630561829, 0.7883333563804626, 0.8100000023841858, 0.8119999766349792, 0.8040000200271606, 0.8226666450500488, 0.8159999847412109, 0.8243333101272583, 0.8119999766349792, 0.82833331823349, 0.8130000233650208, 0.8373333215713501, 0.8040000200271606, 0.8360000252723694, 0.8373333215713501, 0.8376666903495789, 0.8356666564941406, 0.8413333296775818, 0.8373333215713501, 0.8429999947547913, 0.8410000205039978, 0.840666651725769, 0.8476666808128357, 0.8426666855812073, 0.8353333473205566, 0.8450000286102295, 0.8420000076293945, 0.8496666550636292, 0.8453333377838135, 0.8373333215713501, 0.8550000190734863, 0.8483333587646484, 0.8460000157356262, 0.8453333377838135, 0.8413333296775818, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 63, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 7, 3, 8, 2], [2, 0, 3, 1, 0], [16, 56], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 0, 0, 2], [0, 6, 1, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.37599998712539673, "mapping_values": [1, 4, 2, 2, 1, 8, 5, 3, 1, 12, 8, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.300560474395752, 45.193603515625, 2.9151337004352447e+32, 7862.35986328125, 2001279.5, 518354784.0], "accuracy": [0.11134592443704605, 0.22137102484703064, 0.1258750557899475, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.229867458343506, 1482.7261962890625, 294.936279296875, 75503.09375, 19328790.0, 4948170240.0], "val_accuracy": [0.375, 0.2630000114440918, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 90, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 4, 5, 2, 1], [0, 6, 1, 6, 0], [0, 37], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 1, 4, 2, 6, 6, 2], [0, 2, 2, 0, 2, 0, 1, 3, 0, 1], [0, 39, 39, 5], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 1, 5, 2, 1, 1], [0, 6, 1, 6, 0, 0], [0, 21, 79], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 20, 10, 10, 4, 1, 0, 1, 0, 14, 8, 6, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)), grad)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3111934661865234, 2.3087480068206787, 2.3094894886016846, 2.309776782989502, 2.310487747192383, 2.309767007827759], "accuracy": [0.08770307898521423, 0.09391097724437714, 0.09589222073554993, 0.09166556596755981, 0.09126931428909302, 0.09126931428909302], "val_loss": [2.3092243671417236, 2.3092243671417236, 2.3092243671417236, 2.3092243671417236, 2.3092243671417236, 2.3092243671417236], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [70, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 1], [0, 6, 1, 6, 0, 0], [0, 22, 72], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 14, 8, 6, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309438467025757, 2.3094279766082764, 2.311749219894409, 2.3105456829071045, 2.310529947280884, 2.3101680278778076], "accuracy": [0.09298639744520187, 0.09311848133802414, 0.08955223858356476, 0.09219389408826828, 0.09549596905708313, 0.09245806187391281], "val_loss": [2.3094642162323, 2.3094642162323, 2.3094642162323, 2.3094642162323, 2.3094642162323, 2.3094642162323], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]