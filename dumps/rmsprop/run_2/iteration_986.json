[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2140324115753174, 1.6240582466125488, 1.1469132900238037, 0.9908163547515869, 0.8868108987808228, 0.8485888242721558, 0.7873562574386597, 0.7661217451095581, 0.7315067648887634, 0.7155017256736755, 0.6834592223167419, 0.6657179594039917, 0.6452639102935791, 0.6448851227760315, 0.629956841468811, 0.6130563616752625, 0.5960893630981445, 0.5897925496101379, 0.6001854538917542, 0.5740982890129089, 0.5699957609176636, 0.5608251094818115, 0.553578794002533, 0.5345028638839722, 0.5499238967895508, 0.5339685082435608, 0.5194176435470581, 0.5218874216079712, 0.5040075778961182, 0.509497344493866, 0.498480886220932, 0.4847477078437805, 0.48508429527282715, 0.4838659465312958, 0.47693881392478943], "accuracy": [0.26535463333129883, 0.5013868808746338, 0.5995244979858398, 0.6445648074150085, 0.6811517477035522, 0.6814159154891968, 0.7077004313468933, 0.7140403985977173, 0.7228899598121643, 0.7310791015625, 0.7423061728477478, 0.7549861073493958, 0.7569673657417297, 0.7573636174201965, 0.7638356685638428, 0.7714964747428894, 0.7783648371696472, 0.7844406366348267, 0.774798572063446, 0.7902522683143616, 0.7884030938148499, 0.7889314293861389, 0.7951393723487854, 0.8030643463134766, 0.7901201844215393, 0.8029322624206543, 0.8031964302062988, 0.809140145778656, 0.811649739742279, 0.81548011302948, 0.8168009519577026, 0.8208954930305481, 0.8207634687423706, 0.8210275769233704, 0.821820080280304], "val_loss": [1.9272831678390503, 1.108331322669983, 0.9176267385482788, 0.8302525877952576, 0.7325626611709595, 0.72170090675354, 0.6512476205825806, 0.6262168288230896, 0.6639734506607056, 0.5991146564483643, 0.5688528418540955, 0.5933965444564819, 0.5878291130065918, 0.5642423629760742, 0.549639880657196, 0.5284415483474731, 0.5334133505821228, 0.5107076168060303, 0.4933207333087921, 0.49512699246406555, 0.49360641837120056, 0.4864555597305298, 0.4842391014099121, 0.45661023259162903, 0.4939313232898712, 0.45917895436286926, 0.4523053467273712, 0.4800342321395874, 0.45114845037460327, 0.44224730134010315, 0.44284144043922424, 0.4409657418727875, 0.4246090352535248, 0.4245324432849884, 0.4391573369503021], "val_accuracy": [0.503000020980835, 0.6536666750907898, 0.6816666722297668, 0.7170000076293945, 0.7303333282470703, 0.7400000095367432, 0.7649999856948853, 0.7616666555404663, 0.7583333253860474, 0.7756666541099548, 0.7940000295639038, 0.7620000243186951, 0.7596666812896729, 0.7816666960716248, 0.7903333306312561, 0.8090000152587891, 0.7973333597183228, 0.8263333439826965, 0.8223333358764648, 0.8196666836738586, 0.824999988079071, 0.8273333311080933, 0.8223333358764648, 0.8363333344459534, 0.8176666498184204, 0.8336666822433472, 0.8370000123977661, 0.8186666369438171, 0.8273333311080933, 0.8450000286102295, 0.8396666646003723, 0.8416666388511658, 0.8450000286102295, 0.8443333506584167, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 8], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 2, 1, 6, 3, 8, 2, 1, 7, 3, 7, 9, 3, 5, 8, 6, 5, 5, 9], [2, 0, 3, 1, 0, 4, 4, 2, 1, 0], [16, 1, 66, 90, 75], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 0, 1, 0, 1], [93, 22, 63], [1], [0], [2], [0]], "fitness": -0.11514285951852798, "mapping_values": [1, 7, 4, 3, 1, 29, 19, 10, 5, 12, 7, 5, 3, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(tf.math.add(grad, grad), beta), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.square(alpha)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [15.396746635437012, 7311761988386816.0, 3.1534097945609037e+25, Infinity, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.1018359512090683, 0.10645885765552521, 0.10632677376270294, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [32155.314453125, 8.69684285634773e+17, 3.817883366264277e+27, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.1236666664481163, 0.12433333694934845, 0.12433333694934845, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 33, 39], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 7, 0, 6, 3, 0, 8, 0, 0, 7, 5], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 16, 11, 5, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.negative(grad)))), tf.math.add(alpha, tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 2, 3, 2, 3, 5], [0, 0, 1, 1, 2, 1], [62, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1, 3, 7, 5, 5, 5, 5, 0, 7, 7, 0, 5, 5, 3, 5, 9], [7, 6, 1, 6, 0, 0, 1, 3, 6], [0, 22, 61], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 10, 5, 5, 3, 31, 22, 9, 3, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.square(grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.square(tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.multiply(tf.math.square(alpha), sigma)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303664445877075, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 6, 3, 5], [0, 0, 1, 0, 1], [14, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [75, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 8, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309082508087158, 2.310347557067871, 2.3095431327819824, 2.310350179672241, 2.3105475902557373, 2.3090999126434326], "accuracy": [0.09470347315073013, 0.09259014576673508, 0.09470347315073013, 0.09391097724437714, 0.09008057415485382, 0.09219389408826828], "val_loss": [2.307889699935913, 2.307889699935913, 2.307889699935913, 2.307889699935913, 2.307889699935913, 2.307889699935913], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]