[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2124083042144775, 1.6044015884399414, 1.1294550895690918, 0.9786281585693359, 0.9034879207611084, 0.818565309047699, 0.7902992963790894, 0.7667344808578491, 0.7145971059799194, 0.6958048939704895, 0.6696176528930664, 0.6746958494186401, 0.6656326055526733, 0.6491579413414001, 0.6228367686271667, 0.6114128232002258, 0.6060757637023926, 0.5907053351402283, 0.5860757827758789, 0.575863778591156, 0.5671985149383545, 0.5557877421379089, 0.5457712411880493, 0.5304111242294312, 0.5216436386108398, 0.5518828630447388, 0.5150523781776428, 0.505425214767456, 0.5104531645774841, 0.4992522597312927, 0.49377062916755676, 0.4878520965576172, 0.47476422786712646, 0.4896766245365143, 0.47568726539611816, 0.4705234467983246, 0.46802809834480286, 0.4501135051250458, 0.45846372842788696, 0.46423041820526123, 0.43975186347961426, 0.44697219133377075, 0.43292734026908875], "accuracy": [0.2654867172241211, 0.5122177004814148, 0.6073173880577087, 0.6494518518447876, 0.6729626059532166, 0.7010962963104248, 0.7082287669181824, 0.7157574892044067, 0.733060359954834, 0.7449478507041931, 0.7503632307052612, 0.7461365461349487, 0.7499669790267944, 0.7598732113838196, 0.7711002230644226, 0.7692511081695557, 0.7712323069572449, 0.7798177003860474, 0.7815347909927368, 0.7864218950271606, 0.7880068421363831, 0.7947431206703186, 0.7997622489929199, 0.8035926818847656, 0.8088759779930115, 0.7981772422790527, 0.811649739742279, 0.817989706993103, 0.8113855719566345, 0.8177255392074585, 0.8224804997444153, 0.8228767514228821, 0.8271034359931946, 0.8232730031013489, 0.8272355198860168, 0.8296129703521729, 0.8315942287445068, 0.8380662798881531, 0.8317263126373291, 0.828292191028595, 0.8356888294219971, 0.8362171649932861, 0.8424250483512878], "val_loss": [1.9281483888626099, 1.1120480298995972, 0.8844425678253174, 0.7904803156852722, 0.7496992349624634, 0.7283921837806702, 0.7032169699668884, 0.6640477776527405, 0.6541393995285034, 0.623889148235321, 0.6037606596946716, 0.6026779413223267, 0.5898630619049072, 0.5769147276878357, 0.5745015144348145, 0.5525162816047668, 0.5294985175132751, 0.5514057278633118, 0.5267930626869202, 0.5288946032524109, 0.5003955364227295, 0.501465380191803, 0.506507933139801, 0.49867668747901917, 0.46963387727737427, 0.4742284417152405, 0.4760223925113678, 0.4840640723705292, 0.4847925901412964, 0.4579431116580963, 0.4434182941913605, 0.4495494067668915, 0.4500167965888977, 0.4429754614830017, 0.44346821308135986, 0.4388682544231415, 0.43109819293022156, 0.42051711678504944, 0.4373162090778351, 0.41674089431762695, 0.4187874495983124, 0.41236957907676697, 0.42697009444236755], "val_accuracy": [0.5946666598320007, 0.6520000100135803, 0.6896666884422302, 0.718666672706604, 0.7210000157356262, 0.7133333086967468, 0.7319999933242798, 0.7513333559036255, 0.7476666569709778, 0.7596666812896729, 0.7670000195503235, 0.765333354473114, 0.7666666507720947, 0.7776666879653931, 0.7693333625793457, 0.7776666879653931, 0.7953333258628845, 0.7689999938011169, 0.7893333435058594, 0.793666660785675, 0.8056666851043701, 0.8003333210945129, 0.8009999990463257, 0.8019999861717224, 0.8176666498184204, 0.8136666417121887, 0.8230000138282776, 0.8083333373069763, 0.815666675567627, 0.8213333487510681, 0.8273333311080933, 0.8256666660308838, 0.8190000057220459, 0.8326666951179504, 0.8316666483879089, 0.8263333439826965, 0.840666651725769, 0.8423333168029785, 0.8293333053588867, 0.8416666388511658, 0.8333333134651184, 0.8386666774749756, 0.8306666612625122]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 4, 1], [0, 6, 1, 6, 2], [0, 22], [0, 0, 0, 0, 1, 1, 0, 1], [0, 4, 0, 4, 0], [2, 1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 2, 3, 1, 8, 5, 3, 1, 8, 5, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.pow(beta, alpha)), tf.math.negative(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 2, 1, 5, 4, 5, 4, 8, 9], [0, 2, 2, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 4, 2, 5, 2, 1], [0, 6, 1, 1, 0], [0, 22], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 5, 1, 2, 5, 6, 8, 5, 4, 1, 7, 4, 2, 2, 2, 3, 3, 4, 6, 9, 9], [2, 3, 5, 7, 3, 2, 7, 6, 5, 0, 1, 2, 2], [0, 38, 79]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 3, 5, 3, 2, 1, 1, 0, 1, 1, 34, 21, 13, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.square(grad), tf.math.pow(tf.math.square(tf.math.pow(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(beta, tf.math.add(tf.math.square(sigma), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.pow(grad, tf.math.add(sigma, beta)), tf.math.add(tf.math.add(tf.math.multiply(grad, grad), grad), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.divide_no_nan(beta, beta))))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 2, 5, 1, 6], [0, 6, 0, 7, 0], [0, 22], [0, 0, 0, 1, 1], [0, 3, 0], [2, 6], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), grad))", "other_info": {"loss": [2.307753324508667, 2.3028371334075928, 2.302609443664551, 2.3010141849517822, 2.30070161819458, 2.3011882305145264], "accuracy": [0.08770307898521423, 0.09866596013307571, 0.08981640636920929, 0.09628847241401672, 0.10553427785634995, 0.09391097724437714], "val_loss": [2.3038175106048584, 2.3024888038635254, 2.301023006439209, 2.3002140522003174, 2.30057692527771, 2.301149845123291], "val_accuracy": [0.09666666388511658, 0.0860000029206276, 0.08100000023841858, 0.09066666662693024, 0.07666666805744171, 0.07333333045244217]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 9, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 2, 2, 1], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 8, 5, 3, 2, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3085169792175293, 2.3108468055725098, 2.3095154762268066, 2.309441566467285, 2.3103902339935303, 2.3103652000427246], "accuracy": [0.09893012791872025, 0.08889182657003403, 0.09430722147226334, 0.08625016361474991, 0.09021265059709549, 0.0956280529499054], "val_loss": [2.3090667724609375, 2.3090667724609375, 2.3090667724609375, 2.3090667724609375, 2.3090667724609375, 2.3090667724609375], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]