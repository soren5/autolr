[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.817714273929596, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213146448135376, 1.6216940879821777, 1.1331186294555664, 1.0131291151046753, 0.9177621006965637, 0.8619745373725891, 0.8010854125022888, 0.7704828381538391, 0.7538363933563232, 0.7271163463592529, 0.7030535340309143, 0.7001699209213257, 0.6766615509986877, 0.657674252986908, 0.658972978591919, 0.6269610524177551, 0.6301267743110657, 0.6318820118904114, 0.608248770236969, 0.5959517359733582, 0.5766823887825012, 0.5859209299087524, 0.570338249206543, 0.5616238713264465, 0.5501039028167725, 0.5448877811431885, 0.5361372828483582, 0.5260019898414612, 0.5174725651741028, 0.5215820670127869, 0.5114729404449463], "accuracy": [0.2565050721168518, 0.4951789677143097, 0.6048077940940857, 0.6350548267364502, 0.6668868064880371, 0.6848500967025757, 0.7018887996673584, 0.7170783281326294, 0.7135120630264282, 0.7238145470619202, 0.7331924438476562, 0.7359662055969238, 0.7453441023826599, 0.7532690763473511, 0.752740740776062, 0.7629110813140869, 0.7623828053474426, 0.7642319202423096, 0.7744023203849792, 0.7765156626701355, 0.7882710099220276, 0.7817989587783813, 0.7877426743507385, 0.7876105904579163, 0.7897239327430725, 0.8013472557067871, 0.8024039268493652, 0.8086118102073669, 0.8070268034934998, 0.8084797263145447, 0.8108572363853455], "val_loss": [1.9267737865447998, 1.1106194257736206, 0.885057270526886, 0.7760916352272034, 0.7435938119888306, 0.7118707895278931, 0.6742200255393982, 0.651304304599762, 0.6429907083511353, 0.6160411834716797, 0.6434544920921326, 0.6078092455863953, 0.5675719380378723, 0.5827084183692932, 0.5712006092071533, 0.5445162057876587, 0.5543991923332214, 0.5446001887321472, 0.5502573847770691, 0.5110644698143005, 0.5211900472640991, 0.5082405805587769, 0.5465854406356812, 0.4931887090206146, 0.49604010581970215, 0.47902581095695496, 0.4762047827243805, 0.47462889552116394, 0.46449121832847595, 0.4709593951702118, 0.5002498030662537], "val_accuracy": [0.5149999856948853, 0.652999997138977, 0.7006666660308838, 0.7296666502952576, 0.718999981880188, 0.7360000014305115, 0.7366666793823242, 0.7426666617393494, 0.7680000066757202, 0.7593333125114441, 0.753000020980835, 0.7689999938011169, 0.7883333563804626, 0.784333348274231, 0.7900000214576721, 0.7963333129882812, 0.7923333048820496, 0.8076666593551636, 0.796999990940094, 0.8153333067893982, 0.8109999895095825, 0.8083333373069763, 0.7829999923706055, 0.8153333067893982, 0.8223333358764648, 0.8253333568572998, 0.8216666579246521, 0.8206666707992554, 0.8230000138282776, 0.8223333358764648, 0.8023333549499512]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 7], [0, 6, 1, 6, 6], [0, 22], [1], [0], [6], [0]], "fitness": -0.25200000405311584, "mapping_values": [1, 2, 1, 1, 0, 4, 2, 2, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2276504039764404, 3.4196269512176514, 3.014049768447876, 2.319770097732544, 2.2328977584838867, 28.011293411254883, NaN, NaN, NaN, NaN], "accuracy": [0.2106723040342331, 0.2020869106054306, 0.11662924289703369, 0.12191256135702133, 0.16629242897033691, 0.1500462293624878, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.203383207321167, 5.947084426879883, 2.02241587638855, 2.2985360622406006, 2.2119789123535156, 1207.8199462890625, NaN, NaN, NaN, NaN], "val_accuracy": [0.19466666877269745, 0.10266666859388351, 0.24199999868869781, 0.10700000077486038, 0.2549999952316284, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 3, 8, 2], [4, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [8, 2, 0, 3, 5, 0, 3], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10657142847776413, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8.585821151733398, 2.582167625427246, 2.4003992080688477, 2.465599536895752, 2.351140022277832, 2.332751512527466, 2.3355886936187744], "accuracy": [0.18597279489040375, 0.10157178342342377, 0.10619468986988068, 0.09840179979801178, 0.09496764093637466, 0.09879804402589798, 0.10711926966905594], "val_loss": [2.5299482345581055, 2.3539047241210938, 2.3608524799346924, 2.3533225059509277, 2.332069158554077, 2.3261265754699707, 2.3303446769714355], "val_accuracy": [0.10499999672174454, 0.10700000077486038, 0.0989999994635582, 0.0989999994635582, 0.09799999743700027, 0.09866666793823242, 0.10533333569765091]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 4], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 6, 8, 2, 4], [2, 0, 3, 1, 0, 3], [16, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 1, 2, 1], [0, 6, 1, 6, 0], [0, 30], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 14, 8, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12600713968276978, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [7, 2, 3, 1, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 4], [0, 6, 1, 3, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(alpha, sigma)))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309016227722168, 2.308969736099243, 2.3097493648529053, 2.3104076385498047, 2.309760332107544, 2.308959722518921], "accuracy": [0.09496764093637466, 0.09470347315073013, 0.09232597798109055, 0.09232597798109055, 0.09206181764602661, 0.09417514503002167], "val_loss": [2.308795213699341, 2.308795213699341, 2.308795213699341, 2.308795213699341, 2.308795213699341, 2.308795213699341], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]