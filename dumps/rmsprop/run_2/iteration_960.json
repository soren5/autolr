[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8157142996788025, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2104878425598145, 1.5973637104034424, 1.1812536716461182, 0.9747157692909241, 0.8817563652992249, 0.8301304578781128, 0.7846497297286987, 0.7300414443016052, 0.7296203970909119, 0.6953870058059692, 0.6739510893821716, 0.668662965297699, 0.6522353887557983, 0.6314292550086975, 0.6224687695503235, 0.601565957069397, 0.5961816310882568, 0.580095112323761, 0.5769779086112976, 0.5719650983810425, 0.5416860580444336, 0.5472390055656433, 0.5631387829780579, 0.536713719367981, 0.525540292263031, 0.5117279887199402, 0.5003945231437683, 0.5064294338226318, 0.5068379640579224, 0.491888165473938, 0.49282896518707275, 0.467260479927063, 0.476633757352829, 0.459617018699646, 0.4669109880924225, 0.46046075224876404, 0.4617955684661865, 0.4500623941421509], "accuracy": [0.27420419454574585, 0.5147272348403931, 0.5880332589149475, 0.654999315738678, 0.6807554960250854, 0.6960771083831787, 0.709549605846405, 0.7306828498840332, 0.7215691208839417, 0.7436270117759705, 0.7478536367416382, 0.7497028112411499, 0.7543256878852844, 0.7607977986335754, 0.7671377658843994, 0.7729493975639343, 0.7778365015983582, 0.7837802171707153, 0.787082314491272, 0.783119797706604, 0.7954035401344299, 0.7952714562416077, 0.7891955971717834, 0.8016114234924316, 0.802271842956543, 0.8087438941001892, 0.8064984679222107, 0.8105930685997009, 0.8124422430992126, 0.8145555257797241, 0.8166688680648804, 0.8293488025665283, 0.8195747137069702, 0.8325188159942627, 0.8267071843147278, 0.8272355198860168, 0.8234050869941711, 0.8341038227081299], "val_loss": [1.9176806211471558, 1.1113765239715576, 0.8867648839950562, 0.8210216760635376, 0.7936287522315979, 0.6965683698654175, 0.6676744222640991, 0.6620731353759766, 0.6346246600151062, 0.63868647813797, 0.5909679532051086, 0.5974640250205994, 0.5691317915916443, 0.563776433467865, 0.5539612174034119, 0.5513060092926025, 0.5298299193382263, 0.5204433798789978, 0.5121288299560547, 0.5039223432540894, 0.5371149182319641, 0.5489447712898254, 0.4813348650932312, 0.49792081117630005, 0.4859469532966614, 0.4963500499725342, 0.4733031094074249, 0.48786020278930664, 0.4573304057121277, 0.4551715552806854, 0.4602912664413452, 0.48307469487190247, 0.44452163577079773, 0.4417697787284851, 0.43726685643196106, 0.48817357420921326, 0.44374388456344604, 0.43316301703453064], "val_accuracy": [0.609666645526886, 0.6383333206176758, 0.6803333163261414, 0.6990000009536743, 0.7120000123977661, 0.7363333106040955, 0.7450000047683716, 0.734333336353302, 0.7713333368301392, 0.7580000162124634, 0.7786666750907898, 0.7796666622161865, 0.7879999876022339, 0.7829999923706055, 0.796999990940094, 0.7919999957084656, 0.7983333468437195, 0.8143333196640015, 0.8109999895095825, 0.8130000233650208, 0.7839999794960022, 0.7946666479110718, 0.8180000185966492, 0.8119999766349792, 0.8159999847412109, 0.8069999814033508, 0.8216666579246521, 0.8140000104904175, 0.8246666789054871, 0.831333339214325, 0.8259999752044678, 0.8096666932106018, 0.8413333296775818, 0.8326666951179504, 0.8386666774749756, 0.8080000281333923, 0.8349999785423279, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 3], [0, 2, 1, 3, 2], [36, 76, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 6, 9, 8, 2], [2, 0, 3, 0, 0], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0], [67, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310471296310425, 2.310328483581543, 2.310162305831909, 2.3105297088623047, 2.3092637062072754, 2.3100333213806152], "accuracy": [0.09140139818191528, 0.09311848133802414, 0.08902391046285629, 0.09417514503002167, 0.09377889335155487, 0.09285431355237961], "val_loss": [2.3085150718688965, 2.3085150718688965, 2.3085150718688965, 2.3085150718688965, 2.3085150718688965, 2.3085150718688965], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 1, 2, 3, 5], [0, 3, 1, 0, 2], [28, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 2, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(beta, sigma)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095757961273193, 2.3094217777252197, 2.3094699382781982, 2.3085644245147705, 2.3103713989257812, 2.3109548091888428], "accuracy": [0.09668471664190292, 0.0936468094587326, 0.08955223858356476, 0.09245806187391281, 0.09272222965955734, 0.0874389111995697], "val_loss": [2.308541774749756, 2.308541774749756, 2.308541774749756, 2.308541774749756, 2.308541774749756, 2.308541774749756], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 8, 5], [0, 2, 1, 1, 2], [23, 39, 39], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [4, 2, 0, 2, 5, 2, 1, 4, 9], [0, 6, 1, 6, 0, 0], [23, 22, 65, 88], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 15, 9, 6, 4, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308925151824951, 2.3098859786987305, 2.3118183612823486, 2.3109896183013916, 2.309297800064087, 2.310096263885498], "accuracy": [0.09259014576673508, 0.09126931428909302, 0.08875974267721176, 0.09166556596755981, 0.09325055778026581, 0.08757099509239197], "val_loss": [2.308992862701416, 2.308992862701416, 2.308992862701416, 2.308992862701416, 2.308992862701416, 2.308992862701416], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 31, 39], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 2, 2, 5, 2, 2], [0, 6, 5, 7, 0], [0, 64], [1], [0], [2], [0]], "fitness": -0.08657142519950867, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093161582946777, 2.3102049827575684, 2.3091976642608643, 2.3099122047424316, 2.3103580474853516, 2.3098254203796387], "accuracy": [0.09325055778026581, 0.09615638852119446, 0.09232597798109055, 0.09338264167308807, 0.08545766770839691, 0.09232597798109055], "val_loss": [2.308971643447876, 2.308971643447876, 2.308971643447876, 2.308971643447876, 2.308971643447876, 2.308971643447876], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]