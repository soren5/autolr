[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209449052810669, 1.6038610935211182, 1.1352498531341553, 1.0031533241271973, 0.906097412109375, 0.837610125541687, 0.7903780937194824, 0.7456213235855103, 0.7216466069221497, 0.7232577204704285, 0.6892534494400024, 0.6937236189842224, 0.6529994010925293, 0.6517412662506104, 0.636377215385437, 0.6151331663131714, 0.6052862405776978, 0.5947918891906738, 0.5812468528747559, 0.5762352347373962, 0.5654481053352356, 0.5557118058204651, 0.5456911325454712, 0.5424220561981201, 0.5305817127227783, 0.5325711965560913, 0.5107679963111877, 0.5269852876663208, 0.5134138464927673, 0.5071063041687012, 0.49211904406547546, 0.48392677307128906, 0.48471421003341675, 0.48111146688461304, 0.47283199429512024, 0.4782089591026306, 0.4644952714443207, 0.4630700647830963, 0.467265784740448, 0.4502280652523041, 0.4460727870464325, 0.43701180815696716, 0.4403042495250702, 0.43468499183654785, 0.4330786466598511, 0.4322414696216583, 0.4246801435947418, 0.4239788055419922, 0.4171525239944458, 0.4122392237186432, 0.4136323034763336, 0.40492910146713257, 0.4115231931209564, 0.4034101665019989, 0.4024440050125122, 0.3924884498119354, 0.3904249668121338, 0.3881669044494629, 0.38412633538246155, 0.3843017816543579, 0.3772360384464264, 0.37732619047164917, 0.37285685539245605, 0.3734622001647949, 0.3607850968837738, 0.3636634051799774, 0.3540288209915161, 0.35526296496391296, 0.34445106983184814, 0.34933459758758545, 0.3546411693096161, 0.34201353788375854, 0.34537428617477417, 0.3411601185798645, 0.34744831919670105, 0.3453104496002197, 0.3330497145652771, 0.3279995322227478], "accuracy": [0.2635054886341095, 0.49689605832099915, 0.6070532202720642, 0.6444327235221863, 0.6701889038085938, 0.6942279934883118, 0.7103421092033386, 0.7232862114906311, 0.7292299270629883, 0.733060359954834, 0.7390040755271912, 0.7424382567405701, 0.7605336308479309, 0.7559106945991516, 0.7684586048126221, 0.7707040309906006, 0.7730814814567566, 0.7786290049552917, 0.78113853931427, 0.7854973077774048, 0.7903843522071838, 0.7891955971717834, 0.7985734939575195, 0.7989697456359863, 0.8016114234924316, 0.7992339134216309, 0.8088759779930115, 0.7997622489929199, 0.8042530417442322, 0.811649739742279, 0.8140271902084351, 0.8239334225654602, 0.8220842480659485, 0.8255184292793274, 0.8236692547798157, 0.8252542614936829, 0.8277638554573059, 0.8348963260650635, 0.8276317715644836, 0.8313300609588623, 0.8380662798881531, 0.8391229510307312, 0.8381983637809753, 0.8391229510307312, 0.8453308939933777, 0.8359529972076416, 0.8426892161369324, 0.8421608805656433, 0.8442742228507996, 0.8467837572097778, 0.8507462739944458, 0.8499537706375122, 0.8477083444595337, 0.8507462739944458, 0.8543124794960022, 0.8552370667457581, 0.8539162874221802, 0.8576145768165588, 0.858671247959137, 0.8553691506385803, 0.8599920868873596, 0.8623695969581604, 0.8651432991027832, 0.8623695969581604, 0.8626337051391602, 0.8636903762817383, 0.8681812286376953, 0.869502067565918, 0.8722757697105408, 0.8705587387084961, 0.8691058158874512, 0.8775591254234314, 0.8728041052818298, 0.873860776424408, 0.8676528930664062, 0.8689737319946289, 0.8758420348167419, 0.8768987059593201], "val_loss": [1.9125744104385376, 1.0887590646743774, 0.9450643062591553, 0.8191099166870117, 0.7360031604766846, 0.6687906980514526, 0.6282522082328796, 0.6601462960243225, 0.6715782284736633, 0.5625337362289429, 0.6539340615272522, 0.5504472851753235, 0.5867044925689697, 0.5580101013183594, 0.5359125733375549, 0.5214430093765259, 0.5190983414649963, 0.5013432502746582, 0.5121899843215942, 0.49361735582351685, 0.4752192497253418, 0.4751321077346802, 0.48650887608528137, 0.4691106677055359, 0.47247418761253357, 0.4636937975883484, 0.48103076219558716, 0.45958757400512695, 0.44956108927726746, 0.46320441365242004, 0.4498648941516876, 0.4576037526130676, 0.4460482597351074, 0.4259095788002014, 0.4365585148334503, 0.44981682300567627, 0.42843157052993774, 0.4265005588531494, 0.41712549328804016, 0.42409631609916687, 0.42474105954170227, 0.4174175560474396, 0.42253926396369934, 0.40832608938217163, 0.4025019407272339, 0.4070184826850891, 0.40908297896385193, 0.41131892800331116, 0.39882394671440125, 0.42710351943969727, 0.4029708206653595, 0.3902418911457062, 0.4033457040786743, 0.40412843227386475, 0.39699292182922363, 0.39558008313179016, 0.3850756883621216, 0.3897513449192047, 0.38618671894073486, 0.3838011920452118, 0.39297130703926086, 0.3742845952510834, 0.3821813464164734, 0.37732720375061035, 0.37980732321739197, 0.3717677891254425, 0.376725435256958, 0.3732851445674896, 0.3998279571533203, 0.37513062357902527, 0.37957051396369934, 0.3699699640274048, 0.36656293272972107, 0.37236079573631287, 0.37682104110717773, 0.39319995045661926, 0.36475077271461487, 0.3743632733821869], "val_accuracy": [0.5220000147819519, 0.6710000038146973, 0.6766666769981384, 0.7053333520889282, 0.7396666407585144, 0.7443333268165588, 0.7643333077430725, 0.7353333234786987, 0.7506666779518127, 0.781333327293396, 0.7300000190734863, 0.7923333048820496, 0.7586666941642761, 0.7876666784286499, 0.7919999957084656, 0.8029999732971191, 0.7893333435058594, 0.8106666803359985, 0.7996666431427002, 0.809333324432373, 0.8163333535194397, 0.8236666917800903, 0.8109999895095825, 0.8259999752044678, 0.8136666417121887, 0.8230000138282776, 0.8140000104904175, 0.8223333358764648, 0.828000009059906, 0.8259999752044678, 0.8240000009536743, 0.8293333053588867, 0.8316666483879089, 0.840666651725769, 0.8376666903495789, 0.8270000219345093, 0.8309999704360962, 0.8416666388511658, 0.8443333506584167, 0.8460000157356262, 0.843999981880188, 0.8426666855812073, 0.8379999995231628, 0.8460000157356262, 0.8489999771118164, 0.8500000238418579, 0.8443333506584167, 0.8429999947547913, 0.8516666889190674, 0.8389999866485596, 0.8516666889190674, 0.8523333072662354, 0.8510000109672546, 0.8510000109672546, 0.8496666550636292, 0.8529999852180481, 0.8586666584014893, 0.8529999852180481, 0.8600000143051147, 0.8553333282470703, 0.8526666760444641, 0.862666666507721, 0.8619999885559082, 0.859666645526886, 0.8619999885559082, 0.8643333315849304, 0.8616666793823242, 0.8603333234786987, 0.8486666679382324, 0.8646666407585144, 0.8616666793823242, 0.8643333315849304, 0.871999979019165, 0.8616666793823242, 0.859333336353302, 0.8496666550636292, 0.8673333525657654, 0.8616666793823242]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [8, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 0, 2, 5, 2, 1, 3, 6, 3, 6, 0, 5, 3, 7, 9], [0, 0, 5, 6, 7, 5, 1, 3, 5, 1], [15, 22, 91], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 12, 7, 5, 1, 26, 16, 10, 3, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(grad, alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad)), grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, grad), alpha), tf.math.negative(tf.math.square(sigma))))), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [13, 52, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 3, 2], [5, 0, 3, 1, 0], [4, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 6, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.745793581008911, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19852067530155182, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2630.3359375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.019999999552965164, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 3, 3, 2, 3, 5], [0, 2, 1, 0, 2], [15, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2, 7, 7, 7, 8, 1, 3, 9, 6, 6, 4, 4, 4, 2, 7, 4, 7], [2, 0, 3, 1, 0, 3, 4, 0, 2, 2, 4, 4, 2, 2, 1, 3, 4, 0, 3], [97, 1, 47, 99, 68], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [7, 6, 4, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 42, 23, 19, 5, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad), alpha))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(grad, tf.math.multiply(grad, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.constant(1.0, shape=shape, dtype=tf.float32))), beta), tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.math.pow(grad, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad)))), grad), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 0, 0, 0, 3], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 0, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 2, 8, 2, 7, 2, 1, 7, 6, 6, 7, 5, 8], [0, 6, 1, 6, 1, 2, 0, 0, 5, 2, 6], [0, 22, 49], [1], [0], [2], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 24, 13, 11, 3, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(grad))), beta)))))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097267150878906, 2.3092753887176514, 2.3102636337280273, 2.3098020553588867, 2.309530735015869, 2.3103387355804443], "accuracy": [0.08902391046285629, 0.0936468094587326, 0.09576013684272766, 0.09655263274908066, 0.0940430611371994, 0.08849557489156723], "val_loss": [2.308614492416382, 2.308614492416382, 2.308614492416382, 2.308614492416382, 2.308614492416382, 2.308614492416382], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]