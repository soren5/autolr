[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.817714273929596, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2086033821105957, 1.5851085186004639, 1.14035165309906, 0.9782395362854004, 0.8814562559127808, 0.8188162446022034, 0.7643897533416748, 0.747267484664917, 0.7274246215820312, 0.7009641528129578, 0.6772706508636475, 0.6597356200218201, 0.6568427681922913, 0.6428027749061584, 0.6206759810447693, 0.597005307674408, 0.5923471450805664, 0.5794823169708252, 0.5852280855178833, 0.5627388954162598, 0.5485329627990723, 0.5477415919303894, 0.5408105254173279, 0.5334928035736084, 0.5207623243331909, 0.5195909142494202, 0.5088525414466858, 0.507743239402771, 0.49615049362182617, 0.4956997334957123, 0.48632073402404785, 0.4749463200569153, 0.4842633605003357, 0.4742407500743866, 0.46964994072914124, 0.47173500061035156, 0.4592268764972687, 0.44548311829566956, 0.4494423568248749, 0.4461102783679962, 0.4436589181423187, 0.437852680683136, 0.42930087447166443, 0.44110533595085144, 0.4241134822368622, 0.4190773069858551, 0.42061737179756165, 0.41227275133132935, 0.4053992033004761, 0.40430763363838196, 0.4007507562637329], "accuracy": [0.2779025137424469, 0.5136705636978149, 0.5935807824134827, 0.6536785364151001, 0.684982180595398, 0.7084929347038269, 0.724739134311676, 0.7255316376686096, 0.7386078238487244, 0.7417778372764587, 0.7504953145980835, 0.7621186375617981, 0.7537974119186401, 0.7671377658843994, 0.7672698497772217, 0.7814027070999146, 0.7799497842788696, 0.7886672616004944, 0.7862898111343384, 0.7910447716712952, 0.7997622489929199, 0.8001585006713867, 0.8021397590637207, 0.8053097128868103, 0.8105930685997009, 0.8095363974571228, 0.8115176558494568, 0.81548011302948, 0.813498854637146, 0.8185180425643921, 0.8256505131721497, 0.828292191028595, 0.8232730031013489, 0.8257825970649719, 0.821820080280304, 0.8265751004219055, 0.830669641494751, 0.8347642421722412, 0.8347642421722412, 0.837141752243042, 0.8400475382804871, 0.8441421389579773, 0.8378021121025085, 0.837537944316864, 0.8470479249954224, 0.8411042094230652, 0.8454629778862, 0.8475762605667114, 0.8504821062088013, 0.854708731174469, 0.8539162874221802], "val_loss": [1.9214825630187988, 1.1123546361923218, 0.9114400744438171, 0.7941486835479736, 0.7587454319000244, 0.6979137659072876, 0.6461272835731506, 0.6380068063735962, 0.6070876717567444, 0.6394171714782715, 0.6104687452316284, 0.608609139919281, 0.6015371680259705, 0.5694571733474731, 0.5708509087562561, 0.5554697513580322, 0.5250966548919678, 0.5262656807899475, 0.5101085901260376, 0.5106312036514282, 0.49568286538124084, 0.4871315062046051, 0.5227452516555786, 0.4758770763874054, 0.4875960350036621, 0.4728890061378479, 0.4690798223018646, 0.4726220965385437, 0.46691223978996277, 0.45602449774742126, 0.44036978483200073, 0.45345309376716614, 0.43815022706985474, 0.44257652759552, 0.4478386640548706, 0.44354337453842163, 0.4255243241786957, 0.42564818263053894, 0.41569527983665466, 0.415327787399292, 0.4174655079841614, 0.41771310567855835, 0.42499279975891113, 0.4115417003631592, 0.40641269087791443, 0.39492663741111755, 0.40208911895751953, 0.4013102948665619, 0.38921743631362915, 0.3972400724887848, 0.3945903778076172], "val_accuracy": [0.5736666917800903, 0.6176666617393494, 0.6723333597183228, 0.7213333249092102, 0.7296666502952576, 0.7350000143051147, 0.7543333172798157, 0.7689999938011169, 0.7723333239555359, 0.7606666684150696, 0.765333354473114, 0.7616666555404663, 0.7716666460037231, 0.7749999761581421, 0.7723333239555359, 0.7876666784286499, 0.8003333210945129, 0.7953333258628845, 0.8046666383743286, 0.8056666851043701, 0.8023333549499512, 0.8116666674613953, 0.7943333387374878, 0.8186666369438171, 0.8056666851043701, 0.8220000267028809, 0.8213333487510681, 0.8203333616256714, 0.8256666660308838, 0.8293333053588867, 0.8320000171661377, 0.828000009059906, 0.8346666693687439, 0.8356666564941406, 0.8336666822433472, 0.8303333520889282, 0.8393333554267883, 0.8386666774749756, 0.8450000286102295, 0.843666672706604, 0.8476666808128357, 0.8433333039283752, 0.8410000205039978, 0.8486666679382324, 0.8486666679382324, 0.8579999804496765, 0.8513333201408386, 0.8533333539962769, 0.8566666841506958, 0.8566666841506958, 0.8533333539962769]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 6, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 1, 1, 2, 1, 5, 5], [0, 6, 1, 6, 0, 5, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 12, 7, 5, 2, 18, 11, 7, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.math.square(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), grad)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 7, 5, 0], [0, 2, 1, 0, 2], [9, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [26, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 7, 1, 2, 5, 2, 1, 9, 6, 2, 0, 3, 7, 9], [0, 6, 1, 6, 0, 5, 6, 2], [0, 22, 45, 21], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 12, 7, 5, 1, 22, 14, 8, 4, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(alpha, tf.math.add(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.negative(tf.math.multiply(tf.math.add(grad, beta), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 1], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 1, 5, 9, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 8, 6, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103747367858887, 2.309478282928467, 2.309788465499878, 2.31032395362854, 2.310093641281128, 2.3092477321624756], "accuracy": [0.09259014576673508, 0.09509972482919693, 0.09642054885625839, 0.09219389408826828, 0.09100515395402908, 0.09100515395402908], "val_loss": [2.308138608932495, 2.308138608932495, 2.308138608932495, 2.308138608932495, 2.308138608932495, 2.308138608932495], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 6, 2, 3, 5], [0, 2, 1, 0, 2], [0, 57, 39], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [24, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096671104431152, 2.3104827404022217, 2.3109922409057617, 2.31000018119812, 2.3096823692321777, 2.3099284172058105], "accuracy": [0.0936468094587326, 0.09259014576673508, 0.08981640636920929, 0.08928807079792023, 0.0936468094587326, 0.08691058307886124], "val_loss": [2.3085684776306152, 2.3085684776306152, 2.3085684776306152, 2.3085684776306152, 2.3085684776306152, 2.3085684776306152], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]