[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.801714301109314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134342193603516, 1.6167316436767578, 1.1563222408294678, 1.0011132955551147, 0.916023850440979, 0.84124755859375, 0.8061242699623108, 0.8086608648300171, 0.7363437414169312, 0.711780846118927, 0.6951679587364197, 0.6807593703269958, 0.6574681401252747, 0.635850191116333, 0.6266348361968994, 0.6253951787948608, 0.6115660071372986, 0.6015751361846924, 0.5946575999259949, 0.5886616110801697, 0.5797885060310364, 0.5738226175308228, 0.5537510514259338, 0.5361617803573608, 0.5501477122306824, 0.5352413654327393, 0.5221526622772217, 0.5136664509773254, 0.5067505240440369, 0.5105651617050171, 0.5144842267036438, 0.4970981478691101, 0.4919937551021576, 0.4895731806755066, 0.4819833040237427, 0.48003536462783813, 0.4802958071231842, 0.4650159180164337, 0.4611174464225769, 0.46240872144699097, 0.45664992928504944, 0.4328770339488983, 0.44221651554107666, 0.4362539052963257, 0.45417520403862, 0.43271154165267944, 0.41822442412376404, 0.42970073223114014, 0.4150620400905609, 0.42054063081741333, 0.4183923900127411, 0.40698903799057007, 0.4010072350502014, 0.4027186334133148, 0.40097498893737793, 0.39812591671943665, 0.3985859453678131], "accuracy": [0.27063795924186707, 0.5020473003387451, 0.5939770340919495, 0.6342623233795166, 0.6680755615234375, 0.6889446377754211, 0.7046625018119812, 0.6963412761688232, 0.7276449799537659, 0.7334566116333008, 0.7384757399559021, 0.746268630027771, 0.7528728246688843, 0.7651565074920654, 0.7677981853485107, 0.7667415142059326, 0.772288978099823, 0.7734777331352234, 0.7765156626701355, 0.7754589915275574, 0.785101056098938, 0.7814027070999146, 0.7930260300636292, 0.7985734939575195, 0.7981772422790527, 0.8035926818847656, 0.8042530417442322, 0.8080834746360779, 0.811649739742279, 0.8112534880638123, 0.811649739742279, 0.8157442808151245, 0.8202351331710815, 0.8187822103500366, 0.8215559124946594, 0.8251221776008606, 0.8259146809577942, 0.8323867321014404, 0.8304054737091064, 0.8321225643157959, 0.830669641494751, 0.8441421389579773, 0.8358209133148193, 0.8442742228507996, 0.8327829837799072, 0.8433496356010437, 0.8469158411026001, 0.8424250483512878, 0.8507462739944458, 0.8454629778862, 0.8487650156021118, 0.8514066934585571, 0.8548408150672913, 0.8521991968154907, 0.856689989566803, 0.8514066934585571, 0.8545766472816467], "val_loss": [1.935031533241272, 1.1027311086654663, 0.955161452293396, 0.7793017625808716, 0.7364214658737183, 0.6806837320327759, 0.6788254976272583, 0.645526111125946, 0.623321533203125, 0.6154434680938721, 0.590136706829071, 0.6157321929931641, 0.561546802520752, 0.5555704236030579, 0.5515537261962891, 0.5470373034477234, 0.5821743011474609, 0.5324360132217407, 0.5674105882644653, 0.5232146978378296, 0.5097918510437012, 0.5017168521881104, 0.49581730365753174, 0.5096734762191772, 0.5133727788925171, 0.4806945025920868, 0.49966761469841003, 0.47698265314102173, 0.4796714782714844, 0.4868720769882202, 0.4689130187034607, 0.4827015697956085, 0.45875391364097595, 0.4534112215042114, 0.46686312556266785, 0.47469717264175415, 0.44563814997673035, 0.4396646320819855, 0.4436851441860199, 0.4284900724887848, 0.457587331533432, 0.4263710677623749, 0.42949429154396057, 0.46281301975250244, 0.42270463705062866, 0.4259070158004761, 0.4248981177806854, 0.4222339391708374, 0.4179258942604065, 0.4212915897369385, 0.4265557527542114, 0.4105382561683655, 0.41884171962738037, 0.41009631752967834, 0.41306453943252563, 0.415886789560318, 0.41606366634368896], "val_accuracy": [0.5046666860580444, 0.6416666507720947, 0.6393333077430725, 0.7179999947547913, 0.7296666502952576, 0.75, 0.7493333220481873, 0.7603333592414856, 0.7646666765213013, 0.7676666378974915, 0.7793333530426025, 0.7616666555404663, 0.7913333177566528, 0.7866666913032532, 0.7956666946411133, 0.7919999957084656, 0.7896666526794434, 0.8066666722297668, 0.7793333530426025, 0.8050000071525574, 0.8053333163261414, 0.8153333067893982, 0.812666654586792, 0.8119999766349792, 0.7946666479110718, 0.8206666707992554, 0.8109999895095825, 0.8199999928474426, 0.8226666450500488, 0.8086666464805603, 0.8286666870117188, 0.8286666870117188, 0.8323333263397217, 0.8330000042915344, 0.8209999799728394, 0.8206666707992554, 0.8366666436195374, 0.8386666774749756, 0.8339999914169312, 0.8479999899864197, 0.8299999833106995, 0.8453333377838135, 0.843666672706604, 0.8233333230018616, 0.8486666679382324, 0.8443333506584167, 0.8486666679382324, 0.8453333377838135, 0.8500000238418579, 0.8489999771118164, 0.843999981880188, 0.8550000190734863, 0.8423333168029785, 0.847000002861023, 0.8513333201408386, 0.847000002861023, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 5, 9], [0, 2, 1, 0, 2], [0, 59, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 0, 4, 5, 1, 1], [5, 6, 1, 6, 7], [0, 3], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 11, 7, 4, 1, 12, 7, 5, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.math.square(grad), tf.math.subtract(grad, tf.math.subtract(alpha, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.323181390762329, 2.3339881896972656, 2.3339881896972656, 2.3339879512786865, 2.3339881896972656, 2.3339879512786865], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3350422382354736, 2.3350422382354736, 2.3350422382354736, 2.3350422382354736, 2.3350422382354736, 2.3350422382354736], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 5], [0, 0, 1, 0, 2], [0, 39, 47], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 9, 2], [3, 0, 4, 1, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 5, 2, 5, 7, 1, 7, 7, 4, 3, 5, 5, 6], [0, 6, 1, 6, 1, 2, 1, 6, 2, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.pow(grad, alpha), beta), tf.math.multiply(alpha, grad))), tf.math.square(tf.math.square(tf.math.divide_no_nan(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11081759631633759, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 12, 7, 5, 3, 9, 6, 3, 2, 24, 14, 10, 1, 1, 0, 1, 0], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [37, 1], [1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038768768310547, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3, 0, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 4, 2, 5, 2, 1], [0, 6, 0, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101210594177246, 2.31048846244812, 2.310668706893921, 2.309791326522827, 2.311716318130493, 2.310046672821045], "accuracy": [0.09351472556591034, 0.09338264167308807, 0.09311848133802414, 0.09008057415485382, 0.09060890227556229, 0.09245806187391281], "val_loss": [2.308873414993286, 2.308873414993286, 2.308873414993286, 2.308873414993286, 2.308873414993286, 2.308873414993286], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]