[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2070183753967285, 1.5835038423538208, 1.1095430850982666, 0.9603114128112793, 0.883122444152832, 0.8322144746780396, 0.7973657846450806, 0.755248486995697, 0.7181652784347534, 0.7089347243309021, 0.6928167343139648, 0.6649817228317261, 0.6423858404159546, 0.6324942708015442, 0.6363842487335205, 0.6209975481033325, 0.5972411632537842, 0.5965394973754883, 0.5919963717460632, 0.5793090462684631, 0.5606799721717834, 0.5679883360862732, 0.5477012395858765, 0.5349451899528503, 0.5472370386123657, 0.5289695858955383, 0.5185413956642151, 0.5139951109886169, 0.5027581453323364, 0.5012356638908386, 0.5015503764152527, 0.5018936395645142, 0.47623616456985474, 0.48199403285980225, 0.4832979440689087, 0.47632116079330444, 0.47644686698913574, 0.4672485888004303, 0.4531475901603699, 0.45811185240745544, 0.45415762066841125, 0.4522751271724701, 0.44088244438171387, 0.44019201397895813, 0.4423115849494934, 0.43121451139450073, 0.4290924072265625, 0.4214555323123932], "accuracy": [0.2694492042064667, 0.5126138925552368, 0.6231673359870911, 0.6576409935951233, 0.6832650899887085, 0.6992471218109131, 0.7091533541679382, 0.7272487282752991, 0.7380794882774353, 0.7368907928466797, 0.7457403540611267, 0.754589855670929, 0.7666094303131104, 0.7672698497772217, 0.7580240368843079, 0.7737419009208679, 0.7795535326004028, 0.7827235460281372, 0.7799497842788696, 0.7847048044204712, 0.7952714562416077, 0.7938185334205627, 0.7992339134216309, 0.8031964302062988, 0.7972526550292969, 0.8058380484580994, 0.8096684813499451, 0.8157442808151245, 0.8146876096725464, 0.8190463781356812, 0.8149517774581909, 0.8204993009567261, 0.8245938420295715, 0.8244617581367493, 0.8236692547798157, 0.8259146809577942, 0.8240655064582825, 0.8325188159942627, 0.8342359066009521, 0.8358209133148193, 0.8404437899589539, 0.8350284099578857, 0.8405758738517761, 0.8408400416374207, 0.843481719493866, 0.8401796221733093, 0.8411042094230652, 0.8473120927810669], "val_loss": [1.9108214378356934, 1.0797584056854248, 0.9202194809913635, 0.7800340056419373, 0.7587482333183289, 0.7470470666885376, 0.6705143451690674, 0.7071288824081421, 0.6623746752738953, 0.6071659922599792, 0.5988129377365112, 0.5932377576828003, 0.642113983631134, 0.580130934715271, 0.5762899518013, 0.5489410758018494, 0.5436979532241821, 0.5623160004615784, 0.5296201705932617, 0.54360032081604, 0.5774941444396973, 0.5266633033752441, 0.5260801315307617, 0.525766134262085, 0.4994734823703766, 0.5182707905769348, 0.49329450726509094, 0.48509660363197327, 0.47716569900512695, 0.4886111617088318, 0.48536473512649536, 0.4614100754261017, 0.4626460671424866, 0.46321728825569153, 0.473598837852478, 0.4849890470504761, 0.45140424370765686, 0.45399510860443115, 0.4469626843929291, 0.446582555770874, 0.4458865225315094, 0.4455550014972687, 0.43089067935943604, 0.43512675166130066, 0.42513135075569153, 0.4290599822998047, 0.42713239789009094, 0.42536166310310364], "val_accuracy": [0.5926666855812073, 0.652999997138977, 0.6710000038146973, 0.7133333086967468, 0.7250000238418579, 0.7256666421890259, 0.7506666779518127, 0.721666693687439, 0.7353333234786987, 0.762333333492279, 0.7736666798591614, 0.7716666460037231, 0.7256666421890259, 0.7829999923706055, 0.7820000052452087, 0.7946666479110718, 0.7979999780654907, 0.7799999713897705, 0.7990000247955322, 0.7853333353996277, 0.7713333368301392, 0.7950000166893005, 0.8043333292007446, 0.796999990940094, 0.8053333163261414, 0.8053333163261414, 0.8100000023841858, 0.8173333406448364, 0.824999988079071, 0.8153333067893982, 0.8133333325386047, 0.831333339214325, 0.8323333263397217, 0.8253333568572998, 0.8240000009536743, 0.8140000104904175, 0.8309999704360962, 0.8353333473205566, 0.8373333215713501, 0.8389999866485596, 0.8379999995231628, 0.8363333344459534, 0.8493333458900452, 0.8413333296775818, 0.8486666679382324, 0.8463333249092102, 0.8423333168029785, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 8], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0, 2], [16, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 3, 5, 2, 1], [0, 6, 7, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.26657143235206604, "mapping_values": [1, 12, 7, 5, 2, 13, 7, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.637425184249878, 2.348933696746826, 3.4085168838500977, 2.3055522441864014, 2.303386688232422, 2.30305814743042, 2.3029494285583496], "accuracy": [0.17738740146160126, 0.12574297189712524, 0.18134988844394684, 0.09998679161071777, 0.09787346422672272, 0.09945846349000931, 0.09576013684272766], "val_loss": [2.3041064739227295, 2.15423583984375, 2.306352138519287, 2.3029890060424805, 2.302828550338745, 2.302609443664551, 2.302485466003418], "val_accuracy": [0.1003333330154419, 0.26600000262260437, 0.1003333330154419, 0.10266666859388351, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 8, 2, 1], [0, 6, 1, 6, 4], [0, 13], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 5, 3, 2, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(grad, alpha)), tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.539203643798828, 59.09747314453125, 203.25302124023438, 492.53070068359375, 1013.970947265625, 1783.6033935546875], "accuracy": [0.09760929644107819, 0.10051512718200684, 0.10355303436517715, 0.10421344637870789, 0.10249637067317963, 0.10447761416435242], "val_loss": [20.536733627319336, 96.34577178955078, 267.39178466796875, 583.1964111328125, 1092.82861328125, 1845.724365234375], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2, 5, 1, 2], [2, 0, 3, 1, 0, 0, 5, 2], [16, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1, 8, 8], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 18, 10, 8, 3, 14, 9, 5, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(alpha, tf.math.sqrt(grad)))), tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [67, 39, 39], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 9, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310084342956543, 2.3106415271759033, 2.3099091053009033, 2.3105621337890625, 2.3109185695648193, 2.3103013038635254], "accuracy": [0.09140139818191528, 0.09087307006120682, 0.08928807079792023, 0.09417514503002167, 0.09034473448991776, 0.09536388516426086], "val_loss": [2.3091354370117188, 2.3091354370117188, 2.3091354370117188, 2.3091354370117188, 2.3091354370117188, 2.3091354370117188], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]