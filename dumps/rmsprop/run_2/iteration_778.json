[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8425714373588562, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2094473838806152, 1.6022980213165283, 1.1001724004745483, 0.9827892780303955, 0.8813695311546326, 0.8356402516365051, 0.7720251679420471, 0.7552314400672913, 0.7145220041275024, 0.7219323515892029, 0.6780923008918762, 0.6801323294639587, 0.668951153755188, 0.6218430399894714, 0.623539388179779, 0.6085619330406189, 0.597621500492096, 0.5773093104362488, 0.5842967629432678, 0.5834576487541199, 0.5704933404922485, 0.5585829615592957, 0.5355871319770813, 0.5346860289573669, 0.529628574848175, 0.5271100401878357, 0.51390141248703, 0.50816810131073, 0.49678465723991394, 0.4937962591648102, 0.48517316579818726, 0.4834271967411041, 0.48614776134490967, 0.48153626918792725, 0.47039711475372314, 0.4690763056278229, 0.4613180160522461, 0.44785770773887634], "accuracy": [0.2731475234031677, 0.5046889185905457, 0.6176198720932007, 0.6514331102371216, 0.6851142644882202, 0.6963412761688232, 0.7153612375259399, 0.7210407853126526, 0.7353057861328125, 0.7339849472045898, 0.7474573850631714, 0.748249888420105, 0.752740740776062, 0.770439863204956, 0.7700436115264893, 0.7794214487075806, 0.78113853931427, 0.7849689722061157, 0.7815347909927368, 0.7852331399917603, 0.7860256433486938, 0.7984414100646973, 0.8054417967796326, 0.8045172095298767, 0.8016114234924316, 0.804649293422699, 0.8094043135643005, 0.8144234418869019, 0.8105930685997009, 0.8169330358505249, 0.822348415851593, 0.8212917447090149, 0.8219521641731262, 0.8186501264572144, 0.8293488025665283, 0.8286884427070618, 0.8294808864593506, 0.8345000743865967], "val_loss": [1.9194788932800293, 1.1178996562957764, 0.9165034294128418, 0.7734399437904358, 0.7334145307540894, 0.7094656825065613, 0.6510573029518127, 0.6290761828422546, 0.6137025356292725, 0.6329087615013123, 0.6068493723869324, 0.6305904388427734, 0.5641624927520752, 0.5524959564208984, 0.5612668395042419, 0.530309796333313, 0.5398566126823425, 0.5338197350502014, 0.5076949000358582, 0.5233525037765503, 0.4961404502391815, 0.49578312039375305, 0.49765345454216003, 0.4792744219303131, 0.49076342582702637, 0.4856460690498352, 0.47204655408859253, 0.46315905451774597, 0.45310547947883606, 0.4595755934715271, 0.45235374569892883, 0.4506107568740845, 0.4389675259590149, 0.44126343727111816, 0.4542211890220642, 0.4419075548648834, 0.4284030497074127, 0.4374939799308777], "val_accuracy": [0.5613333582878113, 0.6466666460037231, 0.6506666541099548, 0.7176666855812073, 0.7196666598320007, 0.7263333201408386, 0.7609999775886536, 0.7543333172798157, 0.7760000228881836, 0.7580000162124634, 0.7763333320617676, 0.7706666588783264, 0.7820000052452087, 0.7923333048820496, 0.7923333048820496, 0.8026666641235352, 0.7919999957084656, 0.7956666946411133, 0.815666675567627, 0.7929999828338623, 0.8203333616256714, 0.8220000267028809, 0.8140000104904175, 0.8263333439826965, 0.8213333487510681, 0.8186666369438171, 0.8199999928474426, 0.8293333053588867, 0.8386666774749756, 0.8370000123977661, 0.8393333554267883, 0.8356666564941406, 0.846666693687439, 0.8446666598320007, 0.8346666693687439, 0.8410000205039978, 0.8450000286102295, 0.843666672706604]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 3, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 6, 0, 8], [6, 6, 1, 6, 0], [0], [1], [0], [5], [0]], "fitness": -0.3865714371204376, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3210177421569824, 2.1544058322906494, 2.457672119140625, 2.335400342941284, 2.302536964416504, 2.328256845474243, 2.2844760417938232], "accuracy": [0.18940694630146027, 0.2106723040342331, 0.16180160641670227, 0.13551710546016693, 0.11094967275857925, 0.11847840249538422, 0.16523577272891998], "val_loss": [2.2944319248199463, 1.858451008796692, 2.29717755317688, 2.3049495220184326, 2.580801010131836, 2.043574571609497, 2.732614517211914], "val_accuracy": [0.23066666722297668, 0.3786666691303253, 0.09966666996479034, 0.10233332961797714, 0.17900000512599945, 0.34599998593330383, 0.15133333206176758]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 9, 2, 3, 3], [2, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [0, 0, 3, 1, 0], [16, 1, 42], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 2, 5, 2, 1], [0, 6, 1, 5, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 1, 11, 6, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [92.713623046875, 10312.8603515625, 167224.625, 1218735.375, 5592888.0, 19290468.0], "accuracy": [0.09945846349000931, 0.10408136248588562, 0.10355303436517715, 0.10328886657953262, 0.10421344637870789, 0.10249637067317963], "val_loss": [751.7858276367188, 29792.25390625, 330608.71875, 1895071.375, 7435999.0, 22833032.0], "val_accuracy": [0.10233332961797714, 0.10100000351667404, 0.10100000351667404, 0.10166666656732559, 0.10199999809265137, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 7, 1, 3, 2], [0, 2, 1, 2, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 4, 1], [0, 6, 1, 3, 3], [0], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 12, 6, 6, 2, 4, 3, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(tf.math.subtract(alpha, sigma), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30893874168396, 2.3099217414855957, 2.309760570526123, 2.3109371662139893, 2.3097314834594727, 2.3105430603027344], "accuracy": [0.09509972482919693, 0.09113723784685135, 0.0956280529499054, 0.0870426595211029, 0.09338264167308807, 0.09100515395402908], "val_loss": [2.3081305027008057, 2.3081305027008057, 2.3081305027008057, 2.3081305027008057, 2.3081305027008057, 2.3081305027008057], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5, 2, 1, 9, 1, 6, 3, 4, 8, 8, 4, 9, 5, 7, 6, 7, 5, 7, 4, 1, 8, 1, 8, 9], [0, 0, 1, 0, 2, 0, 1, 3, 1, 2, 2, 3, 0, 0, 3, 2], [0, 39, 39, 17, 77, 82, 69, 0, 64], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 5], [0, 2, 1], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 45, 29, 16, 9, 5, 2, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(alpha, tf.math.sqrt(grad)), tf.math.sqrt(tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(tf.math.pow(tf.math.subtract(alpha, grad), grad), tf.math.sqrt(grad))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(grad), grad))))))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092803955078125, 2.3102610111236572, 2.3100521564483643, 2.3102478981018066, 2.3108396530151367, 2.3097832202911377], "accuracy": [0.09457138925790787, 0.09245806187391281, 0.0882314071059227, 0.09060890227556229, 0.08677849918603897, 0.08875974267721176], "val_loss": [2.308457612991333, 2.308457612991333, 2.308457612991333, 2.308457612991333, 2.308457612991333, 2.308457612991333], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]