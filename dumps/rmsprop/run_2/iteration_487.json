[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211988925933838, 1.6030293703079224, 1.1493291854858398, 0.9496206641197205, 0.8699067831039429, 0.8227072358131409, 0.7852815389633179, 0.7656888961791992, 0.7317633032798767, 0.6967957615852356, 0.6843060851097107, 0.6616500616073608, 0.6524090766906738, 0.6399714350700378, 0.609311044216156, 0.6034824252128601, 0.6082478165626526, 0.5802701115608215, 0.564454197883606, 0.5860175490379333, 0.5533490777015686, 0.5523959994316101, 0.5549964308738708, 0.5318836569786072, 0.5355495810508728, 0.5356329083442688, 0.5227193236351013, 0.5041648745536804, 0.5168330073356628, 0.4879910945892334, 0.4878765940666199, 0.4866325855255127, 0.47986796498298645, 0.47311821579933167, 0.4630093574523926, 0.461744487285614, 0.46727606654167175, 0.4607469141483307, 0.44616419076919556, 0.44146645069122314, 0.43937206268310547, 0.42893847823143005, 0.43005600571632385, 0.4313433766365051], "accuracy": [0.26482629776000977, 0.5066701769828796, 0.5984678268432617, 0.6626601219177246, 0.6865671873092651, 0.7045304179191589, 0.715889573097229, 0.7187954187393188, 0.7309470176696777, 0.7446836829185486, 0.7392682433128357, 0.7514199018478394, 0.7594769597053528, 0.7640998363494873, 0.7697794437408447, 0.7740060687065125, 0.7672698497772217, 0.7839123010635376, 0.7882710099220276, 0.7774402499198914, 0.7948752045631409, 0.7985734939575195, 0.7928939461708069, 0.8035926818847656, 0.7993659973144531, 0.802800178527832, 0.8100647330284119, 0.8119139075279236, 0.8067626357078552, 0.8203672170639038, 0.8162726163864136, 0.8227446675300598, 0.8189142942428589, 0.8298771381378174, 0.8317263126373291, 0.8290846943855286, 0.8251221776008606, 0.8341038227081299, 0.834632158279419, 0.8409721255302429, 0.8453308939933777, 0.8428213000297546, 0.844010055065155, 0.8450667262077332], "val_loss": [1.922697901725769, 1.0690854787826538, 0.9131167531013489, 0.7707180976867676, 0.707841157913208, 0.7558977603912354, 0.652415931224823, 0.6774896383285522, 0.6283970475196838, 0.6102326512336731, 0.575059711933136, 0.56868577003479, 0.5979427099227905, 0.5641248226165771, 0.5393814444541931, 0.548944354057312, 0.5132671594619751, 0.5148484706878662, 0.516389787197113, 0.5026869773864746, 0.48544642329216003, 0.4894976317882538, 0.49073320627212524, 0.4820234477519989, 0.4932560920715332, 0.4764997661113739, 0.4621363878250122, 0.48950743675231934, 0.46419093012809753, 0.4663957953453064, 0.4472951292991638, 0.4412429630756378, 0.437581330537796, 0.43490299582481384, 0.43232783675193787, 0.43542298674583435, 0.4569394588470459, 0.42115318775177, 0.4193410575389862, 0.44232314825057983, 0.4450126886367798, 0.41140320897102356, 0.418701171875, 0.4058464467525482], "val_accuracy": [0.6043333411216736, 0.6723333597183228, 0.6803333163261414, 0.7043333053588867, 0.7506666779518127, 0.737333357334137, 0.7540000081062317, 0.7333333492279053, 0.7730000019073486, 0.765333354473114, 0.7929999828338623, 0.7940000295639038, 0.7760000228881836, 0.7946666479110718, 0.7993333339691162, 0.7950000166893005, 0.8076666593551636, 0.8063333630561829, 0.8106666803359985, 0.8220000267028809, 0.8233333230018616, 0.8209999799728394, 0.8256666660308838, 0.8236666917800903, 0.8213333487510681, 0.8323333263397217, 0.8323333263397217, 0.8086666464805603, 0.8323333263397217, 0.8336666822433472, 0.8383333086967468, 0.8383333086967468, 0.8420000076293945, 0.843999981880188, 0.8429999947547913, 0.8416666388511658, 0.8270000219345093, 0.846666693687439, 0.8503333330154419, 0.8383333086967468, 0.8416666388511658, 0.8476666808128357, 0.8460000157356262, 0.8500000238418579]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 6, 3, 1, 3, 5, 4, 3, 8, 9, 4, 7, 6, 2, 7, 3, 0, 6, 8, 0, 7, 4, 9], [0, 2, 1, 0, 2, 3, 0, 0, 2, 2, 2, 3, 1, 2], [0, 39, 39, 69, 73, 58], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 5], [2, 0, 3, 1, 1], [18, 50], [0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 2, 5, 2, 1], [0, 6, 1], [0], [1], [0], [4], [0]], "fitness": -0.15800000727176666, "mapping_values": [1, 37, 23, 14, 6, 4, 2, 2, 1, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.math.square(tf.math.pow(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad)), grad), tf.math.add(tf.math.pow(grad, grad), alpha)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.896664619445801, 2.304638147354126, 2.304598569869995, 2.3039391040802, 2.303725481033325, 2.302865505218506], "accuracy": [0.19244486093521118, 0.11147800832986832, 0.0944393053650856, 0.09219389408826828, 0.08968432247638702, 0.10328886657953262], "val_loss": [2.3232014179229736, 2.304387092590332, 2.3029587268829346, 2.302819013595581, 2.302733898162842, 2.3026797771453857], "val_accuracy": [0.156333327293396, 0.1003333330154419, 0.1003333330154419, 0.0976666659116745, 0.09700000286102295, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 4], [2, 4, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 4, 2, 2, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.3941862201032704e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20393607020378113, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 0, 3, 1, 0, 5], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 7], [1, 6, 1, 6, 0], [72, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 13, 7, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [9, 2, 0, 2, 5, 1, 1], [0, 4, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093085289001465, 2.310199499130249, 2.3111212253570557, 2.3098855018615723, 2.3098833560943604, 2.310361862182617], "accuracy": [0.09536388516426086, 0.09298639744520187, 0.09576013684272766, 0.09153348207473755, 0.09457138925790787, 0.09417514503002167], "val_loss": [2.3084185123443604, 2.3084185123443604, 2.3084185123443604, 2.3084185123443604, 2.3084185123443604, 2.3084185123443604], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]