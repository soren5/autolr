[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2116212844848633, 1.594407320022583, 1.1314111948013306, 0.9581498503684998, 0.9119430184364319, 0.829137921333313, 0.7645614743232727, 0.7699029445648193, 0.7182618975639343, 0.7028851509094238, 0.6958950161933899, 0.6547718048095703, 0.6636117100715637, 0.6361659169197083, 0.6409669518470764, 0.6100914478302002, 0.6001173257827759, 0.5785355567932129, 0.5829828977584839, 0.5673872828483582, 0.5583966374397278, 0.5489028096199036, 0.5445997714996338, 0.545343279838562, 0.5239320397377014, 0.5124713778495789, 0.5278635621070862, 0.5042749643325806, 0.5035375356674194, 0.49793311953544617, 0.4908098578453064, 0.490634948015213, 0.48619356751441956, 0.4795386791229248, 0.4729119539260864, 0.46783190965652466, 0.4535667300224304, 0.46264469623565674, 0.44517356157302856, 0.4566081762313843, 0.4440171420574188, 0.4393536150455475, 0.43567535281181335, 0.4311370253562927, 0.42158254981040955, 0.4359384775161743, 0.4254032075405121, 0.41763436794281006, 0.41043195128440857, 0.41615599393844604, 0.4156982898712158, 0.4029691219329834, 0.4065306484699249, 0.39945897459983826, 0.39756515622138977, 0.3926549553871155, 0.38652506470680237, 0.38286256790161133, 0.3904460072517395, 0.38491082191467285], "accuracy": [0.26244881749153137, 0.5149914026260376, 0.6073173880577087, 0.6535464525222778, 0.6736230254173279, 0.7004358768463135, 0.7199841737747192, 0.7185312509536743, 0.7316074371337891, 0.7353057861328125, 0.7353057861328125, 0.7530049085617065, 0.7494386434555054, 0.7629110813140869, 0.759080708026886, 0.772288978099823, 0.7740060687065125, 0.7847048044204712, 0.7835160493850708, 0.787082314491272, 0.789988100528717, 0.7935543656349182, 0.7972526550292969, 0.7967243194580078, 0.8045172095298767, 0.8075551390647888, 0.7977809906005859, 0.8084797263145447, 0.813498854637146, 0.8145555257797241, 0.8186501264572144, 0.816008448600769, 0.8181217908859253, 0.8198388814926147, 0.8261788487434387, 0.8245938420295715, 0.8317263126373291, 0.8271034359931946, 0.8348963260650635, 0.8286884427070618, 0.8345000743865967, 0.8348963260650635, 0.8387266993522644, 0.8426892161369324, 0.8442742228507996, 0.8334434032440186, 0.8405758738517761, 0.848368763923645, 0.8469158411026001, 0.8438779711723328, 0.8422929644584656, 0.8502179384231567, 0.8518029451370239, 0.8496896028518677, 0.8535200357437134, 0.8541803956031799, 0.8588033318519592, 0.8594637513160706, 0.8533879518508911, 0.8553691506385803], "val_loss": [1.9187148809432983, 1.125608205795288, 0.9556735157966614, 0.8044180274009705, 0.7322627902030945, 0.7054396271705627, 0.6555482745170593, 0.6840669512748718, 0.6314895153045654, 0.6365033984184265, 0.6528022289276123, 0.6549283862113953, 0.5955407023429871, 0.5648552179336548, 0.5820942521095276, 0.5402089357376099, 0.5315815210342407, 0.5310825109481812, 0.5687413215637207, 0.5007890462875366, 0.5003764033317566, 0.5103029012680054, 0.4869558811187744, 0.48928868770599365, 0.47460851073265076, 0.46841055154800415, 0.47339704632759094, 0.4653087854385376, 0.47226786613464355, 0.4532114565372467, 0.4643065929412842, 0.44717589020729065, 0.45056983828544617, 0.4395892024040222, 0.4445483684539795, 0.4341265559196472, 0.43078750371932983, 0.42503324151039124, 0.434261679649353, 0.4237273037433624, 0.44402655959129333, 0.41558098793029785, 0.4181271493434906, 0.4169842004776001, 0.41741427779197693, 0.40768423676490784, 0.4157719016075134, 0.40299341082572937, 0.4005995988845825, 0.3989921808242798, 0.4024086892604828, 0.3963809311389923, 0.39751920104026794, 0.399455189704895, 0.39610910415649414, 0.39454516768455505, 0.40210360288619995, 0.40608060359954834, 0.42272964119911194, 0.39468181133270264], "val_accuracy": [0.5910000205039978, 0.6146666407585144, 0.6573333144187927, 0.7073333263397217, 0.7310000061988831, 0.7450000047683716, 0.7453333139419556, 0.7273333072662354, 0.7513333559036255, 0.7419999837875366, 0.746999979019165, 0.7333333492279053, 0.7639999985694885, 0.7753333449363708, 0.7720000147819519, 0.7889999747276306, 0.8016666769981384, 0.7823333144187927, 0.7786666750907898, 0.8019999861717224, 0.8109999895095825, 0.8016666769981384, 0.8146666884422302, 0.8113333582878113, 0.8159999847412109, 0.8259999752044678, 0.8203333616256714, 0.8213333487510681, 0.8226666450500488, 0.82833331823349, 0.8209999799728394, 0.8323333263397217, 0.8299999833106995, 0.8343333601951599, 0.8330000042915344, 0.8339999914169312, 0.8353333473205566, 0.8393333554267883, 0.8360000252723694, 0.8410000205039978, 0.8326666951179504, 0.8420000076293945, 0.8426666855812073, 0.8443333506584167, 0.8443333506584167, 0.8476666808128357, 0.843999981880188, 0.8483333587646484, 0.8493333458900452, 0.8510000109672546, 0.8500000238418579, 0.847000002861023, 0.8506666421890259, 0.8503333330154419, 0.8543333411216736, 0.8519999980926514, 0.8496666550636292, 0.8479999899864197, 0.8420000076293945, 0.8513333201408386]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.11857143044471741, "mapping_values": [1, 11, 6, 5, 2, 8, 5, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9.049431309886696e+22, 1.3395399545979672e+23, 1.2298076780212565e+23, 1.3421066460975982e+23, 1.3602278699902414e+23, 1.414668553221799e+23, 1.4856426712613742e+23, 8.328649815651175e+28, 8.755831309798377e+28, 4.979883156698052e+31, 1.1312302350292494e+29, 1.1769722101502807e+29, NaN, NaN, NaN, 2041.39111328125, 2041.3909912109375, 2041.3907470703125, 2041.3907470703125], "accuracy": [0.09338264167308807, 0.08757099509239197, 0.09008057415485382, 0.08638224750757217, 0.08928807079792023, 0.09430722147226334, 0.09087307006120682, 0.09642054885625839, 0.09813763201236725, 0.09642054885625839, 0.09642054885625839, 0.09377889335155487, 0.09681680053472519, 0.09430722147226334, 0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2009263638269071e+23, 1.200924382243071e+23, 1.2005835498232717e+23, 1.2006567783532127e+23, 1.200600213141893e+23, 1.2003252233486457e+23, 8.414789558191904e+28, 8.414723445061144e+28, 8.414722500587847e+28, 8.961188138672446e+28, 8.959358693896983e+28, 9.033919193821715e+28, NaN, NaN, 2042.873046875, 2042.873046875, 2042.873046875, 2042.872802734375, 2042.872802734375], "val_accuracy": [0.07066666334867477, 0.07066666334867477, 0.07066666334867477, 0.07133333384990692, 0.07133333384990692, 0.07133333384990692, 0.10533333569765091, 0.11366666853427887, 0.11400000005960464, 0.11400000005960464, 0.11400000005960464, 0.11633333563804626, 0.11566666513681412, 0.11666666716337204, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 1, 6, 5, 6, 9], [0, 0, 1, 0, 2], [35, 39, 39, 84], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 5, 6, 3, 8, 2, 2, 6, 0, 1, 7, 1, 3, 1, 5, 9], [2, 0, 3, 1, 0, 0, 4, 5, 5, 5, 5], [16, 1, 64, 63], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2], [0, 6, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 28, 17, 11, 4, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, tf.math.square(grad))))), grad)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11861048638820648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 1, 2, 4, 3, 4, 6, 0], [0, 6, 1, 1, 0, 5, 3, 0, 4], [0, 28, 68], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 2, 0, 1, 20, 11, 9, 3, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.pow(alpha, tf.math.multiply(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad)), sigma)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303703784942627, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 5], [0, 2, 3, 1, 2], [0, 7, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 8, 5, 2, 6, 5], [0, 5, 1, 6, 0], [0, 22], [1], [0], [1], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 12, 8, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), alpha), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3092093467712402, 2.309873580932617, 2.3105549812316895, 2.3102641105651855, 2.3103091716766357, 2.3099801540374756], "accuracy": [0.09694888442754745, 0.09232597798109055, 0.09351472556591034, 0.0948355570435524, 0.09325055778026581, 0.09602430462837219], "val_loss": [2.3078012466430664, 2.3078012466430664, 2.3078012466430664, 2.3078012466430664, 2.3078012466430664, 2.3078012466430664], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]