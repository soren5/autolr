[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20893931388855, 1.5944920778274536, 1.1257468461990356, 0.9863897562026978, 0.8708005547523499, 0.8510165810585022, 0.7774569392204285, 0.767521321773529, 0.7234072089195251, 0.7295819520950317, 0.694222092628479, 0.652090847492218, 0.6570751667022705, 0.6201903820037842, 0.61658775806427, 0.621667742729187, 0.5843604207038879, 0.5877536535263062, 0.5747248530387878, 0.5515546202659607, 0.58141028881073, 0.5391972064971924, 0.5479079484939575, 0.5240053534507751, 0.5148439407348633, 0.5158605575561523, 0.4984920024871826, 0.5083692669868469, 0.4973661005496979, 0.4951868951320648, 0.4885392189025879, 0.4714113473892212, 0.4736289978027344, 0.47555795311927795, 0.4668603241443634, 0.4551108181476593, 0.45531976222991943, 0.44474127888679504, 0.4580361247062683], "accuracy": [0.261260062456131, 0.5019152164459229, 0.6111478209495544, 0.6477347612380981, 0.6845859289169312, 0.6869634389877319, 0.7096816897392273, 0.7162858247756958, 0.7290979027748108, 0.7306828498840332, 0.7424382567405701, 0.7581561207771301, 0.7470611333847046, 0.7711002230644226, 0.7662131786346436, 0.7631752490997314, 0.7824593782424927, 0.7729493975639343, 0.7804781198501587, 0.7981772422790527, 0.7820631265640259, 0.7992339134216309, 0.7955356240272522, 0.8076872229576111, 0.8042530417442322, 0.8100647330284119, 0.8173292875289917, 0.8105930685997009, 0.8127063512802124, 0.8121780753135681, 0.8201030492782593, 0.8280280232429504, 0.8245938420295715, 0.8241975903511047, 0.8277638554573059, 0.8329150676727295, 0.8308017253875732, 0.8352925777435303, 0.8309338092803955], "val_loss": [1.9085711240768433, 1.0797849893569946, 0.8913803100585938, 0.7697530388832092, 0.7695883512496948, 0.7162121534347534, 0.6835128664970398, 0.6198152899742126, 0.6708865761756897, 0.6024365425109863, 0.5862725377082825, 0.5811874866485596, 0.5574274063110352, 0.5587917566299438, 0.5426618456840515, 0.5614445209503174, 0.5480638742446899, 0.520978569984436, 0.5259658098220825, 0.49482545256614685, 0.4856509566307068, 0.487792044878006, 0.47640836238861084, 0.4947233200073242, 0.5027181506156921, 0.46008434891700745, 0.46279269456863403, 0.4784436523914337, 0.4676521420478821, 0.44966763257980347, 0.4384419322013855, 0.43692126870155334, 0.4659014344215393, 0.42908576130867004, 0.4309374988079071, 0.44684505462646484, 0.4346661865711212, 0.43641674518585205, 0.42607825994491577], "val_accuracy": [0.5370000004768372, 0.6666666865348816, 0.6746666431427002, 0.7129999995231628, 0.7070000171661377, 0.7166666388511658, 0.7379999756813049, 0.7636666893959045, 0.7540000081062317, 0.7693333625793457, 0.7743333578109741, 0.765666663646698, 0.7839999794960022, 0.7776666879653931, 0.7960000038146973, 0.7773333191871643, 0.7799999713897705, 0.8009999990463257, 0.7929999828338623, 0.8119999766349792, 0.8186666369438171, 0.8103333115577698, 0.8203333616256714, 0.8023333549499512, 0.8076666593551636, 0.8253333568572998, 0.82833331823349, 0.8083333373069763, 0.8183333277702332, 0.8343333601951599, 0.8403333425521851, 0.8360000252723694, 0.8193333148956299, 0.8420000076293945, 0.8373333215713501, 0.82833331823349, 0.8386666774749756, 0.8376666903495789, 0.8386666774749756]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [7, 2, 8, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 7, 7], [0, 6, 1, 6, 0, 1, 1], [0, 22], [1], [0], [6], [0]], "fitness": -0.3005714416503906, "mapping_values": [1, 11, 6, 5, 2, 11, 7, 4, 1, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.285277843475342, 4.8841328620910645, 2.3175456523895264, 2.283053398132324, 2.28741192817688, 2.2298831939697266, 2.450895071029663, 2.305032253265381, 2.3005099296569824], "accuracy": [0.2226918488740921, 0.14595165848731995, 0.10527011007070541, 0.14370624721050262, 0.12759213149547577, 0.20855897665023804, 0.17051908373832703, 0.09430722147226334, 0.10579843819141388], "val_loss": [2.304412841796875, 2.331115484237671, 2.306668758392334, 2.145285129547119, 2.251995325088501, 2.280679941177368, 2.306828022003174, 2.3028855323791504, 2.297722339630127], "val_accuracy": [0.1106666699051857, 0.0963333323597908, 0.0963333323597908, 0.3166666626930237, 0.2446666657924652, 0.12433333694934845, 0.0963333323597908, 0.1003333330154419, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 6, 1, 8, 5, 9, 1, 2, 0, 3, 0], [0, 0, 1, 0, 2, 2], [0, 39, 39, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 5, 5, 2, 1, 0, 3, 9, 1, 8, 8, 3], [0, 6, 3, 4, 0, 1], [0, 22, 56], [1], [0], [2], [0]], "fitness": -0.1842857152223587, "mapping_values": [1, 18, 12, 6, 4, 7, 4, 3, 1, 20, 14, 6, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(tf.math.negative(grad), tf.math.multiply(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.multiply(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [54734782201856.0, 60170335944704.0, 60570204110848.0, 60502101196800.0, 60570891976704.0, 59598769750016.0], "accuracy": [0.13776251673698425, 0.13776251673698425, 0.13961167633533478, 0.13419628143310547, 0.13921542465686798, 0.13908334076404572], "val_loss": [45754756366336.0, 45754756366336.0, 45754756366336.0, 45754756366336.0, 45755100299264.0, 45757436526592.0], "val_accuracy": [0.18666666746139526, 0.18666666746139526, 0.18666666746139526, 0.18666666746139526, 0.18666666746139526, 0.18666666746139526]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 6, 3, 2, 3, 7, 9], [0, 0, 1, 0, 3], [0, 20, 39, 79], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 5, 3, 2, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [83.87538146972656, 9492.73046875, 160530.515625, 1114860.5, 4961738.5, 16226586.0], "accuracy": [0.10077928751707077, 0.0948355570435524, 0.10355303436517715, 0.09998679161071777, 0.1014397069811821, 0.09681680053472519], "val_loss": [700.2996826171875, 34094.078125, 362054.34375, 1967562.625, 7359869.0, 21693822.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 0], [0, 0, 1, 3, 2], [58, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 0, 2, 5, 2, 1], [2, 6, 1, 6, 0], [66, 22], [1], [0], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 12, 7, 5, 2, 4, 3, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.negative(grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(beta), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104050159454346, 2.3098883628845215, 2.309875726699829, 2.3100903034210205, 2.309628963470459, 2.3105661869049072], "accuracy": [0.08968432247638702, 0.09708096832036972, 0.09179764986038208, 0.09021265059709549, 0.09298639744520187, 0.08981640636920929], "val_loss": [2.3082115650177, 2.3082115650177, 2.3082115650177, 2.3082115650177, 2.3082115650177, 2.3082115650177], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]