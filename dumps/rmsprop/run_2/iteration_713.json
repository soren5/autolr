[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2072842121124268, 1.5911756753921509, 1.1406662464141846, 0.9804482460021973, 0.8715747594833374, 0.828677237033844, 0.7791779041290283, 0.7487633228302002, 0.7279949188232422, 0.7157368659973145, 0.6595064401626587, 0.6583557724952698, 0.6438761353492737, 0.6437016129493713, 0.6080973744392395, 0.6147322058677673, 0.5887022018432617, 0.5813407897949219, 0.5690822601318359, 0.5686602592468262, 0.5645521879196167, 0.5517467260360718, 0.5459336042404175, 0.5380643010139465, 0.5231341123580933, 0.5286814570426941, 0.5277197957038879, 0.5082020163536072, 0.4984273910522461, 0.49902966618537903, 0.4929335117340088, 0.48267990350723267, 0.4870765209197998, 0.4752320647239685, 0.46671831607818604, 0.46392661333084106, 0.462842732667923, 0.44746023416519165, 0.45163726806640625, 0.444200724363327, 0.4448659121990204, 0.4449310898780823, 0.4364262819290161, 0.4415927231311798, 0.4251764416694641, 0.43230801820755005, 0.41468000411987305, 0.4192902147769928, 0.4067603349685669, 0.40882229804992676, 0.40600913763046265, 0.39810946583747864, 0.41000422835350037, 0.3927117884159088], "accuracy": [0.26839256286621094, 0.5091797709465027, 0.6022982597351074, 0.6502443552017212, 0.6890767216682434, 0.705058753490448, 0.7131158113479614, 0.72672039270401, 0.7327961921691895, 0.7346453666687012, 0.7597411274909973, 0.7569673657417297, 0.7666094303131104, 0.7623828053474426, 0.77677983045578, 0.7745344042778015, 0.7832518815994263, 0.7807422876358032, 0.7861577272415161, 0.7889314293861389, 0.7906485199928284, 0.8033285140991211, 0.802271842956543, 0.7993659973144531, 0.8090080618858337, 0.802800178527832, 0.8058380484580994, 0.811649739742279, 0.8153480291366577, 0.8131026029586792, 0.8210275769233704, 0.8222163319587708, 0.819442629814148, 0.826310932636261, 0.8305375576019287, 0.8280280232429504, 0.8271034359931946, 0.8348963260650635, 0.8362171649932861, 0.8421608805656433, 0.8300092220306396, 0.8350284099578857, 0.8370096683502197, 0.8372738361358643, 0.8426892161369324, 0.8401796221733093, 0.8446704745292664, 0.8454629778862, 0.8548408150672913, 0.8487650156021118, 0.8492933511734009, 0.8529917001724243, 0.8479725122451782, 0.8524633646011353], "val_loss": [1.910883903503418, 1.0890249013900757, 0.8846517205238342, 0.7798919081687927, 0.7982524633407593, 0.7012944221496582, 0.7001734972000122, 0.6344493627548218, 0.6203165054321289, 0.6203457713127136, 0.573969304561615, 0.5774555802345276, 0.5553131699562073, 0.5773335099220276, 0.5452677607536316, 0.5412736535072327, 0.529950737953186, 0.5330795645713806, 0.529248058795929, 0.49889248609542847, 0.5283396244049072, 0.4880358874797821, 0.504928708076477, 0.4831438660621643, 0.4789981544017792, 0.49960413575172424, 0.47637230157852173, 0.46168944239616394, 0.47479215264320374, 0.4565930962562561, 0.4473710060119629, 0.4775134325027466, 0.43772709369659424, 0.4405679404735565, 0.441405713558197, 0.44548940658569336, 0.42351415753364563, 0.42145735025405884, 0.43868884444236755, 0.4153210520744324, 0.419748455286026, 0.4092673361301422, 0.4170188903808594, 0.4154679775238037, 0.4415914714336395, 0.39928996562957764, 0.40151262283325195, 0.4031088054180145, 0.39182910323143005, 0.3923017084598541, 0.39505821466445923, 0.39416301250457764, 0.40563276410102844, 0.39615434408187866], "val_accuracy": [0.5896666646003723, 0.6669999957084656, 0.6783333420753479, 0.7243333458900452, 0.6809999942779541, 0.7260000109672546, 0.7310000061988831, 0.7523333430290222, 0.7643333077430725, 0.7736666798591614, 0.7826666831970215, 0.7879999876022339, 0.7929999828338623, 0.7760000228881836, 0.7896666526794434, 0.7960000038146973, 0.8040000200271606, 0.8029999732971191, 0.8013333082199097, 0.8136666417121887, 0.7983333468437195, 0.8163333535194397, 0.8113333582878113, 0.8259999752044678, 0.8263333439826965, 0.8163333535194397, 0.8176666498184204, 0.8293333053588867, 0.8266666531562805, 0.8373333215713501, 0.8346666693687439, 0.8193333148956299, 0.8429999947547913, 0.8366666436195374, 0.8433333039283752, 0.8360000252723694, 0.8453333377838135, 0.8476666808128357, 0.8410000205039978, 0.8476666808128357, 0.8443333506584167, 0.8533333539962769, 0.8486666679382324, 0.8489999771118164, 0.8396666646003723, 0.8586666584014893, 0.8546666502952576, 0.8566666841506958, 0.8613333106040955, 0.8566666841506958, 0.8583333492279053, 0.8546666502952576, 0.8536666631698608, 0.8543333411216736]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 9, 2, 1, 6], [0, 2, 1, 2, 2, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 2, 0, 2, 5, 2, 1, 2, 2, 2, 6, 9], [4, 6, 6, 6, 0, 0, 1, 0, 2], [0, 22, 43, 51], [1], [0], [2], [0]], "fitness": -0.10542856901884079, "mapping_values": [1, 17, 10, 7, 2, 10, 6, 4, 2, 21, 12, 9, 4, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, grad), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(grad, tf.math.add(grad, grad)), grad)), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4620611667633057, 1232.821533203125, 168869.015625, 3033080.75, 25470840.0, 145958416.0], "accuracy": [0.15691454708576202, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.7991292476654053, 15231.5908203125, 800913.5625, 9578770.0, 66057780.0, 320315104.0], "val_accuracy": [0.10700000077486038, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 2, 1, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 0, 6, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 11, 6, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.202999114990234, 2.3686139583587646, 2.307314395904541, 2.3037304878234863, 2.3034486770629883, 2.302771806716919, 2.303266763687134], "accuracy": [0.1950865089893341, 0.09708096832036972, 0.09708096832036972, 0.10487385839223862, 0.10038304328918457, 0.1026284471154213, 0.09760929644107819], "val_loss": [2.5931670665740967, 2.310170888900757, 2.30381441116333, 2.302900791168213, 2.3028361797332764, 2.30271053314209, 2.3026981353759766], "val_accuracy": [0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.09866666793823242, 0.09933333098888397, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 8, 2, 3, 5], [0, 2, 1, 0, 2], [74, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0], [36, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 4, 2, 2, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310368061065674, 2.310060501098633, 2.310762882232666, 2.3093342781066895, 2.3090062141418457, 2.3097856044769287], "accuracy": [0.0948355570435524, 0.09272222965955734, 0.09311848133802414, 0.09179764986038208, 0.09377889335155487, 0.0886276587843895], "val_loss": [2.3083083629608154, 2.3083083629608154, 2.3083083629608154, 2.3083083629608154, 2.3083083629608154, 2.3083083629608154], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [4, 2, 3, 2, 3, 5], [0, 3, 3, 0, 2], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 5, 2, 1, 0, 0, 9], [0, 2, 1, 6, 0], [0, 22, 29], [0, 0, 0, 1, 0, 0, 1], [0, 8, 2, 0, 8], [2, 2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 7, 3, 4, 2, 1, 0, 1, 0, 15, 10, 5, 3, 7, 5, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.negative(alpha)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), grad), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.sqrt(beta)))))", "other_info": {"loss": [2.311835765838623, 2.3099617958068848, 2.3109939098358154, 2.309842586517334, 2.3085525035858154, 2.309425115585327], "accuracy": [0.08809932321310043, 0.0866464152932167, 0.08915598690509796, 0.08968432247638702, 0.10091137140989304, 0.08585391938686371], "val_loss": [2.307962656021118, 2.307962656021118, 2.307962656021118, 2.307962656021118, 2.307962656021118, 2.307962656021118], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]