[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.205718517303467, 1.5926765203475952, 1.1581056118011475, 0.9791756272315979, 0.8952661156654358, 0.8530185222625732, 0.795979380607605, 0.7633938789367676, 0.7253225445747375, 0.7197045087814331, 0.706970751285553, 0.6902970671653748, 0.6773989200592041, 0.6396502256393433, 0.6377491354942322, 0.6229138970375061, 0.6108788847923279, 0.5970615148544312, 0.5928135514259338, 0.5912563800811768, 0.5645224452018738, 0.5760042071342468, 0.5539923310279846, 0.5430229306221008, 0.5403351783752441, 0.5385560393333435, 0.5317880511283875, 0.5126650929450989, 0.5211637020111084, 0.4952477216720581, 0.5046448707580566, 0.4961482882499695, 0.48955151438713074, 0.48061540722846985, 0.4803577959537506, 0.4883754551410675, 0.47398900985717773, 0.4683561325073242, 0.46987900137901306, 0.4604952335357666], "accuracy": [0.2689208686351776, 0.5090476870536804, 0.5974111557006836, 0.6539427042007446, 0.68101966381073, 0.6922467350959778, 0.7174745798110962, 0.7201162576675415, 0.7337207794189453, 0.7327961921691895, 0.7429665923118591, 0.7449478507041931, 0.7490423917770386, 0.763439416885376, 0.7714964747428894, 0.7688548564910889, 0.77677983045578, 0.780610203742981, 0.7816668748855591, 0.7810064554214478, 0.7938185334205627, 0.7868181467056274, 0.7935543656349182, 0.8031964302062988, 0.8000264167785645, 0.8020076751708984, 0.8049134612083435, 0.8107251524925232, 0.8076872229576111, 0.8212917447090149, 0.8165367841720581, 0.81548011302948, 0.8169330358505249, 0.8249900937080383, 0.8204993009567261, 0.8207634687423706, 0.8245938420295715, 0.8274996876716614, 0.8241975903511047, 0.8314621448516846], "val_loss": [1.9051614999771118, 1.1189358234405518, 0.9077156782150269, 0.8545312285423279, 0.707868754863739, 0.7143501043319702, 0.6670066714286804, 0.6669560670852661, 0.6089983582496643, 0.6325597167015076, 0.5951403975486755, 0.5907599925994873, 0.5591310858726501, 0.5818628072738647, 0.5478373169898987, 0.5258002877235413, 0.5313438177108765, 0.5144333243370056, 0.5501613616943359, 0.49634984135627747, 0.5101420283317566, 0.5289354920387268, 0.48692286014556885, 0.5422561764717102, 0.47888919711112976, 0.48580485582351685, 0.4727163016796112, 0.48450765013694763, 0.47039029002189636, 0.466971755027771, 0.47673299908638, 0.458650141954422, 0.44601693749427795, 0.4491969048976898, 0.44907689094543457, 0.45269015431404114, 0.4569643437862396, 0.43751972913742065, 0.44610336422920227, 0.43175408244132996], "val_accuracy": [0.6046666502952576, 0.6243333220481873, 0.6636666655540466, 0.6853333115577698, 0.7443333268165588, 0.7293333411216736, 0.7379999756813049, 0.7429999709129333, 0.7789999842643738, 0.7549999952316284, 0.7706666588783264, 0.7720000147819519, 0.7860000133514404, 0.777999997138977, 0.7829999923706055, 0.796999990940094, 0.8063333630561829, 0.800000011920929, 0.7706666588783264, 0.8080000281333923, 0.8019999861717224, 0.7879999876022339, 0.8130000233650208, 0.7776666879653931, 0.8183333277702332, 0.815666675567627, 0.824999988079071, 0.8100000023841858, 0.8153333067893982, 0.8203333616256714, 0.8166666626930237, 0.82833331823349, 0.8299999833106995, 0.8336666822433472, 0.8386666774749756, 0.8363333344459534, 0.8213333487510681, 0.8353333473205566, 0.828000009059906, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 4, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 3, 0, 1, 1, 8, 3, 4, 5, 3, 5, 4, 8, 0, 3, 2, 0, 4, 2, 9], [0, 6, 1, 5, 1, 0, 3, 0, 3, 4, 0, 6, 1, 6], [0, 45, 65, 92, 84], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 1, 39, 25, 14, 5, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.pow(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.multiply(tf.math.negative(alpha), tf.math.subtract(tf.math.subtract(grad, tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.square(tf.math.multiply(tf.math.square(tf.math.pow(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma))), tf.math.negative(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.negative(tf.math.pow(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), grad))), tf.math.add(alpha, grad)))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 9], [0, 0, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9, 1, 6, 6, 4, 2, 0, 5, 7, 1], [2, 0, 3, 1, 0, 5, 2, 3, 0, 5], [16, 1, 37, 53], [1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 2, 2, 5], [0, 6, 1], [0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 0, 2, 4, 7, 0, 9, 1, 0, 4, 8], [2, 5, 2, 1, 0, 4], [0, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 26, 16, 10, 4, 1, 0, 1, 1, 18, 12, 6, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(grad)), alpha), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.pow(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(beta), alpha)), tf.math.pow(tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 8], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 4, 1], [0], [1], [0], [1], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 0, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3102612495422363, 2.310908794403076, 2.3104443550109863, 2.3097639083862305, 2.309516668319702, 2.3103203773498535], "accuracy": [0.09311848133802414, 0.09391097724437714, 0.09060890227556229, 0.09192973375320435, 0.09179764986038208, 0.08717474341392517], "val_loss": [2.308725357055664, 2.308725357055664, 2.308725357055664, 2.308725357055664, 2.308725357055664, 2.308725357055664], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 9], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 2, 4, 1, 5, 3, 9, 5], [0, 6, 1, 2], [0, 61], [1], [0], [2], [0]], "fitness": -0.0231428574770689, "mapping_values": [1, 7, 4, 3, 1, 7, 4, 3, 1, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.square(tf.math.multiply(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [133164907364352.0, 156237287129088.0, 158373882363904.0, 154475209687040.0, 160303748743168.0, 157457074618368.0], "accuracy": [0.08149518072605133, 0.0750231146812439, 0.07092854380607605, 0.07515519857406616, 0.06921146810054779, 0.07885351777076721], "val_loss": [137386482728960.0, 137386482728960.0, 137386482728960.0, 137386482728960.0, 137386474340352.0, 137386474340352.0], "val_accuracy": [0.02566666714847088, 0.02566666714847088, 0.02566666714847088, 0.02566666714847088, 0.02566666714847088, 0.02566666714847088]}}]