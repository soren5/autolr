[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207402467727661, 1.59316885471344, 1.1343961954116821, 0.9723407626152039, 0.855109453201294, 0.8185645937919617, 0.7546511292457581, 0.7563682198524475, 0.7210522890090942, 0.7002548575401306, 0.6699641346931458, 0.6545790433883667, 0.6383127570152283, 0.6259588003158569, 0.6053321957588196, 0.6203722953796387, 0.5929661393165588, 0.592444658279419, 0.5560587644577026, 0.562886118888855, 0.5440535545349121, 0.5567687749862671, 0.5381854176521301, 0.5316773056983948, 0.524738609790802, 0.5127289891242981, 0.517554759979248, 0.49668610095977783, 0.4973108172416687, 0.48705825209617615, 0.4837263226509094, 0.472556471824646, 0.47722694277763367, 0.45587900280952454, 0.4587550163269043, 0.4593488574028015, 0.44503143429756165, 0.4567808210849762, 0.44107407331466675, 0.4441998600959778, 0.43618834018707275, 0.42824041843414307, 0.42742347717285156, 0.4230172038078308, 0.42025768756866455, 0.4109289050102234, 0.4086339771747589, 0.40863317251205444, 0.3989095985889435, 0.4166393280029297, 0.39263805747032166, 0.39820027351379395, 0.3860858082771301, 0.3924805521965027, 0.3844185471534729, 0.3765844404697418, 0.3779214322566986, 0.36844751238822937, 0.38376569747924805, 0.3664500415325165, 0.3623484969139099, 0.3691267669200897, 0.3538097143173218, 0.3573051393032074, 0.34481003880500793, 0.34581685066223145, 0.35195618867874146, 0.3492196202278137, 0.3532097637653351, 0.34793776273727417, 0.3357807695865631, 0.3280275762081146, 0.3287551999092102, 0.3383300304412842, 0.3297431766986847, 0.3277677893638611, 0.3250938653945923, 0.32591354846954346, 0.3163829445838928, 0.3090968430042267, 0.3219115436077118, 0.31656789779663086], "accuracy": [0.2642979919910431, 0.5127459764480591, 0.6082419753074646, 0.6577730774879456, 0.6847180128097534, 0.6966054439544678, 0.7304186820983887, 0.7162858247756958, 0.7327961921691895, 0.7416457533836365, 0.7477215528488159, 0.759609043598175, 0.7580240368843079, 0.763967752456665, 0.7737419009208679, 0.767401933670044, 0.7820631265640259, 0.7784969210624695, 0.7923656105995178, 0.7906485199928284, 0.7967243194580078, 0.7918372750282288, 0.7992339134216309, 0.8067626357078552, 0.8014793395996094, 0.8101968169212341, 0.8096684813499451, 0.8124422430992126, 0.8177255392074585, 0.8236692547798157, 0.8240655064582825, 0.8255184292793274, 0.8227446675300598, 0.8333113193511963, 0.8337075710296631, 0.8327829837799072, 0.835160493850708, 0.8323867321014404, 0.8385946154594421, 0.832650899887085, 0.8422929644584656, 0.8408400416374207, 0.8411042094230652, 0.8404437899589539, 0.8470479249954224, 0.8475762605667114, 0.8502179384231567, 0.8518029451370239, 0.8553691506385803, 0.8462554216384888, 0.8580108284950256, 0.8555012345314026, 0.8590674996376038, 0.854708731174469, 0.8590674996376038, 0.8642187118530273, 0.8573504090309143, 0.8619733452796936, 0.8535200357437134, 0.86553955078125, 0.8647470474243164, 0.8647470474243164, 0.8706908226013184, 0.8697662353515625, 0.8754457831382751, 0.8733324408531189, 0.8691058158874512, 0.8671245574951172, 0.8651432991027832, 0.8702945709228516, 0.8735966086387634, 0.8808611631393433, 0.878351628780365, 0.8739928603172302, 0.8811253309249878, 0.880729079246521, 0.8824461698532104, 0.8745211958885193, 0.8841632604598999, 0.883238673210144, 0.8794082403182983, 0.8799365758895874], "val_loss": [1.9109716415405273, 1.1207454204559326, 0.9456784129142761, 0.8325549364089966, 0.6990267634391785, 0.6849399209022522, 0.6625403761863708, 0.6800479292869568, 0.6621012091636658, 0.6561425924301147, 0.5860492587089539, 0.5797862410545349, 0.5728976130485535, 0.543383777141571, 0.6181464791297913, 0.5529887080192566, 0.5339391827583313, 0.5253940224647522, 0.5159088373184204, 0.51611328125, 0.5194107890129089, 0.506019651889801, 0.49136409163475037, 0.48820051550865173, 0.4731026887893677, 0.4811875820159912, 0.46521133184432983, 0.46933409571647644, 0.48549193143844604, 0.4617220163345337, 0.4497262239456177, 0.4786616265773773, 0.44913244247436523, 0.4404664635658264, 0.43600723147392273, 0.4470384120941162, 0.4524395763874054, 0.4328539967536926, 0.4336448907852173, 0.44514623284339905, 0.42372485995292664, 0.4188903272151947, 0.43756330013275146, 0.419253408908844, 0.42017146944999695, 0.4218861162662506, 0.41284024715423584, 0.41017237305641174, 0.42613115906715393, 0.41619357466697693, 0.4282704293727875, 0.4117263853549957, 0.398535817861557, 0.40928027033805847, 0.39639753103256226, 0.3971604108810425, 0.39479854702949524, 0.41035985946655273, 0.400433748960495, 0.39305904507637024, 0.404018759727478, 0.38970866799354553, 0.4049209654331207, 0.38794705271720886, 0.39100125432014465, 0.38794103264808655, 0.3905334770679474, 0.40113499760627747, 0.38362976908683777, 0.40289440751075745, 0.38183507323265076, 0.3924284279346466, 0.3909355401992798, 0.3789112865924835, 0.370961993932724, 0.3826743960380554, 0.38452374935150146, 0.37985965609550476, 0.3815493881702423, 0.3996093273162842, 0.39161279797554016, 0.38883957266807556], "val_accuracy": [0.5429999828338623, 0.6380000114440918, 0.6676666736602783, 0.6926666498184204, 0.7396666407585144, 0.7509999871253967, 0.7563333511352539, 0.7459999918937683, 0.7276666760444641, 0.7416666746139526, 0.7816666960716248, 0.7763333320617676, 0.7803333401679993, 0.7913333177566528, 0.7559999823570251, 0.7929999828338623, 0.7926666736602783, 0.7986666560173035, 0.8069999814033508, 0.8026666641235352, 0.7910000085830688, 0.8036666512489319, 0.8176666498184204, 0.8216666579246521, 0.8223333358764648, 0.8199999928474426, 0.8289999961853027, 0.8270000219345093, 0.8130000233650208, 0.8299999833106995, 0.8336666822433472, 0.8223333358764648, 0.8320000171661377, 0.8339999914169312, 0.8373333215713501, 0.8309999704360962, 0.8333333134651184, 0.8423333168029785, 0.8426666855812073, 0.8299999833106995, 0.8429999947547913, 0.847000002861023, 0.8403333425521851, 0.847000002861023, 0.8473333120346069, 0.8389999866485596, 0.8493333458900452, 0.8493333458900452, 0.840666651725769, 0.8513333201408386, 0.8450000286102295, 0.8443333506584167, 0.8553333282470703, 0.846666693687439, 0.8516666889190674, 0.8550000190734863, 0.8560000061988831, 0.8473333120346069, 0.8526666760444641, 0.8600000143051147, 0.8523333072662354, 0.859333336353302, 0.8489999771118164, 0.859333336353302, 0.8603333234786987, 0.8606666922569275, 0.8610000014305115, 0.8523333072662354, 0.8586666584014893, 0.8516666889190674, 0.8633333444595337, 0.859000027179718, 0.8653333187103271, 0.862333357334137, 0.8683333396911621, 0.8633333444595337, 0.8690000176429749, 0.8646666407585144, 0.8640000224113464, 0.8556666374206543, 0.8606666922569275, 0.8643333315849304]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 2, 3, 5], [2, 2, 1, 0, 2], [2, 39, 39], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1], [4, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 3, 1, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.631245136260986, 59.33458709716797, 199.58799743652344, 501.99505615234375, 993.242431640625, 1780.13818359375], "accuracy": [0.0956280529499054, 0.09906221181154251, 0.09945846349000931, 0.0948355570435524, 0.09787346422672272, 0.09840179979801178], "val_loss": [20.486536026000977, 95.61302185058594, 264.4941711425781, 575.6421508789062, 1077.343017578125, 1818.31005859375], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 9, 5], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 1, 0], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.math.subtract(grad, alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 2, 3, 2, 3, 5, 3, 1, 1, 4, 8, 3, 3, 4, 5, 6], [0, 1, 3, 0, 2, 3, 3, 3, 3, 3, 0, 1, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 1], [0, 6, 1, 0, 0], [7, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 16, 14, 3, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(grad)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad))), tf.math.subtract(grad, tf.math.pow(tf.math.sqrt(grad), tf.math.multiply(tf.math.multiply(tf.math.pow(grad, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(alpha, grad)))))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [7.482954502105713, 57.9194450378418, 204.11715698242188, 487.3118591308594, 999.2213745117188, 1763.5758056640625], "accuracy": [0.09985470771789551, 0.10289261490106583, 0.09787346422672272, 0.09549596905708313, 0.10091137140989304, 0.10210011899471283], "val_loss": [20.434494018554688, 95.38695526123047, 263.9958190917969, 574.8558349609375, 1076.1483154296875, 1816.5421142578125], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 2, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [6, 9, 0, 2, 4, 6, 1, 8, 8, 4, 0, 7, 1, 0], [0, 6, 1, 0, 0, 6, 0, 2], [0, 22, 9, 47, 29], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 7, 3, 4, 1, 1, 0, 1, 0, 22, 14, 8, 5, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, alpha), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(grad), tf.math.sqrt(alpha))), tf.math.pow(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.subtract(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), beta))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308377504348755, 2.3101370334625244, 2.3097176551818848, 2.309427261352539, 2.3098771572113037, 2.308950901031494], "accuracy": [0.09589222073554993, 0.09166556596755981, 0.09470347315073013, 0.09470347315073013, 0.09272222965955734, 0.0952318087220192], "val_loss": [2.3089547157287598, 2.3089547157287598, 2.3089547157287598, 2.3089547157287598, 2.3089547157287598, 2.3089547157287598], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]