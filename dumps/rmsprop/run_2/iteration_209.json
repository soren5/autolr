[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8014285564422607, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213855504989624, 1.61647629737854, 1.1473737955093384, 0.9898704290390015, 0.8906020522117615, 0.8359925746917725, 0.7822935581207275, 0.7539722919464111, 0.7310424447059631, 0.7252629399299622, 0.6931187510490417, 0.6746248006820679, 0.6609007120132446, 0.6316294074058533, 0.6353798508644104, 0.6251121163368225, 0.5996760129928589, 0.606366753578186, 0.60435950756073, 0.5688518285751343, 0.5737130641937256, 0.5498784780502319], "accuracy": [0.2576938271522522, 0.49385812878608704, 0.5968828201293945, 0.643772304058075, 0.6779817938804626, 0.6935675740242004, 0.7150970697402954, 0.7191916704177856, 0.724739134311676, 0.7306828498840332, 0.7441553473472595, 0.7470611333847046, 0.7537974119186401, 0.7617223858833313, 0.7576277852058411, 0.7658169269561768, 0.7795535326004028, 0.7709681391716003, 0.7781006693840027, 0.7893276810646057, 0.7823272943496704, 0.7947431206703186], "val_loss": [1.9300692081451416, 1.1166266202926636, 0.9434794783592224, 0.7929607033729553, 0.7501588463783264, 0.7342774271965027, 0.6566135883331299, 0.6820763349533081, 0.6984004974365234, 0.6461278200149536, 0.5982919931411743, 0.6061776876449585, 0.5692265629768372, 0.5688440203666687, 0.581733226776123, 0.5541660785675049, 0.5466901659965515, 0.5468997955322266, 0.5371410250663757, 0.5304277539253235, 0.5268378853797913, 0.528586745262146], "val_accuracy": [0.4816666543483734, 0.6393333077430725, 0.6656666398048401, 0.7229999899864197, 0.7293333411216736, 0.7273333072662354, 0.7613333463668823, 0.746999979019165, 0.7476666569709778, 0.765999972820282, 0.7839999794960022, 0.7736666798591614, 0.7863333225250244, 0.7893333435058594, 0.7710000276565552, 0.8019999861717224, 0.8073333501815796, 0.7979999780654907, 0.8036666512489319, 0.8016666769981384, 0.8043333292007446, 0.8040000200271606]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 1, 5], [0, 0, 1, 0, 0], [0, 39, 39, 79], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 0, 2, 1, 3, 3, 1, 3, 8, 5, 8], [0, 6, 1, 1, 0, 2, 3, 0, 4], [0, 28, 66], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 10, 6, 4, 1, 23, 14, 9, 3, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.multiply(alpha, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.multiply(tf.math.sqrt(sigma), tf.math.square(tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 4, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [44, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [4, 2, 0, 4, 5, 2, 1, 4, 1, 0, 9, 5, 0, 9], [6, 6, 1, 6, 0, 3], [58, 22, 19], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 20, 14, 6, 3, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.math.pow(grad, alpha), grad), tf.math.subtract(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090622425079346, 2.309641122817993, 2.3099584579467773, 2.309847593307495, 2.3104310035705566, 2.3098948001861572], "accuracy": [0.09232597798109055, 0.09509972482919693, 0.09034473448991776, 0.09153348207473755, 0.09179764986038208, 0.09391097724437714], "val_loss": [2.3088622093200684, 2.3088622093200684, 2.3088622093200684, 2.3088622093200684, 2.3088622093200684, 2.3088622093200684], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 9, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 5, 1, 0], [2, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 2, 2, 5, 2, 1], [7, 2, 1, 6, 0, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 13, 7, 6, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(grad), beta), tf.math.add(tf.math.subtract(alpha, grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310192108154297, 2.3100268840789795, 2.3111627101898193, 2.309814453125, 2.3090438842773438, 2.309020757675171], "accuracy": [0.09430722147226334, 0.09153348207473755, 0.0936468094587326, 0.09126931428909302, 0.09615638852119446, 0.09311848133802414], "val_loss": [2.308276414871216, 2.308276414871216, 2.308276414871216, 2.308276414871216, 2.308276414871216, 2.308276414871216], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 2, 3, 2, 3, 5, 0, 0, 9, 0, 4, 4, 1, 4, 8, 3, 9, 0, 1, 9, 8, 8], [0, 2, 1, 0, 2, 0, 1, 0, 1], [0, 39, 39, 77, 8, 11, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [76, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 2, 0, 2, 5, 0, 1, 6, 8, 2], [0, 3, 1, 6, 0, 5, 0], [0, 53, 55], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 31, 22, 9, 7, 2, 1, 1, 0, 17, 10, 7, 3, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.sqrt(grad), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), alpha)))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(sigma, alpha), grad)))), tf.math.sqrt(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310732841491699, 2.309973955154419, 2.3098607063293457, 2.310223340988159, 2.3098580837249756, 2.3083367347717285], "accuracy": [0.09113723784685135, 0.09430722147226334, 0.09232597798109055, 0.09615638852119446, 0.09311848133802414, 0.08994849026203156], "val_loss": [2.30942964553833, 2.30942964553833, 2.30942964553833, 2.30942964553833, 2.30942964553833, 2.30942964553833], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]