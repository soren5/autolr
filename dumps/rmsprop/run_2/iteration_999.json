[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.829714298248291, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2121894359588623, 1.608580470085144, 1.145715594291687, 1.014958381652832, 0.8854362368583679, 0.8636099100112915, 0.794466495513916, 0.7826505899429321, 0.7277832627296448, 0.7148508429527283, 0.6732125878334045, 0.6634171605110168, 0.6615254282951355, 0.666865885257721, 0.6262664198875427, 0.6323886513710022, 0.6019325852394104, 0.599651038646698, 0.589419424533844, 0.5933752655982971, 0.553590714931488, 0.545368492603302, 0.5423261523246765, 0.5515105724334717, 0.524456262588501, 0.5107961297035217, 0.5244937539100647, 0.4970521032810211, 0.500282883644104, 0.4949488937854767, 0.4911888539791107, 0.48350486159324646, 0.47737544775009155, 0.47147127985954285, 0.46692800521850586, 0.4600655734539032, 0.4635366201400757, 0.45232093334198, 0.450994074344635, 0.4443155527114868, 0.4379342496395111, 0.4392794072628021, 0.4398518204689026, 0.42295244336128235, 0.4289194643497467], "accuracy": [0.2724871337413788, 0.5065380930900574, 0.6026945114135742, 0.631488561630249, 0.683529257774353, 0.6848500967025757, 0.7100779414176941, 0.7063795924186707, 0.7284374833106995, 0.7289658188819885, 0.7524765729904175, 0.7560427784919739, 0.7560427784919739, 0.7506273984909058, 0.7670056819915771, 0.7648923397064209, 0.7759873270988464, 0.7733456492424011, 0.7799497842788696, 0.7820631265640259, 0.7951393723487854, 0.7956677079200745, 0.8001585006713867, 0.7947431206703186, 0.8076872229576111, 0.8148196935653687, 0.8088759779930115, 0.8177255392074585, 0.8148196935653687, 0.819442629814148, 0.8185180425643921, 0.8203672170639038, 0.8228767514228821, 0.8260467648506165, 0.8272355198860168, 0.8290846943855286, 0.8321225643157959, 0.8343679904937744, 0.8341038227081299, 0.8405758738517761, 0.8385946154594421, 0.835160493850708, 0.8372738361358643, 0.8425571322441101, 0.8436138033866882], "val_loss": [1.9216028451919556, 1.0873361825942993, 0.9070982933044434, 0.8006883263587952, 0.7200851440429688, 0.708970844745636, 0.6483824253082275, 0.6307805180549622, 0.5996917486190796, 0.579269528388977, 0.5712080597877502, 0.6051590442657471, 0.5790616869926453, 0.556331217288971, 0.6159009337425232, 0.5256198644638062, 0.5214813351631165, 0.5082468390464783, 0.5179460048675537, 0.49696481227874756, 0.5089138746261597, 0.5043153762817383, 0.5011755228042603, 0.4998878538608551, 0.47444531321525574, 0.4724023938179016, 0.47455957531929016, 0.46354711055755615, 0.4534611105918884, 0.4564662277698517, 0.45981112122535706, 0.44179195165634155, 0.45156535506248474, 0.44140058755874634, 0.43572700023651123, 0.4562149941921234, 0.42971503734588623, 0.4378834664821625, 0.43892282247543335, 0.42467251420021057, 0.4219920337200165, 0.4288997948169708, 0.42684489488601685, 0.44433820247650146, 0.4330066740512848], "val_accuracy": [0.5333333611488342, 0.6816666722297668, 0.6763333082199097, 0.7123333215713501, 0.7266666889190674, 0.7213333249092102, 0.7463333606719971, 0.7576666474342346, 0.7743333578109741, 0.7863333225250244, 0.7796666622161865, 0.7703333497047424, 0.7829999923706055, 0.7973333597183228, 0.7480000257492065, 0.8056666851043701, 0.7963333129882812, 0.8116666674613953, 0.8086666464805603, 0.8186666369438171, 0.8059999942779541, 0.8116666674613953, 0.8159999847412109, 0.8116666674613953, 0.8223333358764648, 0.8316666483879089, 0.8256666660308838, 0.831333339214325, 0.8386666774749756, 0.8373333215713501, 0.8336666822433472, 0.8413333296775818, 0.8376666903495789, 0.840666651725769, 0.846666693687439, 0.8336666822433472, 0.8483333587646484, 0.8413333296775818, 0.8423333168029785, 0.8533333539962769, 0.8506666421890259, 0.8453333377838135, 0.8479999899864197, 0.8356666564941406, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 8], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 2, 5], [0, 6, 1, 6, 0], [0], [1], [0], [5], [0]], "fitness": -0.2142857164144516, "mapping_values": [1, 11, 6, 5, 4, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.339468479156494, 2.1232504844665527, 2.9758543968200684, 2.2385549545288086, 2.3813681602478027, 2.4718964099884033, 2.3115036487579346, 2.3033640384674072], "accuracy": [0.20935148000717163, 0.21304979920387268, 0.10830801725387573, 0.15334829688072205, 0.16166952252388, 0.20195482671260834, 0.09681680053472519, 0.09985470771789551], "val_loss": [2.1994965076446533, 5.691760540008545, 2.2723612785339355, 2.3004465103149414, 2.299647808074951, 2.338042736053467, 2.3032474517822266, 2.302705764770508], "val_accuracy": [0.16566666960716248, 0.10166666656732559, 0.21299999952316284, 0.14933332800865173, 0.13566666841506958, 0.10166666656732559, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 6, 2, 2, 5, 3, 0, 3, 7], [0, 2, 1, 0, 2, 3, 1, 1, 3], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 1, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.1080000028014183, "mapping_values": [1, 19, 10, 9, 2, 6, 3, 3, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.multiply(grad, grad)), alpha)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [21.387134552001953, 1.6155177958965193e+29, 3.138542413711548, 3.0026090145111084, 2.9997103214263916, 3.3100574016571045], "accuracy": [0.18174614012241364, 0.10394927859306335, 0.10236428678035736, 0.10249637067317963, 0.09853387624025345, 0.09879804402589798], "val_loss": [2.5461537837982178, 3.321580648422241, 3.0392630100250244, 2.925372838973999, 3.3446590900421143, 3.1312801837921143], "val_accuracy": [0.10599999874830246, 0.10000000149011612, 0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 3, 2, 3, 5], [0, 1, 1, 0, 2], [31, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [6, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 2, 12, 7, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 9, 3, 2, 7, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 0, 1, 8], [0, 6, 1, 5, 3, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 2, 2, 0, 1, 2, 1, 1, 0, 16, 10, 6, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.negative(alpha), grad)))), tf.math.subtract(tf.math.sqrt(sigma), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310567617416382, 2.308803081512451, 2.310673236846924, 2.308757781982422, 2.308786153793335, 2.3098905086517334], "accuracy": [0.08994849026203156, 0.0940430611371994, 0.09602430462837219, 0.08981640636920929, 0.09100515395402908, 0.09113723784685135], "val_loss": [2.309094190597534, 2.309094190597534, 2.309094190597534, 2.309094190597534, 2.309094190597534, 2.309094190597534], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]