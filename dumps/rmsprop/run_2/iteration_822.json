[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099127769470215, 1.5981159210205078, 1.1521456241607666, 0.9702134728431702, 0.8983298540115356, 0.8303341269493103, 0.7870247960090637, 0.7698699831962585, 0.7485374212265015, 0.6915594935417175, 0.6853075623512268, 0.6623274087905884, 0.6583101749420166, 0.6418014168739319, 0.6158866882324219, 0.6124276518821716, 0.5958107709884644, 0.583782970905304, 0.5692008137702942, 0.5701649188995361, 0.5734931230545044, 0.5472936630249023, 0.5530350208282471, 0.5411544442176819, 0.5361859202384949, 0.5185540914535522, 0.5125306844711304, 0.5043897032737732, 0.5014973878860474, 0.48730868101119995, 0.4841751158237457, 0.4816488027572632, 0.4684832692146301, 0.46098268032073975, 0.45530247688293457, 0.4462137520313263, 0.45504456758499146, 0.45999541878700256, 0.4602130949497223, 0.4391588270664215, 0.4387674629688263, 0.4300526976585388], "accuracy": [0.2709021270275116, 0.5094439387321472, 0.5982036590576172, 0.6559239029884338, 0.6804913282394409, 0.6968696117401123, 0.7080966830253601, 0.718399167060852, 0.722229540348053, 0.7408532500267029, 0.7427024245262146, 0.7531369924545288, 0.7528728246688843, 0.7578919529914856, 0.7759873270988464, 0.7676661014556885, 0.7837802171707153, 0.7802139520645142, 0.7887993454933167, 0.7852331399917603, 0.7833839654922485, 0.7969884872436523, 0.7961959838867188, 0.7992339134216309, 0.8030643463134766, 0.8083476424217224, 0.8105930685997009, 0.8146876096725464, 0.8157442808151245, 0.822348415851593, 0.8226125836372375, 0.8271034359931946, 0.8280280232429504, 0.82683926820755, 0.8293488025665283, 0.8378021121025085, 0.8337075710296631, 0.829216718673706, 0.8271034359931946, 0.8343679904937744, 0.8399154543876648, 0.8424250483512878], "val_loss": [1.9192278385162354, 1.123072862625122, 0.8752169609069824, 0.8458465933799744, 0.7233346104621887, 0.780463695526123, 0.662264347076416, 0.7008147239685059, 0.639279842376709, 0.6287444829940796, 0.5785049796104431, 0.5837114453315735, 0.5492447018623352, 0.5287675261497498, 0.5329739451408386, 0.5220073461532593, 0.5355793833732605, 0.4972556233406067, 0.5088745951652527, 0.5359283089637756, 0.4998854100704193, 0.5054865479469299, 0.469144731760025, 0.4706452488899231, 0.4666224718093872, 0.47469961643218994, 0.45894673466682434, 0.46566063165664673, 0.4524877965450287, 0.44147664308547974, 0.4554796516895294, 0.4326033592224121, 0.4297848045825958, 0.4244857132434845, 0.42055729031562805, 0.41428133845329285, 0.41388827562332153, 0.4255543649196625, 0.42572221159935, 0.42110151052474976, 0.4204593002796173, 0.415365070104599], "val_accuracy": [0.5403333306312561, 0.6263333559036255, 0.6803333163261414, 0.6850000023841858, 0.7296666502952576, 0.7066666483879089, 0.749666690826416, 0.7143333554267883, 0.75, 0.7580000162124634, 0.7770000100135803, 0.7556666731834412, 0.7870000004768372, 0.796999990940094, 0.7983333468437195, 0.8043333292007446, 0.7990000247955322, 0.812666654586792, 0.8003333210945129, 0.7696666717529297, 0.8113333582878113, 0.8069999814033508, 0.8309999704360962, 0.8180000185966492, 0.8273333311080933, 0.8183333277702332, 0.8266666531562805, 0.8320000171661377, 0.8266666531562805, 0.8373333215713501, 0.8336666822433472, 0.8376666903495789, 0.8443333506584167, 0.8460000157356262, 0.8456666469573975, 0.8476666808128357, 0.8516666889190674, 0.8323333263397217, 0.843999981880188, 0.8460000157356262, 0.847000002861023, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 6, 4, 2, 7, 8, 1, 5, 7, 4, 1, 5, 1, 2, 9], [0, 2, 1, 2, 1, 1, 0, 3, 0, 1, 2, 3, 2, 0], [0, 39, 39, 99, 51], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 2, 2, 5, 8, 1], [0, 3, 4, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 20, 14, 5, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(grad, tf.math.pow(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.subtract(tf.math.square(tf.math.add(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.square(tf.math.subtract(grad, grad)), grad))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)), tf.math.subtract(grad, grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 3, 1, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [9, 2, 0, 6, 3, 8, 2], [3, 0, 0, 0, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 0], [0, 2, 9, 2, 9], [0, 6, 0], [0, 42], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 1, 1, 0, 1, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [91.01612854003906, 10850.642578125, 179272.390625, 1282154.125, 5611690.0, 18484524.0], "accuracy": [0.09774138033390045, 0.10513802617788315, 0.09959053993225098, 0.09668471664190292, 0.10474177449941635, 0.10328886657953262], "val_loss": [802.6206665039062, 39371.578125, 418357.71875, 2273913.5, 8506387.0, 25074156.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 8, 3, 8, 2], [2, 0, 5, 1, 0], [16, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 6, 2, 1, 2, 1], [0, 6, 1, 6, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303445339202881, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 6, 6], [0, 2, 1, 0, 2, 0, 3], [94, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 3, 5, 2, 1], [0, 6, 1, 3, 0], [0, 49], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 14, 7, 7, 3, 11, 7, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3083386421203613, 2.309940814971924, 2.3116068840026855, 2.3085684776306152, 2.309577703475952, 2.30928635597229], "accuracy": [0.09126931428909302, 0.09549596905708313, 0.0866464152932167, 0.09140139818191528, 0.09325055778026581, 0.09430722147226334], "val_loss": [2.30887770652771, 2.30887770652771, 2.30887770652771, 2.30887770652771, 2.30887770652771, 2.30887770652771], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]