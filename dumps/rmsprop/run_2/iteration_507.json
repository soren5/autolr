[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115299701690674, 1.6050463914871216, 1.1334280967712402, 0.9904769062995911, 0.8997495770454407, 0.8269886374473572, 0.7953268885612488, 0.7614517211914062, 0.7271213531494141, 0.6919877529144287, 0.7088426351547241, 0.6666527390480042, 0.6744509339332581, 0.6477723121643066, 0.6433932185173035, 0.6177226901054382, 0.6195765137672424, 0.60980224609375, 0.5929034352302551, 0.5723639130592346, 0.5680456757545471, 0.5613179206848145, 0.5487555265426636, 0.5406026244163513, 0.5379319190979004, 0.5311794281005859, 0.5197723507881165, 0.5220106244087219, 0.5107847452163696, 0.5061867237091064, 0.4965081810951233, 0.4958818256855011, 0.49474528431892395, 0.4747445285320282, 0.4801652133464813, 0.47817397117614746, 0.464551717042923, 0.4547687768936157, 0.45880943536758423, 0.45328786969184875, 0.4487760663032532, 0.44988173246383667, 0.4365980625152588, 0.42625972628593445, 0.43262073397636414, 0.43688318133354187, 0.4212033748626709, 0.4253459572792053, 0.4197397530078888], "accuracy": [0.2697133719921112, 0.5041606426239014, 0.5999207496643066, 0.6424514651298523, 0.6711134314537048, 0.6993792057037354, 0.7029454708099365, 0.7185312509536743, 0.7293620109558105, 0.7450799345970154, 0.7297582626342773, 0.7574957013130188, 0.7499669790267944, 0.7586844563484192, 0.7617223858833313, 0.7734777331352234, 0.7708360552787781, 0.7761194109916687, 0.7792893648147583, 0.7917051911354065, 0.7901201844215393, 0.7890635132789612, 0.7977809906005859, 0.8055738806724548, 0.7997622489929199, 0.8009510040283203, 0.8092722296714783, 0.8078193068504333, 0.806630551815033, 0.8121780753135681, 0.8216879963874817, 0.8189142942428589, 0.8107251524925232, 0.8281601071357727, 0.8231409192085266, 0.8253863453865051, 0.832650899887085, 0.8297450542449951, 0.8338396549224854, 0.8298771381378174, 0.837141752243042, 0.8334434032440186, 0.8405758738517761, 0.8391229510307312, 0.8404437899589539, 0.837141752243042, 0.8450667262077332, 0.8416325449943542, 0.8438779711723328], "val_loss": [1.9217503070831299, 1.0997366905212402, 0.8512865304946899, 0.8046938180923462, 0.7024716734886169, 0.6713266372680664, 0.7284235954284668, 0.6643951535224915, 0.6359594464302063, 0.5975450277328491, 0.6098008751869202, 0.5735549926757812, 0.5709301233291626, 0.5573620796203613, 0.5766403675079346, 0.5613597631454468, 0.5685690641403198, 0.539704442024231, 0.5309603810310364, 0.5161226391792297, 0.5181597471237183, 0.5128037333488464, 0.5050174593925476, 0.5103272795677185, 0.48763489723205566, 0.49610385298728943, 0.4861586093902588, 0.48839497566223145, 0.4887855350971222, 0.4735136330127716, 0.500739574432373, 0.46659937500953674, 0.4681759178638458, 0.4554382860660553, 0.47751879692077637, 0.4508087635040283, 0.44507211446762085, 0.449504017829895, 0.44151079654693604, 0.44725096225738525, 0.4541248679161072, 0.4320632815361023, 0.4265099763870239, 0.4248826503753662, 0.4232529401779175, 0.42861416935920715, 0.4297019839286804, 0.44008326530456543, 0.41551268100738525], "val_accuracy": [0.5443333387374878, 0.6116666793823242, 0.6930000185966492, 0.6959999799728394, 0.7386666536331177, 0.7583333253860474, 0.7166666388511658, 0.7450000047683716, 0.7576666474342346, 0.7736666798591614, 0.7673333287239075, 0.7910000085830688, 0.7860000133514404, 0.784333348274231, 0.765666663646698, 0.7889999747276306, 0.7923333048820496, 0.7866666913032532, 0.7996666431427002, 0.8073333501815796, 0.8140000104904175, 0.8106666803359985, 0.812333345413208, 0.8103333115577698, 0.8226666450500488, 0.8133333325386047, 0.8206666707992554, 0.8190000057220459, 0.8106666803359985, 0.8233333230018616, 0.8130000233650208, 0.8243333101272583, 0.8273333311080933, 0.8326666951179504, 0.8220000267028809, 0.8343333601951599, 0.8403333425521851, 0.8346666693687439, 0.8366666436195374, 0.8373333215713501, 0.8293333053588867, 0.8443333506584167, 0.8463333249092102, 0.8513333201408386, 0.8473333120346069, 0.8453333377838135, 0.8473333120346069, 0.8383333086967468, 0.8473333120346069]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [38, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 9, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 8, 1, 3, 5], [0, 2, 1, 3, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [7, 2, 6, 6, 0, 8, 2], [0, 0, 3, 4, 0, 1], [16, 1, 88], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 7, 9, 2, 5, 2, 1, 6, 6, 3], [0, 6, 1, 4, 0, 0, 7], [0, 85, 87, 21], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 13, 7, 6, 3, 17, 10, 7, 4, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.add(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, alpha), tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 3, 3, 0, 2, 5], [3, 2, 1, 0, 2], [0, 51, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2, 9, 2, 7, 8], [2, 0, 3, 1, 0, 5, 0], [16, 1, 49, 97], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 5], [0, 6, 1, 4], [32], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 18, 11, 7, 4, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad)))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 8, 5], [0, 1, 1, 0, 1], [0, 39, 39], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 7, 5, 5, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 6, 1, 6, 0], [0, 79], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(alpha, grad)))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090808391571045, 2.3101863861083984, 2.309356927871704, 2.309149980545044, 2.309518814086914, 2.3099796772003174], "accuracy": [0.09430722147226334, 0.09298639744520187, 0.09285431355237961, 0.09272222965955734, 0.09219389408826828, 0.09351472556591034], "val_loss": [2.308561086654663, 2.308561086654663, 2.308561086654663, 2.308561086654663, 2.308561086654663, 2.308561086654663], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]