[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2114908695220947, 1.6214663982391357, 1.1597366333007812, 1.015605092048645, 0.8915839195251465, 0.8531627655029297, 0.7978671789169312, 0.7689679861068726, 0.7300357818603516, 0.729672908782959, 0.6980836391448975, 0.6666030287742615, 0.6577599048614502, 0.6608221530914307, 0.6452906131744385, 0.6240984797477722, 0.600655198097229, 0.616387128829956, 0.5926144123077393, 0.5893493294715881, 0.5671318173408508, 0.5673592686653137, 0.5525837540626526, 0.5519904494285583, 0.53480464220047, 0.5320311784744263, 0.5340093970298767, 0.5221404433250427, 0.5122279524803162, 0.5129163861274719, 0.5042544007301331, 0.48499980568885803, 0.4947862923145294, 0.4786078929901123, 0.4809543490409851, 0.48012423515319824, 0.47183704376220703, 0.46698132157325745, 0.4650484025478363, 0.4582425653934479, 0.448760986328125, 0.44352051615715027, 0.4417314827442169, 0.44501611590385437, 0.4453828036785126, 0.4350232481956482, 0.427387535572052, 0.42881032824516296, 0.41746824979782104, 0.4131011664867401, 0.4159103035926819, 0.4158933758735657, 0.40806302428245544, 0.4059188961982727, 0.39949163794517517], "accuracy": [0.2642979919910431, 0.5028398036956787, 0.591731607913971, 0.6276581883430481, 0.681547999382019, 0.694360077381134, 0.705058753490448, 0.7223616242408752, 0.7329282760620117, 0.726192057132721, 0.7449478507041931, 0.7563069462776184, 0.7528728246688843, 0.7601373791694641, 0.752740740776062, 0.7707040309906006, 0.7769119143486023, 0.7741381525993347, 0.783119797706604, 0.7769119143486023, 0.7889314293861389, 0.7889314293861389, 0.7947431206703186, 0.793422281742096, 0.8043851256370544, 0.8072909712791443, 0.804649293422699, 0.8074230551719666, 0.8129705190658569, 0.8129705190658569, 0.8131026029586792, 0.8231409192085266, 0.8216879963874817, 0.8227446675300598, 0.8281601071357727, 0.8241975903511047, 0.8281601071357727, 0.8259146809577942, 0.8278959393501282, 0.8364813327789307, 0.8318583965301514, 0.8408400416374207, 0.8348963260650635, 0.8362171649932861, 0.8417646288871765, 0.8385946154594421, 0.8459912538528442, 0.8442742228507996, 0.8482366800308228, 0.847840428352356, 0.8441421389579773, 0.8494254350662231, 0.854708731174469, 0.8511425256729126, 0.852859616279602], "val_loss": [1.920696496963501, 1.101177453994751, 0.9124689698219299, 0.7736588716506958, 0.7517386078834534, 0.6953523755073547, 0.6498358249664307, 0.6301785707473755, 0.643501877784729, 0.6158881187438965, 0.5953565239906311, 0.5621377229690552, 0.598111629486084, 0.5834429264068604, 0.5590674877166748, 0.5238912105560303, 0.5415987968444824, 0.5318548083305359, 0.5032190084457397, 0.4986940026283264, 0.5160139799118042, 0.5120211839675903, 0.5102370977401733, 0.47829684615135193, 0.4881454408168793, 0.4880158603191376, 0.47353115677833557, 0.46538615226745605, 0.45460057258605957, 0.5168402791023254, 0.4682047665119171, 0.4590489864349365, 0.4439816474914551, 0.4472617208957672, 0.4646584987640381, 0.4435363709926605, 0.4618557095527649, 0.43473103642463684, 0.4249666631221771, 0.42915889620780945, 0.41750040650367737, 0.4152296185493469, 0.4339531660079956, 0.4134286642074585, 0.41640302538871765, 0.40751180052757263, 0.40231481194496155, 0.4467777609825134, 0.4048246145248413, 0.4104941785335541, 0.4047388434410095, 0.41718789935112, 0.40488073229789734, 0.3947732746601105, 0.4082494378089905], "val_accuracy": [0.5096666812896729, 0.6589999794960022, 0.6850000023841858, 0.7183333039283752, 0.7206666469573975, 0.7390000224113464, 0.7463333606719971, 0.753000020980835, 0.7390000224113464, 0.7573333382606506, 0.7609999775886536, 0.7806666493415833, 0.7706666588783264, 0.7666666507720947, 0.7833333611488342, 0.7983333468437195, 0.7826666831970215, 0.7900000214576721, 0.7993333339691162, 0.809333324432373, 0.7929999828338623, 0.7979999780654907, 0.7983333468437195, 0.8163333535194397, 0.8166666626930237, 0.8080000281333923, 0.8143333196640015, 0.8183333277702332, 0.8209999799728394, 0.8003333210945129, 0.8149999976158142, 0.8216666579246521, 0.8293333053588867, 0.8259999752044678, 0.8193333148956299, 0.8316666483879089, 0.8253333568572998, 0.8366666436195374, 0.8370000123977661, 0.8360000252723694, 0.8389999866485596, 0.8399999737739563, 0.8356666564941406, 0.8373333215713501, 0.8420000076293945, 0.8479999899864197, 0.8486666679382324, 0.8236666917800903, 0.8496666550636292, 0.8510000109672546, 0.8443333506584167, 0.8389999866485596, 0.843999981880188, 0.8483333587646484, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 7, 6, 2, 3, 5], [2, 2, 1, 0, 2], [36, 52, 39], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 8, 0, 6, 3, 8, 2], [0, 0, 0, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 2, 6], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [96.83106231689453, 10957.7314453125, 184869.109375, 1292331.875, 5693254.0, 18719992.0], "accuracy": [0.09245806187391281, 0.10421344637870789, 0.1002509593963623, 0.1002509593963623, 0.10091137140989304, 0.10038304328918457], "val_loss": [812.4754028320312, 39902.9296875, 424056.84375, 2304975.25, 8622722.0, 25417270.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [3, 2, 4, 2, 5, 5, 7, 2, 2, 4, 0, 1, 1, 6, 6, 3, 6, 4, 3, 5, 4, 4, 4, 8, 5, 7], [0, 2, 1, 0, 0, 0, 3, 1, 0, 3, 2, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 3], [44, 39, 39, 45, 20, 69, 2], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [29, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 6, 2, 1, 5, 7], [0, 6, 4, 6, 0, 0], [0, 22, 5], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 9, 5, 4, 0, 13, 7, 6, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(grad, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [7, 2, 0, 2, 5, 2, 1], [0, 6, 4, 6, 0], [41, 22], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad))), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107049465179443, 2.3107993602752686, 2.3100404739379883, 2.310101270675659, 2.3091917037963867, 2.3110992908477783], "accuracy": [0.08981640636920929, 0.08770307898521423, 0.08757099509239197, 0.08994849026203156, 0.09681680053472519, 0.09153348207473755], "val_loss": [2.308411121368408, 2.308411121368408, 2.308411121368408, 2.308411121368408, 2.308411121368408, 2.308411121368408], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [4, 2, 8, 2, 3, 8, 1, 2, 6, 3, 5, 5, 0, 3, 9, 5, 5, 9, 3, 7, 1, 7, 6, 9, 1], [2, 2, 1, 0, 0, 0, 3, 1, 0, 1, 2, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 3], [0, 39, 39, 45, 20, 69, 2, 59], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 0, 6, 4, 1, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 26, 18, 8, 5, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.multiply(grad, tf.math.sqrt(alpha)), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.negative(tf.math.multiply(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310363292694092, 2.3093926906585693, 2.3103110790252686, 2.310561418533325, 2.310274124145508, 2.308854103088379], "accuracy": [0.09259014576673508, 0.09298639744520187, 0.08770307898521423, 0.09272222965955734, 0.09509972482919693, 0.09100515395402908], "val_loss": [2.3091957569122314, 2.3091957569122314, 2.3091957569122314, 2.3091957569122314, 2.3091957569122314, 2.3091957569122314], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}]