[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8162857294082642, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2100670337677, 1.5925754308700562, 1.1302032470703125, 0.9605745077133179, 0.8750189542770386, 0.8225510716438293, 0.782787024974823, 0.7599965333938599, 0.7070360779762268, 0.7021487951278687, 0.6704548001289368, 0.6429299116134644, 0.654991090297699, 0.6233465075492859, 0.5946152210235596, 0.58658367395401, 0.5942541360855103, 0.5744003653526306, 0.5594438910484314, 0.5581914186477661, 0.5435799956321716, 0.5288456082344055, 0.517707884311676, 0.519493579864502, 0.5141286253929138, 0.5043328404426575, 0.49492010474205017, 0.49780169129371643, 0.4721125662326813, 0.46252870559692383, 0.4809381663799286, 0.4786449074745178, 0.4587833285331726, 0.45191434025764465, 0.4632752239704132, 0.4519471526145935, 0.43728968501091003, 0.4396896958351135, 0.4418696463108063, 0.43810346722602844, 0.4248526096343994, 0.4366913139820099, 0.425330251455307, 0.4103504717350006, 0.4074479639530182, 0.406707227230072, 0.41376957297325134, 0.4017238914966583, 0.3974165916442871, 0.3914412558078766, 0.3802674114704132, 0.38998010754585266, 0.38922688364982605, 0.3739209473133087, 0.37031492590904236, 0.37906157970428467, 0.36861452460289, 0.3656317889690399], "accuracy": [0.2557125985622406, 0.5139347314834595, 0.6050719618797302, 0.6524897813796997, 0.6844538450241089, 0.6966054439544678, 0.7136441469192505, 0.7218332886695862, 0.7408532500267029, 0.7386078238487244, 0.7497028112411499, 0.7611940503120422, 0.7556465268135071, 0.7713643908500671, 0.7754589915275574, 0.7773081660270691, 0.7754589915275574, 0.7884030938148499, 0.7955356240272522, 0.7954035401344299, 0.7971205711364746, 0.8078193068504333, 0.8074230551719666, 0.8108572363853455, 0.8101968169212341, 0.8137630224227905, 0.8191784620285034, 0.8145555257797241, 0.82683926820755, 0.8302733898162842, 0.8236692547798157, 0.8240655064582825, 0.8310658931732178, 0.835160493850708, 0.8325188159942627, 0.8378021121025085, 0.8405758738517761, 0.8368775844573975, 0.8380662798881531, 0.8429533839225769, 0.8436138033866882, 0.839519202709198, 0.8422929644584656, 0.8510104417800903, 0.8507462739944458, 0.8508783578872681, 0.8437458872795105, 0.8521991968154907, 0.8527275323867798, 0.8549728989601135, 0.8595958352088928, 0.8578787446022034, 0.8557654023170471, 0.8650112152099609, 0.8593316674232483, 0.8602562546730042, 0.8651432991027832, 0.8627657890319824], "val_loss": [1.9173387289047241, 1.0970420837402344, 0.8629725575447083, 0.7893779277801514, 0.7597665786743164, 0.7060707211494446, 0.7044565677642822, 0.6514233350753784, 0.6304675340652466, 0.640621542930603, 0.5943775773048401, 0.5989164113998413, 0.6142662167549133, 0.6022617220878601, 0.558175265789032, 0.5581278204917908, 0.554286777973175, 0.5555611848831177, 0.5452975034713745, 0.5298348665237427, 0.51395183801651, 0.5266345143318176, 0.530680239200592, 0.508821427822113, 0.5193476676940918, 0.5257077813148499, 0.4912932813167572, 0.4939103126525879, 0.49016356468200684, 0.5153419375419617, 0.489423006772995, 0.47959914803504944, 0.46931591629981995, 0.4710014760494232, 0.48481062054634094, 0.4699859917163849, 0.4676232933998108, 0.4624134600162506, 0.4715409278869629, 0.4592118263244629, 0.4741133749485016, 0.46292248368263245, 0.45526838302612305, 0.4460981488227844, 0.45683377981185913, 0.4542708396911621, 0.4586571753025055, 0.4642521142959595, 0.44168537855148315, 0.43794018030166626, 0.441010981798172, 0.44696512818336487, 0.43042224645614624, 0.43529707193374634, 0.43861255049705505, 0.4417906105518341, 0.4409276843070984, 0.4247152805328369], "val_accuracy": [0.6119999885559082, 0.6420000195503235, 0.6990000009536743, 0.7246666550636292, 0.7203333377838135, 0.7436666488647461, 0.7423333525657654, 0.7543333172798157, 0.7723333239555359, 0.7493333220481873, 0.778333306312561, 0.7763333320617676, 0.762666642665863, 0.7716666460037231, 0.7846666574478149, 0.7870000004768372, 0.7993333339691162, 0.7873333096504211, 0.796999990940094, 0.8069999814033508, 0.809333324432373, 0.8023333549499512, 0.8016666769981384, 0.8063333630561829, 0.8086666464805603, 0.8103333115577698, 0.8246666789054871, 0.8119999766349792, 0.8243333101272583, 0.8013333082199097, 0.8183333277702332, 0.8263333439826965, 0.8293333053588867, 0.8266666531562805, 0.8183333277702332, 0.8273333311080933, 0.8306666612625122, 0.8343333601951599, 0.8323333263397217, 0.8320000171661377, 0.8316666483879089, 0.8236666917800903, 0.8373333215713501, 0.8379999995231628, 0.831333339214325, 0.8339999914169312, 0.8376666903495789, 0.8263333439826965, 0.8393333554267883, 0.8426666855812073, 0.8413333296775818, 0.8386666774749756, 0.8493333458900452, 0.8453333377838135, 0.8416666388511658, 0.8373333215713501, 0.8370000123977661, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 0], [7, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10257142782211304, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 13, 8, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, tf.math.negative(grad))))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [24.44292449951172, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19719983637332916, 0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [92.51873016357422, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 5, 3, 2, 7, 1, 1, 5], [0, 1, 1, 1, 2, 0], [0, 80, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 0, 3, 0, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 8, 5, 3, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.subtract(alpha, tf.math.subtract(alpha, grad)), tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.034717782332699e+27, 2.302642822265625, 2.3026912212371826, 2.303114891052246, 2.3038766384124756, 2.303849458694458], "accuracy": [0.09774138033390045, 0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025248050689697, 2.302595615386963, 2.3026440143585205, 2.303447723388672, 2.3034424781799316, 2.3034231662750244], "val_accuracy": [0.10300000011920929, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 7], [0, 2, 1, 3, 2], [15, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 1, 2, 1], [0, 3, 1, 6, 0, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 5, 5, 5, 4], [0, 7, 4, 6, 0], [28, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 13, 7, 6, 2, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]