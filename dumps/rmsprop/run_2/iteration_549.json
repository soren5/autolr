[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8088571429252625, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2089803218841553, 1.5962976217269897, 1.1299158334732056, 0.9718969464302063, 0.8942771553993225, 0.8341183066368103, 0.7839754223823547, 0.7459765672683716, 0.7201749086380005, 0.7030344605445862, 0.6914969086647034, 0.6621290445327759, 0.676171064376831, 0.6358156204223633, 0.6173424124717712, 0.619455099105835, 0.6067677736282349, 0.5870130658149719, 0.591815710067749, 0.5964922308921814, 0.5719337463378906, 0.5620269179344177, 0.544461190700531, 0.5493651032447815, 0.5334503054618835, 0.5335133671760559, 0.5306233167648315, 0.5073185563087463, 0.522436261177063, 0.5113460421562195, 0.5117290019989014, 0.5066761374473572, 0.49025991559028625, 0.4796319007873535, 0.4737127721309662, 0.4719531536102295, 0.47652605175971985, 0.462703138589859, 0.4681375026702881, 0.46260324120521545, 0.45281949639320374, 0.4495614469051361, 0.4490234851837158, 0.4414873421192169, 0.44278308749198914, 0.4459357261657715, 0.4328959882259369, 0.43383365869522095, 0.42445746064186096, 0.42494145035743713, 0.41296443343162537, 0.41423362493515015, 0.41726982593536377, 0.4010491669178009, 0.41080012917518616, 0.4003709554672241, 0.4030910134315491, 0.39697232842445374, 0.38979437947273254], "accuracy": [0.2723550498485565, 0.502971887588501, 0.6022982597351074, 0.6510368585586548, 0.6778497099876404, 0.693831741809845, 0.7113987803459167, 0.7220974564552307, 0.7269845604896545, 0.7390040755271912, 0.7423061728477478, 0.7514199018478394, 0.7445515990257263, 0.7578919529914856, 0.7670056819915771, 0.7681944370269775, 0.7763835787773132, 0.785101056098938, 0.7777044177055359, 0.7781006693840027, 0.7848368883132935, 0.7886672616004944, 0.7918372750282288, 0.796328067779541, 0.8010830879211426, 0.8026680946350098, 0.8018755912780762, 0.8133667707443237, 0.805177628993988, 0.8127063512802124, 0.8099326491355896, 0.8120459914207458, 0.8210275769233704, 0.8208954930305481, 0.8321225643157959, 0.8298771381378174, 0.8228767514228821, 0.8297450542449951, 0.8267071843147278, 0.83119797706604, 0.8304054737091064, 0.8359529972076416, 0.8370096683502197, 0.8381983637809753, 0.8407079577445984, 0.8391229510307312, 0.8404437899589539, 0.8449346423149109, 0.8479725122451782, 0.8444063067436218, 0.8482366800308228, 0.8518029451370239, 0.8500858545303345, 0.8518029451370239, 0.8516708612442017, 0.8553691506385803, 0.8508783578872681, 0.8574824929237366, 0.8595958352088928], "val_loss": [1.9176182746887207, 1.0913139581680298, 0.9088824987411499, 0.8437792062759399, 0.7557685375213623, 0.7001798748970032, 0.6676216125488281, 0.692995548248291, 0.655441164970398, 0.6841127872467041, 0.6129469275474548, 0.6163219213485718, 0.6000915765762329, 0.6029248833656311, 0.5831981897354126, 0.588025689125061, 0.5498242378234863, 0.5301773548126221, 0.6079621315002441, 0.5431492924690247, 0.524884045124054, 0.5154922604560852, 0.508247971534729, 0.5014483332633972, 0.5073137879371643, 0.5050159692764282, 0.49355897307395935, 0.5153734683990479, 0.4840778708457947, 0.5148866772651672, 0.47721296548843384, 0.47510185837745667, 0.47320792078971863, 0.46269819140434265, 0.45749691128730774, 0.4770388901233673, 0.45951128005981445, 0.46386560797691345, 0.4519602060317993, 0.46024495363235474, 0.4471551477909088, 0.45459359884262085, 0.43987345695495605, 0.4494789242744446, 0.47983112931251526, 0.4395630657672882, 0.4352390170097351, 0.4279581308364868, 0.42665958404541016, 0.4306045472621918, 0.4315858483314514, 0.4274412989616394, 0.42579302191734314, 0.41610628366470337, 0.41714274883270264, 0.4196411967277527, 0.42003750801086426, 0.4359106421470642, 0.41625967621803284], "val_accuracy": [0.5236666798591614, 0.6600000262260437, 0.6783333420753479, 0.6883333325386047, 0.7173333168029785, 0.7463333606719971, 0.7583333253860474, 0.7289999723434448, 0.7400000095367432, 0.7400000095367432, 0.7699999809265137, 0.7613333463668823, 0.7786666750907898, 0.7776666879653931, 0.7799999713897705, 0.7766666412353516, 0.8026666641235352, 0.8109999895095825, 0.765999972820282, 0.8043333292007446, 0.8136666417121887, 0.8199999928474426, 0.8186666369438171, 0.8263333439826965, 0.8176666498184204, 0.8169999718666077, 0.8273333311080933, 0.8046666383743286, 0.8270000219345093, 0.8073333501815796, 0.8309999704360962, 0.8316666483879089, 0.8309999704360962, 0.8393333554267883, 0.8346666693687439, 0.8286666870117188, 0.8399999737739563, 0.8326666951179504, 0.8393333554267883, 0.831333339214325, 0.8443333506584167, 0.8410000205039978, 0.8456666469573975, 0.8416666388511658, 0.8216666579246521, 0.846666693687439, 0.843666672706604, 0.8483333587646484, 0.8523333072662354, 0.8516666889190674, 0.8460000157356262, 0.8479999899864197, 0.8523333072662354, 0.8619999885559082, 0.8569999933242798, 0.8576666712760925, 0.8560000061988831, 0.843999981880188, 0.8533333539962769]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 7, 4, 0, 6, 6, 4], [0, 0, 1, 0, 2, 3, 1, 2, 1, 3], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 6, 3, 8, 2, 4, 7, 5, 1, 6, 9], [2, 0, 3, 1, 0, 5, 2, 5], [16, 1, 34], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 3, 21, 13, 8, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(grad, grad), alpha), grad)), alpha))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(grad, alpha), tf.math.add(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, beta))))), tf.math.divide_no_nan(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 0, 1, 0, 2], [0, 39, 21], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 0, 3, 1, 0, 2], [16, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 2, 2, 1], [0, 6, 7, 7, 7], [77, 22], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 6, 3, 3, 2, 13, 7, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088557720184326, 2.3102667331695557, 2.3091013431549072, 2.3100969791412354, 2.3099682331085205, 2.3091840744018555], "accuracy": [0.09008057415485382, 0.09708096832036972, 0.09655263274908066, 0.09311848133802414, 0.09615638852119446, 0.09774138033390045], "val_loss": [2.3086929321289062, 2.3086929321289062, 2.3086929321289062, 2.3086929321289062, 2.3086929321289062, 2.3086929321289062], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 0, 3], [0, 39, 39], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [8, 2, 0, 6, 0, 6, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [50, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310858964920044, 2.3104248046875, 2.309429407119751, 2.3111624717712402, 2.3110172748565674, 2.3099329471588135], "accuracy": [0.08875974267721176, 0.09206181764602661, 0.09285431355237961, 0.0886276587843895, 0.08981640636920929, 0.0878351628780365], "val_loss": [2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 4, 2, 3, 5, 2, 5, 4, 3, 2, 2, 1, 8, 3, 1], [0, 2, 1, 0, 2, 0, 1, 0, 3, 2, 2, 3, 3], [22, 63, 39, 92], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 2, 6, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 1, 2, 1], [7, 7, 1, 6, 0, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 29, 16, 13, 4, 1, 0, 1, 0, 13, 7, 6, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(grad), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, grad), grad)))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.subtract(alpha, grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309338092803955, 2.3092353343963623, 2.311073064804077, 2.3091201782226562, 2.3093841075897217, 2.3106608390808105], "accuracy": [0.09430722147226334, 0.0952318087220192, 0.09602430462837219, 0.09470347315073013, 0.08889182657003403, 0.09153348207473755], "val_loss": [2.3089404106140137, 2.3089404106140137, 2.3089404106140137, 2.3089404106140137, 2.3089404106140137, 2.3089404106140137], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]