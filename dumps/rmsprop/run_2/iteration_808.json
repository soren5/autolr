[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8431428670883179, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210111379623413, 1.617345929145813, 1.1651649475097656, 0.9846773743629456, 0.8916844725608826, 0.8387718200683594, 0.7890422344207764, 0.7553821802139282, 0.7324527502059937, 0.6997058987617493, 0.6830214858055115, 0.672106921672821, 0.6613789200782776, 0.6319758296012878, 0.6224143505096436, 0.6053423881530762, 0.6037524938583374, 0.6004272103309631, 0.58428555727005, 0.5772126317024231, 0.5718445181846619, 0.5497585535049438, 0.5569817423820496, 0.5477675795555115, 0.5302879214286804, 0.5335619449615479, 0.519061267375946, 0.5340245962142944, 0.5019184350967407, 0.5005971193313599, 0.49962836503982544, 0.4952477812767029, 0.49175286293029785, 0.481107234954834, 0.473918616771698, 0.4647473692893982, 0.4671066403388977, 0.4583093523979187, 0.4488353133201599, 0.4633908271789551, 0.43949806690216064], "accuracy": [0.2673358917236328, 0.5000660419464111, 0.5943732857704163, 0.6498481035232544, 0.6770572066307068, 0.6946242451667786, 0.7094175219535828, 0.7260599732398987, 0.7331924438476562, 0.7461365461349487, 0.7495707273483276, 0.7460044622421265, 0.7537974119186401, 0.7680623531341553, 0.7683265209197998, 0.7754589915275574, 0.7744023203849792, 0.7779685854911804, 0.7823272943496704, 0.7897239327430725, 0.7890635132789612, 0.7932901978492737, 0.7928939461708069, 0.7954035401344299, 0.8080834746360779, 0.8057059645652771, 0.8141592741012573, 0.8000264167785645, 0.8149517774581909, 0.8189142942428589, 0.8177255392074585, 0.8249900937080383, 0.8133667707443237, 0.8240655064582825, 0.82683926820755, 0.8305375576019287, 0.828292191028595, 0.8323867321014404, 0.8356888294219971, 0.8317263126373291, 0.8366134166717529], "val_loss": [1.9207464456558228, 1.1333608627319336, 0.9150161743164062, 0.8089602589607239, 0.7371422648429871, 0.6979592442512512, 0.6922643184661865, 0.736559271812439, 0.6203592419624329, 0.6384698748588562, 0.6099570393562317, 0.6007534265518188, 0.5837485194206238, 0.5906485915184021, 0.587746262550354, 0.5594186782836914, 0.5677121877670288, 0.5428826808929443, 0.5263135433197021, 0.5252814292907715, 0.49789270758628845, 0.5053643584251404, 0.4895572066307068, 0.49652257561683655, 0.4805271327495575, 0.49566635489463806, 0.4994077980518341, 0.47174763679504395, 0.4750995337963104, 0.4655027389526367, 0.4715660810470581, 0.4570237994194031, 0.44779232144355774, 0.4469582140445709, 0.43915918469429016, 0.4363033175468445, 0.44038528203964233, 0.4339924454689026, 0.43431350588798523, 0.42818018794059753, 0.434437096118927], "val_accuracy": [0.5683333277702332, 0.625333309173584, 0.6736666560173035, 0.7013333439826965, 0.7183333039283752, 0.7393333315849304, 0.7403333187103271, 0.6949999928474426, 0.7673333287239075, 0.7523333430290222, 0.7666666507720947, 0.7803333401679993, 0.7829999923706055, 0.7713333368301392, 0.7910000085830688, 0.7833333611488342, 0.7836666703224182, 0.7933333516120911, 0.8076666593551636, 0.8006666898727417, 0.8103333115577698, 0.8116666674613953, 0.8153333067893982, 0.8073333501815796, 0.8226666450500488, 0.8169999718666077, 0.809333324432373, 0.8166666626930237, 0.8176666498184204, 0.8336666822433472, 0.812333345413208, 0.828000009059906, 0.8299999833106995, 0.8346666693687439, 0.8370000123977661, 0.8373333215713501, 0.8360000252723694, 0.8373333215713501, 0.8343333601951599, 0.8353333473205566, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 7, 4, 3, 1], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 6, 6, 2, 8, 2], [2, 5, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 0], [1, 2, 0, 2, 5], [0, 6, 1], [0, 22], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 6, 2, 7, 2, 2, 7, 6, 7, 1, 1, 8, 3], [1, 4, 5, 4, 0, 5, 6, 4, 0, 3, 5, 6, 1], [0, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 0, 1, 0, 1, 1, 27, 14, 13, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(grad, grad), grad)), tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), grad), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(sigma), tf.math.multiply(grad, grad)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 7], [0, 2, 1, 0, 2], [50, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 3, 2, 1, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [5, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 52, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 5, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [98, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 10, 5, 5, 2, 4, 3, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310141086578369, 2.3106298446655273, 2.310873031616211, 2.310070514678955, 2.309972047805786, 2.3098645210266113], "accuracy": [0.08928807079792023, 0.09325055778026581, 0.09008057415485382, 0.09311848133802414, 0.09417514503002167, 0.09457138925790787], "val_loss": [2.3086907863616943, 2.3086907863616943, 2.3086907863616943, 2.3086907863616943, 2.3086907863616943, 2.3086907863616943], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 5, 5], [0, 0, 3, 0, 2], [0, 39, 96], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 0, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 2, 2, 5], [1, 6, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3109359741210938, 2.3090872764587402, 2.310465097427368, 2.310964822769165, 2.3088886737823486, 2.3093295097351074], "accuracy": [0.08796724677085876, 0.09351472556591034, 0.09087307006120682, 0.0882314071059227, 0.09338264167308807, 0.09192973375320435], "val_loss": [2.308110237121582, 2.308110237121582, 2.308110237121582, 2.308110237121582, 2.308110237121582, 2.308110237121582], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]