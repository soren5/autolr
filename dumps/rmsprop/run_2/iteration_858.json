[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213611602783203, 1.6077134609222412, 1.1421970129013062, 0.9733863472938538, 0.8705370426177979, 0.8317976593971252, 0.7883358001708984, 0.7409449219703674, 0.715819239616394, 0.7017943263053894, 0.6724464893341064, 0.6635375022888184, 0.6410167217254639, 0.6278682351112366, 0.5967361330986023, 0.599476158618927, 0.579626739025116, 0.598626434803009, 0.5753975510597229, 0.563444972038269, 0.5553103089332581, 0.5465713143348694, 0.5333040952682495, 0.522160530090332, 0.5431812405586243, 0.5230914950370789, 0.5000763535499573, 0.5105436444282532, 0.49590277671813965, 0.4948018491268158, 0.4840027391910553, 0.46929052472114563, 0.46991175413131714, 0.46382033824920654, 0.4586136043071747, 0.4588864743709564, 0.467925488948822, 0.4596889019012451, 0.4428236484527588, 0.44158995151519775, 0.43553850054740906, 0.44622376561164856, 0.42908716201782227, 0.4315017759799957, 0.43436896800994873, 0.4172937870025635, 0.4158537983894348, 0.4040761888027191, 0.41382238268852234, 0.4065578281879425, 0.4060673117637634, 0.39743340015411377], "accuracy": [0.2588825821876526, 0.5005943775177002, 0.5972790718078613, 0.6524897813796997, 0.6787742972373962, 0.69673752784729, 0.7111346125602722, 0.7215691208839417, 0.7358341217041016, 0.7333245277404785, 0.7446836829185486, 0.7494386434555054, 0.7592127919197083, 0.7613261342048645, 0.7843085527420044, 0.7714964747428894, 0.7802139520645142, 0.7732135653495789, 0.7807422876358032, 0.7861577272415161, 0.7890635132789612, 0.7932901978492737, 0.7998943328857422, 0.8082155585289001, 0.7942147850990295, 0.8050455451011658, 0.8137630224227905, 0.811649739742279, 0.8175934553146362, 0.8140271902084351, 0.819970965385437, 0.8267071843147278, 0.8220842480659485, 0.8319904804229736, 0.828820526599884, 0.8329150676727295, 0.8276317715644836, 0.8300092220306396, 0.8372738361358643, 0.8360850811004639, 0.841500461101532, 0.8350284099578857, 0.845859169960022, 0.8404437899589539, 0.8385946154594421, 0.8495575189590454, 0.8536521196365356, 0.8508783578872681, 0.8495575189590454, 0.8506141901016235, 0.8504821062088013, 0.8552370667457581], "val_loss": [1.9265977144241333, 1.2138826847076416, 0.8982111811637878, 0.7857193946838379, 0.7855380773544312, 0.6774401068687439, 0.6957893967628479, 0.6632668375968933, 0.6126410961151123, 0.604880154132843, 0.6078776717185974, 0.5574463605880737, 0.5578545928001404, 0.545848548412323, 0.5263691544532776, 0.5229164958000183, 0.5224167704582214, 0.5162201523780823, 0.5240466594696045, 0.49435847997665405, 0.5002564191818237, 0.4750388264656067, 0.47899308800697327, 0.4765574634075165, 0.4910687804222107, 0.4686378240585327, 0.46299800276756287, 0.46023961901664734, 0.4452277719974518, 0.47438591718673706, 0.43824970722198486, 0.44160228967666626, 0.42512333393096924, 0.42759180068969727, 0.4491449296474457, 0.4539623260498047, 0.43475520610809326, 0.4166116416454315, 0.4192962348461151, 0.4284898638725281, 0.41505834460258484, 0.4075063169002533, 0.40287721157073975, 0.4281418025493622, 0.39964038133621216, 0.3913789987564087, 0.39047786593437195, 0.39490512013435364, 0.411898672580719, 0.39690884947776794, 0.39285218715667725, 0.38959211111068726], "val_accuracy": [0.6133333444595337, 0.5433333516120911, 0.6783333420753479, 0.7113333344459534, 0.6893333196640015, 0.7576666474342346, 0.7323333621025085, 0.7333333492279053, 0.7680000066757202, 0.7726666927337646, 0.7680000066757202, 0.8019999861717224, 0.79666668176651, 0.7960000038146973, 0.8029999732971191, 0.809333324432373, 0.8073333501815796, 0.8090000152587891, 0.7996666431427002, 0.8199999928474426, 0.8163333535194397, 0.8323333263397217, 0.8336666822433472, 0.8240000009536743, 0.8273333311080933, 0.8363333344459534, 0.82833331823349, 0.8320000171661377, 0.8370000123977661, 0.8163333535194397, 0.8433333039283752, 0.8446666598320007, 0.8533333539962769, 0.8473333120346069, 0.8293333053588867, 0.8273333311080933, 0.8483333587646484, 0.8556666374206543, 0.847000002861023, 0.840666651725769, 0.8510000109672546, 0.8543333411216736, 0.8560000061988831, 0.8433333039283752, 0.8646666407585144, 0.8643333315849304, 0.8679999709129333, 0.8603333234786987, 0.8510000109672546, 0.8616666793823242, 0.859666645526886, 0.8666666746139526]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 7], [0, 2, 1, 0, 2, 0], [0, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 2, 2], [3, 0, 3, 1, 0], [24, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 8, 0, 2, 5, 4, 1], [0, 6, 2, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 2, 1, 1, 0, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.subtract(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8233373165130615, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20155857503414154, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.981327056884766, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03133333474397659, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 5, 2, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 1, 0, 5, 2, 1], [0, 6, 6, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309725761413574, 2.310755729675293, 2.309586763381958, 2.3091816902160645, 2.3092944622039795, 2.3101353645324707], "accuracy": [0.08598599582910538, 0.09430722147226334, 0.09351472556591034, 0.09932637959718704, 0.08902391046285629, 0.09021265059709549], "val_loss": [2.30924391746521, 2.30924391746521, 2.30924391746521, 2.30924391746521, 2.30924391746521, 2.30924391746521], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 1, 0], [1, 2, 1, 0, 2, 2], [98, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [7, 6, 1, 6, 0], [16, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 14, 8, 6, 1, 1, 0, 1, 0, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(alpha))), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098418712615967, 2.309795618057251, 2.310070753097534, 2.310518741607666, 2.309511661529541, 2.309431314468384], "accuracy": [0.09259014576673508, 0.0870426595211029, 0.09457138925790787, 0.09140139818191528, 0.09642054885625839, 0.08836349099874496], "val_loss": [2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [2, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 4, 5, 2, 1], [0, 2, 1, 6, 3], [51, 22], [1], [0], [2], [0]], "fitness": -0.06428571790456772, "mapping_values": [1, 7, 4, 3, 0, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3451093254144.0, 397251625091072.0, 4559338639196160.0, 2.7781942600374262e+20, 9.118818582816358e+16, 2.4881982496309248e+17, 5.7143354462306304e+17, 1.1717216416133284e+18, 2.1496068049532355e+18, 3.63585488024712e+18], "accuracy": [0.09893012791872025, 0.09734513610601425, 0.09959053993225098, 0.10540219396352768, 0.10091137140989304, 0.09893012791872025, 0.09866596013307571, 0.10170386731624603, 0.10394927859306335, 0.09774138033390045], "val_loss": [34675659636736.0, 1245768685977600.0, 9668860441526272.0, 3.814773501414225e+21, 7.736469213381667e+21, 3.056603498712924e+17, 6.537397209032294e+17, 1.2601567362248868e+18, 2.2443181868140462e+18, 3.7553017003201004e+18], "val_accuracy": [0.06499999761581421, 0.06466666609048843, 0.06499999761581421, 0.06599999964237213, 0.06666667014360428, 0.06566666811704636, 0.06566666811704636, 0.06499999761581421, 0.06499999761581421, 0.06433333456516266]}}]