[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2112679481506348, 1.6035971641540527, 1.16075599193573, 1.0047824382781982, 0.867973804473877, 0.8501541018486023, 0.7795642018318176, 0.7622151970863342, 0.7336664795875549, 0.7029984593391418, 0.6716443300247192, 0.6751174330711365, 0.6805304884910583, 0.6251330375671387, 0.6260008215904236, 0.613737165927887, 0.6023135781288147, 0.5715502500534058, 0.5850565433502197, 0.5624104738235474, 0.556125819683075, 0.5418663620948792, 0.5392692685127258, 0.5295358896255493, 0.5101500153541565, 0.5238826274871826, 0.5093075037002563, 0.49850720167160034, 0.4900301992893219, 0.48335546255111694, 0.4755001664161682, 0.48083382844924927, 0.4758641719818115, 0.4681098461151123, 0.46321168541908264, 0.45356932282447815, 0.4578830301761627, 0.4528730511665344, 0.44731009006500244, 0.43874892592430115, 0.4360596537590027, 0.4324137568473816, 0.43132883310317993, 0.42418304085731506, 0.42328348755836487, 0.4155815839767456, 0.4177292287349701, 0.40762078762054443, 0.4016483724117279, 0.4020565152168274, 0.4008769094944, 0.3940882682800293, 0.38978031277656555, 0.38133522868156433, 0.37724921107292175, 0.3814876079559326, 0.3805188238620758, 0.38196176290512085, 0.370789110660553, 0.37047386169433594, 0.3738025724887848, 0.36575061082839966, 0.3570575714111328, 0.3663383722305298, 0.3605698049068451, 0.35025376081466675, 0.34383895993232727, 0.34119221568107605, 0.34324195981025696, 0.342680960893631, 0.33031928539276123], "accuracy": [0.2596750855445862, 0.5050851702690125, 0.5888257622718811, 0.6312243938446045, 0.6839255094528198, 0.685510516166687, 0.7092854380607605, 0.7199841737747192, 0.7276449799537659, 0.7386078238487244, 0.7489103078842163, 0.7460044622421265, 0.7433628439903259, 0.7707040309906006, 0.7644960880279541, 0.7668735980987549, 0.7763835787773132, 0.7858935594558716, 0.7786290049552917, 0.7893276810646057, 0.7918372750282288, 0.7977809906005859, 0.800290584564209, 0.8025360107421875, 0.8128384351730347, 0.8059701323509216, 0.8128384351730347, 0.8170651197433472, 0.8177255392074585, 0.8195747137069702, 0.8248580098152161, 0.8220842480659485, 0.8244617581367493, 0.8265751004219055, 0.8284242749214172, 0.8281601071357727, 0.8313300609588623, 0.8358209133148193, 0.8383304476737976, 0.8388587832450867, 0.8428213000297546, 0.8388587832450867, 0.8409721255302429, 0.8391229510307312, 0.8437458872795105, 0.848368763923645, 0.8475762605667114, 0.8481045961380005, 0.852859616279602, 0.8507462739944458, 0.8474441766738892, 0.8576145768165588, 0.856689989566803, 0.8599920868873596, 0.8626337051391602, 0.8564258217811584, 0.8609166741371155, 0.859199583530426, 0.8615770936012268, 0.8632941246032715, 0.8581429123878479, 0.8619733452796936, 0.8677849769592285, 0.868049144744873, 0.8632941246032715, 0.8721436858177185, 0.8704266548156738, 0.8739928603172302, 0.8672566413879395, 0.870030403137207, 0.8791441321372986], "val_loss": [1.9249939918518066, 1.1046134233474731, 0.9186424016952515, 0.8207263946533203, 0.764162003993988, 0.7261630892753601, 0.7287504076957703, 0.6704675555229187, 0.6742934584617615, 0.6457644104957581, 0.6007127165794373, 0.6245280504226685, 0.589535653591156, 0.6052825450897217, 0.568648099899292, 0.5732274651527405, 0.5504441857337952, 0.5564855933189392, 0.5420436859130859, 0.5293430089950562, 0.545189380645752, 0.5284475684165955, 0.5135583281517029, 0.5014973878860474, 0.506809413433075, 0.5066672563552856, 0.524639368057251, 0.5013962984085083, 0.49574950337409973, 0.4884282946586609, 0.4806939661502838, 0.48442915081977844, 0.47892725467681885, 0.48425614833831787, 0.478777676820755, 0.4655168056488037, 0.4630763828754425, 0.4806372821331024, 0.4540231227874756, 0.45960351824760437, 0.4726760983467102, 0.4502442479133606, 0.4604909121990204, 0.4492253363132477, 0.4574584662914276, 0.4371117055416107, 0.4437178075313568, 0.43742895126342773, 0.43467503786087036, 0.45996418595314026, 0.44696933031082153, 0.43379589915275574, 0.42724740505218506, 0.42835742235183716, 0.42286524176597595, 0.42986807227134705, 0.43561670184135437, 0.4222610294818878, 0.4189349412918091, 0.42813533544540405, 0.4169202744960785, 0.4203110337257385, 0.4187767803668976, 0.42130911350250244, 0.4379488229751587, 0.4087355434894562, 0.41699036955833435, 0.41053563356399536, 0.4235076606273651, 0.40998515486717224, 0.4422871172428131], "val_accuracy": [0.5233333110809326, 0.653333306312561, 0.6963333487510681, 0.7080000042915344, 0.7133333086967468, 0.734666645526886, 0.706333339214325, 0.7350000143051147, 0.7490000128746033, 0.7570000290870667, 0.7753333449363708, 0.7599999904632568, 0.7716666460037231, 0.7490000128746033, 0.7870000004768372, 0.7833333611488342, 0.79666668176651, 0.79666668176651, 0.7870000004768372, 0.8059999942779541, 0.7910000085830688, 0.7979999780654907, 0.8180000185966492, 0.8153333067893982, 0.8073333501815796, 0.8186666369438171, 0.7983333468437195, 0.8203333616256714, 0.8176666498184204, 0.8220000267028809, 0.8253333568572998, 0.8259999752044678, 0.8273333311080933, 0.8293333053588867, 0.8259999752044678, 0.828000009059906, 0.8336666822433472, 0.8209999799728394, 0.8353333473205566, 0.8320000171661377, 0.831333339214325, 0.8366666436195374, 0.8309999704360962, 0.840666651725769, 0.8333333134651184, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8386666774749756, 0.8303333520889282, 0.8379999995231628, 0.846666693687439, 0.8486666679382324, 0.8463333249092102, 0.8510000109672546, 0.8463333249092102, 0.8426666855812073, 0.8503333330154419, 0.8519999980926514, 0.8493333458900452, 0.8526666760444641, 0.8496666550636292, 0.8560000061988831, 0.8539999723434448, 0.8450000286102295, 0.8586666584014893, 0.8523333072662354, 0.8560000061988831, 0.8483333587646484, 0.8529999852180481, 0.843999981880188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 3, 1, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 9, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 7, 5, 2, 1, 0, 0], [5, 6, 1, 6, 0], [0, 68], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 2, 14, 9, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, tf.math.negative(grad))))), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [12.832747459411621, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18557654321193695, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2803.2470703125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10566666722297668, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 2, 8, 2], [2, 0, 0, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 2, 5, 2, 1, 0], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 5, 3, 2, 1, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), alpha)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303696632385254, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [8, 8, 6, 2, 5], [0, 4, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 13, 8, 5, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 1, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 7, 5, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304030418395996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}]