[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210078239440918, 1.605278491973877, 1.1077172756195068, 0.9988587498664856, 0.8679919242858887, 0.8052723407745361, 0.7881120443344116, 0.7195668816566467, 0.7144032120704651, 0.6858401298522949, 0.6810752153396606, 0.6506977677345276, 0.6346585154533386, 0.6277714371681213, 0.6319036483764648, 0.595486044883728, 0.5686724185943604, 0.5843144059181213, 0.5609344244003296, 0.5492001175880432, 0.5506209135055542, 0.5332873463630676, 0.5138863325119019, 0.5256868600845337, 0.5236494541168213, 0.4936980903148651, 0.5149989128112793, 0.5015150308609009, 0.49172738194465637, 0.4873424768447876, 0.4787501096725464, 0.4708125591278076, 0.475437194108963, 0.4609118402004242, 0.4580012857913971, 0.45636045932769775, 0.4465566873550415, 0.44657671451568604, 0.4336608946323395, 0.4309436082839966, 0.4303043484687805, 0.421954870223999, 0.42689499258995056, 0.4130505919456482, 0.4098292887210846, 0.40962544083595276, 0.410311222076416, 0.40093889832496643, 0.39397329092025757, 0.3957889974117279], "accuracy": [0.2685246467590332, 0.5114251971244812, 0.609959065914154, 0.6472064256668091, 0.6903975605964661, 0.7059833407402039, 0.7096816897392273, 0.7298903465270996, 0.7362303733825684, 0.7467969655990601, 0.7437590956687927, 0.7557786107063293, 0.7667415142059326, 0.7601373791694641, 0.7589486241340637, 0.778232753276825, 0.7905164361000061, 0.7786290049552917, 0.7910447716712952, 0.7922335267066956, 0.7881389260292053, 0.7998943328857422, 0.8053097128868103, 0.8041210174560547, 0.8006868362426758, 0.8125742673873901, 0.8061022162437439, 0.811649739742279, 0.8165367841720581, 0.8177255392074585, 0.8208954930305481, 0.8245938420295715, 0.8228767514228821, 0.8343679904937744, 0.8317263126373291, 0.8302733898162842, 0.834632158279419, 0.834632158279419, 0.8407079577445984, 0.8413683772087097, 0.841500461101532, 0.8441421389579773, 0.8441421389579773, 0.8491612672805786, 0.8494254350662231, 0.8500858545303345, 0.8450667262077332, 0.8508783578872681, 0.8568220734596252, 0.8570862412452698], "val_loss": [1.9193408489227295, 1.0999877452850342, 0.9593681693077087, 0.7885010838508606, 0.7430247664451599, 0.7043120861053467, 0.6546424031257629, 0.649927020072937, 0.6378630995750427, 0.6046209931373596, 0.6308801174163818, 0.5929262638092041, 0.6039393544197083, 0.6143202185630798, 0.5689898729324341, 0.5470375418663025, 0.5508731007575989, 0.5207363963127136, 0.5394890904426575, 0.5121996402740479, 0.5242939591407776, 0.5101984739303589, 0.49759015440940857, 0.5159722566604614, 0.49353596568107605, 0.5287448763847351, 0.49261990189552307, 0.47537901997566223, 0.4706901013851166, 0.4873722791671753, 0.4710155725479126, 0.4748057425022125, 0.48051342368125916, 0.4542226493358612, 0.4561988115310669, 0.4642602503299713, 0.4693540930747986, 0.432473361492157, 0.43658390641212463, 0.43768343329429626, 0.42661622166633606, 0.4337608218193054, 0.42595791816711426, 0.43895527720451355, 0.4155576527118683, 0.4390186369419098, 0.4247888922691345, 0.42096975445747375, 0.41298243403434753, 0.41563695669174194], "val_accuracy": [0.6046666502952576, 0.6696666479110718, 0.6316666603088379, 0.7183333039283752, 0.7263333201408386, 0.7350000143051147, 0.762333333492279, 0.7536666393280029, 0.7586666941642761, 0.7766666412353516, 0.7670000195503235, 0.7693333625793457, 0.7676666378974915, 0.7593333125114441, 0.7893333435058594, 0.7883333563804626, 0.7896666526794434, 0.8096666932106018, 0.7986666560173035, 0.8053333163261414, 0.7979999780654907, 0.8106666803359985, 0.8149999976158142, 0.8050000071525574, 0.8220000267028809, 0.7950000166893005, 0.8180000185966492, 0.8243333101272583, 0.8246666789054871, 0.8096666932106018, 0.8233333230018616, 0.8159999847412109, 0.8190000057220459, 0.8293333053588867, 0.8259999752044678, 0.8303333520889282, 0.8209999799728394, 0.8410000205039978, 0.8383333086967468, 0.8330000042915344, 0.8476666808128357, 0.8393333554267883, 0.8416666388511658, 0.8366666436195374, 0.8483333587646484, 0.8370000123977661, 0.8420000076293945, 0.843666672706604, 0.8460000157356262, 0.846666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [9, 2, 9, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 9, 2, 7, 2, 1], [0, 6, 1, 6, 2], [54, 49], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 7, 5, 2, 4, 3, 1, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 6], [0, 2, 1, 0, 2], [0, 94, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 7, 1, 6, 0], [0, 35], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 7, 4, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 2, 8, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 6, 0, 9, 8, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309767484664917, 2.308962345123291, 2.31091570854187, 2.310048818588257, 2.310194969177246, 2.309378147125244], "accuracy": [0.09100515395402908, 0.09140139818191528, 0.09549596905708313, 0.09008057415485382, 0.09774138033390045, 0.08915598690509796], "val_loss": [2.308959722518921, 2.308959722518921, 2.308959722518921, 2.308959722518921, 2.308959722518921, 2.308959722518921], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 6, 5, 7, 3, 5, 4, 7, 6], [0, 2, 1, 2, 3, 2, 0], [0, 79, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 5, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 9, 6, 2, 4, 2, 1], [3, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 16, 9, 7, 2, 4, 3, 1, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha))), tf.math.pow(grad, tf.math.add(grad, tf.math.divide_no_nan(grad, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308563470840454, 2.3107006549835205, 2.3102970123291016, 2.3095197677612305, 2.310577154159546, 2.3104989528656006], "accuracy": [0.09232597798109055, 0.08902391046285629, 0.09470347315073013, 0.09087307006120682, 0.09351472556591034, 0.09259014576673508], "val_loss": [2.30849552154541, 2.30849552154541, 2.30849552154541, 2.30849552154541, 2.30849552154541, 2.30849552154541], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]