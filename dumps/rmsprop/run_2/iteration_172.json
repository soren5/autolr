[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8402857184410095, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2129247188568115, 1.6136341094970703, 1.1645725965499878, 0.9856667518615723, 0.92060786485672, 0.8223612308502197, 0.7884174585342407, 0.7681670188903809, 0.7458181977272034, 0.7065225839614868, 0.6852469444274902, 0.6875268220901489, 0.6751764416694641, 0.6523258686065674, 0.6335158944129944, 0.6308869123458862, 0.603969395160675, 0.5936275720596313, 0.5889022350311279, 0.5939083695411682, 0.569506824016571, 0.5664911270141602, 0.5583410859107971, 0.5510178804397583, 0.5281562209129333, 0.5459022521972656, 0.5242617726325989, 0.5261990427970886, 0.5130518078804016, 0.5096928477287292, 0.4948859214782715, 0.4978330135345459, 0.48919689655303955, 0.48237672448158264, 0.4796190559864044, 0.47423240542411804, 0.47090789675712585, 0.47455185651779175, 0.47262313961982727, 0.456040620803833, 0.4523763060569763, 0.450546532869339, 0.4482497572898865, 0.44347497820854187, 0.44038280844688416, 0.4253201484680176, 0.4311058223247528, 0.4217536449432373], "accuracy": [0.260071337223053, 0.5041606426239014, 0.594241201877594, 0.6460176706314087, 0.6623960137367249, 0.7003037929534912, 0.7079645991325378, 0.7181349992752075, 0.7226257920265198, 0.7374191284179688, 0.7421740889549255, 0.7456082701683044, 0.7458723783493042, 0.757099449634552, 0.7617223858833313, 0.7676661014556885, 0.7784969210624695, 0.7790252566337585, 0.7746664881706238, 0.7765156626701355, 0.7902522683143616, 0.787082314491272, 0.7895918488502502, 0.7932901978492737, 0.8082155585289001, 0.7946110367774963, 0.8035926818847656, 0.802800178527832, 0.8098005652427673, 0.813498854637146, 0.817461371421814, 0.8140271902084351, 0.8207634687423706, 0.8190463781356812, 0.819970965385437, 0.8224804997444153, 0.826310932636261, 0.8271034359931946, 0.8204993009567261, 0.8384625315666199, 0.8341038227081299, 0.8314621448516846, 0.8322546482086182, 0.837537944316864, 0.8335754871368408, 0.8374059200286865, 0.8342359066009521, 0.8453308939933777], "val_loss": [1.9261881113052368, 1.1350375413894653, 0.878812313079834, 0.8606099486351013, 0.7280367612838745, 0.6901876330375671, 0.6610367894172668, 0.64345383644104, 0.6094107627868652, 0.6035107970237732, 0.6008111834526062, 0.5972011089324951, 0.5920372605323792, 0.58246248960495, 0.559782087802887, 0.5372068881988525, 0.5252004861831665, 0.5133466720581055, 0.5284577012062073, 0.5232193470001221, 0.5106000900268555, 0.5150054097175598, 0.5169567465782166, 0.48585790395736694, 0.49930933117866516, 0.48088520765304565, 0.46397265791893005, 0.4673004448413849, 0.4753566384315491, 0.48486730456352234, 0.4578748047351837, 0.4467848241329193, 0.44955235719680786, 0.436690092086792, 0.44528836011886597, 0.4641250669956207, 0.46735846996307373, 0.4369904100894928, 0.4226549565792084, 0.4157080054283142, 0.4311855435371399, 0.44382908940315247, 0.4195960760116577, 0.4159032106399536, 0.4127041697502136, 0.41153234243392944, 0.4223020076751709, 0.40642184019088745], "val_accuracy": [0.5916666388511658, 0.6316666603088379, 0.6806666851043701, 0.6669999957084656, 0.7319999933242798, 0.7490000128746033, 0.7379999756813049, 0.762666642665863, 0.7710000276565552, 0.7643333077430725, 0.7733333110809326, 0.7620000243186951, 0.7730000019073486, 0.7776666879653931, 0.7793333530426025, 0.7990000247955322, 0.8059999942779541, 0.8069999814033508, 0.7993333339691162, 0.8003333210945129, 0.8076666593551636, 0.8040000200271606, 0.7933333516120911, 0.812333345413208, 0.8130000233650208, 0.8246666789054871, 0.831333339214325, 0.8256666660308838, 0.8163333535194397, 0.8169999718666077, 0.8333333134651184, 0.840666651725769, 0.8363333344459534, 0.8426666855812073, 0.8330000042915344, 0.8240000009536743, 0.8246666789054871, 0.8413333296775818, 0.8519999980926514, 0.8553333282470703, 0.8396666646003723, 0.8266666531562805, 0.8576666712760925, 0.8473333120346069, 0.8496666550636292, 0.8536666631698608, 0.8420000076293945, 0.8539999723434448]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 61, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037521839141846, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 7, 3, 4, 3, 2, 4, 5, 0, 8, 4, 8, 3, 6, 9, 1, 6], [0, 2, 1, 0, 1, 1, 3, 1, 2, 1, 1, 3, 1], [0, 20, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 0, 3, 3, 9, 2], [0, 0, 3, 1, 0], [16, 1, 27], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 0, 2, 2], [0, 6, 5, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 19, 13, 3, 11, 7, 4, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.pow(alpha, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, alpha), alpha)), grad)))))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 6], [0, 3, 3, 2, 0, 3], [0, 65, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [20, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 7, 5, 5, 9], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [29, 77, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [7, 2, 0, 2, 5, 3, 1], [0, 6, 0, 6, 0], [85, 7, 31], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 5, 5, 2, 11, 6, 5, 3, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [439093344.0, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025848865509033, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]