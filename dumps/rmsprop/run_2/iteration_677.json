[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8137142658233643, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2057220935821533, 1.5968676805496216, 1.1334630250930786, 0.9708837270736694, 0.8997514247894287, 0.8148582577705383, 0.7844550013542175, 0.7398781180381775, 0.7082577347755432, 0.7167981863021851, 0.6777154803276062, 0.6661008596420288, 0.6553488373756409, 0.6393190026283264, 0.6271195411682129, 0.6145866513252258, 0.6005149483680725, 0.6006065607070923, 0.5876966118812561, 0.5699202418327332, 0.5622926950454712, 0.5609159469604492, 0.5466310381889343, 0.5432677268981934, 0.5353896021842957, 0.5190556645393372, 0.5151016116142273, 0.5157997608184814, 0.5009247660636902, 0.49638631939888, 0.48586490750312805, 0.4837374687194824, 0.5000463724136353, 0.4827483296394348, 0.46112027764320374, 0.46462973952293396, 0.4670940339565277, 0.44953885674476624, 0.4580487012863159, 0.4536125361919403, 0.4584101140499115], "accuracy": [0.27684587240219116, 0.5070664286613464, 0.609959065914154, 0.6519614458084106, 0.6720380187034607, 0.6991150379180908, 0.707568347454071, 0.7256637215614319, 0.733060359954834, 0.7298903465270996, 0.7523444890975952, 0.7494386434555054, 0.7534011602401733, 0.7630431652069092, 0.7625148296356201, 0.7695152759552002, 0.7754589915275574, 0.774798572063446, 0.7821952104568481, 0.7854973077774048, 0.7872143983840942, 0.7902522683143616, 0.7924976944923401, 0.8018755912780762, 0.7957997918128967, 0.8068947196006775, 0.8067626357078552, 0.8055738806724548, 0.81112140417099, 0.8156121969223022, 0.8203672170639038, 0.8170651197433472, 0.8146876096725464, 0.8190463781356812, 0.829216718673706, 0.82683926820755, 0.8248580098152161, 0.8286884427070618, 0.8269713521003723, 0.8333113193511963, 0.8284242749214172], "val_loss": [1.9058079719543457, 1.1132640838623047, 0.8600659370422363, 0.7751691937446594, 0.7160956859588623, 0.7074439525604248, 0.6496145725250244, 0.6410861015319824, 0.6196237802505493, 0.6199976205825806, 0.6029825210571289, 0.6085996031761169, 0.5967757105827332, 0.564375102519989, 0.556758463382721, 0.5619533061981201, 0.5663831233978271, 0.5366753935813904, 0.5197873711585999, 0.5213818550109863, 0.513831377029419, 0.529439389705658, 0.5112698674201965, 0.5311680436134338, 0.48852524161338806, 0.4788143038749695, 0.49338507652282715, 0.5011519193649292, 0.476881742477417, 0.49613654613494873, 0.4679441750049591, 0.4885196089744568, 0.4799523949623108, 0.45030972361564636, 0.454097181558609, 0.45098841190338135, 0.4555245041847229, 0.44767606258392334, 0.4588780999183655, 0.45284196734428406, 0.43182772397994995], "val_accuracy": [0.5640000104904175, 0.6290000081062317, 0.7006666660308838, 0.7160000205039978, 0.7236666679382324, 0.7316666841506958, 0.7453333139419556, 0.7490000128746033, 0.7603333592414856, 0.762666642665863, 0.7573333382606506, 0.7583333253860474, 0.768666684627533, 0.7839999794960022, 0.7903333306312561, 0.7663333415985107, 0.7703333497047424, 0.79666668176651, 0.8003333210945129, 0.79666668176651, 0.8009999990463257, 0.7896666526794434, 0.8003333210945129, 0.7846666574478149, 0.8083333373069763, 0.8236666917800903, 0.8163333535194397, 0.8033333420753479, 0.8176666498184204, 0.8083333373069763, 0.8263333439826965, 0.8149999976158142, 0.8209999799728394, 0.8363333344459534, 0.8266666531562805, 0.8366666436195374, 0.8220000267028809, 0.8366666436195374, 0.8306666612625122, 0.824999988079071, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 0, 4, 3, 0], [16, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 0, 6, 7], [0, 6, 1, 6, 2], [0, 22], [1], [0], [6], [0]], "fitness": -0.17114286124706268, "mapping_values": [1, 4, 2, 2, 1, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.93473482131958, 2.2524049282073975, 2.3083393573760986, 2.3046224117279053, 2.303532123565674, 2.3032383918762207], "accuracy": [0.19310526549816132, 0.17461365461349487, 0.09787346422672272, 0.09734513610601425, 0.09787346422672272, 0.10038304328918457], "val_loss": [2.316492795944214, 2.313321113586426, 2.304638385772705, 2.303093671798706, 2.303168535232544, 2.30264949798584], "val_accuracy": [0.16733333468437195, 0.09733333438634872, 0.09733333438634872, 0.1003333330154419, 0.10100000351667404, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 21, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 2, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 8, 5, 3, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 2, 3, 2, 3, 5], [0, 2, 1, 2, 2, 0], [2, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 2, 5, 2, 8, 8, 0, 3, 1, 1, 3, 4], [0, 6, 3, 6, 0, 0, 4, 3, 0, 4], [0, 22, 49, 46], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 4, 2, 2, 1, 24, 14, 10, 4, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.add(grad, alpha), tf.math.multiply(grad, grad)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(tf.math.sqrt(tf.math.negative(sigma))))), tf.math.multiply(tf.math.subtract(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad))), tf.math.pow(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303607702255249, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 3, 2, 3, 5], [0, 2, 1, 0, 1], [0, 39, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 7, 4, 5, 2, 1], [0, 6, 6, 6, 0], [92, 22], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.square(grad)), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099803924560547, 2.3098320960998535, 2.30981707572937, 2.310072183609009, 2.3096556663513184, 2.309054136276245], "accuracy": [0.09113723784685135, 0.0956280529499054, 0.08374059200286865, 0.09496764093637466, 0.09232597798109055, 0.09166556596755981], "val_loss": [2.308175802230835, 2.308175802230835, 2.308175802230835, 2.308175802230835, 2.308175802230835, 2.308175802230835], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]