[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8094285726547241, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2097647190093994, 1.5956130027770996, 1.1578822135925293, 0.9536253213882446, 0.8836710453033447, 0.7925032377243042, 0.8047506809234619, 0.746829628944397, 0.7202015519142151, 0.7011376023292542, 0.6784905195236206, 0.6554189324378967, 0.6558129191398621, 0.6271513104438782, 0.604066014289856, 0.5874496102333069, 0.5762340426445007, 0.5760307908058167, 0.5773309469223022, 0.5550171732902527, 0.5568878650665283, 0.5329114198684692, 0.5249744653701782, 0.5277694463729858, 0.5092634558677673, 0.5082101821899414, 0.5049190521240234, 0.48336881399154663, 0.4890913665294647, 0.48602327704429626, 0.4863596260547638, 0.470244824886322, 0.46075811982154846, 0.4710083603858948, 0.45551803708076477, 0.4486481845378876, 0.4572007358074188, 0.43852323293685913, 0.44177475571632385, 0.4419926702976227, 0.43618249893188477, 0.4349541664123535, 0.4214617908000946, 0.41302117705345154, 0.4154299199581146, 0.40498554706573486, 0.40476536750793457, 0.40772855281829834, 0.4019891321659088, 0.39561986923217773, 0.40642115473747253, 0.38774019479751587, 0.39109092950820923, 0.38448697328567505, 0.37885430455207825, 0.378037691116333, 0.37825992703437805, 0.3815728425979614, 0.378848671913147], "accuracy": [0.2670717239379883, 0.5173689126968384, 0.5914674401283264, 0.658961832523346, 0.6822084188461304, 0.7193237543106079, 0.7096816897392273, 0.722229540348053, 0.7290979027748108, 0.739928662776947, 0.7495707273483276, 0.7563069462776184, 0.752740740776062, 0.7672698497772217, 0.7741381525993347, 0.7832518815994263, 0.7876105904579163, 0.7827235460281372, 0.7817989587783813, 0.7952714562416077, 0.791441023349762, 0.8029322624206543, 0.8057059645652771, 0.8029322624206543, 0.8078193068504333, 0.8146876096725464, 0.8137630224227905, 0.8183859586715698, 0.8183859586715698, 0.8198388814926147, 0.8165367841720581, 0.8260467648506165, 0.8308017253875732, 0.8273676037788391, 0.8339717388153076, 0.8337075710296631, 0.8278959393501282, 0.8422929644584656, 0.8352925777435303, 0.8376700282096863, 0.8337075710296631, 0.8362171649932861, 0.8430854678153992, 0.8451988101005554, 0.8467837572097778, 0.8516708612442017, 0.8551049828529358, 0.8507462739944458, 0.8485008478164673, 0.8521991968154907, 0.8539162874221802, 0.8568220734596252, 0.8549728989601135, 0.8593316674232483, 0.8615770936012268, 0.8594637513160706, 0.8585391640663147, 0.8597279191017151, 0.8582749962806702], "val_loss": [1.9189774990081787, 1.0836800336837769, 0.8847719430923462, 0.7775936126708984, 0.703248143196106, 0.7129737734794617, 0.6646810173988342, 0.622596263885498, 0.6416432857513428, 0.5973389744758606, 0.6094264984130859, 0.6150978803634644, 0.5643889904022217, 0.5455272793769836, 0.5359103679656982, 0.5253801345825195, 0.5170644521713257, 0.554587185382843, 0.5162506699562073, 0.5210849642753601, 0.5084525346755981, 0.4972783923149109, 0.49856632947921753, 0.49267855286598206, 0.4761577248573303, 0.47805899381637573, 0.4683068096637726, 0.45931342244148254, 0.46238118410110474, 0.465433269739151, 0.4502617120742798, 0.45428353548049927, 0.4401220679283142, 0.4430939257144928, 0.43545207381248474, 0.4435286521911621, 0.4395139217376709, 0.4237765967845917, 0.4402236342430115, 0.45746827125549316, 0.434556245803833, 0.42676815390586853, 0.41238656640052795, 0.40933892130851746, 0.4199223518371582, 0.4247455596923828, 0.3990074396133423, 0.4237358868122101, 0.40184658765792847, 0.40378156304359436, 0.40620386600494385, 0.41290974617004395, 0.41253557801246643, 0.3906790316104889, 0.3928478956222534, 0.3977696895599365, 0.3982532024383545, 0.39995670318603516, 0.38895636796951294], "val_accuracy": [0.5983333587646484, 0.6606666445732117, 0.6993333101272583, 0.7176666855812073, 0.7393333315849304, 0.7336666584014893, 0.7483333349227905, 0.7670000195503235, 0.7609999775886536, 0.7853333353996277, 0.7703333497047424, 0.7559999823570251, 0.7913333177566528, 0.812666654586792, 0.8056666851043701, 0.8133333325386047, 0.8173333406448364, 0.7863333225250244, 0.8103333115577698, 0.8066666722297668, 0.8073333501815796, 0.8213333487510681, 0.8096666932106018, 0.8273333311080933, 0.8266666531562805, 0.8320000171661377, 0.8389999866485596, 0.8373333215713501, 0.8379999995231628, 0.831333339214325, 0.8403333425521851, 0.8353333473205566, 0.8473333120346069, 0.8426666855812073, 0.8433333039283752, 0.843999981880188, 0.8456666469573975, 0.8539999723434448, 0.8476666808128357, 0.8273333311080933, 0.8423333168029785, 0.8513333201408386, 0.8566666841506958, 0.8579999804496765, 0.8560000061988831, 0.8486666679382324, 0.8616666793823242, 0.8460000157356262, 0.8636666536331177, 0.8629999756813049, 0.8606666922569275, 0.8506666421890259, 0.8529999852180481, 0.8669999837875366, 0.8636666536331177, 0.859666645526886, 0.8556666374206543, 0.8513333201408386, 0.8606666922569275]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [74, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 4, 3, 2, 2], [0, 1, 1, 6, 0, 2, 7, 5], [0, 22], [0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 4, 7, 8, 2, 9], [2, 7, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 1, 18, 10, 8, 2, 9, 6, 3, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(alpha, tf.math.multiply(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [29, 39, 39], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [3, 2, 3, 2, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 8, 3, 2, 2, 2, 1], [0, 6, 0, 6, 0], [0, 22, 70], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 11, 6, 5, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [57369.04296875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1666886806488037, 0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.803016181585019e+17, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02033333294093609, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 3, 2], [75, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 6, 0, 2, 5, 2, 1], [1, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09600000083446503, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309828042984009, 2.3097951412200928, 2.310774564743042, 2.309523344039917, 2.3109629154205322, 2.3101160526275635], "accuracy": [0.09126931428909302, 0.09576013684272766, 0.08968432247638702, 0.09206181764602661, 0.08915598690509796, 0.09311848133802414], "val_loss": [2.3086822032928467, 2.3086822032928467, 2.3086822032928467, 2.3086822032928467, 2.3086822032928467, 2.3086822032928467], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 8, 5], [3, 2, 1, 0, 2], [0, 5, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [62, 35], [1], [0], [0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 12, 7, 5, 1, 4, 2, 2, 1, 12, 7, 5, 2, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), tf.math.multiply(tf.math.sqrt(alpha), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3099443912506104, 2.310495615005493, 2.309927463531494, 2.309544086456299, 2.3095345497131348, 2.3100969791412354], "accuracy": [0.0936468094587326, 0.09113723784685135, 0.08717474341392517, 0.09192973375320435, 0.09060890227556229, 0.0940430611371994], "val_loss": [2.308530569076538, 2.308530569076538, 2.308530569076538, 2.308530569076538, 2.308530569076538, 2.308530569076538], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]