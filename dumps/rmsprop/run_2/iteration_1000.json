[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2106974124908447, 1.6075738668441772, 1.184814691543579, 0.9848418831825256, 0.8896341919898987, 0.8457342982292175, 0.7923651337623596, 0.7476747632026672, 0.722693920135498, 0.7276467084884644, 0.6733214855194092, 0.6771193742752075, 0.6547450423240662, 0.6377561092376709, 0.6218616962432861, 0.6104114055633545, 0.6009951233863831, 0.5750885605812073, 0.5902659893035889, 0.5694173574447632, 0.5631548166275024, 0.5627380609512329, 0.531372606754303, 0.5417932271957397, 0.5169629454612732, 0.5214409828186035, 0.5034745931625366, 0.5178402066230774, 0.4951675534248352, 0.49641093611717224, 0.48519498109817505, 0.4828198552131653, 0.4704151749610901, 0.47092100977897644, 0.4743783473968506, 0.4651518762111664, 0.462611585855484, 0.46346116065979004, 0.4471482038497925, 0.448631227016449, 0.44985431432724, 0.44301068782806396, 0.4332079589366913, 0.43623867630958557, 0.42807427048683167, 0.422164648771286, 0.42505520582199097, 0.41950395703315735, 0.4172445833683014, 0.4162708818912506, 0.4102182984352112, 0.397987425327301], "accuracy": [0.2641659080982208, 0.4974243938922882, 0.5806366205215454, 0.6540747880935669, 0.6828688383102417, 0.6922467350959778, 0.7119271159172058, 0.7234182953834534, 0.7320036888122559, 0.7280412316322327, 0.7531369924545288, 0.7405890822410583, 0.759609043598175, 0.7688548564910889, 0.7700436115264893, 0.7738739848136902, 0.774270236492157, 0.7903843522071838, 0.7796856164932251, 0.7880068421363831, 0.7889314293861389, 0.7922335267066956, 0.8016114234924316, 0.8005547523498535, 0.8078193068504333, 0.8092722296714783, 0.8182538747787476, 0.8103289008140564, 0.8182538747787476, 0.816008448600769, 0.8224804997444153, 0.8203672170639038, 0.8301413059234619, 0.8241975903511047, 0.8296129703521729, 0.8298771381378174, 0.8298771381378174, 0.8308017253875732, 0.8379341959953308, 0.8341038227081299, 0.8378021121025085, 0.8356888294219971, 0.8400475382804871, 0.837537944316864, 0.8432175517082214, 0.842028796672821, 0.8384625315666199, 0.8444063067436218, 0.8514066934585571, 0.848368763923645, 0.8536521196365356, 0.8588033318519592], "val_loss": [1.913155436515808, 1.1131144762039185, 0.8930263519287109, 0.7988051772117615, 0.83404940366745, 0.7326793670654297, 0.6493495106697083, 0.6435237526893616, 0.6885442137718201, 0.5892962217330933, 0.5966950058937073, 0.5798512101173401, 0.5763447284698486, 0.572813093662262, 0.5375675559043884, 0.5399112701416016, 0.5390163660049438, 0.5266270637512207, 0.5146579146385193, 0.5341662168502808, 0.5068770051002502, 0.5020831823348999, 0.5100807547569275, 0.48290276527404785, 0.47925877571105957, 0.4781170189380646, 0.4892900288105011, 0.46962296962738037, 0.4722572863101959, 0.47816288471221924, 0.4754432737827301, 0.4511663317680359, 0.45169392228126526, 0.4492032527923584, 0.43798893690109253, 0.43894293904304504, 0.4575345814228058, 0.44010019302368164, 0.4333415627479553, 0.44396987557411194, 0.442790687084198, 0.42522794008255005, 0.435314416885376, 0.419711709022522, 0.42712461948394775, 0.4139806032180786, 0.40872395038604736, 0.4390811324119568, 0.4325140118598938, 0.4381316602230072, 0.4131637513637543, 0.43067121505737305], "val_accuracy": [0.5460000038146973, 0.640333354473114, 0.6883333325386047, 0.7146666646003723, 0.7016666531562805, 0.7170000076293945, 0.7553333044052124, 0.7369999885559082, 0.722000002861023, 0.7776666879653931, 0.765999972820282, 0.7816666960716248, 0.7919999957084656, 0.7673333287239075, 0.7900000214576721, 0.7990000247955322, 0.7883333563804626, 0.7943333387374878, 0.8149999976158142, 0.7873333096504211, 0.8026666641235352, 0.8023333549499512, 0.8066666722297668, 0.8199999928474426, 0.8193333148956299, 0.8130000233650208, 0.8166666626930237, 0.8273333311080933, 0.8193333148956299, 0.8246666789054871, 0.8133333325386047, 0.8286666870117188, 0.8316666483879089, 0.8366666436195374, 0.8379999995231628, 0.8360000252723694, 0.8266666531562805, 0.8429999947547913, 0.8429999947547913, 0.8339999914169312, 0.8353333473205566, 0.8483333587646484, 0.8339999914169312, 0.8500000238418579, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8379999995231628, 0.8389999866485596, 0.8370000123977661, 0.8519999980926514, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 2, 2], [0, 80, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [41, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 9, 8], [0, 6, 1, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.339428573846817, "mapping_values": [1, 1, 0, 1, 0, 5, 3, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3887810707092285, 2.335596799850464, 2.303567886352539, 2.276014804840088, 2.272719383239746, 2.3036627769470215, 2.280632734298706, 2.245039939880371, 2.256983995437622, 2.3048174381256104, 2.3036110401153564, 2.3033342361450195, 2.303420305252075], "accuracy": [0.20036983489990234, 0.15097081661224365, 0.09998679161071777, 0.16153743863105774, 0.1574428677558899, 0.09655263274908066, 0.15678246319293976, 0.1802932173013687, 0.15493330359458923, 0.09351472556591034, 0.09536388516426086, 0.09853387624025345, 0.10474177449941635], "val_loss": [2.280487537384033, 2.305203676223755, 2.299523115158081, 2.055725336074829, 2.305229425430298, 2.301806688308716, 2.0200796127319336, 2.0757765769958496, 2.3041019439697266, 2.3027727603912354, 2.3029115200042725, 2.3028485774993896, 2.3033347129821777], "val_accuracy": [0.0976666659116745, 0.10133333504199982, 0.10133333504199982, 0.3050000071525574, 0.09700000286102295, 0.09700000286102295, 0.23999999463558197, 0.3370000123977661, 0.09666666388511658, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 5, 5, 2, 1, 8, 2], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 1, 14, 9, 5, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302467107772827, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [3, 0, 3, 1, 3, 0], [0, 0, 1, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 7, 1, 1, 3, 8, 7], [3, 0, 3, 0, 0, 2, 1, 4, 5, 4], [16, 1, 66], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 1, 5, 2, 1], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 22, 12, 10, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(grad, tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.sqrt(alpha)))), tf.math.add(grad, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 3, 2, 5, 5], [0, 2, 1, 0, 2], [69, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha))), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309441566467285, 2.3115732669830322, 2.3098883628845215, 2.3107757568359375, 2.308317184448242, 2.309692144393921], "accuracy": [0.09047681838274002, 0.08955223858356476, 0.09179764986038208, 0.0952318087220192, 0.09708096832036972, 0.09192973375320435], "val_loss": [2.3088254928588867, 2.3088254928588867, 2.3088254928588867, 2.3088254928588867, 2.3088254928588867, 2.3088254928588867], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]