[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8368571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2101521492004395, 1.5944515466690063, 1.137812852859497, 0.9598632454872131, 0.8897539973258972, 0.8020451068878174, 0.7755953073501587, 0.7396554350852966, 0.758481502532959, 0.6886496543884277, 0.6599276661872864, 0.660821259021759, 0.6388238668441772, 0.6507571935653687, 0.6312097311019897, 0.5979614853858948, 0.5902437567710876, 0.5870587229728699, 0.5645007491111755, 0.5617634654045105, 0.5543679594993591, 0.5603888630867004, 0.5376890301704407, 0.5323917865753174, 0.5181184411048889, 0.512822687625885, 0.5169224739074707, 0.5006732940673828, 0.4997291564941406, 0.48790591955184937, 0.47637230157852173, 0.4825586974620819, 0.47540098428726196, 0.4614464044570923, 0.47247809171676636, 0.47432997822761536, 0.45901966094970703, 0.4555135667324066, 0.4401072859764099, 0.4411589205265045, 0.44129157066345215, 0.4569314420223236, 0.4337271749973297, 0.4292861223220825], "accuracy": [0.27737417817115784, 0.5114251971244812, 0.5972790718078613, 0.6613393425941467, 0.6840575933456421, 0.7067758440971375, 0.711530864238739, 0.7273808121681213, 0.720380425453186, 0.7500990629196167, 0.7564390301704407, 0.7555144429206848, 0.7663452625274658, 0.7530049085617065, 0.765949010848999, 0.7774402499198914, 0.7868181467056274, 0.7824593782424927, 0.7924976944923401, 0.7959318161010742, 0.7998943328857422, 0.7910447716712952, 0.8045172095298767, 0.8080834746360779, 0.8087438941001892, 0.8123101592063904, 0.81548011302948, 0.8187822103500366, 0.8193105459213257, 0.8232730031013489, 0.8302733898162842, 0.8272355198860168, 0.8261788487434387, 0.8301413059234619, 0.8302733898162842, 0.8318583965301514, 0.8356888294219971, 0.8379341959953308, 0.8378021121025085, 0.8422929644584656, 0.8385946154594421, 0.833179235458374, 0.8425571322441101, 0.8409721255302429], "val_loss": [1.9137269258499146, 1.106347680091858, 0.874836266040802, 0.7726274132728577, 0.7723629474639893, 0.6900541186332703, 0.6265532374382019, 0.6640613079071045, 0.6542988419532776, 0.5878742337226868, 0.5821478962898254, 0.5817755460739136, 0.586003839969635, 0.5576831102371216, 0.5305054783821106, 0.5373587012290955, 0.5229865908622742, 0.5193930864334106, 0.5235212445259094, 0.5145177245140076, 0.5162348747253418, 0.4923705756664276, 0.4876556396484375, 0.4811233580112457, 0.49753621220588684, 0.5477266311645508, 0.47041699290275574, 0.45840829610824585, 0.4947874844074249, 0.45162463188171387, 0.4521932005882263, 0.4613339304924011, 0.4410231411457062, 0.44106417894363403, 0.43729498982429504, 0.44771215319633484, 0.4249708950519562, 0.42381784319877625, 0.42095234990119934, 0.41972431540489197, 0.43902334570884705, 0.4209417700767517, 0.41732290387153625, 0.43063095211982727], "val_accuracy": [0.5573333501815796, 0.6186666488647461, 0.6840000152587891, 0.7096666693687439, 0.6970000267028809, 0.7350000143051147, 0.7676666378974915, 0.7413333058357239, 0.7596666812896729, 0.7770000100135803, 0.7833333611488342, 0.781000018119812, 0.7763333320617676, 0.7846666574478149, 0.8026666641235352, 0.7993333339691162, 0.8013333082199097, 0.8003333210945129, 0.8073333501815796, 0.8073333501815796, 0.8050000071525574, 0.8153333067893982, 0.8186666369438171, 0.8213333487510681, 0.8169999718666077, 0.7823333144187927, 0.8289999961853027, 0.8336666822433472, 0.8019999861717224, 0.8326666951179504, 0.8316666483879089, 0.8256666660308838, 0.8423333168029785, 0.8376666903495789, 0.8386666774749756, 0.8370000123977661, 0.8450000286102295, 0.8460000157356262, 0.8479999899864197, 0.8429999947547913, 0.8403333425521851, 0.843666672706604, 0.8426666855812073, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [7, 9, 3, 2, 3, 7], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [1, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 5, 0, 2, 5, 2, 1], [0, 6, 1, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036231994628906, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 7, 3, 2, 3, 5, 5, 3, 9, 8], [0, 1, 3, 0, 2], [0, 76, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [94, 1, 72], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 8, 5, 2, 1], [3, 6, 1, 6, 2], [0, 61], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 3, 12, 7, 5, 3, 9, 6, 3, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.math.square(tf.math.square(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.square(sigma))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 6, 2, 3, 5], [0, 2, 1, 0, 2], [11, 66, 39], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 9, 5, 3, 7, 2], [5, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [2, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 4, 3, 1, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(beta, grad), alpha)), sigma)), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2947888374328613, 2.340141534805298, 2.3319880962371826, 2.327772617340088, 2.34009051322937, 2.3404858112335205, 2.350130081176758, 2.335927724838257, 2.3350820541381836, 2.3605709075927734], "accuracy": [0.1088363528251648, 0.09813763201236725, 0.10091137140989304, 0.10157178342342377, 0.09536388516426086, 0.10315678268671036, 0.09417514503002167, 0.1006472036242485, 0.10236428678035736, 0.09985470771789551], "val_loss": [2.3194265365600586, 2.325399160385132, 2.344686508178711, 2.3669636249542236, 2.3197860717773438, 2.3168609142303467, 2.344404935836792, 2.3633933067321777, 2.3715224266052246, 2.325688600540161], "val_accuracy": [0.0963333323597908, 0.10233332961797714, 0.10166666656732559, 0.09866666793823242, 0.10433333367109299, 0.0963333323597908, 0.10233332961797714, 0.10166666656732559, 0.09600000083446503, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 1, 5, 4], [0, 2, 1, 2, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 0, 6, 3, 5, 2], [0, 2, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 6, 4, 2, 1], [0, 6, 1, 6, 0], [95], [0, 0], [0, 9], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 13, 7, 6, 1, 11, 6, 5, 2, 2, 1, 1, 1, 2, 2, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.square(alpha))), tf.math.pow(grad, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.square(grad)), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309389591217041, 2.311553955078125, 2.310117721557617, 2.3109498023986816, 2.3109683990478516, 2.310856819152832], "accuracy": [0.09325055778026581, 0.08611807972192764, 0.09100515395402908, 0.09008057415485382, 0.08968432247638702, 0.08691058307886124], "val_loss": [2.308319568634033, 2.308319568634033, 2.308319568634033, 2.308319568634033, 2.308319568634033, 2.308319568634033], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]