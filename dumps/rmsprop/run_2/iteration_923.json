[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8108571171760559, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2160298824310303, 1.6311802864074707, 1.1326854228973389, 1.0225849151611328, 0.9007650017738342, 0.8170634508132935, 0.7873156070709229, 0.7707966566085815, 0.7308845520019531, 0.7082407474517822, 0.7081084251403809, 0.6582212448120117, 0.6517146825790405, 0.6466090679168701, 0.6406919956207275, 0.6254717707633972, 0.6031665205955505, 0.6091544032096863, 0.5827717185020447, 0.5770974159240723, 0.5648742914199829, 0.5582684278488159, 0.5528779625892639, 0.5322558283805847, 0.5352116227149963, 0.5231321454048157, 0.5134701132774353, 0.5133955478668213, 0.5039383769035339, 0.4966554343700409, 0.49226877093315125, 0.4909675717353821, 0.4837266504764557, 0.4729975759983063, 0.46828538179397583, 0.46768078207969666, 0.46255043148994446, 0.45284581184387207, 0.45586448907852173, 0.45492589473724365, 0.4542265236377716], "accuracy": [0.2604675590991974, 0.5007264614105225, 0.6026945114135742, 0.635451078414917, 0.67666095495224, 0.7017567157745361, 0.7124554514884949, 0.7141724824905396, 0.7255316376686096, 0.737022876739502, 0.7363624572753906, 0.7511557340621948, 0.7553823590278625, 0.7593448758125305, 0.7625148296356201, 0.7707040309906006, 0.7769119143486023, 0.7745344042778015, 0.7861577272415161, 0.7849689722061157, 0.7878747582435608, 0.7873464822769165, 0.7905164361000061, 0.7994980812072754, 0.802800178527832, 0.8057059645652771, 0.8053097128868103, 0.809140145778656, 0.8112534880638123, 0.8168009519577026, 0.8206313848495483, 0.8164047002792358, 0.8216879963874817, 0.8274996876716614, 0.8313300609588623, 0.8269713521003723, 0.8285563588142395, 0.8350284099578857, 0.8278959393501282, 0.8327829837799072, 0.8281601071357727], "val_loss": [1.9440481662750244, 1.1245753765106201, 0.9102284908294678, 0.8097560405731201, 0.7145827412605286, 0.7199478149414062, 0.6561723351478577, 0.6778635382652283, 0.6593718528747559, 0.6309331059455872, 0.5976852774620056, 0.6312854886054993, 0.6079176664352417, 0.6060494780540466, 0.5406915545463562, 0.5320203304290771, 0.5435409545898438, 0.5189846754074097, 0.5206338167190552, 0.5156649351119995, 0.5042621493339539, 0.5297648310661316, 0.5094467997550964, 0.4830532371997833, 0.48232755064964294, 0.5117000341415405, 0.48397648334503174, 0.4634363651275635, 0.4615156948566437, 0.4521358609199524, 0.4533509612083435, 0.4587760269641876, 0.449922114610672, 0.4697508215904236, 0.4477653503417969, 0.4332807958126068, 0.4373425245285034, 0.4394376575946808, 0.4545869827270508, 0.43070998787879944, 0.42610594630241394], "val_accuracy": [0.49266666173934937, 0.6596666574478149, 0.6743333339691162, 0.7006666660308838, 0.7493333220481873, 0.7273333072662354, 0.7473333477973938, 0.7316666841506958, 0.7296666502952576, 0.765666663646698, 0.7753333449363708, 0.7556666731834412, 0.7609999775886536, 0.7733333110809326, 0.7953333258628845, 0.7993333339691162, 0.7923333048820496, 0.8063333630561829, 0.8066666722297668, 0.8019999861717224, 0.8106666803359985, 0.800000011920929, 0.8146666884422302, 0.8246666789054871, 0.828000009059906, 0.8066666722297668, 0.8256666660308838, 0.8270000219345093, 0.8330000042915344, 0.8386666774749756, 0.8333333134651184, 0.8270000219345093, 0.8333333134651184, 0.8296666741371155, 0.8396666646003723, 0.846666693687439, 0.8383333086967468, 0.8353333473205566, 0.8270000219345093, 0.8386666774749756, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [6, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 2, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10371428728103638, "mapping_values": [1, 6, 3, 3, 1, 8, 4, 4, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [79.75189208984375, 1249117056.0, 2.1976235257102336e+16, 5.578669026514855e+23, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10276053100824356, 0.09642054885625839, 0.10210011899471283, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4806.72265625, 81981472768.0, 1.3792484140420956e+18, 6.180673374448152e+25, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 2, 7, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [5, 0, 0, 1, 0], [3, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 4, 2, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [701361.8125, Infinity, 3.0804407596588135, 2.8719964027404785, 2.9245972633361816, 3.189349412918091, 2.836918830871582, 3.029561758041382], "accuracy": [0.1970677524805069, 0.10289261490106583, 0.10500594228506088, 0.10342095047235489, 0.09259014576673508, 0.09932637959718704, 0.10460969805717468, 0.10408136248588562], "val_loss": [50083932405760.0, 3.2490832805633545, 2.7269692420959473, 2.861764907836914, 3.110759735107422, 2.6968770027160645, 3.260575771331787, 2.9589602947235107], "val_accuracy": [0.014666666276752949, 0.10066666454076767, 0.10233332961797714, 0.10199999809265137, 0.10166666656732559, 0.09933333098888397, 0.10199999809265137, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 3, 3, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 9, 8, 0], [0, 6, 1, 6, 3], [22, 22], [0, 1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 1, 12, 9, 3, 2, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3100740909576416, 2.3102705478668213, 2.310711145401001, 2.3099286556243896, 2.3104569911956787, 2.3097634315490723], "accuracy": [0.09285431355237961, 0.09060890227556229, 0.08611807972192764, 0.0956280529499054, 0.09259014576673508, 0.08770307898521423], "val_loss": [2.3077452182769775, 2.3077452182769775, 2.3077452182769775, 2.3077452182769775, 2.3077452182769775, 2.3077452182769775], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 0, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 5, 1], [0, 4, 1, 6, 0], [0, 73], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101704120635986, 2.309901475906372, 2.309664249420166, 2.310014247894287, 2.3099429607391357, 2.3093743324279785], "accuracy": [0.09047681838274002, 0.09298639744520187, 0.08994849026203156, 0.0882314071059227, 0.09391097724437714, 0.09285431355237961], "val_loss": [2.3086540699005127, 2.3086540699005127, 2.3086540699005127, 2.3086540699005127, 2.3086540699005127, 2.3086540699005127], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]