[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8028571605682373, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105307579040527, 1.6092294454574585, 1.15347421169281, 0.9879290461540222, 0.8688741326332092, 0.8312133550643921, 0.8065793514251709, 0.7459796667098999, 0.7407317757606506, 0.7024904489517212, 0.7081306576728821, 0.671353816986084, 0.6552925705909729, 0.6478433012962341, 0.6385529041290283, 0.616809070110321, 0.619592010974884, 0.5880568027496338, 0.5921552181243896, 0.5762581825256348, 0.5906336307525635, 0.5689789056777954, 0.5556602478027344, 0.5549504160881042, 0.53929203748703, 0.539057195186615, 0.5264828205108643, 0.5077599883079529, 0.5258134007453918, 0.5112015604972839, 0.48880478739738464, 0.48452070355415344, 0.4945657551288605, 0.4733847677707672, 0.47302162647247314, 0.4771067500114441, 0.4657745361328125, 0.4544183015823364, 0.4548572599887848, 0.45549800992012024, 0.4512098729610443, 0.44638144969940186], "accuracy": [0.26958128809928894, 0.5062739253044128, 0.605468213558197, 0.6470743417739868, 0.6844538450241089, 0.6992471218109131, 0.7014925479888916, 0.7289658188819885, 0.7244749665260315, 0.7437590956687927, 0.7325320243835449, 0.7489103078842163, 0.757099449634552, 0.7670056819915771, 0.7664773464202881, 0.7725531458854675, 0.7724210619926453, 0.7872143983840942, 0.7868181467056274, 0.7926297783851624, 0.7812706232070923, 0.7902522683143616, 0.7987055778503418, 0.7944789528846741, 0.8037247657775879, 0.7996301651000977, 0.8049134612083435, 0.8127063512802124, 0.8082155585289001, 0.8107251524925232, 0.8278959393501282, 0.8253863453865051, 0.8183859586715698, 0.8259146809577942, 0.8259146809577942, 0.8203672170639038, 0.8308017253875732, 0.834632158279419, 0.8380662798881531, 0.8359529972076416, 0.8389908671379089, 0.8385946154594421], "val_loss": [1.9236263036727905, 1.1210451126098633, 0.8971702456474304, 0.7943563461303711, 0.8241065144538879, 0.6827781796455383, 0.6684190630912781, 0.6319074630737305, 0.6177235841751099, 0.6591414213180542, 0.5843043327331543, 0.6072142124176025, 0.562143087387085, 0.5967175364494324, 0.5466789603233337, 0.5669199824333191, 0.5437322854995728, 0.5442787408828735, 0.5325861573219299, 0.5191369652748108, 0.5106279850006104, 0.517632007598877, 0.5344874262809753, 0.4881351590156555, 0.501089870929718, 0.5001137852668762, 0.480818510055542, 0.4858969748020172, 0.4658444821834564, 0.4728914499282837, 0.46161314845085144, 0.48401227593421936, 0.46264201402664185, 0.4586692154407501, 0.47217997908592224, 0.4522098898887634, 0.44309186935424805, 0.4418044090270996, 0.45371222496032715, 0.44690829515457153, 0.4429454803466797, 0.4459880292415619], "val_accuracy": [0.6223333477973938, 0.6316666603088379, 0.6790000200271606, 0.7039999961853027, 0.7066666483879089, 0.7423333525657654, 0.7453333139419556, 0.7566666603088379, 0.768666684627533, 0.7356666922569275, 0.7693333625793457, 0.7576666474342346, 0.7879999876022339, 0.7776666879653931, 0.7860000133514404, 0.7763333320617676, 0.7870000004768372, 0.7923333048820496, 0.800000011920929, 0.8029999732971191, 0.8013333082199097, 0.7979999780654907, 0.8013333082199097, 0.8136666417121887, 0.8036666512489319, 0.8069999814033508, 0.8253333568572998, 0.8166666626930237, 0.8223333358764648, 0.8226666450500488, 0.8259999752044678, 0.8133333325386047, 0.824999988079071, 0.824999988079071, 0.8253333568572998, 0.8289999961853027, 0.8426666855812073, 0.8370000123977661, 0.8293333053588867, 0.8393333554267883, 0.8376666903495789, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 77, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 3, 3, 9, 2], [2, 0, 3, 1, 5], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 9, 2, 5], [0, 6, 1], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 8, 4, 4, 2, 9, 6, 3, 2, 1, 0, 1, 1, 2, 2, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3094732761383057, 2.309295654296875, 2.3096797466278076, 2.3116557598114014, 2.310565948486328, 2.3099353313446045], "accuracy": [0.08836349099874496, 0.09470347315073013, 0.09126931428909302, 0.08915598690509796, 0.09047681838274002, 0.0936468094587326], "val_loss": [2.3098978996276855, 2.3098978996276855, 2.3098978996276855, 2.3098978996276855, 2.3098978996276855, 2.3098978996276855], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [3, 6, 1, 6, 0], [0, 7], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 4, 3, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092422485351562, 2.3096721172332764, 2.3103885650634766, 2.3109114170074463, 2.3101911544799805, 2.308934450149536], "accuracy": [0.09589222073554993, 0.09047681838274002, 0.08730682730674744, 0.09311848133802414, 0.09179764986038208, 0.0936468094587326], "val_loss": [2.308675765991211, 2.308675765991211, 2.308675765991211, 2.308675765991211, 2.308675765991211, 2.308675765991211], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 6, 4, 1, 6, 5, 4, 6, 1, 8, 5, 3, 8, 1, 1, 5, 5, 1, 7], [0, 6, 1, 2, 0, 1, 4, 7, 3, 7, 5, 3, 1, 7, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 38, 23, 15, 2, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.square(tf.math.pow(alpha, tf.math.divide_no_nan(beta, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.math.multiply(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.math.subtract(grad, tf.math.square(tf.math.square(tf.math.subtract(tf.math.add(sigma, grad), grad))))))))))))), sigma)), alpha), grad))), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311028480529785, 2.310115098953247, 2.3102943897247314, 2.310147523880005, 2.311089277267456, 2.308837890625], "accuracy": [0.09219389408826828, 0.09074098616838455, 0.08770307898521423, 0.08981640636920929, 0.09642054885625839, 0.09589222073554993], "val_loss": [2.3085296154022217, 2.3085296154022217, 2.3085296154022217, 2.3085296154022217, 2.3085296154022217, 2.3085296154022217], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 0, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08657142519950867, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310884714126587, 2.309763193130493, 2.3098742961883545, 2.3102684020996094, 2.310561180114746, 2.309746026992798], "accuracy": [0.09285431355237961, 0.08994849026203156, 0.09642054885625839, 0.09179764986038208, 0.08928807079792023, 0.09219389408826828], "val_loss": [2.3092362880706787, 2.3092362880706787, 2.3092362880706787, 2.3092362880706787, 2.3092362880706787, 2.3092362880706787], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]