[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8031428456306458, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2090511322021484, 1.5943788290023804, 1.1462093591690063, 0.9731423258781433, 0.8685997724533081, 0.816667377948761, 0.7834948897361755, 0.7710394263267517, 0.7329614758491516, 0.6979866623878479, 0.6874732375144958, 0.6867378950119019, 0.665346622467041, 0.6359405517578125, 0.6417071223258972, 0.6077666282653809, 0.6002936959266663, 0.5876545310020447, 0.5814641714096069, 0.5607602596282959, 0.5739849805831909, 0.5743907690048218, 0.5343125462532043, 0.5507878661155701, 0.5331627726554871, 0.5274873375892639, 0.5279988646507263, 0.5141921639442444, 0.5105474591255188, 0.49703410267829895, 0.4999748468399048, 0.4812879264354706, 0.49267661571502686, 0.4770039916038513, 0.46909043192863464, 0.46858343482017517, 0.4591381847858429], "accuracy": [0.2736758589744568, 0.5061418414115906, 0.5914674401283264, 0.648659348487854, 0.6847180128097534, 0.69673752784729, 0.7113987803459167, 0.71100252866745, 0.7272487282752991, 0.7387399077415466, 0.7461365461349487, 0.7380794882774353, 0.7497028112411499, 0.7638356685638428, 0.7556465268135071, 0.767401933670044, 0.7741381525993347, 0.7836481332778931, 0.7823272943496704, 0.7910447716712952, 0.78113853931427, 0.7823272943496704, 0.8026680946350098, 0.7905164361000061, 0.8017435073852539, 0.8013472557067871, 0.7993659973144531, 0.8039889335632324, 0.8087438941001892, 0.8095363974571228, 0.8112534880638123, 0.8207634687423706, 0.8197067975997925, 0.8230088353157043, 0.8252542614936829, 0.8259146809577942, 0.826310932636261], "val_loss": [1.9095773696899414, 1.1551254987716675, 0.8759291172027588, 0.8408724069595337, 0.758947491645813, 0.6934636831283569, 0.6971843242645264, 0.6658940315246582, 0.6303418874740601, 0.6247528195381165, 0.5937578082084656, 0.6728547215461731, 0.582597017288208, 0.6494324207305908, 0.589989423751831, 0.5494961142539978, 0.5532337427139282, 0.5461598634719849, 0.518575131893158, 0.529175341129303, 0.5159812569618225, 0.5241490006446838, 0.5042597055435181, 0.5005228519439697, 0.4846929609775543, 0.523611843585968, 0.5034088492393494, 0.5031313896179199, 0.47448626160621643, 0.4811517000198364, 0.46637651324272156, 0.46193546056747437, 0.47977226972579956, 0.4586350619792938, 0.46075326204299927, 0.45369940996170044, 0.4562092423439026], "val_accuracy": [0.6166666746139526, 0.5849999785423279, 0.6959999799728394, 0.6890000104904175, 0.706333339214325, 0.7453333139419556, 0.7310000061988831, 0.746999979019165, 0.7649999856948853, 0.7596666812896729, 0.7826666831970215, 0.7416666746139526, 0.7820000052452087, 0.7450000047683716, 0.7723333239555359, 0.7853333353996277, 0.7893333435058594, 0.7963333129882812, 0.8103333115577698, 0.7996666431427002, 0.8073333501815796, 0.8083333373069763, 0.8050000071525574, 0.8130000233650208, 0.8169999718666077, 0.8029999732971191, 0.8006666898727417, 0.8176666498184204, 0.8266666531562805, 0.8223333358764648, 0.8246666789054871, 0.8330000042915344, 0.8173333406448364, 0.8316666483879089, 0.8286666870117188, 0.8306666612625122, 0.8276666402816772]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [5, 2, 3, 6, 9, 5], [3, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 0, 3, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 4, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.1794285774230957, "mapping_values": [1, 8, 5, 3, 2, 8, 5, 3, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.7611083984375, 2.318054676055908, 2.382256269454956, 2.304022789001465, 2.303611993789673, 2.30352783203125, 2.303222894668579], "accuracy": [0.1935015171766281, 0.14529123902320862, 0.17051908373832703, 0.09800554811954498, 0.09642054885625839, 0.09734513610601425, 0.09655263274908066], "val_loss": [2.2843880653381348, 2.279573678970337, 2.304229259490967, 2.3029704093933105, 2.3026771545410156, 2.3027050495147705, 2.3026177883148193], "val_accuracy": [0.09700000286102295, 0.17633333802223206, 0.1003333330154419, 0.09966666996479034, 0.10300000011920929, 0.09833333641290665, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [4, 0, 3, 0, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha)))), tf.math.add(tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [2, 2, 2, 2, 3, 5], [0, 2, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 4, 2, 1], [0, 6, 6, 6, 0, 6], [0, 16], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 1, 12, 7, 5, 2, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 2], [16, 62], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 1, 7, 2], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 7, 7, 3, 2, 4, 3, 9, 2, 8, 4, 2, 8], [2, 6, 2, 2, 1, 2, 2, 1, 6, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 11, 6, 5, 2, 24, 14, 10, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.multiply(grad, beta), beta), tf.math.add(tf.math.pow(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.pow(beta, tf.math.add(beta, alpha))), grad))), tf.math.sqrt(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]