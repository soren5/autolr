[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214493751525879, 1.6274968385696411, 1.173989176750183, 0.981914758682251, 0.9196001887321472, 0.8529988527297974, 0.7865488529205322, 0.7959454655647278, 0.7261492609977722, 0.7086844444274902, 0.6914815902709961, 0.6785739660263062, 0.6657111048698425, 0.6471576690673828, 0.629031240940094, 0.6085842251777649, 0.6078250408172607, 0.5998169779777527, 0.5937572121620178, 0.5702813863754272, 0.5699476003646851, 0.5515626072883606, 0.5686269402503967, 0.536620557308197, 0.530441403388977, 0.5314493179321289, 0.527306854724884, 0.5068349242210388, 0.5112054944038391, 0.5030549168586731, 0.49945002794265747, 0.4917261004447937, 0.48398396372795105, 0.4851401150226593, 0.4781413674354553, 0.46182066202163696, 0.46897798776626587, 0.4600754678249359, 0.45137813687324524, 0.44738319516181946, 0.44307780265808105, 0.4312639832496643, 0.4260447025299072, 0.4314364790916443, 0.43214151263237, 0.4267318844795227, 0.4184983968734741, 0.41775697469711304, 0.4183353781700134, 0.4119482636451721, 0.40046435594558716, 0.4065925180912018, 0.39744049310684204, 0.3939409852027893, 0.40693768858909607, 0.3922440707683563, 0.38509196043014526, 0.3829922080039978, 0.38072946667671204, 0.3841439187526703, 0.37633711099624634, 0.3618604242801666, 0.3705306947231293, 0.366721510887146, 0.37079304456710815, 0.3614746630191803, 0.353662371635437, 0.3566528558731079, 0.3513849079608917, 0.35600602626800537, 0.3477349877357483, 0.346904993057251, 0.34869617223739624, 0.3412216007709503, 0.34113627672195435], "accuracy": [0.26641130447387695, 0.4913485646247864, 0.5880332589149475, 0.6494518518447876, 0.6700568199157715, 0.6946242451667786, 0.7160216569900513, 0.7040021419525146, 0.7346453666687012, 0.7351737022399902, 0.7378153204917908, 0.7493065595626831, 0.7572315335273743, 0.7578919529914856, 0.7687227725982666, 0.7721568942070007, 0.7740060687065125, 0.7823272943496704, 0.7799497842788696, 0.7913089394569397, 0.7889314293861389, 0.7976489067077637, 0.7881389260292053, 0.8055738806724548, 0.8014793395996094, 0.8075551390647888, 0.8061022162437439, 0.8120459914207458, 0.8153480291366577, 0.8175934553146362, 0.8128384351730347, 0.8165367841720581, 0.8211596608161926, 0.8203672170639038, 0.8210275769233704, 0.8313300609588623, 0.8252542614936829, 0.8325188159942627, 0.8350284099578857, 0.8384625315666199, 0.8387266993522644, 0.8405758738517761, 0.8475762605667114, 0.8429533839225769, 0.8421608805656433, 0.8455950617790222, 0.8459912538528442, 0.8467837572097778, 0.848368763923645, 0.847840428352356, 0.8500858545303345, 0.8455950617790222, 0.8588033318519592, 0.8512746095657349, 0.8532558679580688, 0.8561616539955139, 0.8590674996376038, 0.8595958352088928, 0.863029956817627, 0.8642187118530273, 0.8656716346740723, 0.867520809173584, 0.8642187118530273, 0.8669924736022949, 0.8625016212463379, 0.868049144744873, 0.8709549307823181, 0.8709549307823181, 0.8704266548156738, 0.8672566413879395, 0.8722757697105408, 0.8720116019248962, 0.8681812286376953, 0.8730682730674744, 0.8751816153526306], "val_loss": [1.9315794706344604, 1.097722053527832, 0.8711560964584351, 0.7779982089996338, 0.834888756275177, 0.6963510513305664, 0.6889021992683411, 0.6220322251319885, 0.6054605841636658, 0.6023173928260803, 0.5780569911003113, 0.5628474354743958, 0.5514274835586548, 0.5841755867004395, 0.5276656150817871, 0.5234904885292053, 0.5240424275398254, 0.5164406895637512, 0.49165067076683044, 0.5302916169166565, 0.49393215775489807, 0.5133272409439087, 0.470192015171051, 0.5111525058746338, 0.49276912212371826, 0.4632694125175476, 0.4654231667518616, 0.4854041039943695, 0.4423248767852783, 0.46631234884262085, 0.44815129041671753, 0.4446989893913269, 0.46689555048942566, 0.44162386655807495, 0.4258723556995392, 0.4392298460006714, 0.4147298038005829, 0.4160587191581726, 0.4203125834465027, 0.41547244787216187, 0.41897404193878174, 0.40606924891471863, 0.41057878732681274, 0.42274975776672363, 0.40279608964920044, 0.39726316928863525, 0.39380013942718506, 0.3962385952472687, 0.3938463628292084, 0.40140771865844727, 0.41374966502189636, 0.399383008480072, 0.38923120498657227, 0.3912771940231323, 0.38278695940971375, 0.38515233993530273, 0.3796271085739136, 0.3767397403717041, 0.38169530034065247, 0.3780185878276825, 0.37527143955230713, 0.38215428590774536, 0.3837220072746277, 0.3922371566295624, 0.37023189663887024, 0.38576701283454895, 0.38527587056159973, 0.3810819387435913, 0.40218400955200195, 0.3712080121040344, 0.3850817382335663, 0.39270710945129395, 0.36746227741241455, 0.3670249879360199, 0.36792823672294617], "val_accuracy": [0.596666693687439, 0.6556666493415833, 0.6949999928474426, 0.7110000252723694, 0.6866666674613953, 0.7386666536331177, 0.7486666440963745, 0.765333354473114, 0.7733333110809326, 0.7676666378974915, 0.7853333353996277, 0.7839999794960022, 0.796999990940094, 0.778333306312561, 0.8003333210945129, 0.8040000200271606, 0.7926666736602783, 0.8063333630561829, 0.8146666884422302, 0.7983333468437195, 0.8119999766349792, 0.8073333501815796, 0.8263333439826965, 0.800000011920929, 0.8096666932106018, 0.8309999704360962, 0.8209999799728394, 0.8090000152587891, 0.8309999704360962, 0.8223333358764648, 0.8343333601951599, 0.8293333053588867, 0.8223333358764648, 0.8306666612625122, 0.8370000123977661, 0.8376666903495789, 0.846666693687439, 0.847000002861023, 0.8420000076293945, 0.8429999947547913, 0.843666672706604, 0.8493333458900452, 0.8486666679382324, 0.8383333086967468, 0.8523333072662354, 0.8529999852180481, 0.8556666374206543, 0.8523333072662354, 0.8536666631698608, 0.8503333330154419, 0.846666693687439, 0.8586666584014893, 0.8576666712760925, 0.8553333282470703, 0.8556666374206543, 0.8583333492279053, 0.859333336353302, 0.862333357334137, 0.8586666584014893, 0.859333336353302, 0.8653333187103271, 0.8573333621025085, 0.8560000061988831, 0.8473333120346069, 0.8659999966621399, 0.862666666507721, 0.8566666841506958, 0.859333336353302, 0.8500000238418579, 0.8666666746139526, 0.8556666374206543, 0.8569999933242798, 0.8633333444595337, 0.8643333315849304, 0.8650000095367432]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 8, 0, 0], [0, 6, 1, 6, 0], [0, 22], [0, 0, 0, 1, 1, 1], [0, 4, 6], [2, 3, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 15, 10, 5, 2, 6, 3, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), alpha)), tf.math.negative(tf.math.negative(grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(beta, sigma), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 5, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2], [3, 0, 3, 1, 0], [95, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 2, 0, 2, 5, 8, 1, 3, 9], [0, 4, 1, 0, 0], [0, 22, 1], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 0, 13, 9, 4, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.sqrt(tf.math.subtract(alpha, tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 2, 1, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 2, 1, 6, 3, 8, 2], [2, 2, 3, 1, 0, 1], [54, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [2, 6, 1, 6, 0], [0, 13], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 12, 6, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(alpha))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 1, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 5, 1, 2, 5, 2, 9, 7, 3], [0, 6, 1, 6, 0, 0], [0, 43, 72, 46], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 15, 9, 6, 4, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(grad, tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094241619110107, 2.309936761856079, 2.309201955795288, 2.311223030090332, 2.310058832168579, 2.3101775646209717], "accuracy": [0.09642054885625839, 0.09100515395402908, 0.09642054885625839, 0.09074098616838455, 0.09219389408826828, 0.09166556596755981], "val_loss": [2.3077850341796875, 2.3077850341796875, 2.3077850341796875, 2.3077850341796875, 2.3077850341796875, 2.3077850341796875], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]