[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2107725143432617, 1.6035921573638916, 1.1736187934875488, 0.9935997724533081, 0.9091129899024963, 0.835555911064148, 0.8105626702308655, 0.7574565410614014, 0.7418841123580933, 0.735400915145874, 0.6938803791999817, 0.6796450614929199, 0.6538348197937012, 0.652251660823822, 0.6401558518409729, 0.6533154249191284, 0.6169556975364685, 0.6137829422950745, 0.6074771881103516, 0.5874475240707397, 0.5806223154067993, 0.5747164487838745, 0.5691656470298767, 0.5533030033111572, 0.5437967777252197, 0.5429983735084534, 0.5236008763313293, 0.5245304703712463, 0.5252307057380676, 0.5136986970901489, 0.49461454153060913, 0.5121659636497498, 0.4979289174079895, 0.4831997752189636, 0.49213483929634094, 0.49302002787590027, 0.4734398424625397, 0.48104673624038696, 0.4583556056022644, 0.46578651666641235, 0.4576779305934906, 0.46892133355140686, 0.4529898166656494, 0.4532877802848816, 0.4374096691608429, 0.4418908655643463, 0.44398224353790283, 0.42935439944267273, 0.42751097679138184, 0.4249730110168457, 0.4240153729915619, 0.42802515625953674, 0.4120347797870636, 0.41637271642684937, 0.4083464443683624, 0.4056917726993561, 0.4137275218963623], "accuracy": [0.2627129852771759, 0.514198899269104, 0.5929203629493713, 0.644300639629364, 0.6723021864891052, 0.6979262828826904, 0.7069079279899597, 0.7220974564552307, 0.7195879220962524, 0.7265883088111877, 0.7461365461349487, 0.7491744756698608, 0.7621186375617981, 0.7652885913848877, 0.7594769597053528, 0.7578919529914856, 0.7733456492424011, 0.7730814814567566, 0.7728173136711121, 0.7819310426712036, 0.7841764688491821, 0.7878747582435608, 0.7885351777076721, 0.7935543656349182, 0.7964601516723633, 0.8033285140991211, 0.8125742673873901, 0.8034605979919434, 0.8068947196006775, 0.811649739742279, 0.8181217908859253, 0.8101968169212341, 0.81548011302948, 0.8239334225654602, 0.8206313848495483, 0.8197067975997925, 0.8244617581367493, 0.8182538747787476, 0.8281601071357727, 0.8252542614936829, 0.8325188159942627, 0.8255184292793274, 0.8370096683502197, 0.833179235458374, 0.8359529972076416, 0.8362171649932861, 0.834632158279419, 0.8438779711723328, 0.842028796672821, 0.8413683772087097, 0.8474441766738892, 0.8429533839225769, 0.8441421389579773, 0.844010055065155, 0.8482366800308228, 0.852859616279602, 0.8422929644584656], "val_loss": [1.9193583726882935, 1.1066282987594604, 0.9191489815711975, 0.8043718934059143, 0.7419204711914062, 0.7038137912750244, 0.7068606019020081, 0.6517691612243652, 0.6510326862335205, 0.6108824014663696, 0.6217643022537231, 0.5692161321640015, 0.6094908118247986, 0.5813454389572144, 0.6417186856269836, 0.5467796325683594, 0.5350414514541626, 0.5339163541793823, 0.5217682123184204, 0.5347761511802673, 0.5317463278770447, 0.5641709566116333, 0.5061370134353638, 0.5005896091461182, 0.492347776889801, 0.48647546768188477, 0.4855176508426666, 0.4946441948413849, 0.5157654881477356, 0.47213029861450195, 0.4683191776275635, 0.4633048474788666, 0.46161922812461853, 0.47841984033584595, 0.49242717027664185, 0.46350929141044617, 0.4731079041957855, 0.45350784063339233, 0.4434267580509186, 0.4513356387615204, 0.4473942816257477, 0.4365924596786499, 0.4397777020931244, 0.44427433609962463, 0.42996740341186523, 0.4262009263038635, 0.4246582090854645, 0.4233672320842743, 0.4263412654399872, 0.4202820956707001, 0.42525023221969604, 0.41040104627609253, 0.431712806224823, 0.41833528876304626, 0.41676539182662964, 0.4192274212837219, 0.4220162630081177], "val_accuracy": [0.5590000152587891, 0.6413333415985107, 0.6633333563804626, 0.7093333601951599, 0.7133333086967468, 0.7329999804496765, 0.7416666746139526, 0.7573333382606506, 0.7580000162124634, 0.7733333110809326, 0.7673333287239075, 0.7903333306312561, 0.7580000162124634, 0.7796666622161865, 0.7519999742507935, 0.8009999990463257, 0.8016666769981384, 0.8056666851043701, 0.8006666898727417, 0.7973333597183228, 0.796999990940094, 0.7886666655540466, 0.8100000023841858, 0.8163333535194397, 0.8183333277702332, 0.8130000233650208, 0.8206666707992554, 0.8130000233650208, 0.8133333325386047, 0.8306666612625122, 0.8306666612625122, 0.8306666612625122, 0.8333333134651184, 0.8236666917800903, 0.8106666803359985, 0.8356666564941406, 0.8213333487510681, 0.8316666483879089, 0.8366666436195374, 0.8303333520889282, 0.8396666646003723, 0.843999981880188, 0.8413333296775818, 0.8363333344459534, 0.8423333168029785, 0.8516666889190674, 0.8523333072662354, 0.8553333282470703, 0.8546666502952576, 0.8569999933242798, 0.8489999771118164, 0.8600000143051147, 0.8453333377838135, 0.8526666760444641, 0.8560000061988831, 0.8539999723434448, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 8, 1, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 6, 2, 1], [0, 1, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1761541888.0, 2057194112.0, 2052236032.0, 2042570880.0, 2053982336.0, 2040429056.0], "accuracy": [0.09391097724437714, 0.10117553919553757, 0.10210011899471283, 0.10276053100824356, 0.09800554811954498, 0.10276053100824356], "val_loss": [1650865792.0, 1650865792.0, 1650865792.0, 1650865792.0, 1650865664.0, 1650865792.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 2, 0, 3], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [83, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 2, 5, 2, 8], [0, 6, 1, 6, 0], [0, 57], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1118226432.0, 21079265280.0, 97256906752.0, 271657107456.0, 589808205824.0, 1087226970112.0], "accuracy": [0.10157178342342377, 0.1026284471154213, 0.09906221181154251, 0.10249637067317963, 0.09642054885625839, 0.10421344637870789], "val_loss": [5157139456.0, 41252052992.0, 139220074496.0, 329995354112.0, 644515692544.0, 1113711706112.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [56, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 3], [0, 22], [0, 0, 1, 1], [0, 4], [6, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 5, 3, 2, 1, 12, 7, 5, 1, 4, 2, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(grad, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 3], [0, 0, 1, 0, 2, 1], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 2, 2, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [82, 22], [0, 1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 13, 7, 6, 3, 1, 0, 1, 0, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310391664505005, 2.309208393096924, 2.310153007507324, 2.3100461959838867, 2.3104970455169678, 2.309547185897827], "accuracy": [0.09245806187391281, 0.09708096832036972, 0.09377889335155487, 0.09325055778026581, 0.0886276587843895, 0.09298639744520187], "val_loss": [2.307898759841919, 2.307898759841919, 2.307898759841919, 2.307898759841919, 2.307898759841919, 2.307898759841919], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]