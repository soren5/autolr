[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118940353393555, 1.6008291244506836, 1.1315302848815918, 0.9830746054649353, 0.8585758209228516, 0.7933688759803772, 0.7636814117431641, 0.7405740022659302, 0.7090533971786499, 0.6941928863525391, 0.6728562116622925, 0.6519798040390015, 0.638496994972229, 0.63257896900177, 0.6172518730163574, 0.5978125929832458, 0.5771390199661255, 0.5815329551696777, 0.5865043997764587, 0.5526044964790344, 0.540527880191803, 0.5351068377494812, 0.5253521203994751, 0.5417611598968506, 0.5058948397636414, 0.5198360085487366, 0.5059947967529297, 0.4975656270980835, 0.49749958515167236, 0.4868216812610626, 0.4907016456127167, 0.4668990969657898, 0.4788628816604614, 0.4561831057071686, 0.45978790521621704, 0.4696640968322754, 0.4569438099861145, 0.45449474453926086, 0.4437014162540436, 0.4407472610473633, 0.43458908796310425, 0.437545508146286, 0.43167710304260254, 0.42344897985458374, 0.42255347967147827, 0.4102557301521301, 0.41740962862968445, 0.4169699549674988, 0.40846607089042664, 0.4002809226512909, 0.3953981399536133, 0.3980375826358795, 0.39619889855384827, 0.3814127743244171, 0.39784401655197144, 0.3871573209762573, 0.3813304007053375], "accuracy": [0.27103421092033386, 0.5065380930900574, 0.6028265953063965, 0.6460176706314087, 0.693831741809845, 0.7148329019546509, 0.7143045663833618, 0.7253995537757874, 0.7349095344543457, 0.7411174178123474, 0.748249888420105, 0.7481178045272827, 0.7565711140632629, 0.7644960880279541, 0.7693831920623779, 0.7753269076347351, 0.7839123010635376, 0.7858935594558716, 0.7795535326004028, 0.7927618622779846, 0.7915731072425842, 0.8005547523498535, 0.8042530417442322, 0.7947431206703186, 0.8138951063156128, 0.8055738806724548, 0.8140271902084351, 0.8142913579940796, 0.8138951063156128, 0.8144234418869019, 0.8191784620285034, 0.8276317715644836, 0.8215559124946594, 0.8274996876716614, 0.8294808864593506, 0.8227446675300598, 0.8338396549224854, 0.8304054737091064, 0.8333113193511963, 0.8380662798881531, 0.8403117060661316, 0.8360850811004639, 0.8384625315666199, 0.8413683772087097, 0.8430854678153992, 0.8474441766738892, 0.844010055065155, 0.845859169960022, 0.8492933511734009, 0.8537842035293579, 0.8535200357437134, 0.854708731174469, 0.8494254350662231, 0.8584070801734924, 0.8482366800308228, 0.8588033318519592, 0.8584070801734924], "val_loss": [1.9294780492782593, 1.1034228801727295, 0.9431469440460205, 0.8068726658821106, 0.752051830291748, 0.677608072757721, 0.6880853772163391, 0.6722941994667053, 0.6825211644172668, 0.6565212607383728, 0.599180281162262, 0.5987743735313416, 0.5767619609832764, 0.573793888092041, 0.5968340039253235, 0.559249997138977, 0.5363309979438782, 0.6336860060691833, 0.5304354429244995, 0.5230161547660828, 0.5237970948219299, 0.5120765566825867, 0.5220906734466553, 0.5169230103492737, 0.503436267375946, 0.5162593722343445, 0.5094223022460938, 0.49291661381721497, 0.4899473488330841, 0.4757067859172821, 0.48062899708747864, 0.48524171113967896, 0.47472989559173584, 0.4699397087097168, 0.4879007041454315, 0.4672640860080719, 0.45975902676582336, 0.4820597767829895, 0.45739102363586426, 0.45818692445755005, 0.4556099772453308, 0.458713173866272, 0.45478931069374084, 0.4492814838886261, 0.4439733028411865, 0.4405039846897125, 0.43411532044410706, 0.4451109766960144, 0.43493208289146423, 0.44270628690719604, 0.4443202614784241, 0.4311485290527344, 0.43138280510902405, 0.4366801679134369, 0.44227197766304016, 0.4320264458656311, 0.4382779896259308], "val_accuracy": [0.5103333592414856, 0.6396666765213013, 0.6463333368301392, 0.7089999914169312, 0.706333339214325, 0.7473333477973938, 0.7250000238418579, 0.7353333234786987, 0.753000020980835, 0.7333333492279053, 0.7596666812896729, 0.765666663646698, 0.7773333191871643, 0.7846666574478149, 0.762333333492279, 0.7933333516120911, 0.7976666688919067, 0.7576666474342346, 0.8076666593551636, 0.8073333501815796, 0.7986666560173035, 0.8100000023841858, 0.7956666946411133, 0.8033333420753479, 0.8106666803359985, 0.7960000038146973, 0.8069999814033508, 0.8143333196640015, 0.8203333616256714, 0.8270000219345093, 0.8206666707992554, 0.8183333277702332, 0.8266666531562805, 0.828000009059906, 0.8183333277702332, 0.828000009059906, 0.8296666741371155, 0.8173333406448364, 0.8360000252723694, 0.8293333053588867, 0.8383333086967468, 0.8289999961853027, 0.8343333601951599, 0.8386666774749756, 0.840666651725769, 0.8399999737739563, 0.8463333249092102, 0.840666651725769, 0.8446666598320007, 0.8370000123977661, 0.8410000205039978, 0.846666693687439, 0.843666672706604, 0.8356666564941406, 0.8393333554267883, 0.8443333506584167, 0.8429999947547913]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [7, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2, 3], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 2, 2, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 0, 1, 6, 4], [0, 22], [0, 0, 1, 1], [0, 7], [2, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 2, 1, 1, 0, 10, 6, 4, 2, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 3, 2, 8, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 6, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 2, 5, 2, 1], [0, 6, 1, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [3, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 8, 2, 5, 4, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302800178527832, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 49, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310091495513916, 2.309523582458496, 2.3089828491210938, 2.309563636779785, 2.3100714683532715, 2.310051918029785], "accuracy": [0.09377889335155487, 0.09126931428909302, 0.09457138925790787, 0.0944393053650856, 0.09047681838274002, 0.08585391938686371], "val_loss": [2.308011293411255, 2.308011293411255, 2.308011293411255, 2.308011293411255, 2.308011293411255, 2.308011293411255], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]