[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2100064754486084, 1.6044560670852661, 1.1532610654830933, 0.9895926713943481, 0.8610493540763855, 0.8356204628944397, 0.7839338183403015, 0.7494398355484009, 0.7098108530044556, 0.6998032331466675, 0.7020502090454102, 0.6507614850997925, 0.6536718010902405, 0.6336582899093628, 0.6212874054908752, 0.6032853722572327, 0.600752592086792, 0.5910041332244873, 0.5768918395042419, 0.5537170171737671, 0.5635042786598206, 0.5473939180374146, 0.5378373861312866, 0.5257313847541809, 0.5259883999824524, 0.5245810151100159, 0.5174645781517029, 0.4983666241168976, 0.5031036138534546], "accuracy": [0.27737417817115784, 0.5132743120193481, 0.601109504699707, 0.6482630968093872, 0.6880200505256653, 0.6988508701324463, 0.7149649858474731, 0.7213049530982971, 0.7424382567405701, 0.7434949278831482, 0.7413815855979919, 0.7563069462776184, 0.7577598690986633, 0.7651565074920654, 0.763439416885376, 0.7714964747428894, 0.7835160493850708, 0.7868181467056274, 0.783119797706604, 0.7964601516723633, 0.7967243194580078, 0.7989697456359863, 0.802800178527832, 0.8131026029586792, 0.8034605979919434, 0.8068947196006775, 0.8088759779930115, 0.8189142942428589, 0.8162726163864136], "val_loss": [1.918345332145691, 1.097428560256958, 0.9836903214454651, 0.7796860933303833, 0.7807241082191467, 0.7049919962882996, 0.6517659425735474, 0.640655517578125, 0.6502444744110107, 0.6738048195838928, 0.6221647262573242, 0.5824915170669556, 0.5694646835327148, 0.581551730632782, 0.5763834118843079, 0.5455864071846008, 0.5541025996208191, 0.5389052629470825, 0.5467417240142822, 0.5160062313079834, 0.5238051414489746, 0.5109244585037231, 0.5022212862968445, 0.4900694489479065, 0.5272608995437622, 0.5030873417854309, 0.4991733431816101, 0.5131778120994568, 0.48681318759918213], "val_accuracy": [0.5376666784286499, 0.6466666460037231, 0.6349999904632568, 0.7126666903495789, 0.6990000009536743, 0.7306666374206543, 0.7556666731834412, 0.762333333492279, 0.7576666474342346, 0.7596666812896729, 0.762666642665863, 0.7736666798591614, 0.7803333401679993, 0.7789999842643738, 0.7839999794960022, 0.7973333597183228, 0.7916666865348816, 0.8019999861717224, 0.7990000247955322, 0.8023333549499512, 0.8029999732971191, 0.8069999814033508, 0.8029999732971191, 0.8163333535194397, 0.7996666431427002, 0.8096666932106018, 0.8119999766349792, 0.7926666736602783, 0.8143333196640015]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 5, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 58, 5], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 0, 2, 5, 2, 1, 0, 5], [0, 3, 1, 4, 1], [0], [1], [0], [6], [0]], "fitness": -0.2125714272260666, "mapping_values": [1, 7, 4, 3, 2, 12, 7, 5, 3, 14, 9, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(alpha, grad)))), tf.math.negative(tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.108818054199219, 2.3070993423461914, 2.3037054538726807, 2.3018624782562256, 2.3207216262817383, 2.2739665508270264, 2.3060171604156494, 2.303388833999634, 2.303257703781128], "accuracy": [0.19482234120368958, 0.09906221181154251, 0.09985470771789551, 0.11055342853069305, 0.14317791163921356, 0.14053626358509064, 0.09972262382507324, 0.09985470771789551, 0.09655263274908066], "val_loss": [2.3096470832824707, 2.304004669189453, 2.302619218826294, 2.2912790775299072, 2.284040689468384, 2.3096301555633545, 2.3035922050476074, 2.3028945922851562, 2.3027074337005615], "val_accuracy": [0.09933333098888397, 0.10233332961797714, 0.09933333098888397, 0.21299999952316284, 0.10866666585206985, 0.09833333641290665, 0.09833333641290665, 0.0963333323597908, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [3, 0, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [90], [0, 0, 0, 0, 1, 1], [0, 5, 4, 0], [2, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 2, 1, 1, 0, 5, 3, 2, 1, 6, 4, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.negative(beta), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 3, 2, 3, 9], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 2, 0], [86, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [19, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 7, 3, 2, 3, 5, 1, 1, 6, 3, 9, 3, 5, 4, 1, 2, 5, 4], [0, 2, 0, 0, 0, 2, 3, 0, 3, 1, 3, 1, 2], [0, 39, 39, 30, 83, 77], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 2, 2, 2, 6, 1], [0, 6, 1, 6, 0, 2, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 31, 18, 13, 6, 1, 0, 1, 0, 15, 8, 7, 2, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.subtract(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad)))), grad)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.pow(alpha, grad)), alpha), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(alpha, grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310537099838257, 2.3098230361938477, 2.3104543685913086, 2.308924436569214, 2.309145212173462, 2.3098971843719482], "accuracy": [0.09628847241401672, 0.08889182657003403, 0.09008057415485382, 0.09272222965955734, 0.09602430462837219, 0.09866596013307571], "val_loss": [2.308215856552124, 2.308215856552124, 2.308215856552124, 2.308215856552124, 2.308215856552124, 2.308215856552124], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]