[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8097142577171326, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099719047546387, 1.6115524768829346, 1.171363353729248, 0.95296710729599, 0.8991583585739136, 0.8095847964286804, 0.7956540584564209, 0.7497478127479553, 0.7236416935920715, 0.7015752792358398, 0.682693600654602, 0.6748568415641785, 0.6396580338478088, 0.6407516598701477, 0.6124513745307922, 0.6235232949256897, 0.5929685235023499, 0.5833452343940735, 0.5786648392677307, 0.5616089701652527, 0.5754445791244507, 0.5492197275161743, 0.5565593838691711, 0.5445539951324463, 0.5308164954185486, 0.5142132639884949, 0.5255542397499084, 0.5034732222557068, 0.49925246834754944, 0.5018084645271301, 0.4881782829761505, 0.48779988288879395, 0.4802931845188141, 0.47071558237075806, 0.4607349932193756, 0.45610764622688293, 0.4568714201450348, 0.455350786447525, 0.45380112528800964, 0.45007020235061646, 0.445701003074646, 0.4499695301055908, 0.4410598874092102, 0.4305182993412018, 0.4384867250919342, 0.4248989224433899, 0.41678565740585327, 0.4199422001838684, 0.4168564975261688, 0.41079631447792053, 0.40305545926094055, 0.4033146798610687, 0.4073542654514313, 0.39638224244117737, 0.3939696252346039, 0.39307481050491333, 0.39234670996665955, 0.39052093029022217, 0.3865354359149933, 0.3803486227989197, 0.3858792781829834, 0.3757580816745758, 0.37307271361351013, 0.3647080361843109], "accuracy": [0.2641659080982208, 0.4991414546966553, 0.5865803956985474, 0.6581693291664124, 0.6716417670249939, 0.6984546184539795, 0.7078325152397156, 0.7201162576675415, 0.7360982894897461, 0.7354378700256348, 0.7448157668113708, 0.7452120184898376, 0.7582882046699524, 0.7602694630622864, 0.7716285586357117, 0.7643640041351318, 0.78113853931427, 0.7844406366348267, 0.7844406366348267, 0.785629391670227, 0.7878747582435608, 0.7948752045631409, 0.7905164361000061, 0.7980451583862305, 0.8025360107421875, 0.8119139075279236, 0.8054417967796326, 0.8113855719566345, 0.8120459914207458, 0.8141592741012573, 0.8162726163864136, 0.8183859586715698, 0.8207634687423706, 0.8231409192085266, 0.828820526599884, 0.8329150676727295, 0.8317263126373291, 0.8341038227081299, 0.8325188159942627, 0.8342359066009521, 0.834632158279419, 0.8281601071357727, 0.8355567455291748, 0.8432175517082214, 0.8413683772087097, 0.8408400416374207, 0.8425571322441101, 0.8487650156021118, 0.8462554216384888, 0.852331280708313, 0.854708731174469, 0.8549728989601135, 0.8490291833877563, 0.8539162874221802, 0.8565579056739807, 0.8576145768165588, 0.8594637513160706, 0.8553691506385803, 0.8594637513160706, 0.8636903762817383, 0.8545766472816467, 0.8613129258155823, 0.8599920868873596, 0.8643507957458496], "val_loss": [1.9229586124420166, 1.0937917232513428, 0.858230471611023, 0.7782195806503296, 0.7295677661895752, 0.7145896553993225, 0.6558432579040527, 0.6496737599372864, 0.5956370830535889, 0.5976963639259338, 0.595582127571106, 0.5758720636367798, 0.5913548469543457, 0.5444852709770203, 0.568365752696991, 0.555683434009552, 0.5267248749732971, 0.5498942732810974, 0.5183802247047424, 0.49315181374549866, 0.5157228112220764, 0.47839412093162537, 0.49135658144950867, 0.49360519647598267, 0.4796506464481354, 0.4682040214538574, 0.45755502581596375, 0.47341421246528625, 0.4826938807964325, 0.45863768458366394, 0.4455583095550537, 0.456316739320755, 0.4581088125705719, 0.4411565661430359, 0.4305514991283417, 0.4467020630836487, 0.4300447106361389, 0.42873436212539673, 0.41789713501930237, 0.42340975999832153, 0.454682856798172, 0.4231393337249756, 0.4152040183544159, 0.4091446101665497, 0.4310181140899658, 0.402779221534729, 0.4116925597190857, 0.40436646342277527, 0.38986003398895264, 0.3924187421798706, 0.3943106234073639, 0.4176611602306366, 0.3870929479598999, 0.3929833471775055, 0.39889606833457947, 0.3869856894016266, 0.3883856236934662, 0.3935277462005615, 0.37251824140548706, 0.39466503262519836, 0.378038614988327, 0.3878251612186432, 0.3778109848499298, 0.37823209166526794], "val_accuracy": [0.5953333377838135, 0.640333354473114, 0.7006666660308838, 0.7099999785423279, 0.721666693687439, 0.7310000061988831, 0.7490000128746033, 0.7590000033378601, 0.7693333625793457, 0.7713333368301392, 0.7743333578109741, 0.7776666879653931, 0.7733333110809326, 0.7986666560173035, 0.7853333353996277, 0.7913333177566528, 0.8056666851043701, 0.7956666946411133, 0.8046666383743286, 0.8190000057220459, 0.8063333630561829, 0.8230000138282776, 0.8273333311080933, 0.8050000071525574, 0.8273333311080933, 0.8259999752044678, 0.82833331823349, 0.8206666707992554, 0.8100000023841858, 0.8273333311080933, 0.8343333601951599, 0.8386666774749756, 0.8323333263397217, 0.8363333344459534, 0.8456666469573975, 0.840666651725769, 0.8413333296775818, 0.8410000205039978, 0.8513333201408386, 0.8473333120346069, 0.8303333520889282, 0.8476666808128357, 0.8516666889190674, 0.8519999980926514, 0.8403333425521851, 0.8579999804496765, 0.8399999737739563, 0.8523333072662354, 0.859666645526886, 0.8603333234786987, 0.8566666841506958, 0.843666672706604, 0.8616666793823242, 0.8516666889190674, 0.8543333411216736, 0.8629999756813049, 0.859333336353302, 0.8519999980926514, 0.8679999709129333, 0.8553333282470703, 0.859666645526886, 0.8603333234786987, 0.8619999885559082, 0.8606666922569275]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6, 7], [2, 0, 3, 1, 0, 1, 3], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 5, 2, 5, 2, 8], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 16, 9, 7, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.math.sqrt(grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7349606113477413e+28, 2.464071565062021e+28, 1.8793741201687572e+28, 1.7780923456190312e+28, 1.7710270950648478e+28, 1.8784911556956226e+28, 2.015316175756153e+28, 1.8299864308992857e+28, 2.487145047697322e+28, 2.360919025030106e+28, 1.8739491836123986e+28, 2.2171378410811464e+28], "accuracy": [0.11108175665140152, 0.11266675591468811, 0.11293092370033264, 0.1150442510843277, 0.11161009222269058, 0.10751552134752274, 0.11227050423622131, 0.11332716792821884, 0.11398758739233017, 0.11253467202186584, 0.1150442510843277, 0.11042134463787079], "val_loss": [2.370196822340676e+28, 2.3703276318922514e+28, 2.3700213864258373e+28, 2.370175571691503e+28, 2.370172502153289e+28, 2.3701729743899374e+28, 2.370172029916641e+28, 2.37017084932502e+28, 2.3701696687333994e+28, 2.370168960378427e+28, 2.3701680159051304e+28, 2.3701668353135097e+28], "val_accuracy": [0.12833333015441895, 0.12966667115688324, 0.12999999523162842, 0.1303333342075348, 0.12933333218097687, 0.12999999523162842, 0.13066667318344116, 0.13066667318344116, 0.12999999523162842, 0.12999999523162842, 0.1303333342075348, 0.1303333342075348]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 6, 4, 5, 0, 3, 6, 2, 9], [0, 2, 1, 0, 2, 3, 0], [0, 39, 39, 2], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [9, 2, 0, 2, 3, 4, 5], [0, 6, 1, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 18, 11, 7, 4, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.square(tf.math.negative(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.divide_no_nan(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104469776153564, 2.3099758625030518, 2.3100266456604004, 2.3093221187591553, 2.308769941329956, 2.309906005859375], "accuracy": [0.08677849918603897, 0.09179764986038208, 0.09232597798109055, 0.0952318087220192, 0.09113723784685135, 0.08994849026203156], "val_loss": [2.3089582920074463, 2.3089582920074463, 2.3089582920074463, 2.3089582920074463, 2.3089582920074463, 2.3089582920074463], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 2, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [2, 2, 0, 2, 5, 2, 4, 3, 0, 0, 2, 9], [0, 6, 0, 6, 0, 4, 7], [0, 98, 17, 38], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 11, 6, 5, 3, 9, 6, 3, 1, 19, 12, 7, 4, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(grad, tf.math.multiply(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(grad, grad)))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103721141815186, 2.309680938720703, 2.309749126434326, 2.310800790786743, 2.3106629848480225, 2.3104255199432373], "accuracy": [0.09430722147226334, 0.09589222073554993, 0.09589222073554993, 0.09338264167308807, 0.08994849026203156, 0.0944393053650856], "val_loss": [2.3094289302825928, 2.3094289302825928, 2.3094289302825928, 2.3094289302825928, 2.3094289302825928, 2.3094289302825928], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9, 0, 6], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.07914285361766815, "mapping_values": [1, 6, 4, 2, 3, 13, 9, 4, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [34502016.0, 45051960.0, 46861828.0, 46725948.0, 48334984.0, 48368220.0, 48637124.0, 49138340.0], "accuracy": [0.09457138925790787, 0.09787346422672272, 0.09272222965955734, 0.09179764986038208, 0.09100515395402908, 0.08215559273958206, 0.09034473448991776, 0.09060890227556229], "val_loss": [40345372.0, 40349588.0, 40445448.0, 40455708.0, 40467392.0, 39529060.0, 39503636.0, 39507260.0], "val_accuracy": [0.06433333456516266, 0.06300000101327896, 0.07066666334867477, 0.07000000029802322, 0.070333331823349, 0.05900000035762787, 0.05999999865889549, 0.059333331882953644]}}]