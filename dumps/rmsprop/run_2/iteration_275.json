[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099716663360596, 1.6209747791290283, 1.163448691368103, 1.0078792572021484, 0.9335911273956299, 0.8250857591629028, 0.7985283136367798, 0.7559513449668884, 0.7637670636177063, 0.7131173610687256, 0.6973482370376587, 0.6947688460350037, 0.6654626727104187, 0.6409761905670166, 0.639620304107666, 0.6358305811882019, 0.6057403683662415, 0.6014572381973267, 0.5940632224082947, 0.5731796026229858, 0.5740243196487427, 0.5552428960800171, 0.556627094745636, 0.5607435703277588, 0.5466475486755371, 0.5349835753440857, 0.526678204536438, 0.5180330276489258, 0.5189504623413086, 0.5175386071205139, 0.5095105171203613, 0.4968140721321106, 0.4979774057865143, 0.48479601740837097, 0.49060261249542236, 0.46755608916282654, 0.47472628951072693, 0.47228389978408813, 0.46143144369125366, 0.4620765745639801, 0.4492828845977783, 0.4504876732826233, 0.4410195052623749, 0.4482852518558502, 0.44210296869277954, 0.4354900121688843, 0.4284786283969879, 0.4272621273994446, 0.425914466381073, 0.4158063530921936, 0.4200102984905243], "accuracy": [0.2712983787059784, 0.49451854825019836, 0.5894861817359924, 0.6384889483451843, 0.6623960137367249, 0.6964733600616455, 0.6996433734893799, 0.7172104120254517, 0.7166820764541626, 0.7351737022399902, 0.7374191284179688, 0.7392682433128357, 0.7464007139205933, 0.7586844563484192, 0.7629110813140869, 0.7618544697761536, 0.7705719470977783, 0.7763835787773132, 0.7757231593132019, 0.7903843522071838, 0.7839123010635376, 0.7950072884559631, 0.7874785661697388, 0.7897239327430725, 0.7969884872436523, 0.8049134612083435, 0.8013472557067871, 0.8082155585289001, 0.8013472557067871, 0.81112140417099, 0.8072909712791443, 0.8150838613510132, 0.8175934553146362, 0.8230088353157043, 0.8162726163864136, 0.8265751004219055, 0.8241975903511047, 0.8286884427070618, 0.8302733898162842, 0.8274996876716614, 0.8352925777435303, 0.830669641494751, 0.8356888294219971, 0.8327829837799072, 0.8366134166717529, 0.8368775844573975, 0.8362171649932861, 0.8424250483512878, 0.8466516733169556, 0.8436138033866882, 0.8481045961380005], "val_loss": [1.9246279001235962, 1.1325136423110962, 0.9454835653305054, 0.8021417856216431, 0.7124008536338806, 0.7001917362213135, 0.6687415242195129, 0.7095874547958374, 0.6280500292778015, 0.627632737159729, 0.5725833177566528, 0.6375836730003357, 0.5637705326080322, 0.5556489825248718, 0.5581265687942505, 0.550950825214386, 0.5356322526931763, 0.5425638556480408, 0.5218977332115173, 0.5110633373260498, 0.5001734495162964, 0.5223227739334106, 0.5102846622467041, 0.48043709993362427, 0.47268155217170715, 0.49135708808898926, 0.48822298645973206, 0.4698064923286438, 0.4731392562389374, 0.45233553647994995, 0.45963147282600403, 0.47333645820617676, 0.44571322202682495, 0.4510365426540375, 0.4383313059806824, 0.44411003589630127, 0.43340933322906494, 0.43651753664016724, 0.4345346987247467, 0.42129358649253845, 0.4303224980831146, 0.4145883321762085, 0.4114249646663666, 0.42583951354026794, 0.4158482253551483, 0.4092370867729187, 0.4066532254219055, 0.41348713636398315, 0.40690839290618896, 0.42200976610183716, 0.4063038229942322], "val_accuracy": [0.5736666917800903, 0.5899999737739563, 0.6713333129882812, 0.6809999942779541, 0.7393333315849304, 0.7163333296775818, 0.7426666617393494, 0.7206666469573975, 0.7649999856948853, 0.7383333444595337, 0.7889999747276306, 0.7403333187103271, 0.7766666412353516, 0.7903333306312561, 0.7839999794960022, 0.7889999747276306, 0.7983333468437195, 0.7833333611488342, 0.8090000152587891, 0.8003333210945129, 0.8193333148956299, 0.8003333210945129, 0.8036666512489319, 0.8263333439826965, 0.8266666531562805, 0.8166666626930237, 0.8186666369438171, 0.8256666660308838, 0.828000009059906, 0.8356666564941406, 0.8209999799728394, 0.8203333616256714, 0.8366666436195374, 0.8323333263397217, 0.8389999866485596, 0.8383333086967468, 0.8373333215713501, 0.8420000076293945, 0.843666672706604, 0.8453333377838135, 0.8376666903495789, 0.8460000157356262, 0.8446666598320007, 0.8393333554267883, 0.8443333506584167, 0.8483333587646484, 0.8460000157356262, 0.8373333215713501, 0.8479999899864197, 0.8349999785423279, 0.843666672706604]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 8, 4, 3, 6], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [44, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 0, 7, 5, 4, 1, 2, 6, 2, 0, 5], [0, 6, 1, 6, 0, 2, 0, 0, 3], [21, 22, 82, 59], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 1, 21, 12, 9, 4, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), beta), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037633895874023, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 0], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 85], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 0, 2, 2, 2, 1, 2, 3, 5, 1, 2, 6, 9, 0, 7, 0, 5], [0, 6, 1, 5, 6, 2, 1, 3, 5, 6, 2], [95, 22], [0, 0, 1, 1], [0, 3], [2, 0], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 12, 7, 5, 3, 12, 7, 5, 2, 29, 18, 11, 2, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(alpha, tf.math.square(grad)))), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.negative(alpha)))), sigma)), grad), grad)), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3102948665618896, 2.3094887733459473, 2.309767484664917, 2.309940814971924, 2.310763120651245, 2.309551954269409], "accuracy": [0.09893012791872025, 0.09351472556591034, 0.09285431355237961, 0.08981640636920929, 0.08770307898521423, 0.09866596013307571], "val_loss": [2.3084397315979004, 2.3084397315979004, 2.3084397315979004, 2.3084397315979004, 2.3084397315979004, 2.3084397315979004], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [9, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 0], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [7, 2, 0, 2, 5], [0, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309044122695923, 2.3093416690826416, 2.3099844455718994, 2.3095085620880127, 2.3095309734344482, 2.308769464492798], "accuracy": [0.0944393053650856, 0.09298639744520187, 0.09549596905708313, 0.09338264167308807, 0.08942015469074249, 0.09800554811954498], "val_loss": [2.3094840049743652, 2.3094840049743652, 2.3094840049743652, 2.3094840049743652, 2.3094840049743652, 2.3094840049743652], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [8, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [55, 39, 39], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 3, 5, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 5, 5, 2, 8], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310326099395752, 2.3099770545959473, 2.3104448318481445, 2.310030698776245, 2.3098273277282715, 2.3087587356567383], "accuracy": [0.08968432247638702, 0.08440100401639938, 0.09060890227556229, 0.09034473448991776, 0.09087307006120682, 0.09655263274908066], "val_loss": [2.308802843093872, 2.308802843093872, 2.308802843093872, 2.308802843093872, 2.308802843093872, 2.308802843093872], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]