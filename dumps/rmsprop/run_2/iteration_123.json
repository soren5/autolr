[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210747003555298, 1.6095163822174072, 1.1534788608551025, 1.0022623538970947, 0.9127838015556335, 0.8452409505844116, 0.7905045747756958, 0.768849790096283, 0.7528095245361328, 0.7077629566192627, 0.6847876310348511, 0.7026596665382385, 0.6540352702140808, 0.6354081630706787, 0.6172506809234619, 0.6280454993247986, 0.6105339527130127, 0.6095890998840332, 0.5876730680465698, 0.574233889579773, 0.5553852319717407, 0.559506356716156, 0.5584339499473572, 0.5361846089363098, 0.5447237491607666, 0.5288391709327698, 0.524893045425415, 0.5093250870704651, 0.5206597447395325, 0.504531979560852, 0.5009118914604187, 0.4864652156829834, 0.47634249925613403, 0.48179808259010315, 0.4648982584476471, 0.4653207063674927, 0.4603729248046875, 0.46910330653190613, 0.45452719926834106, 0.4488529860973358, 0.4420068562030792, 0.4440535604953766, 0.43914565443992615, 0.43102478981018066, 0.4259990155696869, 0.4244474470615387, 0.4238665699958801, 0.4203838109970093, 0.41781580448150635, 0.4194231331348419, 0.41458025574684143, 0.39990508556365967, 0.39463868737220764, 0.3995797336101532, 0.39290791749954224, 0.39460286498069763, 0.3859192132949829, 0.3854867219924927, 0.3822004795074463, 0.3870309591293335, 0.376506507396698, 0.37336990237236023], "accuracy": [0.27116629481315613, 0.5027077198028564, 0.5984678268432617, 0.6386210322380066, 0.6728305220603943, 0.6894729733467102, 0.7106062769889832, 0.7191916704177856, 0.7210407853126526, 0.7372870445251465, 0.7479857206344604, 0.7378153204917908, 0.7524765729904175, 0.7611940503120422, 0.7687227725982666, 0.7626469135284424, 0.7737419009208679, 0.7716285586357117, 0.7769119143486023, 0.7836481332778931, 0.7988376617431641, 0.7906485199928284, 0.7913089394569397, 0.7996301651000977, 0.7942147850990295, 0.8026680946350098, 0.8047813773155212, 0.813498854637146, 0.8035926818847656, 0.8140271902084351, 0.817461371421814, 0.8186501264572144, 0.819970965385437, 0.822348415851593, 0.8265751004219055, 0.8313300609588623, 0.8313300609588623, 0.8210275769233704, 0.8296129703521729, 0.835160493850708, 0.8408400416374207, 0.8366134166717529, 0.842028796672821, 0.8412362933158875, 0.848368763923645, 0.8479725122451782, 0.8426892161369324, 0.8444063067436218, 0.8432175517082214, 0.8457271456718445, 0.8471800088882446, 0.8558974862098694, 0.8553691506385803, 0.8494254350662231, 0.8568220734596252, 0.8548408150672913, 0.8552370667457581, 0.8560295701026917, 0.8636903762817383, 0.8558974862098694, 0.8622375130653381, 0.8602562546730042], "val_loss": [1.92304527759552, 1.0947009325027466, 0.9953362345695496, 0.8077830672264099, 0.7429671883583069, 0.7114894986152649, 0.6613880395889282, 0.6383177042007446, 0.6101065874099731, 0.6086142659187317, 0.6531917452812195, 0.6046624779701233, 0.5781583786010742, 0.5467856526374817, 0.6075847744941711, 0.5385071039199829, 0.5789737105369568, 0.5249670147895813, 0.5134415030479431, 0.5030999779701233, 0.508760929107666, 0.5065776109695435, 0.488863080739975, 0.4950689971446991, 0.47729021310806274, 0.5051224827766418, 0.46899592876434326, 0.46334749460220337, 0.4621891975402832, 0.4776664674282074, 0.454062819480896, 0.44824209809303284, 0.48660165071487427, 0.43891197443008423, 0.44361090660095215, 0.4352467358112335, 0.45110413432121277, 0.4329974055290222, 0.43374258279800415, 0.4284340441226959, 0.43577009439468384, 0.43019840121269226, 0.41846516728401184, 0.4179723262786865, 0.4092603325843811, 0.42338258028030396, 0.4242953360080719, 0.4160822629928589, 0.4157027304172516, 0.4025897681713104, 0.40289661288261414, 0.40681421756744385, 0.4073413014411926, 0.40126150846481323, 0.40721240639686584, 0.3989364802837372, 0.3962719440460205, 0.38763150572776794, 0.4138204753398895, 0.40243375301361084, 0.392923504114151, 0.3960898816585541], "val_accuracy": [0.5879999995231628, 0.6523333191871643, 0.6386666893959045, 0.6946666836738586, 0.7170000076293945, 0.7200000286102295, 0.7456666827201843, 0.7406666874885559, 0.7606666684150696, 0.762333333492279, 0.737666666507721, 0.7630000114440918, 0.7753333449363708, 0.7806666493415833, 0.7693333625793457, 0.7956666946411133, 0.765999972820282, 0.7943333387374878, 0.8036666512489319, 0.812666654586792, 0.8023333549499512, 0.8033333420753479, 0.8130000233650208, 0.8040000200271606, 0.8183333277702332, 0.8063333630561829, 0.8263333439826965, 0.8243333101272583, 0.8270000219345093, 0.8183333277702332, 0.8309999704360962, 0.82833331823349, 0.8096666932106018, 0.8306666612625122, 0.8276666402816772, 0.8343333601951599, 0.8276666402816772, 0.8370000123977661, 0.831333339214325, 0.8386666774749756, 0.8353333473205566, 0.8366666436195374, 0.8450000286102295, 0.8413333296775818, 0.846666693687439, 0.8416666388511658, 0.8396666646003723, 0.8420000076293945, 0.8479999899864197, 0.8506666421890259, 0.8476666808128357, 0.8516666889190674, 0.8529999852180481, 0.8556666374206543, 0.8553333282470703, 0.8483333587646484, 0.8569999933242798, 0.8569999933242798, 0.843666672706604, 0.8546666502952576, 0.8550000190734863, 0.8513333201408386]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 2, 7, 8], [0, 0, 1, 1, 2, 0, 1], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 1, 1, 0, 1], [0, 4, 0, 2, 5], [0, 0, 1], [13], [1], [0], [4], [0]], "fitness": -0.12800000607967377, "mapping_values": [1, 15, 8, 7, 3, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.3085453510284424, 2.3151512145996094, 2.305278778076172, 2.3755552768707275, 2.3826708793640137, 2.3064398765563965, 2.303570032119751, 2.302884578704834, 2.302804946899414], "accuracy": [0.18821820616722107, 0.0936468094587326, 0.10434553027153015, 0.15810328722000122, 0.18319904804229736, 0.09972262382507324, 0.10130762308835983, 0.09589222073554993, 0.09734513610601425], "val_loss": [2.3229331970214844, 2.3074352741241455, 2.301424264907837, 2.1889538764953613, 2.3097927570343018, 2.3035924434661865, 2.302764415740967, 2.302682399749756, 2.3021881580352783], "val_accuracy": [0.10266666859388351, 0.10333333164453506, 0.12800000607967377, 0.12833333015441895, 0.09833333641290665, 0.10066666454076767, 0.10233332961797714, 0.09866666793823242, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 5, 7, 1, 1, 4, 4, 6], [0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 0], [0, 39, 39, 29], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 2, 0, 5, 3, 8, 5], [1, 5, 3, 1, 0], [18, 1], [0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 2, 5], [0, 6, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 12, 11, 4, 1, 0, 1, 0, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(alpha, tf.math.pow(tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)))), grad)), tf.math.divide_no_nan(grad, grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 3, 3, 5, 1, 9, 5], [0, 0, 2, 0, 0], [0, 39, 39, 84, 15], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 1, 3, 2, 7], [2, 0, 3, 1, 0, 0, 2, 4, 4], [16, 1, 29], [0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 2, 5], [0, 6, 1], [72], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 5, 20, 11, 9, 3, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 2, 1, 1, 1], [0, 39, 39], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 0, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 0, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098583221435547, 2.31095290184021, 2.311264753341675, 2.310263156890869, 2.308234453201294, 2.3086254596710205], "accuracy": [0.09113723784685135, 0.08809932321310043, 0.08598599582910538, 0.09087307006120682, 0.0948355570435524, 0.09694888442754745], "val_loss": [2.3093459606170654, 2.3093459606170654, 2.3093459606170654, 2.3093459606170654, 2.3093459606170654, 2.3093459606170654], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]