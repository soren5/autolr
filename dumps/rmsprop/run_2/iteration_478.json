[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211845636367798, 1.6142913103103638, 1.1432870626449585, 1.0028499364852905, 0.9171668887138367, 0.8558985590934753, 0.7678178548812866, 0.7433359026908875, 0.7378455400466919, 0.7016757726669312, 0.6904734373092651, 0.6927468180656433, 0.6575196385383606, 0.6323775053024292, 0.6225022673606873, 0.6452414989471436, 0.6284098029136658, 0.595835268497467, 0.5840524435043335, 0.5855741500854492, 0.5600304007530212, 0.5641281008720398, 0.558987557888031, 0.5381171703338623, 0.536243200302124, 0.5330625772476196, 0.5196967124938965, 0.5080515742301941, 0.5169277191162109, 0.5006860494613647, 0.495161771774292, 0.4913068115711212, 0.48766353726387024, 0.48057296872138977, 0.47373026609420776, 0.46732810139656067, 0.4630586504936218, 0.4661336839199066, 0.4561537504196167, 0.45691999793052673, 0.4492614269256592, 0.43910109996795654, 0.44279712438583374, 0.4302598237991333, 0.43228259682655334, 0.4318920969963074, 0.4183735251426697], "accuracy": [0.26826047897338867, 0.4951789677143097, 0.6033549308776855, 0.6436402201652527, 0.6651697158813477, 0.6894729733467102, 0.7164179086685181, 0.7231541275978088, 0.7279091477394104, 0.7359662055969238, 0.7409853339195251, 0.7445515990257263, 0.7569673657417297, 0.7671377658843994, 0.7688548564910889, 0.7541936039924622, 0.7684586048126221, 0.776251494884491, 0.7848368883132935, 0.7860256433486938, 0.7907806038856506, 0.7885351777076721, 0.7942147850990295, 0.7993659973144531, 0.8018755912780762, 0.8010830879211426, 0.8136309385299683, 0.8145555257797241, 0.8067626357078552, 0.8177255392074585, 0.8187822103500366, 0.8191784620285034, 0.8195747137069702, 0.8269713521003723, 0.8265751004219055, 0.8318583965301514, 0.8273676037788391, 0.8259146809577942, 0.834632158279419, 0.833179235458374, 0.8358209133148193, 0.8407079577445984, 0.8342359066009521, 0.8438779711723328, 0.8417646288871765, 0.8412362933158875, 0.8511425256729126], "val_loss": [1.9260263442993164, 1.1186747550964355, 1.0107741355895996, 0.8234202265739441, 0.7847566604614258, 0.7040882706642151, 0.7027068734169006, 0.724476158618927, 0.645603597164154, 0.686042070388794, 0.6592711210250854, 0.6442185640335083, 0.5923025608062744, 0.5888466835021973, 0.571089506149292, 0.6712149381637573, 0.575140118598938, 0.5603228211402893, 0.5453596115112305, 0.5500463843345642, 0.5304261445999146, 0.5405493974685669, 0.517621636390686, 0.5103383660316467, 0.5123150944709778, 0.5208420157432556, 0.5079737901687622, 0.5160333514213562, 0.48873206973075867, 0.5013362169265747, 0.48253199458122253, 0.4745115637779236, 0.47326716780662537, 0.47340071201324463, 0.48463037610054016, 0.4681531488895416, 0.5120906829833984, 0.4583253562450409, 0.44686320424079895, 0.455592542886734, 0.4468177556991577, 0.44415947794914246, 0.4410575330257416, 0.449957937002182, 0.43849796056747437, 0.43404892086982727, 0.460904061794281], "val_accuracy": [0.49966666102409363, 0.6430000066757202, 0.643666684627533, 0.6809999942779541, 0.7146666646003723, 0.7306666374206543, 0.7133333086967468, 0.7336666584014893, 0.7493333220481873, 0.718999981880188, 0.7246666550636292, 0.7509999871253967, 0.7786666750907898, 0.777999997138977, 0.7823333144187927, 0.7433333396911621, 0.7723333239555359, 0.7829999923706055, 0.7990000247955322, 0.7929999828338623, 0.7986666560173035, 0.8033333420753479, 0.8083333373069763, 0.8066666722297668, 0.812666654586792, 0.8023333549499512, 0.8103333115577698, 0.8023333549499512, 0.82833331823349, 0.8226666450500488, 0.8193333148956299, 0.8206666707992554, 0.8303333520889282, 0.8199999928474426, 0.8203333616256714, 0.8296666741371155, 0.8100000023841858, 0.8323333263397217, 0.8410000205039978, 0.8353333473205566, 0.8386666774749756, 0.8429999947547913, 0.8386666774749756, 0.8330000042915344, 0.8393333554267883, 0.8420000076293945, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [23, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 2, 1], [0, 6, 1, 6, 2], [70, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 2, 12, 7, 5, 2, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 9, 3, 1, 6, 5], [2, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2, 9], [2, 0, 3, 1, 0], [72, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 12, 8, 4, 2, 8, 5, 3, 1, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 0, 3, 2, 3, 5, 5, 2, 2, 5, 1, 2], [0, 2, 1, 0, 2, 0, 1, 1, 1], [0, 39, 39], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 1, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [3, 2, 2, 2, 5, 2, 1, 5], [0, 6, 1, 5, 0, 0, 1], [0, 22, 93], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 21, 12, 9, 3, 2, 1, 1, 0, 15, 8, 7, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3113980293273926, 2.3107409477233887, 2.309931755065918, 2.310832977294922, 2.310417652130127, 2.3088009357452393], "accuracy": [0.08241976052522659, 0.09087307006120682, 0.09708096832036972, 0.08994849026203156, 0.09219389408826828, 0.09457138925790787], "val_loss": [2.3087520599365234, 2.3087520599365234, 2.3087520599365234, 2.3087520599365234, 2.3087520599365234, 2.3087520599365234], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 2], [0, 2, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 5, 6, 3, 9, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 4, 5, 2, 1], [0, 6, 1, 6, 3], [0, 12], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 0, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098676204681396, 2.3100104331970215, 2.3098161220550537, 2.3101580142974854, 2.3100950717926025, 2.3099725246429443], "accuracy": [0.09047681838274002, 0.09338264167308807, 0.09074098616838455, 0.09100515395402908, 0.09087307006120682, 0.0940430611371994], "val_loss": [2.309094190597534, 2.309094190597534, 2.309094190597534, 2.309094190597534, 2.309094190597534, 2.309094190597534], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]