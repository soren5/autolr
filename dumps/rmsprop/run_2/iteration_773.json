[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8379999995231628, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21283221244812, 1.6201255321502686, 1.1459946632385254, 0.9663539528846741, 0.8710750937461853, 0.8539350628852844, 0.7741807699203491, 0.7530412077903748, 0.7519633173942566, 0.710807204246521, 0.6905497312545776, 0.6642854809761047, 0.6518072485923767, 0.6379470825195312, 0.6436379551887512, 0.6077532172203064, 0.6137390732765198, 0.6097155809402466, 0.5842757821083069, 0.5686440467834473, 0.5641007423400879, 0.5512900352478027, 0.5445609092712402, 0.5525830984115601, 0.5263107419013977, 0.5372651219367981, 0.5276792645454407, 0.5144118666648865, 0.5112391114234924, 0.5051228404045105, 0.49598240852355957, 0.4929494261741638, 0.48023438453674316, 0.47447776794433594, 0.4778849184513092, 0.48106735944747925, 0.4646663963794708, 0.4661726951599121, 0.45726582407951355, 0.4595789313316345, 0.44723057746887207, 0.4394803047180176, 0.4420372545719147, 0.434270441532135, 0.4315691590309143, 0.4245581030845642, 0.4281025230884552, 0.4336351156234741, 0.425914466381073, 0.4089643657207489, 0.4069848656654358, 0.39934414625167847, 0.39495402574539185, 0.3999846875667572, 0.39773210883140564, 0.39491263031959534, 0.3906593322753906], "accuracy": [0.27116629481315613, 0.5000660419464111, 0.6016378402709961, 0.6572447419166565, 0.6860388517379761, 0.6902654767036438, 0.7137762308120728, 0.7172104120254517, 0.7228899598121643, 0.7321357727050781, 0.7436270117759705, 0.7531369924545288, 0.7598732113838196, 0.7651565074920654, 0.7609298825263977, 0.7745344042778015, 0.7770439982414246, 0.7755910754203796, 0.785629391670227, 0.7853652238845825, 0.7898560166358948, 0.7993659973144531, 0.8010830879211426, 0.798309326171875, 0.8115176558494568, 0.8041210174560547, 0.8014793395996094, 0.8153480291366577, 0.81112140417099, 0.8123101592063904, 0.8198388814926147, 0.8203672170639038, 0.8247259259223938, 0.8226125836372375, 0.829216718673706, 0.8241975903511047, 0.832650899887085, 0.8302733898162842, 0.8335754871368408, 0.8317263126373291, 0.8360850811004639, 0.8422929644584656, 0.837141752243042, 0.8436138033866882, 0.8445383906364441, 0.8469158411026001, 0.8411042094230652, 0.8444063067436218, 0.8471800088882446, 0.8502179384231567, 0.8496896028518677, 0.8540483713150024, 0.858671247959137, 0.8562937378883362, 0.8539162874221802, 0.8557654023170471, 0.860652506351471], "val_loss": [1.9332499504089355, 1.1535135507583618, 0.8893125057220459, 0.7806077599525452, 0.7358487844467163, 0.7250255346298218, 0.705355703830719, 0.6404399275779724, 0.6596076488494873, 0.6107150316238403, 0.6013319492340088, 0.5779286026954651, 0.5957303643226624, 0.5770543813705444, 0.5823094844818115, 0.588685154914856, 0.536162257194519, 0.5270554423332214, 0.5314934253692627, 0.534655749797821, 0.5186655521392822, 0.5131331086158752, 0.5104942917823792, 0.496300607919693, 0.5124048590660095, 0.5218256711959839, 0.4872305393218994, 0.4975026547908783, 0.48928624391555786, 0.46880611777305603, 0.48477038741111755, 0.4676753282546997, 0.46913281083106995, 0.46509936451911926, 0.47296175360679626, 0.46715807914733887, 0.46096310019493103, 0.4622119963169098, 0.46593570709228516, 0.45464909076690674, 0.44160792231559753, 0.45687419176101685, 0.4435114860534668, 0.4366241991519928, 0.440010130405426, 0.43603071570396423, 0.42914441227912903, 0.44205737113952637, 0.4328330159187317, 0.43310368061065674, 0.4357592761516571, 0.41546687483787537, 0.42262622714042664, 0.43504223227500916, 0.4277679920196533, 0.4250563085079193, 0.41446617245674133], "val_accuracy": [0.5416666865348816, 0.6223333477973938, 0.6909999847412109, 0.7046666741371155, 0.7350000143051147, 0.7429999709129333, 0.7163333296775818, 0.75, 0.7536666393280029, 0.7676666378974915, 0.7606666684150696, 0.7816666960716248, 0.768666684627533, 0.781333327293396, 0.7853333353996277, 0.7796666622161865, 0.7993333339691162, 0.8050000071525574, 0.7979999780654907, 0.7953333258628845, 0.8103333115577698, 0.8136666417121887, 0.8096666932106018, 0.8166666626930237, 0.8080000281333923, 0.8046666383743286, 0.8299999833106995, 0.8163333535194397, 0.824999988079071, 0.8320000171661377, 0.8256666660308838, 0.8330000042915344, 0.8309999704360962, 0.8309999704360962, 0.8240000009536743, 0.8286666870117188, 0.8346666693687439, 0.8306666612625122, 0.8243333101272583, 0.8360000252723694, 0.843999981880188, 0.8333333134651184, 0.8363333344459534, 0.8473333120346069, 0.8483333587646484, 0.8456666469573975, 0.8496666550636292, 0.8443333506584167, 0.8483333587646484, 0.8433333039283752, 0.8526666760444641, 0.8550000190734863, 0.8516666889190674, 0.8443333506584167, 0.8500000238418579, 0.8550000190734863, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 6, 3, 0], [0, 0, 1, 0, 2, 3, 0], [0, 39, 39, 35], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 9, 0, 8, 5, 2, 1], [0, 6, 4, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 12, 7, 5, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 2, 0, 2], [0, 31, 54], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 6, 7, 1, 0], [0, 84], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 5, 3, 2, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(grad, alpha)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [86.84709167480469, 9612.4287109375, 157269.46875, 1105267.5, 4894910.0, 16237713.0], "accuracy": [0.09813763201236725, 0.09787346422672272, 0.09470347315073013, 0.09813763201236725, 0.09721305221319199, 0.10117553919553757], "val_loss": [699.8206787109375, 34064.296875, 361744.6875, 1965889.875, 7353628.0, 21675458.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 8, 5, 3], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [67, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 7, 2, 1], [0, 6, 4, 6, 0, 0], [0, 22, 30], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 12, 7, 5, 2, 1, 0, 1, 0, 13, 7, 6, 3, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.square(alpha))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.add(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103103637695312, 2.3114943504333496, 2.3100271224975586, 2.3100597858428955, 2.30942964553833, 2.3104331493377686], "accuracy": [0.08294808864593506, 0.09060890227556229, 0.09074098616838455, 0.09245806187391281, 0.09496764093637466, 0.09206181764602661], "val_loss": [2.308023452758789, 2.308023452758789, 2.308023452758789, 2.308023452758789, 2.308023452758789, 2.308023452758789], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 1], [0, 8, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 2, 0], [0, 42], [1], [0], [2], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 6, 3, 3, 1, 9, 5, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311049699783325, 2.309727430343628, 2.3106822967529297, 2.3105273246765137, 2.3096492290496826, 2.3103456497192383], "accuracy": [0.08928807079792023, 0.0936468094587326, 0.09008057415485382, 0.09311848133802414, 0.09060890227556229, 0.09285431355237961], "val_loss": [2.309211015701294, 2.309211015701294, 2.309211015701294, 2.309211015701294, 2.309211015701294, 2.309211015701294], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]