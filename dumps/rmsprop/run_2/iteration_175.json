[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8057143092155457, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2095913887023926, 1.5910004377365112, 1.1225754022598267, 0.9572378993034363, 0.862852931022644, 0.8096622824668884, 0.7606973648071289, 0.7501558661460876, 0.7065437436103821, 0.6985037922859192, 0.6708037257194519, 0.6510777473449707, 0.6401166319847107, 0.621351957321167, 0.6218221783638, 0.5855830311775208, 0.5731083154678345, 0.5597662925720215, 0.577810525894165, 0.5489140152931213, 0.5539169907569885, 0.540679395198822, 0.525806725025177, 0.5178283452987671, 0.5214104056358337, 0.5116379857063293, 0.5003350377082825, 0.48102882504463196, 0.5050055384635925, 0.48446178436279297, 0.47479447722435, 0.47225964069366455, 0.4627781808376312, 0.47145530581474304, 0.4558861553668976, 0.46182355284690857, 0.45656973123550415, 0.4434033930301666, 0.44559335708618164, 0.43892234563827515, 0.43667519092559814, 0.4304860234260559, 0.4327760934829712, 0.4147540330886841, 0.42188572883605957, 0.4071301221847534, 0.39708802103996277, 0.41251468658447266, 0.4003567695617676, 0.4114769697189331, 0.3905191719532013, 0.38822752237319946, 0.3846157491207123, 0.38379591703414917, 0.3874095380306244, 0.38419076800346375, 0.3752751350402832, 0.37232816219329834, 0.37535831332206726, 0.3696814775466919, 0.3642040491104126, 0.3713743984699249], "accuracy": [0.26059964299201965, 0.5094439387321472, 0.6044115424156189, 0.6581693291664124, 0.6889446377754211, 0.7077004313468933, 0.7185312509536743, 0.7243428826332092, 0.739928662776947, 0.7409853339195251, 0.7519482374191284, 0.7617223858833313, 0.759080708026886, 0.769911527633667, 0.7646281719207764, 0.7744023203849792, 0.7835160493850708, 0.7895918488502502, 0.7836481332778931, 0.7954035401344299, 0.793950617313385, 0.7959318161010742, 0.806630551815033, 0.8086118102073669, 0.8038568496704102, 0.8105930685997009, 0.8094043135643005, 0.8206313848495483, 0.8149517774581909, 0.8203672170639038, 0.8301413059234619, 0.8272355198860168, 0.8337075710296631, 0.8240655064582825, 0.832650899887085, 0.826310932636261, 0.8325188159942627, 0.8338396549224854, 0.8360850811004639, 0.839519202709198, 0.8379341959953308, 0.8424250483512878, 0.8403117060661316, 0.8485008478164673, 0.8421608805656433, 0.8499537706375122, 0.8532558679580688, 0.8506141901016235, 0.8541803956031799, 0.8457271456718445, 0.8553691506385803, 0.8619733452796936, 0.8602562546730042, 0.8598600029945374, 0.857218325138092, 0.8601241707801819, 0.8623695969581604, 0.8632941246032715, 0.8622375130653381, 0.8643507957458496, 0.8712190985679626, 0.8647470474243164], "val_loss": [1.9262611865997314, 1.094592809677124, 0.9057790637016296, 0.8044522404670715, 0.7169055938720703, 0.7492618560791016, 0.6775563359260559, 0.647720217704773, 0.6423036456108093, 0.6346216201782227, 0.5991299748420715, 0.605294406414032, 0.5803602337837219, 0.5692552924156189, 0.5427212119102478, 0.5506497025489807, 0.5458728075027466, 0.5230781435966492, 0.5370633006095886, 0.5187972784042358, 0.5230398178100586, 0.5034790635108948, 0.5097008347511292, 0.48658236861228943, 0.4930296540260315, 0.4950079619884491, 0.4810899794101715, 0.49284252524375916, 0.47004130482673645, 0.47481420636177063, 0.4783249497413635, 0.46773892641067505, 0.47242432832717896, 0.4522561728954315, 0.44177189469337463, 0.4770272970199585, 0.4551348090171814, 0.4443941116333008, 0.4329586625099182, 0.4341909885406494, 0.43137291073799133, 0.4304654598236084, 0.4266972541809082, 0.42246922850608826, 0.43166860938072205, 0.41842854022979736, 0.4209027886390686, 0.4189971387386322, 0.41757023334503174, 0.4235205352306366, 0.4084354639053345, 0.3972160518169403, 0.40820011496543884, 0.4058532416820526, 0.415408194065094, 0.4166284203529358, 0.4014706313610077, 0.4033763110637665, 0.4098200798034668, 0.3957911729812622, 0.4170481860637665, 0.40458014607429504], "val_accuracy": [0.5540000200271606, 0.6483333110809326, 0.6826666593551636, 0.706333339214325, 0.7423333525657654, 0.718666672706604, 0.7223333120346069, 0.7540000081062317, 0.7646666765213013, 0.7519999742507935, 0.7789999842643738, 0.7546666860580444, 0.7786666750907898, 0.7866666913032532, 0.7979999780654907, 0.7923333048820496, 0.7940000295639038, 0.8003333210945129, 0.7973333597183228, 0.8023333549499512, 0.7926666736602783, 0.8143333196640015, 0.8023333549499512, 0.8190000057220459, 0.8056666851043701, 0.8119999766349792, 0.8146666884422302, 0.8203333616256714, 0.8199999928474426, 0.8176666498184204, 0.8180000185966492, 0.8180000185966492, 0.8226666450500488, 0.828000009059906, 0.8316666483879089, 0.8220000267028809, 0.8273333311080933, 0.8336666822433472, 0.843666672706604, 0.843999981880188, 0.8393333554267883, 0.8360000252723694, 0.8413333296775818, 0.8446666598320007, 0.8330000042915344, 0.8420000076293945, 0.8476666808128357, 0.8420000076293945, 0.8486666679382324, 0.8420000076293945, 0.8476666808128357, 0.8513333201408386, 0.8529999852180481, 0.8519999980926514, 0.8489999771118164, 0.8506666421890259, 0.8539999723434448, 0.8473333120346069, 0.8500000238418579, 0.8536666631698608, 0.8486666679382324, 0.8503333330154419]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [6, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 8], [2, 0, 3, 3, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 4], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 8, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 2, 3, 2, 2, 4], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [1, 6, 1, 6, 0], [96, 22], [0, 0, 1, 0, 1, 1], [0, 4, 1], [2, 0, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [1106971776.0, 20986634240.0, 99423584256.0, 273084661760.0, 590409695232.0, 1095604568064.0], "accuracy": [0.10130762308835983, 0.09800554811954498, 0.09866596013307571, 0.10500594228506088, 0.09879804402589798, 0.10434553027153015], "val_loss": [5280139264.0, 42235940864.0, 142540554240.0, 337866555392.0, 659882246144.0, 1140272791552.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 54], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 6, 8], [2, 6, 1, 6, 0, 2], [0, 22], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 6, 7, 3, 6, 8, 1, 3, 6], [2, 6, 2, 0, 2, 1, 3, 7], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 15, 9, 6, 1, 17, 9, 8, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), alpha), sigma))), grad)))", "other_info": {"loss": [2.309767007827759, 2.310072183609009, 2.309725761413574, 2.310421943664551, 2.3106801509857178, 2.3092730045318604], "accuracy": [0.09179764986038208, 0.09087307006120682, 0.09192973375320435, 0.09325055778026581, 0.08928807079792023, 0.09166556596755981], "val_loss": [2.309056520462036, 2.309056520462036, 2.309056520462036, 2.309056520462036, 2.309056520462036, 2.309056520462036], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 3, 6, 3, 2, 6, 1, 9, 6, 7, 6, 0, 6, 8], [0, 6, 1, 6, 0, 0, 3, 3, 2, 1, 6, 5, 2, 1], [0, 22, 54, 64], [1], [0], [0], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 12, 7, 5, 1, 10, 6, 4, 1, 34, 20, 14, 4, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(grad, alpha), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma))), tf.math.divide_no_nan(sigma, beta))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), grad)))), tf.math.divide_no_nan(tf.math.sqrt(beta), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3091232776641846, 2.309501886367798, 2.310296058654785, 2.310307264328003, 2.309101104736328, 2.3097736835479736], "accuracy": [0.0944393053650856, 0.09589222073554993, 0.0940430611371994, 0.09100515395402908, 0.09325055778026581, 0.09034473448991776], "val_loss": [2.308936834335327, 2.308936834335327, 2.308936834335327, 2.308936834335327, 2.308936834335327, 2.308936834335327], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]