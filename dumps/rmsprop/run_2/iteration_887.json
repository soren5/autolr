[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21193790435791, 1.609834909439087, 1.1461338996887207, 0.9610063433647156, 0.8884208798408508, 0.8260402679443359, 0.7744924426078796, 0.7512003183364868, 0.7176442742347717, 0.7085635662078857, 0.6798232197761536, 0.6517373919487, 0.6432375907897949, 0.6275987029075623, 0.6205975413322449, 0.6120372414588928, 0.6006708145141602, 0.595664918422699, 0.5692994594573975, 0.5758327841758728, 0.5526171922683716, 0.5460790395736694, 0.5381600260734558, 0.5412232875823975, 0.5279225707054138, 0.5107572078704834, 0.5279529690742493, 0.513519287109375, 0.49563705921173096, 0.4933851659297943], "accuracy": [0.2693171203136444, 0.4994056224822998, 0.5910711884498596, 0.6510368585586548, 0.6758684515953064, 0.698190450668335, 0.7189275026321411, 0.7191916704177856, 0.7317395210266113, 0.7334566116333008, 0.7405890822410583, 0.7589486241340637, 0.7544577717781067, 0.7593448758125305, 0.7651565074920654, 0.7687227725982666, 0.7736098170280457, 0.7757231593132019, 0.7913089394569397, 0.7854973077774048, 0.7935543656349182, 0.7928939461708069, 0.800290584564209, 0.7943468689918518, 0.8042530417442322, 0.8119139075279236, 0.8030643463134766, 0.8104609847068787, 0.8166688680648804, 0.817461371421814], "val_loss": [1.9205673933029175, 1.100764513015747, 0.8621386885643005, 0.8037655353546143, 0.7042925357818604, 0.6685811877250671, 0.6348333954811096, 0.6287877559661865, 0.6321457028388977, 0.5974989533424377, 0.6166067123413086, 0.5829411745071411, 0.5600969791412354, 0.5571390986442566, 0.5632475018501282, 0.5545619130134583, 0.5895829200744629, 0.5242258906364441, 0.5518442392349243, 0.5058241486549377, 0.4932626187801361, 0.5030114054679871, 0.5203946828842163, 0.5127663016319275, 0.4799097776412964, 0.5110025405883789, 0.4765107333660126, 0.46650224924087524, 0.48154547810554504, 0.4916550815105438], "val_accuracy": [0.5786666870117188, 0.6343333125114441, 0.7006666660308838, 0.7136666774749756, 0.7403333187103271, 0.7526666522026062, 0.7710000276565552, 0.7739999890327454, 0.753000020980835, 0.7763333320617676, 0.7683333158493042, 0.7853333353996277, 0.8003333210945129, 0.7940000295639038, 0.7839999794960022, 0.7933333516120911, 0.7636666893959045, 0.812333345413208, 0.7863333225250244, 0.8119999766349792, 0.8213333487510681, 0.8146666884422302, 0.8026666641235352, 0.8149999976158142, 0.8309999704360962, 0.8069999814033508, 0.8213333487510681, 0.8296666741371155, 0.8176666498184204, 0.8083333373069763]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [3, 2, 3, 2, 6, 5], [0, 2, 3, 2, 3], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 5, 6, 3, 2, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 0, 2, 5, 2, 1], [0, 6, 1, 1, 5], [82, 22], [1], [0], [6], [0]], "fitness": -0.30542856454849243, "mapping_values": [1, 7, 3, 4, 1, 11, 6, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(beta, tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7567532062530518, 2.387660503387451, 2.9593327045440674, 2.296032428741455, 2.312321186065674, 2.3033905029296875, 2.303232431411743], "accuracy": [0.19653943181037903, 0.15493330359458923, 0.1418570876121521, 0.13168670237064362, 0.12838461995124817, 0.09959053993225098, 0.09853387624025345], "val_loss": [2.249884605407715, 2.113468647003174, 2.304938554763794, 2.1702775955200195, 2.303382158279419, 2.302812099456787, 2.3027737140655518], "val_accuracy": [0.18266665935516357, 0.2966666519641876, 0.0976666659116745, 0.26866665482521057, 0.1003333330154419, 0.0976666659116745, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [75, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1], [0, 0, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 12, 7, 5, 2, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6951.5732421875, 26560.974609375, 11739.185546875, 18000.275390625, 11471.6005859375, 8079.1513671875, 10667.2451171875, 3898.08740234375], "accuracy": [0.09985470771789551, 0.09932637959718704, 0.1014397069811821, 0.1014397069811821, 0.09800554811954498, 0.09972262382507324, 0.09879804402589798, 0.09866596013307571], "val_loss": [25624.83203125, 16350.4150390625, 11795.8564453125, 18549.123046875, 8646.373046875, 11770.291015625, 6845.38818359375, 3776.74755859375], "val_accuracy": [0.10066666454076767, 0.09799999743700027, 0.10233332961797714, 0.1003333330154419, 0.09433333575725555, 0.10066666454076767, 0.10233332961797714, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [7, 2, 2, 2, 3, 0], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 2, 2, 6, 3, 8, 2, 9], [2, 1, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 9], [0, 6, 1, 5, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 13, 8, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(grad, alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 0], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 2, 8, 4, 8, 1, 7, 7, 4, 7, 7, 5, 2, 1, 9, 9, 4, 6, 3, 2, 9], [3, 6, 1, 4, 1, 7, 3, 6, 4, 7, 4, 0, 4], [98, 12, 53, 68], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 36, 23, 13, 4, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(sigma), tf.math.add(grad, tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(tf.math.pow(tf.math.add(tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.divide_no_nan(sigma, tf.math.multiply(grad, tf.math.add(grad, grad))))), grad), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088221549987793, 2.310955762863159, 2.3101606369018555, 2.30940842628479, 2.309149980545044, 2.3101720809936523], "accuracy": [0.09549596905708313, 0.08836349099874496, 0.08875974267721176, 0.09311848133802414, 0.09826971590518951, 0.08928807079792023], "val_loss": [2.3086180686950684, 2.3086180686950684, 2.3086180686950684, 2.3086180686950684, 2.3086180686950684, 2.3086180686950684], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]