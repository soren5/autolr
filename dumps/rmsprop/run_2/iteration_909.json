[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210625410079956, 1.599974274635315, 1.138129472732544, 0.9735457897186279, 0.8854283690452576, 0.819003164768219, 0.7871004939079285, 0.7370090484619141, 0.7250314950942993, 0.6992737650871277, 0.6749259233474731, 0.6708114147186279, 0.6460769772529602, 0.6334171891212463, 0.5980598330497742, 0.6139624714851379, 0.6153183579444885, 0.5745674967765808, 0.5736269354820251, 0.5753901600837708, 0.5690610408782959, 0.5421475172042847, 0.5404968857765198, 0.5415363311767578, 0.5200507044792175, 0.514249324798584, 0.5168795585632324, 0.49246591329574585, 0.48868846893310547, 0.48897069692611694, 0.48486509919166565, 0.4746462106704712, 0.46980950236320496, 0.468544065952301, 0.4748515188694, 0.4681268334388733, 0.45600077509880066, 0.45320212841033936, 0.44354864954948425, 0.4443646967411041, 0.4351476728916168, 0.4264771342277527, 0.4257953464984894, 0.417004257440567, 0.42120131850242615, 0.41630712151527405, 0.4166143536567688, 0.40382757782936096, 0.3999646008014679, 0.39973852038383484, 0.3942182660102844, 0.38966017961502075, 0.38881734013557434, 0.38280177116394043, 0.3778480291366577, 0.39297911524772644, 0.3716719448566437, 0.3647283613681793, 0.3764297068119049, 0.3731991946697235, 0.35919737815856934, 0.36085206270217896, 0.3585280776023865, 0.3647327721118927, 0.34548136591911316, 0.3570099174976349, 0.34617897868156433, 0.34440499544143677, 0.34923499822616577, 0.34690046310424805, 0.33968672156333923, 0.32948657870292664, 0.32859721779823303], "accuracy": [0.26443007588386536, 0.5149914026260376, 0.6066569685935974, 0.6535464525222778, 0.6796988248825073, 0.7024171352386475, 0.7096816897392273, 0.7265883088111877, 0.7309470176696777, 0.7411174178123474, 0.7479857206344604, 0.7445515990257263, 0.7607977986335754, 0.7631752490997314, 0.7790252566337585, 0.7700436115264893, 0.7675340175628662, 0.7849689722061157, 0.7873464822769165, 0.7854973077774048, 0.7893276810646057, 0.7959318161010742, 0.8042530417442322, 0.8000264167785645, 0.8090080618858337, 0.8115176558494568, 0.8043851256370544, 0.8165367841720581, 0.8201030492782593, 0.8214238286018372, 0.8210275769233704, 0.8252542614936829, 0.8251221776008606, 0.8245938420295715, 0.8255184292793274, 0.8281601071357727, 0.8334434032440186, 0.8337075710296631, 0.8363492488861084, 0.8380662798881531, 0.8385946154594421, 0.8459912538528442, 0.8430854678153992, 0.8471800088882446, 0.8449346423149109, 0.8457271456718445, 0.8466516733169556, 0.8557654023170471, 0.8490291833877563, 0.8506141901016235, 0.8533879518508911, 0.856689989566803, 0.8540483713150024, 0.863558292388916, 0.8613129258155823, 0.8555012345314026, 0.8627657890319824, 0.86553955078125, 0.8576145768165588, 0.8581429123878479, 0.8677849769592285, 0.8677849769592285, 0.8668603897094727, 0.8647470474243164, 0.8734645247459412, 0.8648791313171387, 0.8713511824607849, 0.874389111995697, 0.8717474341392517, 0.874389111995697, 0.874389111995697, 0.8767666220664978, 0.8798044919967651], "val_loss": [1.9191083908081055, 1.0873991250991821, 0.8409140706062317, 0.8836023807525635, 0.707245945930481, 0.6982564330101013, 0.6566685438156128, 0.6110796928405762, 0.6093621253967285, 0.5942705273628235, 0.6113228797912598, 0.5498429536819458, 0.5866382122039795, 0.5268001556396484, 0.5130152702331543, 0.5659987926483154, 0.5031283497810364, 0.5331380367279053, 0.49872156977653503, 0.4922042191028595, 0.48309123516082764, 0.4885215759277344, 0.5009750723838806, 0.45761579275131226, 0.46219584345817566, 0.4737495481967926, 0.4522112309932709, 0.44026196002960205, 0.45097509026527405, 0.4387330710887909, 0.4342384338378906, 0.4304659366607666, 0.4494912922382355, 0.43725886940956116, 0.437582790851593, 0.4585970342159271, 0.41806572675704956, 0.4108645021915436, 0.4535532295703888, 0.4160749912261963, 0.4063583314418793, 0.4114155173301697, 0.4130820035934448, 0.40691640973091125, 0.4066140949726105, 0.397591769695282, 0.39036449790000916, 0.3947986364364624, 0.3946477174758911, 0.3921751379966736, 0.38859888911247253, 0.382027804851532, 0.3754013776779175, 0.3822576105594635, 0.3814137279987335, 0.3863532841205597, 0.39075446128845215, 0.37238892912864685, 0.3990291357040405, 0.370506227016449, 0.3631061911582947, 0.3617783188819885, 0.36264973878860474, 0.3699759244918823, 0.3592079281806946, 0.36138924956321716, 0.3659692406654358, 0.3588440418243408, 0.37360796332359314, 0.35771703720092773, 0.35754653811454773, 0.3624820113182068, 0.36468806862831116], "val_accuracy": [0.5460000038146973, 0.6473333239555359, 0.7166666388511658, 0.6930000185966492, 0.7493333220481873, 0.7456666827201843, 0.762666642665863, 0.7603333592414856, 0.7816666960716248, 0.7696666717529297, 0.7720000147819519, 0.8023333549499512, 0.7649999856948853, 0.8013333082199097, 0.8140000104904175, 0.7816666960716248, 0.8223333358764648, 0.7979999780654907, 0.8059999942779541, 0.8203333616256714, 0.8243333101272583, 0.8259999752044678, 0.8143333196640015, 0.8299999833106995, 0.8366666436195374, 0.82833331823349, 0.8306666612625122, 0.8379999995231628, 0.8273333311080933, 0.8446666598320007, 0.8386666774749756, 0.8450000286102295, 0.831333339214325, 0.8349999785423279, 0.8420000076293945, 0.8259999752044678, 0.8473333120346069, 0.8483333587646484, 0.8266666531562805, 0.8476666808128357, 0.8506666421890259, 0.843666672706604, 0.8420000076293945, 0.8553333282470703, 0.8536666631698608, 0.8546666502952576, 0.8536666631698608, 0.8556666374206543, 0.8450000286102295, 0.8569999933242798, 0.8553333282470703, 0.8583333492279053, 0.859666645526886, 0.8566666841506958, 0.8560000061988831, 0.8546666502952576, 0.8513333201408386, 0.8646666407585144, 0.8503333330154419, 0.8616666793823242, 0.8656666874885559, 0.8659999966621399, 0.8666666746139526, 0.862666666507721, 0.8679999709129333, 0.8666666746139526, 0.8679999709129333, 0.8736666440963745, 0.859333336353302, 0.8679999709129333, 0.871999979019165, 0.8650000095367432, 0.8676666617393494]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 2, 3, 2, 3, 2, 4, 4, 7, 2, 5, 1, 3, 3, 4, 8, 6, 0, 6, 1, 6, 8, 2, 2, 5, 6, 1, 6, 1, 7, 8, 6, 1, 2, 6, 5, 2, 7, 5, 1, 6, 6, 7, 6, 0, 4, 0, 7, 7, 5, 6, 4, 6, 1, 6, 1, 6, 7, 1, 8, 0, 5, 5, 2, 9], [0, 2, 1, 2, 2, 1, 1, 2, 3, 3, 0, 3, 0, 3, 2, 2, 1, 3, 2, 0, 0, 2, 0, 3, 1, 3, 3, 0, 1, 3, 1, 1, 0, 2, 0, 2, 3, 0, 0, 2, 1, 1, 3, 1, 3, 2, 3, 3], [0, 39, 39, 20, 69, 93, 86, 50, 14, 28, 9, 79], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [5, 0, 5, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 0, 2, 5, 7, 1], [0, 6, 1, 6, 0], [14, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 113, 65, 48, 12, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.pow(alpha, grad))), tf.math.add(tf.math.add(grad, alpha), tf.math.square(tf.math.subtract(alpha, tf.math.multiply(grad, grad))))), tf.math.multiply(grad, tf.math.pow(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.subtract(alpha, grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.add(tf.math.square(alpha), grad)))), tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.negative(grad)), tf.math.pow(alpha, alpha))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad)), tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.divide_no_nan(alpha, alpha), tf.math.add(tf.math.subtract(tf.math.sqrt(grad), tf.math.negative(tf.math.square(alpha))), grad)))))))))))))), tf.math.square(tf.math.add(grad, grad))))))), grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.add(tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 5, 0, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [2, 4, 2, 6, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(grad, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 3, 0, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [6, 2, 0, 2, 5, 2, 3, 1, 0, 5, 4, 6, 1, 0], [0, 0, 1, 6, 0, 7, 7, 2, 3, 4], [0, 10, 38], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 24, 14, 10, 3, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad)))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.square(tf.math.pow(grad, tf.math.divide_no_nan(grad, beta)))), tf.math.subtract(tf.math.negative(sigma), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8667919635772705, 108382080.0, 2.9999468326568604, 2.583559989929199, 2.7969841957092285, 2.8742382526397705, 2.60921049118042, 2.86727237701416], "accuracy": [0.1682736724615097, 0.09126931428909302, 0.09919429570436478, 0.10196803510189056, 0.10196803510189056, 0.09721305221319199, 0.09972262382507324, 0.09813763201236725], "val_loss": [2.3124587535858154, 2.982196569442749, 2.885875701904297, 3.051813840866089, 2.8070454597473145, 2.966979742050171, 2.909043073654175, 2.8855512142181396], "val_accuracy": [0.10066666454076767, 0.09566666930913925, 0.10166666656732559, 0.10066666454076767, 0.09566666930913925, 0.10166666656732559, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 5, 2, 3, 5], [0, 2, 1, 0, 2], [0, 47, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0, 1], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3092658519744873, 2.3091654777526855, 2.311034679412842, 2.3103835582733154, 2.310877561569214, 2.3101797103881836], "accuracy": [0.09047681838274002, 0.09298639744520187, 0.08651433140039444, 0.09285431355237961, 0.09245806187391281, 0.09245806187391281], "val_loss": [2.308316707611084, 2.308316707611084, 2.308316707611084, 2.308316707611084, 2.308316707611084, 2.308316707611084], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]