[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8019999861717224, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214338541030884, 1.6061785221099854, 1.134704351425171, 0.9807645678520203, 0.8795281648635864, 0.8387663960456848, 0.7955068349838257, 0.7407141327857971, 0.7103079557418823, 0.6924928426742554, 0.6768908500671387, 0.6575806140899658, 0.660247266292572, 0.6402741074562073, 0.620453953742981, 0.6161484718322754, 0.593193769454956, 0.5758553147315979, 0.5667757987976074, 0.557313859462738, 0.5486074686050415, 0.5608847141265869, 0.5378757119178772, 0.5367792248725891, 0.5235798358917236, 0.5102372765541077, 0.5062335729598999, 0.49167805910110474, 0.4923407733440399, 0.4829539656639099, 0.4818192422389984, 0.4833875596523285, 0.4751506745815277, 0.4717685878276825, 0.47570109367370605, 0.46254056692123413, 0.4503037631511688, 0.4445109963417053, 0.43783488869667053, 0.4563612639904022, 0.4366752505302429, 0.43275517225265503, 0.42539504170417786, 0.4239184558391571, 0.4092441499233246, 0.4214070439338684, 0.4091559946537018, 0.4151211380958557, 0.4167894124984741, 0.40956348180770874, 0.4026743173599243, 0.4066312611103058, 0.3905958831310272, 0.3902439475059509], "accuracy": [0.266939640045166, 0.509311854839325, 0.6067890524864197, 0.6478668451309204, 0.681547999382019, 0.6979262828826904, 0.7078325152397156, 0.7211728692054749, 0.7371549606323242, 0.7403249144554138, 0.7531369924545288, 0.7519482374191284, 0.7539294958114624, 0.7573636174201965, 0.7703077793121338, 0.7700436115264893, 0.7815347909927368, 0.7858935594558716, 0.7903843522071838, 0.7898560166358948, 0.7976489067077637, 0.7891955971717834, 0.7968564033508301, 0.7975168228149414, 0.8059701323509216, 0.809140145778656, 0.8153480291366577, 0.8248580098152161, 0.8141592741012573, 0.8222163319587708, 0.822348415851593, 0.8230088353157043, 0.8238013386726379, 0.8290846943855286, 0.8232730031013489, 0.8244617581367493, 0.8359529972076416, 0.8397833704948425, 0.8429533839225769, 0.8314621448516846, 0.8403117060661316, 0.8437458872795105, 0.8482366800308228, 0.8481045961380005, 0.8494254350662231, 0.8496896028518677, 0.8562937378883362, 0.8510104417800903, 0.848368763923645, 0.8519350290298462, 0.8558974862098694, 0.847840428352356, 0.8555012345314026, 0.8562937378883362], "val_loss": [1.9295828342437744, 1.0735701322555542, 0.8970098495483398, 0.769482433795929, 0.7161884903907776, 0.6680597066879272, 0.617327094078064, 0.6183772683143616, 0.6037743091583252, 0.5892319083213806, 0.5833490490913391, 0.5506957769393921, 0.5446705222129822, 0.5666689276695251, 0.5600619912147522, 0.5173516273498535, 0.5020326375961304, 0.5086253881454468, 0.4832227826118469, 0.4853518605232239, 0.5327169299125671, 0.47575387358665466, 0.5004048943519592, 0.4616202116012573, 0.49646827578544617, 0.46815136075019836, 0.4458862245082855, 0.4615335762500763, 0.4465400278568268, 0.43986284732818604, 0.47208553552627563, 0.4389863610267639, 0.4364752471446991, 0.42453262209892273, 0.4317861795425415, 0.4333738684654236, 0.4227924048900604, 0.4227803647518158, 0.4638110399246216, 0.41300395131111145, 0.4084591865539551, 0.4188224673271179, 0.4117167294025421, 0.40461912751197815, 0.41105225682258606, 0.4025651514530182, 0.39841020107269287, 0.42369645833969116, 0.40326714515686035, 0.40444523096084595, 0.41158926486968994, 0.3946757912635803, 0.4106175899505615, 0.39686888456344604], "val_accuracy": [0.5683333277702332, 0.6579999923706055, 0.6813333630561829, 0.7396666407585144, 0.7526666522026062, 0.765333354473114, 0.7796666622161865, 0.7786666750907898, 0.7786666750907898, 0.7829999923706055, 0.7756666541099548, 0.7940000295639038, 0.8003333210945129, 0.793666660785675, 0.7943333387374878, 0.8153333067893982, 0.8173333406448364, 0.8173333406448364, 0.8316666483879089, 0.8186666369438171, 0.7896666526794434, 0.8233333230018616, 0.8216666579246521, 0.8326666951179504, 0.8013333082199097, 0.8306666612625122, 0.8443333506584167, 0.8326666951179504, 0.8410000205039978, 0.8450000286102295, 0.8213333487510681, 0.8456666469573975, 0.8453333377838135, 0.8500000238418579, 0.8460000157356262, 0.847000002861023, 0.8526666760444641, 0.8496666550636292, 0.8263333439826965, 0.8526666760444641, 0.8539999723434448, 0.8513333201408386, 0.8576666712760925, 0.8536666631698608, 0.8483333587646484, 0.859333336353302, 0.8583333492279053, 0.8429999947547913, 0.8619999885559082, 0.8539999723434448, 0.8516666889190674, 0.8610000014305115, 0.8516666889190674, 0.8550000190734863]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 0, 0, 2], [0, 46, 39], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 1, 1], [33], [1], [0], [4], [0]], "fitness": -0.2611428499221802, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3749630451202393, 2.2816927433013916, 2.2429990768432617, 2.3102846145629883, 2.3041460514068604, 2.2951724529266357, 2.2594802379608154, 2.305642604827881, 2.3039138317108154, 2.3028852939605713, 2.3034512996673584], "accuracy": [0.2044644057750702, 0.15281997621059418, 0.21252146363258362, 0.10130762308835983, 0.09655263274908066, 0.12059172987937927, 0.16536785662174225, 0.0956280529499054, 0.09919429570436478, 0.09893012791872025, 0.09668471664190292], "val_loss": [2.3028669357299805, 2.1093666553497314, 2.3047056198120117, 2.3031132221221924, 2.301743745803833, 2.127483367919922, 2.3056232929229736, 2.3030002117156982, 2.3028833866119385, 2.3025918006896973, 2.302572011947632], "val_accuracy": [0.1693333387374878, 0.25866666436195374, 0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.26899999380111694, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 6, 5, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.20028571784496307, "mapping_values": [1, 10, 6, 4, 3, 5, 3, 2, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.6304306983947754, 2.3349249362945557, 3.096752882003784, 2.3057055473327637, 2.3034095764160156, 2.3032870292663574, 2.303074598312378], "accuracy": [0.17910447716712952, 0.11755382269620895, 0.18438778817653656, 0.10077928751707077, 0.09879804402589798, 0.09747721254825592, 0.09694888442754745], "val_loss": [2.3005807399749756, 2.28425669670105, 2.307039976119995, 2.303185224533081, 2.302677631378174, 2.3027191162109375, 2.3025150299072266], "val_accuracy": [0.09799999743700027, 0.2006666660308838, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2], [0, 0, 1, 3, 2, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 6, 3, 8, 2, 0, 9, 2], [2, 0, 3, 1, 2, 4], [16, 93], [0, 1, 0, 1, 0, 1, 0, 0], [0, 2, 1, 2, 5], [7, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 16, 10, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]