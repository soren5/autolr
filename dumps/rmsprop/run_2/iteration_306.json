[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091729640960693, 1.5993696451187134, 1.141746163368225, 0.958149254322052, 0.8582175970077515, 0.8521755933761597, 0.7619098424911499, 0.742926836013794, 0.7176885604858398, 0.6944189667701721, 0.6644302010536194, 0.6701478362083435, 0.6408498287200928, 0.6319396495819092, 0.6211674809455872, 0.5964791774749756, 0.5997210144996643, 0.578893780708313, 0.5668296217918396, 0.5753116607666016, 0.5476089119911194, 0.5383844971656799, 0.5355180501937866, 0.5303195714950562, 0.5261655449867249, 0.5269938111305237, 0.5083544850349426, 0.5096791982650757, 0.5009939670562744, 0.4941076934337616, 0.49386924505233765, 0.48132413625717163, 0.4752207398414612, 0.47632840275764465, 0.46931493282318115, 0.45897334814071655, 0.45817068219184875, 0.45622721314430237, 0.4540444612503052, 0.4458010196685791, 0.44405579566955566, 0.4273942708969116, 0.4461289048194885, 0.42906519770622253, 0.43567436933517456, 0.42285582423210144, 0.42194536328315735, 0.4148803949356079, 0.40596094727516174, 0.40875041484832764, 0.40339070558547974, 0.39825308322906494, 0.3963606059551239, 0.3923754394054413, 0.3925315737724304, 0.38773417472839355, 0.3867403268814087, 0.38174065947532654, 0.37130284309387207, 0.37786298990249634, 0.3747076690196991, 0.37528467178344727], "accuracy": [0.26482629776000977, 0.5111610293388367, 0.6040153503417969, 0.6514331102371216, 0.6870955228805542, 0.6894729733467102, 0.7234182953834534, 0.7256637215614319, 0.737022876739502, 0.7420420050621033, 0.7578919529914856, 0.7481178045272827, 0.7574957013130188, 0.7662131786346436, 0.7692511081695557, 0.7753269076347351, 0.7711002230644226, 0.7853652238845825, 0.7909126877784729, 0.7880068421363831, 0.7988376617431641, 0.8012151718139648, 0.798309326171875, 0.8033285140991211, 0.8061022162437439, 0.8087438941001892, 0.8109893202781677, 0.8124422430992126, 0.8153480291366577, 0.8193105459213257, 0.8158763647079468, 0.8215559124946594, 0.8334434032440186, 0.8241975903511047, 0.828820526599884, 0.8300092220306396, 0.8334434032440186, 0.8356888294219971, 0.837537944316864, 0.8347642421722412, 0.8359529972076416, 0.8481045961380005, 0.8345000743865967, 0.8466516733169556, 0.8409721255302429, 0.8446704745292664, 0.8490291833877563, 0.8510104417800903, 0.8514066934585571, 0.8474441766738892, 0.8562937378883362, 0.859199583530426, 0.8573504090309143, 0.8544445633888245, 0.8545766472816467, 0.8590674996376038, 0.8598600029945374, 0.8613129258155823, 0.8660678863525391, 0.8614450097084045, 0.8615770936012268, 0.8634262084960938], "val_loss": [1.924999713897705, 1.1069684028625488, 0.8759135603904724, 0.8148986101150513, 0.8103829622268677, 0.7261196374893188, 0.6988381147384644, 0.6596832275390625, 0.6917409896850586, 0.6343595385551453, 0.6282467842102051, 0.6205986738204956, 0.6039753556251526, 0.5841073989868164, 0.5740859508514404, 0.5776414275169373, 0.5813765525817871, 0.564719557762146, 0.5556671023368835, 0.5344427227973938, 0.5250365734100342, 0.5236931443214417, 0.5165385603904724, 0.555864155292511, 0.5180327296257019, 0.5395862460136414, 0.5316056609153748, 0.49558618664741516, 0.4975220859050751, 0.5269322395324707, 0.48767733573913574, 0.487211674451828, 0.5032278895378113, 0.47663241624832153, 0.47425520420074463, 0.47639378905296326, 0.4767425060272217, 0.48202046751976013, 0.4615316092967987, 0.46631860733032227, 0.4564622938632965, 0.45483285188674927, 0.4476960301399231, 0.4541533887386322, 0.45353201031684875, 0.44523438811302185, 0.4370739758014679, 0.4485083818435669, 0.4342229962348938, 0.4286004900932312, 0.4502277076244354, 0.45394742488861084, 0.4322969615459442, 0.42941173911094666, 0.4338668882846832, 0.4340483546257019, 0.4169563055038452, 0.41503438353538513, 0.4322485327720642, 0.41567662358283997, 0.4170754849910736, 0.41685226559638977], "val_accuracy": [0.5559999942779541, 0.6489999890327454, 0.7089999914169312, 0.7139999866485596, 0.7003333568572998, 0.737333357334137, 0.7316666841506958, 0.7476666569709778, 0.7176666855812073, 0.7646666765213013, 0.7459999918937683, 0.7590000033378601, 0.7756666541099548, 0.7850000262260437, 0.793666660785675, 0.7850000262260437, 0.7956666946411133, 0.7866666913032532, 0.7839999794960022, 0.8146666884422302, 0.8090000152587891, 0.8106666803359985, 0.8176666498184204, 0.7900000214576721, 0.812333345413208, 0.79666668176651, 0.7979999780654907, 0.824999988079071, 0.8153333067893982, 0.8053333163261414, 0.8299999833106995, 0.8253333568572998, 0.8136666417121887, 0.8339999914169312, 0.8353333473205566, 0.828000009059906, 0.824999988079071, 0.8233333230018616, 0.8413333296775818, 0.8320000171661377, 0.8363333344459534, 0.8453333377838135, 0.8479999899864197, 0.8373333215713501, 0.8379999995231628, 0.8450000286102295, 0.8483333587646484, 0.8426666855812073, 0.8500000238418579, 0.8489999771118164, 0.8339999914169312, 0.8386666774749756, 0.8510000109672546, 0.8516666889190674, 0.8453333377838135, 0.8513333201408386, 0.859000027179718, 0.8569999933242798, 0.8476666808128357, 0.856333315372467, 0.8546666502952576, 0.8569999933242798]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 2, 3, 5, 2, 6, 9, 2, 5, 7, 5, 8, 8], [0, 2, 1, 0, 2, 2, 3, 2], [0, 42, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [2, 2, 9, 6, 3, 6, 2], [2, 0, 3, 1, 0], [91, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 0, 2, 5, 2, 1], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 15, 8, 3, 5, 3, 2, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), grad))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, sigma)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1159450496.0, 21623121920.0, 99135045632.0, 274164432896.0, 599877943296.0, 1093406556160.0], "accuracy": [0.10355303436517715, 0.09840179979801178, 0.09906221181154251, 0.10117553919553757, 0.09549596905708313, 0.09945846349000931], "val_loss": [5110109184.0, 40875700224.0, 137949544448.0, 326985940992.0, 638642552832.0, 1103558737920.0], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 2, 1, 0, 0], [0, 39, 39], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 2, 0, 2, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [36, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, grad), tf.math.square(alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304147720336914, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [74, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 8, 2, 5, 2, 3], [0, 6, 1, 6, 0], [3, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 0, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 0, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 0, 7, 5, 2, 8, 9], [0, 6, 1, 5, 0], [46, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 11, 8, 3, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30997371673584, 2.3108651638031006, 2.310981035232544, 2.3111250400543213, 2.3105664253234863, 2.310051202774048], "accuracy": [0.09166556596755981, 0.09206181764602661, 0.09298639744520187, 0.08849557489156723, 0.0874389111995697, 0.08928807079792023], "val_loss": [2.3074424266815186, 2.3074424266815186, 2.3074424266815186, 2.3074424266815186, 2.3074424266815186, 2.3074424266815186], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]