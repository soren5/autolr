[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8417142629623413, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2077081203460693, 1.6102300882339478, 1.1514307260513306, 0.9794048070907593, 0.8973121643066406, 0.8222435116767883, 0.791385293006897, 0.7365950345993042, 0.7334077954292297, 0.7006921172142029, 0.6922953724861145, 0.692403256893158, 0.6512479186058044, 0.6531451344490051, 0.6332763433456421, 0.6189137101173401, 0.5943940877914429, 0.5863563418388367, 0.5888650417327881, 0.5842664241790771, 0.56288081407547, 0.5610871315002441, 0.5396990776062012, 0.5399054884910583, 0.5226237177848816, 0.5163185596466064, 0.5309684872627258, 0.5105008482933044, 0.5188131332397461, 0.5059487819671631, 0.49179768562316895, 0.4865516424179077, 0.4864364564418793, 0.47607848048210144, 0.4917108714580536, 0.4756295382976532, 0.46055111289024353, 0.4574596583843231, 0.46058785915374756, 0.45044270157814026, 0.4399486184120178, 0.43229129910469055, 0.42839565873146057, 0.43103906512260437, 0.42623525857925415, 0.4272191822528839, 0.4219270348548889], "accuracy": [0.26839256286621094, 0.5027077198028564, 0.5915995240211487, 0.6477347612380981, 0.6741513609886169, 0.6999075412750244, 0.7071720957756042, 0.7283053994178772, 0.7285695672035217, 0.7400607466697693, 0.7376832365989685, 0.7420420050621033, 0.7528728246688843, 0.7577598690986633, 0.7622507214546204, 0.7637035846710205, 0.7788931727409363, 0.7740060687065125, 0.7792893648147583, 0.7786290049552917, 0.7857614755630493, 0.7922335267066956, 0.798309326171875, 0.796328067779541, 0.8009510040283203, 0.8078193068504333, 0.8009510040283203, 0.8078193068504333, 0.8049134612083435, 0.8123101592063904, 0.8149517774581909, 0.8175934553146362, 0.8138951063156128, 0.8204993009567261, 0.8150838613510132, 0.8208954930305481, 0.8302733898162842, 0.8318583965301514, 0.8253863453865051, 0.8317263126373291, 0.8372738361358643, 0.8407079577445984, 0.8424250483512878, 0.8428213000297546, 0.8428213000297546, 0.8385946154594421, 0.8385946154594421], "val_loss": [1.9147803783416748, 1.1072604656219482, 0.8754653334617615, 0.7892142534255981, 0.7189775109291077, 0.6569888591766357, 0.6683310866355896, 0.6210072636604309, 0.623332679271698, 0.5856184363365173, 0.5871120691299438, 0.5528313517570496, 0.5712869763374329, 0.5723806023597717, 0.5518144369125366, 0.5424619913101196, 0.518944263458252, 0.5222842693328857, 0.5188546776771545, 0.5253469944000244, 0.5368593335151672, 0.48886701464653015, 0.48825541138648987, 0.48666104674339294, 0.475978285074234, 0.4682517945766449, 0.4727296233177185, 0.48372045159339905, 0.45416486263275146, 0.4625483453273773, 0.447085440158844, 0.4712051451206207, 0.4378942847251892, 0.4782346487045288, 0.4446753263473511, 0.44033536314964294, 0.42698556184768677, 0.4388590455055237, 0.424290269613266, 0.41849252581596375, 0.446769118309021, 0.410571813583374, 0.4261409640312195, 0.41722753643989563, 0.4148833751678467, 0.4121547043323517, 0.41129377484321594], "val_accuracy": [0.48633334040641785, 0.6606666445732117, 0.6893333196640015, 0.7039999961853027, 0.7326666712760925, 0.7523333430290222, 0.7396666407585144, 0.7543333172798157, 0.762666642665863, 0.7796666622161865, 0.7756666541099548, 0.7870000004768372, 0.7796666622161865, 0.7773333191871643, 0.7760000228881836, 0.7916666865348816, 0.8026666641235352, 0.7986666560173035, 0.8029999732971191, 0.7960000038146973, 0.784333348274231, 0.8080000281333923, 0.8056666851043701, 0.8140000104904175, 0.8209999799728394, 0.8193333148956299, 0.8209999799728394, 0.8196666836738586, 0.828000009059906, 0.8203333616256714, 0.8273333311080933, 0.8216666579246521, 0.8320000171661377, 0.8236666917800903, 0.8316666483879089, 0.8320000171661377, 0.8423333168029785, 0.8286666870117188, 0.8393333554267883, 0.8389999866485596, 0.8309999704360962, 0.843999981880188, 0.8370000123977661, 0.8413333296775818, 0.8370000123977661, 0.843666672706604, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1, 0], [0, 39, 39, 99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7940000295639038, "mapping_values": [1, 11, 5, 6, 4, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.190086603164673, 1.4774028062820435, 1.1002243757247925, 0.9652418494224548, 0.864922285079956, 0.7910587191581726, 0.759967565536499, 0.7229312658309937, 0.7136920094490051, 0.6868579387664795, 0.6788205504417419, 0.6456265449523926, 0.6245386600494385, 0.6407920122146606, 0.5964482426643372, 0.6258972883224487, 0.6016731858253479], "accuracy": [0.2715625464916229, 0.5091797709465027, 0.6120724081993103, 0.6460176706314087, 0.6930392384529114, 0.7063795924186707, 0.7143045663833618, 0.7265883088111877, 0.7314753532409668, 0.7423061728477478, 0.7475894689559937, 0.7606657147407532, 0.7660810947418213, 0.7564390301704407, 0.7744023203849792, 0.7650244235992432, 0.7720248103141785], "val_loss": [1.7306230068206787, 0.97003173828125, 0.8952013254165649, 0.7531073689460754, 0.698788583278656, 0.7836909890174866, 0.6482511162757874, 0.67170649766922, 0.645179033279419, 0.6026280522346497, 0.5994046330451965, 0.5759519338607788, 0.5759455561637878, 0.56111741065979, 0.562253475189209, 0.5609780550003052, 0.5608457922935486], "val_accuracy": [0.5830000042915344, 0.6553333401679993, 0.6579999923706055, 0.7133333086967468, 0.7303333282470703, 0.6826666593551636, 0.746666669845581, 0.7269999980926514, 0.7480000257492065, 0.7703333497047424, 0.7643333077430725, 0.7806666493415833, 0.7649999856948853, 0.7763333320617676, 0.7796666622161865, 0.7733333110809326, 0.7766666412353516]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6, 2, 5, 3, 2, 7, 1, 0, 4, 9, 4, 5, 7, 3], [1, 0, 1, 0, 2, 2, 3, 1, 0, 2, 2, 2, 0, 3], [0, 39, 39, 51, 15], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 0], [0, 6, 1], [29], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 20, 14, 5, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha)), tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(grad, tf.math.negative(grad))), alpha)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.math.add(grad, tf.math.multiply(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 7, 3, 2], [0, 0, 3, 1, 0], [16, 17], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 5, 3, 2, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3040730953216553, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 4], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 9], [0, 0, 0, 1, 0, 0, 0, 1], [0, 2, 0, 7, 5, 9], [0, 6, 1], [0, 68], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 8, 6, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3029587268829346, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]