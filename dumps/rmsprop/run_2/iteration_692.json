[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8111428618431091, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207381248474121, 1.5992506742477417, 1.1278775930404663, 0.9865996241569519, 0.8628369569778442, 0.8373440504074097, 0.8028640747070312, 0.745878279209137, 0.7413089275360107, 0.7103225588798523, 0.7118584513664246, 0.6819654107093811, 0.6411895751953125, 0.6494351029396057, 0.6320666670799255, 0.6073866486549377, 0.6149385571479797, 0.599535346031189, 0.5873183608055115, 0.5755390524864197, 0.5735194087028503, 0.55814129114151, 0.5478607416152954, 0.5384433269500732, 0.5333544015884399, 0.5182115435600281, 0.5255714654922485, 0.5279686450958252, 0.5022966861724854, 0.5059524178504944, 0.492827832698822, 0.5018778443336487, 0.48333707451820374, 0.47744616866111755, 0.48411333560943604, 0.46726194024086, 0.4707692861557007, 0.47244152426719666, 0.45039644837379456, 0.44922035932540894, 0.45154064893722534, 0.4496898353099823, 0.44140318036079407, 0.43581411242485046, 0.4175073802471161, 0.4302476942539215, 0.42236045002937317, 0.4174700975418091], "accuracy": [0.2588825821876526, 0.5097081065177917, 0.6004490852355957, 0.6499801874160767, 0.6894729733467102, 0.6985867023468018, 0.7024171352386475, 0.7304186820983887, 0.7269845604896545, 0.7362303733825684, 0.7368907928466797, 0.7450799345970154, 0.7677981853485107, 0.7646281719207764, 0.7647602558135986, 0.7799497842788696, 0.7716285586357117, 0.7807422876358032, 0.7845727205276489, 0.7840443849563599, 0.7917051911354065, 0.7940827012062073, 0.7946110367774963, 0.7993659973144531, 0.8029322624206543, 0.8108572363853455, 0.8050455451011658, 0.8030643463134766, 0.8162726163864136, 0.8170651197433472, 0.8251221776008606, 0.8168009519577026, 0.8215559124946594, 0.8278959393501282, 0.8195747137069702, 0.829216718673706, 0.8301413059234619, 0.8273676037788391, 0.835160493850708, 0.8352925777435303, 0.8359529972076416, 0.8358209133148193, 0.8405758738517761, 0.8383304476737976, 0.8465195894241333, 0.8397833704948425, 0.8470479249954224, 0.8457271456718445], "val_loss": [1.913365125656128, 1.0822222232818604, 0.9082608222961426, 0.7749974727630615, 0.7997948527336121, 0.7078797221183777, 0.6555529236793518, 0.6341769099235535, 0.6086326837539673, 0.6113085150718689, 0.5722867250442505, 0.5634416937828064, 0.5884711146354675, 0.5325734615325928, 0.5295977592468262, 0.5349221229553223, 0.5210333466529846, 0.5113126635551453, 0.5108920931816101, 0.4922284483909607, 0.491580605506897, 0.4776521921157837, 0.4702898859977722, 0.46612370014190674, 0.4643869996070862, 0.4530303180217743, 0.46015408635139465, 0.44430404901504517, 0.4343377947807312, 0.4537586271762848, 0.4283920228481293, 0.4272351861000061, 0.4312218725681305, 0.4238852858543396, 0.4245959520339966, 0.4130386412143707, 0.42717117071151733, 0.418128103017807, 0.40281999111175537, 0.40481969714164734, 0.3965684473514557, 0.39217692613601685, 0.39131060242652893, 0.39329224824905396, 0.39120569825172424, 0.38118794560432434, 0.38206249475479126, 0.38447245955467224], "val_accuracy": [0.5583333373069763, 0.6586666703224182, 0.6636666655540466, 0.7153333425521851, 0.6970000267028809, 0.7110000252723694, 0.7443333268165588, 0.7636666893959045, 0.7693333625793457, 0.762333333492279, 0.7846666574478149, 0.7943333387374878, 0.7599999904632568, 0.8076666593551636, 0.8046666383743286, 0.7923333048820496, 0.8026666641235352, 0.8086666464805603, 0.7923333048820496, 0.8153333067893982, 0.8163333535194397, 0.8203333616256714, 0.8243333101272583, 0.8276666402816772, 0.8316666483879089, 0.8330000042915344, 0.8230000138282776, 0.8376666903495789, 0.8403333425521851, 0.8253333568572998, 0.8403333425521851, 0.8433333039283752, 0.8429999947547913, 0.8450000286102295, 0.8356666564941406, 0.8489999771118164, 0.8383333086967468, 0.8479999899864197, 0.8533333539962769, 0.8483333587646484, 0.8529999852180481, 0.856333315372467, 0.8613333106040955, 0.8546666502952576, 0.8603333234786987, 0.8610000014305115, 0.859666645526886, 0.8550000190734863]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 8, 1, 7, 9, 8, 7, 3, 9, 0, 3, 1, 3, 5, 6, 5, 6, 1, 7, 5, 4, 8, 3, 1, 9, 6, 3, 2, 4, 8, 5], [3, 2, 1, 0, 1, 0, 3, 3, 0, 0, 3, 1, 3, 0, 0, 0, 0, 1, 2, 2], [0, 39, 39, 2, 58, 82, 74, 27, 98, 16, 21], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 7, 2, 5, 4, 1, 4, 1, 8, 9, 9], [0, 6, 1, 6, 0, 0], [0, 22, 3, 77, 34], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 56, 36, 20, 11, 4, 2, 2, 1, 18, 12, 6, 5, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.add(grad, alpha)), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(grad, tf.math.square(tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.multiply(tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, grad)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha)))), tf.math.square(grad)), grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303278684616089, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 2, 7, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 2, 1, 6, 0], [33, 50], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 10, 5, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.842899655400475e+25, 10641.662109375, 16697.52734375, 20999.826171875, 24034.0859375, 27111.052734375, 30089.9453125, 32201.916015625, 32795.05859375, 33190.53125], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.10368511080741882, 0.10011887550354004, 0.09642054885625839, 0.1006472036242485, 0.09694888442754745, 0.09655263274908066, 0.10117553919553757, 0.09285431355237961], "val_loss": [8159.04345703125, 13340.923828125, 17635.779296875, 22978.373046875, 28375.283203125, 29450.322265625, 30418.080078125, 31070.21875, 31952.01953125, 36273.09375], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09866666793823242, 0.10000000149011612, 0.10366666316986084, 0.1003333330154419, 0.09933333098888397, 0.09866666793823242, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 5, 1], [0, 6, 1, 1, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 6, 3, 3, 0, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088035583496094, 2.3111660480499268, 2.3096983432769775, 2.3093068599700928, 2.309602737426758, 2.3095204830169678], "accuracy": [0.09219389408826828, 0.09074098616838455, 0.09391097724437714, 0.09034473448991776, 0.09060890227556229, 0.09285431355237961], "val_loss": [2.3084678649902344, 2.3084678649902344, 2.3084678649902344, 2.3084678649902344, 2.3084678649902344, 2.3084678649902344], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 0], [0, 1, 1, 0, 1], [0, 39, 39], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 19], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 12, 7, 5, 2, 1, 0, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3085944652557373, 2.3100454807281494, 2.3098859786987305, 2.3097143173217773, 2.310992956161499, 2.3094966411590576], "accuracy": [0.0948355570435524, 0.09100515395402908, 0.08717474341392517, 0.09232597798109055, 0.09325055778026581, 0.0940430611371994], "val_loss": [2.3080873489379883, 2.3080873489379883, 2.3080873489379883, 2.3080873489379883, 2.3080873489379883, 2.3080873489379883], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]