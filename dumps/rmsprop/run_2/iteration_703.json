[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.838857114315033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211806058883667, 1.6133888959884644, 1.1368712186813354, 0.9789895415306091, 0.853240430355072, 0.8173983693122864, 0.7695525288581848, 0.751378059387207, 0.7128691077232361, 0.6660146117210388, 0.6721326112747192, 0.6599895358085632, 0.6601142883300781, 0.6152777075767517, 0.6188104748725891, 0.5956632494926453, 0.5759469866752625, 0.5865174531936646, 0.5580456256866455, 0.5445942282676697, 0.5450920462608337, 0.5351818799972534, 0.5359737873077393, 0.5088581442832947, 0.5165283679962158, 0.5052024722099304, 0.5007309913635254, 0.49349597096443176, 0.4744701087474823, 0.4835567772388458, 0.4766271114349365, 0.45895496010780334, 0.4663097560405731, 0.45819801092147827, 0.47105351090431213, 0.44018059968948364, 0.45095059275627136, 0.4335891902446747, 0.4497222900390625, 0.4341101050376892, 0.4238292872905731, 0.4287770688533783, 0.4180588722229004, 0.41795942187309265, 0.41645708680152893, 0.41369229555130005, 0.4019811749458313], "accuracy": [0.27222296595573425, 0.5061418414115906, 0.6053361296653748, 0.6510368585586548, 0.6901333928108215, 0.7008321285247803, 0.7119271159172058, 0.7182670831680298, 0.7367587089538574, 0.752212405204773, 0.7432307600975037, 0.7537974119186401, 0.7526086568832397, 0.7700436115264893, 0.7664773464202881, 0.7707040309906006, 0.7860256433486938, 0.7788931727409363, 0.7901201844215393, 0.7992339134216309, 0.7926297783851624, 0.8004226684570312, 0.7951393723487854, 0.8120459914207458, 0.8119139075279236, 0.8149517774581909, 0.8103289008140564, 0.8168009519577026, 0.8240655064582825, 0.8212917447090149, 0.8255184292793274, 0.8278959393501282, 0.8267071843147278, 0.8281601071357727, 0.821820080280304, 0.8355567455291748, 0.832650899887085, 0.8374059200286865, 0.8379341959953308, 0.837141752243042, 0.8442742228507996, 0.8412362933158875, 0.8492933511734009, 0.8459912538528442, 0.8482366800308228, 0.8438779711723328, 0.8543124794960022], "val_loss": [1.9319312572479248, 1.1189463138580322, 0.9674168229103088, 0.8022512793540955, 0.7557014226913452, 0.700982928276062, 0.6909837126731873, 0.6590938568115234, 0.6186699867248535, 0.6019042730331421, 0.6070328950881958, 0.5972403287887573, 0.577630341053009, 0.5831503868103027, 0.5543724894523621, 0.5686705708503723, 0.5392806529998779, 0.5348600149154663, 0.5237497687339783, 0.5284523963928223, 0.5224747061729431, 0.5327773690223694, 0.5033202171325684, 0.5100730657577515, 0.5081507563591003, 0.5023310780525208, 0.501876711845398, 0.48597395420074463, 0.48704952001571655, 0.4847078323364258, 0.4766204357147217, 0.4725663363933563, 0.46490800380706787, 0.46539655327796936, 0.4685537815093994, 0.48321446776390076, 0.4516300559043884, 0.4640636742115021, 0.4452795088291168, 0.4502147138118744, 0.4444698095321655, 0.4416659474372864, 0.44883936643600464, 0.4397280216217041, 0.43795979022979736, 0.43877139687538147, 0.4519475996494293], "val_accuracy": [0.5410000085830688, 0.6526666879653931, 0.6193333268165588, 0.6919999718666077, 0.7126666903495789, 0.7390000224113464, 0.734000027179718, 0.7513333559036255, 0.7680000066757202, 0.7753333449363708, 0.7596666812896729, 0.7703333497047424, 0.7806666493415833, 0.765999972820282, 0.7879999876022339, 0.7803333401679993, 0.7906666398048401, 0.7996666431427002, 0.8013333082199097, 0.793666660785675, 0.8019999861717224, 0.7986666560173035, 0.812333345413208, 0.8023333549499512, 0.8116666674613953, 0.812333345413208, 0.809333324432373, 0.8169999718666077, 0.8166666626930237, 0.8163333535194397, 0.8230000138282776, 0.828000009059906, 0.8296666741371155, 0.8273333311080933, 0.8233333230018616, 0.8216666579246521, 0.840666651725769, 0.8253333568572998, 0.8356666564941406, 0.831333339214325, 0.8373333215713501, 0.846666693687439, 0.8349999785423279, 0.8420000076293945, 0.8420000076293945, 0.8339999914169312, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [9, 2, 8, 2, 2, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 1, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 6, 0, 8, 2], [4, 0, 3, 1, 0], [16, 18], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 5, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 5, 2, 3, 5], [0, 2, 3, 1, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [0, 1, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 1, 7], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031468391418457, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 3, 2], [0, 42, 39], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [7, 2, 0, 2, 5, 6, 8, 7], [0, 6, 1, 0, 6, 4], [0, 97], [1], [0], [0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 14, 8, 6, 2, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310335636138916, 2.311180830001831, 2.309938669204712, 2.310688018798828, 2.3105251789093018, 2.3100454807281494], "accuracy": [0.0882314071059227, 0.09008057415485382, 0.09430722147226334, 0.08809932321310043, 0.09272222965955734, 0.09166556596755981], "val_loss": [2.3094844818115234, 2.3094844818115234, 2.3094844818115234, 2.3094844818115234, 2.3094844818115234, 2.3094844818115234], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]