[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134671211242676, 1.6188912391662598, 1.1682333946228027, 0.9787992835044861, 0.8762130737304688, 0.8412721753120422, 0.8140362501144409, 0.7519533038139343, 0.7365739941596985, 0.7130790948867798, 0.6995294690132141, 0.6598197817802429, 0.659053385257721, 0.6643668413162231, 0.6353116631507874, 0.6236130595207214, 0.6085476279258728, 0.6092466115951538, 0.6009515523910522, 0.5707265138626099, 0.5654731392860413, 0.5671126842498779, 0.5534784197807312, 0.545200526714325, 0.565083384513855, 0.5324474573135376, 0.5313300490379333, 0.5199886560440063, 0.5126873850822449, 0.4987392723560333, 0.5005797147750854, 0.49619054794311523, 0.4898585379123688, 0.49735888838768005, 0.4707476496696472, 0.4707801043987274, 0.4792691171169281, 0.46223577857017517, 0.4608812928199768, 0.461501806974411, 0.4550791382789612, 0.45488205552101135, 0.4438401460647583, 0.43555814027786255, 0.4313097596168518, 0.43490517139434814, 0.43415865302085876, 0.43088042736053467, 0.41765540838241577, 0.41726648807525635], "accuracy": [0.2583542466163635, 0.49993395805358887, 0.5976753234863281, 0.6535464525222778, 0.6923788189888, 0.6952846646308899, 0.7008321285247803, 0.7195879220962524, 0.7305507659912109, 0.7364945411682129, 0.735569953918457, 0.7547219395637512, 0.7578919529914856, 0.7536653280258179, 0.7584202885627747, 0.7650244235992432, 0.7736098170280457, 0.767930269241333, 0.7721568942070007, 0.7885351777076721, 0.7897239327430725, 0.7881389260292053, 0.7959318161010742, 0.7971205711364746, 0.7886672616004944, 0.8004226684570312, 0.8017435073852539, 0.8086118102073669, 0.8082155585289001, 0.8182538747787476, 0.8117818236351013, 0.8202351331710815, 0.8185180425643921, 0.8129705190658569, 0.8182538747787476, 0.8239334225654602, 0.8212917447090149, 0.8310658931732178, 0.8335754871368408, 0.8285563588142395, 0.8296129703521729, 0.8289526104927063, 0.8380662798881531, 0.8421608805656433, 0.8430854678153992, 0.8436138033866882, 0.8366134166717529, 0.8432175517082214, 0.8454629778862, 0.8437458872795105], "val_loss": [1.9265198707580566, 1.1332205533981323, 0.8648799061775208, 0.7723639607429504, 0.7492506504058838, 0.7577378153800964, 0.6582714319229126, 0.6123123168945312, 0.5989484190940857, 0.5653815269470215, 0.56988126039505, 0.5509026646614075, 0.5508593916893005, 0.5285961031913757, 0.5341199636459351, 0.5033364295959473, 0.5077347755432129, 0.5057003498077393, 0.4940372705459595, 0.4913838803768158, 0.4837636351585388, 0.47732335329055786, 0.4870144724845886, 0.46020010113716125, 0.45475977659225464, 0.46034741401672363, 0.4528365433216095, 0.4391835629940033, 0.4454168975353241, 0.4405284821987152, 0.4460647702217102, 0.4278630018234253, 0.4287986159324646, 0.4283938705921173, 0.44595980644226074, 0.4403451383113861, 0.43213626742362976, 0.4105587601661682, 0.4291718602180481, 0.41879284381866455, 0.41101109981536865, 0.4094502627849579, 0.40233227610588074, 0.3999916911125183, 0.3986697196960449, 0.3978133201599121, 0.3970223665237427, 0.3997880816459656, 0.4000806212425232, 0.3924277424812317], "val_accuracy": [0.5586666464805603, 0.6226666569709778, 0.6936666369438171, 0.734000027179718, 0.7176666855812073, 0.7066666483879089, 0.7540000081062317, 0.7596666812896729, 0.7753333449363708, 0.7876666784286499, 0.7886666655540466, 0.793666660785675, 0.7960000038146973, 0.8056666851043701, 0.7976666688919067, 0.812333345413208, 0.8090000152587891, 0.8050000071525574, 0.8100000023841858, 0.8230000138282776, 0.812333345413208, 0.8233333230018616, 0.8106666803359985, 0.8346666693687439, 0.8333333134651184, 0.8259999752044678, 0.8306666612625122, 0.8389999866485596, 0.8386666774749756, 0.8393333554267883, 0.8323333263397217, 0.8403333425521851, 0.8389999866485596, 0.8336666822433472, 0.8293333053588867, 0.8336666822433472, 0.8443333506584167, 0.8506666421890259, 0.8339999914169312, 0.8460000157356262, 0.8429999947547913, 0.8536666631698608, 0.8496666550636292, 0.8526666760444641, 0.8579999804496765, 0.847000002861023, 0.8506666421890259, 0.8510000109672546, 0.846666693687439, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2050833702087402, 1.583884596824646, 1.1696943044662476, 0.9633654356002808, 0.8778573274612427, 0.8383263945579529, 0.7954661846160889, 0.7576870322227478, 0.7457860112190247, 0.7177146673202515, 0.6810374855995178, 0.6634311079978943, 0.6555269360542297, 0.6549431085586548, 0.6324737071990967, 0.621493935585022, 0.6115362048149109, 0.5960386395454407, 0.5938802361488342, 0.570815920829773, 0.5649276971817017, 0.5536198616027832, 0.5548053979873657, 0.5638405084609985, 0.5309982299804688, 0.5265852212905884], "accuracy": [0.26799631118774414, 0.502971887588501, 0.5909391045570374, 0.6567164063453674, 0.689869225025177, 0.6997754573822021, 0.7057191729545593, 0.7228899598121643, 0.7248712182044983, 0.7432307600975037, 0.7520803213119507, 0.759080708026886, 0.7618544697761536, 0.7567031979560852, 0.767401933670044, 0.7720248103141785, 0.77677983045578, 0.783119797706604, 0.7791573405265808, 0.7972526550292969, 0.789988100528717, 0.7935543656349182, 0.7948752045631409, 0.7951393723487854, 0.807158887386322, 0.8054417967796326], "val_loss": [1.898736834526062, 1.0446674823760986, 0.8961858749389648, 0.7478265166282654, 0.700126051902771, 0.73201584815979, 0.6823013424873352, 0.6948449015617371, 0.6097817420959473, 0.5776882767677307, 0.5666937828063965, 0.5614429116249084, 0.5484933257102966, 0.5729352831840515, 0.5591922402381897, 0.514352023601532, 0.5290341377258301, 0.5135486125946045, 0.5126538872718811, 0.5191596150398254, 0.47964444756507874, 0.48607292771339417, 0.47703954577445984, 0.48402950167655945, 0.47630345821380615, 0.4994349479675293], "val_accuracy": [0.5413333177566528, 0.6853333115577698, 0.6833333373069763, 0.7203333377838135, 0.7383333444595337, 0.7143333554267883, 0.7473333477973938, 0.737333357334137, 0.7646666765213013, 0.7796666622161865, 0.7746666669845581, 0.7973333597183228, 0.793666660785675, 0.7706666588783264, 0.784333348274231, 0.8006666898727417, 0.812666654586792, 0.8116666674613953, 0.8069999814033508, 0.8043333292007446, 0.8296666741371155, 0.8216666579246521, 0.8263333439826965, 0.8236666917800903, 0.8256666660308838, 0.8173333406448364]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 9, 0], [0, 0, 1, 0, 2], [72, 39, 39, 13], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 0], [0, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 3], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09272222965955734, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 11, 7, 4, 4, 11, 7, 4, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 7, 7, 0], [2, 0, 1, 0, 2, 0, 0], [0, 39, 39, 43], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 0, 2, 1, 0], [16, 24], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 9], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 4, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4485.1416015625, 83992027136.0, 3.603879913880289e+17, 9.027055445354083e+23, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.1022322028875351, 0.09998679161071777], "val_loss": [497044.46875, 6154496770048.0, 2.3077326298971898e+19, 5.633853311690967e+25, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 5, 3, 8, 2], [1, 5, 3, 1, 4], [16, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 5, 8, 6], [0, 0, 1, 2], [0, 61], [1], [0], [1], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 0, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(alpha, beta))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30965256690979, 2.3108749389648438, 2.3101820945739746, 2.3079748153686523, 2.308544397354126, 2.30998158454895], "accuracy": [0.09615638852119446, 0.09536388516426086, 0.09021265059709549, 0.09576013684272766, 0.09496764093637466, 0.09166556596755981], "val_loss": [2.3087961673736572, 2.3087961673736572, 2.3087961673736572, 2.3087961673736572, 2.3087961673736572, 2.3087961673736572], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 3, 3, 1, 3, 9], [0, 0, 1, 0, 2], [22, 39, 39], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 6, 0, 6, 3, 4, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 4, 7], [0], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 7, 3, 4, 3, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096611499786377, 2.3095662593841553, 2.3091936111450195, 2.310492515563965, 2.3100876808166504, 2.310328483581543], "accuracy": [0.08955223858356476, 0.09470347315073013, 0.09219389408826828, 0.09153348207473755, 0.09932637959718704, 0.08889182657003403], "val_loss": [2.3081607818603516, 2.3081607818603516, 2.3081607818603516, 2.3081607818603516, 2.3081607818603516, 2.3081607818603516], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]