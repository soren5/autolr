[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 3, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 7], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8125714063644409, "mapping_values": [1, 2, 2, 0, 1, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.197906494140625, 1.5383009910583496, 1.0996185541152954, 0.9820486307144165, 0.8416875004768372, 0.7959108948707581, 0.7618505954742432, 0.7355551719665527, 0.7185007929801941, 0.6530591249465942, 0.6853039264678955, 0.6392824649810791, 0.6237117648124695, 0.638182520866394, 0.5902433395385742, 0.5999736785888672, 0.5554980635643005, 0.5847764611244202, 0.5555938482284546, 0.5557136535644531, 0.527965784072876, 0.5423300862312317, 0.5322114825248718, 0.522731363773346, 0.5146702527999878, 0.5046195387840271, 0.502284824848175, 0.48994210362434387, 0.4809364974498749, 0.4850583076477051, 0.46747922897338867, 0.4643881618976593], "accuracy": [0.2689208686351776, 0.4880464971065521, 0.6091665625572205, 0.6509047746658325, 0.69673752784729, 0.7041342258453369, 0.7141724824905396, 0.7273808121681213, 0.7255316376686096, 0.7602694630622864, 0.7448157668113708, 0.7617223858833313, 0.7687227725982666, 0.76542067527771, 0.7815347909927368, 0.7737419009208679, 0.791441023349762, 0.7860256433486938, 0.7960638999938965, 0.7913089394569397, 0.8018755912780762, 0.7973847389221191, 0.8010830879211426, 0.8045172095298767, 0.8035926818847656, 0.817461371421814, 0.8129705190658569, 0.8204993009567261, 0.8305375576019287, 0.8204993009567261, 0.8348963260650635, 0.8319904804229736], "val_loss": [1.7509819269180298, 0.9930123686790466, 0.809751570224762, 0.7271706461906433, 0.666005551815033, 0.6263657808303833, 0.657457709312439, 0.6466153264045715, 0.5908485651016235, 0.5572187304496765, 0.5629547834396362, 0.531617283821106, 0.6184924840927124, 0.5256136059761047, 0.6154627799987793, 0.49740633368492126, 0.5129286050796509, 0.5201734304428101, 0.48735156655311584, 0.47592777013778687, 0.49407950043678284, 0.47664421796798706, 0.46829932928085327, 0.4860908091068268, 0.44412899017333984, 0.4637652635574341, 0.4401954412460327, 0.42668062448501587, 0.45529353618621826, 0.4217437207698822, 0.42969343066215515, 0.43579503893852234], "val_accuracy": [0.515999972820282, 0.6549999713897705, 0.6919999718666077, 0.7316666841506958, 0.7386666536331177, 0.7536666393280029, 0.7266666889190674, 0.7506666779518127, 0.7829999923706055, 0.7863333225250244, 0.8026666641235352, 0.8026666641235352, 0.7486666440963745, 0.8003333210945129, 0.7393333315849304, 0.8140000104904175, 0.8076666593551636, 0.7923333048820496, 0.8253333568572998, 0.8169999718666077, 0.8043333292007446, 0.8276666402816772, 0.8196666836738586, 0.8063333630561829, 0.8393333554267883, 0.8193333148956299, 0.8476666808128357, 0.8423333168029785, 0.8226666450500488, 0.8476666808128357, 0.8399999737739563, 0.8370000123977661]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8111428618431091, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21000337600708, 1.6004470586776733, 1.1636772155761719, 0.9640383124351501, 0.8808325529098511, 0.828432559967041, 0.7836294770240784, 0.7323744297027588, 0.7167542576789856, 0.6890233159065247, 0.7031720876693726, 0.6689067482948303, 0.6333476305007935, 0.6194905638694763, 0.6094256639480591, 0.607505738735199, 0.5796077251434326, 0.586174488067627, 0.5641466379165649, 0.5716696977615356, 0.5546102523803711, 0.5490260124206543, 0.5253071188926697, 0.5378895401954651, 0.5189072489738464, 0.5199729800224304, 0.5112255215644836, 0.5024517178535461, 0.49370330572128296, 0.4841596484184265, 0.48182496428489685, 0.47884342074394226, 0.4691762626171112, 0.4704185128211975, 0.4661073386669159, 0.4581119120121002, 0.45005324482917786, 0.44125211238861084, 0.4467935860157013], "accuracy": [0.2767137885093689, 0.5060097575187683, 0.5832782983779907, 0.656980574131012, 0.6826046705245972, 0.6931713223457336, 0.7077004313468933, 0.7317395210266113, 0.7314753532409668, 0.7473253011703491, 0.7358341217041016, 0.7511557340621948, 0.7585523724555969, 0.7667415142059326, 0.7680623531341553, 0.7633073329925537, 0.7825914621353149, 0.7779685854911804, 0.7836481332778931, 0.7790252566337585, 0.793422281742096, 0.7938185334205627, 0.7998943328857422, 0.7991018295288086, 0.8013472557067871, 0.8010830879211426, 0.8031964302062988, 0.8131026029586792, 0.8125742673873901, 0.8148196935653687, 0.8203672170639038, 0.817461371421814, 0.8256505131721497, 0.8230088353157043, 0.8224804997444153, 0.8271034359931946, 0.8302733898162842, 0.8354246616363525, 0.8327829837799072], "val_loss": [1.9189505577087402, 1.0906057357788086, 0.8989620804786682, 0.7744168043136597, 0.7313485741615295, 0.7216148376464844, 0.7049841284751892, 0.6395845413208008, 0.6461432576179504, 0.594998836517334, 0.6483235359191895, 0.5672799348831177, 0.5834834575653076, 0.5588614344596863, 0.5442352890968323, 0.5536726713180542, 0.5362817645072937, 0.5102936029434204, 0.5040632486343384, 0.5107182860374451, 0.5220364928245544, 0.4900352656841278, 0.4921337962150574, 0.47712305188179016, 0.48927175998687744, 0.46386921405792236, 0.4584020674228668, 0.46086278557777405, 0.4470352232456207, 0.44328412413597107, 0.45228612422943115, 0.44913575053215027, 0.4411751627922058, 0.4261070191860199, 0.43221908807754517, 0.45490941405296326, 0.4197344183921814, 0.42164430022239685, 0.42769184708595276], "val_accuracy": [0.5413333177566528, 0.6660000085830688, 0.6940000057220459, 0.7173333168029785, 0.7273333072662354, 0.7226666808128357, 0.7213333249092102, 0.7553333044052124, 0.7570000290870667, 0.7720000147819519, 0.7429999709129333, 0.7879999876022339, 0.7766666412353516, 0.7923333048820496, 0.7916666865348816, 0.8006666898727417, 0.7933333516120911, 0.8040000200271606, 0.8040000200271606, 0.8040000200271606, 0.800000011920929, 0.8220000267028809, 0.812666654586792, 0.812333345413208, 0.8140000104904175, 0.8253333568572998, 0.8360000252723694, 0.8293333053588867, 0.8366666436195374, 0.8316666483879089, 0.8289999961853027, 0.8316666483879089, 0.82833331823349, 0.846666693687439, 0.8379999995231628, 0.8240000009536743, 0.8463333249092102, 0.8416666388511658, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 1, 5], [0, 0, 1, 0, 2], [14, 39, 86], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 1, 7, 8, 4, 6, 4, 9, 2, 8, 3], [3, 0, 0, 1, 0, 0, 4, 2, 3, 1], [40, 1, 34, 79, 22], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 4], [1, 6, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.multiply(grad, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.add(grad, tf.math.pow(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 1, 0, 1, 1, 26, 16, 10, 5, 9, 5, 4, 0, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 4, 5, 2, 3, 5, 2], [0, 2, 1, 0, 2, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [9, 2, 0, 6, 2, 8, 2], [2, 0, 3, 1, 0], [30, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 6, 0, 0, 5, 2, 1], [0, 4, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [330163.09375, 48162524.0, 829951296.0, 5833643520.0, 25695285248.0, 84306911232.0], "accuracy": [0.09787346422672272, 0.09787346422672272, 0.09879804402589798, 0.0940430611371994, 0.1002509593963623, 0.09681680053472519], "val_loss": [3331988.75, 179236752.0, 1923050624.0, 10482469888.0, 39262019584.0, 115808428032.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 1, 7, 3, 5, 1, 2, 5, 5, 6, 4], [0, 1, 1, 0, 2, 1, 0, 3, 0], [0, 39, 39, 63], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 5, 5, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 9, 0, 2, 5, 2, 1], [4, 6, 1, 6, 0], [0, 7], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 4, 10, 6, 4, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(alpha))), tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]