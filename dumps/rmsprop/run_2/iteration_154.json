[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2129502296447754, 1.6109510660171509, 1.1736944913864136, 0.9450408816337585, 0.9106680750846863, 0.8266115188598633, 0.7748409509658813, 0.7633150219917297, 0.7181677222251892, 0.7105395793914795, 0.6801416873931885, 0.6528491377830505, 0.6425919532775879, 0.6448100805282593, 0.6242871284484863, 0.6068597435951233, 0.6063817739486694, 0.569435179233551, 0.5785483717918396, 0.5781115293502808, 0.5640629529953003, 0.5509379506111145, 0.5486047863960266, 0.5186651945114136, 0.5218137502670288, 0.5281622409820557, 0.516418993473053, 0.500710666179657, 0.49237677454948425, 0.4928578734397888, 0.4844343066215515, 0.493161678314209, 0.4754718840122223, 0.48186472058296204, 0.46001049876213074, 0.4591825306415558, 0.4648169279098511, 0.4408741593360901, 0.45326560735702515, 0.4388192296028137, 0.445124089717865, 0.43848463892936707], "accuracy": [0.2627129852771759, 0.5153876543045044, 0.5890899300575256, 0.6641130447387695, 0.669792652130127, 0.7014925479888916, 0.7187954187393188, 0.7218332886695862, 0.7374191284179688, 0.7360982894897461, 0.7483819723129272, 0.759080708026886, 0.7573636174201965, 0.76106196641922, 0.7753269076347351, 0.7746664881706238, 0.7769119143486023, 0.7910447716712952, 0.7803460359573364, 0.7897239327430725, 0.7930260300636292, 0.7954035401344299, 0.7956677079200745, 0.8092722296714783, 0.811649739742279, 0.8055738806724548, 0.8112534880638123, 0.8189142942428589, 0.817461371421814, 0.8197067975997925, 0.8208954930305481, 0.8202351331710815, 0.8228767514228821, 0.8231409192085266, 0.8337075710296631, 0.8280280232429504, 0.8255184292793274, 0.8348963260650635, 0.8343679904937744, 0.8367455005645752, 0.8335754871368408, 0.8352925777435303], "val_loss": [1.9338151216506958, 1.119307279586792, 0.8980164527893066, 0.8385321497917175, 0.7421149015426636, 0.718365490436554, 0.6946348547935486, 0.6427045464515686, 0.6626806855201721, 0.6366453766822815, 0.6093921065330505, 0.6015883088111877, 0.5895814299583435, 0.5860370993614197, 0.5827302932739258, 0.5498309135437012, 0.5465254187583923, 0.5353208780288696, 0.5277416706085205, 0.5631130933761597, 0.5252808332443237, 0.5091458559036255, 0.5005986094474792, 0.4937087297439575, 0.4955405294895172, 0.4880620837211609, 0.4890059530735016, 0.4797498881816864, 0.5057992339134216, 0.49568554759025574, 0.4863012731075287, 0.46899503469467163, 0.4594278633594513, 0.4591163694858551, 0.45269131660461426, 0.46152186393737793, 0.4399987757205963, 0.45959463715553284, 0.4619404971599579, 0.4373467266559601, 0.43091264367103577, 0.441723108291626], "val_accuracy": [0.5743333101272583, 0.6446666717529297, 0.6940000057220459, 0.6823333501815796, 0.7293333411216736, 0.7273333072662354, 0.734000027179718, 0.7586666941642761, 0.7383333444595337, 0.7566666603088379, 0.7760000228881836, 0.7720000147819519, 0.7853333353996277, 0.7773333191871643, 0.7879999876022339, 0.7933333516120911, 0.8009999990463257, 0.8013333082199097, 0.8046666383743286, 0.781333327293396, 0.8109999895095825, 0.8140000104904175, 0.8240000009536743, 0.8226666450500488, 0.8223333358764648, 0.8220000267028809, 0.8220000267028809, 0.8270000219345093, 0.812666654586792, 0.8106666803359985, 0.8256666660308838, 0.8303333520889282, 0.8396666646003723, 0.8259999752044678, 0.8410000205039978, 0.828000009059906, 0.8453333377838135, 0.8243333101272583, 0.8276666402816772, 0.8379999995231628, 0.8429999947547913, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [67, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 7, 1, 6, 7, 0, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 9, 2, 5, 2, 1], [7, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 5, 5, 2, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11134592443704605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 2, 7, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 4, 1, 5, 2, 1, 0, 6, 3, 4, 2, 2, 6, 5, 9, 4, 8, 7, 4, 3, 6, 1, 8, 7, 6, 1, 1, 9, 1, 4, 8, 5, 3, 2, 6, 2, 3, 6, 3, 2, 3, 0], [0, 6, 5, 7, 0, 6, 3, 5, 4, 1, 1, 2, 3, 1, 6, 5, 5, 1, 3, 5, 0, 7, 7, 3, 1, 7, 4, 6, 1, 3, 1], [0, 22, 15, 72, 26], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 4, 2, 2, 0, 74, 43, 31, 5, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.square(sigma), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.sqrt(tf.math.add(grad, grad)), alpha)), tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, beta)), tf.math.divide_no_nan(sigma, tf.math.subtract(tf.math.subtract(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.subtract(tf.math.pow(tf.math.sqrt(grad), tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, sigma)))), grad)), tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.multiply(sigma, tf.math.divide_no_nan(alpha, grad)))))), tf.math.multiply(grad, grad)), tf.math.add(tf.math.multiply(alpha, sigma), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3189308643341064, 8.739293098449707, 1541.896240234375, 386664.3125, 100667384.0, 25804580864.0, 6566071762944.0], "accuracy": [0.09840179979801178, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.5658090114593506, 70.23615264892578, 15027.5078125, 3827429.75, 979763136.0, 250819362816.0, 64209756880896.0], "val_accuracy": [0.09600000083446503, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 1, 2, 3, 5, 8], [0, 2, 1, 0, 1], [1, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 1, 9, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 86], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 9, 2, 5, 2, 1], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308946371078491, 2.309648275375366, 2.309730291366577, 2.3087353706359863, 2.3097288608551025, 2.3099207878112793], "accuracy": [0.09074098616838455, 0.09034473448991776, 0.09417514503002167, 0.09642054885625839, 0.09140139818191528, 0.09100515395402908], "val_loss": [2.308546781539917, 2.308546781539917, 2.308546781539917, 2.308546781539917, 2.308546781539917, 2.308546781539917], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]