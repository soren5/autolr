[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8128571510314941, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208585023880005, 1.5960570573806763, 1.1640076637268066, 0.9845690131187439, 0.9040811657905579, 0.8248226046562195, 0.7810621857643127, 0.7399418354034424, 0.7552265524864197, 0.7008225321769714, 0.6868678331375122, 0.6713245511054993, 0.6633601784706116, 0.6258394718170166, 0.6273819804191589, 0.6181946396827698, 0.5989100337028503, 0.5756465196609497, 0.5738038420677185, 0.5832186341285706, 0.5516883134841919, 0.5424479842185974, 0.5316056609153748, 0.5498318672180176, 0.5232571363449097, 0.5118039846420288, 0.5173742771148682, 0.49821993708610535, 0.49048078060150146, 0.4984617233276367, 0.4880761206150055, 0.48174595832824707, 0.47859933972358704, 0.4681242108345032, 0.46526840329170227, 0.4595816433429718, 0.4600259065628052, 0.44864046573638916, 0.4413037598133087, 0.44621342420578003, 0.43709656596183777, 0.4448257088661194, 0.42043939232826233], "accuracy": [0.2716946303844452, 0.507330596446991, 0.5930524468421936, 0.648659348487854, 0.6686038970947266, 0.7008321285247803, 0.7164179086685181, 0.7288337349891663, 0.7256637215614319, 0.7437590956687927, 0.7452120184898376, 0.7518161535263062, 0.7543256878852844, 0.7667415142059326, 0.7656848430633545, 0.7703077793121338, 0.7766477465629578, 0.785101056098938, 0.787082314491272, 0.7819310426712036, 0.7946110367774963, 0.7973847389221191, 0.8004226684570312, 0.791969358921051, 0.8049134612083435, 0.8120459914207458, 0.8101968169212341, 0.816008448600769, 0.8183859586715698, 0.8142913579940796, 0.8140271902084351, 0.8234050869941711, 0.8239334225654602, 0.8296129703521729, 0.82683926820755, 0.8342359066009521, 0.8304054737091064, 0.8325188159942627, 0.8352925777435303, 0.8337075710296631, 0.8417646288871765, 0.832650899887085, 0.8454629778862], "val_loss": [1.9133483171463013, 1.1322814226150513, 0.8977062106132507, 0.800199031829834, 0.7347611784934998, 0.6932962536811829, 0.6566488146781921, 0.7185797691345215, 0.6344385743141174, 0.6214858889579773, 0.61500483751297, 0.6081969738006592, 0.585472583770752, 0.5746005177497864, 0.567068338394165, 0.5558272004127502, 0.5478506088256836, 0.5478566288948059, 0.5506455898284912, 0.5378157496452332, 0.5153594017028809, 0.5087594985961914, 0.509729266166687, 0.5155714750289917, 0.5059159398078918, 0.5086621642112732, 0.4874534606933594, 0.49745336174964905, 0.48739001154899597, 0.5007122159004211, 0.510872483253479, 0.47198259830474854, 0.47305160760879517, 0.4573392868041992, 0.4643755555152893, 0.46236956119537354, 0.45232197642326355, 0.4513767957687378, 0.4618152379989624, 0.45213422179222107, 0.45427611470222473, 0.44259217381477356, 0.45064592361450195], "val_accuracy": [0.5653333067893982, 0.593666672706604, 0.6803333163261414, 0.7013333439826965, 0.7286666631698608, 0.7446666955947876, 0.7526666522026062, 0.7020000219345093, 0.7639999985694885, 0.768666684627533, 0.7703333497047424, 0.7733333110809326, 0.7743333578109741, 0.7833333611488342, 0.7900000214576721, 0.7973333597183228, 0.8046666383743286, 0.7839999794960022, 0.7973333597183228, 0.7986666560173035, 0.8153333067893982, 0.8149999976158142, 0.8186666369438171, 0.8153333067893982, 0.8176666498184204, 0.812666654586792, 0.8256666660308838, 0.8159999847412109, 0.8233333230018616, 0.8119999766349792, 0.8140000104904175, 0.8339999914169312, 0.8259999752044678, 0.8339999914169312, 0.8296666741371155, 0.8309999704360962, 0.8389999866485596, 0.8393333554267883, 0.8323333263397217, 0.8370000123977661, 0.8326666951179504, 0.8363333344459534, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 1, 5], [0, 2, 3, 0, 2], [13, 27, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [1, 1, 2, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1], [0, 6, 1, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.sqrt(tf.math.multiply(alpha, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [0, 68, 39], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 8, 8, 2, 9], [2, 0, 3, 0, 0], [16, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 1, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 8, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11993131786584854, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 5, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 5, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [10.256983757019043, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19231277704238892, 0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [8544.4990234375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 6, 3, 2, 3, 5, 3, 2, 0, 5, 9], [0, 2, 1, 0, 2, 1], [0, 26, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 8, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 17, 11, 6, 3, 1, 0, 1, 0, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.add(tf.math.negative(grad), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309764862060547, 2.3089699745178223, 2.309236526489258, 2.308438539505005, 2.310417413711548, 2.310269355773926], "accuracy": [0.0940430611371994, 0.09206181764602661, 0.09311848133802414, 0.09747721254825592, 0.08730682730674744, 0.09536388516426086], "val_loss": [2.30855393409729, 2.30855393409729, 2.30855393409729, 2.30855393409729, 2.30855393409729, 2.30855393409729], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]