[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8148571252822876, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207899570465088, 1.5864431858062744, 1.1180166006088257, 0.9657996296882629, 0.894172191619873, 0.8078556656837463, 0.7917094230651855, 0.7344038486480713, 0.7155293226242065, 0.6941839456558228, 0.6750200390815735, 0.6427980065345764, 0.6258785128593445, 0.6176125407218933, 0.6158772110939026, 0.6076950430870056, 0.5853559970855713, 0.5652329921722412, 0.5762771368026733, 0.5469651222229004, 0.5491413474082947, 0.55306476354599, 0.539151132106781, 0.5154595375061035, 0.5298095941543579, 0.5100895762443542, 0.5079258680343628, 0.4994109869003296, 0.4844658374786377, 0.49065160751342773, 0.4789544343948364, 0.47532641887664795, 0.46397608518600464, 0.46598294377326965, 0.4519331753253937, 0.4551379084587097, 0.440572053194046, 0.4466283917427063, 0.44608303904533386, 0.43959882855415344, 0.43349555134773254, 0.4304007291793823, 0.42462635040283203, 0.42176926136016846, 0.4198839068412781, 0.4126392602920532, 0.4078155755996704, 0.4077499210834503, 0.3992089629173279, 0.3956667184829712, 0.40132156014442444, 0.387418270111084, 0.3883027136325836, 0.3825489282608032, 0.3853107690811157, 0.38006100058555603, 0.3778027892112732, 0.3756296634674072, 0.36482512950897217], "accuracy": [0.26760005950927734, 0.520142674446106, 0.6087703108787537, 0.6625280380249023, 0.6757363677024841, 0.7014925479888916, 0.7040021419525146, 0.7234182953834534, 0.7290979027748108, 0.7416457533836365, 0.7413815855979919, 0.7588165402412415, 0.7693831920623779, 0.7642319202423096, 0.7667415142059326, 0.7707040309906006, 0.77677983045578, 0.7857614755630493, 0.7823272943496704, 0.7936864495277405, 0.7917051911354065, 0.7905164361000061, 0.7942147850990295, 0.8083476424217224, 0.8012151718139648, 0.8099326491355896, 0.8103289008140564, 0.8131026029586792, 0.8186501264572144, 0.8128384351730347, 0.8249900937080383, 0.8238013386726379, 0.828292191028595, 0.8253863453865051, 0.8314621448516846, 0.8269713521003723, 0.8389908671379089, 0.8315942287445068, 0.8338396549224854, 0.8400475382804871, 0.8368775844573975, 0.8388587832450867, 0.8425571322441101, 0.841500461101532, 0.8418967127799988, 0.8466516733169556, 0.8442742228507996, 0.8487650156021118, 0.8520671129226685, 0.8491612672805786, 0.8477083444595337, 0.8569541573524475, 0.8521991968154907, 0.8613129258155823, 0.8561616539955139, 0.8576145768165588, 0.8603883385658264, 0.8603883385658264, 0.8632941246032715], "val_loss": [1.9095089435577393, 1.0721359252929688, 0.9205197095870972, 0.8317328095436096, 0.7362643480300903, 0.7371291518211365, 0.6565109491348267, 0.6983397006988525, 0.6463515162467957, 0.6107274293899536, 0.6229091286659241, 0.5816660523414612, 0.6099187135696411, 0.6014959216117859, 0.5926324725151062, 0.5970236659049988, 0.5350577235221863, 0.5604225397109985, 0.5268029570579529, 0.5213618278503418, 0.558061957359314, 0.5107269883155823, 0.5139203667640686, 0.5015304088592529, 0.4839284121990204, 0.5407219529151917, 0.5192252397537231, 0.4991374611854553, 0.4785410463809967, 0.4736045002937317, 0.4631786346435547, 0.4659542739391327, 0.4795021712779999, 0.45916056632995605, 0.45218774676322937, 0.4423281252384186, 0.4406912922859192, 0.463221937417984, 0.4487350285053253, 0.4448031783103943, 0.44084906578063965, 0.46011975407600403, 0.45095938444137573, 0.4372151792049408, 0.4356195330619812, 0.4228653013706207, 0.4321112036705017, 0.4189671576023102, 0.4402415454387665, 0.42400190234184265, 0.42617398500442505, 0.4164825975894928, 0.4159107208251953, 0.4067365825176239, 0.4126648008823395, 0.4100080132484436, 0.4174592196941376, 0.420503169298172, 0.42880159616470337], "val_accuracy": [0.550000011920929, 0.6546666622161865, 0.6510000228881836, 0.6743333339691162, 0.7103333473205566, 0.7120000123977661, 0.7516666650772095, 0.7323333621025085, 0.753000020980835, 0.7570000290870667, 0.7573333382606506, 0.7793333530426025, 0.7643333077430725, 0.7570000290870667, 0.777999997138977, 0.762333333492279, 0.7876666784286499, 0.7796666622161865, 0.8043333292007446, 0.8029999732971191, 0.7806666493415833, 0.8119999766349792, 0.7976666688919067, 0.8143333196640015, 0.8173333406448364, 0.7870000004768372, 0.7976666688919067, 0.8029999732971191, 0.8230000138282776, 0.8236666917800903, 0.8236666917800903, 0.8226666450500488, 0.8183333277702332, 0.831333339214325, 0.8266666531562805, 0.8339999914169312, 0.8353333473205566, 0.8286666870117188, 0.8343333601951599, 0.8326666951179504, 0.8363333344459534, 0.8270000219345093, 0.8346666693687439, 0.8323333263397217, 0.8373333215713501, 0.8456666469573975, 0.8426666855812073, 0.8426666855812073, 0.8366666436195374, 0.8460000157356262, 0.843666672706604, 0.8429999947547913, 0.8493333458900452, 0.8526666760444641, 0.8510000109672546, 0.8473333120346069, 0.8463333249092102, 0.843666672706604, 0.8429999947547913]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 2, 3, 7, 4, 5, 8], [0, 2, 1, 0, 2, 2, 2, 0, 0], [0, 40, 39, 21], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 7, 4], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 4, 5, 3, 2, 0, 6, 5, 1, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.pow(grad, grad)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 1, 7, 2], [2, 5, 0, 1, 0, 1], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 9, 2, 5, 2, 1, 3, 9, 7], [5, 2, 1, 2, 7], [0, 7], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 13, 7, 6, 2, 15, 10, 5, 2, 3, 2, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(grad, tf.math.multiply(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 2, 0, 5], [0, 2, 1, 0, 2], [0, 99, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 2, 5, 2, 1, 0, 3, 7, 3, 8], [0, 6, 6, 4, 0, 5, 6, 6, 6], [0, 49], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 21, 12, 9, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, tf.math.negative(grad))))), tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.sqrt(grad), grad), grad))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 7, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 6], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 12, 7, 5, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3093228340148926, 2.3103573322296143, 2.3101589679718018, 2.309095621109009, 2.309889316558838, 2.31052565574646], "accuracy": [0.09219389408826828, 0.08915598690509796, 0.08928807079792023, 0.09259014576673508, 0.09100515395402908, 0.09087307006120682], "val_loss": [2.3082900047302246, 2.3082900047302246, 2.3082900047302246, 2.3082900047302246, 2.3082900047302246, 2.3082900047302246], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]