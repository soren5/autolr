[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8117142915725708, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2126150131225586, 1.6184875965118408, 1.168408751487732, 0.9582981467247009, 0.902165949344635, 0.8411110043525696, 0.7864377498626709, 0.754211962223053, 0.7462213635444641, 0.7204736471176147, 0.6964595913887024, 0.6845489740371704, 0.6507832407951355, 0.6341655254364014, 0.6437036395072937, 0.6203184723854065, 0.612171471118927, 0.5944940447807312, 0.5787491798400879, 0.5774447321891785, 0.5671769976615906, 0.5652655363082886, 0.5583826899528503, 0.538825511932373, 0.5306643843650818, 0.5399665236473083, 0.5289531350135803, 0.5232149958610535, 0.5138724446296692, 0.5075740218162537, 0.515388011932373, 0.48877909779548645, 0.4874684512615204, 0.48936107754707336, 0.4709864556789398, 0.4767794907093048, 0.4634965658187866, 0.46418455243110657, 0.46102970838546753, 0.4398691952228546, 0.45972782373428345, 0.4422118365764618, 0.45159322023391724, 0.43627849221229553, 0.43818411231040955, 0.42971211671829224, 0.425925076007843, 0.41951125860214233, 0.4237566590309143, 0.4134385287761688, 0.40485551953315735, 0.4094037711620331, 0.41412705183029175, 0.39895597100257874, 0.4005430340766907, 0.3955560028553009, 0.3875994384288788], "accuracy": [0.2620525658130646, 0.4983489513397217, 0.591731607913971, 0.6634526252746582, 0.6732267737388611, 0.6944921612739563, 0.7107383608818054, 0.7285695672035217, 0.7256637215614319, 0.7353057861328125, 0.7400607466697693, 0.7464007139205933, 0.7621186375617981, 0.7652885913848877, 0.7543256878852844, 0.7707040309906006, 0.7737419009208679, 0.7786290049552917, 0.7881389260292053, 0.7812706232070923, 0.7911768555641174, 0.7876105904579163, 0.7889314293861389, 0.7951393723487854, 0.8025360107421875, 0.7969884872436523, 0.8033285140991211, 0.8029322624206543, 0.8087438941001892, 0.8127063512802124, 0.8074230551719666, 0.8210275769233704, 0.8152159452438354, 0.8182538747787476, 0.8238013386726379, 0.821820080280304, 0.828820526599884, 0.8273676037788391, 0.828292191028595, 0.839519202709198, 0.8293488025665283, 0.8376700282096863, 0.8294808864593506, 0.8400475382804871, 0.8342359066009521, 0.8424250483512878, 0.8399154543876648, 0.8413683772087097, 0.8416325449943542, 0.8450667262077332, 0.8491612672805786, 0.8475762605667114, 0.8455950617790222, 0.8543124794960022, 0.8518029451370239, 0.8518029451370239, 0.8556333184242249], "val_loss": [1.92164945602417, 1.1296769380569458, 0.8657978773117065, 0.7807102799415588, 0.7821075916290283, 0.7082625031471252, 0.67835533618927, 0.635898768901825, 0.6749192476272583, 0.5964362025260925, 0.5729305148124695, 0.5811840891838074, 0.5615746378898621, 0.5569347143173218, 0.5636195540428162, 0.5690768957138062, 0.5155977606773376, 0.5086527466773987, 0.5314050316810608, 0.4868963956832886, 0.4889131784439087, 0.49436280131340027, 0.4992881715297699, 0.4783950746059418, 0.4766610562801361, 0.4906150698661804, 0.4788450002670288, 0.4915432035923004, 0.45652979612350464, 0.468932181596756, 0.4697284400463104, 0.45681747794151306, 0.44829273223876953, 0.46458590030670166, 0.4388903081417084, 0.4363211989402771, 0.42027547955513, 0.44615739583969116, 0.4159105122089386, 0.4149501621723175, 0.4099111258983612, 0.42809197306632996, 0.42693954706192017, 0.4018157422542572, 0.40593525767326355, 0.39886343479156494, 0.39466792345046997, 0.43191632628440857, 0.406843900680542, 0.40130817890167236, 0.38875719904899597, 0.388378381729126, 0.39237549901008606, 0.3893692195415497, 0.3834170997142792, 0.37940555810928345, 0.38278400897979736], "val_accuracy": [0.5199999809265137, 0.6476666927337646, 0.7066666483879089, 0.7196666598320007, 0.706333339214325, 0.7506666779518127, 0.7446666955947876, 0.7696666717529297, 0.7480000257492065, 0.7836666703224182, 0.7903333306312561, 0.7876666784286499, 0.7950000166893005, 0.7926666736602783, 0.7929999828338623, 0.784333348274231, 0.8153333067893982, 0.812666654586792, 0.7876666784286499, 0.8253333568572998, 0.8163333535194397, 0.8209999799728394, 0.8059999942779541, 0.8240000009536743, 0.8289999961853027, 0.8213333487510681, 0.82833331823349, 0.8119999766349792, 0.8343333601951599, 0.8236666917800903, 0.8216666579246521, 0.8286666870117188, 0.8346666693687439, 0.8216666579246521, 0.8410000205039978, 0.8396666646003723, 0.8479999899864197, 0.8366666436195374, 0.8500000238418579, 0.8460000157356262, 0.8523333072662354, 0.8396666646003723, 0.8426666855812073, 0.8533333539962769, 0.8553333282470703, 0.8536666631698608, 0.8603333234786987, 0.8386666774749756, 0.8533333539962769, 0.8519999980926514, 0.8566666841506958, 0.8643333315849304, 0.8586666584014893, 0.8606666922569275, 0.8569999933242798, 0.859000027179718, 0.8600000143051147]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [9, 2, 3, 2, 7, 5], [2, 2, 1, 0, 2], [58, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [87, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 7, 2, 5, 3, 1, 7], [0, 1, 1, 6, 7, 1, 7], [78, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 15, 8, 7, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)), tf.math.multiply(tf.math.subtract(grad, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [91, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 3, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(sigma, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 2, 6, 5, 3, 1], [0, 2, 2, 1, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [44, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 2, 2, 1], [0, 6, 1, 6, 0, 1], [0, 22], [1], [0], [1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309290647506714, 2.30976939201355, 2.30991268157959, 2.3103861808776855, 2.3089659214019775, 2.3113534450531006], "accuracy": [0.09338264167308807, 0.09628847241401672, 0.09140139818191528, 0.08955223858356476, 0.0940430611371994, 0.0886276587843895], "val_loss": [2.309682846069336, 2.309682846069336, 2.309682846069336, 2.309682846069336, 2.309682846069336, 2.309682846069336], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 3, 1, 3, 5], [0, 2, 1, 0, 2], [70, 30, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [2, 0, 0, 2, 5, 2, 1], [0, 2, 1, 6, 0], [0], [0, 0, 1, 1], [0, 3], [2, 5], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 7, 4, 3, 1, 12, 7, 5, 2, 8, 5, 3, 1, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, grad))", "other_info": {"loss": [2.3095271587371826, 2.3103928565979004, 2.3103244304656982, 2.309317111968994, 2.3107779026031494, 2.310751438140869, 2.3097639083862305, 2.310736894607544, 2.308553695678711, 2.3103744983673096, 2.310211420059204, 2.3104844093322754], "accuracy": [0.08875974267721176, 0.09311848133802414, 0.09206181764602661, 0.0948355570435524, 0.09285431355237961, 0.08955223858356476, 0.09140139818191528, 0.08757099509239197, 0.09034473448991776, 0.09325055778026581, 0.08902391046285629, 0.0948355570435524], "val_loss": [2.308769464492798, 2.3088185787200928, 2.3088643550872803, 2.308905601501465, 2.308950424194336, 2.3089993000030518, 2.3090453147888184, 2.309091806411743, 2.309130907058716, 2.309173107147217, 2.309218645095825, 2.3092639446258545], "val_accuracy": [0.09433333575725555, 0.0949999988079071, 0.09466666728258133, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]