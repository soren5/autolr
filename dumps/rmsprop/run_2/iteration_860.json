[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8142856955528259, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211867570877075, 1.602839708328247, 1.1416277885437012, 0.9725247025489807, 0.8799960017204285, 0.8062419295310974, 0.7846229076385498, 0.7439315915107727, 0.7290528416633606, 0.699263334274292, 0.675212562084198, 0.6580148935317993, 0.6358087658882141, 0.6331323385238647, 0.6277627944946289, 0.6068520545959473, 0.5875855088233948, 0.6015600562095642, 0.5689207315444946, 0.5815800428390503, 0.5666837692260742, 0.5515003800392151, 0.5634850859642029], "accuracy": [0.2654867172241211, 0.5110289454460144, 0.5967507362365723, 0.656980574131012, 0.6870955228805542, 0.7061154246330261, 0.7157574892044067, 0.7275128960609436, 0.7312111854553223, 0.7430986762046814, 0.7534011602401733, 0.7627789974212646, 0.7647602558135986, 0.7688548564910889, 0.7662131786346436, 0.7761194109916687, 0.7835160493850708, 0.7803460359573364, 0.7924976944923401, 0.7882710099220276, 0.7964601516723633, 0.7968564033508301, 0.7930260300636292], "val_loss": [1.9271243810653687, 1.142599105834961, 0.9195676445960999, 0.7947887182235718, 0.7205794453620911, 0.7141166925430298, 0.7109829187393188, 0.6658318042755127, 0.6491944789886475, 0.6292120814323425, 0.6369158625602722, 0.6006625890731812, 0.5817378163337708, 0.5631840229034424, 0.5898252129554749, 0.5729743838310242, 0.5858423113822937, 0.523253858089447, 0.5427078604698181, 0.5186604261398315, 0.5248127579689026, 0.5864986777305603, 0.4994243085384369], "val_accuracy": [0.5796666741371155, 0.6133333444595337, 0.668666660785675, 0.6983333230018616, 0.7336666584014893, 0.7236666679382324, 0.7126666903495789, 0.7289999723434448, 0.7570000290870667, 0.7633333206176758, 0.7509999871253967, 0.7680000066757202, 0.781333327293396, 0.7889999747276306, 0.7806666493415833, 0.7836666703224182, 0.778333306312561, 0.8100000023841858, 0.7866666913032532, 0.8069999814033508, 0.8036666512489319, 0.7649999856948853, 0.8086666464805603]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.11542857438325882, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.849632501602173, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20512482523918152, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1905.9298095703125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.12099999934434891, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 3, 3, 2, 3, 5, 1, 1, 5, 2, 8, 3, 9, 0], [2, 2, 0, 1, 2, 0, 1, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 4, 6, 2, 4, 2, 1, 4, 6, 5, 0, 3, 8, 0, 9, 1, 0, 0, 4, 0], [0, 7, 1, 6, 0, 3, 4, 4, 6, 0, 7], [0, 22, 70, 76], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 22, 14, 8, 3, 11, 6, 5, 1, 31, 20, 11, 4, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.square(alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha), grad), tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(sigma, tf.math.sqrt(tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.negative(grad), tf.math.negative(tf.math.pow(grad, grad)))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309082269668579, 2.31105637550354, 2.310570001602173, 2.3098998069763184, 2.3106234073638916, 2.310218334197998], "accuracy": [0.09509972482919693, 0.09932637959718704, 0.08677849918603897, 0.09245806187391281, 0.08585391938686371, 0.09298639744520187], "val_loss": [2.3082661628723145, 2.3082661628723145, 2.3082661628723145, 2.3082661628723145, 2.3082661628723145, 2.3082661628723145], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 2, 3, 2, 3, 5, 5, 8, 0, 1, 7, 9], [0, 2, 3, 0, 2, 0], [0, 39, 39, 86], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 1], [2, 6, 1, 6, 0], [0, 54], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 18, 12, 6, 4, 11, 6, 5, 2, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(grad)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(tf.math.subtract(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309765577316284, 2.310553550720215, 2.3087542057037354, 2.308516025543213, 2.310045003890991, 2.3098127841949463], "accuracy": [0.0940430611371994, 0.08889182657003403, 0.09509972482919693, 0.09140139818191528, 0.08968432247638702, 0.09153348207473755], "val_loss": [2.308319091796875, 2.3081724643707275, 2.308084726333618, 2.3080227375030518, 2.307973861694336, 2.307934284210205], "val_accuracy": [0.09099999815225601, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 1, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 50], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 4, 2, 5, 8, 8], [0, 6, 1, 6, 0], [0], [0, 0, 0, 0, 0, 1, 1, 0], [0, 4, 9, 6, 6, 9], [2, 2], [0, 19]], "fitness": -0.08914285898208618, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 11, 7, 4, 1, 8, 6, 2, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.sqrt(grad)), alpha)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(beta, beta), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3100786209106445, 2.3105363845825195, 2.310269832611084, 2.3093678951263428, 2.310177803039551, 2.3104138374328613], "accuracy": [0.09153348207473755, 0.08770307898521423, 0.08994849026203156, 0.09074098616838455, 0.09708096832036972, 0.09074098616838455], "val_loss": [2.307981014251709, 2.307981014251709, 2.307981014251709, 2.307981014251709, 2.307981014251709, 2.307981014251709], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]