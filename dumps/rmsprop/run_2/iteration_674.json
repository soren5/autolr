[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213582992553711, 1.6167513132095337, 1.157891035079956, 0.9961627721786499, 0.8971961140632629, 0.8503108620643616, 0.7831262350082397, 0.7581875324249268, 0.7235933542251587, 0.7381895184516907, 0.6909688711166382, 0.6746194362640381, 0.6519432663917542, 0.6489023566246033, 0.6394103765487671, 0.6247293949127197, 0.6083805561065674, 0.6038951277732849, 0.57721346616745, 0.5783624649047852, 0.5589919090270996, 0.5616603493690491, 0.553630530834198, 0.5391335487365723, 0.5373578071594238, 0.5369505882263184, 0.5070878863334656, 0.5140414834022522, 0.5062647461891174, 0.5075761675834656, 0.48629045486450195], "accuracy": [0.2670717239379883, 0.5048210024833679, 0.5992603302001953, 0.6441685557365417, 0.6744155287742615, 0.6927750706672668, 0.711530864238739, 0.7164179086685181, 0.7300224304199219, 0.7206445932388306, 0.7404569983482361, 0.7557786107063293, 0.7581561207771301, 0.757099449634552, 0.7693831920623779, 0.7676661014556885, 0.77677983045578, 0.7749306559562683, 0.7873464822769165, 0.7913089394569397, 0.7946110367774963, 0.7940827012062073, 0.7984414100646973, 0.8024039268493652, 0.8026680946350098, 0.8029322624206543, 0.8177255392074585, 0.8109893202781677, 0.8183859586715698, 0.8169330358505249, 0.8226125836372375], "val_loss": [1.9321367740631104, 1.1169015169143677, 0.9569713473320007, 0.7813273072242737, 0.7295257449150085, 0.7245897054672241, 0.669871985912323, 0.6591349840164185, 0.6370936036109924, 0.6101022362709045, 0.6074265837669373, 0.6077870726585388, 0.5869928598403931, 0.5700810551643372, 0.5994914174079895, 0.5500242114067078, 0.553631067276001, 0.5494592189788818, 0.5256978869438171, 0.5258814692497253, 0.516158938407898, 0.5057829022407532, 0.5081876516342163, 0.4890669882297516, 0.5179281234741211, 0.47925636172294617, 0.49636274576187134, 0.4811646044254303, 0.4911603331565857, 0.47967076301574707, 0.46931788325309753], "val_accuracy": [0.531333327293396, 0.652999997138977, 0.6546666622161865, 0.7183333039283752, 0.7393333315849304, 0.7226666808128357, 0.7570000290870667, 0.7516666650772095, 0.765666663646698, 0.7770000100135803, 0.781333327293396, 0.7733333110809326, 0.7776666879653931, 0.7916666865348816, 0.7793333530426025, 0.7946666479110718, 0.7876666784286499, 0.7863333225250244, 0.8059999942779541, 0.8029999732971191, 0.8080000281333923, 0.8083333373069763, 0.8163333535194397, 0.8203333616256714, 0.8003333210945129, 0.828000009059906, 0.8083333373069763, 0.8223333358764648, 0.8203333616256714, 0.8213333487510681, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 3, 3, 2, 3, 5, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 8, 5, 2, 6], [0, 5, 1, 6, 0], [0, 22], [1], [0], [5], [0]], "fitness": -0.23514285683631897, "mapping_values": [1, 12, 7, 5, 2, 12, 7, 5, 2, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.435368776321411, 2.223453998565674, 2.3207685947418213, 2.350778341293335, 2.2142157554626465, 2.3086936473846436, 2.304079294204712, 2.3033347129821777, 2.3031957149505615], "accuracy": [0.204860657453537, 0.18795403838157654, 0.1578391194343567, 0.11015717685222626, 0.1888786107301712, 0.1002509593963623, 0.09694888442754745, 0.09642054885625839, 0.10130762308835983], "val_loss": [2.083664655685425, 2.2998695373535156, 2.6210875511169434, 2.172370672225952, 2.3162200450897217, 2.303520441055298, 2.3027191162109375, 2.3026130199432373, 2.302694082260132], "val_accuracy": [0.15133333206176758, 0.23399999737739563, 0.0989999994635582, 0.2356666624546051, 0.09799999743700027, 0.10133333504199982, 0.10133333504199982, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 7, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [8, 2, 0, 6, 3, 6, 2, 4, 8, 2, 7, 5, 7, 0, 9], [2, 0, 1, 1, 0, 4, 5, 4, 5], [16, 1, 89], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 2, 5, 1], [0, 4, 1, 6, 0, 0, 7], [0, 22, 8], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 24, 15, 9, 3, 17, 10, 7, 3, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.sqrt(tf.math.add(grad, tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.math.subtract(tf.math.add(grad, tf.math.square(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 7, 2, 3, 5, 8, 8, 9, 2], [0, 2, 3, 0, 0], [0, 39, 39, 46], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 5, 4, 0], [16, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 6, 2, 7], [3, 6, 1, 6, 0], [0, 22], [0, 0, 1, 0, 1, 1], [0, 6, 6], [5, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 4, 9, 5, 4, 1, 11, 6, 5, 1, 6, 3, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.sqrt(grad)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(grad, alpha))), tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(beta, grad)))", "other_info": {"loss": [43297198080.0, 5879.201171875, 10918.865234375, 15912.232421875, 20936.185546875, 25956.5234375], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3818.234619140625, 8832.05859375, 13829.6904296875, 18848.603515625, 23854.822265625, 28860.060546875], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 5, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101582527160645, 2.3092939853668213, 2.309593915939331, 2.3098011016845703, 2.308896780014038, 2.3095178604125977], "accuracy": [0.0956280529499054, 0.08955223858356476, 0.09734513610601425, 0.09153348207473755, 0.09259014576673508, 0.09879804402589798], "val_loss": [2.308727264404297, 2.308727264404297, 2.308727264404297, 2.308727264404297, 2.308727264404297, 2.308727264404297], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]