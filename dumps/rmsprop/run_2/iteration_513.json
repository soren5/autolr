[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.808571457862854, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2075278759002686, 1.5992672443389893, 1.1308039426803589, 1.004015326499939, 0.8826804757118225, 0.8555717468261719, 0.7642689347267151, 0.7508112788200378, 0.7550339698791504, 0.7031605839729309, 0.6972588896751404, 0.6675976514816284, 0.6449143290519714, 0.6508546471595764, 0.6090665459632874, 0.595258891582489, 0.5974990725517273, 0.5951929092407227, 0.5750362873077393, 0.5817019939422607, 0.571832537651062, 0.5556609034538269, 0.5493699312210083, 0.5285587310791016, 0.5231369137763977, 0.5260384678840637, 0.5254521369934082, 0.5129384398460388, 0.4994819462299347, 0.5013821721076965, 0.48408758640289307, 0.4792186915874481, 0.4801923632621765, 0.4823533296585083, 0.4735608398914337, 0.4605766534805298, 0.46760305762290955, 0.4629806578159332, 0.4491979777812958, 0.44215473532676697, 0.4402870237827301], "accuracy": [0.275260865688324, 0.5143309831619263, 0.6056002974510193, 0.6406022906303406, 0.6832650899887085, 0.6860388517379761, 0.7207766771316528, 0.7280412316322327, 0.7248712182044983, 0.7360982894897461, 0.7401928305625916, 0.7567031979560852, 0.7585523724555969, 0.7578919529914856, 0.7709681391716003, 0.7777044177055359, 0.7761194109916687, 0.7792893648147583, 0.7878747582435608, 0.780610203742981, 0.7884030938148499, 0.789988100528717, 0.7987055778503418, 0.8054417967796326, 0.8095363974571228, 0.8070268034934998, 0.8054417967796326, 0.8142913579940796, 0.8175934553146362, 0.816008448600769, 0.8224804997444153, 0.8272355198860168, 0.8208954930305481, 0.8228767514228821, 0.8238013386726379, 0.8354246616363525, 0.8261788487434387, 0.8319904804229736, 0.8391229510307312, 0.8399154543876648, 0.8367455005645752], "val_loss": [1.9153215885162354, 1.1096482276916504, 1.0644659996032715, 0.7917622923851013, 0.7209416627883911, 0.7070492506027222, 0.6442821621894836, 0.6669840812683105, 0.634015679359436, 0.60477614402771, 0.5981663465499878, 0.6154382228851318, 0.5949646234512329, 0.5545943975448608, 0.5611856579780579, 0.5496519207954407, 0.5701757669448853, 0.5269439220428467, 0.573483407497406, 0.5382339954376221, 0.5181287527084351, 0.5314149856567383, 0.5128472447395325, 0.4881395995616913, 0.4856516420841217, 0.49278005957603455, 0.48124438524246216, 0.4864077866077423, 0.48355206847190857, 0.4733905792236328, 0.46613672375679016, 0.47751352190971375, 0.473388135433197, 0.46499210596084595, 0.4622322916984558, 0.4443894028663635, 0.4439467787742615, 0.4491170346736908, 0.439319372177124, 0.44906994700431824, 0.44644418358802795], "val_accuracy": [0.5889999866485596, 0.6623333096504211, 0.5923333168029785, 0.7080000042915344, 0.7273333072662354, 0.7196666598320007, 0.7566666603088379, 0.7483333349227905, 0.7509999871253967, 0.7556666731834412, 0.7646666765213013, 0.765666663646698, 0.7576666474342346, 0.7926666736602783, 0.7893333435058594, 0.7913333177566528, 0.7696666717529297, 0.8013333082199097, 0.7703333497047424, 0.7919999957084656, 0.8046666383743286, 0.7916666865348816, 0.8109999895095825, 0.8183333277702332, 0.8233333230018616, 0.8146666884422302, 0.8209999799728394, 0.8143333196640015, 0.8119999766349792, 0.824999988079071, 0.8203333616256714, 0.8190000057220459, 0.8273333311080933, 0.8223333358764648, 0.8256666660308838, 0.8386666774749756, 0.8386666774749756, 0.8353333473205566, 0.8373333215713501, 0.8303333520889282, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 5, 0], [0, 6, 4, 6, 0], [0], [1], [0], [6], [0]], "fitness": -0.27399998903274536, "mapping_values": [1, 6, 4, 2, 2, 4, 3, 1, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3415613174438477, 2.300863027572632, 2.279698371887207, 2.3049323558807373, 2.303495407104492, 2.3033673763275146, 2.303346872329712], "accuracy": [0.19244486093521118, 0.10870426893234253, 0.1942940205335617, 0.09932637959718704, 0.10051512718200684, 0.09721305221319199, 0.09734513610601425], "val_loss": [2.3025429248809814, 2.2874865531921387, 2.306563138961792, 2.303129196166992, 2.302691698074341, 2.302640438079834, 2.3025639057159424], "val_accuracy": [0.09833333641290665, 0.257999986410141, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10066666454076767, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [32, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 0, 3, 1, 0], [16, 24], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 5, 0, 2, 5, 2, 1], [0, 6, 0, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 5], [0, 2, 1, 0, 3], [0, 44, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [5, 4, 1, 6, 0], [0, 22], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 1, 0, 1, 0, 12, 7, 5, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.317430257797241, 2.3662407398223877, 2.544672727584839, 1961.2913818359375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0866464152932167, 0.06907938420772552, 0.07092854380607605, 0.0940430611371994, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.336958169937134, 2.4312825202941895, 2.878498077392578, 1049626253721600.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08100000023841858, 0.08100000023841858, 0.09733333438634872, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 4, 3, 1, 3, 5, 7, 6, 2, 9], [0, 2, 1, 0, 2, 1, 0], [18, 39, 39, 9], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 0, 1, 5, 6, 3], [0, 6, 1, 1, 5], [0], [0, 1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 17, 10, 7, 4, 9, 5, 4, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3100178241729736, 2.3116536140441895, 2.3109512329101562, 2.3099989891052246, 2.309063673019409, 2.3093390464782715], "accuracy": [0.0874389111995697, 0.09087307006120682, 0.09060890227556229, 0.09417514503002167, 0.09496764093637466, 0.09153348207473755], "val_loss": [2.308664321899414, 2.308664321899414, 2.308664321899414, 2.308664321899414, 2.308664321899414, 2.308664321899414], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]