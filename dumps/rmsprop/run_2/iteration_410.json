[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8054285645484924, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20928692817688, 1.5974185466766357, 1.1581918001174927, 0.9986684918403625, 0.9013929963111877, 0.8289319276809692, 0.7948660254478455, 0.7791029214859009, 0.7260174751281738, 0.7102281451225281, 0.6976246237754822, 0.6793361306190491, 0.6401880979537964, 0.6362538933753967, 0.626386284828186, 0.6159814596176147, 0.6021010279655457, 0.5874649882316589, 0.5827218890190125, 0.568488359451294, 0.5656129717826843, 0.5553843975067139, 0.5451681613922119, 0.5521003007888794, 0.5319520235061646, 0.5316112637519836, 0.5334501266479492, 0.5055676102638245, 0.5071560740470886, 0.4978431463241577, 0.4934936761856079, 0.4923800528049469, 0.4775421619415283, 0.47429028153419495, 0.4776453673839569, 0.46681785583496094, 0.4636576771736145, 0.46323782205581665, 0.45365622639656067, 0.45003098249435425, 0.44280555844306946, 0.4364013373851776, 0.426934152841568, 0.43745845556259155, 0.4268081784248352], "accuracy": [0.26865673065185547, 0.5068022608757019, 0.5955620408058167, 0.6457535624504089, 0.6742834448814392, 0.6992471218109131, 0.71100252866745, 0.7123233675956726, 0.7312111854553223, 0.7343811988830566, 0.7396644949913025, 0.7510236501693726, 0.7602694630622864, 0.7662131786346436, 0.7658169269561768, 0.7740060687065125, 0.7791573405265808, 0.7807422876358032, 0.785101056098938, 0.7897239327430725, 0.7864218950271606, 0.7952714562416077, 0.7980451583862305, 0.7943468689918518, 0.8005547523498535, 0.8024039268493652, 0.7993659973144531, 0.8175934553146362, 0.81112140417099, 0.8156121969223022, 0.8230088353157043, 0.8186501264572144, 0.8231409192085266, 0.828292191028595, 0.8244617581367493, 0.824329674243927, 0.8289526104927063, 0.8276317715644836, 0.8325188159942627, 0.8333113193511963, 0.8352925777435303, 0.8370096683502197, 0.846387505531311, 0.8391229510307312, 0.8450667262077332], "val_loss": [1.9195688962936401, 1.0976072549819946, 1.0621308088302612, 0.8143090009689331, 0.7863699793815613, 0.7615850567817688, 0.6975165009498596, 0.7037442922592163, 0.6486177444458008, 0.6224718689918518, 0.6209761500358582, 0.6021803617477417, 0.5858545899391174, 0.592248797416687, 0.6167325377464294, 0.5871362090110779, 0.5474612712860107, 0.5489037036895752, 0.5469473004341125, 0.535775899887085, 0.5401873588562012, 0.5283389091491699, 0.5344827771186829, 0.5291810035705566, 0.5125814080238342, 0.5123454332351685, 0.5052958726882935, 0.4984104335308075, 0.5079421997070312, 0.4901784360408783, 0.5328568816184998, 0.48629793524742126, 0.4849812686443329, 0.4968203008174896, 0.46984460949897766, 0.4769611954689026, 0.470335990190506, 0.4610213339328766, 0.4770283102989197, 0.45557835698127747, 0.4568328559398651, 0.4504627287387848, 0.4658401608467102, 0.45379871129989624, 0.456322580575943], "val_accuracy": [0.5643333196640015, 0.6620000004768372, 0.5956666469573975, 0.687333345413208, 0.6973333358764648, 0.706333339214325, 0.7323333621025085, 0.718999981880188, 0.765666663646698, 0.7793333530426025, 0.7706666588783264, 0.7770000100135803, 0.7883333563804626, 0.7789999842643738, 0.753333330154419, 0.7826666831970215, 0.7996666431427002, 0.8080000281333923, 0.8063333630561829, 0.812333345413208, 0.7990000247955322, 0.8100000023841858, 0.8056666851043701, 0.8116666674613953, 0.8213333487510681, 0.8140000104904175, 0.8169999718666077, 0.8173333406448364, 0.8186666369438171, 0.8259999752044678, 0.8076666593551636, 0.8303333520889282, 0.8286666870117188, 0.8199999928474426, 0.8356666564941406, 0.8263333439826965, 0.8299999833106995, 0.8356666564941406, 0.8293333053588867, 0.8426666855812073, 0.8363333344459534, 0.8366666436195374, 0.8346666693687439, 0.8343333601951599, 0.8349999785423279]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [8, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 0, 2, 8], [2, 0, 3, 1, 0, 0], [16, 1, 14], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 1, 7, 0, 1], [5, 6, 1, 1, 2, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.negative(tf.math.subtract(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}, "mapping_values": [1, 2, 1, 1, 1, 16, 10, 6, 3, 14, 8, 6, 0, 1, 0, 1, 0], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 0, 3, 1, 3, 6, 7, 9, 7, 7, 2, 5, 5, 8], [0, 2, 1, 0, 2, 3, 2, 0, 0, 3, 2, 1], [0, 39, 39, 66, 69], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 3, 8], [2, 0, 3, 1, 0, 0], [16, 1, 30], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 0, 0, 2, 5, 2, 1], [2, 6, 1, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 19, 12, 5, 15, 9, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(tf.math.square(grad), grad), tf.math.square(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 0, 1], [24, 39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [8, 2, 0, 2, 5, 2, 1, 1], [0, 5, 1, 6, 7, 5], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 5, 3, 2, 1, 14, 8, 6, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [7.501595497131348, 59.48539733886719, 201.73284912109375, 498.60943603515625, 1014.8497924804688, 1773.6595458984375], "accuracy": [0.09826971590518951, 0.09932637959718704, 0.10051512718200684, 0.1010434553027153, 0.09140139818191528, 0.1022322028875351], "val_loss": [20.703643798828125, 96.87899780273438, 268.42376708984375, 584.8364868164062, 1095.2462158203125, 1849.2108154296875], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 0], [0, 1, 3, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 5, 3, 8, 2], [2, 0, 3, 1, 0], [80, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 6, 0, 2, 9], [6, 5, 1], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089771270751953, 2.309605598449707, 2.311187505722046, 2.309171199798584, 2.309175491333008, 2.309136152267456], "accuracy": [0.09509972482919693, 0.09549596905708313, 0.09140139818191528, 0.08677849918603897, 0.09298639744520187, 0.09338264167308807], "val_loss": [2.308546781539917, 2.308546781539917, 2.308546781539917, 2.308546781539917, 2.308546781539917, 2.308546781539917], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 10}]