[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2085464000701904, 1.5946954488754272, 1.1580228805541992, 0.974537193775177, 0.8835925459861755, 0.8267500400543213, 0.770711362361908, 0.753334641456604, 0.7186726927757263, 0.6928320527076721, 0.6838045120239258, 0.6561412811279297, 0.6744081974029541, 0.6178849935531616, 0.6127125024795532, 0.6014049649238586, 0.6053081750869751, 0.5901035070419312, 0.5750412344932556, 0.5806756019592285, 0.5555267333984375, 0.5493759512901306, 0.5419615507125854, 0.5363849997520447, 0.5208854079246521, 0.5248375535011292, 0.5025748610496521, 0.5167017579078674, 0.5081984400749207, 0.49466633796691895, 0.4841769337654114, 0.48348045349121094, 0.4885209798812866, 0.47363170981407166, 0.4665691554546356, 0.4678153693675995, 0.4551893174648285, 0.4575374722480774, 0.4437856674194336, 0.44661128520965576, 0.4396454095840454, 0.4396445155143738, 0.42951372265815735, 0.4326325058937073, 0.4289419949054718, 0.4234388768672943, 0.42077016830444336, 0.42080360651016235, 0.41397029161453247, 0.4106471836566925], "accuracy": [0.2661471366882324, 0.5040285587310791, 0.5913353562355042, 0.6470743417739868, 0.6761326193809509, 0.6968696117401123, 0.7136441469192505, 0.7217012047767639, 0.7314753532409668, 0.7407211661338806, 0.7491744756698608, 0.7573636174201965, 0.7449478507041931, 0.7662131786346436, 0.7720248103141785, 0.7784969210624695, 0.7729493975639343, 0.7840443849563599, 0.7794214487075806, 0.7791573405265808, 0.7910447716712952, 0.7977809906005859, 0.7976489067077637, 0.7973847389221191, 0.8049134612083435, 0.8057059645652771, 0.813498854637146, 0.8088759779930115, 0.8103289008140564, 0.8161405324935913, 0.8212917447090149, 0.8240655064582825, 0.8142913579940796, 0.8260467648506165, 0.8321225643157959, 0.8226125836372375, 0.8330471515655518, 0.8297450542449951, 0.8342359066009521, 0.8364813327789307, 0.8376700282096863, 0.8355567455291748, 0.844010055065155, 0.8445383906364441, 0.8389908671379089, 0.8477083444595337, 0.8485008478164673, 0.8454629778862, 0.8527275323867798, 0.8506141901016235], "val_loss": [1.9242576360702515, 1.1091068983078003, 0.9812707304954529, 0.789743185043335, 0.849872887134552, 0.7150789499282837, 0.6892260909080505, 0.6561766862869263, 0.6518102288246155, 0.6574496030807495, 0.6158106923103333, 0.6244170665740967, 0.585529625415802, 0.6005187034606934, 0.5929263234138489, 0.5995791554450989, 0.5698009729385376, 0.5965908765792847, 0.5617819428443909, 0.5454477667808533, 0.5576308369636536, 0.5614807605743408, 0.5268082022666931, 0.5231262445449829, 0.5163177251815796, 0.5143675804138184, 0.5030807256698608, 0.5110833644866943, 0.5163520574569702, 0.4993639290332794, 0.4873194694519043, 0.5219583511352539, 0.5155628323554993, 0.4944615960121155, 0.48454174399375916, 0.4777156710624695, 0.487667977809906, 0.4730563163757324, 0.47954854369163513, 0.46853405237197876, 0.4783552587032318, 0.4654169976711273, 0.4681963622570038, 0.4706459939479828, 0.45176708698272705, 0.46065545082092285, 0.4546974301338196, 0.45925992727279663, 0.45336824655532837, 0.4574601948261261], "val_accuracy": [0.48500001430511475, 0.6293333172798157, 0.6423333287239075, 0.7086666822433472, 0.6830000281333923, 0.722000002861023, 0.7406666874885559, 0.7536666393280029, 0.7563333511352539, 0.7596666812896729, 0.7689999938011169, 0.7683333158493042, 0.7863333225250244, 0.7743333578109741, 0.7870000004768372, 0.7696666717529297, 0.7850000262260437, 0.7703333497047424, 0.7926666736602783, 0.7960000038146973, 0.7896666526794434, 0.7923333048820496, 0.8036666512489319, 0.8159999847412109, 0.8090000152587891, 0.8193333148956299, 0.8226666450500488, 0.8100000023841858, 0.8140000104904175, 0.8223333358764648, 0.828000009059906, 0.812333345413208, 0.8096666932106018, 0.8196666836738586, 0.8213333487510681, 0.8323333263397217, 0.8276666402816772, 0.8306666612625122, 0.831333339214325, 0.8366666436195374, 0.8306666612625122, 0.8370000123977661, 0.828000009059906, 0.8356666564941406, 0.847000002861023, 0.8373333215713501, 0.8410000205039978, 0.8413333296775818, 0.8420000076293945, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 2, 2, 3, 6, 2, 0], [0, 3, 1, 0, 2, 1, 0], [0, 12, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 6, 0, 5, 3, 8, 2], [2, 2, 3, 1, 0], [60, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [33131188224.0, 5025782300672.0, 85073529405440.0, 597312040599552.0, 2646667295719424.0, 8675207409565696.0], "accuracy": [0.10196803510189056, 0.09840179979801178, 0.10249637067317963, 0.10117553919553757, 0.09866596013307571, 0.09813763201236725], "val_loss": [337427693568.0, 18191591931904.0, 195262987370496.0, 1064456507359232.0, 3987726005174272.0, 1.1762612974911488e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3, 5, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 1, 3, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 9, 6, 3, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.40069580078125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20155857503414154, 0.11055342853069305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6220.61083984375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [9, 2, 3, 2, 3, 5], [0, 3, 2, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 2, 0, 6, 8, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 4, 0, 2, 5, 2, 1, 4, 5], [0, 6, 1, 6, 0, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 15, 9, 6, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.pow(alpha, grad), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310364007949829, 2.3089423179626465, 2.309640407562256, 2.3093907833099365, 2.308663845062256, 2.3077592849731445], "accuracy": [0.09311848133802414, 0.0936468094587326, 0.09311848133802414, 0.09602430462837219, 0.09800554811954498, 0.0940430611371994], "val_loss": [2.308727979660034, 2.308727979660034, 2.308727979660034, 2.308727979660034, 2.308727979660034, 2.308727979660034], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 2], [0, 51, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 11, 6, 5, 1, 9, 5, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102543354034424, 2.3106391429901123, 2.3097822666168213, 2.31074857711792, 2.3093271255493164, 2.310270071029663], "accuracy": [0.09245806187391281, 0.09219389408826828, 0.09496764093637466, 0.08770307898521423, 0.09153348207473755, 0.09140139818191528], "val_loss": [2.308009624481201, 2.308009624481201, 2.308009624481201, 2.308009624481201, 2.308009624481201, 2.308009624481201], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]