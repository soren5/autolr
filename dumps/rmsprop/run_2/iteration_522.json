[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2124884128570557, 1.6054168939590454, 1.1494789123535156, 0.9821712374687195, 0.8921733498573303, 0.8429248332977295, 0.7836917042732239, 0.7435499429702759, 0.7344061136245728, 0.7167824506759644, 0.7061122059822083, 0.6668906807899475, 0.6705751419067383, 0.6372455954551697, 0.6411584615707397, 0.6358876824378967, 0.607840359210968, 0.6044995188713074, 0.594083309173584, 0.5797348022460938, 0.5658921599388123, 0.5798776149749756, 0.5552639365196228, 0.5497713088989258, 0.5393800735473633, 0.5298893451690674, 0.5301281213760376, 0.5180925726890564, 0.5169546604156494, 0.5169603824615479, 0.4966700077056885, 0.4973326027393341, 0.4891144931316376, 0.4874337315559387, 0.4747917950153351, 0.4799664318561554, 0.46936333179473877, 0.4583441913127899, 0.46102243661880493, 0.4556787610054016, 0.4458271265029907, 0.44796136021614075, 0.44353967905044556, 0.44574373960494995, 0.42433589696884155, 0.4383987784385681, 0.43491092324256897, 0.4213208854198456, 0.43242138624191284, 0.4177623987197876, 0.4174811542034149, 0.40049901604652405, 0.3902299106121063, 0.4175912141799927, 0.4005882740020752, 0.4060792326927185, 0.3872227668762207], "accuracy": [0.26284506916999817, 0.5079910159111023, 0.6016378402709961, 0.6478668451309204, 0.6756042838096619, 0.691850483417511, 0.7094175219535828, 0.7223616242408752, 0.7260599732398987, 0.7273808121681213, 0.7366266250610352, 0.7478536367416382, 0.7450799345970154, 0.7609298825263977, 0.7543256878852844, 0.7637035846710205, 0.7744023203849792, 0.7692511081695557, 0.7765156626701355, 0.7886672616004944, 0.7885351777076721, 0.7825914621353149, 0.7922335267066956, 0.7944789528846741, 0.7975168228149414, 0.7980451583862305, 0.8039889335632324, 0.809140145778656, 0.8035926818847656, 0.8059701323509216, 0.822348415851593, 0.8186501264572144, 0.8256505131721497, 0.8220842480659485, 0.8261788487434387, 0.8226125836372375, 0.8304054737091064, 0.8337075710296631, 0.8251221776008606, 0.8319904804229736, 0.8388587832450867, 0.8354246616363525, 0.8341038227081299, 0.83119797706604, 0.8449346423149109, 0.8397833704948425, 0.8400475382804871, 0.8467837572097778, 0.8391229510307312, 0.8516708612442017, 0.8473120927810669, 0.8551049828529358, 0.8609166741371155, 0.8455950617790222, 0.8539162874221802, 0.8545766472816467, 0.8602562546730042], "val_loss": [1.9263536930084229, 1.1015198230743408, 0.9269304871559143, 0.7872770428657532, 0.7434236407279968, 0.7213056683540344, 0.669546902179718, 0.6508958339691162, 0.6527460217475891, 0.6598994731903076, 0.6010811924934387, 0.6018739938735962, 0.6007195115089417, 0.5623499155044556, 0.5587124228477478, 0.5638481974601746, 0.5499724745750427, 0.5553216934204102, 0.5251625776290894, 0.5443660616874695, 0.5241106748580933, 0.5190661549568176, 0.5047889947891235, 0.5027340650558472, 0.5009458065032959, 0.49471402168273926, 0.4970228672027588, 0.491962194442749, 0.500318169593811, 0.4767593443393707, 0.4940243363380432, 0.45959195494651794, 0.47496891021728516, 0.4520934224128723, 0.44867032766342163, 0.45235562324523926, 0.45116493105888367, 0.4819927215576172, 0.4497954249382019, 0.4400952458381653, 0.4392959773540497, 0.43846312165260315, 0.43770352005958557, 0.4281671941280365, 0.4323355257511139, 0.43482789397239685, 0.4308997094631195, 0.43391314148902893, 0.417839914560318, 0.4181322455406189, 0.433738112449646, 0.4095718562602997, 0.42145711183547974, 0.4098188877105713, 0.4158349633216858, 0.41360172629356384, 0.4035194218158722], "val_accuracy": [0.5753333568572998, 0.6140000224113464, 0.6746666431427002, 0.7146666646003723, 0.7266666889190674, 0.7263333201408386, 0.7473333477973938, 0.753000020980835, 0.7319999933242798, 0.7403333187103271, 0.7670000195503235, 0.7633333206176758, 0.7673333287239075, 0.8019999861717224, 0.7913333177566528, 0.7846666574478149, 0.7910000085830688, 0.7990000247955322, 0.8073333501815796, 0.7946666479110718, 0.8026666641235352, 0.8019999861717224, 0.8203333616256714, 0.8063333630561829, 0.8116666674613953, 0.8256666660308838, 0.8193333148956299, 0.8149999976158142, 0.8230000138282776, 0.8339999914169312, 0.8173333406448364, 0.8379999995231628, 0.8270000219345093, 0.8366666436195374, 0.8360000252723694, 0.8403333425521851, 0.8379999995231628, 0.812333345413208, 0.8379999995231628, 0.8489999771118164, 0.8399999737739563, 0.8443333506584167, 0.8453333377838135, 0.8493333458900452, 0.846666693687439, 0.8500000238418579, 0.8500000238418579, 0.843666672706604, 0.8533333539962769, 0.8536666631698608, 0.8453333377838135, 0.8573333621025085, 0.8500000238418579, 0.8536666631698608, 0.8543333411216736, 0.8556666374206543, 0.8510000109672546]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 2, 3, 2, 6, 5], [0, 2, 1, 0, 2], [52, 99, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 5, 1, 0], [16, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 7, 4, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.square(alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [Infinity, 3.2905690670013428, 15.59673023223877, 6.344458103179932, 7.727391719818115, 11.660122871398926, 13.713139533996582, 16.351476669311523, 17.56569480895996], "accuracy": [0.10619468986988068, 0.0956280529499054, 0.09998679161071777, 0.09430722147226334, 0.10579843819141388, 0.1002509593963623, 0.09694888442754745, 0.09457138925790787, 0.09417514503002167], "val_loss": [3.1188433170318604, 9.962756156921387, 12.180404663085938, 5.554286003112793, 10.199445724487305, 12.850552558898926, 15.27364444732666, 17.207351684570312, 17.56557273864746], "val_accuracy": [0.09700000286102295, 0.10066666454076767, 0.10066666454076767, 0.10199999809265137, 0.10066666454076767, 0.09700000286102295, 0.1003333330154419, 0.0976666659116745, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [4, 2, 3, 2, 0, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 7, 7, 1, 2, 0, 3, 0], [0, 6, 1, 6, 0, 4, 3, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 1, 19, 11, 8, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.add(tf.math.add(tf.math.subtract(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.negative(grad), sigma)), grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303699016571045, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 0, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 0, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310612201690674, 2.3105478286743164, 2.310767889022827, 2.3104522228240967, 2.310744524002075, 2.3090052604675293], "accuracy": [0.09021265059709549, 0.09285431355237961, 0.0870426595211029, 0.09351472556591034, 0.09272222965955734, 0.09589222073554993], "val_loss": [2.308300018310547, 2.308300018310547, 2.308300018310547, 2.308300018310547, 2.308300018310547, 2.308300018310547], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 9, 8], [0, 2, 1, 0, 2], [0, 0, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [3, 2, 2, 6, 3, 8, 2], [4, 0, 3, 1, 0, 2, 2], [7, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [8, 8, 0, 2, 5, 2, 1, 3, 5, 7, 8], [0, 6, 1, 6, 0, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 11, 7, 4, 3, 14, 7, 7, 2, 17, 11, 6, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309389352798462, 2.3093738555908203, 2.309194326400757, 2.3114776611328125, 2.310023546218872, 2.3104188442230225], "accuracy": [0.08928807079792023, 0.09047681838274002, 0.09113723784685135, 0.08413683623075485, 0.08836349099874496, 0.08770307898521423], "val_loss": [2.3083138465881348, 2.3083138465881348, 2.3083138465881348, 2.3083138465881348, 2.3083138465881348, 2.3083138465881348], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]