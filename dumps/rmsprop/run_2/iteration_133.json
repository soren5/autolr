[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2119646072387695, 1.6248106956481934, 1.1892858743667603, 1.0196629762649536, 0.916722297668457, 0.8425039649009705, 0.8089054226875305, 0.744097113609314, 0.7591215968132019, 0.7017114162445068, 0.7041871547698975, 0.6778005361557007, 0.6841299533843994, 0.6509248614311218, 0.6365625262260437, 0.6252804398536682, 0.5967520475387573, 0.5932167768478394, 0.5992969274520874, 0.5899444818496704, 0.5648587346076965, 0.5701199769973755, 0.5465682148933411, 0.5356018543243408, 0.5408439636230469, 0.5279284715652466, 0.5185087323188782, 0.5000004172325134, 0.4950503706932068, 0.5022050738334656, 0.5040918588638306, 0.4875306785106659, 0.4827693998813629, 0.46501317620277405, 0.45865947008132935, 0.4680345952510834, 0.4637683928012848, 0.45069533586502075, 0.45069420337677, 0.44283217191696167], "accuracy": [0.25703340768814087, 0.49465063214302063, 0.5765420794487, 0.6342623233795166, 0.6623960137367249, 0.6909258961677551, 0.7018887996673584, 0.7257958054542542, 0.7168141603469849, 0.739400327205658, 0.7401928305625916, 0.7477215528488159, 0.7392682433128357, 0.7597411274909973, 0.7635715007781982, 0.7663452625274658, 0.7763835787773132, 0.7815347909927368, 0.7777044177055359, 0.7790252566337585, 0.7893276810646057, 0.7910447716712952, 0.7984414100646973, 0.8013472557067871, 0.800818920135498, 0.8037247657775879, 0.8103289008140564, 0.8157442808151245, 0.8207634687423706, 0.8153480291366577, 0.8109893202781677, 0.8253863453865051, 0.8245938420295715, 0.83119797706604, 0.8285563588142395, 0.8302733898162842, 0.8322546482086182, 0.8366134166717529, 0.8333113193511963, 0.8380662798881531], "val_loss": [1.9230751991271973, 1.1488802433013916, 0.9451107382774353, 0.7862182855606079, 0.73944091796875, 0.7448937296867371, 0.6744878888130188, 0.6357328295707703, 0.607356071472168, 0.6803609132766724, 0.5993245244026184, 0.5682520866394043, 0.6012812256813049, 0.5655102729797363, 0.5633010268211365, 0.5348369479179382, 0.5356518626213074, 0.5433786511421204, 0.5864856243133545, 0.5277032256126404, 0.5400051474571228, 0.5004757642745972, 0.4841770529747009, 0.5107285380363464, 0.47323253750801086, 0.4842385947704315, 0.4723096489906311, 0.45824238657951355, 0.4512999653816223, 0.50104159116745, 0.4674888551235199, 0.4511553943157196, 0.4420914649963379, 0.43311047554016113, 0.4325955808162689, 0.4413613975048065, 0.42984795570373535, 0.4260620176792145, 0.42773324251174927, 0.4305439591407776], "val_accuracy": [0.46299999952316284, 0.6106666922569275, 0.6570000052452087, 0.718666672706604, 0.7289999723434448, 0.7089999914169312, 0.7450000047683716, 0.7593333125114441, 0.7699999809265137, 0.7269999980926514, 0.7583333253860474, 0.7853333353996277, 0.7586666941642761, 0.7856666445732117, 0.7896666526794434, 0.7993333339691162, 0.7986666560173035, 0.7950000166893005, 0.7793333530426025, 0.7903333306312561, 0.8009999990463257, 0.8100000023841858, 0.8253333568572998, 0.8153333067893982, 0.8270000219345093, 0.8270000219345093, 0.8296666741371155, 0.8336666822433472, 0.8366666436195374, 0.8133333325386047, 0.8293333053588867, 0.8339999914169312, 0.8416666388511658, 0.8460000157356262, 0.8473333120346069, 0.8356666564941406, 0.8429999947547913, 0.8463333249092102, 0.8446666598320007, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 1, 5], [0, 0, 1, 0, 1], [0, 39, 72], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 9, 2, 5], [0, 2, 1], [0, 52], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 1, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 11], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 1, 1, 1], [4, 0, 5, 1, 0, 5, 2, 3], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [75], [1], [0], [0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 3, 18, 10, 8, 2, 8, 5, 3, 1, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.subtract(grad, beta), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30854868888855, 2.3099989891052246, 2.310433864593506, 2.310730218887329, 2.3090126514434814, 2.3097667694091797], "accuracy": [0.09430722147226334, 0.08836349099874496, 0.09470347315073013, 0.09219389408826828, 0.0944393053650856, 0.09377889335155487], "val_loss": [2.308250904083252, 2.308250904083252, 2.308250904083252, 2.308250904083252, 2.308250904083252, 2.308250904083252], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [64, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 9, 2], [0, 1, 5], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 6, 5, 2, 4, 3, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095192909240723, 2.309544801712036, 2.310481071472168, 2.3100311756134033, 2.3102593421936035, 2.3114233016967773], "accuracy": [0.09813763201236725, 0.09021265059709549, 0.09285431355237961, 0.09113723784685135, 0.09047681838274002, 0.08928807079792023], "val_loss": [2.308736562728882, 2.308736562728882, 2.308736562728882, 2.308736562728882, 2.308736562728882, 2.308736562728882], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [49], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310573101043701, 2.3097801208496094, 2.3084144592285156, 2.310110569000244, 2.3102335929870605, 2.3101863861083984], "accuracy": [0.08889182657003403, 0.09813763201236725, 0.09919429570436478, 0.09113723784685135, 0.09417514503002167, 0.09272222965955734], "val_loss": [2.308535575866699, 2.308535575866699, 2.308535575866699, 2.308535575866699, 2.308535575866699, 2.308535575866699], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]