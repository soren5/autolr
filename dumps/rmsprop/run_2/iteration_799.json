[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212874174118042, 1.6144355535507202, 1.1564799547195435, 0.9915977120399475, 0.8970127105712891, 0.8347561955451965, 0.7979075312614441, 0.7785283923149109, 0.7470624446868896, 0.7123502492904663, 0.6937975287437439, 0.6832910180091858, 0.6483016610145569, 0.6574276685714722, 0.6288501620292664, 0.6252599358558655, 0.606090784072876, 0.5962944030761719, 0.5883270502090454, 0.5737499594688416, 0.575649082660675, 0.5566519498825073, 0.5633211731910706, 0.5456978678703308, 0.5343443751335144, 0.5400912761688232, 0.5279464721679688, 0.5137492418289185, 0.50457364320755, 0.5088528990745544, 0.5026736855506897, 0.4905407726764679, 0.4840267598628998, 0.4744347929954529, 0.4727022349834442, 0.47163286805152893, 0.45858320593833923, 0.46955960988998413, 0.47010529041290283, 0.45537269115448], "accuracy": [0.2658829689025879, 0.4998018741607666, 0.5900145173072815, 0.6439043879508972, 0.6773213744163513, 0.6966054439544678, 0.7078325152397156, 0.7169462442398071, 0.7197200059890747, 0.7390040755271912, 0.7412495017051697, 0.7437590956687927, 0.759080708026886, 0.7534011602401733, 0.7647602558135986, 0.7658169269561768, 0.774798572063446, 0.7803460359573364, 0.7807422876358032, 0.7841764688491821, 0.7808743715286255, 0.7955356240272522, 0.789459764957428, 0.800290584564209, 0.7994980812072754, 0.8034605979919434, 0.8005547523498535, 0.8084797263145447, 0.8146876096725464, 0.8181217908859253, 0.8178576231002808, 0.8185180425643921, 0.8191784620285034, 0.8249900937080383, 0.826310932636261, 0.8293488025665283, 0.8352925777435303, 0.8256505131721497, 0.828292191028595, 0.8290846943855286], "val_loss": [1.9294750690460205, 1.1454119682312012, 0.8917543292045593, 0.7710291147232056, 0.7233285903930664, 0.6910990476608276, 0.6597913503646851, 0.6575770378112793, 0.652633011341095, 0.6231264472007751, 0.5840507745742798, 0.5747939348220825, 0.5974066853523254, 0.5542304515838623, 0.5947500467300415, 0.5244512557983398, 0.522548496723175, 0.5621122121810913, 0.5074514746665955, 0.5342025756835938, 0.5000589489936829, 0.4926236569881439, 0.48826587200164795, 0.47751179337501526, 0.4664202332496643, 0.47698527574539185, 0.45975765585899353, 0.46435025334358215, 0.45897427201271057, 0.49664822220802307, 0.4471087157726288, 0.44270092248916626, 0.44213971495628357, 0.4462455213069916, 0.42868146300315857, 0.4316926598548889, 0.43153563141822815, 0.42422154545783997, 0.4196561276912689, 0.42330309748649597], "val_accuracy": [0.5373333096504211, 0.6380000114440918, 0.7036666870117188, 0.7129999995231628, 0.734000027179718, 0.7419999837875366, 0.7566666603088379, 0.7213333249092102, 0.7536666393280029, 0.7646666765213013, 0.7616666555404663, 0.7633333206176758, 0.7773333191871643, 0.7730000019073486, 0.7573333382606506, 0.7986666560173035, 0.8046666383743286, 0.7693333625793457, 0.8069999814033508, 0.7863333225250244, 0.7983333468437195, 0.8086666464805603, 0.8076666593551636, 0.8100000023841858, 0.8286666870117188, 0.8176666498184204, 0.8306666612625122, 0.8296666741371155, 0.8263333439826965, 0.8130000233650208, 0.8353333473205566, 0.8389999866485596, 0.8356666564941406, 0.8273333311080933, 0.8453333377838135, 0.8399999737739563, 0.8379999995231628, 0.8446666598320007, 0.8450000286102295, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 1, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 2, 2, 5, 2, 1], [0, 6, 1, 6, 0], [70, 93], [1], [0], [2], [0]], "fitness": -0.13428571820259094, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.0063796043395996, 1471.00439453125, 58382.03125, 230476.640625, 92531.5859375, 61521.1875, 66097.7421875, 210691.953125, 123506.015625], "accuracy": [0.2716946303844452, 0.12112006545066833, 0.12032756209373474, 0.11121384054422379, 0.10487385839223862, 0.0948355570435524, 0.08875974267721176, 0.05098401755094528, 0.0672302171587944], "val_loss": [110.2559585571289, 4087.49658203125, 248888.6875, 94986.828125, 50851.22265625, 36776.60546875, 79936.4453125, 96442.8828125, 109204.40625], "val_accuracy": [0.0729999989271164, 0.13433332741260529, 0.11599999666213989, 0.13699999451637268, 0.09466666728258133, 0.09799999743700027, 0.02033333294093609, 0.02500000037252903, 0.1146666631102562]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5, 3, 7, 8, 8, 8], [1, 2, 1, 0, 2, 3, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 1, 71], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 5, 8], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 1, 12, 7, 5, 3, 14, 9, 5, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(tf.math.square(alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), tf.math.add(grad, tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.sqrt(alpha))), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 3, 3, 2, 3, 5, 8, 4, 4, 9], [0, 2, 1, 0, 0, 3], [34, 39, 39, 71], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 3], [0, 23], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 4, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.pow(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [7, 2, 0, 2, 5, 0, 7, 6, 0, 3, 7, 8, 4, 7, 0, 9], [0, 6, 1, 0, 1, 1, 7, 3, 6], [0, 20, 64], [1], [0], [0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 25, 16, 9, 3, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), alpha), tf.math.negative(tf.math.multiply(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.pow(sigma, tf.math.add(tf.math.negative(grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3094780445098877, 2.3096463680267334, 2.3098180294036865, 2.3094494342803955, 2.310417890548706, 2.310722589492798], "accuracy": [0.09509972482919693, 0.09391097724437714, 0.09470347315073013, 0.0952318087220192, 0.08915598690509796, 0.09047681838274002], "val_loss": [2.3091373443603516, 2.3091373443603516, 2.3091373443603516, 2.3091373443603516, 2.3091373443603516, 2.3091373443603516], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]