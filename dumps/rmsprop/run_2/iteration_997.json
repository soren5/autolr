[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118797302246094, 1.6058522462844849, 1.1595191955566406, 0.9900981783866882, 0.8898218870162964, 0.8291589617729187, 0.7883915305137634, 0.7779198884963989, 0.7231029272079468, 0.7140686511993408, 0.7126217484474182, 0.6782955527305603, 0.6524063944816589, 0.6421198844909668, 0.6176448464393616, 0.6095308065414429, 0.6034386157989502, 0.5995787382125854, 0.5775626301765442, 0.5781713724136353, 0.5714799761772156, 0.5482444763183594, 0.5529976487159729, 0.5377691388130188, 0.5311903357505798, 0.5299418568611145, 0.507643461227417, 0.5125502943992615, 0.4963909983634949, 0.4963229298591614, 0.49983909726142883, 0.47889161109924316, 0.48545700311660767, 0.4874802529811859, 0.4688400328159332, 0.4677298069000244, 0.4536273181438446, 0.45692089200019836, 0.4523632526397705, 0.44114136695861816, 0.4369063973426819, 0.43257156014442444, 0.4343126714229584, 0.42453986406326294, 0.42054370045661926, 0.41786032915115356, 0.4104718863964081, 0.41176608204841614, 0.4056641161441803, 0.40044090151786804, 0.3992103338241577, 0.40343162417411804, 0.38927939534187317, 0.3938591480255127, 0.38548925518989563, 0.3863268792629242, 0.37593597173690796, 0.3740587830543518, 0.3854339122772217], "accuracy": [0.26522254943847656, 0.5016510486602783, 0.5935807824134827, 0.6419231295585632, 0.6785101294517517, 0.6944921612739563, 0.7104741930961609, 0.7096816897392273, 0.7321357727050781, 0.7360982894897461, 0.7331924438476562, 0.7494386434555054, 0.7656848430633545, 0.7613261342048645, 0.7757231593132019, 0.7750627398490906, 0.7733456492424011, 0.7779685854911804, 0.7852331399917603, 0.7857614755630493, 0.7841764688491821, 0.8045172095298767, 0.7987055778503418, 0.7993659973144531, 0.8050455451011658, 0.8088759779930115, 0.8150838613510132, 0.8068947196006775, 0.8189142942428589, 0.8186501264572144, 0.8203672170639038, 0.8278959393501282, 0.8238013386726379, 0.8215559124946594, 0.8293488025665283, 0.8284242749214172, 0.835160493850708, 0.8337075710296631, 0.8289526104927063, 0.8396512866020203, 0.8400475382804871, 0.8412362933158875, 0.8451988101005554, 0.8453308939933777, 0.8479725122451782, 0.850350022315979, 0.8473120927810669, 0.8531237840652466, 0.8525954484939575, 0.852331280708313, 0.857218325138092, 0.8536521196365356, 0.8598600029945374, 0.8577466607093811, 0.8589354157447815, 0.8598600029945374, 0.8669924736022949, 0.8639545440673828, 0.8621054291725159], "val_loss": [1.9294403791427612, 1.1530996561050415, 0.9071639776229858, 0.8624361753463745, 0.7052514553070068, 0.7351240515708923, 0.66558837890625, 0.6705507040023804, 0.6116491556167603, 0.605485200881958, 0.5955227613449097, 0.5956889390945435, 0.5820185542106628, 0.5680397152900696, 0.5454281568527222, 0.5495508909225464, 0.5389395952224731, 0.5327363014221191, 0.5303041934967041, 0.5312578082084656, 0.5068457722663879, 0.5416845083236694, 0.501125693321228, 0.48551228642463684, 0.48907217383384705, 0.48669958114624023, 0.4928223788738251, 0.4673267900943756, 0.47069329023361206, 0.47609102725982666, 0.46165731549263, 0.47854703664779663, 0.45450451970100403, 0.45888715982437134, 0.4522387981414795, 0.4830276370048523, 0.44446757435798645, 0.43595683574676514, 0.4345495104789734, 0.43121474981307983, 0.4310404360294342, 0.437608003616333, 0.4215083718299866, 0.41991955041885376, 0.42822009325027466, 0.41520512104034424, 0.4265928566455841, 0.4226248860359192, 0.42577657103538513, 0.4136752486228943, 0.40129074454307556, 0.40992796421051025, 0.4205702245235443, 0.40052229166030884, 0.3983752429485321, 0.411834180355072, 0.40527430176734924, 0.4131690561771393, 0.4045937955379486], "val_accuracy": [0.4869999885559082, 0.6010000109672546, 0.6676666736602783, 0.6790000200271606, 0.7473333477973938, 0.7136666774749756, 0.750333309173584, 0.7540000081062317, 0.7760000228881836, 0.7699999809265137, 0.7839999794960022, 0.7786666750907898, 0.777999997138977, 0.7876666784286499, 0.8056666851043701, 0.8019999861717224, 0.8083333373069763, 0.8053333163261414, 0.8036666512489319, 0.8023333549499512, 0.8176666498184204, 0.8016666769981384, 0.8226666450500488, 0.8309999704360962, 0.8299999833106995, 0.8223333358764648, 0.8306666612625122, 0.8349999785423279, 0.8379999995231628, 0.8316666483879089, 0.8373333215713501, 0.8223333358764648, 0.8413333296775818, 0.8303333520889282, 0.8443333506584167, 0.8180000185966492, 0.8393333554267883, 0.843666672706604, 0.8453333377838135, 0.8463333249092102, 0.8479999899864197, 0.8423333168029785, 0.8546666502952576, 0.8536666631698608, 0.8516666889190674, 0.8556666374206543, 0.8516666889190674, 0.8533333539962769, 0.8476666808128357, 0.8533333539962769, 0.8606666922569275, 0.8536666631698608, 0.8500000238418579, 0.8613333106040955, 0.8586666584014893, 0.8553333282470703, 0.8569999933242798, 0.8519999980926514, 0.8600000143051147]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 3, 2, 3, 3, 1, 0, 5, 7, 1, 2, 4, 1, 3, 2, 3, 6, 6, 9, 5, 3, 4, 2, 2, 0, 9, 4, 4], [2, 0, 3, 1, 0, 5, 0, 5, 3, 5, 1, 3, 0, 5, 3, 3, 3, 3, 5, 4, 3, 0, 5, 0], [16, 1, 5, 73, 87, 52, 14, 31], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 0, 2, 5, 6, 2], [0, 6, 1, 7, 3], [0, 22], [1], [0], [4], [0]], "fitness": -0.33714285492897034, "mapping_values": [1, 1, 0, 1, 1, 58, 34, 24, 8, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.multiply(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.negative(tf.math.square(tf.math.add(grad, grad))), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.multiply(alpha, tf.math.add(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.divide_no_nan(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.multiply(tf.math.pow(tf.math.add(grad, grad), tf.math.add(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(grad, tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad))))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3012351989746094, 2.5133867263793945, 2.284526824951172, 2.235227108001709, 2.311230182647705, 2.3027753829956055], "accuracy": [0.19482234120368958, 0.17276449501514435, 0.14172500371932983, 0.160084530711174, 0.10236428678035736, 0.10817593336105347], "val_loss": [1.9169420003890991, 2.3130290508270264, 2.307654619216919, 2.3243582248687744, 2.3042678833007812, 2.2875890731811523], "val_accuracy": [0.34433332085609436, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09600000083446503, 0.1433333307504654]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 87], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 6, 7], [0, 6, 1, 5, 0], [19, 36], [1], [0], [2], [0]], "fitness": -0.12857143580913544, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034520149230957, 2.3013336658477783, 2.302114248275757, 2.3024463653564453, 2.302612781524658, 2.302722930908203, 2.302743673324585], "accuracy": [0.09853387624025345, 0.11491216719150543, 0.12257297337055206, 0.08545766770839691, 0.1088363528251648, 0.1014397069811821, 0.08955223858356476], "val_loss": [2.3010520935058594, 2.3021223545074463, 2.302358388900757, 2.302478075027466, 2.3024680614471436, 2.3025143146514893, 2.3026633262634277], "val_accuracy": [0.08100000023841858, 0.125, 0.1133333370089531, 0.10499999672174454, 0.09933333098888397, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 75, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 6, 4], [2, 0, 3, 1, 0, 1], [16, 84], [0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 0], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(grad, alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 11, 6, 5, 3, 14, 8, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 2, 7, 4], [0, 2, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 3, 1], [0, 6, 3, 6, 0], [0, 70], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 5, 3, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(sigma))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3027524948120117, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]