[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8071428537368774, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212519645690918, 1.608371615409851, 1.1414237022399902, 0.9821142554283142, 0.8754600882530212, 0.8209981322288513, 0.804965078830719, 0.7495668530464172, 0.7100241780281067, 0.7194190621376038, 0.6816678643226624, 0.6660633683204651, 0.6624424457550049, 0.6264886856079102, 0.6182699799537659, 0.6063268184661865, 0.6036953926086426, 0.6040974855422974, 0.5792185068130493, 0.5812431573867798, 0.5634368062019348, 0.5598366260528564, 0.5480116605758667, 0.5323444604873657, 0.5241941213607788, 0.520149827003479, 0.5172184705734253, 0.5087959170341492, 0.516338586807251, 0.49404045939445496, 0.49984613060951233, 0.5027365684509277, 0.47783997654914856, 0.4775160253047943, 0.4796522259712219, 0.4786635935306549, 0.45602646470069885, 0.4503460228443146, 0.45859217643737793, 0.44757580757141113, 0.4352634847164154, 0.4356771409511566, 0.43018192052841187, 0.44323277473449707, 0.4182537794113159, 0.4224035441875458, 0.4148463010787964, 0.4180537164211273, 0.41183581948280334, 0.4113209545612335, 0.4101279079914093, 0.40620529651641846, 0.3973056972026825, 0.3882213830947876, 0.3970435857772827, 0.37875089049339294, 0.3916208744049072, 0.38028207421302795, 0.37776413559913635, 0.3746551275253296, 0.3855130672454834], "accuracy": [0.26099589467048645, 0.5052172541618347, 0.5950337052345276, 0.6449610590934753, 0.6758684515953064, 0.6931713223457336, 0.7034738063812256, 0.7313432693481445, 0.7408532500267029, 0.7313432693481445, 0.7478536367416382, 0.7589486241340637, 0.7506273984909058, 0.769911527633667, 0.7734777331352234, 0.7724210619926453, 0.7792893648147583, 0.7770439982414246, 0.7832518815994263, 0.7814027070999146, 0.7927618622779846, 0.7960638999938965, 0.7991018295288086, 0.8050455451011658, 0.8045172095298767, 0.8078193068504333, 0.809140145778656, 0.8169330358505249, 0.8124422430992126, 0.816008448600769, 0.8165367841720581, 0.8146876096725464, 0.8197067975997925, 0.82683926820755, 0.8244617581367493, 0.8232730031013489, 0.8341038227081299, 0.8367455005645752, 0.8315942287445068, 0.8345000743865967, 0.8388587832450867, 0.8405758738517761, 0.8393871188163757, 0.8363492488861084, 0.8491612672805786, 0.8442742228507996, 0.8473120927810669, 0.8438779711723328, 0.8496896028518677, 0.8532558679580688, 0.8502179384231567, 0.8508783578872681, 0.8558974862098694, 0.8597279191017151, 0.8539162874221802, 0.8622375130653381, 0.8593316674232483, 0.8599920868873596, 0.8585391640663147, 0.8648791313171387, 0.8602562546730042], "val_loss": [1.9286280870437622, 1.090476393699646, 0.8897200226783752, 0.7773473262786865, 0.7869767546653748, 0.6856206059455872, 0.6560372114181519, 0.6398000717163086, 0.6448226571083069, 0.598328709602356, 0.6040108799934387, 0.6096712946891785, 0.5670983195304871, 0.552132785320282, 0.5405239462852478, 0.5320316553115845, 0.5190589427947998, 0.5256530046463013, 0.5283204317092896, 0.5190629363059998, 0.5244112014770508, 0.4855811297893524, 0.4849212169647217, 0.47374939918518066, 0.4879605174064636, 0.4708862006664276, 0.46953657269477844, 0.4625881314277649, 0.4514809846878052, 0.45617255568504333, 0.4526987373828888, 0.46524763107299805, 0.4445283114910126, 0.43727749586105347, 0.45952001214027405, 0.43021923303604126, 0.4318462014198303, 0.444362074136734, 0.42062288522720337, 0.42568203806877136, 0.42541512846946716, 0.4105069041252136, 0.44188013672828674, 0.41551750898361206, 0.4070082902908325, 0.40966692566871643, 0.41638198494911194, 0.4261833131313324, 0.40718844532966614, 0.4275411367416382, 0.4016682803630829, 0.4106655418872833, 0.3968612849712372, 0.3923824429512024, 0.38641422986984253, 0.3894648551940918, 0.38829362392425537, 0.38358959555625916, 0.3892568349838257, 0.3838147819042206, 0.3934672772884369], "val_accuracy": [0.5526666641235352, 0.6629999876022339, 0.6990000009536743, 0.7286666631698608, 0.6953333616256714, 0.7523333430290222, 0.7556666731834412, 0.7586666941642761, 0.7480000257492065, 0.7766666412353516, 0.7739999890327454, 0.7573333382606506, 0.7749999761581421, 0.7919999957084656, 0.8026666641235352, 0.8059999942779541, 0.8013333082199097, 0.8063333630561829, 0.7943333387374878, 0.800000011920929, 0.8003333210945129, 0.8163333535194397, 0.8149999976158142, 0.8199999928474426, 0.8113333582878113, 0.8130000233650208, 0.8259999752044678, 0.8236666917800903, 0.8323333263397217, 0.8266666531562805, 0.8243333101272583, 0.8209999799728394, 0.8286666870117188, 0.8339999914169312, 0.8133333325386047, 0.8356666564941406, 0.8320000171661377, 0.8270000219345093, 0.8356666564941406, 0.8320000171661377, 0.8363333344459534, 0.8416666388511658, 0.8306666612625122, 0.8410000205039978, 0.8443333506584167, 0.8446666598320007, 0.8389999866485596, 0.8333333134651184, 0.8410000205039978, 0.8316666483879089, 0.8453333377838135, 0.8376666903495789, 0.8496666550636292, 0.8489999771118164, 0.8556666374206543, 0.8560000061988831, 0.8510000109672546, 0.8550000190734863, 0.8506666421890259, 0.8510000109672546, 0.8483333587646484]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 2, 4, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [95, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 4, 4, 2, 2, 4, 5, 4, 7, 7], [0, 6, 1, 0, 5, 0, 4, 3, 6, 1, 6], [0, 7, 86], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 24, 13, 11, 3, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.square(tf.math.pow(tf.math.add(tf.math.add(sigma, grad), alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 3, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 3, 5], [0, 2, 1, 0, 2], [0, 50, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 7, 2, 5, 2, 1, 7, 8, 8], [0, 6, 2, 6, 2, 7, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 17, 10, 7, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta)), grad), tf.math.subtract(beta, tf.math.add(grad, tf.math.sqrt(tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309842348098755, 2.309467077255249, 2.310849905014038, 2.31184720993042, 2.309903144836426, 2.31020450592041], "accuracy": [0.0944393053650856, 0.09457138925790787, 0.09008057415485382, 0.08875974267721176, 0.09285431355237961, 0.09417514503002167], "val_loss": [2.309457302093506, 2.309457302093506, 2.309457302093506, 2.309457302093506, 2.309457302093506, 2.309457302093506], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 0, 4, 9], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 14, 9, 5, 3, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310415506362915, 2.3099606037139893, 2.311053991317749, 2.309028387069702, 2.3102011680603027, 2.3101589679718018], "accuracy": [0.0952318087220192, 0.09232597798109055, 0.09232597798109055, 0.09496764093637466, 0.08955223858356476, 0.09008057415485382], "val_loss": [2.3082096576690674, 2.3082096576690674, 2.3082096576690674, 2.3082096576690674, 2.3082096576690674, 2.3082096576690674], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]