[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8111428618431091, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2092955112457275, 1.6069830656051636, 1.1649852991104126, 0.9789907932281494, 0.904281497001648, 0.8068929314613342, 0.8004543781280518, 0.7698260545730591, 0.7274815440177917, 0.7055816650390625, 0.6851440668106079, 0.6735239624977112, 0.6699333190917969, 0.636455774307251, 0.6300824284553528, 0.6277963519096375, 0.6040617823600769, 0.6054621338844299, 0.5841110944747925, 0.5762567520141602, 0.5609797835350037, 0.5697231292724609, 0.544093906879425, 0.5431782007217407, 0.546518087387085, 0.5197079181671143, 0.5290404558181763, 0.5123565793037415, 0.516859769821167, 0.5043872594833374, 0.48663586378097534, 0.4976317584514618, 0.47535577416419983, 0.48021200299263, 0.4764688014984131, 0.474323034286499, 0.46778157353401184, 0.4629019796848297, 0.46675974130630493, 0.4482305645942688, 0.4544185698032379, 0.4533262848854065, 0.445374071598053, 0.4387994706630707, 0.4373593330383301, 0.4286966919898987, 0.4317065179347992, 0.42843466997146606, 0.423463374376297, 0.4174923896789551, 0.42657530307769775, 0.41424480080604553, 0.4094570279121399, 0.4086959660053253, 0.39614975452423096, 0.3999769985675812, 0.38812199234962463, 0.38854044675827026, 0.3789786398410797, 0.3881673812866211, 0.3817352056503296, 0.3856298327445984, 0.38222697377204895], "accuracy": [0.2639017403125763, 0.49966979026794434, 0.594241201877594, 0.6460176706314087, 0.6708492636680603, 0.7061154246330261, 0.7066437602043152, 0.7169462442398071, 0.724210798740387, 0.7305507659912109, 0.7441553473472595, 0.7483819723129272, 0.750231146812439, 0.763967752456665, 0.7663452625274658, 0.7663452625274658, 0.7771760821342468, 0.7718927264213562, 0.7825914621353149, 0.7829877138137817, 0.7887993454933167, 0.7915731072425842, 0.798309326171875, 0.7992339134216309, 0.7996301651000977, 0.8059701323509216, 0.8021397590637207, 0.8124422430992126, 0.813498854637146, 0.8104609847068787, 0.821820080280304, 0.8171972036361694, 0.8274996876716614, 0.8216879963874817, 0.8214238286018372, 0.8214238286018372, 0.829216718673706, 0.828292191028595, 0.8281601071357727, 0.8302733898162842, 0.8298771381378174, 0.830669641494751, 0.833179235458374, 0.8389908671379089, 0.8388587832450867, 0.8380662798881531, 0.8376700282096863, 0.8424250483512878, 0.8469158411026001, 0.8471800088882446, 0.841500461101532, 0.8470479249954224, 0.8453308939933777, 0.8502179384231567, 0.8524633646011353, 0.8481045961380005, 0.8548408150672913, 0.8597279191017151, 0.8598600029945374, 0.856689989566803, 0.8597279191017151, 0.8603883385658264, 0.8622375130653381], "val_loss": [1.9169217348098755, 1.1122291088104248, 0.9015288949012756, 0.791880190372467, 0.71079421043396, 0.745816171169281, 0.6816451549530029, 0.6643857955932617, 0.6290956735610962, 0.6478509306907654, 0.5873799920082092, 0.5799941420555115, 0.5696173310279846, 0.5486543774604797, 0.5504516959190369, 0.5470407605171204, 0.5401135087013245, 0.5202608108520508, 0.5305234789848328, 0.5149730443954468, 0.49390363693237305, 0.4930473566055298, 0.4923434257507324, 0.5295897126197815, 0.48796597123146057, 0.4711100161075592, 0.46347394585609436, 0.46351224184036255, 0.4627738893032074, 0.4484426975250244, 0.44818925857543945, 0.4553414583206177, 0.4415704607963562, 0.4411959946155548, 0.4372940957546234, 0.4293648302555084, 0.4290241003036499, 0.4351342022418976, 0.4261524975299835, 0.42127975821495056, 0.4286065399646759, 0.42221736907958984, 0.41704463958740234, 0.40815532207489014, 0.43852052092552185, 0.4056280255317688, 0.4093133807182312, 0.42763394117355347, 0.39966943860054016, 0.42740389704704285, 0.39589688181877136, 0.3971071243286133, 0.3953109681606293, 0.38883650302886963, 0.38782763481140137, 0.4034883975982666, 0.38678303360939026, 0.38660958409309387, 0.38375163078308105, 0.38733869791030884, 0.389314204454422, 0.3817315697669983, 0.3839991092681885], "val_accuracy": [0.565666675567627, 0.6313333511352539, 0.6783333420753479, 0.7113333344459534, 0.7440000176429749, 0.7360000014305115, 0.7559999823570251, 0.7516666650772095, 0.762666642665863, 0.7429999709129333, 0.7730000019073486, 0.7786666750907898, 0.7910000085830688, 0.7903333306312561, 0.7903333306312561, 0.7923333048820496, 0.7913333177566528, 0.8059999942779541, 0.7919999957084656, 0.8046666383743286, 0.8186666369438171, 0.8180000185966492, 0.8133333325386047, 0.7873333096504211, 0.8203333616256714, 0.8286666870117188, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8343333601951599, 0.8320000171661377, 0.8276666402816772, 0.8316666483879089, 0.8326666951179504, 0.8370000123977661, 0.8423333168029785, 0.8403333425521851, 0.840666651725769, 0.8410000205039978, 0.8450000286102295, 0.8349999785423279, 0.843666672706604, 0.8489999771118164, 0.8536666631698608, 0.8309999704360962, 0.8533333539962769, 0.8453333377838135, 0.8366666436195374, 0.8553333282470703, 0.8383333086967468, 0.8566666841506958, 0.8523333072662354, 0.8553333282470703, 0.8586666584014893, 0.859000027179718, 0.8496666550636292, 0.859000027179718, 0.8603333234786987, 0.8603333234786987, 0.8569999933242798, 0.8573333621025085, 0.859666645526886, 0.8600000143051147]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 93, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 9, 6, 1], [0, 6, 1, 6, 0], [0, 27], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 1, 11, 7, 4, 2, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(grad, alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.subtract(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 1, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0, 1], [16, 1, 84], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 0], [0, 6, 1, 6, 0], [0, 64], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 13, 7, 6, 3, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5, 9], [0, 2, 1, 0, 1], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 6, 0, 1], [0, 6, 1, 6, 0], [15, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 1, 0, 1, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.90882110595703, 11098.7548828125, 185077.375, 1289658.625, 5682381.5, 18790664.0], "accuracy": [0.09826971590518951, 0.09628847241401672, 0.09708096832036972, 0.09945846349000931, 0.09866596013307571, 0.09893012791872025], "val_loss": [800.7073364257812, 39274.40234375, 417331.40625, 2268341.5, 8485552.0, 25012738.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 4, 1, 6, 0], [0, 32], [0, 0, 0, 1], [0, 2, 9], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3096530437469482, 2.3099942207336426, 2.309795618057251, 2.310483932495117, 2.3108325004577637, 2.310037136077881], "accuracy": [0.09179764986038208, 0.09457138925790787, 0.09087307006120682, 0.09325055778026581, 0.09285431355237961, 0.09153348207473755], "val_loss": [2.308495044708252, 2.308495044708252, 2.308495044708252, 2.308495044708252, 2.308495044708252, 2.308495044708252], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]