[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8088571429252625, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214341878890991, 1.6205732822418213, 1.146769642829895, 0.986422598361969, 0.8968295454978943, 0.8407707214355469, 0.7895246744155884, 0.7491744160652161, 0.7223738431930542, 0.7087474465370178, 0.690467357635498, 0.664463996887207, 0.6451412439346313, 0.6525468826293945, 0.6306602954864502, 0.6213788390159607, 0.5908803343772888, 0.6109857559204102, 0.580381453037262, 0.577668309211731, 0.5634270310401917, 0.5470300316810608, 0.5558779835700989, 0.5363577008247375, 0.5305023789405823, 0.5234892964363098, 0.5151720643043518, 0.507189154624939, 0.49666962027549744, 0.4971126616001129, 0.4859919250011444, 0.49441441893577576, 0.4801067113876343, 0.4671417474746704, 0.46857815980911255], "accuracy": [0.26324132084846497, 0.502971887588501, 0.5964865684509277, 0.648659348487854, 0.6750759482383728, 0.6889446377754211, 0.7061154246330261, 0.7205125093460083, 0.735041618347168, 0.7372870445251465, 0.7400607466697693, 0.7483819723129272, 0.7617223858833313, 0.7609298825263977, 0.7640998363494873, 0.7667415142059326, 0.7804781198501587, 0.7693831920623779, 0.7833839654922485, 0.7837802171707153, 0.7893276810646057, 0.7927618622779846, 0.7885351777076721, 0.8000264167785645, 0.8013472557067871, 0.8013472557067871, 0.8017435073852539, 0.8124422430992126, 0.8128384351730347, 0.8115176558494568, 0.816008448600769, 0.8164047002792358, 0.8171972036361694, 0.8247259259223938, 0.8305375576019287], "val_loss": [1.929736614227295, 1.0691710710525513, 0.8390253782272339, 0.8550441861152649, 0.7027044296264648, 0.6747345924377441, 0.6468026638031006, 0.6572291851043701, 0.5920331478118896, 0.5719884037971497, 0.5856316685676575, 0.5629516839981079, 0.5468219518661499, 0.5513508915901184, 0.5542910099029541, 0.511550784111023, 0.5225598812103271, 0.5023167133331299, 0.5270873308181763, 0.48982658982276917, 0.49033409357070923, 0.494999498128891, 0.5049180388450623, 0.4583754539489746, 0.4701196551322937, 0.47448426485061646, 0.4580080509185791, 0.44541674852371216, 0.4638659954071045, 0.4353121817111969, 0.4429134130477905, 0.44166216254234314, 0.4285719096660614, 0.4382886588573456, 0.44864940643310547], "val_accuracy": [0.5773333311080933, 0.6790000200271606, 0.706333339214325, 0.6696666479110718, 0.7456666827201843, 0.7369999885559082, 0.7563333511352539, 0.7393333315849304, 0.7860000133514404, 0.7856666445732117, 0.7789999842643738, 0.7886666655540466, 0.7879999876022339, 0.7983333468437195, 0.7923333048820496, 0.8103333115577698, 0.7886666655540466, 0.8069999814033508, 0.8050000071525574, 0.8196666836738586, 0.8159999847412109, 0.8056666851043701, 0.7913333177566528, 0.8339999914169312, 0.8220000267028809, 0.8216666579246521, 0.8286666870117188, 0.8366666436195374, 0.8266666531562805, 0.8399999737739563, 0.8309999704360962, 0.8363333344459534, 0.8393333554267883, 0.8356666564941406, 0.8220000267028809]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0], [7, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 2, 0, 8, 5, 2, 1, 5, 0, 8, 9, 1, 3, 5], [0, 6, 1, 6, 0, 6], [0, 22, 73], [1], [0], [4], [0]], "fitness": -0.17028571665287018, "mapping_values": [1, 11, 6, 5, 2, 11, 6, 5, 2, 20, 14, 6, 3, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(tf.math.square(grad), tf.math.negative(tf.math.sqrt(alpha))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.multiply(tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.0642645359039307, 2.3635897636413574, 2.5587375164031982, 2.302145004272461, 2.3039872646331787, 2.3033201694488525, 2.3030149936676025], "accuracy": [0.17223615944385529, 0.10791176557540894, 0.12376172095537186, 0.1266675442457199, 0.09496764093637466, 0.09642054885625839, 0.10077928751707077], "val_loss": [2.3018596172332764, 2.2856976985931396, 2.286410093307495, 2.304435968399048, 2.3027985095977783, 2.3026936054229736, 2.3027520179748535], "val_accuracy": [0.10066666454076767, 0.17133332788944244, 0.11533333361148834, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [10, 13, 39], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 3, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 9, 5, 6, 1], [5, 6, 1, 6, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 3, 1, 2, 1, 6, 5, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9.162146071834043e+31, 27.48634147644043, 110.35123443603516, 250.48313903808594, 448.6600036621094, 704.2841186523438], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.053098678588867, 67.0221176147461, 183.39227294921875, 357.3471984863281, 588.7889404296875, 877.7241821289062], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 5, 1, 0], [16, 41], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1, 6, 0], [55, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3040616512298584, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 7, 7], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [7, 7, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0, 2], [46, 1, 36], [0, 0, 0, 1, 1, 1, 1, 1], [0, 5, 0, 2, 5], [0, 6, 1], [0], [1], [0], [1], [0]], "fitness": -0.09057142585515976, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.311558961868286, 2.309333086013794, 2.310781478881836, 2.308673620223999, 2.3089895248413086, 2.3102943897247314], "accuracy": [0.08955223858356476, 0.09074098616838455, 0.09060890227556229, 0.09602430462837219, 0.09153348207473755, 0.09140139818191528], "val_loss": [2.3084170818328857, 2.3084170818328857, 2.3084170818328857, 2.3084170818328857, 2.3084170818328857, 2.3084170818328857], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}, "mapping_values": [1, 6, 3, 3, 1, 13, 7, 6, 3, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 14}]