[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209827184677124, 1.6033316850662231, 1.1270476579666138, 0.9744369387626648, 0.8646849393844604, 0.8260335326194763, 0.7779636383056641, 0.7462790608406067, 0.7225731611251831, 0.7001140117645264, 0.6811922788619995, 0.6548354029655457, 0.6522994637489319, 0.6490435004234314, 0.6132460832595825, 0.6109960675239563, 0.6008549928665161, 0.588570237159729, 0.5737105011940002, 0.56421959400177, 0.5638770461082458, 0.5563206076622009, 0.5506587624549866, 0.5296540260314941, 0.5280962586402893, 0.5205617547035217, 0.5244043469429016, 0.5113422870635986, 0.5016231536865234, 0.5033886432647705, 0.4925607442855835, 0.4829263389110565, 0.4831540286540985, 0.47966307401657104, 0.4628632664680481, 0.4645414650440216, 0.46173611283302307, 0.45881733298301697, 0.4554736912250519, 0.4547297954559326, 0.4442139267921448, 0.4421749711036682], "accuracy": [0.2739400267601013, 0.5135384798049927, 0.6085061430931091, 0.6590939164161682, 0.6905296444892883, 0.698718786239624, 0.7123233675956726, 0.7250033020973206, 0.7272487282752991, 0.7428345084190369, 0.7457403540611267, 0.7532690763473511, 0.7605336308479309, 0.7530049085617065, 0.7692511081695557, 0.7775723338127136, 0.7744023203849792, 0.778761088848114, 0.7864218950271606, 0.7932901978492737, 0.7911768555641174, 0.7905164361000061, 0.7921014428138733, 0.8076872229576111, 0.8055738806724548, 0.8104609847068787, 0.8078193068504333, 0.81112140417099, 0.8158763647079468, 0.8158763647079468, 0.819970965385437, 0.8247259259223938, 0.8197067975997925, 0.82683926820755, 0.8309338092803955, 0.8323867321014404, 0.829216718673706, 0.8321225643157959, 0.837537944316864, 0.8319904804229736, 0.8403117060661316, 0.8426892161369324], "val_loss": [1.916666030883789, 1.1237975358963013, 0.9393200874328613, 0.7786855697631836, 0.7196711301803589, 0.703348696231842, 0.655764102935791, 0.6342939138412476, 0.6091373562812805, 0.5890156030654907, 0.6066431999206543, 0.5617139935493469, 0.6334888339042664, 0.564156711101532, 0.542337954044342, 0.5690152049064636, 0.5517005324363708, 0.5219011902809143, 0.5094226598739624, 0.5101389288902283, 0.5062509775161743, 0.5034197568893433, 0.513988196849823, 0.48760348558425903, 0.4792715311050415, 0.48161953687667847, 0.47958388924598694, 0.4691218137741089, 0.45836547017097473, 0.47336363792419434, 0.466952919960022, 0.4523364305496216, 0.4575900733470917, 0.44522571563720703, 0.45465266704559326, 0.4553259611129761, 0.4315001964569092, 0.4336528182029724, 0.43230852484703064, 0.43349459767341614, 0.4297037422657013, 0.4321107268333435], "val_accuracy": [0.5133333206176758, 0.6396666765213013, 0.6589999794960022, 0.718666672706604, 0.7413333058357239, 0.7409999966621399, 0.7519999742507935, 0.7649999856948853, 0.7756666541099548, 0.7803333401679993, 0.7726666927337646, 0.7923333048820496, 0.7459999918937683, 0.7976666688919067, 0.793666660785675, 0.7803333401679993, 0.7826666831970215, 0.79666668176651, 0.8076666593551636, 0.8059999942779541, 0.8113333582878113, 0.8073333501815796, 0.8073333501815796, 0.8180000185966492, 0.8199999928474426, 0.8206666707992554, 0.8173333406448364, 0.8186666369438171, 0.8286666870117188, 0.8273333311080933, 0.8256666660308838, 0.8316666483879089, 0.831333339214325, 0.8330000042915344, 0.828000009059906, 0.8273333311080933, 0.8450000286102295, 0.8389999866485596, 0.8343333601951599, 0.8373333215713501, 0.8413333296775818, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 3, 2, 3, 5, 4, 0, 4, 3, 6, 3, 0, 4, 8], [0, 2, 1, 1, 2, 3, 0, 0, 2, 1, 1], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 5, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [3, 2, 0, 2, 5, 2, 1, 4, 2], [5, 6, 1, 5, 0, 4, 4, 6], [6, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 15, 11, 3, 4, 2, 2, 1, 17, 9, 8, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(alpha))), tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(alpha, grad), tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.subtract(tf.math.pow(grad, alpha), grad), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad)))), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303466320037842, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 6, 3, 2, 3, 1, 5, 9, 5], [0, 2, 1, 0, 2], [0, 15, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 9], [0, 4, 1, 6, 0], [51, 22], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 14, 9, 5, 3, 1, 0, 1, 0, 10, 7, 3, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309898853302002, 2.3097310066223145, 2.309739589691162, 2.309572458267212, 2.3096065521240234, 2.3086702823638916], "accuracy": [0.08942015469074249, 0.09391097724437714, 0.09232597798109055, 0.09206181764602661, 0.09325055778026581, 0.09232597798109055], "val_loss": [2.3087735176086426, 2.3087735176086426, 2.3087735176086426, 2.3087735176086426, 2.3087735176086426, 2.3087735176086426], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [4, 2, 3, 2, 0, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 6, 2], [2, 0, 5, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 2, 0, 2, 5, 9, 1], [0, 6, 1, 6, 0], [0, 12], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098042011260986, 2.3103370666503906, 2.309408664703369, 2.3094534873962402, 2.310126781463623, 2.3109731674194336], "accuracy": [0.08836349099874496, 0.09681680053472519, 0.09338264167308807, 0.09179764986038208, 0.09391097724437714, 0.08638224750757217], "val_loss": [2.3084068298339844, 2.3084068298339844, 2.3084068298339844, 2.3084068298339844, 2.3084068298339844, 2.3084068298339844], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 2, 3, 2, 3, 5, 8, 7, 7, 9, 9], [0, 2, 1, 0, 2], [0, 39, 39, 55], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 2, 5, 2, 1], [0, 0, 1, 6, 0, 2], [0, 22, 25], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 16, 11, 5, 4, 2, 1, 1, 0, 13, 7, 6, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(tf.math.add(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, grad))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094937801361084, 2.3094818592071533, 2.3095061779022217, 2.3098223209381104, 2.309236526489258, 2.309683322906494], "accuracy": [0.09391097724437714, 0.09325055778026581, 0.09747721254825592, 0.09298639744520187, 0.09668471664190292, 0.09298639744520187], "val_loss": [2.3085451126098633, 2.3085451126098633, 2.3085451126098633, 2.3085451126098633, 2.3085451126098633, 2.3085451126098633], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]