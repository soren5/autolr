[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8005714416503906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210301160812378, 1.5914971828460693, 1.124657154083252, 0.9809759259223938, 0.8894036412239075, 0.8148170113563538, 0.7908428311347961, 0.7461985945701599, 0.7346896529197693, 0.6916966438293457, 0.6755367517471313, 0.6701024770736694, 0.6399440169334412, 0.6499102115631104, 0.6284441947937012, 0.6137807965278625, 0.6073261499404907, 0.6058194637298584, 0.5683860182762146, 0.5661875009536743, 0.5609099268913269, 0.5641551613807678, 0.5378817915916443, 0.5500092506408691, 0.5374631881713867, 0.5314932465553284, 0.5136777758598328, 0.5289759635925293, 0.5189512968063354, 0.5023945569992065, 0.5016529560089111, 0.49622783064842224, 0.48568394780158997, 0.4898886978626251, 0.48122894763946533, 0.4657137989997864, 0.4691915810108185, 0.466711163520813, 0.46986818313598633, 0.46126893162727356, 0.46230727434158325, 0.45445719361305237, 0.4465053081512451, 0.44416025280952454, 0.43738725781440735, 0.43433499336242676, 0.44291332364082336], "accuracy": [0.26522254943847656, 0.5221238732337952, 0.6038832664489746, 0.653150200843811, 0.6796988248825073, 0.7059833407402039, 0.7092854380607605, 0.7255316376686096, 0.7236824631690979, 0.7452120184898376, 0.7528728246688843, 0.7503632307052612, 0.7630431652069092, 0.7572315335273743, 0.7687227725982666, 0.7692511081695557, 0.774270236492157, 0.7766477465629578, 0.7890635132789612, 0.7898560166358948, 0.7921014428138733, 0.7860256433486938, 0.8043851256370544, 0.7991018295288086, 0.8006868362426758, 0.8050455451011658, 0.8082155585289001, 0.8084797263145447, 0.8090080618858337, 0.8113855719566345, 0.8168009519577026, 0.8156121969223022, 0.819442629814148, 0.819442629814148, 0.8197067975997925, 0.8278959393501282, 0.8294808864593506, 0.8317263126373291, 0.8301413059234619, 0.8338396549224854, 0.832650899887085, 0.8313300609588623, 0.8379341959953308, 0.8383304476737976, 0.8360850811004639, 0.8356888294219971, 0.8385946154594421], "val_loss": [1.9212993383407593, 1.081627607345581, 0.8675116300582886, 0.8125330209732056, 0.7646601796150208, 0.6887752413749695, 0.6674959063529968, 0.6582114100456238, 0.6192423105239868, 0.6102494597434998, 0.5791110396385193, 0.5694518089294434, 0.5697624683380127, 0.5575370192527771, 0.5487391352653503, 0.5301307439804077, 0.6107970476150513, 0.5193862915039062, 0.5026606917381287, 0.49720337986946106, 0.4919590950012207, 0.5025261640548706, 0.49112093448638916, 0.47547852993011475, 0.47378551959991455, 0.45914795994758606, 0.4545130729675293, 0.4620243310928345, 0.4533998966217041, 0.4440574645996094, 0.44360849261283875, 0.45651423931121826, 0.4569975733757019, 0.4462928771972656, 0.43317487835884094, 0.431365430355072, 0.4259253442287445, 0.4218999743461609, 0.4200775623321533, 0.41904422640800476, 0.4205175042152405, 0.4065634310245514, 0.40920644998550415, 0.40682974457740784, 0.40753307938575745, 0.4211832582950592, 0.404427170753479], "val_accuracy": [0.5536666512489319, 0.640333354473114, 0.690666675567627, 0.6856666803359985, 0.7009999752044678, 0.7386666536331177, 0.7353333234786987, 0.7450000047683716, 0.7596666812896729, 0.7630000114440918, 0.7883333563804626, 0.7806666493415833, 0.7730000019073486, 0.7910000085830688, 0.7883333563804626, 0.8059999942779541, 0.7570000290870667, 0.8043333292007446, 0.8140000104904175, 0.8169999718666077, 0.8190000057220459, 0.8116666674613953, 0.8140000104904175, 0.8270000219345093, 0.8303333520889282, 0.8323333263397217, 0.8366666436195374, 0.8343333601951599, 0.8379999995231628, 0.8429999947547913, 0.8413333296775818, 0.82833331823349, 0.8316666483879089, 0.8379999995231628, 0.843999981880188, 0.8433333039283752, 0.847000002861023, 0.8489999771118164, 0.8503333330154419, 0.8489999771118164, 0.8456666469573975, 0.8579999804496765, 0.8539999723434448, 0.8573333621025085, 0.8510000109672546, 0.8473333120346069, 0.8579999804496765]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 91, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 6, 3], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303635835647583, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 2, 3, 1, 3, 8, 4, 9, 5], [0, 0, 1, 0, 2], [0, 39, 28, 74], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 4], [2, 0, 3, 1, 0, 1], [16, 87], [0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 4, 14, 8, 6, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(grad, alpha), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2, 4, 0], [2, 0, 3, 1, 0, 3, 4], [43, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 9, 2, 5], [3, 6, 1], [0], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 2, 4, 3], [2, 1, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 16, 9, 7, 2, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(tf.math.pow(alpha, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.pow(alpha, tf.math.multiply(beta, grad)))))", "other_info": {"loss": [2.30375599861145, 2.3026485443115234, 2.3026535511016846, 2.3026671409606934, 2.3026673793792725, 2.3026721477508545], "accuracy": [0.09140139818191528, 0.09140139818191528, 0.09734513610601425, 0.09747721254825592, 0.09998679161071777, 0.09642054885625839], "val_loss": [2.3025920391082764, 2.302602767944336, 2.3026022911071777, 2.30259108543396, 2.3025755882263184, 2.3025810718536377], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 3], [0, 2, 1, 2, 2], [0, 39, 39], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [0, 0, 0, 1, 1, 1, 0, 0], [0, 2, 0, 2, 0], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107216358184814, 2.310295581817627, 2.310431480407715, 2.309939384460449, 2.3098981380462646, 2.3113644123077393], "accuracy": [0.09047681838274002, 0.09391097724437714, 0.09311848133802414, 0.09628847241401672, 0.09245806187391281, 0.08717474341392517], "val_loss": [2.3087713718414307, 2.3087713718414307, 2.3087713718414307, 2.3087713718414307, 2.3087713718414307, 2.3087713718414307], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]