[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8119999766349792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2081034183502197, 1.6043965816497803, 1.1257349252700806, 0.9840917587280273, 0.9026155471801758, 0.8341062664985657, 0.7991049289703369, 0.7568283677101135, 0.7447705864906311, 0.7083280086517334, 0.6804583668708801, 0.6773294806480408, 0.6630979180335999, 0.6544486880302429, 0.6263777017593384, 0.620498776435852, 0.607265830039978, 0.5889974236488342, 0.5797889232635498, 0.583243727684021, 0.5680888891220093, 0.5697245597839355, 0.5528706908226013, 0.5559527277946472, 0.5401594638824463, 0.5371541380882263, 0.5210310220718384, 0.5160406231880188, 0.5035688281059265, 0.5197188854217529, 0.4986216127872467, 0.48992279171943665, 0.49303191900253296, 0.4816448986530304, 0.48478829860687256, 0.47699955105781555, 0.4569728970527649, 0.4595295786857605, 0.45889878273010254, 0.45257627964019775, 0.4543409049510956, 0.43918487429618835, 0.4298974573612213], "accuracy": [0.26826047897338867, 0.4986131191253662, 0.6102232336997986, 0.6497160196304321, 0.6782459616661072, 0.698718786239624, 0.7047945857048035, 0.7191916704177856, 0.7257958054542542, 0.7395324110984802, 0.7445515990257263, 0.7510236501693726, 0.7491744756698608, 0.7526086568832397, 0.7676661014556885, 0.7685906887054443, 0.7718927264213562, 0.7790252566337585, 0.7854973077774048, 0.7819310426712036, 0.7886672616004944, 0.7874785661697388, 0.7993659973144531, 0.7935543656349182, 0.8004226684570312, 0.8004226684570312, 0.8072909712791443, 0.8112534880638123, 0.81548011302948, 0.8038568496704102, 0.8168009519577026, 0.8211596608161926, 0.8161405324935913, 0.8284242749214172, 0.8185180425643921, 0.826310932636261, 0.8308017253875732, 0.8281601071357727, 0.8305375576019287, 0.8265751004219055, 0.8363492488861084, 0.8380662798881531, 0.8403117060661316], "val_loss": [1.914859652519226, 1.0966876745224, 0.8901389837265015, 0.8147329092025757, 0.7109568119049072, 0.7165368795394897, 0.687696099281311, 0.6570715308189392, 0.6353358626365662, 0.6018288731575012, 0.5817734599113464, 0.6651780605316162, 0.568589985370636, 0.5486820340156555, 0.5534839630126953, 0.546201229095459, 0.5182985067367554, 0.5132064819335938, 0.5304291844367981, 0.5048770904541016, 0.5254453420639038, 0.49492257833480835, 0.48717883229255676, 0.4859054684638977, 0.48184022307395935, 0.46974626183509827, 0.480263352394104, 0.4501257836818695, 0.48532891273498535, 0.4488053321838379, 0.4557643532752991, 0.49750304222106934, 0.4398425221443176, 0.44861042499542236, 0.441627562046051, 0.4255509376525879, 0.4550711214542389, 0.4187621772289276, 0.4221077561378479, 0.41585612297058105, 0.4160187244415283, 0.4237130582332611, 0.4139001965522766], "val_accuracy": [0.5446666479110718, 0.6706666946411133, 0.6800000071525574, 0.6930000185966492, 0.753333330154419, 0.7353333234786987, 0.7513333559036255, 0.7599999904632568, 0.7599999904632568, 0.7716666460037231, 0.7876666784286499, 0.7453333139419556, 0.7903333306312561, 0.7990000247955322, 0.7983333468437195, 0.7876666784286499, 0.8173333406448364, 0.809333324432373, 0.8053333163261414, 0.8209999799728394, 0.7889999747276306, 0.815666675567627, 0.8266666531562805, 0.8199999928474426, 0.824999988079071, 0.8320000171661377, 0.8216666579246521, 0.8386666774749756, 0.809333324432373, 0.8383333086967468, 0.8333333134651184, 0.7979999780654907, 0.843666672706604, 0.8370000123977661, 0.8433333039283752, 0.8450000286102295, 0.8343333601951599, 0.8526666760444641, 0.8476666808128357, 0.8493333458900452, 0.8513333201408386, 0.8513333201408386, 0.8526666760444641]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 7, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1, 98], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 6, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 3, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0], [0, 0, 3, 0, 3], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [3, 2, 0, 6, 3, 8, 2, 2, 5, 4, 4, 5, 0, 5, 0, 9], [4, 1, 3, 1, 0, 3, 1, 3], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 1, 6], [0, 6, 1, 3, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 24, 16, 8, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, grad))), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.square(tf.math.pow(tf.math.pow(tf.math.square(alpha), tf.math.negative(tf.math.square(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.divide_no_nan(alpha, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 8], [0, 6, 1, 3, 4], [0], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 9, 6, 3, 2, 4, 2, 2, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3089587688446045, 2.309581756591797, 2.3090386390686035, 2.3092780113220215, 2.310629367828369, 2.3091914653778076], "accuracy": [0.09589222073554993, 0.09351472556591034, 0.09496764093637466, 0.09787346422672272, 0.09034473448991776, 0.09668471664190292], "val_loss": [2.3090426921844482, 2.3090426921844482, 2.3090426921844482, 2.3090426921844482, 2.3090426921844482, 2.3090426921844482], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 1, 9], [0, 0, 1, 0, 2], [0, 39, 39, 65], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 8, 4, 5], [0, 6, 1, 5, 0, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 13, 8, 5, 4, 2, 1, 1, 0, 16, 10, 6, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.sqrt(alpha), grad)))), tf.math.pow(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094239234924316, 2.310699224472046, 2.310354471206665, 2.309732675552368, 2.3090615272521973, 2.3087775707244873], "accuracy": [0.09681680053472519, 0.09298639744520187, 0.08915598690509796, 0.09259014576673508, 0.09470347315073013, 0.1010434553027153], "val_loss": [2.308351993560791, 2.308351993560791, 2.308351993560791, 2.308351993560791, 2.308351993560791, 2.308351993560791], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]