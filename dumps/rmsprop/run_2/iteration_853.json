[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2054710388183594, 1.5872063636779785, 1.1573292016983032, 0.9656609296798706, 0.9043314456939697, 0.8473492860794067, 0.7972826361656189, 0.7506508231163025, 0.7345358729362488, 0.7081652879714966, 0.6987638473510742, 0.6683037877082825, 0.6645945310592651, 0.6401031613349915, 0.6216387152671814, 0.612109363079071, 0.597800612449646, 0.5860512256622314, 0.6051976680755615, 0.5678884387016296, 0.5630003213882446, 0.5722843408584595, 0.5501111149787903, 0.5441858172416687, 0.5277193784713745, 0.5322680473327637, 0.5345210433006287, 0.5078657865524292, 0.5112026333808899, 0.510442852973938, 0.5077397227287292, 0.48470717668533325, 0.4802775979042053, 0.4783504009246826, 0.48435840010643005, 0.46365639567375183, 0.4696095585823059, 0.46630778908729553, 0.4558619260787964, 0.44531384110450745, 0.4515839219093323, 0.43625035881996155, 0.4398161470890045, 0.43435075879096985, 0.4220213294029236, 0.4297831952571869, 0.43825042247772217, 0.4244328737258911, 0.4176599979400635, 0.4241677522659302, 0.4033474028110504, 0.4165281057357788, 0.4106108248233795, 0.39461690187454224, 0.3974232077598572, 0.4030470550060272, 0.3900819718837738, 0.3915461003780365, 0.3831765353679657, 0.38247546553611755, 0.3798794448375702, 0.3822817802429199, 0.3702720105648041, 0.36241650581359863, 0.3686855435371399, 0.3803988993167877, 0.3591262400150299, 0.363523006439209], "accuracy": [0.27301543951034546, 0.5156518220901489, 0.5997886657714844, 0.6601505875587463, 0.6712455153465271, 0.6910579800605774, 0.7062475085258484, 0.7243428826332092, 0.7265883088111877, 0.737022876739502, 0.7371549606323242, 0.7560427784919739, 0.752212405204773, 0.76106196641922, 0.7646281719207764, 0.7689869403839111, 0.7770439982414246, 0.778232753276825, 0.7712323069572449, 0.7893276810646057, 0.7928939461708069, 0.7823272943496704, 0.7935543656349182, 0.7943468689918518, 0.8025360107421875, 0.8024039268493652, 0.7954035401344299, 0.8098005652427673, 0.8057059645652771, 0.8082155585289001, 0.8105930685997009, 0.8177255392074585, 0.8215559124946594, 0.8212917447090149, 0.8168009519577026, 0.8284242749214172, 0.8285563588142395, 0.8238013386726379, 0.8286884427070618, 0.8347642421722412, 0.8301413059234619, 0.8403117060661316, 0.8352925777435303, 0.8387266993522644, 0.8445383906364441, 0.8345000743865967, 0.8368775844573975, 0.8442742228507996, 0.841500461101532, 0.8412362933158875, 0.8506141901016235, 0.8451988101005554, 0.8487650156021118, 0.8529917001724243, 0.8582749962806702, 0.8486329317092896, 0.8524633646011353, 0.8524633646011353, 0.8557654023170471, 0.8617091774940491, 0.8569541573524475, 0.857218325138092, 0.859199583530426, 0.8617091774940491, 0.8665962219238281, 0.8584070801734924, 0.8656716346740723, 0.8621054291725159], "val_loss": [1.9057308435440063, 1.1067521572113037, 0.9115685224533081, 0.8622766137123108, 0.886049747467041, 0.7016326785087585, 0.6815520524978638, 0.6524083018302917, 0.6317706108093262, 0.6140273213386536, 0.641917884349823, 0.6383956670761108, 0.6202161312103271, 0.5588827729225159, 0.5755202770233154, 0.5431464910507202, 0.5572309494018555, 0.5735361576080322, 0.5287421941757202, 0.5157254934310913, 0.5267733335494995, 0.5178931951522827, 0.537857174873352, 0.4929845929145813, 0.5243031978607178, 0.5041469931602478, 0.49625447392463684, 0.47803372144699097, 0.4903692901134491, 0.5057725310325623, 0.49673351645469666, 0.4700581729412079, 0.4610939025878906, 0.49537110328674316, 0.4634946286678314, 0.45284512639045715, 0.4585339426994324, 0.4446432292461395, 0.45539289712905884, 0.44825759530067444, 0.43928027153015137, 0.44974642992019653, 0.4327023923397064, 0.43863919377326965, 0.4404611885547638, 0.4469987452030182, 0.44141897559165955, 0.4196062386035919, 0.42701634764671326, 0.4221646785736084, 0.416707843542099, 0.4340965151786804, 0.4128083884716034, 0.41504403948783875, 0.4297705590724945, 0.42268115282058716, 0.42159152030944824, 0.42987051606178284, 0.4086531698703766, 0.414219468832016, 0.4082126021385193, 0.4106581509113312, 0.39973193407058716, 0.39250248670578003, 0.40135979652404785, 0.39955630898475647, 0.3923710882663727, 0.39953726530075073], "val_accuracy": [0.6330000162124634, 0.6433333158493042, 0.6756666898727417, 0.6666666865348816, 0.6626666784286499, 0.718666672706604, 0.737666666507721, 0.7400000095367432, 0.7516666650772095, 0.7636666893959045, 0.7536666393280029, 0.7419999837875366, 0.7413333058357239, 0.7853333353996277, 0.7706666588783264, 0.800000011920929, 0.777999997138977, 0.7720000147819519, 0.8063333630561829, 0.8173333406448364, 0.8040000200271606, 0.8059999942779541, 0.7913333177566528, 0.8209999799728394, 0.7940000295639038, 0.8196666836738586, 0.8193333148956299, 0.8343333601951599, 0.8259999752044678, 0.8166666626930237, 0.8270000219345093, 0.8220000267028809, 0.8353333473205566, 0.8109999895095825, 0.8320000171661377, 0.828000009059906, 0.8276666402816772, 0.8356666564941406, 0.8286666870117188, 0.8360000252723694, 0.8429999947547913, 0.82833331823349, 0.8433333039283752, 0.8363333344459534, 0.8323333263397217, 0.8396666646003723, 0.8333333134651184, 0.8479999899864197, 0.8453333377838135, 0.8489999771118164, 0.8496666550636292, 0.8416666388511658, 0.8500000238418579, 0.8489999771118164, 0.8496666550636292, 0.8500000238418579, 0.8516666889190674, 0.8479999899864197, 0.8523333072662354, 0.8519999980926514, 0.8566666841506958, 0.8529999852180481, 0.8600000143051147, 0.856333315372467, 0.8523333072662354, 0.856333315372467, 0.8566666841506958, 0.8519999980926514]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 9], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 5, 5, 8, 6, 9], [0, 2, 1, 0, 2], [1, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2, 9, 0, 6, 7, 3, 2, 2, 9], [2, 5, 3, 1, 0, 3, 0, 3, 5], [16, 1, 3, 44], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 7, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 3, 24, 15, 9, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.square(grad)), tf.math.sqrt(alpha))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), alpha)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 4, 0, 8, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 3, 0, 6, 5, 8, 2], [2, 0, 3, 1, 1], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 8, 0, 2, 5, 1, 0], [0, 6, 1], [79, 22], [1], [0], [2], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 1, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107268810272217, 2.3098366260528564, 2.309075117111206, 2.3096764087677, 2.3103954792022705, 2.309283494949341], "accuracy": [0.08928807079792023, 0.09219389408826828, 0.09536388516426086, 0.09338264167308807, 0.09232597798109055, 0.09457138925790787], "val_loss": [2.308431625366211, 2.308431625366211, 2.308431625366211, 2.308431625366211, 2.308431625366211, 2.308431625366211], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 4, 3, 2, 3, 5, 3, 5, 4, 9], [2, 2, 1, 0, 2, 0], [0, 39, 39], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 4], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 16, 10, 6, 3, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.square(tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101251125335693, 2.3100688457489014, 2.3097498416900635, 2.3111038208007812, 2.310227155685425, 2.3107500076293945], "accuracy": [0.09179764986038208, 0.08994849026203156, 0.09126931428909302, 0.08677849918603897, 0.09140139818191528, 0.09060890227556229], "val_loss": [2.309260368347168, 2.309260368347168, 2.309260368347168, 2.309260368347168, 2.309260368347168, 2.309260368347168], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]