[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.205551862716675, 1.5881494283676147, 1.1189560890197754, 0.971837043762207, 0.8733081221580505, 0.7983014583587646, 0.7741968631744385, 0.7408678531646729, 0.7249009013175964, 0.689312219619751, 0.6610777974128723, 0.6682348251342773, 0.6276895999908447, 0.6326937675476074, 0.5993928909301758, 0.6012250781059265, 0.6015843749046326, 0.5647189617156982, 0.5866131782531738, 0.5518439412117004, 0.5436682105064392, 0.5410212874412537, 0.5246802568435669, 0.5269765257835388, 0.5211251974105835, 0.5126891732215881, 0.5026620626449585, 0.4940264821052551, 0.4898395836353302, 0.48580023646354675, 0.47563275694847107, 0.4730023145675659, 0.4633548855781555, 0.46488627791404724, 0.44977080821990967, 0.46131062507629395, 0.45100706815719604, 0.4452148377895355, 0.4433472752571106, 0.42371082305908203], "accuracy": [0.2661471366882324, 0.5127459764480591, 0.6075815558433533, 0.6617355942726135, 0.6910579800605774, 0.7145687341690063, 0.7168141603469849, 0.7283053994178772, 0.7333245277404785, 0.7446836829185486, 0.7572315335273743, 0.7485140562057495, 0.767930269241333, 0.7633073329925537, 0.77677983045578, 0.7746664881706238, 0.7745344042778015, 0.7907806038856506, 0.7795535326004028, 0.793950617313385, 0.7984414100646973, 0.7961959838867188, 0.8080834746360779, 0.8034605979919434, 0.8063663840293884, 0.8096684813499451, 0.8140271902084351, 0.8150838613510132, 0.8222163319587708, 0.8201030492782593, 0.8261788487434387, 0.8245938420295715, 0.83119797706604, 0.8219521641731262, 0.837141752243042, 0.830669641494751, 0.8352925777435303, 0.8381983637809753, 0.8396512866020203, 0.8466516733169556], "val_loss": [1.9039586782455444, 1.0944567918777466, 0.8370082378387451, 0.7585143446922302, 0.7003089189529419, 0.6438295245170593, 0.6706168055534363, 0.6192255020141602, 0.6275302171707153, 0.5660493969917297, 0.5633482336997986, 0.5828787088394165, 0.5744483470916748, 0.5410721898078918, 0.509369969367981, 0.5417627096176147, 0.5372308492660522, 0.5171198844909668, 0.48727405071258545, 0.5070664286613464, 0.49083182215690613, 0.471652090549469, 0.4715126156806946, 0.4536712169647217, 0.45453786849975586, 0.45564305782318115, 0.4456557631492615, 0.4464845359325409, 0.4361139237880707, 0.4384429454803467, 0.43399307131767273, 0.4466039538383484, 0.42944440245628357, 0.42631450295448303, 0.4119119942188263, 0.4251018762588501, 0.41100797057151794, 0.412545382976532, 0.4112207889556885, 0.4055726230144501], "val_accuracy": [0.5363333225250244, 0.6413333415985107, 0.7103333473205566, 0.7229999899864197, 0.7279999852180481, 0.7559999823570251, 0.7419999837875366, 0.7649999856948853, 0.7639999985694885, 0.7799999713897705, 0.7893333435058594, 0.7773333191871643, 0.7799999713897705, 0.7983333468437195, 0.809333324432373, 0.7986666560173035, 0.7893333435058594, 0.8006666898727417, 0.8259999752044678, 0.7983333468437195, 0.8046666383743286, 0.8166666626930237, 0.8220000267028809, 0.8346666693687439, 0.8370000123977661, 0.8306666612625122, 0.8373333215713501, 0.8396666646003723, 0.8376666903495789, 0.8356666564941406, 0.8370000123977661, 0.8289999961853027, 0.843666672706604, 0.8403333425521851, 0.8500000238418579, 0.843666672706604, 0.847000002861023, 0.8479999899864197, 0.843666672706604, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 1, 9, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 5, 2, 1], [0, 6, 2, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.11628571152687073, "mapping_values": [1, 11, 7, 4, 3, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303508758544922, 2.3025825023651123, 2.3025851249694824, 2.3025851249694824, 2.302586317062378, 2.3025853633880615], "accuracy": [0.10276053100824356, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09919429570436478, 0.09998679161071777], "val_loss": [2.302577018737793, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025870323181152, 2.3025870323181152], "val_accuracy": [0.11633333563804626, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 2, 1], [0, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303615093231201, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 3, 7, 1, 8, 6, 5], [0, 2, 1, 3, 2, 2, 3, 1, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 0, 6, 3, 3, 2, 5, 6, 3, 1, 3, 8, 4, 6, 0, 6, 4, 5, 1, 0, 1, 2, 6], [2, 3, 1, 1, 0, 1, 0, 4, 2, 4, 1, 2, 0, 2, 5, 1, 5, 5, 1], [16, 1, 60], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 0, 2, 5, 2, 1], [2, 6, 1, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 2, 43, 24, 19, 3, 12, 7, 5, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(tf.math.multiply(grad, tf.math.add(tf.math.subtract(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(grad), alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.square(tf.math.divide_no_nan(beta, grad)), alpha), alpha), tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.divide_no_nan(grad, beta))), tf.math.pow(tf.math.square(grad), tf.math.subtract(tf.math.negative(tf.math.subtract(alpha, beta)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(grad, tf.math.divide_no_nan(alpha, grad)))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(grad, tf.math.subtract(alpha, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 4, 4, 0, 6, 9], [0, 6, 1, 6, 4], [16, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.divide_no_nan(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091859817504883, 2.309011459350586, 2.3089680671691895, 2.309262990951538, 2.310506820678711, 2.3108768463134766], "accuracy": [0.0936468094587326, 0.09549596905708313, 0.09338264167308807, 0.08598599582910538, 0.09021265059709549, 0.09325055778026581], "val_loss": [2.3085243701934814, 2.3085243701934814, 2.3085243701934814, 2.3085243701934814, 2.3085243701934814, 2.3085243701934814], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]