[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2075119018554688, 1.59201979637146, 1.1390533447265625, 0.9503463506698608, 0.866347074508667, 0.820792555809021, 0.7690675258636475, 0.7231831550598145, 0.6977937817573547, 0.6955603957176208, 0.6613768339157104, 0.6574367880821228, 0.6329723000526428, 0.6283473372459412, 0.6027851104736328, 0.598486065864563, 0.5778972506523132, 0.5830293297767639, 0.5590413212776184, 0.5578358769416809, 0.5620748996734619, 0.5408769845962524, 0.522535502910614, 0.5132540464401245, 0.5155636668205261, 0.5086556673049927, 0.4931918978691101, 0.4910781681537628, 0.478744775056839, 0.49231433868408203, 0.481220543384552, 0.47636154294013977, 0.47720250487327576, 0.46150490641593933, 0.45760437846183777, 0.457642138004303, 0.4444037973880768, 0.4363105297088623, 0.43794772028923035, 0.43857288360595703], "accuracy": [0.26443007588386536, 0.5071985125541687, 0.603090763092041, 0.6647734642028809, 0.6814159154891968, 0.6954167485237122, 0.7174745798110962, 0.7325320243835449, 0.7380794882774353, 0.7408532500267029, 0.7540615797042847, 0.750759482383728, 0.7627789974212646, 0.76542067527771, 0.7759873270988464, 0.7755910754203796, 0.7804781198501587, 0.7781006693840027, 0.7903843522071838, 0.7955356240272522, 0.7911768555641174, 0.7989697456359863, 0.8034605979919434, 0.8100647330284119, 0.809140145778656, 0.8062343001365662, 0.8161405324935913, 0.8189142942428589, 0.8189142942428589, 0.8164047002792358, 0.8207634687423706, 0.8261788487434387, 0.8247259259223938, 0.8297450542449951, 0.8304054737091064, 0.826310932636261, 0.8364813327789307, 0.842028796672821, 0.8380662798881531, 0.8327829837799072], "val_loss": [1.9164527654647827, 1.0980356931686401, 0.895600438117981, 0.8024958372116089, 0.8152797222137451, 0.6828410029411316, 0.6597735285758972, 0.6493025422096252, 0.6262388825416565, 0.6355681419372559, 0.5939334034919739, 0.5963463187217712, 0.6237745881080627, 0.5658072829246521, 0.5392945408821106, 0.5416607856750488, 0.5370713472366333, 0.5253082513809204, 0.5264692306518555, 0.5184999108314514, 0.5111278295516968, 0.49724721908569336, 0.511609673500061, 0.5077977180480957, 0.48576274514198303, 0.4764198064804077, 0.47009286284446716, 0.47027361392974854, 0.4678271412849426, 0.4562608599662781, 0.4771862328052521, 0.4568605422973633, 0.4590721130371094, 0.44962453842163086, 0.43984469771385193, 0.4455356001853943, 0.4389435946941376, 0.4370776414871216, 0.43536803126335144, 0.44356128573417664], "val_accuracy": [0.5196666717529297, 0.6393333077430725, 0.6883333325386047, 0.6953333616256714, 0.6880000233650208, 0.7456666827201843, 0.7506666779518127, 0.7643333077430725, 0.7710000276565552, 0.7556666731834412, 0.765666663646698, 0.7796666622161865, 0.75, 0.7839999794960022, 0.7979999780654907, 0.7979999780654907, 0.7889999747276306, 0.800000011920929, 0.8040000200271606, 0.8076666593551636, 0.8043333292007446, 0.815666675567627, 0.8096666932106018, 0.8100000023841858, 0.8213333487510681, 0.8240000009536743, 0.8316666483879089, 0.8270000219345093, 0.8330000042915344, 0.8316666483879089, 0.8216666579246521, 0.8306666612625122, 0.8316666483879089, 0.8343333601951599, 0.843999981880188, 0.8399999737739563, 0.8399999737739563, 0.8396666646003723, 0.8379999995231628, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 0], [2, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1, 9, 7, 0], [0, 6, 1, 3, 0], [0, 53, 53], [1], [0], [7], [0]], "fitness": -0.1508571356534958, "mapping_values": [1, 11, 6, 5, 1, 2, 1, 1, 0, 15, 10, 5, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, grad), tf.math.add(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, sigma)))), tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.420034646987915, 2.355426549911499, 2.379690170288086, 2.3048906326293945, 2.3036787509918213, 2.3029603958129883, 2.3031136989593506], "accuracy": [0.16417910158634186, 0.16272619366645813, 0.14780081808567047, 0.10196803510189056, 0.09298639744520187, 0.10117553919553757, 0.09470347315073013], "val_loss": [2.2923715114593506, 2.2560155391693115, 2.3068666458129883, 2.3032937049865723, 2.3028807640075684, 2.3028833866119385, 2.302643299102783], "val_accuracy": [0.109333336353302, 0.14733333885669708, 0.0963333323597908, 0.09933333098888397, 0.0963333323597908, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 8, 3, 2, 2, 9], [0, 2, 3, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 3, 5, 4, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.614741802215576, 58.649620056152344, 203.1474609375, 497.2173767089844, 1008.13427734375, 1810.569091796875], "accuracy": [0.09589222073554993, 0.10091137140989304, 0.10328886657953262, 0.09959053993225098, 0.09800554811954498, 0.1018359512090683], "val_loss": [20.61785125732422, 96.63459014892578, 268.0291748046875, 584.3544311523438, 1094.7562255859375, 1848.7646484375], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 4, 6, 5], [0, 2, 1, 1, 2, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2, 8, 1], [2, 0, 2, 1, 0, 1], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 9, 0, 2, 5, 2, 1], [0, 6, 1, 0, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 1, 15, 9, 6, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.square(grad), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 2, 7, 5], [0, 2, 1, 0, 2], [61, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [8, 2, 0, 6, 3, 8, 2, 9], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 3, 1, 2, 1, 2, 6, 9, 7], [7, 6, 1, 6, 2, 5, 0, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 8, 4, 2, 19, 11, 8, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.subtract(grad, tf.math.add(tf.math.subtract(tf.math.add(grad, alpha), grad), beta)), tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]