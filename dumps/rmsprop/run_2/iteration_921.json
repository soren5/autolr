[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8342857360839844, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20717716217041, 1.605880856513977, 1.1461973190307617, 0.9523301124572754, 0.8770666718482971, 0.8177300095558167, 0.7871286869049072, 0.7795053124427795, 0.7188805341720581, 0.6896605491638184, 0.669161319732666, 0.6816995739936829, 0.6563324332237244, 0.6377574801445007, 0.6337918639183044, 0.6065530776977539, 0.627884030342102, 0.5886173248291016, 0.5767853856086731, 0.568019449710846, 0.5489941239356995, 0.5559765100479126, 0.5446353554725647, 0.531822681427002, 0.5257640480995178, 0.5211957097053528, 0.5089857578277588, 0.5053071975708008, 0.5027623176574707, 0.499081552028656, 0.4834795594215393, 0.5009056329727173], "accuracy": [0.26218464970588684, 0.49953770637512207, 0.5935807824134827, 0.6596222519874573, 0.6853784322738647, 0.6973979473114014, 0.7071720957756042, 0.709549605846405, 0.735569953918457, 0.741909921169281, 0.7524765729904175, 0.737947404384613, 0.7460044622421265, 0.7647602558135986, 0.76106196641922, 0.774798572063446, 0.7642319202423096, 0.7854973077774048, 0.7827235460281372, 0.7873464822769165, 0.7948752045631409, 0.7885351777076721, 0.7961959838867188, 0.8009510040283203, 0.8043851256370544, 0.8045172095298767, 0.809140145778656, 0.8099326491355896, 0.8104609847068787, 0.8153480291366577, 0.8183859586715698, 0.8131026029586792], "val_loss": [1.9077098369598389, 1.1018141508102417, 0.9367766976356506, 0.8142780065536499, 0.696749210357666, 0.6969869136810303, 0.6725472211837769, 0.6439222693443298, 0.6379268169403076, 0.5904772281646729, 0.6100800037384033, 0.5734908580780029, 0.5466319918632507, 0.5402036309242249, 0.5413215160369873, 0.5650383234024048, 0.5157857537269592, 0.5002679228782654, 0.5754606127738953, 0.4832718074321747, 0.565431535243988, 0.5036930441856384, 0.4788781404495239, 0.47796404361724854, 0.48585450649261475, 0.46104395389556885, 0.44980117678642273, 0.4566558301448822, 0.4549638330936432, 0.45827725529670715, 0.44269827008247375, 0.44145336747169495], "val_accuracy": [0.5120000243186951, 0.6503333449363708, 0.6570000052452087, 0.7026666402816772, 0.7426666617393494, 0.7300000190734863, 0.7463333606719971, 0.753333330154419, 0.7353333234786987, 0.7699999809265137, 0.7593333125114441, 0.7823333144187927, 0.7873333096504211, 0.7833333611488342, 0.7796666622161865, 0.7773333191871643, 0.7976666688919067, 0.8066666722297668, 0.7699999809265137, 0.8130000233650208, 0.7743333578109741, 0.8096666932106018, 0.8100000023841858, 0.8193333148956299, 0.8076666593551636, 0.8273333311080933, 0.8333333134651184, 0.8240000009536743, 0.8253333568572998, 0.8230000138282776, 0.8320000171661377, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 5, 2, 5, 0, 5], [1, 0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 2, 10, 6, 4, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), tf.math.square(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.786005735397339, 2.344139575958252, 2.252735137939453, 2.3062589168548584, 2.303637981414795, 2.303410291671753, 2.30301570892334, 2.303086042404175, 2.3032259941101074, 2.302907943725586, 2.3027286529541016, 2.302610397338867], "accuracy": [0.17831197381019592, 0.12759213149547577, 0.1768590658903122, 0.09998679161071777, 0.1010434553027153, 0.09998679161071777, 0.09774138033390045, 0.10011887550354004, 0.0948355570435524, 0.09470347315073013, 0.10051512718200684, 0.10672302544116974], "val_loss": [2.302917242050171, 2.286663293838501, 2.3078181743621826, 2.3032732009887695, 2.302604913711548, 2.3025622367858887, 2.3025758266448975, 2.302520751953125, 2.302598714828491, 2.302497148513794, 2.3024744987487793, 2.302351474761963], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.0989999994635582, 0.10133333504199982, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 4, 7, 2, 3, 5], [0, 3, 1, 0, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099191188812256, 2.3108103275299072, 2.309600591659546, 2.309795618057251, 2.310366630554199, 2.310419797897339], "accuracy": [0.09113723784685135, 0.09351472556591034, 0.09853387624025345, 0.09087307006120682, 0.09272222965955734, 0.09008057415485382], "val_loss": [2.3095104694366455, 2.3095104694366455, 2.3095104694366455, 2.3095104694366455, 2.3095104694366455, 2.3095104694366455], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 2, 3, 1, 2, 5, 9], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 4, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [8, 2, 0, 2, 5, 9, 1], [2, 6, 1, 6, 0], [0, 32], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 12, 7, 5, 3, 1, 0, 1, 0, 8, 6, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095524311065674, 2.3089423179626465, 2.31046199798584, 2.3097081184387207, 2.3093631267547607, 2.308773994445801], "accuracy": [0.08955223858356476, 0.0878351628780365, 0.09219389408826828, 0.09074098616838455, 0.0878351628780365, 0.0944393053650856], "val_loss": [2.3097660541534424, 2.3097660541534424, 2.3097660541534424, 2.3097660541534424, 2.3097660541534424, 2.3097660541534424], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 8, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 2, 5], [0, 1, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310253620147705, 2.3090972900390625, 2.3099887371063232, 2.3090476989746094, 2.309309720993042, 2.3082499504089355], "accuracy": [0.0940430611371994, 0.09074098616838455, 0.08994849026203156, 0.0936468094587326, 0.09655263274908066, 0.09219389408826828], "val_loss": [2.308163642883301, 2.308163642883301, 2.308163642883301, 2.308163642883301, 2.308163642883301, 2.308163642883301], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]