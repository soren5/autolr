[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211966037750244, 1.6105746030807495, 1.1692290306091309, 0.9924208521842957, 0.937823474407196, 0.846139669418335, 0.8086661100387573, 0.7663787007331848, 0.7596660852432251, 0.7196502685546875, 0.707380473613739, 0.6859540939331055, 0.6630715727806091, 0.6497433185577393, 0.6533650159835815, 0.6294471621513367, 0.6099386811256409, 0.6079369783401489, 0.5813480615615845, 0.5931534767150879, 0.5636953115463257, 0.5606185793876648, 0.5542340874671936, 0.5437617897987366, 0.5273258686065674, 0.5295509696006775, 0.5174162983894348, 0.5087868571281433, 0.5159391760826111, 0.49177223443984985, 0.495937705039978, 0.48230820894241333, 0.4912166893482208, 0.4700051248073578, 0.47854673862457275, 0.47047343850135803, 0.4627651870250702, 0.4476569592952728, 0.44823315739631653, 0.4540058970451355, 0.4376394748687744, 0.4334847629070282, 0.43035051226615906, 0.4227692782878876, 0.4231426417827606, 0.4226432740688324, 0.4167051613330841, 0.4105413556098938, 0.410926878452301, 0.4049544334411621, 0.3995888829231262, 0.39926621317863464, 0.39428025484085083, 0.39270150661468506, 0.38480204343795776, 0.38121989369392395, 0.37670740485191345, 0.37644246220588684, 0.37519705295562744, 0.3683900535106659, 0.3642914891242981, 0.37271130084991455, 0.3643672466278076, 0.35992133617401123, 0.36308351159095764], "accuracy": [0.2685246467590332, 0.5134063959121704, 0.5939770340919495, 0.6478668451309204, 0.6629242897033691, 0.6896050572395325, 0.6995112895965576, 0.7193237543106079, 0.7160216569900513, 0.7367587089538574, 0.7363624572753906, 0.7464007139205933, 0.7483819723129272, 0.7504953145980835, 0.7568352818489075, 0.763967752456665, 0.7701756954193115, 0.7757231593132019, 0.7835160493850708, 0.7761194109916687, 0.7917051911354065, 0.791441023349762, 0.7909126877784729, 0.7957997918128967, 0.8021397590637207, 0.8021397590637207, 0.8020076751708984, 0.8098005652427673, 0.8087438941001892, 0.8145555257797241, 0.8168009519577026, 0.8173292875289917, 0.8144234418869019, 0.8236692547798157, 0.8182538747787476, 0.8189142942428589, 0.8293488025665283, 0.8301413059234619, 0.8323867321014404, 0.8281601071357727, 0.8327829837799072, 0.8381983637809753, 0.839519202709198, 0.8354246616363525, 0.8409721255302429, 0.8455950617790222, 0.8467837572097778, 0.8421608805656433, 0.8454629778862, 0.8479725122451782, 0.8494254350662231, 0.8516708612442017, 0.8504821062088013, 0.8490291833877563, 0.8568220734596252, 0.858671247959137, 0.8568220734596252, 0.8552370667457581, 0.8619733452796936, 0.8643507957458496, 0.863029956817627, 0.859199583530426, 0.8644828796386719, 0.86553955078125, 0.8632941246032715], "val_loss": [1.9290552139282227, 1.095447063446045, 0.8894352912902832, 0.7670117020606995, 0.7283650040626526, 0.7545939087867737, 0.6988757848739624, 0.6491056084632874, 0.6381174325942993, 0.6203677654266357, 0.60767662525177, 0.6144985556602478, 0.5854392051696777, 0.6141839027404785, 0.5649182796478271, 0.5487442016601562, 0.5850886702537537, 0.5394155383110046, 0.5258644223213196, 0.5267869234085083, 0.5087490677833557, 0.5223165154457092, 0.5003390312194824, 0.489671915769577, 0.5048316121101379, 0.4962555766105652, 0.48934847116470337, 0.5119907259941101, 0.4733756482601166, 0.47356510162353516, 0.4805653989315033, 0.4672723710536957, 0.46425676345825195, 0.451716810464859, 0.4654388725757599, 0.4526422917842865, 0.44460567831993103, 0.44948869943618774, 0.43933895230293274, 0.4341006577014923, 0.43655574321746826, 0.4277656376361847, 0.43714818358421326, 0.4452518820762634, 0.45672354102134705, 0.4164612591266632, 0.4329770505428314, 0.41511979699134827, 0.430063396692276, 0.41023141145706177, 0.411461740732193, 0.43133535981178284, 0.4211096167564392, 0.4111132025718689, 0.4104379117488861, 0.40067121386528015, 0.40725964307785034, 0.40838199853897095, 0.3950657546520233, 0.3957294821739197, 0.42380908131599426, 0.3964923918247223, 0.40363094210624695, 0.4063667058944702, 0.3964962065219879], "val_accuracy": [0.6019999980926514, 0.6610000133514404, 0.668666660785675, 0.7143333554267883, 0.7363333106040955, 0.7336666584014893, 0.7296666502952576, 0.7620000243186951, 0.7453333139419556, 0.7673333287239075, 0.7616666555404663, 0.753333330154419, 0.7713333368301392, 0.7639999985694885, 0.781000018119812, 0.7879999876022339, 0.765333354473114, 0.8063333630561829, 0.8069999814033508, 0.7979999780654907, 0.8026666641235352, 0.8003333210945129, 0.8116666674613953, 0.8146666884422302, 0.8066666722297668, 0.8090000152587891, 0.815666675567627, 0.7976666688919067, 0.8199999928474426, 0.8220000267028809, 0.8163333535194397, 0.8230000138282776, 0.8220000267028809, 0.8363333344459534, 0.8180000185966492, 0.8289999961853027, 0.8403333425521851, 0.8366666436195374, 0.8356666564941406, 0.8410000205039978, 0.8376666903495789, 0.843666672706604, 0.8339999914169312, 0.8349999785423279, 0.828000009059906, 0.8496666550636292, 0.843666672706604, 0.8456666469573975, 0.8376666903495789, 0.8506666421890259, 0.847000002861023, 0.8456666469573975, 0.8453333377838135, 0.8489999771118164, 0.859000027179718, 0.8523333072662354, 0.8543333411216736, 0.8489999771118164, 0.8550000190734863, 0.8616666793823242, 0.8416666388511658, 0.8569999933242798, 0.8516666889190674, 0.8550000190734863, 0.8543333411216736]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 83], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 2, 0, 2, 5, 2, 6], [5, 6, 1, 3, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.6268571615219116, "mapping_values": [1, 11, 6, 5, 3, 11, 6, 5, 2, 11, 6, 5, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(alpha))), tf.math.add(sigma, alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [22.338577270507812, 4.994349956512451, 1.4111762046813965, 1.5040807723999023, 1.9791440963745117, 1.7336779832839966, 2.0123367309570312], "accuracy": [0.18161405622959137, 0.41830670833587646, 0.5153876543045044, 0.4687623679637909, 0.36600184440612793, 0.38964468240737915, 0.3093382716178894], "val_loss": [4.52719783782959, 1.1315077543258667, 1.0171878337860107, 1.6011351346969604, 1.4854999780654907, 1.4705297946929932, 1.6567115783691406], "val_accuracy": [0.42233332991600037, 0.6196666955947876, 0.6166666746139526, 0.527999997138977, 0.5099999904632568, 0.5503333210945129, 0.42233332991600037]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 3, 9], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3660695552825928, 3755295.75, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10460969805717468, 0.09919429570436478, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.523463726043701, 19004061696.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 0, 5], [0, 2, 1, 0, 2], [0, 30, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, alpha), tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, sigma)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303725004196167, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 6, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 4, 0, 2, 1], [0, 3, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]