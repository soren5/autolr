[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2101263999938965, 1.6000264883041382, 1.1529804468154907, 0.9928973913192749, 0.9040033221244812, 0.8411892652511597, 0.7832780480384827, 0.7694376111030579, 0.7496336102485657, 0.6939592957496643, 0.7021973729133606, 0.6818561553955078, 0.6447203159332275, 0.6424194574356079, 0.6268699169158936, 0.6210440993309021, 0.6108921766281128, 0.5931023955345154, 0.5732698440551758, 0.5702143311500549, 0.5584956407546997, 0.5705838799476624, 0.5474796295166016, 0.5352150201797485, 0.523562490940094, 0.5226290822029114, 0.5083594918251038, 0.5159047842025757, 0.496376097202301, 0.49531126022338867, 0.5022143721580505], "accuracy": [0.26760005950927734, 0.5079910159111023, 0.5959582328796387, 0.6384889483451843, 0.6617355942726135, 0.6931713223457336, 0.7091533541679382, 0.7107383608818054, 0.7162858247756958, 0.7403249144554138, 0.7337207794189453, 0.744419515132904, 0.7573636174201965, 0.7541936039924622, 0.7647602558135986, 0.7651565074920654, 0.7664773464202881, 0.7761194109916687, 0.789459764957428, 0.7878747582435608, 0.7885351777076721, 0.7835160493850708, 0.7951393723487854, 0.8013472557067871, 0.804649293422699, 0.8043851256370544, 0.813498854637146, 0.8094043135643005, 0.8165367841720581, 0.8157442808151245, 0.813498854637146], "val_loss": [1.923906683921814, 1.097804307937622, 0.9144171476364136, 0.8088703751564026, 0.739944338798523, 0.6980816125869751, 0.6898087859153748, 0.672035813331604, 0.6119640469551086, 0.6419336199760437, 0.6190245747566223, 0.5940520763397217, 0.6386643052101135, 0.5604880452156067, 0.5749412178993225, 0.5585100054740906, 0.5376481413841248, 0.5263561010360718, 0.5527922511100769, 0.5142999291419983, 0.5199203491210938, 0.5114834904670715, 0.49966228008270264, 0.5356743931770325, 0.5389629602432251, 0.473727285861969, 0.48462051153182983, 0.4772122800350189, 0.4964069724082947, 0.46441057324409485, 0.47945117950439453], "val_accuracy": [0.5230000019073486, 0.6503333449363708, 0.6589999794960022, 0.70333331823349, 0.7363333106040955, 0.7443333268165588, 0.7289999723434448, 0.7476666569709778, 0.7723333239555359, 0.734666645526886, 0.7749999761581421, 0.7823333144187927, 0.7393333315849304, 0.7926666736602783, 0.7730000019073486, 0.7929999828338623, 0.8023333549499512, 0.7946666479110718, 0.784333348274231, 0.8056666851043701, 0.8106666803359985, 0.8133333325386047, 0.8143333196640015, 0.7910000085830688, 0.7853333353996277, 0.8373333215713501, 0.8153333067893982, 0.8339999914169312, 0.8190000057220459, 0.8316666483879089, 0.8149999976158142]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5, 4, 2, 2, 9, 9], [0, 0, 1, 0, 2, 3], [0, 73, 39, 74, 79], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 7, 6, 3, 8, 2, 7, 9], [2, 0, 3, 1, 0, 5], [37, 39, 62], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 5, 15, 9, 6, 3, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.add(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad), grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3525383472442627, 30.729394912719727, 7408.80224609375, 1894049.375, 478164992.0, 121871548416.0], "accuracy": [0.09272222965955734, 0.09866596013307571, 0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.1258187294006348, 279.0611572265625, 70453.8671875, 18034790.0, 4616906240.0, 1181927997440.0], "val_accuracy": [0.10333333164453506, 0.10166666656732559, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 6], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 1, 7], [23, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309948444366455, 2.3104000091552734, 2.3114397525787354, 2.3094215393066406, 2.3105437755584717, 2.310901165008545], "accuracy": [0.09245806187391281, 0.09285431355237961, 0.09047681838274002, 0.09457138925790787, 0.09272222965955734, 0.08875974267721176], "val_loss": [2.309234142303467, 2.309234142303467, 2.309234142303467, 2.309234142303467, 2.309234142303467, 2.309234142303467], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 24, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 2, 0, 2, 5, 2, 3, 8, 3, 6, 1, 4, 7, 9, 1, 5, 9], [0, 6, 1, 6, 0, 1, 0, 0, 3], [62, 22, 51, 39, 65, 59], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 26, 17, 9, 6, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.multiply(tf.math.sqrt(tf.math.multiply(alpha, grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), sigma))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098320960998535, 2.310431718826294, 2.3100876808166504, 2.3100059032440186, 2.310267210006714, 2.3096561431884766], "accuracy": [0.09325055778026581, 0.09272222965955734, 0.08809932321310043, 0.08889182657003403, 0.08849557489156723, 0.08730682730674744], "val_loss": [2.3090524673461914, 2.3090524673461914, 2.3090524673461914, 2.3090524673461914, 2.3090524673461914, 2.3090524673461914], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [6, 2, 3, 2, 3, 4], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 7, 5, 2, 1], [0, 4, 4, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 5, 2, 3, 1, 4, 3, 1, 0, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310279607772827, 2.310499429702759, 2.309258222579956, 2.309737205505371, 2.3094944953918457, 2.309800148010254], "accuracy": [0.0886276587843895, 0.09008057415485382, 0.09219389408826828, 0.09179764986038208, 0.0944393053650856, 0.09826971590518951], "val_loss": [2.3096396923065186, 2.3096396923065186, 2.3096396923065186, 2.3096396923065186, 2.3096396923065186, 2.3096396923065186], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}]