[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7868571281433105, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212707281112671, 1.6149121522903442, 1.126476764678955, 0.9951488375663757, 0.8971431851387024, 0.8396660685539246, 0.790400505065918, 0.7556231617927551, 0.7420310974121094, 0.7098246216773987, 0.6917544007301331, 0.660494327545166, 0.6583365201950073, 0.6414924263954163, 0.6304125785827637], "accuracy": [0.2631092369556427, 0.49768856167793274, 0.6118082404136658, 0.6424514651298523, 0.672698438167572, 0.6921146512031555, 0.7087571024894714, 0.719852089881897, 0.7165499925613403, 0.7331924438476562, 0.7436270117759705, 0.7584202885627747, 0.7514199018478394, 0.763439416885376, 0.76106196641922], "val_loss": [1.9266071319580078, 1.0996631383895874, 0.9416915774345398, 0.8286444544792175, 0.712964653968811, 0.7149935960769653, 0.668143093585968, 0.6524003744125366, 0.6423196792602539, 0.5930444598197937, 0.5726355910301208, 0.5912383794784546, 0.5777521133422852, 0.585319995880127, 0.5626844763755798], "val_accuracy": [0.5839999914169312, 0.6620000004768372, 0.6606666445732117, 0.6996666789054871, 0.7406666874885559, 0.7229999899864197, 0.753333330154419, 0.746666669845581, 0.7353333234786987, 0.7896666526794434, 0.784333348274231, 0.7639999985694885, 0.7776666879653931, 0.7553333044052124, 0.7853333353996277]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 2, 4, 8, 4, 2, 5, 4, 0], [2, 0, 3, 1, 0, 3, 5, 3, 5, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [4, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 25, 15, 10, 2, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(grad, alpha), tf.math.pow(tf.math.sqrt(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.square(tf.math.pow(grad, grad)), grad))))), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 0, 0, 0, 2], [0, 39, 39, 72], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09857142716646194, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093366622924805, 2.3087756633758545, 2.308893918991089, 2.3077774047851562, 2.308687210083008, 2.307485342025757, 2.3067638874053955, 2.3060357570648193, 2.30690860748291, 2.3069934844970703, 2.3051741123199463, 2.306030035018921, 2.306023359298706, 2.3061914443969727, 2.30629825592041, 2.3060340881347656, 2.3053700923919678, 2.306955575942993, 2.3059029579162598, 2.303776502609253, 2.304494857788086, 2.3058688640594482, 2.3039841651916504, 2.305190086364746, 2.305306911468506, 2.305084228515625, 2.3033816814422607, 2.303165912628174, 2.302860736846924, 2.3033976554870605, 2.303071975708008, 2.3044393062591553, 2.3017470836639404, 2.30328369140625, 2.3036062717437744, 2.303917646408081, 2.3042681217193604, 2.3038127422332764, 2.301893711090088, 2.3036937713623047, 2.3036258220672607], "accuracy": [0.09087307006120682, 0.09245806187391281, 0.09879804402589798, 0.09800554811954498, 0.09192973375320435, 0.09509972482919693, 0.09826971590518951, 0.09655263274908066, 0.09602430462837219, 0.09496764093637466, 0.10117553919553757, 0.09734513610601425, 0.09496764093637466, 0.09813763201236725, 0.09417514503002167, 0.09576013684272766, 0.09959053993225098, 0.09668471664190292, 0.09245806187391281, 0.10091137140989304, 0.09747721254825592, 0.09959053993225098, 0.09879804402589798, 0.09919429570436478, 0.09602430462837219, 0.0936468094587326, 0.09906221181154251, 0.09417514503002167, 0.10011887550354004, 0.10210011899471283, 0.10368511080741882, 0.10513802617788315, 0.11094967275857925, 0.10077928751707077, 0.1026284471154213, 0.09998679161071777, 0.09959053993225098, 0.09866596013307571, 0.1010434553027153, 0.10157178342342377, 0.10011887550354004], "val_loss": [2.308326482772827, 2.3077900409698486, 2.307378053665161, 2.307032585144043, 2.306730031967163, 2.3064541816711426, 2.306199789047241, 2.3059654235839844, 2.305741548538208, 2.3055307865142822, 2.3053324222564697, 2.3051435947418213, 2.3049604892730713, 2.3047831058502197, 2.3046138286590576, 2.3044486045837402, 2.3042922019958496, 2.304138422012329, 2.303990125656128, 2.3038454055786133, 2.3037045001983643, 2.3035659790039062, 2.303431987762451, 2.303300380706787, 2.3031702041625977, 2.3030436038970947, 2.3029208183288574, 2.302800178527832, 2.3026812076568604, 2.3025641441345215, 2.3024485111236572, 2.3023343086242676, 2.302222728729248, 2.3021132946014404, 2.3020057678222656, 2.3018991947174072, 2.30179500579834, 2.3016903400421143, 2.3015873432159424, 2.3014867305755615, 2.3013875484466553], "val_accuracy": [0.08733333647251129, 0.08866667002439499, 0.08833333104848862, 0.08833333104848862, 0.08866667002439499, 0.08866667002439499, 0.08900000154972076, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08966666460037231, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09066666662693024, 0.09099999815225601, 0.09099999815225601, 0.09033333510160446, 0.09033333510160446, 0.09133332967758179, 0.09133332967758179, 0.09166666865348816, 0.09200000017881393, 0.09200000017881393, 0.09166666865348816, 0.09200000017881393, 0.09266666322946548, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09366666525602341, 0.09399999678134918]}, "mapping_values": [1, 9, 5, 4, 4, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 1, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 0, 6, 3, 8, 2, 1, 6, 5, 9], [2, 3, 3, 1, 0, 2], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 0, 2, 5, 0, 5], [0, 6, 4], [0], [1], [0], [2], [0]], "fitness": -0.09600000083446503, "mapping_values": [1, 8, 4, 4, 3, 17, 11, 6, 2, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.negative(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3084397315979004, 2.307316780090332, 2.306967258453369, 2.304374933242798, 2.3054635524749756, 2.3034653663635254, 2.303844451904297, 2.3025286197662354, 2.3032844066619873, 2.3031041622161865, 2.3022711277008057], "accuracy": [0.09668471664190292, 0.09166556596755981, 0.09496764093637466, 0.09774138033390045, 0.10236428678035736, 0.09734513610601425, 0.09391097724437714, 0.0952318087220192, 0.0948355570435524, 0.09642054885625839, 0.08955223858356476], "val_loss": [2.306691884994507, 2.305708885192871, 2.304649829864502, 2.3041586875915527, 2.3035855293273926, 2.3032519817352295, 2.303049087524414, 2.302887439727783, 2.302696466445923, 2.302522659301758, 2.3024964332580566], "val_accuracy": [0.09433333575725555, 0.09366666525602341, 0.0976666659116745, 0.09799999743700027, 0.10133333504199982, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10233332961797714, 0.09799999743700027, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 7, 3, 1, 3, 5, 5], [0, 1, 2, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 6, 2], [2, 0, 3, 1, 1], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 5, 1], [0], [1], [0], [2], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 12, 7, 5, 2, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(grad))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308499813079834, 2.3098223209381104, 2.3087618350982666, 2.3098714351654053, 2.310041904449463, 2.308518648147583], "accuracy": [0.09681680053472519, 0.0936468094587326, 0.09417514503002167, 0.09047681838274002, 0.09496764093637466, 0.09325055778026581], "val_loss": [2.30861234664917, 2.30861234664917, 2.30861234664917, 2.30861234664917, 2.30861234664917, 2.30861234664917], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]