[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2065176963806152, 1.6011862754821777, 1.165919303894043, 0.9585584402084351, 0.8562622666358948, 0.7945378422737122, 0.7961758375167847, 0.7415436506271362, 0.7165279388427734, 0.6988699436187744, 0.6753913760185242, 0.6489835381507874, 0.6488683223724365, 0.6150057315826416, 0.5984629392623901, 0.6141833066940308, 0.5886220335960388, 0.5779051184654236, 0.5680851936340332, 0.5710002779960632, 0.5606814622879028, 0.5462241768836975, 0.5424452424049377, 0.53330397605896, 0.5305660963058472, 0.5235198736190796, 0.5013413429260254, 0.5017125606536865, 0.5004833936691284, 0.4863009750843048, 0.4826432168483734, 0.4709867238998413, 0.48356232047080994, 0.4647655785083771, 0.45338258147239685, 0.46680015325546265, 0.4504966139793396, 0.4463750720024109, 0.45035770535469055, 0.43373629450798035, 0.43779870867729187, 0.4383399188518524, 0.4316171705722809, 0.41993218660354614, 0.4130510985851288, 0.4115297496318817, 0.40637901425361633, 0.4068094491958618], "accuracy": [0.2740721106529236, 0.5027077198028564, 0.5896182656288147, 0.656980574131012, 0.6909258961677551, 0.7069079279899597, 0.7098137736320496, 0.7252674698829651, 0.7327961921691895, 0.7338528633117676, 0.7458723783493042, 0.7594769597053528, 0.7573636174201965, 0.7688548564910889, 0.7778365015983582, 0.7663452625274658, 0.7791573405265808, 0.7803460359573364, 0.7884030938148499, 0.7845727205276489, 0.7872143983840942, 0.7964601516723633, 0.7967243194580078, 0.806630551815033, 0.8042530417442322, 0.8030643463134766, 0.811649739742279, 0.8146876096725464, 0.8105930685997009, 0.817989706993103, 0.8215559124946594, 0.826310932636261, 0.8177255392074585, 0.8285563588142395, 0.8366134166717529, 0.8206313848495483, 0.8341038227081299, 0.8387266993522644, 0.8347642421722412, 0.8404437899589539, 0.8416325449943542, 0.8364813327789307, 0.8405758738517761, 0.846387505531311, 0.8477083444595337, 0.8500858545303345, 0.8541803956031799, 0.8500858545303345], "val_loss": [1.91471529006958, 1.1092443466186523, 0.8813654184341431, 0.7805196642875671, 0.704976499080658, 0.7167752385139465, 0.6678890585899353, 0.6803308725357056, 0.6281440258026123, 0.6177690029144287, 0.5966248512268066, 0.5758262872695923, 0.589286744594574, 0.5595542192459106, 0.5730717778205872, 0.5718518495559692, 0.5458131432533264, 0.5246895551681519, 0.5507846474647522, 0.5189473032951355, 0.5153015851974487, 0.49356576800346375, 0.5052846074104309, 0.49744534492492676, 0.4977787733078003, 0.47286394238471985, 0.4793349504470825, 0.4837028682231903, 0.4749393165111542, 0.45753467082977295, 0.4513915479183197, 0.45134270191192627, 0.45434093475341797, 0.4476184546947479, 0.4449231028556824, 0.4412131607532501, 0.4450012147426605, 0.4340956509113312, 0.4349740445613861, 0.437642902135849, 0.42911672592163086, 0.43716099858283997, 0.41694051027297974, 0.4209112226963043, 0.43187710642814636, 0.41315609216690063, 0.413635790348053, 0.4080932140350342], "val_accuracy": [0.531000018119812, 0.628000020980835, 0.6653333306312561, 0.7049999833106995, 0.7369999885559082, 0.7269999980926514, 0.7413333058357239, 0.7443333268165588, 0.7570000290870667, 0.7586666941642761, 0.7796666622161865, 0.7879999876022339, 0.7760000228881836, 0.7943333387374878, 0.7866666913032532, 0.7820000052452087, 0.8013333082199097, 0.8130000233650208, 0.7990000247955322, 0.8090000152587891, 0.8130000233650208, 0.8226666450500488, 0.8169999718666077, 0.8233333230018616, 0.8193333148956299, 0.8333333134651184, 0.8320000171661377, 0.8180000185966492, 0.8276666402816772, 0.8386666774749756, 0.8360000252723694, 0.8353333473205566, 0.8370000123977661, 0.8413333296775818, 0.8353333473205566, 0.8389999866485596, 0.8376666903495789, 0.846666693687439, 0.8446666598320007, 0.8373333215713501, 0.8473333120346069, 0.8326666951179504, 0.8543333411216736, 0.8510000109672546, 0.8426666855812073, 0.8523333072662354, 0.8500000238418579, 0.8526666760444641]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 5, 3, 7, 7, 2, 3, 8, 0, 5, 3, 3, 4, 2, 7, 8, 8, 5, 6, 8, 4, 3, 4, 9, 7, 4, 0, 0, 3, 3, 7, 8, 0, 2, 3, 5, 4, 9, 9, 0, 2, 6, 0, 8], [0, 2, 1, 0, 2, 0, 2, 1, 2, 2, 0, 1, 3, 0, 0, 0, 3, 0, 1, 2, 2, 2, 2, 0], [0, 39, 39, 87, 12, 90, 29, 2, 25, 99, 35, 44], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 70, 46, 24, 12, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(grad))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.square(grad))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.multiply(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.negative(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)))), grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), grad))))), tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), grad), tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 3], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6, 0], [4, 0, 3, 0, 0, 4], [51, 1, 45], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 6, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 15, 9, 6, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [81, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 0, 7, 5, 2, 1], [0, 6, 1, 5, 7], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310641288757324, 2.308785915374756, 2.310427188873291, 2.3096587657928467, 2.3111283779144287, 2.309891939163208], "accuracy": [0.09325055778026581, 0.08994849026203156, 0.08928807079792023, 0.09179764986038208, 0.09391097724437714, 0.09034473448991776], "val_loss": [2.3083412647247314, 2.3083412647247314, 2.3083412647247314, 2.3083412647247314, 2.3083412647247314, 2.3083412647247314], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 2, 2], [8, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 0, 2, 5, 7, 1], [0, 4, 1, 1, 0], [36, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 4, 2, 2, 1, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309154748916626, 2.3102784156799316, 2.3102824687957764, 2.3090896606445312, 2.3104636669158936, 2.3096253871917725], "accuracy": [0.09377889335155487, 0.09232597798109055, 0.09100515395402908, 0.09457138925790787, 0.09021265059709549, 0.09245806187391281], "val_loss": [2.308976173400879, 2.308976173400879, 2.308976173400879, 2.308976173400879, 2.308976173400879, 2.308976173400879], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]