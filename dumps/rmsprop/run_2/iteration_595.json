[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131214141845703, 1.621935486793518, 1.1374149322509766, 0.9709734320640564, 0.8894566893577576, 0.8312031030654907, 0.7873209118843079, 0.7599117159843445, 0.7242725491523743, 0.7089672684669495, 0.6827667355537415, 0.6671382188796997, 0.6363280415534973, 0.6527228951454163, 0.622244119644165, 0.598887026309967, 0.6021910905838013, 0.5866934657096863, 0.5753431916236877, 0.5719267725944519, 0.550813615322113, 0.553354799747467, 0.5294609069824219, 0.5131139159202576, 0.520660400390625, 0.5069873332977295, 0.49887627363204956, 0.49108901619911194, 0.49713072180747986, 0.48244938254356384, 0.48083412647247314, 0.46179425716400146, 0.46255865693092346, 0.45475858449935913, 0.46551525592803955, 0.45323896408081055, 0.4506228268146515, 0.44471684098243713, 0.4311518967151642, 0.432819664478302, 0.42045488953590393, 0.4243200719356537, 0.4107773005962372, 0.40686333179473877, 0.41563937067985535, 0.4102416932582855, 0.39585402607917786, 0.393792986869812, 0.39825400710105896, 0.3899191617965698, 0.3862761855125427, 0.3746182918548584, 0.3748309314250946, 0.38152578473091125, 0.3732624351978302, 0.3732432723045349, 0.3757361173629761, 0.3634667992591858], "accuracy": [0.2690529525279999, 0.5103685259819031, 0.6075815558433533, 0.6568484902381897, 0.681547999382019, 0.700700044631958, 0.7112666964530945, 0.7223616242408752, 0.7301545143127441, 0.733588695526123, 0.7475894689559937, 0.754589855670929, 0.7623828053474426, 0.7580240368843079, 0.7685906887054443, 0.778761088848114, 0.7779685854911804, 0.7812706232070923, 0.7858935594558716, 0.7881389260292053, 0.7996301651000977, 0.7993659973144531, 0.8054417967796326, 0.8123101592063904, 0.8123101592063904, 0.8096684813499451, 0.8137630224227905, 0.8206313848495483, 0.8162726163864136, 0.8216879963874817, 0.8215559124946594, 0.8333113193511963, 0.83119797706604, 0.8364813327789307, 0.8315942287445068, 0.8329150676727295, 0.8343679904937744, 0.8317263126373291, 0.8449346423149109, 0.8432175517082214, 0.8471800088882446, 0.8438779711723328, 0.8507462739944458, 0.8510104417800903, 0.8444063067436218, 0.8529917001724243, 0.857218325138092, 0.8605204224586487, 0.8556333184242249, 0.8570862412452698, 0.8577466607093811, 0.8652753829956055, 0.8650112152099609, 0.8585391640663147, 0.8594637513160706, 0.8613129258155823, 0.8671245574951172, 0.869502067565918], "val_loss": [1.9297786951065063, 1.1047803163528442, 0.8715720176696777, 0.8603694438934326, 0.7561830878257751, 0.7245191335678101, 0.6490668654441833, 0.6349231004714966, 0.6377314329147339, 0.6550806164741516, 0.603837788105011, 0.5665004253387451, 0.5541040301322937, 0.5388263463973999, 0.5565774440765381, 0.5316835045814514, 0.5335904359817505, 0.5299909114837646, 0.5203109979629517, 0.4927663207054138, 0.5017470121383667, 0.4794459939002991, 0.47790035605430603, 0.48085692524909973, 0.47096845507621765, 0.46131494641304016, 0.45246055722236633, 0.46417874097824097, 0.45342880487442017, 0.46297135949134827, 0.4336659014225006, 0.4460172951221466, 0.42826104164123535, 0.4317639470100403, 0.42760908603668213, 0.4346558749675751, 0.42757847905158997, 0.4359082579612732, 0.42039576172828674, 0.4164493680000305, 0.43394404649734497, 0.4033444821834564, 0.4195786416530609, 0.412923663854599, 0.39748743176460266, 0.40939128398895264, 0.3978922665119171, 0.3870312571525574, 0.4031451344490051, 0.41729867458343506, 0.38468897342681885, 0.38326403498649597, 0.3851380944252014, 0.38422948122024536, 0.41184595227241516, 0.400027871131897, 0.38333144783973694, 0.3848625123500824], "val_accuracy": [0.6159999966621399, 0.6573333144187927, 0.6856666803359985, 0.6673333048820496, 0.731333315372467, 0.7253333330154419, 0.7566666603088379, 0.7576666474342346, 0.7433333396911621, 0.7546666860580444, 0.7670000195503235, 0.7720000147819519, 0.7870000004768372, 0.7976666688919067, 0.793666660785675, 0.7863333225250244, 0.7900000214576721, 0.8016666769981384, 0.8029999732971191, 0.8186666369438171, 0.8153333067893982, 0.8240000009536743, 0.8136666417121887, 0.8193333148956299, 0.8263333439826965, 0.8256666660308838, 0.8346666693687439, 0.8256666660308838, 0.8233333230018616, 0.8236666917800903, 0.8416666388511658, 0.8386666774749756, 0.8416666388511658, 0.8376666903495789, 0.843999981880188, 0.843999981880188, 0.8410000205039978, 0.8356666564941406, 0.8473333120346069, 0.8446666598320007, 0.8393333554267883, 0.8533333539962769, 0.8483333587646484, 0.847000002861023, 0.8536666631698608, 0.8463333249092102, 0.8533333539962769, 0.8610000014305115, 0.8483333587646484, 0.843999981880188, 0.8613333106040955, 0.8616666793823242, 0.862666666507721, 0.8619999885559082, 0.8433333039283752, 0.8550000190734863, 0.859666645526886, 0.8566666841506958]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 1], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 2, 6, 0], [0, 22], [1], [0], [6], [0]], "fitness": -0.3351428508758545, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3125829696655273, 2.3564164638519287, 2.3935744762420654, 2.30507755279541, 2.3006529808044434, 2.294628381729126], "accuracy": [0.21265354752540588, 0.1694624274969101, 0.10157178342342377, 0.09840179979801178, 0.11081759631633759, 0.13617752492427826], "val_loss": [2.142817497253418, 2.3062968254089355, 2.305931568145752, 2.302361249923706, 2.2739486694335938, 2.2670276165008545], "val_accuracy": [0.3396666646003723, 0.09933333098888397, 0.09933333098888397, 0.09799999743700027, 0.21066667139530182, 0.29866665601730347]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 2], [0, 90, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 1, 3, 2, 0, 3, 0, 7, 5, 5, 6, 0, 7, 0, 3], [0, 0, 2, 1, 0, 4, 4, 4, 4, 4, 4, 3, 2], [16, 1, 73], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [1, 6, 0, 6, 0], [32, 80], [1], [0], [4], [0]], "fitness": -0.29742857813835144, "mapping_values": [1, 2, 1, 1, 0, 34, 21, 13, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta), alpha)), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.square(tf.math.divide_no_nan(grad, grad))), tf.math.negative(grad))))), tf.math.add(grad, grad)), tf.math.negative(grad)))), tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [101.51545715332031, 1170.7491455078125, 2.31769061088562, 2.2781832218170166, 2.3077239990234375, 2.343264579772949, 2.303252696990967, 2.3030760288238525, 2.3031928539276123], "accuracy": [0.1830669641494751, 0.10091137140989304, 0.1146479994058609, 0.15110288560390472, 0.10949676483869553, 0.10249637067317963, 0.10342095047235489, 0.09708096832036972, 0.09840179979801178], "val_loss": [68.80889892578125, 2.332780599594116, 2.30674147605896, 2.133579730987549, 2.301058053970337, 2.3026959896087646, 2.302563190460205, 2.302633762359619, 2.302581310272217], "val_accuracy": [0.10199999809265137, 0.09733333438634872, 0.1080000028014183, 0.29899999499320984, 0.10866666585206985, 0.0976666659116745, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 8], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 5, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 2, 2, 3, 5], [0, 2, 1, 0, 3], [0, 56, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31083083152771, 2.3096742630004883, 2.3095507621765137, 2.3101158142089844, 2.308962106704712, 2.309312105178833], "accuracy": [0.09457138925790787, 0.09272222965955734, 0.09259014576673508, 0.09351472556591034, 0.09113723784685135, 0.08915598690509796], "val_loss": [2.3086047172546387, 2.3086047172546387, 2.3086047172546387, 2.3086047172546387, 2.3086047172546387, 2.3086047172546387], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]