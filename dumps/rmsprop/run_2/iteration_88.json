[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2126786708831787, 1.6161385774612427, 1.1688146591186523, 0.9805060625076294, 0.9066076278686523, 0.8427323698997498, 0.8101615905761719, 0.7516301870346069, 0.7666109800338745, 0.7353507876396179, 0.6953998804092407, 0.6720331907272339, 0.6465569138526917, 0.6501688957214355, 0.6379663348197937, 0.6238317489624023, 0.6059272885322571, 0.6249075531959534, 0.6049983501434326, 0.5774543285369873, 0.5816888809204102, 0.5584774017333984, 0.5457449555397034, 0.5721895694732666, 0.5367423892021179, 0.5312272310256958, 0.5211458802223206, 0.5201806426048279, 0.5129575729370117, 0.520789384841919, 0.497910737991333, 0.4991224408149719, 0.49509888887405396, 0.4820369482040405, 0.4853746294975281, 0.4822392761707306, 0.4688742160797119, 0.47567787766456604, 0.4705905616283417, 0.4605047404766083, 0.45387497544288635, 0.45705369114875793, 0.45205581188201904, 0.4415941536426544, 0.436747282743454, 0.43794530630111694, 0.43040984869003296, 0.4280432164669037, 0.4307371973991394, 0.4252913296222687, 0.4118763208389282, 0.409586638212204, 0.4080756604671478, 0.4002785384654999, 0.4101587235927582, 0.40509331226348877, 0.3936484754085541, 0.38601428270339966], "accuracy": [0.25795799493789673, 0.5049530863761902, 0.5812970399856567, 0.6503764390945435, 0.6750759482383728, 0.6968696117401123, 0.7010962963104248, 0.7209087014198303, 0.7177387475967407, 0.7306828498840332, 0.7417778372764587, 0.7573636174201965, 0.7543256878852844, 0.7593448758125305, 0.7689869403839111, 0.7700436115264893, 0.7753269076347351, 0.7691190242767334, 0.778761088848114, 0.7886672616004944, 0.7840443849563599, 0.7979130744934082, 0.8014793395996094, 0.7872143983840942, 0.807158887386322, 0.8075551390647888, 0.8072909712791443, 0.8082155585289001, 0.8104609847068787, 0.8062343001365662, 0.8168009519577026, 0.8193105459213257, 0.8187822103500366, 0.8201030492782593, 0.8253863453865051, 0.8232730031013489, 0.8296129703521729, 0.8240655064582825, 0.8300092220306396, 0.8347642421722412, 0.8380662798881531, 0.8348963260650635, 0.8323867321014404, 0.8388587832450867, 0.8416325449943542, 0.8383304476737976, 0.8426892161369324, 0.8399154543876648, 0.8421608805656433, 0.8396512866020203, 0.8474441766738892, 0.8527275323867798, 0.8490291833877563, 0.8499537706375122, 0.8475762605667114, 0.8500858545303345, 0.854708731174469, 0.8574824929237366], "val_loss": [1.9243292808532715, 1.0991040468215942, 0.939823567867279, 0.7541069984436035, 0.723997950553894, 0.6772136092185974, 0.6554046273231506, 0.6570623517036438, 0.6198362708091736, 0.5926427841186523, 0.581031084060669, 0.578266978263855, 0.5733226537704468, 0.5467349290847778, 0.5526585578918457, 0.5231826305389404, 0.5438050031661987, 0.5360619425773621, 0.5067803263664246, 0.5089861750602722, 0.5010935068130493, 0.4811725318431854, 0.49772128462791443, 0.4731713831424713, 0.4860055446624756, 0.4778022766113281, 0.4539759159088135, 0.4672568440437317, 0.46616706252098083, 0.4550362229347229, 0.4655435085296631, 0.44940507411956787, 0.43573322892189026, 0.43773120641708374, 0.432607501745224, 0.4281095266342163, 0.4304644465446472, 0.4262429177761078, 0.41796860098838806, 0.42761531472206116, 0.4217660427093506, 0.43395063281059265, 0.4055233895778656, 0.44198599457740784, 0.4281329810619354, 0.4050769507884979, 0.3997167646884918, 0.4031299352645874, 0.4012182652950287, 0.3992564380168915, 0.39544519782066345, 0.3916289508342743, 0.38267379999160767, 0.425353467464447, 0.39542245864868164, 0.39730021357536316, 0.3878846764564514, 0.3847004473209381], "val_accuracy": [0.5486666560173035, 0.6396666765213013, 0.6733333468437195, 0.7303333282470703, 0.7423333525657654, 0.7596666812896729, 0.7433333396911621, 0.7490000128746033, 0.7599999904632568, 0.7683333158493042, 0.7823333144187927, 0.7736666798591614, 0.7886666655540466, 0.7926666736602783, 0.800000011920929, 0.8033333420753479, 0.7960000038146973, 0.7950000166893005, 0.8146666884422302, 0.8149999976158142, 0.8193333148956299, 0.8230000138282776, 0.8133333325386047, 0.8326666951179504, 0.8173333406448364, 0.8243333101272583, 0.831333339214325, 0.8270000219345093, 0.8379999995231628, 0.8339999914169312, 0.8243333101272583, 0.8393333554267883, 0.8420000076293945, 0.8476666808128357, 0.8433333039283752, 0.8493333458900452, 0.8450000286102295, 0.8489999771118164, 0.8503333330154419, 0.8456666469573975, 0.8450000286102295, 0.8413333296775818, 0.859666645526886, 0.8379999995231628, 0.8443333506584167, 0.8523333072662354, 0.8603333234786987, 0.8553333282470703, 0.8510000109672546, 0.8553333282470703, 0.862666666507721, 0.8633333444595337, 0.8640000224113464, 0.8416666388511658, 0.8553333282470703, 0.8553333282470703, 0.8603333234786987, 0.862333357334137]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [0, 39, 77], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 1, 1, 0, 3], [16, 1], [0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5], [0, 6, 1], [40], [1], [0], [5], [0]], "fitness": -0.35685715079307556, "mapping_values": [1, 6, 3, 3, 2, 13, 7, 6, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.1983087062835693, 2.2830021381378174, 2.381572961807251, 2.300935983657837, 2.276510238647461, 2.3213889598846436, 2.3065271377563477, 2.304201126098633, 2.3033156394958496, 2.3031163215637207], "accuracy": [0.21595561504364014, 0.17633073031902313, 0.19561484456062317, 0.13300752639770508, 0.1442345827817917, 0.1526878923177719, 0.1018359512090683, 0.10487385839223862, 0.09549596905708313, 0.10157178342342377], "val_loss": [2.0984926223754883, 2.2322607040405273, 2.0803427696228027, 2.2194101810455322, 1.666093111038208, 2.307636022567749, 2.3031342029571533, 2.3033859729766846, 2.3027048110961914, 2.3030619621276855], "val_accuracy": [0.20233333110809326, 0.34033334255218506, 0.195333331823349, 0.13199999928474426, 0.367000013589859, 0.1003333330154419, 0.10266666859388351, 0.09866666793823242, 0.10199999809265137, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 1, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1], [0, 2, 0, 2, 5, 9], [0, 6, 1], [0, 16], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 8, 6, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3385736946515968.0, 4031643924824064.0, 4140099902111744.0, 4132923817066496.0, 4011923314049024.0, 4090737574543360.0], "accuracy": [0.10368511080741882, 0.10408136248588562, 0.09919429570436478, 0.10249637067317963, 0.10434553027153015, 0.09681680053472519], "val_loss": [3785874353422336.0, 3785874353422336.0, 3785874353422336.0, 3785874353422336.0, 3785874353422336.0, 3785874353422336.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [7, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 6, 3, 8, 2, 0, 7, 0, 2, 6, 9, 0, 4], [2, 0, 3, 1, 0, 1, 5, 5], [16, 1, 32], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 1, 23, 15, 8, 3, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), alpha))), tf.math.negative(tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 2, 7, 1, 3, 5, 1, 3, 5, 9], [0, 0, 0, 0, 1, 0], [0, 39, 39, 66, 30, 62], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 2, 3, 2, 5, 9, 5, 3, 6, 7, 9, 4, 1, 1, 2, 6, 4, 3, 9, 1, 5, 7, 8], [0, 5, 3, 4, 5, 0, 2, 3, 0, 5, 7, 0, 2, 2], [0, 28, 8, 15, 57, 77, 10], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 16, 10, 6, 6, 2, 1, 1, 0, 37, 23, 14, 7, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(sigma, tf.math.divide_no_nan(grad, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), tf.math.subtract(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad), grad)), tf.math.square(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)))))))), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30973219871521, 2.311258554458618, 2.308983087539673, 2.308380365371704, 2.309934616088867, 2.309684991836548], "accuracy": [0.09351472556591034, 0.09113723784685135, 0.08928807079792023, 0.10210011899471283, 0.09351472556591034, 0.09430722147226334], "val_loss": [2.3088111877441406, 2.3088111877441406, 2.3088111877441406, 2.3088111877441406, 2.3088111877441406, 2.3088111877441406], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]