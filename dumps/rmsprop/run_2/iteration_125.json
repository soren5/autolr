[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7839999794960022, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209371566772461, 1.596108317375183, 1.1483585834503174, 0.9616340398788452, 0.865216851234436, 0.8146223425865173, 0.794017493724823, 0.735243558883667, 0.7100419998168945, 0.7081166505813599, 0.6853232383728027, 0.6740860342979431, 0.6421371698379517, 0.6382944583892822, 0.6266772747039795, 0.6247861385345459], "accuracy": [0.26984545588493347, 0.5068022608757019, 0.5918636918067932, 0.6573768258094788, 0.6852463483810425, 0.7038700580596924, 0.7116629481315613, 0.7264562249183655, 0.7316074371337891, 0.735041618347168, 0.7461365461349487, 0.746268630027771, 0.7600052952766418, 0.7609298825263977, 0.767401933670044, 0.7677981853485107], "val_loss": [1.9192432165145874, 1.1256436109542847, 0.9122841954231262, 0.7904455661773682, 0.718843936920166, 0.709653377532959, 0.6563553810119629, 0.6415631771087646, 0.6120794415473938, 0.6544179916381836, 0.5938723087310791, 0.578195333480835, 0.6044028997421265, 0.5849266648292542, 0.5497022271156311, 0.548143744468689], "val_accuracy": [0.5666666626930237, 0.6433333158493042, 0.6853333115577698, 0.7093333601951599, 0.7283333539962769, 0.7306666374206543, 0.7593333125114441, 0.762333333492279, 0.7743333578109741, 0.7609999775886536, 0.784333348274231, 0.7689999938011169, 0.750333309173584, 0.7693333625793457, 0.7816666960716248, 0.7789999842643738]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [7, 7, 3, 1, 3, 7], [0, 2, 2, 0, 0, 2, 1], [0, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [81, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.10114285349845886, "mapping_values": [1, 13, 6, 7, 3, 4, 2, 2, 1, 8, 5, 3, 1, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [66326966272.0, 434628343103488.0, 2.0228920755817021e+18, 8.559815608407681e+21, 5.570762679947269e+25, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09734513610601425, 0.10117553919553757, 0.09760929644107819, 0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1266482675712.0, 6659129359728640.0, 2.7682797877679096e+19, 1.406918939127005e+23, 1.0600892980735718e+27, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.11233333498239517, 0.1003333330154419, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 5, 1, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303704023361206, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 1, 3, 5, 4, 6, 1, 1, 3, 0, 3], [0, 0, 1, 2, 2, 1, 2, 2, 3, 0, 2], [0, 61, 53], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 8], [2, 0, 3, 1, 0], [16, 88], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [2, 6, 1], [45], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 24, 13, 11, 3, 2, 1, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, alpha), tf.math.multiply(tf.math.negative(grad), grad)), grad), tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3119726181030273, 2.3103742599487305, 2.311124563217163, 2.3102762699127197, 2.3100595474243164, 2.3104465007781982], "accuracy": [0.08625016361474991, 0.08638224750757217, 0.08902391046285629, 0.09311848133802414, 0.09509972482919693, 0.09470347315073013], "val_loss": [2.3083043098449707, 2.3083043098449707, 2.3083043098449707, 2.3083043098449707, 2.3083043098449707, 2.3083043098449707], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 1], [16, 9], [0, 0, 0, 1, 0, 1, 0, 1], [2, 2, 0, 9, 5], [0, 6, 1], [0, 55], [1], [0], [1], [0]], "fitness": -0.08942857384681702, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3105270862579346, 2.3092799186706543, 2.309901714324951, 2.310340166091919, 2.310086727142334, 2.3099451065063477], "accuracy": [0.09853387624025345, 0.09298639744520187, 0.09008057415485382, 0.08968432247638702, 0.09628847241401672, 0.09325055778026581], "val_loss": [2.308260202407837, 2.308260202407837, 2.308260202407837, 2.308260202407837, 2.308260202407837, 2.308260202407837], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 1, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 13}]