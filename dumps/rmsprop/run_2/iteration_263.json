[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2075250148773193, 1.5983220338821411, 1.1424052715301514, 0.9786287546157837, 0.8747761845588684, 0.8275798559188843, 0.7849529385566711, 0.7303144335746765, 0.7214227914810181, 0.6978456974029541, 0.6849160194396973, 0.6505991220474243, 0.6576467752456665, 0.6397783756256104, 0.6199307441711426, 0.6056897640228271, 0.5911428928375244, 0.5697676539421082, 0.5650834441184998, 0.5621799230575562, 0.550997793674469, 0.5414583683013916, 0.5323060154914856, 0.525007963180542, 0.5106289386749268, 0.5062933564186096, 0.5221007466316223, 0.49073296785354614, 0.498247355222702, 0.5059366822242737, 0.4941306412220001, 0.46763691306114197, 0.47344133257865906, 0.4655269980430603, 0.4654431641101837, 0.4578533470630646, 0.45020589232444763, 0.4464171528816223, 0.4414041340351105, 0.43679824471473694, 0.43841642141342163], "accuracy": [0.2689208686351776, 0.5066701769828796, 0.603090763092041, 0.6499801874160767, 0.6847180128097534, 0.6979262828826904, 0.7098137736320496, 0.7316074371337891, 0.7359662055969238, 0.7428345084190369, 0.7400607466697693, 0.7602694630622864, 0.750231146812439, 0.76542067527771, 0.7656848430633545, 0.7740060687065125, 0.7841764688491821, 0.7928939461708069, 0.7913089394569397, 0.7942147850990295, 0.8004226684570312, 0.8041210174560547, 0.8042530417442322, 0.8047813773155212, 0.8123101592063904, 0.8117818236351013, 0.8039889335632324, 0.8240655064582825, 0.8212917447090149, 0.8128384351730347, 0.8171972036361694, 0.8272355198860168, 0.8281601071357727, 0.828820526599884, 0.829216718673706, 0.8289526104927063, 0.8358209133148193, 0.8367455005645752, 0.8341038227081299, 0.8429533839225769, 0.837537944316864], "val_loss": [1.9183260202407837, 1.1134270429611206, 0.9244739413261414, 0.8061961531639099, 0.788329005241394, 0.7695693373680115, 0.7020737528800964, 0.6834020018577576, 0.6510879993438721, 0.69073086977005, 0.6635517477989197, 0.6650484204292297, 0.6072234511375427, 0.5909934639930725, 0.5818806886672974, 0.6263878345489502, 0.5552118420600891, 0.5853725075721741, 0.5384982228279114, 0.5529944896697998, 0.5381981730461121, 0.5334409475326538, 0.5404026508331299, 0.520191490650177, 0.523820161819458, 0.5230088829994202, 0.516064465045929, 0.5098589062690735, 0.4963950514793396, 0.5190190672874451, 0.47846248745918274, 0.48674601316452026, 0.4724709391593933, 0.4779844284057617, 0.4767810106277466, 0.467376172542572, 0.482320636510849, 0.46383634209632874, 0.4667486548423767, 0.4756750166416168, 0.47216662764549255], "val_accuracy": [0.5723333358764648, 0.6473333239555359, 0.656000018119812, 0.7043333053588867, 0.699999988079071, 0.7039999961853027, 0.7243333458900452, 0.7480000257492065, 0.765999972820282, 0.7416666746139526, 0.7353333234786987, 0.7540000081062317, 0.768666684627533, 0.7860000133514404, 0.7856666445732117, 0.762666642665863, 0.7943333387374878, 0.7683333158493042, 0.7983333468437195, 0.7943333387374878, 0.7990000247955322, 0.8059999942779541, 0.7926666736602783, 0.8090000152587891, 0.8043333292007446, 0.8046666383743286, 0.8059999942779541, 0.8086666464805603, 0.8163333535194397, 0.8063333630561829, 0.8243333101272583, 0.8273333311080933, 0.8263333439826965, 0.8236666917800903, 0.8236666917800903, 0.8349999785423279, 0.8253333568572998, 0.8330000042915344, 0.8339999914169312, 0.8286666870117188, 0.8306666612625122]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [7, 2, 3, 1, 3, 7], [0, 2, 1, 3, 2], [0, 19, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 0], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0], [0, 46], [1], [0], [4], [0]], "fitness": -0.2654285728931427, "mapping_values": [1, 5, 2, 3, 1, 13, 8, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.334627389907837, 2.4255714416503906, 2.2741169929504395, 2.6328771114349365, 2.3040952682495117, 2.303549289703369, 2.3031013011932373, 2.303043842315674], "accuracy": [0.18940694630146027, 0.1002509593963623, 0.1332716941833496, 0.11874257028102875, 0.09998679161071777, 0.09681680053472519, 0.09879804402589798, 0.0952318087220192], "val_loss": [2.795179605484009, 2.304028034210205, 3.859184980392456, 2.303931713104248, 2.302757501602173, 2.3025879859924316, 2.3025381565093994, 2.302639961242676], "val_accuracy": [0.10000000149011612, 0.10433333367109299, 0.2680000066757202, 0.09966666996479034, 0.10433333367109299, 0.10366666316986084, 0.10433333367109299, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [91, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 8, 8], [0, 6, 1, 5], [50, 22], [1], [0], [7], [0]], "fitness": -0.1445714235305786, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 1, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4106900691986084, 2.1285953521728516, 2.770249366760254, 2.3042147159576416, 2.303396701812744, 2.302978515625], "accuracy": [0.18755778670310974, 0.21278563141822815, 0.10500594228506088, 0.09840179979801178, 0.09338264167308807, 0.09919429570436478], "val_loss": [2.298405885696411, 5.561327934265137, 2.3052821159362793, 2.303274631500244, 2.3029978275299072, 2.3026132583618164], "val_accuracy": [0.14233332872390747, 0.10199999809265137, 0.09733333438634872, 0.0963333323597908, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 1, 8, 2], [1, 0, 5, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 4, 1, 2, 5, 2, 9], [0, 1, 1, 6, 0], [0, 0, 70], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 7, 4, 3, 1, 12, 7, 5, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.312587022781372, 2.3374457359313965, 2.50244140625, 1.4467864468423526e+21, 1204.47900390625, 205865.6875, 34939036.0], "accuracy": [0.08611807972192764, 0.08136309683322906, 0.09087307006120682, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.319300413131714, 2.3640120029449463, 4.060696601867676, 58.19331741333008, 10365.9169921875, 1759862.125, 299188736.0], "val_accuracy": [0.0976666659116745, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 6, 2, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 26], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11979923397302628, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]