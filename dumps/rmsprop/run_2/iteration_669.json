[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209104061126709, 1.6032674312591553, 1.1818046569824219, 0.9729028940200806, 0.8955141305923462, 0.8309271931648254, 0.7860127091407776, 0.7554515600204468, 0.7532041668891907, 0.7058203220367432, 0.6874176263809204, 0.6719492077827454, 0.6648283004760742, 0.644398033618927, 0.6371591687202454, 0.6061460375785828, 0.590563952922821, 0.5812792181968689, 0.5791323184967041, 0.5878726243972778, 0.5550172924995422, 0.5667729377746582, 0.545532763004303, 0.5503506660461426, 0.5405908226966858, 0.5258084535598755, 0.5316691994667053, 0.5014876127243042, 0.507195770740509, 0.5100346803665161, 0.4893403649330139, 0.497919499874115, 0.4971943795681, 0.48058024048805237, 0.4767204225063324, 0.4764966070652008, 0.46274393796920776, 0.45494237542152405, 0.4568854868412018, 0.4612617790699005, 0.4466972053050995, 0.4469795823097229, 0.4505767524242401, 0.4294530749320984, 0.42821910977363586, 0.422820121049881, 0.43141457438468933, 0.4203144907951355, 0.4238791763782501, 0.4099733531475067, 0.41705945134162903, 0.4034560024738312, 0.4089672863483429, 0.4057692587375641, 0.4035018980503082, 0.3930090069770813, 0.3888617157936096, 0.3878706991672516, 0.38957875967025757, 0.3786732256412506, 0.3791241943836212, 0.38086679577827454, 0.3789503276348114, 0.37819144129753113, 0.36184993386268616, 0.37218669056892395, 0.36186695098876953, 0.37045425176620483, 0.3612571358680725], "accuracy": [0.2657508850097656, 0.5023114681243896, 0.5898824334144592, 0.6542068123817444, 0.68101966381073, 0.6992471218109131, 0.7051908373832703, 0.7220974564552307, 0.7154933214187622, 0.7349095344543457, 0.7442874312400818, 0.7537974119186401, 0.7523444890975952, 0.759080708026886, 0.765949010848999, 0.7754589915275574, 0.7828556299209595, 0.7844406366348267, 0.7866860628128052, 0.7823272943496704, 0.7877426743507385, 0.7915731072425842, 0.7975168228149414, 0.796328067779541, 0.8013472557067871, 0.8062343001365662, 0.805177628993988, 0.817989706993103, 0.8145555257797241, 0.8162726163864136, 0.8210275769233704, 0.8166688680648804, 0.8189142942428589, 0.8203672170639038, 0.824329674243927, 0.8315942287445068, 0.835160493850708, 0.8362171649932861, 0.8333113193511963, 0.8329150676727295, 0.8387266993522644, 0.835160493850708, 0.8348963260650635, 0.843481719493866, 0.8412362933158875, 0.8488970994949341, 0.8436138033866882, 0.8482366800308228, 0.8444063067436218, 0.8510104417800903, 0.8482366800308228, 0.8531237840652466, 0.8544445633888245, 0.847840428352356, 0.852331280708313, 0.8576145768165588, 0.8573504090309143, 0.8621054291725159, 0.8582749962806702, 0.8628978729248047, 0.8626337051391602, 0.8582749962806702, 0.8569541573524475, 0.8603883385658264, 0.8696341514587402, 0.8638224601745605, 0.8669924736022949, 0.863558292388916, 0.8656716346740723], "val_loss": [1.9197673797607422, 1.0965852737426758, 0.9659858345985413, 0.7902379035949707, 0.7554521560668945, 0.7044559121131897, 0.6986039280891418, 0.6379252076148987, 0.6342195868492126, 0.5970655679702759, 0.5999279618263245, 0.5886061191558838, 0.5998862981796265, 0.5621642470359802, 0.553059995174408, 0.5264325141906738, 0.5224685668945312, 0.5421472787857056, 0.5350043177604675, 0.5041453242301941, 0.5048214793205261, 0.4866922199726105, 0.499939888715744, 0.48708218336105347, 0.49849486351013184, 0.46880799531936646, 0.47388601303100586, 0.4616014063358307, 0.45081543922424316, 0.45577412843704224, 0.4525371193885803, 0.4527958929538727, 0.4485915005207062, 0.440540611743927, 0.4352313280105591, 0.4421597421169281, 0.42190608382225037, 0.4344177544116974, 0.43353691697120667, 0.4144820272922516, 0.42274656891822815, 0.4302791357040405, 0.43981269001960754, 0.4240889549255371, 0.40815508365631104, 0.40958455204963684, 0.42165929079055786, 0.3970106542110443, 0.4026338756084442, 0.3967635929584503, 0.4001043438911438, 0.40465107560157776, 0.39221492409706116, 0.38875287771224976, 0.39625149965286255, 0.38664349913597107, 0.39449429512023926, 0.3834226429462433, 0.38466647267341614, 0.3846432566642761, 0.3860870897769928, 0.4041347801685333, 0.40026921033859253, 0.3713065981864929, 0.38561809062957764, 0.37486502528190613, 0.38764509558677673, 0.3790198564529419, 0.39581987261772156], "val_accuracy": [0.5393333435058594, 0.6636666655540466, 0.6366666555404663, 0.7166666388511658, 0.7163333296775818, 0.7296666502952576, 0.7329999804496765, 0.7663333415985107, 0.7609999775886536, 0.7836666703224182, 0.7766666412353516, 0.7666666507720947, 0.7586666941642761, 0.7889999747276306, 0.7919999957084656, 0.8076666593551636, 0.8066666722297668, 0.796999990940094, 0.8050000071525574, 0.8180000185966492, 0.8143333196640015, 0.8243333101272583, 0.8109999895095825, 0.8256666660308838, 0.8173333406448364, 0.8303333520889282, 0.8256666660308838, 0.8326666951179504, 0.8399999737739563, 0.8306666612625122, 0.8376666903495789, 0.8410000205039978, 0.8416666388511658, 0.8416666388511658, 0.847000002861023, 0.8393333554267883, 0.8473333120346069, 0.8426666855812073, 0.840666651725769, 0.8526666760444641, 0.8486666679382324, 0.8426666855812073, 0.8370000123977661, 0.8426666855812073, 0.8556666374206543, 0.8510000109672546, 0.8510000109672546, 0.8566666841506958, 0.8576666712760925, 0.8566666841506958, 0.8513333201408386, 0.8533333539962769, 0.856333315372467, 0.8586666584014893, 0.8603333234786987, 0.8600000143051147, 0.8583333492279053, 0.8586666584014893, 0.859000027179718, 0.8619999885559082, 0.8573333621025085, 0.8523333072662354, 0.8553333282470703, 0.8669999837875366, 0.8616666793823242, 0.8606666922569275, 0.859000027179718, 0.8600000143051147, 0.859666645526886]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 9, 2, 3, 5], [0, 2, 1, 0, 3], [0, 28, 39], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 9, 2, 5, 2, 1], [0, 6, 1, 0, 3], [0, 76, 62], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 4, 2, 2, 0, 11, 7, 4, 3, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 9], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 8, 6, 5, 2, 1], [0, 6, 0, 6, 0, 0], [48, 22, 47, 19], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 7, 5, 2, 2, 13, 7, 6, 4, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [9951090049024.0, 188214392389632.0, 876456863334400.0, 2466870837903360.0, 5292261923356672.0, 9561151251677184.0], "accuracy": [0.09972262382507324, 0.10487385839223862, 0.09866596013307571, 0.10513802617788315, 0.09985470771789551, 0.1022322028875351], "val_loss": [45806124007424.0, 366428590964736.0, 1236604299509760.0, 2931367524433920.0, 5725266567495680.0, 9892221289496576.0], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 6, 5], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [5, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.square(alpha), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 1], [0, 2, 1, 0, 2], [87, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 5, 5, 2, 1], [0, 6, 1, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310903310775757, 2.3099310398101807, 2.3088395595550537, 2.309060573577881, 2.310015916824341, 2.3085756301879883], "accuracy": [0.09008057415485382, 0.09034473448991776, 0.09509972482919693, 0.09272222965955734, 0.09417514503002167, 0.09470347315073013], "val_loss": [2.308924436569214, 2.308924436569214, 2.308924436569214, 2.308924436569214, 2.308924436569214, 2.308924436569214], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]