[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208613395690918, 1.5995044708251953, 1.1392581462860107, 0.9461484551429749, 0.9027666449546814, 0.8120279908180237, 0.7982906103134155, 0.7601659297943115, 0.7310271263122559, 0.7086402177810669, 0.6762020587921143, 0.6689800024032593, 0.6470081806182861, 0.6237061023712158, 0.6097669005393982, 0.6079627275466919, 0.5892589092254639, 0.5794116854667664, 0.579866349697113, 0.5518900156021118, 0.5582643151283264, 0.5433388352394104, 0.5344973802566528, 0.535620391368866, 0.5232030153274536, 0.515693187713623, 0.5016422271728516, 0.5047072768211365, 0.4897618293762207, 0.4979349672794342, 0.47509920597076416, 0.48873284459114075, 0.4612232744693756, 0.45688191056251526, 0.4659458100795746, 0.4573034346103668, 0.4573042690753937, 0.44789502024650574, 0.4318293333053589, 0.43742844462394714, 0.4314359128475189, 0.4339596629142761, 0.4254268705844879, 0.41255953907966614, 0.43342965841293335, 0.41963934898376465, 0.41417643427848816, 0.4000062346458435, 0.39313238859176636, 0.3924681544303894, 0.3992741107940674, 0.3953007459640503, 0.39996853470802307, 0.3858717083930969, 0.3767818808555603, 0.38583579659461975, 0.38124939799308777, 0.37524741888046265, 0.37120336294174194, 0.3626376986503601, 0.3746790289878845, 0.35472095012664795, 0.360337495803833, 0.35824036598205566, 0.350895494222641, 0.34855571389198303, 0.35199546813964844, 0.34536707401275635, 0.3500157296657562, 0.34055569767951965, 0.340097576379776], "accuracy": [0.26561880111694336, 0.5033681392669678, 0.6028265953063965, 0.6680755615234375, 0.6753401160240173, 0.7003037929534912, 0.7069079279899597, 0.7207766771316528, 0.7312111854553223, 0.7358341217041016, 0.7491744756698608, 0.7478536367416382, 0.7594769597053528, 0.7693831920623779, 0.7692511081695557, 0.7754589915275574, 0.78113853931427, 0.7839123010635376, 0.7827235460281372, 0.7959318161010742, 0.793422281742096, 0.8013472557067871, 0.8018755912780762, 0.8001585006713867, 0.8038568496704102, 0.8099326491355896, 0.8158763647079468, 0.8101968169212341, 0.8186501264572144, 0.8125742673873901, 0.8247259259223938, 0.8236692547798157, 0.8317263126373291, 0.8330471515655518, 0.8300092220306396, 0.832650899887085, 0.8323867321014404, 0.8359529972076416, 0.8442742228507996, 0.8393871188163757, 0.8388587832450867, 0.842028796672821, 0.8433496356010437, 0.8467837572097778, 0.8429533839225769, 0.8450667262077332, 0.8461233377456665, 0.8516708612442017, 0.8564258217811584, 0.8558974862098694, 0.8555012345314026, 0.8552370667457581, 0.8531237840652466, 0.8623695969581604, 0.8613129258155823, 0.86118084192276, 0.8569541573524475, 0.8643507957458496, 0.8617091774940491, 0.8687095642089844, 0.8646149635314941, 0.8765024542808533, 0.8698983192443848, 0.8684453964233398, 0.8747853636741638, 0.8728041052818298, 0.8745211958885193, 0.8733324408531189, 0.8751816153526306, 0.876370370388031, 0.8759741187095642], "val_loss": [1.9156606197357178, 1.1014395952224731, 0.8666498064994812, 0.8214073181152344, 0.700607180595398, 0.7419081926345825, 0.6840994358062744, 0.6597750782966614, 0.6422157287597656, 0.6119091510772705, 0.5807996392250061, 0.605310320854187, 0.5745546221733093, 0.5440831184387207, 0.5641927123069763, 0.5387956500053406, 0.5298632979393005, 0.5507590174674988, 0.5104382038116455, 0.5526005625724792, 0.4969216287136078, 0.48893260955810547, 0.5038409233093262, 0.49482500553131104, 0.5211888551712036, 0.4828856587409973, 0.468321293592453, 0.4650619328022003, 0.47649243474006653, 0.4676603078842163, 0.47883671522140503, 0.4463585615158081, 0.4410451650619507, 0.4401511251926422, 0.4411272406578064, 0.44292932748794556, 0.4415724277496338, 0.4326048195362091, 0.4277902841567993, 0.427273690700531, 0.4480614960193634, 0.41849756240844727, 0.4267326593399048, 0.4254820644855499, 0.44933268427848816, 0.42212560772895813, 0.4132441282272339, 0.4067269265651703, 0.40693286061286926, 0.4257465898990631, 0.3999072313308716, 0.40643057227134705, 0.4033876955509186, 0.40356749296188354, 0.4095597267150879, 0.3910444378852844, 0.40454337000846863, 0.40156224370002747, 0.39003199338912964, 0.39877817034721375, 0.3937627077102661, 0.3950345814228058, 0.38907182216644287, 0.3786183297634125, 0.39490601420402527, 0.38228482007980347, 0.3858446478843689, 0.40073391795158386, 0.37963297963142395, 0.3743584454059601, 0.3819493055343628], "val_accuracy": [0.5586666464805603, 0.6383333206176758, 0.6840000152587891, 0.6970000267028809, 0.7379999756813049, 0.7213333249092102, 0.7493333220481873, 0.7436666488647461, 0.7613333463668823, 0.7730000019073486, 0.7853333353996277, 0.7693333625793457, 0.7893333435058594, 0.7963333129882812, 0.7739999890327454, 0.7960000038146973, 0.8029999732971191, 0.7906666398048401, 0.8090000152587891, 0.7766666412353516, 0.8209999799728394, 0.8276666402816772, 0.8153333067893982, 0.8166666626930237, 0.8053333163261414, 0.8153333067893982, 0.8330000042915344, 0.8316666483879089, 0.8240000009536743, 0.8220000267028809, 0.8243333101272583, 0.8426666855812073, 0.8446666598320007, 0.8443333506584167, 0.8453333377838135, 0.840666651725769, 0.840666651725769, 0.8526666760444641, 0.8506666421890259, 0.8476666808128357, 0.8346666693687439, 0.8546666502952576, 0.8476666808128357, 0.8496666550636292, 0.8303333520889282, 0.8479999899864197, 0.8566666841506958, 0.8543333411216736, 0.8546666502952576, 0.8420000076293945, 0.8600000143051147, 0.8583333492279053, 0.8579999804496765, 0.8603333234786987, 0.8556666374206543, 0.8636666536331177, 0.8583333492279053, 0.8600000143051147, 0.8663333058357239, 0.8606666922569275, 0.8619999885559082, 0.8619999885559082, 0.8629999756813049, 0.8683333396911621, 0.859666645526886, 0.8706666827201843, 0.8673333525657654, 0.8606666922569275, 0.8653333187103271, 0.8696666955947876, 0.8666666746139526]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 1, 2, 5, 2, 1], [0, 6, 1, 5, 0, 1], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 10, 5, 5, 2, 13, 7, 6, 2, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3041751384735107, 2.3025851249694824, 886.7276000976562, 4196.763671875, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 15281.0498046875, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 6, 4, 2, 3, 5, 9, 3, 8, 7], [0, 3, 3, 0, 2, 0, 0], [0, 39, 39, 11, 55], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 3], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 5, 8, 4, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 0, 1, 3, 5], [0, 0, 1, 0, 3], [72, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [4, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 5, 4], [0, 6, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 1, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.square(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 6, 2, 7, 8, 2, 2, 8, 7, 0, 4, 4, 1, 5, 8], [1, 2, 1, 0, 2, 3, 1, 1, 2, 3, 3, 1, 2, 0], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 34, 20, 14, 2, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(alpha, grad), tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.negative(tf.math.pow(alpha, alpha)), grad)), grad)))), grad)), tf.math.pow(alpha, tf.math.subtract(tf.math.square(tf.math.sqrt(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309504747390747, 2.3093292713165283, 2.309048891067505, 2.3103106021881104, 2.310216188430786, 2.3109443187713623], "accuracy": [0.09034473448991776, 0.09747721254825592, 0.09430722147226334, 0.09140139818191528, 0.08902391046285629, 0.09047681838274002], "val_loss": [2.3083956241607666, 2.3083956241607666, 2.3083956241607666, 2.3083956241607666, 2.3083956241607666, 2.3083956241607666], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]