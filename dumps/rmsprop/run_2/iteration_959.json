[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211324453353882, 1.6101508140563965, 1.1689062118530273, 0.9841228127479553, 0.8933719396591187, 0.8273292779922485, 0.777556836605072, 0.7555292844772339, 0.7151591181755066, 0.7237206101417542, 0.6853634715080261, 0.6884230375289917, 0.6466625928878784, 0.6203765869140625, 0.6280612349510193, 0.5967440009117126, 0.6251176595687866, 0.5854851603507996, 0.5799672603607178, 0.578514039516449, 0.5660499930381775, 0.5573825240135193, 0.5387998223304749, 0.5302838087081909, 0.523017942905426, 0.5173190832138062, 0.5196039080619812, 0.5079138875007629, 0.5111197829246521, 0.4891701638698578, 0.4890444576740265, 0.4784455895423889, 0.47301867604255676, 0.47676655650138855, 0.4736732840538025], "accuracy": [0.26363757252693176, 0.5069343447685242, 0.5927882790565491, 0.6544709801673889, 0.6741513609886169, 0.7071720957756042, 0.719852089881897, 0.7218332886695862, 0.7429665923118591, 0.728701651096344, 0.7498348951339722, 0.755118191242218, 0.7607977986335754, 0.7725531458854675, 0.7691190242767334, 0.7848368883132935, 0.7697794437408447, 0.7878747582435608, 0.7840443849563599, 0.7911768555641174, 0.7935543656349182, 0.7977809906005859, 0.8079513907432556, 0.8109893202781677, 0.8100647330284119, 0.8136309385299683, 0.8096684813499451, 0.8152159452438354, 0.8132346868515015, 0.8232730031013489, 0.8211596608161926, 0.8251221776008606, 0.8276317715644836, 0.8245938420295715, 0.8294808864593506], "val_loss": [1.9241080284118652, 1.1069639921188354, 0.929732084274292, 0.8279624581336975, 0.7527880668640137, 0.6983789205551147, 0.6674265265464783, 0.6600591540336609, 0.644593358039856, 0.6345884799957275, 0.6500754952430725, 0.6120465397834778, 0.5655660629272461, 0.5632968544960022, 0.5598487257957458, 0.6139895915985107, 0.5456277132034302, 0.5261610746383667, 0.5268407464027405, 0.5181220769882202, 0.5074926614761353, 0.5241438150405884, 0.4884542226791382, 0.5151847004890442, 0.5001748204231262, 0.4778222143650055, 0.4920085370540619, 0.4812389314174652, 0.476179838180542, 0.46231332421302795, 0.470877081155777, 0.4464728534221649, 0.45657169818878174, 0.4526534974575043, 0.464447945356369], "val_accuracy": [0.5720000267028809, 0.6416666507720947, 0.6413333415985107, 0.6923333406448364, 0.721666693687439, 0.7329999804496765, 0.75, 0.7586666941642761, 0.753333330154419, 0.7599999904632568, 0.7426666617393494, 0.7586666941642761, 0.7923333048820496, 0.7873333096504211, 0.7933333516120911, 0.7670000195503235, 0.7886666655540466, 0.8050000071525574, 0.8009999990463257, 0.8046666383743286, 0.8056666851043701, 0.796999990940094, 0.8196666836738586, 0.8009999990463257, 0.8203333616256714, 0.8263333439826965, 0.8169999718666077, 0.8196666836738586, 0.8213333487510681, 0.8370000123977661, 0.8240000009536743, 0.8339999914169312, 0.8299999833106995, 0.831333339214325, 0.8276666402816772]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [10, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 0, 2, 5, 2, 1], [5, 6, 1, 6, 0], [69, 22], [1], [0], [4], [0]], "fitness": -0.2962857186794281, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 0, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(grad, grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3495054244995117, 2.3487892150878906, 2.339573383331299, 2.254281520843506, 2.3057937622070312, 2.303825616836548, 2.3031558990478516, 2.3031086921691895], "accuracy": [0.1978602558374405, 0.1814819723367691, 0.10368511080741882, 0.17302866280078888, 0.10196803510189056, 0.09589222073554993, 0.09628847241401672, 0.09972262382507324], "val_loss": [2.299787998199463, 2.4707541465759277, 2.26511812210083, 2.3071999549865723, 2.3034307956695557, 2.3027820587158203, 2.3025946617126465, 2.302503824234009], "val_accuracy": [0.19966666400432587, 0.1303333342075348, 0.29866665601730347, 0.10166666656732559, 0.10166666656732559, 0.09799999743700027, 0.10166666656732559, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 2, 3, 2, 5, 5], [0, 2, 1, 0, 2], [0, 96, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [2, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 3], [0, 6, 1, 6, 0, 0], [0, 22, 55], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 1, 14, 8, 6, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.multiply(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.656580924987793, 14.549490928649902, 2.3112831115722656, 2.3048760890960693, 2.3033103942871094, 2.303037166595459, 2.3029978275299072, 2.302971363067627, 2.303037643432617, 2.3030364513397217, 2.302950620651245, 2.303013324737549, 2.302933931350708], "accuracy": [0.18478403985500336, 0.09787346422672272, 0.09496764093637466, 0.09377889335155487, 0.0936468094587326, 0.0940430611371994, 0.09879804402589798, 0.09866596013307571, 0.0940430611371994, 0.09417514503002167, 0.09285431355237961, 0.09470347315073013, 0.09655263274908066], "val_loss": [91.38138580322266, 2.3157663345336914, 2.305861711502075, 2.303260087966919, 2.302738666534424, 2.3025925159454346, 2.302577257156372, 2.302544593811035, 2.3026444911956787, 2.3025925159454346, 2.302625894546509, 2.3026418685913086, 2.3027048110961914], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.1003333330154419, 0.0989999994635582, 0.10266666859388351, 0.09600000083446503, 0.0989999994635582, 0.09833333641290665, 0.09600000083446503, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 7, 1], [0, 6, 1, 0, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 0, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3097267150878906, 2.3099021911621094, 2.309485673904419, 2.309818983078003, 2.3096814155578613, 2.3095591068267822], "accuracy": [0.08955223858356476, 0.0870426595211029, 0.08875974267721176, 0.09734513610601425, 0.08889182657003403, 0.09298639744520187], "val_loss": [2.308213949203491, 2.308213949203491, 2.308213949203491, 2.308213949203491, 2.308213949203491, 2.308213949203491], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 4, 8, 8, 5, 4, 8, 1, 1, 2], [0, 2, 1, 0, 2, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [2, 3, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 18, 11, 7, 3, 1, 0, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), tf.math.square(tf.math.pow(tf.math.sqrt(alpha), tf.math.subtract(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, sigma)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310058116912842, 2.3092172145843506, 2.3108670711517334, 2.311713218688965, 2.3105392456054688, 2.31036376953125], "accuracy": [0.09311848133802414, 0.09179764986038208, 0.0870426595211029, 0.09008057415485382, 0.09272222965955734, 0.08875974267721176], "val_loss": [2.309173822402954, 2.309173822402954, 2.309173822402954, 2.309173822402954, 2.309173822402954, 2.309173822402954], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]