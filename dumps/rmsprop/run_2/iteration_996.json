[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091174125671387, 1.5890101194381714, 1.1491482257843018, 0.9701951742172241, 0.8803921937942505, 0.8224546313285828, 0.7866947650909424, 0.7580156922340393, 0.7330988049507141, 0.69578617811203, 0.6670373678207397, 0.6853774785995483, 0.6460709571838379, 0.6584330201148987, 0.6238057613372803, 0.5951603651046753, 0.5999011993408203, 0.5779444575309753, 0.5784413814544678, 0.5615955591201782, 0.5771400928497314, 0.5400584936141968, 0.5414950251579285, 0.5237451791763306, 0.5287931561470032, 0.5161851048469543, 0.5224687457084656, 0.4941348135471344, 0.5015429854393005, 0.49435535073280334, 0.48823457956314087, 0.49949389696121216, 0.4830932319164276, 0.4705784022808075, 0.46673470735549927, 0.46169930696487427, 0.46108388900756836, 0.45107507705688477, 0.44089919328689575, 0.44543758034706116, 0.45033541321754456, 0.4296013414859772, 0.43045419454574585, 0.4109554886817932, 0.4314430356025696, 0.42465123534202576, 0.42833539843559265, 0.4162132441997528, 0.4188443422317505, 0.4016854763031006, 0.40529727935791016, 0.39208346605300903, 0.3946021497249603, 0.3847979009151459, 0.3872990906238556], "accuracy": [0.260071337223053, 0.5171047449111938, 0.59225994348526, 0.6478668451309204, 0.6870955228805542, 0.7038700580596924, 0.7119271159172058, 0.7224937081336975, 0.7215691208839417, 0.7371549606323242, 0.7573636174201965, 0.7421740889549255, 0.7609298825263977, 0.7539294958114624, 0.7629110813140869, 0.7833839654922485, 0.7744023203849792, 0.7881389260292053, 0.7862898111343384, 0.7907806038856506, 0.7848368883132935, 0.8017435073852539, 0.7955356240272522, 0.8138951063156128, 0.802800178527832, 0.8121780753135681, 0.806630551815033, 0.8255184292793274, 0.8123101592063904, 0.8136309385299683, 0.8231409192085266, 0.8161405324935913, 0.8220842480659485, 0.8245938420295715, 0.8276317715644836, 0.8321225643157959, 0.8321225643157959, 0.8358209133148193, 0.8441421389579773, 0.8416325449943542, 0.8372738361358643, 0.8466516733169556, 0.844010055065155, 0.8462554216384888, 0.8424250483512878, 0.846387505531311, 0.8455950617790222, 0.8432175517082214, 0.846387505531311, 0.8519350290298462, 0.8502179384231567, 0.8581429123878479, 0.8562937378883362, 0.8595958352088928, 0.8545766472816467], "val_loss": [1.9142690896987915, 1.0809308290481567, 0.8686772584915161, 0.80063396692276, 0.741055965423584, 0.6954118013381958, 0.6472150683403015, 0.6829785108566284, 0.6248936653137207, 0.59454745054245, 0.6267027854919434, 0.5548474788665771, 0.5704626441001892, 0.5403713583946228, 0.5362921357154846, 0.5591912269592285, 0.5161520838737488, 0.5212945342063904, 0.5084747076034546, 0.5105701684951782, 0.5001031756401062, 0.4850325882434845, 0.48465263843536377, 0.49130305647850037, 0.5023679733276367, 0.4598361551761627, 0.4535444378852844, 0.46181541681289673, 0.4612292945384979, 0.4595039188861847, 0.4415496289730072, 0.4563113749027252, 0.45753011107444763, 0.4455374479293823, 0.4299173057079315, 0.4506436288356781, 0.43294668197631836, 0.4162840247154236, 0.45135873556137085, 0.439114511013031, 0.4132269322872162, 0.41583654284477234, 0.4085187613964081, 0.40708646178245544, 0.4147951304912567, 0.41690143942832947, 0.41387563943862915, 0.4153503477573395, 0.4030383229255676, 0.39592835307121277, 0.4015864133834839, 0.41401490569114685, 0.3979681730270386, 0.39688175916671753, 0.4010198712348938], "val_accuracy": [0.6116666793823242, 0.640999972820282, 0.6819999814033508, 0.6976666450500488, 0.7110000252723694, 0.7223333120346069, 0.7559999823570251, 0.7319999933242798, 0.7573333382606506, 0.7766666412353516, 0.7409999966621399, 0.7850000262260437, 0.7879999876022339, 0.8040000200271606, 0.7919999957084656, 0.7893333435058594, 0.7990000247955322, 0.7993333339691162, 0.8063333630561829, 0.8046666383743286, 0.8190000057220459, 0.8240000009536743, 0.8216666579246521, 0.8176666498184204, 0.8086666464805603, 0.8306666612625122, 0.8379999995231628, 0.8356666564941406, 0.8309999704360962, 0.8240000009536743, 0.8416666388511658, 0.8230000138282776, 0.8333333134651184, 0.8333333134651184, 0.8450000286102295, 0.8299999833106995, 0.8456666469573975, 0.8446666598320007, 0.8266666531562805, 0.8460000157356262, 0.8526666760444641, 0.8486666679382324, 0.8529999852180481, 0.8523333072662354, 0.8546666502952576, 0.8543333411216736, 0.8463333249092102, 0.8483333587646484, 0.8579999804496765, 0.8629999756813049, 0.8560000061988831, 0.8429999947547913, 0.8526666760444641, 0.8573333621025085, 0.8569999933242798]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 7, 3, 3, 6, 1, 6, 8, 6, 0, 5, 3, 2, 1, 9, 7, 5, 6, 7, 0, 9, 6], [0, 2, 1, 0, 2, 1, 0, 0, 2, 1, 3, 3, 0, 1, 3], [63, 39, 39, 29, 98, 90, 29], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 0, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 7, 3, 2, 1, 3], [0, 6, 1, 6, 0, 4, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 24, 15, 7, 4, 2, 2, 1, 15, 8, 7, 2, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad), alpha))))))))), tf.math.subtract(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038949966430664, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 1, 0, 3], [0, 28, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5, 1, 7, 8, 7, 5], [1, 0, 3, 3, 0, 3, 3, 3], [92, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 0, 2, 5, 9], [5, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 21, 13, 8, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(grad, tf.math.square(grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 5, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 84, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 4, 3, 8, 2], [5, 1, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.pow(tf.math.multiply(alpha, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3042383193969727, 2.7757787704467773, 24.06218719482422, 99.8118667602539, 233.5751495361328, 424.6361083984375], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3205344676971436, 7.266469478607178, 59.308563232421875, 169.0642547607422, 336.2359924316406, 560.952880859375], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [7, 2, 0, 6, 3, 6, 2], [2, 0, 5, 1, 0], [16, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 4, 2, 1, 2, 1], [5, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 10, 5, 5, 2, 10, 5, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1646703744.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [145976360960.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]