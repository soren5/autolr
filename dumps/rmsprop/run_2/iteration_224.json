[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210433006286621, 1.5982303619384766, 1.1749515533447266, 0.9939600229263306, 0.865985095500946, 0.8449563384056091, 0.7714049816131592, 0.7622323632240295, 0.7309876084327698, 0.7039474248886108, 0.686481773853302, 0.6608136892318726, 0.657175600528717, 0.6360561847686768, 0.6280556321144104, 0.6168050765991211, 0.6083683967590332, 0.5657173991203308, 0.5893357992172241, 0.5690842270851135, 0.5680304169654846, 0.5479844808578491, 0.5378190875053406, 0.5457726120948792, 0.519725501537323, 0.5165891051292419, 0.5100839138031006, 0.5074403285980225, 0.4973514974117279, 0.48864227533340454, 0.4953462481498718, 0.4804537892341614, 0.46501290798187256, 0.47120392322540283, 0.4656757712364197, 0.45099136233329773, 0.4716548025608063, 0.45448553562164307, 0.4480251371860504, 0.44595569372177124, 0.43739962577819824, 0.44732972979545593, 0.4283057749271393, 0.4211463928222656, 0.4162963628768921, 0.42113053798675537, 0.41259339451789856, 0.4044424891471863, 0.40202659368515015, 0.39952027797698975, 0.3955336809158325, 0.4035432040691376, 0.39355966448783875, 0.3899000883102417, 0.3815631568431854, 0.3801705837249756, 0.38319408893585205, 0.38103652000427246, 0.37239333987236023, 0.365991473197937], "accuracy": [0.2639017403125763, 0.5052172541618347, 0.5852595567703247, 0.6478668451309204, 0.691850483417511, 0.687887966632843, 0.7207766771316528, 0.7165499925613403, 0.7257958054542542, 0.7392682433128357, 0.7432307600975037, 0.7574957013130188, 0.7568352818489075, 0.7643640041351318, 0.7646281719207764, 0.7738739848136902, 0.776251494884491, 0.7948752045631409, 0.7814027070999146, 0.7891955971717834, 0.787082314491272, 0.7924976944923401, 0.8038568496704102, 0.804649293422699, 0.8084797263145447, 0.8072909712791443, 0.8156121969223022, 0.8129705190658569, 0.8190463781356812, 0.8215559124946594, 0.8185180425643921, 0.8247259259223938, 0.8308017253875732, 0.8286884427070618, 0.8298771381378174, 0.8327829837799072, 0.8286884427070618, 0.832650899887085, 0.828292191028595, 0.8378021121025085, 0.8409721255302429, 0.8358209133148193, 0.843481719493866, 0.8475762605667114, 0.8482366800308228, 0.8421608805656433, 0.8545766472816467, 0.8549728989601135, 0.8541803956031799, 0.8574824929237366, 0.8539162874221802, 0.8525954484939575, 0.8564258217811584, 0.8647470474243164, 0.8602562546730042, 0.8664641380310059, 0.8617091774940491, 0.8594637513160706, 0.8667283058166504, 0.8642187118530273], "val_loss": [1.9233019351959229, 1.1051054000854492, 0.9043324589729309, 0.7798357605934143, 0.7213104367256165, 0.6699497699737549, 0.6751565337181091, 0.6382988095283508, 0.6343015432357788, 0.6080055236816406, 0.5816549062728882, 0.5827715992927551, 0.550661563873291, 0.5457596182823181, 0.5418031215667725, 0.5261686444282532, 0.5139939785003662, 0.5250450968742371, 0.5469108819961548, 0.4950440227985382, 0.48720619082450867, 0.48948734998703003, 0.4987219274044037, 0.48493051528930664, 0.47006306052207947, 0.4642369747161865, 0.4668424129486084, 0.466389924287796, 0.47558894753456116, 0.4879692494869232, 0.4411069452762604, 0.4540783166885376, 0.434977650642395, 0.4380571246147156, 0.4239921569824219, 0.4467690885066986, 0.43182632327079773, 0.42024290561676025, 0.42929407954216003, 0.4117148518562317, 0.4296373426914215, 0.421355277299881, 0.41420450806617737, 0.40063580870628357, 0.4070364236831665, 0.41121959686279297, 0.3981941342353821, 0.39617326855659485, 0.4117315411567688, 0.3987404704093933, 0.3977266550064087, 0.3980924189090729, 0.3841649293899536, 0.3825760781764984, 0.3802873492240906, 0.3863784074783325, 0.38091570138931274, 0.38383570313453674, 0.3836783170700073, 0.38391566276550293], "val_accuracy": [0.5793333053588867, 0.637666642665863, 0.6856666803359985, 0.7233333587646484, 0.7246666550636292, 0.753000020980835, 0.731333315372467, 0.7670000195503235, 0.7563333511352539, 0.7733333110809326, 0.768666684627533, 0.778333306312561, 0.7963333129882812, 0.7943333387374878, 0.8026666641235352, 0.8016666769981384, 0.8083333373069763, 0.7993333339691162, 0.7923333048820496, 0.8140000104904175, 0.8176666498184204, 0.8193333148956299, 0.8050000071525574, 0.8026666641235352, 0.8226666450500488, 0.8336666822433472, 0.8240000009536743, 0.8243333101272583, 0.8213333487510681, 0.812666654586792, 0.8343333601951599, 0.8373333215713501, 0.8373333215713501, 0.8383333086967468, 0.847000002861023, 0.8339999914169312, 0.8379999995231628, 0.840666651725769, 0.8423333168029785, 0.8513333201408386, 0.8383333086967468, 0.8450000286102295, 0.8463333249092102, 0.8516666889190674, 0.8473333120346069, 0.8473333120346069, 0.8519999980926514, 0.8503333330154419, 0.840666651725769, 0.856333315372467, 0.8473333120346069, 0.8533333539962769, 0.859333336353302, 0.8586666584014893, 0.8650000095367432, 0.8550000190734863, 0.8600000143051147, 0.8576666712760925, 0.8550000190734863, 0.8523333072662354]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 2, 3, 1, 3, 5], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 5, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.496915817260742, 59.1067008972168, 201.86553955078125, 496.1843566894531, 1017.3533325195312, 1789.857666015625], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.10579843819141388, 0.1010434553027153, 0.09919429570436478, 0.10342095047235489], "val_loss": [20.75058364868164, 97.39138793945312, 270.3212585449219, 589.7128295898438, 1105.204833984375, 1866.7783203125], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 44], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 0], [0, 2, 8, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [14189.06640625, 61313.0078125, 111235.21875, 163194.078125, 217235.640625, 273672.90625, 332613.21875, 393928.71875], "accuracy": [0.10130762308835983, 0.1018359512090683, 0.1002509593963623, 0.1014397069811821, 0.10130762308835983, 0.10157178342342377, 0.09536388516426086, 0.1018359512090683], "val_loss": [41200.7109375, 90153.6640625, 140998.359375, 194203.3125, 249702.65625, 307545.34375, 367710.5625, 430352.78125], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10100000351667404, 0.10000000149011612, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 4, 2, 2, 2, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 2, 2, 1, 8, 3, 8, 1, 5], [1, 0, 2, 1, 0, 3, 3, 4, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 1, 2, 5, 2, 1], [0, 4, 1, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 22, 13, 9, 2, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad)), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12481838464736938, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 6, 3, 5, 7, 9], [0, 1, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [94, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 2, 5, 2, 1], [0, 6, 5, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 13, 8, 5, 3, 2, 1, 1, 0, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310034990310669, 2.3101556301116943, 2.3095948696136475, 2.3091490268707275, 2.3090808391571045, 2.3106307983398438], "accuracy": [0.09311848133802414, 0.09285431355237961, 0.09047681838274002, 0.09351472556591034, 0.09840179979801178, 0.0866464152932167], "val_loss": [2.3081984519958496, 2.3081984519958496, 2.3081984519958496, 2.3081984519958496, 2.3081984519958496, 2.3081984519958496], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]