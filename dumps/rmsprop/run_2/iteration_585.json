[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.224717378616333, 1.848732829093933, 1.391735553741455, 1.1480374336242676, 1.008957862854004, 0.9373484253883362, 0.8877953290939331, 0.8433449864387512, 0.8132889866828918, 0.7817674279212952, 0.7660361528396606, 0.7407264709472656, 0.7237756252288818, 0.7145894765853882, 0.6964874863624573, 0.6821784377098083, 0.6630954146385193, 0.6607567071914673, 0.6500458717346191, 0.6397688984870911, 0.6271549463272095, 0.6316931843757629, 0.6146995425224304, 0.6033890247344971, 0.6120803952217102, 0.594977080821991, 0.5911877751350403, 0.5855310559272766, 0.569439709186554, 0.5698181390762329, 0.5614691376686096, 0.5598472952842712, 0.5598453283309937, 0.551456093788147, 0.5439450144767761, 0.5438306331634521, 0.5397853851318359, 0.53205406665802, 0.5290874242782593, 0.5239303112030029, 0.5134927034378052], "accuracy": [0.26443007588386536, 0.48606523871421814, 0.5735041499137878, 0.6184123754501343, 0.6568484902381897, 0.6729626059532166, 0.68101966381073, 0.703209638595581, 0.7174745798110962, 0.7174745798110962, 0.7289658188819885, 0.7312111854553223, 0.7338528633117676, 0.7371549606323242, 0.7445515990257263, 0.7511557340621948, 0.7584202885627747, 0.7594769597053528, 0.7651565074920654, 0.7666094303131104, 0.7670056819915771, 0.7718927264213562, 0.7779685854911804, 0.7790252566337585, 0.7778365015983582, 0.7808743715286255, 0.780610203742981, 0.7865539789199829, 0.7928939461708069, 0.7906485199928284, 0.7984414100646973, 0.7975168228149414, 0.7936864495277405, 0.7998943328857422, 0.8047813773155212, 0.8041210174560547, 0.8038568496704102, 0.8054417967796326, 0.8083476424217224, 0.8103289008140564, 0.8137630224227905], "val_loss": [2.037813425064087, 1.5029412508010864, 1.136346459388733, 0.9712011814117432, 0.8833218812942505, 0.8285793662071228, 0.7823987007141113, 0.7517314553260803, 0.7352213263511658, 0.7241840958595276, 0.6902250051498413, 0.680504322052002, 0.6668487787246704, 0.6544323563575745, 0.6409668922424316, 0.6359170079231262, 0.6256055235862732, 0.6327250003814697, 0.6063166260719299, 0.601548433303833, 0.5950259566307068, 0.5926463007926941, 0.5879549384117126, 0.5766045451164246, 0.5731984972953796, 0.5711734294891357, 0.5615370869636536, 0.5570892095565796, 0.5539321303367615, 0.5555384755134583, 0.5461191534996033, 0.5432760119438171, 0.54183030128479, 0.5325130820274353, 0.5381040573120117, 0.5221539735794067, 0.5232628583908081, 0.526215672492981, 0.5322210788726807, 0.5119263529777527, 0.5181464552879333], "val_accuracy": [0.5036666393280029, 0.6363333463668823, 0.675000011920929, 0.6890000104904175, 0.6990000009536743, 0.7153333425521851, 0.7200000286102295, 0.7303333282470703, 0.7319999933242798, 0.7403333187103271, 0.7459999918937683, 0.7599999904632568, 0.7556666731834412, 0.7593333125114441, 0.7649999856948853, 0.7693333625793457, 0.7693333625793457, 0.765666663646698, 0.7776666879653931, 0.7799999713897705, 0.7760000228881836, 0.781000018119812, 0.7906666398048401, 0.7893333435058594, 0.7876666784286499, 0.7886666655540466, 0.7919999957084656, 0.8003333210945129, 0.7990000247955322, 0.793666660785675, 0.8016666769981384, 0.8053333163261414, 0.8009999990463257, 0.8086666464805603, 0.8043333292007446, 0.8143333196640015, 0.812333345413208, 0.8066666722297668, 0.8040000200271606, 0.8083333373069763, 0.809333324432373]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8014285564422607, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2080836296081543, 1.5977225303649902, 1.1664530038833618, 0.9637188911437988, 0.9052139520645142, 0.8177018165588379, 0.7908273935317993, 0.7426051497459412, 0.7384004592895508, 0.6908673644065857, 0.6817629337310791, 0.6834407448768616, 0.6625367999076843, 0.6329677104949951, 0.646311342716217, 0.6213102340698242, 0.598658561706543, 0.5927178263664246, 0.5794845223426819, 0.5658645629882812, 0.5700638294219971, 0.5509548187255859, 0.5391724109649658, 0.5462772846221924, 0.5315485596656799, 0.5164014101028442, 0.5281420350074768, 0.5180938839912415, 0.5057891607284546], "accuracy": [0.27578920125961304, 0.5130101442337036, 0.5904107689857483, 0.6559239029884338, 0.6691322326660156, 0.7018887996673584, 0.7061154246330261, 0.724210798740387, 0.7231541275978088, 0.7407211661338806, 0.7411174178123474, 0.7442874312400818, 0.7483819723129272, 0.7605336308479309, 0.7586844563484192, 0.7656848430633545, 0.7786290049552917, 0.7817989587783813, 0.7840443849563599, 0.7917051911354065, 0.7840443849563599, 0.7965922355651855, 0.7991018295288086, 0.7964601516723633, 0.8037247657775879, 0.8098005652427673, 0.802271842956543, 0.8105930685997009, 0.819442629814148], "val_loss": [1.9126020669937134, 1.091176986694336, 0.957830011844635, 0.7980769872665405, 0.7579571008682251, 0.6862902045249939, 0.6934945583343506, 0.6456345319747925, 0.642304539680481, 0.6094999313354492, 0.6200144290924072, 0.6166338324546814, 0.5854820013046265, 0.5765199661254883, 0.591288149356842, 0.5409554243087769, 0.5454107522964478, 0.534055769443512, 0.5235005021095276, 0.4982340633869171, 0.5239489674568176, 0.5037097334861755, 0.4884064793586731, 0.4812321662902832, 0.47876566648483276, 0.4856131672859192, 0.48000267148017883, 0.46785637736320496, 0.472758412361145], "val_accuracy": [0.527999997138977, 0.6570000052452087, 0.6209999918937683, 0.7026666402816772, 0.7056666612625122, 0.7366666793823242, 0.7323333621025085, 0.7573333382606506, 0.7419999837875366, 0.7666666507720947, 0.7513333559036255, 0.7493333220481873, 0.7680000066757202, 0.7723333239555359, 0.7796666622161865, 0.7963333129882812, 0.7893333435058594, 0.7946666479110718, 0.7993333339691162, 0.8186666369438171, 0.8076666593551636, 0.8103333115577698, 0.8213333487510681, 0.8263333439826965, 0.8230000138282776, 0.815666675567627, 0.8193333148956299, 0.8233333230018616, 0.8190000057220459]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 8, 6], [3, 0, 3, 0, 2, 3], [0, 11, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 4, 1, 6, 1, 8, 2], [2, 0, 3, 3, 0, 2], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 2, 5, 2, 1], [6, 6, 7, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 12, 6, 6, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.subtract(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [46, 32, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 6, 5, 1, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102524280548096, 2.310615062713623, 2.309628486633301, 2.3105669021606445, 2.308432102203369, 2.3099582195281982], "accuracy": [0.0956280529499054, 0.08796724677085876, 0.09034473448991776, 0.08796724677085876, 0.09391097724437714, 0.09272222965955734], "val_loss": [2.308135986328125, 2.308135986328125, 2.308135986328125, 2.308135986328125, 2.308135986328125, 2.308135986328125], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]