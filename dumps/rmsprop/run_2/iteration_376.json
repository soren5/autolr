[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211994171142578, 1.6238853931427002, 1.1506346464157104, 0.9961140155792236, 0.9076346158981323, 0.8282557129859924, 0.8055572509765625, 0.7491327524185181, 0.727630078792572, 0.7232268452644348, 0.6849342584609985, 0.681663990020752, 0.6576004028320312, 0.6521047949790955, 0.6273654699325562, 0.6206685304641724, 0.5909677743911743, 0.5976829528808594, 0.5925881862640381, 0.567103385925293, 0.5804387331008911, 0.5479362607002258, 0.5395028591156006, 0.5543990731239319, 0.521831214427948, 0.523384153842926, 0.5200724005699158, 0.512667179107666, 0.4974955916404724, 0.4896835684776306, 0.4944353997707367, 0.4819229543209076, 0.4763520061969757, 0.4809136390686035, 0.46496468782424927, 0.465434193611145, 0.4536864459514618, 0.45857104659080505, 0.4484475255012512, 0.45148804783821106, 0.4439172148704529, 0.43131691217422485, 0.4313656985759735, 0.4326907992362976, 0.4265957772731781, 0.43052729964256287, 0.40945661067962646, 0.4217984676361084, 0.4066069722175598, 0.4082847237586975, 0.3966788947582245, 0.4076353907585144, 0.4079083800315857, 0.3928678333759308, 0.39225587248802185, 0.38895654678344727, 0.388322114944458, 0.3727320432662964], "accuracy": [0.272090882062912, 0.499009370803833, 0.6070532202720642, 0.6373002529144287, 0.6744155287742615, 0.6979262828826904, 0.7054550051689148, 0.7201162576675415, 0.7321357727050781, 0.7349095344543457, 0.7461365461349487, 0.7409853339195251, 0.7516840696334839, 0.7588165402412415, 0.763439416885376, 0.7666094303131104, 0.7798177003860474, 0.7786290049552917, 0.7786290049552917, 0.7913089394569397, 0.7866860628128052, 0.8004226684570312, 0.8042530417442322, 0.798309326171875, 0.8055738806724548, 0.8074230551719666, 0.8087438941001892, 0.8105930685997009, 0.8201030492782593, 0.8226125836372375, 0.8197067975997925, 0.8224804997444153, 0.8236692547798157, 0.8227446675300598, 0.8269713521003723, 0.8302733898162842, 0.8355567455291748, 0.8298771381378174, 0.8347642421722412, 0.8314621448516846, 0.8362171649932861, 0.8393871188163757, 0.8479725122451782, 0.8409721255302429, 0.8442742228507996, 0.8411042094230652, 0.8467837572097778, 0.8475762605667114, 0.8514066934585571, 0.8479725122451782, 0.8552370667457581, 0.8485008478164673, 0.8548408150672913, 0.8580108284950256, 0.8580108284950256, 0.8578787446022034, 0.8573504090309143, 0.863029956817627], "val_loss": [1.9277483224868774, 1.1099456548690796, 0.9006178379058838, 0.8016418218612671, 0.722638726234436, 0.700693666934967, 0.6682708263397217, 0.6785061359405518, 0.6385544538497925, 0.6344729661941528, 0.5791683197021484, 0.585260272026062, 0.55880206823349, 0.5509782433509827, 0.5551456809043884, 0.5712084770202637, 0.5265932679176331, 0.5351874232292175, 0.5191961526870728, 0.5236102938652039, 0.508339524269104, 0.5000775456428528, 0.5165379643440247, 0.49581772089004517, 0.4877412021160126, 0.4887627065181732, 0.48087063431739807, 0.47943630814552307, 0.4652232229709625, 0.48129168152809143, 0.4698443114757538, 0.45720019936561584, 0.46486711502075195, 0.44834187626838684, 0.45007264614105225, 0.44862356781959534, 0.45105740427970886, 0.44112348556518555, 0.46140024065971375, 0.4380553364753723, 0.4345709979534149, 0.4319462478160858, 0.4298533797264099, 0.4335400462150574, 0.43514227867126465, 0.42267733812332153, 0.4241390824317932, 0.41449087858200073, 0.431862473487854, 0.4142676591873169, 0.42010506987571716, 0.4206216633319855, 0.4068172872066498, 0.41814035177230835, 0.4150378406047821, 0.4064435660839081, 0.4105663299560547, 0.41400009393692017], "val_accuracy": [0.5440000295639038, 0.6503333449363708, 0.6899999976158142, 0.7080000042915344, 0.737333357334137, 0.7356666922569275, 0.753333330154419, 0.7620000243186951, 0.7673333287239075, 0.7490000128746033, 0.7856666445732117, 0.7860000133514404, 0.7889999747276306, 0.7973333597183228, 0.7943333387374878, 0.777999997138977, 0.8026666641235352, 0.8056666851043701, 0.8033333420753479, 0.8029999732971191, 0.812666654586792, 0.8180000185966492, 0.7956666946411133, 0.8176666498184204, 0.8299999833106995, 0.8190000057220459, 0.8226666450500488, 0.8286666870117188, 0.8346666693687439, 0.8270000219345093, 0.8259999752044678, 0.8410000205039978, 0.8339999914169312, 0.8423333168029785, 0.8403333425521851, 0.8410000205039978, 0.8389999866485596, 0.8450000286102295, 0.8349999785423279, 0.8460000157356262, 0.8460000157356262, 0.8489999771118164, 0.8516666889190674, 0.8463333249092102, 0.8399999737739563, 0.8506666421890259, 0.8516666889190674, 0.8579999804496765, 0.8420000076293945, 0.856333315372467, 0.8546666502952576, 0.8526666760444641, 0.8610000014305115, 0.8519999980926514, 0.8569999933242798, 0.8583333492279053, 0.8556666374206543, 0.8503333330154419]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 4], [0, 2, 1, 0, 0, 3], [0, 9, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 3], [0, 6, 1, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 1, 1, 0, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [95.13619232177734, 11104.7939453125, 183413.53125, 1293026.625, 5609481.5, 18856468.0], "accuracy": [0.10170386731624603, 0.10091137140989304, 0.10394927859306335, 0.0952318087220192, 0.10434553027153015, 0.10091137140989304], "val_loss": [797.6073608398438, 39083.359375, 415229.4375, 2256809.25, 8442242.0, 24884832.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 2, 0, 2, 3, 5, 6, 7, 8, 3, 3, 8, 4, 8, 7, 4, 6, 5], [0, 2, 1, 0, 2, 3, 0, 1, 2, 1, 0, 1, 2], [0, 39, 39, 57], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 5], [0, 6, 1, 6, 7], [0, 22], [0, 0, 1, 1], [0, 3], [2, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 18, 13, 4, 4, 2, 2, 1, 13, 8, 5, 1, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha))), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), grad)), tf.math.pow(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.square(alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha))), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(tf.math.square(alpha), grad), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 8, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105621337890625, 2.3088836669921875, 2.309884548187256, 2.3100857734680176, 2.308903694152832, 2.309689521789551], "accuracy": [0.09008057415485382, 0.09087307006120682, 0.08836349099874496, 0.09272222965955734, 0.09060890227556229, 0.0944393053650856], "val_loss": [2.3091275691986084, 2.3091275691986084, 2.3091275691986084, 2.3091275691986084, 2.3091275691986084, 2.3091275691986084], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 2, 3, 2, 3, 5, 2, 2, 2, 2, 0, 1], [2, 2, 2, 1, 0, 1, 2, 0, 3, 1, 0], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 1, 2, 5, 1, 1], [0, 0, 0, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 23, 12, 11, 3, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), grad), tf.math.multiply(alpha, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.subtract(grad, alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102381229400635, 2.309380531311035, 2.3103857040405273, 2.309744119644165, 2.3094866275787354, 2.3090124130249023], "accuracy": [0.09113723784685135, 0.09060890227556229, 0.0940430611371994, 0.09377889335155487, 0.09470347315073013, 0.09615638852119446], "val_loss": [2.3084218502044678, 2.3084218502044678, 2.3084218502044678, 2.3084218502044678, 2.3084218502044678, 2.3084218502044678], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]