[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21022367477417, 1.6067006587982178, 1.1763184070587158, 0.9722040295600891, 0.8910061717033386, 0.8263123631477356, 0.7806620597839355, 0.7702451348304749, 0.7283377051353455, 0.7194536328315735, 0.6807117462158203, 0.682742714881897, 0.6758126020431519, 0.6375245451927185, 0.6351224184036255, 0.6168297529220581, 0.6082713603973389, 0.5875539183616638, 0.5848602652549744, 0.5761250257492065, 0.5870370268821716, 0.5564624071121216, 0.5450413227081299, 0.5464858412742615, 0.5432349443435669, 0.532828152179718, 0.5273565053939819, 0.5123187303543091, 0.5083694458007812, 0.5090987086296082, 0.4999559223651886, 0.4885293245315552, 0.495085746049881, 0.47868940234184265, 0.47240331768989563, 0.4692642092704773, 0.4647669494152069, 0.45766493678092957, 0.45768097043037415, 0.445820152759552, 0.4464641213417053, 0.43808838725090027, 0.4289705753326416, 0.4458500146865845, 0.42893725633621216, 0.4179259240627289, 0.42484426498413086, 0.41905686259269714, 0.42279550433158875, 0.412489116191864, 0.4221528470516205, 0.3957526683807373, 0.3875765800476074, 0.40276309847831726, 0.4026656448841095, 0.4055061936378479, 0.40018266439437866, 0.3878428339958191, 0.3794814646244049, 0.3748396933078766, 0.37858399748802185, 0.3747912049293518], "accuracy": [0.2599392533302307, 0.5065380930900574, 0.5892220139503479, 0.6505085229873657, 0.6750759482383728, 0.6976621150970459, 0.7160216569900513, 0.7148329019546509, 0.7316074371337891, 0.7318716049194336, 0.7454761862754822, 0.7429665923118591, 0.7440232634544373, 0.7635715007781982, 0.7671377658843994, 0.770439863204956, 0.772288978099823, 0.7796856164932251, 0.7862898111343384, 0.7907806038856506, 0.7815347909927368, 0.7957997918128967, 0.7993659973144531, 0.8014793395996094, 0.7967243194580078, 0.8016114234924316, 0.8031964302062988, 0.8100647330284119, 0.8092722296714783, 0.8128384351730347, 0.8150838613510132, 0.8175934553146362, 0.819442629814148, 0.826310932636261, 0.8255184292793274, 0.8259146809577942, 0.8284242749214172, 0.8368775844573975, 0.8300092220306396, 0.8376700282096863, 0.8381983637809753, 0.8417646288871765, 0.8425571322441101, 0.8370096683502197, 0.8471800088882446, 0.8454629778862, 0.8416325449943542, 0.8461233377456665, 0.8457271456718445, 0.8495575189590454, 0.8441421389579773, 0.8569541573524475, 0.8533879518508911, 0.8488970994949341, 0.8494254350662231, 0.8565579056739807, 0.8576145768165588, 0.8577466607093811, 0.8573504090309143, 0.8626337051391602, 0.8621054291725159, 0.8658037185668945], "val_loss": [1.9310789108276367, 1.110083818435669, 0.9197975397109985, 0.8235774636268616, 0.7630699872970581, 0.6845451593399048, 0.6803712248802185, 0.6713472604751587, 0.6385108828544617, 0.6345189809799194, 0.6110877990722656, 0.5963985919952393, 0.5734853744506836, 0.5726476311683655, 0.555794894695282, 0.5990289449691772, 0.5470359325408936, 0.5273155570030212, 0.5165348649024963, 0.5285490155220032, 0.5149061679840088, 0.5085175633430481, 0.5247358083724976, 0.49746468663215637, 0.5075592994689941, 0.49103808403015137, 0.48986026644706726, 0.4819445013999939, 0.46965664625167847, 0.4703158736228943, 0.45797407627105713, 0.4775545299053192, 0.4624154567718506, 0.48367077112197876, 0.4574565291404724, 0.46384933590888977, 0.44776684045791626, 0.4326898455619812, 0.44147688150405884, 0.4307677149772644, 0.4293924570083618, 0.4367862045764923, 0.43034905195236206, 0.42586076259613037, 0.4175657629966736, 0.434272825717926, 0.44056111574172974, 0.4280208349227905, 0.4152526557445526, 0.4488638937473297, 0.41454142332077026, 0.4147759675979614, 0.4103943705558777, 0.417186439037323, 0.42126762866973877, 0.4234790503978729, 0.40194180607795715, 0.39539653062820435, 0.4010637104511261, 0.4133317172527313, 0.3961321711540222, 0.3989868462085724], "val_accuracy": [0.5376666784286499, 0.6536666750907898, 0.6763333082199097, 0.6903333067893982, 0.7200000286102295, 0.7436666488647461, 0.7416666746139526, 0.7366666793823242, 0.7450000047683716, 0.7549999952316284, 0.7633333206176758, 0.781333327293396, 0.781333327293396, 0.7893333435058594, 0.7903333306312561, 0.7739999890327454, 0.7926666736602783, 0.8019999861717224, 0.8163333535194397, 0.7983333468437195, 0.8143333196640015, 0.8183333277702332, 0.8063333630561829, 0.8190000057220459, 0.8190000057220459, 0.8233333230018616, 0.8183333277702332, 0.8253333568572998, 0.8333333134651184, 0.8349999785423279, 0.8383333086967468, 0.8286666870117188, 0.8379999995231628, 0.8193333148956299, 0.840666651725769, 0.824999988079071, 0.8416666388511658, 0.8483333587646484, 0.8420000076293945, 0.8460000157356262, 0.846666693687439, 0.8486666679382324, 0.8479999899864197, 0.8510000109672546, 0.8519999980926514, 0.8410000205039978, 0.8349999785423279, 0.847000002861023, 0.8556666374206543, 0.8330000042915344, 0.8506666421890259, 0.8583333492279053, 0.8550000190734863, 0.8463333249092102, 0.8463333249092102, 0.8463333249092102, 0.859666645526886, 0.8573333621025085, 0.8569999933242798, 0.8476666808128357, 0.8566666841506958, 0.8586666584014893]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 5], [0, 6, 1], [65, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 3, 6], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091633319854736, 2.3104472160339355, 2.309892177581787, 2.309682607650757, 2.309709072113037, 2.3086133003234863], "accuracy": [0.09259014576673508, 0.09206181764602661, 0.08994849026203156, 0.09932637959718704, 0.09259014576673508, 0.09153348207473755], "val_loss": [2.308788776397705, 2.308788776397705, 2.308788776397705, 2.308788776397705, 2.308788776397705, 2.308788776397705], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 9, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [30, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 2], [0, 6, 4, 1, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 9, 6, 3, 2, 4, 3, 1, 0, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3094944953918457, 2.30973482131958, 2.310173988342285, 2.308941125869751, 2.309016227722168, 2.3096094131469727], "accuracy": [0.0936468094587326, 0.09153348207473755, 0.09206181764602661, 0.09272222965955734, 0.09245806187391281, 0.09430722147226334], "val_loss": [2.3090767860412598, 2.3090767860412598, 2.3090767860412598, 2.3090767860412598, 2.3090767860412598, 2.3090767860412598], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 0, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [8, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110294342041016, 2.308953046798706, 2.308804750442505, 2.310018539428711, 2.3094403743743896, 2.3087353706359863], "accuracy": [0.09074098616838455, 0.09325055778026581, 0.09866596013307571, 0.0878351628780365, 0.09100515395402908, 0.09509972482919693], "val_loss": [2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]