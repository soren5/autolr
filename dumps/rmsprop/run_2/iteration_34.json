[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8460000157356262, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115213871002197, 1.6035518646240234, 1.1275091171264648, 0.9605789184570312, 0.899074375629425, 0.8218628764152527, 0.7674354910850525, 0.7567363381385803, 0.7054775357246399, 0.6905444860458374, 0.6720731854438782, 0.6750778555870056, 0.6319993138313293, 0.6231991052627563, 0.6099893450737, 0.5930700302124023, 0.6025733947753906, 0.5835455060005188, 0.5549008846282959, 0.5613900423049927, 0.5504114031791687, 0.5417618155479431, 0.525894820690155, 0.5338351130485535, 0.5211982727050781, 0.514241099357605, 0.5105997920036316, 0.508783757686615, 0.4984301030635834, 0.495052695274353, 0.485470175743103, 0.4902355372905731, 0.4709733724594116, 0.46637123823165894, 0.4670984745025635, 0.4574081003665924, 0.4608893096446991, 0.441865473985672], "accuracy": [0.2631092369556427, 0.5094439387321472, 0.6083740592002869, 0.6573768258094788, 0.6684718132019043, 0.7047945857048035, 0.715889573097229, 0.7213049530982971, 0.7368907928466797, 0.7430986762046814, 0.7518161535263062, 0.7460044622421265, 0.767401933670044, 0.7683265209197998, 0.7693831920623779, 0.7800818681716919, 0.7769119143486023, 0.7807422876358032, 0.7911768555641174, 0.7880068421363831, 0.7913089394569397, 0.7996301651000977, 0.8024039268493652, 0.8076872229576111, 0.8076872229576111, 0.807158887386322, 0.8088759779930115, 0.8087438941001892, 0.8169330358505249, 0.8148196935653687, 0.8241975903511047, 0.8204993009567261, 0.8274996876716614, 0.8289526104927063, 0.830669641494751, 0.8339717388153076, 0.8318583965301514, 0.8362171649932861], "val_loss": [1.9218577146530151, 1.0922735929489136, 0.8897356986999512, 0.8821458220481873, 0.7294356226921082, 0.7094075679779053, 0.6877594590187073, 0.6497145295143127, 0.636620044708252, 0.6156511902809143, 0.65572589635849, 0.5789298415184021, 0.5877798795700073, 0.580005943775177, 0.568648099899292, 0.5414900183677673, 0.5489321947097778, 0.5378743410110474, 0.5518214702606201, 0.5302776098251343, 0.5143672823905945, 0.5063518285751343, 0.5001890659332275, 0.48847895860671997, 0.48394715785980225, 0.4992660582065582, 0.502274751663208, 0.469897985458374, 0.5057491064071655, 0.48395222425460815, 0.46909570693969727, 0.4546973407268524, 0.4514615833759308, 0.4591594338417053, 0.45208799839019775, 0.4480642080307007, 0.4547567069530487, 0.4484480023384094], "val_accuracy": [0.5630000233650208, 0.6589999794960022, 0.6863333582878113, 0.6556666493415833, 0.7170000076293945, 0.7183333039283752, 0.7409999966621399, 0.7536666393280029, 0.7540000081062317, 0.7616666555404663, 0.7476666569709778, 0.7739999890327454, 0.7683333158493042, 0.7566666603088379, 0.7689999938011169, 0.7893333435058594, 0.7799999713897705, 0.7910000085830688, 0.7643333077430725, 0.7916666865348816, 0.796999990940094, 0.8056666851043701, 0.8090000152587891, 0.8056666851043701, 0.8143333196640015, 0.8063333630561829, 0.8043333292007446, 0.8186666369438171, 0.7963333129882812, 0.812333345413208, 0.8276666402816772, 0.8309999704360962, 0.8323333263397217, 0.82833331823349, 0.8299999833106995, 0.8323333263397217, 0.8266666531562805, 0.8263333439826965]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134671211242676, 1.6188912391662598, 1.1682333946228027, 0.9787992835044861, 0.8762130737304688, 0.8412721753120422, 0.8140362501144409, 0.7519533038139343, 0.7365739941596985, 0.7130790948867798, 0.6995294690132141, 0.6598197817802429, 0.659053385257721, 0.6643668413162231, 0.6353116631507874, 0.6236130595207214, 0.6085476279258728, 0.6092466115951538, 0.6009515523910522, 0.5707265138626099, 0.5654731392860413, 0.5671126842498779, 0.5534784197807312, 0.545200526714325, 0.565083384513855, 0.5324474573135376, 0.5313300490379333, 0.5199886560440063, 0.5126873850822449, 0.4987392723560333, 0.5005797147750854, 0.49619054794311523, 0.4898585379123688, 0.49735888838768005, 0.4707476496696472, 0.4707801043987274, 0.4792691171169281, 0.46223577857017517, 0.4608812928199768, 0.461501806974411, 0.4550791382789612, 0.45488205552101135, 0.4438401460647583, 0.43555814027786255, 0.4313097596168518, 0.43490517139434814, 0.43415865302085876, 0.43088042736053467, 0.41765540838241577, 0.41726648807525635], "accuracy": [0.2583542466163635, 0.49993395805358887, 0.5976753234863281, 0.6535464525222778, 0.6923788189888, 0.6952846646308899, 0.7008321285247803, 0.7195879220962524, 0.7305507659912109, 0.7364945411682129, 0.735569953918457, 0.7547219395637512, 0.7578919529914856, 0.7536653280258179, 0.7584202885627747, 0.7650244235992432, 0.7736098170280457, 0.767930269241333, 0.7721568942070007, 0.7885351777076721, 0.7897239327430725, 0.7881389260292053, 0.7959318161010742, 0.7971205711364746, 0.7886672616004944, 0.8004226684570312, 0.8017435073852539, 0.8086118102073669, 0.8082155585289001, 0.8182538747787476, 0.8117818236351013, 0.8202351331710815, 0.8185180425643921, 0.8129705190658569, 0.8182538747787476, 0.8239334225654602, 0.8212917447090149, 0.8310658931732178, 0.8335754871368408, 0.8285563588142395, 0.8296129703521729, 0.8289526104927063, 0.8380662798881531, 0.8421608805656433, 0.8430854678153992, 0.8436138033866882, 0.8366134166717529, 0.8432175517082214, 0.8454629778862, 0.8437458872795105], "val_loss": [1.9265198707580566, 1.1332205533981323, 0.8648799061775208, 0.7723639607429504, 0.7492506504058838, 0.7577378153800964, 0.6582714319229126, 0.6123123168945312, 0.5989484190940857, 0.5653815269470215, 0.56988126039505, 0.5509026646614075, 0.5508593916893005, 0.5285961031913757, 0.5341199636459351, 0.5033364295959473, 0.5077347755432129, 0.5057003498077393, 0.4940372705459595, 0.4913838803768158, 0.4837636351585388, 0.47732335329055786, 0.4870144724845886, 0.46020010113716125, 0.45475977659225464, 0.46034741401672363, 0.4528365433216095, 0.4391835629940033, 0.4454168975353241, 0.4405284821987152, 0.4460647702217102, 0.4278630018234253, 0.4287986159324646, 0.4283938705921173, 0.44595980644226074, 0.4403451383113861, 0.43213626742362976, 0.4105587601661682, 0.4291718602180481, 0.41879284381866455, 0.41101109981536865, 0.4094502627849579, 0.40233227610588074, 0.3999916911125183, 0.3986697196960449, 0.3978133201599121, 0.3970223665237427, 0.3997880816459656, 0.4000806212425232, 0.3924277424812317], "val_accuracy": [0.5586666464805603, 0.6226666569709778, 0.6936666369438171, 0.734000027179718, 0.7176666855812073, 0.7066666483879089, 0.7540000081062317, 0.7596666812896729, 0.7753333449363708, 0.7876666784286499, 0.7886666655540466, 0.793666660785675, 0.7960000038146973, 0.8056666851043701, 0.7976666688919067, 0.812333345413208, 0.8090000152587891, 0.8050000071525574, 0.8100000023841858, 0.8230000138282776, 0.812333345413208, 0.8233333230018616, 0.8106666803359985, 0.8346666693687439, 0.8333333134651184, 0.8259999752044678, 0.8306666612625122, 0.8389999866485596, 0.8386666774749756, 0.8393333554267883, 0.8323333263397217, 0.8403333425521851, 0.8389999866485596, 0.8336666822433472, 0.8293333053588867, 0.8336666822433472, 0.8443333506584167, 0.8506666421890259, 0.8339999914169312, 0.8460000157356262, 0.8429999947547913, 0.8536666631698608, 0.8496666550636292, 0.8526666760444641, 0.8579999804496765, 0.847000002861023, 0.8506666421890259, 0.8510000109672546, 0.846666693687439, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 4, 5, 3, 5, 9], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [93, 1], [1, 0, 0, 1, 0, 0, 0, 0], [4, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.12371428310871124, "mapping_values": [1, 10, 7, 3, 3, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.100502846972895e+25, 2.5060545154333996e+25, 2.480422995127281e+25, 2.4189040259786635e+25, 2.4544834141951317e+25, 2.5367609656184966e+25], "accuracy": [0.1018359512090683, 0.10593052208423615, 0.10302469879388809, 0.10910051316022873, 0.10830801725387573, 0.11108175665140152], "val_loss": [1.67973757221405e+25, 1.67973757221405e+25, 1.67973757221405e+25, 1.67973757221405e+25, 1.67973757221405e+25, 1.67973757221405e+25], "val_accuracy": [0.12666666507720947, 0.12666666507720947, 0.12666666507720947, 0.12666666507720947, 0.12666666507720947, 0.12666666507720947]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [7, 2, 3, 5, 3, 5, 0, 5, 7, 9, 3], [0, 0, 1, 0, 1, 0], [0, 39, 39, 78, 78], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 6, 3, 8, 2, 2, 0], [2, 0, 3, 1, 0, 0], [47, 1, 43], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 6], [0, 7, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.square(tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}, "mapping_values": [1, 17, 11, 6, 5, 15, 9, 6, 3, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 2, 5, 6, 3, 8, 2], [4, 0, 0, 1, 0], [22, 45], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 3, 5], [0, 4, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 5, 1, 6, 3, 6, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 2, 5, 0, 7, 2, 0, 0, 1], [0, 7, 1, 0, 0, 6], [0, 1, 49], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 17, 11, 6, 3, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad)))))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30971360206604, 2.310852289199829, 2.3098409175872803, 2.308648109436035, 2.310628890991211, 2.3105790615081787], "accuracy": [0.09826971590518951, 0.08942015469074249, 0.09021265059709549, 0.09496764093637466, 0.09021265059709549, 0.09589222073554993], "val_loss": [2.3089427947998047, 2.3089427947998047, 2.3089427947998047, 2.3089427947998047, 2.3089427947998047, 2.3089427947998047], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]