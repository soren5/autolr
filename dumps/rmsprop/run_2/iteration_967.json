[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2133901119232178, 1.6065659523010254, 1.1490676403045654, 0.9937951564788818, 0.8933769464492798, 0.8298743367195129, 0.8021923303604126, 0.773977518081665, 0.7367628812789917, 0.7155200242996216, 0.6825183629989624, 0.6942030787467957, 0.6632819771766663, 0.634678065776825, 0.6211480498313904, 0.6311250329017639, 0.6138557195663452, 0.5937211513519287, 0.5983827114105225, 0.5769383311271667, 0.564547598361969, 0.5522697567939758, 0.5444631576538086, 0.5383822321891785, 0.5307888388633728, 0.5356733798980713, 0.5264644622802734, 0.5150828957557678, 0.5006747841835022, 0.5156356692314148, 0.491488516330719, 0.4904654324054718, 0.4908379912376404, 0.49453362822532654, 0.4793053865432739, 0.4679728150367737, 0.4660148322582245, 0.4577765464782715, 0.4537656009197235, 0.4430166184902191, 0.4414953589439392, 0.4487450420856476, 0.4336579740047455, 0.4279542565345764, 0.42594078183174133, 0.4190191626548767, 0.4265056848526001, 0.41657754778862], "accuracy": [0.2712983787059784, 0.5122177004814148, 0.5988640785217285, 0.6421872973442078, 0.6748117804527283, 0.6956809163093567, 0.7024171352386475, 0.7119271159172058, 0.7257958054542542, 0.7316074371337891, 0.7504953145980835, 0.737022876739502, 0.7530049085617065, 0.7580240368843079, 0.7676661014556885, 0.7622507214546204, 0.7729493975639343, 0.7816668748855591, 0.7774402499198914, 0.7874785661697388, 0.7881389260292053, 0.7984414100646973, 0.793422281742096, 0.7975168228149414, 0.8053097128868103, 0.798309326171875, 0.804649293422699, 0.8094043135643005, 0.8169330358505249, 0.8059701323509216, 0.8207634687423706, 0.8171972036361694, 0.8212917447090149, 0.8173292875289917, 0.8211596608161926, 0.8251221776008606, 0.8323867321014404, 0.8363492488861084, 0.82683926820755, 0.8356888294219971, 0.8388587832450867, 0.83119797706604, 0.8403117060661316, 0.839519202709198, 0.8442742228507996, 0.847840428352356, 0.8397833704948425, 0.8461233377456665], "val_loss": [1.9302809238433838, 1.1624444723129272, 0.9132485389709473, 0.8086555004119873, 0.7802565097808838, 0.7078354358673096, 0.6868861317634583, 0.6373949646949768, 0.6169462203979492, 0.5821000933647156, 0.5697382092475891, 0.5901715755462646, 0.583250105381012, 0.5436181426048279, 0.5359228253364563, 0.5229836702346802, 0.5349673628807068, 0.5243740081787109, 0.5246764421463013, 0.49372169375419617, 0.5139885544776917, 0.48324763774871826, 0.4801470637321472, 0.46798446774482727, 0.5070046186447144, 0.4787108600139618, 0.4827142655849457, 0.4510417580604553, 0.46035218238830566, 0.4803108870983124, 0.43703755736351013, 0.4529689848423004, 0.44594088196754456, 0.4317394495010376, 0.4310648739337921, 0.4239482283592224, 0.42995795607566833, 0.4253328740596771, 0.41473567485809326, 0.4205092489719391, 0.417692631483078, 0.4156307876110077, 0.4058554172515869, 0.4035857021808624, 0.41888460516929626, 0.4059770405292511, 0.4042474627494812, 0.3936358094215393], "val_accuracy": [0.5563333630561829, 0.5873333215713501, 0.6766666769981384, 0.7009999752044678, 0.7149999737739563, 0.7236666679382324, 0.7443333268165588, 0.7583333253860474, 0.7643333077430725, 0.7799999713897705, 0.7910000085830688, 0.781333327293396, 0.7853333353996277, 0.8073333501815796, 0.8036666512489319, 0.8103333115577698, 0.7990000247955322, 0.8043333292007446, 0.7896666526794434, 0.8203333616256714, 0.8053333163261414, 0.8180000185966492, 0.8230000138282776, 0.8316666483879089, 0.812333345413208, 0.812666654586792, 0.8136666417121887, 0.8366666436195374, 0.8330000042915344, 0.8203333616256714, 0.8423333168029785, 0.8309999704360962, 0.8379999995231628, 0.843999981880188, 0.8446666598320007, 0.8416666388511658, 0.8453333377838135, 0.8426666855812073, 0.8503333330154419, 0.8456666469573975, 0.8526666760444641, 0.8503333330154419, 0.8583333492279053, 0.8500000238418579, 0.8423333168029785, 0.8536666631698608, 0.8536666631698608, 0.8569999933242798]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 9, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 2, 4, 2, 3, 7, 6, 3, 4, 0, 1, 2, 2, 0, 9], [0, 6, 1, 6, 5, 0, 0, 4, 7, 6, 7], [83, 30, 63, 74], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 10, 6, 4, 1, 26, 15, 11, 4, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.pow(alpha, grad))), grad), tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(tf.math.add(grad, grad), grad))), tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 8, 2, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 2, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 9, 5, 2, 1], [0, 6, 6, 6, 0], [0, 84], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 6, 5, 1, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303506374359131, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 2, 1, 6, 3, 8, 2, 5], [2, 0, 3, 1, 0, 3], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [1], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 14, 8, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.311246871948242, 2.3086509704589844, 2.3101532459259033, 2.3114430904388428, 2.3101041316986084, 2.30961012840271], "accuracy": [0.09153348207473755, 0.09008057415485382, 0.09325055778026581, 0.09219389408826828, 0.08981640636920929, 0.08875974267721176], "val_loss": [2.3087263107299805, 2.3087263107299805, 2.3087263107299805, 2.3087263107299805, 2.3087263107299805, 2.3087263107299805], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 7, 0, 7, 5, 2, 1, 1, 7, 4, 8, 5, 4, 0, 2, 4, 6, 0, 9, 3, 1, 2], [0, 6, 1, 6, 1, 6, 5, 2, 4, 1, 7, 3, 6, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 36, 22, 14, 2, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.square(tf.math.pow(grad, alpha))), tf.math.negative(grad)), tf.math.add(tf.math.pow(tf.math.divide_no_nan(grad, beta), tf.math.negative(grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), alpha)))), tf.math.multiply(tf.math.subtract(grad, tf.math.add(sigma, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310377359390259, 2.3109841346740723, 2.312532424926758, 2.3106117248535156, 2.310504198074341, 2.309934139251709], "accuracy": [0.09126931428909302, 0.09008057415485382, 0.08836349099874496, 0.09074098616838455, 0.08915598690509796, 0.09417514503002167], "val_loss": [2.3085129261016846, 2.3085129261016846, 2.3085129261016846, 2.3085129261016846, 2.3085129261016846, 2.3085129261016846], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]