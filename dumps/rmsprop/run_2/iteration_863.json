[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [3, 2, 3, 2, 3, 5, 7, 2, 2, 4, 0, 1, 1, 6, 6, 3, 6, 4, 3, 5, 4, 4, 4, 8, 5, 7], [0, 2, 1, 0, 0, 0, 3, 1, 0, 3, 2, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 3], [0, 39, 39, 45, 20, 69, 2], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 8, 0, 2, 6, 2, 1, 5, 7], [0, 6, 1, 6, 0, 1, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "mapping_values": [1, 48, 26, 22, 7, 12, 7, 5, 2, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.sqrt(grad), tf.math.square(grad))))), grad), grad), grad)), alpha))), alpha), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.math.square(alpha), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.1914682388305664, 1.4851235151290894, 1.0769773721694946, 0.9432492852210999, 0.8555058836936951, 0.7633835077285767, 0.7763043642044067, 0.7273222804069519, 0.7083185911178589, 0.6620799899101257, 0.6666206121444702, 0.649844229221344, 0.6419610977172852, 0.6386247873306274, 0.6152490973472595, 0.6111280918121338, 0.5713832378387451, 0.5799817442893982, 0.585139274597168, 0.5647526383399963, 0.5457185506820679, 0.5525823831558228, 0.5502903461456299, 0.5287288427352905, 0.5358959436416626, 0.519525945186615, 0.5067940354347229, 0.5018995404243469], "accuracy": [0.2794875204563141, 0.4931977391242981, 0.6135252714157104, 0.6584334969520569, 0.6847180128097534, 0.7152291536331177, 0.713379979133606, 0.7181349992752075, 0.7290979027748108, 0.750759482383728, 0.7445515990257263, 0.7561748623847961, 0.7549861073493958, 0.76106196641922, 0.7593448758125305, 0.7662131786346436, 0.7860256433486938, 0.7868181467056274, 0.7770439982414246, 0.7866860628128052, 0.7976489067077637, 0.7909126877784729, 0.791969358921051, 0.8037247657775879, 0.7927618622779846, 0.8029322624206543, 0.8090080618858337, 0.8148196935653687], "val_loss": [1.7672463655471802, 0.9762827157974243, 0.9052961468696594, 0.7793113589286804, 0.674144446849823, 0.7076516151428223, 0.6508275270462036, 0.6312094926834106, 0.6286443471908569, 0.6312407851219177, 0.584044337272644, 0.5867289304733276, 0.6544271111488342, 0.5642706155776978, 0.5627381205558777, 0.5320661664009094, 0.5376346111297607, 0.5454848408699036, 0.50992751121521, 0.5191303491592407, 0.5183895826339722, 0.5097945332527161, 0.47959285974502563, 0.5151788592338562, 0.4687632918357849, 0.4627854526042938, 0.46979138255119324, 0.4820164442062378], "val_accuracy": [0.5043333172798157, 0.6700000166893005, 0.6629999876022339, 0.7116666436195374, 0.7506666779518127, 0.7233333587646484, 0.750333309173584, 0.7606666684150696, 0.7516666650772095, 0.7549999952316284, 0.7723333239555359, 0.7799999713897705, 0.7450000047683716, 0.777999997138977, 0.7876666784286499, 0.8009999990463257, 0.800000011920929, 0.7826666831970215, 0.8116666674613953, 0.7986666560173035, 0.7910000085830688, 0.8090000152587891, 0.8323333263397217, 0.8016666769981384, 0.8273333311080933, 0.8320000171661377, 0.8273333311080933, 0.8190000057220459]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7902857065200806, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2120306491851807, 1.6170111894607544, 1.1440132856369019, 1.0122640132904053, 0.880125880241394, 0.8113724589347839, 0.7783267498016357, 0.7595347166061401, 0.7194449305534363, 0.6900597810745239, 0.6973930597305298, 0.6603362560272217, 0.649503231048584, 0.6524595618247986, 0.6182143092155457, 0.6335240602493286, 0.593833327293396, 0.5912061333656311], "accuracy": [0.2639017403125763, 0.499009370803833, 0.6029586791992188, 0.6425835490226746, 0.6840575933456421, 0.7021529674530029, 0.7150970697402954, 0.7197200059890747, 0.7309470176696777, 0.7407211661338806, 0.7396644949913025, 0.7491744756698608, 0.759080708026886, 0.7524765729904175, 0.7708360552787781, 0.7623828053474426, 0.7751948237419128, 0.7790252566337585], "val_loss": [1.9241738319396973, 1.099453091621399, 0.9938883185386658, 0.8617399334907532, 0.7063716650009155, 0.7139672636985779, 0.7009720206260681, 0.628610372543335, 0.6254629492759705, 0.6196244955062866, 0.6131346225738525, 0.5810840129852295, 0.5669028162956238, 0.5702441930770874, 0.6092758178710938, 0.5387315154075623, 0.5675177574157715, 0.5301920771598816], "val_accuracy": [0.5683333277702332, 0.6516666412353516, 0.6763333082199097, 0.6396666765213013, 0.7406666874885559, 0.7153333425521851, 0.734000027179718, 0.7689999938011169, 0.7649999856948853, 0.7583333253860474, 0.7599999904632568, 0.778333306312561, 0.7919999957084656, 0.778333306312561, 0.750333309173584, 0.7903333306312561, 0.7883333563804626, 0.7913333177566528]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 6, 3, 2, 3, 5], [0, 0, 1, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 2], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 7, 3, 4, 2, 12, 7, 5, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103199005126953, 2.3100388050079346, 2.3107454776763916, 2.310354232788086, 2.310420513153076, 2.310793161392212], "accuracy": [0.09060890227556229, 0.0948355570435524, 0.09060890227556229, 0.09602430462837219, 0.09219389408826828, 0.09021265059709549], "val_loss": [2.3090078830718994, 2.3090078830718994, 2.3090078830718994, 2.3090078830718994, 2.3090078830718994, 2.3090078830718994], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [5, 0, 3, 7, 3, 6], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 6, 3, 8, 2, 4, 9], [2, 0, 1, 1, 0, 3], [19, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 5, 2, 0], [0, 6, 1, 6, 0], [0, 22], [1], [0], [0], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 1, 1, 1, 15, 9, 6, 3, 8, 5, 3, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3096909523010254, 2.308462142944336, 2.310809373855591, 2.310248613357544, 2.309277057647705, 2.311021327972412], "accuracy": [0.09708096832036972, 0.09628847241401672, 0.09166556596755981, 0.09866596013307571, 0.09576013684272766, 0.09126931428909302], "val_loss": [2.308624029159546, 2.308624029159546, 2.308624029159546, 2.308624029159546, 2.308624029159546, 2.308624029159546], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 3, 3, 2, 2, 5], [1, 2, 1, 0, 1], [89, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [1, 6, 1, 5, 0], [0, 22], [1], [0], [0], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 8, 5, 3, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(alpha), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3109030723571777, 2.308898687362671, 2.310950517654419, 2.3099873065948486, 2.309816360473633, 2.3101189136505127], "accuracy": [0.08691058307886124, 0.09681680053472519, 0.09338264167308807, 0.0870426595211029, 0.09615638852119446, 0.09074098616838455], "val_loss": [2.308764696121216, 2.308764696121216, 2.308764696121216, 2.308764696121216, 2.308764696121216, 2.308764696121216], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]