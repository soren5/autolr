[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8434285521507263, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2125298976898193, 1.614547848701477, 1.1290711164474487, 0.9871566295623779, 0.8653366565704346, 0.8339346647262573, 0.7828046679496765, 0.7542711496353149, 0.7251036167144775, 0.7011696100234985, 0.6751696467399597, 0.6578800678253174, 0.6653907299041748, 0.6332180500030518, 0.6513482332229614, 0.6182831525802612, 0.589540958404541, 0.5945173501968384, 0.5864585041999817, 0.5765161514282227, 0.557718813419342, 0.5502282977104187, 0.5361023545265198, 0.5362585186958313, 0.5255611538887024, 0.5161798000335693, 0.511929988861084, 0.49895450472831726, 0.5054513216018677, 0.5076126456260681, 0.4965289831161499, 0.4824675917625427, 0.4787840247154236, 0.47736144065856934, 0.46663618087768555, 0.46337592601776123, 0.45663851499557495, 0.4613186717033386, 0.4533391296863556, 0.4412287771701813, 0.4460445046424866, 0.43362554907798767, 0.4348733127117157, 0.42937377095222473, 0.4342081546783447, 0.4277478754520416, 0.4199307858943939, 0.4178129732608795, 0.4082796275615692, 0.406625896692276, 0.410980224609375, 0.39786845445632935, 0.40359437465667725, 0.39155352115631104, 0.3837343156337738, 0.3901017904281616, 0.3869546055793762, 0.37988337874412537, 0.3884315490722656], "accuracy": [0.2658829689025879, 0.50350022315979, 0.6050719618797302, 0.6557918190956116, 0.6865671873092651, 0.6933034062385559, 0.7117950320243835, 0.719852089881897, 0.7280412316322327, 0.735569953918457, 0.750759482383728, 0.7604015469551086, 0.748778223991394, 0.7611940503120422, 0.7598732113838196, 0.7687227725982666, 0.7779685854911804, 0.778232753276825, 0.7837802171707153, 0.7781006693840027, 0.7872143983840942, 0.7976489067077637, 0.798309326171875, 0.800818920135498, 0.8009510040283203, 0.8050455451011658, 0.8088759779930115, 0.8119139075279236, 0.8100647330284119, 0.8123101592063904, 0.8171972036361694, 0.8208954930305481, 0.8211596608161926, 0.819442629814148, 0.8281601071357727, 0.8261788487434387, 0.8319904804229736, 0.8308017253875732, 0.8284242749214172, 0.8347642421722412, 0.8317263126373291, 0.8381983637809753, 0.8407079577445984, 0.8442742228507996, 0.8385946154594421, 0.8401796221733093, 0.8451988101005554, 0.8449346423149109, 0.8500858545303345, 0.8508783578872681, 0.8485008478164673, 0.8560295701026917, 0.8486329317092896, 0.8564258217811584, 0.8548408150672913, 0.8541803956031799, 0.8556333184242249, 0.8625016212463379, 0.8555012345314026], "val_loss": [1.9253334999084473, 1.097030520439148, 0.8777270317077637, 0.8635177612304688, 0.7419898509979248, 0.6730071902275085, 0.6620460152626038, 0.6376253366470337, 0.6185600757598877, 0.5899286270141602, 0.5805581212043762, 0.5878682136535645, 0.5516722202301025, 0.5412274599075317, 0.5601657032966614, 0.5229986310005188, 0.5135444402694702, 0.5266703963279724, 0.49926894903182983, 0.5122690200805664, 0.5038886666297913, 0.48901546001434326, 0.5107631087303162, 0.48319825530052185, 0.4557163119316101, 0.4712253510951996, 0.46137940883636475, 0.46726903319358826, 0.4792126417160034, 0.4487156271934509, 0.4428991675376892, 0.45794934034347534, 0.43318286538124084, 0.43844714760780334, 0.43372249603271484, 0.4251481890678406, 0.4380546808242798, 0.41497600078582764, 0.42357137799263, 0.42394521832466125, 0.43549874424934387, 0.41617098450660706, 0.4088931977748871, 0.41111230850219727, 0.4117158055305481, 0.4262429177761078, 0.4339272975921631, 0.3985040783882141, 0.3985000550746918, 0.4010668098926544, 0.4008159935474396, 0.39821571111679077, 0.39747485518455505, 0.39152929186820984, 0.39858800172805786, 0.3831782341003418, 0.3959499001502991, 0.40335530042648315, 0.39766356348991394], "val_accuracy": [0.5720000267028809, 0.6586666703224182, 0.7013333439826965, 0.6959999799728394, 0.7153333425521851, 0.7459999918937683, 0.7426666617393494, 0.7429999709129333, 0.7696666717529297, 0.762666642665863, 0.7689999938011169, 0.75, 0.7760000228881836, 0.7873333096504211, 0.7910000085830688, 0.7976666688919067, 0.7946666479110718, 0.7896666526794434, 0.8029999732971191, 0.8016666769981384, 0.7950000166893005, 0.8159999847412109, 0.7960000038146973, 0.8220000267028809, 0.8270000219345093, 0.8176666498184204, 0.8246666789054871, 0.8233333230018616, 0.8036666512489319, 0.8276666402816772, 0.8360000252723694, 0.8240000009536743, 0.8363333344459534, 0.8336666822433472, 0.8363333344459534, 0.8386666774749756, 0.828000009059906, 0.8403333425521851, 0.8363333344459534, 0.8389999866485596, 0.8303333520889282, 0.8366666436195374, 0.8460000157356262, 0.843999981880188, 0.8416666388511658, 0.8420000076293945, 0.8349999785423279, 0.846666693687439, 0.8476666808128357, 0.8476666808128357, 0.8463333249092102, 0.8493333458900452, 0.8456666469573975, 0.8550000190734863, 0.8533333539962769, 0.8546666502952576, 0.8526666760444641, 0.846666693687439, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 9, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 47, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 0, 1, 0], [16, 1, 10], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 0, 2, 0, 2, 9], [0, 4, 1, 7, 0], [0, 43], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 12, 7, 5, 3, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.362130880355835, 3.060729742050171, 5.090839385986328, 8.673067092895508, 13.63489055633545, 20.4653377532959], "accuracy": [0.09589222073554993, 0.1010434553027153, 0.10276053100824356, 0.09734513610601425, 0.10276053100824356, 0.09734513610601425], "val_loss": [2.44512939453125, 3.3153417110443115, 5.481515407562256, 8.920144081115723, 13.586084365844727, 19.55231285095215], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5, 6, 8, 8, 0], [0, 1, 1, 0, 2, 0], [0, 97, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 5, 2, 1], [0, 4, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 5, 3, 2, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha)), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036844730377197, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 3, 2, 8, 5, 1, 5, 4, 3, 9, 7, 8, 9, 3, 9], [0, 2, 1, 0, 2, 1], [76, 39, 39, 46, 35], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 2, 3, 8, 2], [2, 5, 3, 1, 0], [54, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 8], [0, 6, 1, 6, 0], [0, 49], [1], [0], [2], [0]], "fitness": -0.09571428596973419, "mapping_values": [1, 22, 16, 6, 5, 4, 3, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.square(tf.math.subtract(tf.math.square(alpha), tf.math.pow(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, alpha)))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310042381286621, 2.3105368614196777, 2.3110196590423584, 2.3098552227020264, 2.3100411891937256, 2.3101255893707275], "accuracy": [0.09034473448991776, 0.09087307006120682, 0.09351472556591034, 0.09457138925790787, 0.08981640636920929, 0.09285431355237961], "val_loss": [2.3088109493255615, 2.3088109493255615, 2.3088109493255615, 2.3088109493255615, 2.3088109493255615, 2.3088109493255615], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 3, 6, 1, 6], [0, 6, 1, 6, 0, 0, 3], [0, 22, 70], [1], [0], [2], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 16, 9, 7, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311056137084961, 2.3107593059539795, 2.31030011177063, 2.310062885284424, 2.3090434074401855, 2.3101346492767334], "accuracy": [0.09166556596755981, 0.08942015469074249, 0.09153348207473755, 0.08889182657003403, 0.09206181764602661, 0.09787346422672272], "val_loss": [2.308314561843872, 2.308314561843872, 2.308314561843872, 2.308314561843872, 2.308314561843872, 2.308314561843872], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]