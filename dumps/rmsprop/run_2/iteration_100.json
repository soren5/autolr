[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210861921310425, 1.6019264459609985, 1.1555066108703613, 0.9944705367088318, 0.8707736134529114, 0.8353954553604126, 0.8002913594245911, 0.7582798004150391, 0.7445253133773804, 0.6940594911575317, 0.6904056072235107, 0.6783596873283386, 0.6799718141555786, 0.6406733989715576, 0.6436249613761902, 0.6325852870941162, 0.6072844862937927, 0.5943005084991455, 0.5860515236854553, 0.6002166271209717, 0.5700955390930176, 0.5588333010673523, 0.5556083917617798, 0.5622689723968506, 0.5307806134223938, 0.5307194590568542, 0.5263370275497437, 0.5266138315200806, 0.528926432132721, 0.503917932510376, 0.5134598016738892, 0.502266526222229, 0.4919244349002838, 0.4895099699497223, 0.48022741079330444, 0.48029860854148865, 0.4713110327720642], "accuracy": [0.26244881749153137, 0.5105006098747253, 0.601109504699707, 0.6482630968093872, 0.6827367544174194, 0.6936996579170227, 0.7069079279899597, 0.7156254053115845, 0.7220974564552307, 0.7445515990257263, 0.7441553473472595, 0.7548540234565735, 0.7486461400985718, 0.7622507214546204, 0.7650244235992432, 0.7604015469551086, 0.7745344042778015, 0.7792893648147583, 0.7868181467056274, 0.774798572063446, 0.791969358921051, 0.7869502305984497, 0.7903843522071838, 0.7950072884559631, 0.8034605979919434, 0.8025360107421875, 0.8063663840293884, 0.8096684813499451, 0.8045172095298767, 0.8168009519577026, 0.8096684813499451, 0.819442629814148, 0.8204993009567261, 0.8198388814926147, 0.8260467648506165, 0.8245938420295715, 0.8314621448516846], "val_loss": [1.9231375455856323, 1.1028344631195068, 0.902317464351654, 0.7999187111854553, 0.7161120772361755, 0.695851743221283, 0.6921270489692688, 0.6231908202171326, 0.6205978393554688, 0.6003799438476562, 0.6054431200027466, 0.5932537913322449, 0.5980947613716125, 0.5799747109413147, 0.5644623041152954, 0.5396459698677063, 0.5483762621879578, 0.5309212803840637, 0.5875841379165649, 0.5230785608291626, 0.5091641545295715, 0.5056445598602295, 0.5064765810966492, 0.5054593086242676, 0.49887189269065857, 0.5083268880844116, 0.4997927248477936, 0.49761027097702026, 0.47268909215927124, 0.510529637336731, 0.463326632976532, 0.46444448828697205, 0.47763437032699585, 0.4676333963871002, 0.5125709772109985, 0.46719804406166077, 0.46671658754348755], "val_accuracy": [0.5740000009536743, 0.6660000085830688, 0.6759999990463257, 0.722000002861023, 0.7409999966621399, 0.7443333268165588, 0.734000027179718, 0.7710000276565552, 0.7699999809265137, 0.7796666622161865, 0.7736666798591614, 0.7886666655540466, 0.7680000066757202, 0.7850000262260437, 0.7903333306312561, 0.8036666512489319, 0.7900000214576721, 0.8113333582878113, 0.7723333239555359, 0.8119999766349792, 0.8133333325386047, 0.8153333067893982, 0.8183333277702332, 0.8203333616256714, 0.8216666579246521, 0.8096666932106018, 0.8199999928474426, 0.8203333616256714, 0.8320000171661377, 0.815666675567627, 0.8376666903495789, 0.8383333086967468, 0.8266666531562805, 0.8346666693687439, 0.8166666626930237, 0.8333333134651184, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [85, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 3, 7, 2, 6, 5, 0], [1, 6, 1, 2, 1, 1, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 9, 5, 4, 1, 18, 11, 7, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.math.square(alpha)), tf.math.negative(alpha)))), tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033080101013184, 2.302626848220825, 2.302622079849243, 2.3026392459869385, 2.302640676498413, 2.3026411533355713], "accuracy": [0.10038304328918457, 0.09972262382507324, 0.10051512718200684, 0.09985470771789551, 0.09972262382507324, 0.09945846349000931], "val_loss": [2.3025400638580322, 2.302539825439453, 2.302539825439453, 2.302539825439453, 2.302539825439453, 2.302539825439453], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 5], [0, 6, 1], [98], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.5505616664886475, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.273735523223877, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 0, 8, 2], [2, 0, 5, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [7, 2, 0, 5, 5], [0, 6, 7], [88], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 8, 5, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5283563137054443, 2.400273561477661, 2.3033623695373535, 2.3030478954315186, 2.303574562072754, 2.3045742511749268, 2.3028676509857178, 2.3030128479003906], "accuracy": [0.19957733154296875, 0.09259014576673508, 0.1002509593963623, 0.09774138033390045, 0.09457138925790787, 0.0936468094587326, 0.09509972482919693, 0.09549596905708313], "val_loss": [2.7889175415039062, 2.3033080101013184, 2.302730083465576, 2.3027310371398926, 2.308297872543335, 2.3025050163269043, 2.3025386333465576, 2.3026556968688965], "val_accuracy": [0.10199999809265137, 0.09933333098888397, 0.10400000214576721, 0.09833333641290665, 0.09799999743700027, 0.09933333098888397, 0.10400000214576721, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 1, 2, 9], [0, 0, 1, 0, 2, 3], [0, 39, 39, 66], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 6, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [16, 99], [0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [83], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 15, 9, 6, 4, 6, 4, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308703899383545, 2.31064510345459, 2.3096697330474854, 2.310281276702881, 2.309239387512207, 2.309724807739258], "accuracy": [0.09681680053472519, 0.0952318087220192, 0.09140139818191528, 0.08691058307886124, 0.09391097724437714, 0.09496764093637466], "val_loss": [2.3080382347106934, 2.3080382347106934, 2.3080382347106934, 2.3080382347106934, 2.3080382347106934, 2.3080382347106934], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]