[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210686683654785, 1.6101350784301758, 1.1488757133483887, 0.9782757759094238, 0.8577970862388611, 0.83506840467453, 0.7715069055557251, 0.7417638897895813, 0.7394428849220276, 0.698320746421814, 0.6818733811378479, 0.662752091884613, 0.6340463757514954, 0.62644362449646, 0.6183876991271973, 0.5978630185127258, 0.5810426473617554, 0.5699948668479919, 0.5756552219390869, 0.5750600695610046, 0.5490692257881165, 0.5393807888031006, 0.5394981503486633, 0.5277245044708252, 0.5150789022445679, 0.502055823802948, 0.4984191358089447, 0.5140129327774048, 0.504899263381958, 0.48112305998802185, 0.4995144009590149, 0.4787871539592743, 0.47210466861724854, 0.4714013636112213, 0.4572423994541168, 0.4533015489578247, 0.4650997817516327, 0.44313639402389526, 0.44627928733825684, 0.4403962790966034, 0.43299734592437744, 0.4230116307735443, 0.43053218722343445, 0.4267538785934448], "accuracy": [0.26244881749153137, 0.4987452030181885, 0.5993924140930176, 0.6499801874160767, 0.6927750706672668, 0.6948884129524231, 0.7143045663833618, 0.7193237543106079, 0.7211728692054749, 0.7434949278831482, 0.7429665923118591, 0.7499669790267944, 0.7561748623847961, 0.7569673657417297, 0.7688548564910889, 0.7757231593132019, 0.780610203742981, 0.7854973077774048, 0.7865539789199829, 0.783119797706604, 0.7890635132789612, 0.8012151718139648, 0.7977809906005859, 0.8037247657775879, 0.8043851256370544, 0.8084797263145447, 0.8150838613510132, 0.8059701323509216, 0.8062343001365662, 0.8224804997444153, 0.8191784620285034, 0.8220842480659485, 0.8210275769233704, 0.8235371708869934, 0.829216718673706, 0.832650899887085, 0.8272355198860168, 0.8337075710296631, 0.835160493850708, 0.8352925777435303, 0.8412362933158875, 0.8399154543876648, 0.8392550349235535, 0.8429533839225769], "val_loss": [1.9285027980804443, 1.1393578052520752, 0.9485326409339905, 0.8012680411338806, 0.8059934973716736, 0.7255346775054932, 0.6689051389694214, 0.7447153329849243, 0.6575829386711121, 0.6262935400009155, 0.686922550201416, 0.5939698219299316, 0.6198956966400146, 0.5850222110748291, 0.5686503648757935, 0.5719404220581055, 0.5658001899719238, 0.56973797082901, 0.5654255151748657, 0.55671626329422, 0.5284334421157837, 0.5521906018257141, 0.5281445980072021, 0.5107826590538025, 0.5048982501029968, 0.5200701355934143, 0.4928155243396759, 0.5099319815635681, 0.4961909055709839, 0.5105140209197998, 0.4879723787307739, 0.4828932285308838, 0.49294519424438477, 0.5008354783058167, 0.47217294573783875, 0.500958263874054, 0.45943382382392883, 0.4689253866672516, 0.45067235827445984, 0.47224926948547363, 0.4507763683795929, 0.454495370388031, 0.4626360535621643, 0.46869561076164246], "val_accuracy": [0.5166666507720947, 0.6349999904632568, 0.6480000019073486, 0.7003333568572998, 0.6886666417121887, 0.7179999947547913, 0.7523333430290222, 0.7113333344459534, 0.7440000176429749, 0.7663333415985107, 0.7293333411216736, 0.7789999842643738, 0.765999972820282, 0.7803333401679993, 0.7886666655540466, 0.7836666703224182, 0.7879999876022339, 0.7873333096504211, 0.7879999876022339, 0.7940000295639038, 0.8073333501815796, 0.79666668176651, 0.8073333501815796, 0.8180000185966492, 0.8199999928474426, 0.8029999732971191, 0.828000009059906, 0.8169999718666077, 0.8213333487510681, 0.8109999895095825, 0.8336666822433472, 0.831333339214325, 0.8209999799728394, 0.8180000185966492, 0.8376666903495789, 0.8193333148956299, 0.8416666388511658, 0.8376666903495789, 0.8460000157356262, 0.8399999737739563, 0.843999981880188, 0.8386666774749756, 0.8363333344459534, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 3, 8], [0, 2, 1, 0, 2, 1], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [7, 2, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0, 1], [16, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 12, 6, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.502522945404053, 57.990474700927734, 203.65274047851562, 490.3451843261719, 988.8574829101562, 1784.9859619140625], "accuracy": [0.09879804402589798, 0.10328886657953262, 0.10038304328918457, 0.10170386731624603, 0.10210011899471283, 0.10276053100824356], "val_loss": [20.578231811523438, 96.26775360107422, 266.69244384765625, 581.0302734375, 1088.030517578125, 1836.893798828125], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 8], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 9, 2], [3, 0, 3, 1, 0], [44, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [9, 2, 0, 2, 5, 2, 1], [0, 7, 1, 4, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 1, 5, 3, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303752899169922, 2.56526780128479, 19.38433265686035, 89.3565673828125, 216.8391876220703, 402.407958984375], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3138415813446045, 5.188121795654297, 51.329071044921875, 155.142578125, 316.6752014160156, 535.7591552734375], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 5, 3, 0, 3, 3, 6, 0, 1, 3, 0, 8], [1, 2, 1, 0, 2, 1, 2, 0, 0, 0, 3], [0, 45, 39, 69], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2, 5], [2, 0, 3, 1, 0, 2], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [9, 2, 0, 2, 5, 2, 1], [4, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 4, 14, 8, 6, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(tf.math.square(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(alpha, tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [5, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 0, 2, 1, 2, 1], [5, 6, 1, 6, 0], [39, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 9, 5, 4, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.subtract(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3090333938598633, 2.3086934089660645, 2.309696912765503, 2.3102385997772217, 2.3116846084594727, 2.3094773292541504], "accuracy": [0.0944393053650856, 0.09549596905708313, 0.09126931428909302, 0.09377889335155487, 0.08387266844511032, 0.08902391046285629], "val_loss": [2.3085381984710693, 2.3085381984710693, 2.3085381984710693, 2.3085381984710693, 2.3085381984710693, 2.3085381984710693], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]