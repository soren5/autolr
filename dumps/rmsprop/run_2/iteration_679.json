[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091264724731445, 1.5946080684661865, 1.152282476425171, 0.9649243950843811, 0.90789794921875, 0.8404594659805298, 0.7685535550117493, 0.7843498587608337, 0.7458181977272034, 0.7132943272590637, 0.7025259733200073, 0.6800075173377991, 0.6790167093276978, 0.6412395238876343, 0.6253370046615601, 0.6434376835823059, 0.6179971694946289, 0.5862727165222168, 0.6008686423301697, 0.5839276313781738, 0.5920968055725098, 0.5685945749282837, 0.5626901388168335, 0.5442633032798767, 0.5468217730522156, 0.5488665699958801, 0.528656005859375, 0.5242922902107239, 0.5116559863090515, 0.5054773092269897, 0.506497323513031, 0.49577227234840393, 0.504370927810669, 0.49169546365737915, 0.4857207238674164], "accuracy": [0.26865673065185547, 0.509311854839325, 0.5958262085914612, 0.6440364718437195, 0.6700568199157715, 0.6911900639533997, 0.7176066637039185, 0.7080966830253601, 0.7230220437049866, 0.7326641082763672, 0.7359662055969238, 0.7425703406333923, 0.7433628439903259, 0.7605336308479309, 0.7692511081695557, 0.7555144429206848, 0.769911527633667, 0.7802139520645142, 0.7774402499198914, 0.7794214487075806, 0.7755910754203796, 0.789988100528717, 0.791969358921051, 0.7993659973144531, 0.796328067779541, 0.793950617313385, 0.8094043135643005, 0.8067626357078552, 0.8098005652427673, 0.8140271902084351, 0.8144234418869019, 0.8210275769233704, 0.8185180425643921, 0.8186501264572144, 0.8249900937080383], "val_loss": [1.9170207977294922, 1.0936903953552246, 0.8654884696006775, 0.7583876848220825, 0.7375584244728088, 0.6785239577293396, 0.6826715469360352, 0.649171769618988, 0.6398115754127502, 0.617646336555481, 0.6223435997962952, 0.5805405378341675, 0.5682789087295532, 0.5818343758583069, 0.5663121938705444, 0.5495806336402893, 0.537299633026123, 0.5407372117042542, 0.5152382254600525, 0.5687251091003418, 0.5075739622116089, 0.5336141586303711, 0.49286141991615295, 0.5026755332946777, 0.49824023246765137, 0.49425822496414185, 0.4877478778362274, 0.47471216320991516, 0.4600961208343506, 0.453298419713974, 0.46404168009757996, 0.4686906635761261, 0.46439558267593384, 0.4586016535758972, 0.4380960762500763], "val_accuracy": [0.5673333406448364, 0.6683333516120911, 0.7009999752044678, 0.7326666712760925, 0.734333336353302, 0.746999979019165, 0.7179999947547913, 0.7620000243186951, 0.7693333625793457, 0.7716666460037231, 0.7696666717529297, 0.7736666798591614, 0.7889999747276306, 0.7723333239555359, 0.7730000019073486, 0.7986666560173035, 0.8009999990463257, 0.8016666769981384, 0.8100000023841858, 0.7636666893959045, 0.8173333406448364, 0.7916666865348816, 0.8169999718666077, 0.8026666641235352, 0.8180000185966492, 0.8196666836738586, 0.8203333616256714, 0.8266666531562805, 0.8299999833106995, 0.8393333554267883, 0.8273333311080933, 0.8230000138282776, 0.8273333311080933, 0.8339999914169312, 0.8386666774749756]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 2, 3, 5], [0, 2, 1, 0, 2], [17, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 8, 1, 5, 1, 1, 8, 1, 7, 0, 0, 6, 9, 3, 4, 5, 9, 7, 8, 2, 9], [4, 6, 1, 6, 0, 4, 2, 1, 1, 6], [0, 22, 67, 39], [1], [0], [2], [0]], "fitness": -0.7562857270240784, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 35, 25, 10, 4, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.subtract(grad, tf.math.subtract(grad, alpha))), tf.math.sqrt(tf.math.subtract(grad, tf.math.add(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.add(grad, beta)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha))))))), alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.8668335676193237, 1.1868770122528076, 1.0560986995697021, 0.9676915407180786, 0.9487770199775696, 0.9376832246780396, 0.9086268544197083, 0.8887513279914856, 0.8818178176879883, 0.8702387809753418, 0.8617647290229797, 0.8562622666358948, 0.8501296639442444, 0.8444526791572571, 0.8483646512031555, 0.843348503112793, 0.8402374982833862, 0.8215886354446411, 0.8243786692619324, 0.8315746188163757, 0.8203424215316772, 0.8239933848381042, 0.8107492923736572, 0.8156649470329285, 0.8163403868675232, 0.8161682486534119, 0.802415132522583, 0.8276247978210449, 0.8090733289718628, 0.8032633066177368, 0.8103600740432739], "accuracy": [0.3910976052284241, 0.5820895433425903, 0.6300356388092041, 0.656980574131012, 0.6601505875587463, 0.6625280380249023, 0.6736230254173279, 0.6828688383102417, 0.6859067678451538, 0.6856426000595093, 0.6840575933456421, 0.6892088055610657, 0.6948884129524231, 0.6907938122749329, 0.689869225025177, 0.6956809163093567, 0.6983225345611572, 0.7004358768463135, 0.6992471218109131, 0.6956809163093567, 0.7069079279899597, 0.7025492191314697, 0.702681303024292, 0.703209638595581, 0.7012283802032471, 0.7040021419525146, 0.7092854380607605, 0.7014925479888916, 0.7073041796684265, 0.709021270275116, 0.7022850513458252], "val_loss": [1.1610840559005737, 0.8970856070518494, 0.8265570998191833, 0.7824987173080444, 0.7620345950126648, 0.7439661622047424, 0.7336332201957703, 0.7229524850845337, 0.7158644199371338, 0.7085654139518738, 0.70269376039505, 0.6978572010993958, 0.6932709813117981, 0.6896301507949829, 0.685941219329834, 0.6828914284706116, 0.6806454062461853, 0.6777218580245972, 0.6752089858055115, 0.6724291443824768, 0.6709203124046326, 0.6683648824691772, 0.6660218238830566, 0.6646134257316589, 0.6632031202316284, 0.6612188816070557, 0.6595137715339661, 0.6583572030067444, 0.6573118567466736, 0.6568174362182617, 0.6553791761398315], "val_accuracy": [0.5913333296775818, 0.6769999861717224, 0.7089999914169312, 0.722000002861023, 0.7263333201408386, 0.7323333621025085, 0.7333333492279053, 0.7369999885559082, 0.7366666793823242, 0.7406666874885559, 0.7413333058357239, 0.7416666746139526, 0.7453333139419556, 0.746666669845581, 0.7459999918937683, 0.7480000257492065, 0.7463333606719971, 0.7473333477973938, 0.7459999918937683, 0.7493333220481873, 0.7486666440963745, 0.7506666779518127, 0.7526666522026062, 0.7516666650772095, 0.753333330154419, 0.7556666731834412, 0.7546666860580444, 0.7556666731834412, 0.7549999952316284, 0.7549999952316284, 0.7553333044052124]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 7, 5, 1, 5, 7], [0, 2, 1, 2, 2, 3, 1, 0], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 2, 8, 4, 4, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, grad))))), tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5], [1, 2, 1, 3, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [23, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [2, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 12, 7, 5, 0, 4, 3, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, grad), alpha), tf.math.multiply(tf.math.square(tf.math.square(grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309807538986206, 2.310058355331421, 2.309495687484741, 2.310637950897217, 2.3106417655944824, 2.3104090690612793], "accuracy": [0.09166556596755981, 0.09087307006120682, 0.09259014576673508, 0.09192973375320435, 0.08968432247638702, 0.09126931428909302], "val_loss": [2.3087234497070312, 2.3087234497070312, 2.3087234497070312, 2.3087234497070312, 2.3087234497070312, 2.3087234497070312], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 2], [0, 2, 1, 0, 2, 0], [79, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [7, 2, 0, 2, 5, 2, 6, 3, 6, 0, 0, 6, 5, 9], [0, 6, 1, 6, 0, 0, 3, 6], [0, 22, 12, 59], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 13, 7, 6, 3, 9, 5, 4, 1, 22, 14, 8, 4, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), sigma)))))), tf.math.square(grad)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.306154251098633, 2.304875135421753, 2.3040807247161865, 2.3038763999938965, 2.303513288497925, 2.3034842014312744], "accuracy": [0.09509972482919693, 0.09972262382507324, 0.09681680053472519, 0.10091137140989304, 0.10527011007070541, 0.10157178342342377], "val_loss": [2.304227828979492, 2.3035457134246826, 2.3035333156585693, 2.3035333156585693, 2.3035333156585693, 2.3035333156585693], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]