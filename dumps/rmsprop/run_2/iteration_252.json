[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2114336490631104, 1.6071133613586426, 1.1454558372497559, 0.9948912858963013, 0.908161997795105, 0.824715793132782, 0.7829105854034424, 0.7752348184585571, 0.7265271544456482, 0.7242426872253418, 0.7113498449325562, 0.6735976934432983, 0.6566162109375, 0.6494921445846558, 0.6435544490814209, 0.6186785101890564, 0.6276249289512634, 0.5913048386573792, 0.594624936580658, 0.5870232582092285, 0.5627073645591736, 0.5770108103752136, 0.5512458086013794, 0.5429208278656006, 0.5302939414978027, 0.5484095811843872, 0.528581976890564, 0.5233557820320129, 0.518356204032898, 0.5189206004142761, 0.501038134098053, 0.49458518624305725, 0.4787130653858185, 0.4849686324596405, 0.4756864905357361, 0.48220881819725037, 0.48242053389549255, 0.46956291794776917, 0.46219828724861145, 0.45479243993759155, 0.4537211060523987, 0.44446849822998047, 0.4397887587547302, 0.4414430260658264, 0.43232405185699463, 0.43459343910217285, 0.4192955493927002, 0.430012583732605, 0.4172402322292328, 0.42348840832710266, 0.41752907633781433, 0.4018735885620117, 0.3978731036186218, 0.39636120200157166, 0.3965171277523041, 0.39564424753189087, 0.39330893754959106, 0.38958680629730225, 0.38251063227653503, 0.38196617364883423, 0.38506391644477844, 0.37298205494880676], "accuracy": [0.2670717239379883, 0.5074626803398132, 0.5982036590576172, 0.6489235162734985, 0.6671509742736816, 0.6980583667755127, 0.7104741930961609, 0.7140403985977173, 0.7310791015625, 0.7360982894897461, 0.7334566116333008, 0.7512878179550171, 0.7549861073493958, 0.7619865536689758, 0.7598732113838196, 0.7734777331352234, 0.7668735980987549, 0.7853652238845825, 0.7825914621353149, 0.7825914621353149, 0.7910447716712952, 0.7913089394569397, 0.7987055778503418, 0.8005547523498535, 0.8053097128868103, 0.7954035401344299, 0.805177628993988, 0.8055738806724548, 0.8086118102073669, 0.8086118102073669, 0.817989706993103, 0.8158763647079468, 0.8240655064582825, 0.8185180425643921, 0.8261788487434387, 0.8224804997444153, 0.8215559124946594, 0.8321225643157959, 0.8241975903511047, 0.8305375576019287, 0.8293488025665283, 0.8337075710296631, 0.8372738361358643, 0.837537944316864, 0.8380662798881531, 0.8401796221733093, 0.8453308939933777, 0.8432175517082214, 0.8466516733169556, 0.8441421389579773, 0.8470479249954224, 0.8532558679580688, 0.8535200357437134, 0.8537842035293579, 0.8519350290298462, 0.8535200357437134, 0.8564258217811584, 0.8553691506385803, 0.8544445633888245, 0.8561616539955139, 0.860652506351471, 0.8621054291725159], "val_loss": [1.9274635314941406, 1.1181066036224365, 0.9191595911979675, 0.8250691890716553, 0.7266839742660522, 0.6899957656860352, 0.6824268102645874, 0.6363223195075989, 0.6219479441642761, 0.6025303602218628, 0.5974375605583191, 0.5693803429603577, 0.5633499026298523, 0.5480350852012634, 0.5290276408195496, 0.5239526629447937, 0.5057532787322998, 0.5375557541847229, 0.49482083320617676, 0.4946383535861969, 0.4793129861354828, 0.49860116839408875, 0.4938788115978241, 0.4722307026386261, 0.4851859509944916, 0.46227312088012695, 0.45479243993759155, 0.44417595863342285, 0.4903203547000885, 0.4475181996822357, 0.42547014355659485, 0.43020978569984436, 0.42357608675956726, 0.4282836616039276, 0.41939228773117065, 0.4107055366039276, 0.4269627332687378, 0.4017942249774933, 0.40728047490119934, 0.41234636306762695, 0.3970932960510254, 0.3994043469429016, 0.3917579650878906, 0.39854350686073303, 0.39773857593536377, 0.38747432827949524, 0.3904140591621399, 0.38704589009284973, 0.40274563431739807, 0.3767262399196625, 0.3766498267650604, 0.38651302456855774, 0.36940500140190125, 0.3723076283931732, 0.37277868390083313, 0.3682281970977783, 0.36527448892593384, 0.35675835609436035, 0.3599900007247925, 0.36669468879699707, 0.3581851124763489, 0.3544539511203766], "val_accuracy": [0.5059999823570251, 0.6086666584014893, 0.6823333501815796, 0.7073333263397217, 0.7386666536331177, 0.7523333430290222, 0.7493333220481873, 0.7476666569709778, 0.7543333172798157, 0.7613333463668823, 0.778333306312561, 0.7876666784286499, 0.7876666784286499, 0.8100000023841858, 0.8073333501815796, 0.8086666464805603, 0.8136666417121887, 0.7873333096504211, 0.8159999847412109, 0.8183333277702332, 0.8286666870117188, 0.8076666593551636, 0.8203333616256714, 0.8233333230018616, 0.8203333616256714, 0.8370000123977661, 0.8306666612625122, 0.8363333344459534, 0.8046666383743286, 0.8326666951179504, 0.8403333425521851, 0.8429999947547913, 0.843666672706604, 0.846666693687439, 0.847000002861023, 0.8496666550636292, 0.8363333344459534, 0.8546666502952576, 0.8473333120346069, 0.8423333168029785, 0.8529999852180481, 0.8476666808128357, 0.8560000061988831, 0.8416666388511658, 0.8433333039283752, 0.8573333621025085, 0.8553333282470703, 0.8566666841506958, 0.8506666421890259, 0.8653333187103271, 0.8633333444595337, 0.8586666584014893, 0.859000027179718, 0.8646666407585144, 0.8686666488647461, 0.8673333525657654, 0.8709999918937683, 0.8690000176429749, 0.8676666617393494, 0.8673333525657654, 0.8613333106040955, 0.8666666746139526]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 2, 3, 2, 6, 5, 3, 0, 1], [0, 2, 1, 0, 0, 0, 2, 2], [0, 93, 39, 22], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 4, 10, 6, 4, 1, 2, 1, 1, 1, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 0], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 4, 2, 2], [1, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 2, 5, 2, 7], [0, 6, 1, 5, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 5, 3, 2, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.add(alpha, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 2, 5, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 6, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 8, 3, 1], [3, 6, 1, 6, 0], [0, 22], [0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 3, 5], [2, 7, 4, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 1, 0, 1, 0, 9, 5, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, grad), tf.math.multiply(grad, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303760528564453, 2.302586793899536, 2.302588939666748, 2.3025918006896973, 2.3025872707366943, 2.3025941848754883], "accuracy": [0.09840179979801178, 0.09866596013307571, 0.09642054885625839, 0.09681680053472519, 0.09496764093637466, 0.09932637959718704], "val_loss": [2.3025856018066406, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.09799999743700027, 0.0963333323597908, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 1, 5], [0, 2, 1, 0, 2], [0, 26, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 2, 2, 1, 1, 5, 2, 7, 7, 5], [0, 6, 1, 6, 0, 3, 2, 6, 1, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 23, 13, 10, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.subtract(alpha, grad), tf.math.subtract(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(sigma, tf.math.add(beta, grad)), tf.math.square(alpha)))), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105475902557373, 2.3097970485687256, 2.310645580291748, 2.311199188232422, 2.3104166984558105, 2.3095176219940186], "accuracy": [0.08915598690509796, 0.08968432247638702, 0.09219389408826828, 0.08981640636920929, 0.09549596905708313, 0.09734513610601425], "val_loss": [2.308722972869873, 2.308722972869873, 2.308722972869873, 2.308722972869873, 2.308722972869873, 2.308722972869873], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]