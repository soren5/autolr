[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2129719257354736, 1.6071635484695435, 1.1371424198150635, 0.9537116289138794, 0.8952411413192749, 0.8095148205757141, 0.796979546546936, 0.7144759297370911, 0.7278388142585754, 0.6954184174537659, 0.6625121235847473, 0.6536918878555298, 0.6497622132301331, 0.6233224272727966, 0.5955742001533508, 0.6014596819877625, 0.5902130603790283, 0.5736941695213318, 0.5536315441131592, 0.5747281312942505, 0.5489187240600586, 0.5264272093772888, 0.5276277661323547, 0.5225127935409546, 0.5127174854278564, 0.5004097819328308, 0.5008147358894348, 0.500909149646759, 0.482236385345459, 0.4864518940448761, 0.46009376645088196, 0.4674663245677948, 0.4665118157863617, 0.4659016728401184, 0.4620398283004761, 0.4588550329208374, 0.4451657831668854, 0.44847390055656433, 0.4446720480918884, 0.4327464997768402, 0.4303169846534729, 0.4217865467071533], "accuracy": [0.25980716943740845, 0.4994056224822998, 0.6015057563781738, 0.6588297486305237, 0.6757363677024841, 0.7117950320243835, 0.7091533541679382, 0.7382115721702576, 0.7272487282752991, 0.7412495017051697, 0.7494386434555054, 0.7532690763473511, 0.7589486241340637, 0.7677981853485107, 0.7783648371696472, 0.7726852297782898, 0.7798177003860474, 0.7865539789199829, 0.7936864495277405, 0.7815347909927368, 0.7948752045631409, 0.8012151718139648, 0.8079513907432556, 0.8031964302062988, 0.8043851256370544, 0.8108572363853455, 0.8148196935653687, 0.816008448600769, 0.819442629814148, 0.8136309385299683, 0.8238013386726379, 0.8238013386726379, 0.8264430165290833, 0.8257825970649719, 0.8257825970649719, 0.8327829837799072, 0.8334434032440186, 0.8309338092803955, 0.8358209133148193, 0.8391229510307312, 0.8417646288871765, 0.8457271456718445], "val_loss": [1.923319697380066, 1.1000036001205444, 0.8685957789421082, 0.827399730682373, 0.8014646172523499, 0.6805267333984375, 0.665468156337738, 0.6393444538116455, 0.6576696038246155, 0.6203802227973938, 0.6435718536376953, 0.6297232508659363, 0.6278343200683594, 0.5780966281890869, 0.5583732724189758, 0.5582348108291626, 0.5667953491210938, 0.5385679006576538, 0.5220143795013428, 0.5791768431663513, 0.5103304982185364, 0.5427098274230957, 0.5452756285667419, 0.49999651312828064, 0.49967578053474426, 0.482779860496521, 0.4847056567668915, 0.48580941557884216, 0.47183114290237427, 0.47012388706207275, 0.48075708746910095, 0.4867519438266754, 0.4586922526359558, 0.4655246436595917, 0.4714297950267792, 0.47036540508270264, 0.4405413269996643, 0.44371530413627625, 0.439917653799057, 0.4436149001121521, 0.42997366189956665, 0.43891674280166626], "val_accuracy": [0.5239999890327454, 0.6453333497047424, 0.6913333535194397, 0.7056666612625122, 0.6943333148956299, 0.7456666827201843, 0.7433333396911621, 0.7536666393280029, 0.7406666874885559, 0.7596666812896729, 0.7559999823570251, 0.7540000081062317, 0.746666669845581, 0.7766666412353516, 0.7883333563804626, 0.7853333353996277, 0.7693333625793457, 0.79666668176651, 0.8066666722297668, 0.7689999938011169, 0.8013333082199097, 0.7943333387374878, 0.7963333129882812, 0.8169999718666077, 0.8159999847412109, 0.8180000185966492, 0.8169999718666077, 0.8180000185966492, 0.8236666917800903, 0.8236666917800903, 0.824999988079071, 0.8086666464805603, 0.8263333439826965, 0.8240000009536743, 0.8259999752044678, 0.828000009059906, 0.8410000205039978, 0.8306666612625122, 0.8373333215713501, 0.8383333086967468, 0.8386666774749756, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 23, 23], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 4, 0, 6, 3, 8, 7], [2, 0, 3, 1, 0], [71, 1], [0, 1, 0, 0, 0, 0, 0, 1], [0, 2, 2, 2, 5], [0, 6, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 12, 7, 5, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 8, 2, 3, 4], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [3, 2, 0, 6, 3, 5, 2, 0, 4, 0, 5, 1, 8, 4, 9], [2, 0, 3, 1, 0, 0, 2, 0], [97, 1, 35, 92, 84], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 5, 3], [0, 6, 1, 6, 0, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 23, 15, 8, 5, 15, 9, 6, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.negative(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(beta), tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.square(alpha), grad)))), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 3, 2, 6, 5, 4, 4, 9], [1, 2, 3, 0, 2, 1, 2], [64, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 2, 2, 6, 3, 8, 2], [0, 0, 3, 4, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [7, 1, 1, 6, 0], [73, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 1, 1, 0, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(grad, alpha))), tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.39352416992188, 11061.8017578125, 184051.625, 1301407.25, 5619047.0, 18544848.0], "accuracy": [0.09985470771789551, 0.09694888442754745, 0.10566636174917221, 0.09509972482919693, 0.10077928751707077, 0.10210011899471283], "val_loss": [796.5850219726562, 39061.703125, 415037.40625, 2255806.0, 8438538.0, 24873964.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 2, 3, 5], [0, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0, 0], [16, 1, 31], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 2, 3, 3, 5, 2, 1, 7, 7, 3, 3, 6, 7, 3, 9, 9], [0, 6, 1, 6, 0, 4, 6, 1, 2, 3, 6], [0, 22, 39, 70], [1], [0], [0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 1, 13, 7, 6, 3, 27, 16, 11, 4, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), tf.math.multiply(alpha, beta)), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3100571632385254, 2.309229612350464, 2.3101277351379395, 2.3108649253845215, 2.3112852573394775, 2.311379909515381], "accuracy": [0.09298639744520187, 0.08928807079792023, 0.09232597798109055, 0.08955223858356476, 0.08915598690509796, 0.09259014576673508], "val_loss": [2.3079993724823, 2.3079993724823, 2.3079993724823, 2.3079993724823, 2.3079993724823, 2.3079993724823], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]