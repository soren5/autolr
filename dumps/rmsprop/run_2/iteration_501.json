[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091381549835205, 1.5967758893966675, 1.1385432481765747, 0.9772220253944397, 0.8791056275367737, 0.8319669961929321, 0.8062736392021179, 0.7622311115264893, 0.7314426898956299, 0.7058389186859131, 0.6918380856513977, 0.672699511051178, 0.6633656620979309, 0.6428943276405334, 0.6484265923500061, 0.6101198792457581, 0.5981939435005188, 0.581328272819519, 0.593792736530304, 0.5703665018081665, 0.5634679794311523, 0.5513309836387634, 0.5485492944717407, 0.5345771908760071, 0.5393926501274109, 0.5137640237808228, 0.5242037773132324, 0.5203449130058289, 0.5107948184013367, 0.49283844232559204, 0.49464845657348633, 0.4824009835720062, 0.48051244020462036, 0.48470693826675415, 0.47099635004997253, 0.46414053440093994, 0.4683750867843628, 0.4483928382396698, 0.4610007405281067, 0.45270851254463196, 0.4391729235649109, 0.4405790865421295, 0.43353188037872314, 0.4248460531234741, 0.4361173212528229, 0.43117016553878784, 0.4216259717941284, 0.4197530448436737, 0.4097744822502136, 0.4038917124271393, 0.4142267107963562, 0.39891836047172546], "accuracy": [0.2751287817955017, 0.5112931132316589, 0.6067890524864197, 0.6523576974868774, 0.6758684515953064, 0.7012283802032471, 0.6983225345611572, 0.7202483415603638, 0.7358341217041016, 0.7345132827758789, 0.7374191284179688, 0.752740740776062, 0.7572315335273743, 0.7621186375617981, 0.7594769597053528, 0.7733456492424011, 0.7771760821342468, 0.7895918488502502, 0.7783648371696472, 0.7918372750282288, 0.793422281742096, 0.7988376617431641, 0.7960638999938965, 0.8006868362426758, 0.8001585006713867, 0.811649739742279, 0.8031964302062988, 0.8083476424217224, 0.8094043135643005, 0.8190463781356812, 0.8169330358505249, 0.8219521641731262, 0.8193105459213257, 0.8245938420295715, 0.826310932636261, 0.8345000743865967, 0.8285563588142395, 0.8337075710296631, 0.833179235458374, 0.835160493850708, 0.8426892161369324, 0.839519202709198, 0.8392550349235535, 0.8422929644584656, 0.8413683772087097, 0.8396512866020203, 0.8495575189590454, 0.8527275323867798, 0.8515387773513794, 0.8544445633888245, 0.8469158411026001, 0.8535200357437134], "val_loss": [1.9182339906692505, 1.0830103158950806, 0.920089840888977, 0.8007665872573853, 0.7675175666809082, 0.705453097820282, 0.6618070602416992, 0.6580249071121216, 0.6335981488227844, 0.625044584274292, 0.580747127532959, 0.5725334286689758, 0.552676260471344, 0.6053511500358582, 0.5744429230690002, 0.5447196364402771, 0.5207304954528809, 0.5203246474266052, 0.5176869034767151, 0.5059482455253601, 0.5119758248329163, 0.4928573668003082, 0.47490400075912476, 0.5052511096000671, 0.47753384709358215, 0.456510990858078, 0.4630396366119385, 0.4683224558830261, 0.4481905996799469, 0.4642398953437805, 0.450905978679657, 0.4386638104915619, 0.4503994286060333, 0.4582084119319916, 0.43476733565330505, 0.42726436257362366, 0.42350223660469055, 0.43194660544395447, 0.4179639220237732, 0.41780582070350647, 0.4172278642654419, 0.409597784280777, 0.40885913372039795, 0.4067156910896301, 0.4218502640724182, 0.4005749523639679, 0.3938439190387726, 0.4019935429096222, 0.3998644948005676, 0.3993054926395416, 0.3854523003101349, 0.39215633273124695], "val_accuracy": [0.5239999890327454, 0.6610000133514404, 0.67166668176651, 0.70333331823349, 0.734333336353302, 0.7279999852180481, 0.7556666731834412, 0.7366666793823242, 0.737666666507721, 0.7636666893959045, 0.784333348274231, 0.7716666460037231, 0.7963333129882812, 0.7599999904632568, 0.7889999747276306, 0.7990000247955322, 0.812333345413208, 0.7996666431427002, 0.8149999976158142, 0.8183333277702332, 0.809333324432373, 0.8166666626930237, 0.8333333134651184, 0.8019999861717224, 0.8256666660308838, 0.8396666646003723, 0.828000009059906, 0.8273333311080933, 0.8399999737739563, 0.8349999785423279, 0.8289999961853027, 0.8420000076293945, 0.8356666564941406, 0.8339999914169312, 0.8443333506584167, 0.8456666469573975, 0.8450000286102295, 0.8366666436195374, 0.8486666679382324, 0.846666693687439, 0.8500000238418579, 0.8526666760444641, 0.8483333587646484, 0.8529999852180481, 0.8446666598320007, 0.8483333587646484, 0.859666645526886, 0.8506666421890259, 0.8550000190734863, 0.8569999933242798, 0.8556666374206543, 0.8576666712760925]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 7, 2, 3, 5], [0, 2, 1, 0, 2], [0, 88, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 0, 5, 3, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 7, 0, 2, 5, 2, 1], [5, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.4339999854564667, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.344165802001953, 2.305628776550293, 2.225071430206299, 2.3253979682922363, 2.303499698638916, 2.3031649589538574, 2.3031466007232666, 2.302901268005371], "accuracy": [0.19191652536392212, 0.12296922504901886, 0.20036983489990234, 0.15982036292552948, 0.1006472036242485, 0.10170386731624603, 0.09800554811954498, 0.09906221181154251], "val_loss": [2.2509186267852783, 2.293189525604248, 1.9969884157180786, 2.3033838272094727, 2.3029074668884277, 2.302671432495117, 2.3025588989257812, 2.302654266357422], "val_accuracy": [0.10633333027362823, 0.10133333504199982, 0.4333333373069763, 0.09933333098888397, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 7, 2, 5, 5, 3], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 2, 1, 0], [16, 1, 87], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 9, 0, 2, 5, 2, 1], [5, 6, 1, 6, 5], [0, 98], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 12, 7, 5, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(alpha))), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, alpha))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 6, 0, 4, 3, 8, 2], [2, 0, 3, 1, 0, 1], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 0, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 13, 7, 6, 2, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 7, 0, 2, 5, 2, 1], [4, 6, 1, 6, 0], [55, 22], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104608058929443, 2.308690071105957, 2.310692071914673, 2.3095617294311523, 2.309796094894409, 2.3106331825256348], "accuracy": [0.08757099509239197, 0.09259014576673508, 0.09219389408826828, 0.09681680053472519, 0.09351472556591034, 0.08889182657003403], "val_loss": [2.3088607788085938, 2.3088607788085938, 2.3088607788085938, 2.3088607788085938, 2.3088607788085938, 2.3088607788085938], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]