[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8174285888671875, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207648515701294, 1.5927637815475464, 1.1094634532928467, 0.9897782802581787, 0.8486779928207397, 0.8174785375595093, 0.7833601236343384, 0.7449111342430115, 0.7208952307701111, 0.7102877497673035, 0.6786119341850281, 0.6551899313926697, 0.6607595086097717, 0.6326612234115601, 0.609523355960846, 0.5976406335830688, 0.6282671689987183, 0.5837128758430481, 0.5799359679222107, 0.5748901963233948, 0.5443548560142517, 0.544518768787384, 0.5466055274009705, 0.540772557258606, 0.5291188955307007, 0.514712393283844, 0.5223023891448975, 0.49950066208839417, 0.5064741969108582, 0.4907209277153015, 0.47863149642944336, 0.49176013469696045, 0.47595691680908203, 0.46773168444633484, 0.45959150791168213, 0.4535607397556305, 0.4653114974498749, 0.45459744334220886, 0.45360973477363586], "accuracy": [0.2793554365634918, 0.5056135058403015, 0.6185444593429565, 0.6465460062026978, 0.6913221478462219, 0.695813000202179, 0.7141724824905396, 0.7195879220962524, 0.7333245277404785, 0.7329282760620117, 0.7454761862754822, 0.7523444890975952, 0.7534011602401733, 0.7626469135284424, 0.7745344042778015, 0.7755910754203796, 0.7578919529914856, 0.7783648371696472, 0.7820631265640259, 0.78113853931427, 0.7973847389221191, 0.8005547523498535, 0.7976489067077637, 0.800818920135498, 0.8049134612083435, 0.8096684813499451, 0.802800178527832, 0.817989706993103, 0.8094043135643005, 0.8186501264572144, 0.8238013386726379, 0.8148196935653687, 0.8207634687423706, 0.830669641494751, 0.8330471515655518, 0.8308017253875732, 0.8257825970649719, 0.8337075710296631, 0.8360850811004639], "val_loss": [1.9162253141403198, 1.114086389541626, 0.926119327545166, 0.8465585112571716, 0.7486546039581299, 0.7440019249916077, 0.7000440955162048, 0.6620110869407654, 0.6653927564620972, 0.6396523714065552, 0.637788712978363, 0.6147536039352417, 0.5785453915596008, 0.58028644323349, 0.5740157961845398, 0.6262360215187073, 0.5509880781173706, 0.6005775332450867, 0.5364105105400085, 0.5270379185676575, 0.5685445666313171, 0.5690260529518127, 0.529410183429718, 0.5087572932243347, 0.5064443349838257, 0.5143466591835022, 0.49899014830589294, 0.5615183711051941, 0.49318456649780273, 0.4734286367893219, 0.4968690574169159, 0.4799812138080597, 0.4713970422744751, 0.45888668298721313, 0.47777432203292847, 0.4635562300682068, 0.4687407314777374, 0.4633631110191345, 0.46159297227859497], "val_accuracy": [0.49133333563804626, 0.6460000276565552, 0.6703333258628845, 0.6786666512489319, 0.7206666469573975, 0.7260000109672546, 0.7256666421890259, 0.7433333396911621, 0.7493333220481873, 0.7536666393280029, 0.7480000257492065, 0.7710000276565552, 0.7893333435058594, 0.7960000038146973, 0.7896666526794434, 0.753000020980835, 0.8040000200271606, 0.765333354473114, 0.8053333163261414, 0.809333324432373, 0.7789999842643738, 0.784333348274231, 0.8023333549499512, 0.8193333148956299, 0.8199999928474426, 0.8076666593551636, 0.8223333358764648, 0.7996666431427002, 0.8270000219345093, 0.8360000252723694, 0.8166666626930237, 0.8303333520889282, 0.8366666436195374, 0.8403333425521851, 0.8236666917800903, 0.8356666564941406, 0.831333339214325, 0.8326666951179504, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 8, 3, 2, 4, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035964965820312, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 3, 7, 2, 3, 5, 4, 0, 0, 0, 4, 6, 4], [0, 3, 1, 0, 2, 2, 0, 0, 3, 3], [0, 39, 39, 76], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [75, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 7, 7, 2, 5, 1, 6, 6, 2, 7, 4, 5, 3, 7, 1, 0, 6, 0, 2], [0, 6, 1, 6, 3, 4, 4, 2, 0, 1, 5, 5, 2, 3, 6, 3, 4, 6, 7], [86, 3], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 4, 12, 7, 5, 2, 44, 25, 19, 2, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.pow(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(grad, tf.math.square(tf.math.subtract(sigma, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.pow(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), alpha), grad))))))), tf.math.square(tf.math.multiply(grad, tf.math.add(tf.math.subtract(beta, sigma), tf.math.negative(grad)))))), tf.math.divide_no_nan(tf.math.negative(sigma), tf.math.add(grad, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 2, 3, 1, 7, 5, 3, 0, 6, 9, 1, 5, 2, 0, 0, 3, 0, 8, 5, 9, 2], [0, 0, 1, 0, 2, 3, 0, 1, 2, 1], [0, 39, 39, 45, 10, 65], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 5, 9, 6], [0, 4, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 21, 10, 6, 5, 3, 2, 1, 13, 9, 4, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.square(grad), tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha))), tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036439418792725, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 5, 5], [0, 2, 1, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1, 2, 8, 7, 3, 8, 7, 3, 7, 8], [0, 6, 1, 6, 0, 7, 2, 0, 2, 7, 5], [0, 22, 38], [1], [0], [2], [0]], "fitness": -0.09628571569919586, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 1, 27, 16, 11, 3, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(grad, beta), tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), beta))), grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091347217559814, 2.310215950012207, 2.310802698135376, 2.3114404678344727, 2.312821865081787, 2.3145248889923096, 2.3167078495025635], "accuracy": [0.09694888442754745, 0.0886276587843895, 0.09245806187391281, 0.0940430611371994, 0.09100515395402908, 0.09298639744520187, 0.09153348207473755], "val_loss": [2.3088412284851074, 2.3090124130249023, 2.3092832565307617, 2.309603214263916, 2.3099265098571777, 2.3102304935455322, 2.3106143474578857], "val_accuracy": [0.10233332961797714, 0.10333333164453506, 0.10300000011920929, 0.10300000011920929, 0.10333333164453506, 0.10300000011920929, 0.10266666859388351]}}]