[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207061290740967, 1.5974390506744385, 1.1587367057800293, 0.9705783724784851, 0.8783432245254517, 0.8085835576057434, 0.7807942032814026, 0.7600361704826355, 0.7361468076705933, 0.7095775604248047, 0.7034494876861572, 0.6731501221656799, 0.6662867069244385, 0.6276586055755615, 0.6257809400558472, 0.6143575310707092, 0.6022240519523621, 0.6019918322563171, 0.6034915447235107, 0.5830793976783752, 0.579162061214447, 0.554518461227417, 0.5519973039627075, 0.5450828075408936, 0.543220043182373, 0.529415488243103, 0.5236316323280334, 0.521040141582489, 0.514072835445404, 0.5143938660621643, 0.5054430961608887, 0.5067317485809326, 0.4945620000362396, 0.49287447333335876, 0.4800618588924408, 0.4795282185077667, 0.4766303598880768, 0.4748251438140869, 0.46749141812324524, 0.46425294876098633, 0.45516884326934814, 0.4656946063041687, 0.4528650939464569, 0.4482074975967407, 0.44122743606567383], "accuracy": [0.2727513015270233, 0.5066701769828796, 0.5964865684509277, 0.6481310129165649, 0.6814159154891968, 0.7059833407402039, 0.7137762308120728, 0.7248712182044983, 0.7296261787414551, 0.7383436560630798, 0.7323999404907227, 0.7485140562057495, 0.7514199018478394, 0.765949010848999, 0.7664773464202881, 0.7712323069572449, 0.77677983045578, 0.7795535326004028, 0.7696473598480225, 0.789988100528717, 0.7891955971717834, 0.7981772422790527, 0.7959318161010742, 0.7996301651000977, 0.7964601516723633, 0.8047813773155212, 0.8063663840293884, 0.8086118102073669, 0.8075551390647888, 0.811649739742279, 0.8120459914207458, 0.8092722296714783, 0.8227446675300598, 0.8207634687423706, 0.8269713521003723, 0.8219521641731262, 0.8219521641731262, 0.8230088353157043, 0.8224804997444153, 0.8321225643157959, 0.8305375576019287, 0.8297450542449951, 0.8322546482086182, 0.8348963260650635, 0.8396512866020203], "val_loss": [1.9076637029647827, 1.1069597005844116, 0.8827592134475708, 0.7893964648246765, 0.7273252010345459, 0.6876898407936096, 0.7361872792243958, 0.6957123875617981, 0.6414484977722168, 0.6166757941246033, 0.5857670307159424, 0.6277099847793579, 0.5726191997528076, 0.5651026368141174, 0.5565282702445984, 0.5444133281707764, 0.5660607218742371, 0.526761531829834, 0.537876307964325, 0.5362349152565002, 0.5127016305923462, 0.49538835883140564, 0.49470964074134827, 0.5017156600952148, 0.48294901847839355, 0.4748609960079193, 0.4788080155849457, 0.4781529903411865, 0.4612637460231781, 0.507437527179718, 0.45823949575424194, 0.4503105580806732, 0.45283272862434387, 0.44314584136009216, 0.4448585510253906, 0.4419268071651459, 0.44582539796829224, 0.4458874464035034, 0.4363958239555359, 0.4303116500377655, 0.4365255534648895, 0.43483608961105347, 0.4345027804374695, 0.4249577522277832, 0.4464060962200165], "val_accuracy": [0.5630000233650208, 0.6773333549499512, 0.70333331823349, 0.7103333473205566, 0.7333333492279053, 0.750333309173584, 0.7026666402816772, 0.7279999852180481, 0.7486666440963745, 0.7566666603088379, 0.7846666574478149, 0.7603333592414856, 0.7850000262260437, 0.7883333563804626, 0.7960000038146973, 0.7929999828338623, 0.7743333578109741, 0.8113333582878113, 0.800000011920929, 0.7946666479110718, 0.8146666884422302, 0.8100000023841858, 0.8130000233650208, 0.8106666803359985, 0.8173333406448364, 0.8196666836738586, 0.8243333101272583, 0.8213333487510681, 0.8339999914169312, 0.8029999732971191, 0.8303333520889282, 0.8360000252723694, 0.8346666693687439, 0.8360000252723694, 0.8389999866485596, 0.8379999995231628, 0.8376666903495789, 0.8296666741371155, 0.8370000123977661, 0.8423333168029785, 0.8389999866485596, 0.8320000171661377, 0.8373333215713501, 0.8413333296775818, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1, 1, 9, 1, 8, 8, 9], [1, 6, 1, 6, 0], [0, 92, 57], [1], [0], [5], [0]], "fitness": -0.175428569316864, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 18, 13, 5, 3, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(alpha, tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), alpha)), tf.math.subtract(tf.math.sqrt(tf.math.sqrt(grad)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.332991123199463, 2.2810137271881104, 2.3030176162719727, 2.645667791366577, 2.310209274291992, 2.30439829826355], "accuracy": [0.18240654468536377, 0.11781799048185349, 0.1018359512090683, 0.18055738508701324, 0.09708096832036972, 0.10157178342342377], "val_loss": [2.2285256385803223, 2.302560567855835, 2.2991487979888916, 2.319580316543579, 2.305124044418335, 2.303265333175659], "val_accuracy": [0.17599999904632568, 0.10333333164453506, 0.15533334016799927, 0.09866666793823242, 0.09866666793823242, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 7, 4, 5], [0, 2, 1, 0, 2, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 7, 5, 2], [2, 0, 0, 5, 0], [16, 1, 34], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0], [0, 97], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 12, 7, 5, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.pow(grad, grad), tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031482696533203, 2.302572250366211, 2.302624225616455, 2.3025896549224854, 2.3026833534240723, 2.302595853805542, 2.302595376968384, 2.30263352394104], "accuracy": [0.0956280529499054, 0.10091137140989304, 0.10196803510189056, 0.10011887550354004, 0.10513802617788315, 0.09879804402589798, 0.10117553919553757, 0.10011887550354004], "val_loss": [2.302567720413208, 2.302600860595703, 2.3025858402252197, 2.302659749984741, 2.302659749984741, 2.3026070594787598, 2.302626132965088, 2.3026442527770996], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 5, 1, 6, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108582496643066, 2.3097100257873535, 2.3095078468322754, 2.3092775344848633, 2.3108978271484375, 2.3096189498901367], "accuracy": [0.09377889335155487, 0.09338264167308807, 0.08836349099874496, 0.0944393053650856, 0.09272222965955734, 0.09008057415485382], "val_loss": [2.307576894760132, 2.307576894760132, 2.307576894760132, 2.307576894760132, 2.307576894760132, 2.307576894760132], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 9, 0], [0, 1, 2, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 3, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [6, 2, 0, 2, 4, 2, 1, 5, 6, 8, 9], [0, 6, 1, 6, 5, 1, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 12, 8, 4, 3, 2, 1, 1, 0, 18, 11, 7, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, tf.math.square(grad)))), tf.math.divide_no_nan(grad, alpha))), grad), tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3110527992248535, 2.311422109603882, 2.310384511947632, 2.3094685077667236, 2.310126543045044, 2.3088207244873047], "accuracy": [0.08519349992275238, 0.09470347315073013, 0.08968432247638702, 0.09853387624025345, 0.08915598690509796, 0.09272222965955734], "val_loss": [2.3094446659088135, 2.3094446659088135, 2.3094446659088135, 2.3094446659088135, 2.3094446659088135, 2.3094446659088135], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]