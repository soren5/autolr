[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [7, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 2, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8454285860061646, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2727909088134766, 1.867064118385315, 1.2571871280670166, 0.9250850677490234, 0.8358070254325867, 0.778855562210083, 0.7421274781227112, 0.6991626024246216, 0.6437622308731079, 0.6183262467384338, 0.595919668674469, 0.5694723129272461, 0.5579763650894165, 0.5417055487632751, 0.5216322541236877, 0.5194929242134094, 0.5068978667259216, 0.48796263337135315, 0.46955811977386475, 0.4671964645385742, 0.45604178309440613, 0.4504547417163849, 0.4498518705368042, 0.4301190972328186, 0.4295140206813812, 0.4365006387233734, 0.40429937839508057, 0.38979220390319824, 0.4003916382789612, 0.38752222061157227, 0.38189128041267395, 0.3880481719970703, 0.37643614411354065], "accuracy": [0.1818782240152359, 0.4138158857822418, 0.5867124795913696, 0.6622639298439026, 0.6983225345611572, 0.6975300312042236, 0.7230220437049866, 0.7360982894897461, 0.7574957013130188, 0.7600052952766418, 0.780610203742981, 0.7804781198501587, 0.7878747582435608, 0.7922335267066956, 0.7989697456359863, 0.8084797263145447, 0.7968564033508301, 0.8140271902084351, 0.8190463781356812, 0.8166688680648804, 0.8285563588142395, 0.833179235458374, 0.8265751004219055, 0.8315942287445068, 0.8436138033866882, 0.8379341959953308, 0.8428213000297546, 0.8524633646011353, 0.8417646288871765, 0.8535200357437134, 0.8552370667457581, 0.8545766472816467, 0.856689989566803], "val_loss": [2.1584482192993164, 1.0526955127716064, 0.7840117812156677, 0.6847202777862549, 0.6667972803115845, 0.6393986940383911, 0.5715464353561401, 0.538894534111023, 0.5197683572769165, 0.5027589201927185, 0.49839282035827637, 0.49858805537223816, 0.48726701736450195, 0.4811190068721771, 0.4760597348213196, 0.47229138016700745, 0.4598986804485321, 0.47749820351600647, 0.43562906980514526, 0.43570324778556824, 0.45127302408218384, 0.4209814965724945, 0.4191177487373352, 0.43344807624816895, 0.4344051480293274, 0.42094656825065613, 0.4251561164855957, 0.40487173199653625, 0.4025024473667145, 0.4136372208595276, 0.398562490940094, 0.41096019744873047, 0.4191673994064331], "val_accuracy": [0.4586666524410248, 0.6413333415985107, 0.7183333039283752, 0.7446666955947876, 0.746999979019165, 0.7673333287239075, 0.7776666879653931, 0.7903333306312561, 0.7940000295639038, 0.7953333258628845, 0.8109999895095825, 0.812333345413208, 0.8136666417121887, 0.8183333277702332, 0.8236666917800903, 0.8246666789054871, 0.8209999799728394, 0.8293333053588867, 0.8363333344459534, 0.8426666855812073, 0.8463333249092102, 0.8560000061988831, 0.8510000109672546, 0.8583333492279053, 0.8560000061988831, 0.8483333587646484, 0.862666666507721, 0.8666666746139526, 0.8610000014305115, 0.859666645526886, 0.859666645526886, 0.8586666584014893, 0.8633333444595337]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8165714144706726, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209946393966675, 1.6118888854980469, 1.1422611474990845, 0.9950487613677979, 0.8803645968437195, 0.8308140635490417, 0.7942754626274109, 0.7629362344741821, 0.6980780959129333, 0.7260187268257141, 0.6925161480903625, 0.6621304750442505, 0.641412079334259, 0.6329452395439148, 0.6275159120559692, 0.6077288389205933, 0.6161585450172424, 0.5901934504508972, 0.5935898423194885, 0.5638116598129272, 0.5824149250984192, 0.5567012429237366, 0.5484957695007324, 0.5384607315063477, 0.532201886177063, 0.5398217439651489, 0.5166689157485962, 0.5200908184051514, 0.5074874758720398, 0.4988221824169159, 0.4916163980960846, 0.4808832108974457, 0.48749813437461853, 0.4773976504802704, 0.47221997380256653, 0.4814949035644531, 0.46829816699028015, 0.45926737785339355, 0.454520583152771, 0.4569360911846161, 0.444116473197937, 0.43466994166374207, 0.4425962269306183, 0.43774673342704773, 0.4322556257247925, 0.42584720253944397, 0.424216628074646, 0.42056381702423096, 0.4191899001598358, 0.41162005066871643, 0.40161076188087463, 0.40809786319732666, 0.4130045771598816, 0.39889660477638245, 0.3989480435848236, 0.3834744691848755, 0.3870218098163605, 0.3828248679637909, 0.380467027425766], "accuracy": [0.26522254943847656, 0.5041606426239014, 0.5999207496643066, 0.6481310129165649, 0.6782459616661072, 0.6964733600616455, 0.7040021419525146, 0.7152291536331177, 0.7378153204917908, 0.7279091477394104, 0.7420420050621033, 0.7567031979560852, 0.7585523724555969, 0.7638356685638428, 0.7658169269561768, 0.7737419009208679, 0.7696473598480225, 0.7798177003860474, 0.7770439982414246, 0.7889314293861389, 0.7832518815994263, 0.7938185334205627, 0.7952714562416077, 0.7994980812072754, 0.800290584564209, 0.7973847389221191, 0.8095363974571228, 0.8058380484580994, 0.8108572363853455, 0.8189142942428589, 0.8214238286018372, 0.8247259259223938, 0.8220842480659485, 0.8183859586715698, 0.8215559124946594, 0.8247259259223938, 0.8276317715644836, 0.8322546482086182, 0.8310658931732178, 0.829216718673706, 0.8360850811004639, 0.8389908671379089, 0.841500461101532, 0.837537944316864, 0.842028796672821, 0.8368775844573975, 0.8449346423149109, 0.8449346423149109, 0.8461233377456665, 0.8532558679580688, 0.8477083444595337, 0.8488970994949341, 0.8495575189590454, 0.8512746095657349, 0.8533879518508911, 0.858671247959137, 0.8593316674232483, 0.8613129258155823, 0.8603883385658264], "val_loss": [1.9278634786605835, 1.1285125017166138, 0.9673910140991211, 0.8036671280860901, 0.7354332804679871, 0.6937686204910278, 0.6726692914962769, 0.619813859462738, 0.6597539186477661, 0.6056751012802124, 0.5704437494277954, 0.5878469347953796, 0.536677896976471, 0.5697941780090332, 0.5686677098274231, 0.5204696655273438, 0.5176783800125122, 0.5314750671386719, 0.5006961226463318, 0.49719929695129395, 0.49323490262031555, 0.4868199825286865, 0.49531206488609314, 0.4738289713859558, 0.5002239346504211, 0.45773035287857056, 0.4531731903553009, 0.4799458682537079, 0.4635288119316101, 0.43993809819221497, 0.44316771626472473, 0.4325186312198639, 0.43558037281036377, 0.4342455267906189, 0.4373873770236969, 0.4271312355995178, 0.41504281759262085, 0.4121476709842682, 0.41518962383270264, 0.4132816195487976, 0.4046703279018402, 0.4165119230747223, 0.4183932840824127, 0.4022895395755768, 0.3974640369415283, 0.4124923050403595, 0.40128254890441895, 0.40269434452056885, 0.3874388039112091, 0.391439288854599, 0.3816886246204376, 0.3885309100151062, 0.3971143066883087, 0.37183651328086853, 0.373028039932251, 0.38040193915367126, 0.36834701895713806, 0.3769674599170685, 0.3716437518596649], "val_accuracy": [0.5136666893959045, 0.6320000290870667, 0.6513333320617676, 0.6966666579246521, 0.7236666679382324, 0.7279999852180481, 0.75, 0.7506666779518127, 0.7519999742507935, 0.7716666460037231, 0.7836666703224182, 0.7726666927337646, 0.7933333516120911, 0.7829999923706055, 0.7803333401679993, 0.796999990940094, 0.8066666722297668, 0.7956666946411133, 0.8046666383743286, 0.8153333067893982, 0.8080000281333923, 0.8090000152587891, 0.812333345413208, 0.8213333487510681, 0.8053333163261414, 0.8270000219345093, 0.8306666612625122, 0.8153333067893982, 0.8266666531562805, 0.8339999914169312, 0.8296666741371155, 0.8403333425521851, 0.8296666741371155, 0.8330000042915344, 0.8343333601951599, 0.8363333344459534, 0.8450000286102295, 0.8433333039283752, 0.8426666855812073, 0.8426666855812073, 0.8456666469573975, 0.8376666903495789, 0.8386666774749756, 0.8473333120346069, 0.8446666598320007, 0.8373333215713501, 0.8450000286102295, 0.843666672706604, 0.8553333282470703, 0.8453333377838135, 0.8536666631698608, 0.8516666889190674, 0.846666693687439, 0.8569999933242798, 0.8556666374206543, 0.8543333411216736, 0.8566666841506958, 0.8550000190734863, 0.8550000190734863]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 5, 2, 3, 5], [0, 2, 0, 2, 2], [57, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 7], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035178184509277, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 2, 3, 2, 3, 2, 3, 6, 3, 3, 4, 9], [0, 2, 1, 0, 2, 2, 3, 2, 1, 3], [41, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 2, 0, 6, 3, 8, 2, 8, 5, 9], [2, 0, 3, 1, 0], [24, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 7, 1], [0, 1, 4, 7, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 12, 10, 3, 14, 10, 4, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)), grad), tf.math.multiply(tf.math.pow(grad, alpha), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), alpha))), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 3], [87, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 6, 6, 3, 8, 2, 7, 3, 4, 9, 1, 8, 0, 6, 9, 8], [2, 0, 3, 1, 5, 5, 0, 4, 1], [16, 63, 5, 26], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 26, 17, 9, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.math.multiply(tf.math.pow(grad, grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]