[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2045609951019287, 1.590384602546692, 1.1376131772994995, 0.9791457653045654, 0.8944350481033325, 0.834599494934082, 0.7644299268722534, 0.7587946057319641, 0.7420908808708191, 0.7140788435935974, 0.7005742788314819, 0.6780027151107788, 0.6539009213447571, 0.6422540545463562, 0.6485179662704468, 0.6186549067497253, 0.5943577885627747, 0.5844576954841614, 0.5793372988700867, 0.5626276135444641, 0.555132269859314, 0.5646369457244873, 0.5407875776290894, 0.550672709941864], "accuracy": [0.2674679756164551, 0.5013868808746338, 0.5978074073791504, 0.6499801874160767, 0.6750759482383728, 0.7010962963104248, 0.7190595865249634, 0.7213049530982971, 0.7238145470619202, 0.7372870445251465, 0.7359662055969238, 0.7416457533836365, 0.7560427784919739, 0.7614582180976868, 0.757099449634552, 0.7703077793121338, 0.7820631265640259, 0.783119797706604, 0.7868181467056274, 0.7881389260292053, 0.7922335267066956, 0.7905164361000061, 0.7987055778503418, 0.7943468689918518], "val_loss": [1.9068068265914917, 1.1049752235412598, 0.8842621445655823, 0.8384120464324951, 0.7197415232658386, 0.7175337076187134, 0.7084764242172241, 0.6469812989234924, 0.6332119107246399, 0.5951083302497864, 0.6165947914123535, 0.5672562122344971, 0.5496094822883606, 0.5509491562843323, 0.5609490275382996, 0.5319672226905823, 0.5211540460586548, 0.508836567401886, 0.4974079132080078, 0.5045979022979736, 0.475676029920578, 0.48017358779907227, 0.4799642264842987, 0.4954775273799896], "val_accuracy": [0.5396666526794434, 0.6333333253860474, 0.6859999895095825, 0.6869999766349792, 0.7400000095367432, 0.7326666712760925, 0.7379999756813049, 0.7556666731834412, 0.749666690826416, 0.7766666412353516, 0.7523333430290222, 0.7806666493415833, 0.8023333549499512, 0.8016666769981384, 0.7860000133514404, 0.8046666383743286, 0.809333324432373, 0.809333324432373, 0.8216666579246521, 0.8140000104904175, 0.8206666707992554, 0.8196666836738586, 0.8133333325386047, 0.8100000023841858]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [8, 2, 3, 2, 3, 5, 2, 2, 4, 4, 6, 2, 4, 8, 5, 6, 0, 9], [0, 2, 3, 0, 0, 3, 2, 0, 3, 0, 2, 1], [0, 39, 39, 28, 36, 53], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 0, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 2, 0, 2, 5, 2, 1, 8, 3, 2, 7, 5, 1, 6, 2, 5, 1, 2, 0, 6, 6, 2, 1, 5, 5, 9], [0, 7, 7, 6, 0, 6, 1, 3, 2, 3, 7, 2, 7, 2, 6, 1], [65, 22, 30], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 18, 12, 6, 11, 7, 4, 1, 42, 26, 16, 3, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(grad)), tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), grad), tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.square(grad)), tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), alpha)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.sqrt(grad), grad)))), tf.math.multiply(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.subtract(alpha, tf.math.add(sigma, beta))), sigma), tf.math.negative(tf.math.divide_no_nan(grad, beta))), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.square(grad), tf.math.square(alpha))))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11636507511138916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 6, 2, 7, 3, 9], [0, 2, 1, 0, 2, 1, 3, 1], [71, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 5, 2, 0], [16, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [6, 2, 0, 9, 8, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 19, 11, 8, 3, 10, 6, 4, 1, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310203790664673, 2.3099911212921143, 2.3095126152038574, 2.310253381729126, 2.3087446689605713, 2.3085811138153076], "accuracy": [0.09192973375320435, 0.0948355570435524, 0.09206181764602661, 0.09008057415485382, 0.09113723784685135, 0.09457138925790787], "val_loss": [2.3093228340148926, 2.3093228340148926, 2.3093228340148926, 2.3093228340148926, 2.3093228340148926, 2.3093228340148926], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 8], [0, 6, 4, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.sqrt(grad), grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309659957885742, 2.309356689453125, 2.3104300498962402, 2.3095951080322266, 2.310290813446045, 2.3107967376708984], "accuracy": [0.09721305221319199, 0.09496764093637466, 0.08849557489156723, 0.0952318087220192, 0.09245806187391281, 0.08942015469074249], "val_loss": [2.308769702911377, 2.308769702911377, 2.308769702911377, 2.308769702911377, 2.308769702911377, 2.308769702911377], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [22, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 1, 2, 5], [0, 6, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.31105375289917, 2.309157609939575, 2.3101871013641357, 2.3095405101776123, 2.3103384971618652, 2.3099637031555176], "accuracy": [0.08928807079792023, 0.09232597798109055, 0.09232597798109055, 0.09615638852119446, 0.08994849026203156, 0.08809932321310043], "val_loss": [2.3090436458587646, 2.3090436458587646, 2.3090436458587646, 2.3090436458587646, 2.3090436458587646, 2.3090436458587646], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]