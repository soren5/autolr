[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8165714144706726, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207906723022461, 1.5872987508773804, 1.125425934791565, 0.9670467972755432, 0.8676922917366028, 0.8433568477630615, 0.7848077416419983, 0.7594422698020935, 0.7162713408470154, 0.7075303792953491, 0.6783139109611511, 0.6465644836425781, 0.6495299339294434, 0.6260849833488464, 0.6146565079689026, 0.6133521795272827, 0.5844120383262634, 0.5953031182289124, 0.5727819800376892, 0.5712893605232239, 0.5569756031036377, 0.5449305772781372, 0.5350918769836426, 0.5238205194473267, 0.536342978477478, 0.5191324353218079, 0.5117833018302917, 0.49860680103302, 0.48958820104599, 0.5125895142555237, 0.48489949107170105, 0.4793798625469208, 0.48063987493515015], "accuracy": [0.26826047897338867, 0.520142674446106, 0.6078457236289978, 0.6535464525222778, 0.6847180128097534, 0.6936996579170227, 0.7104741930961609, 0.7211728692054749, 0.7363624572753906, 0.7383436560630798, 0.7474573850631714, 0.7586844563484192, 0.7559106945991516, 0.7647602558135986, 0.7750627398490906, 0.7705719470977783, 0.7815347909927368, 0.77677983045578, 0.7907806038856506, 0.7854973077774048, 0.7886672616004944, 0.7994980812072754, 0.8076872229576111, 0.8080834746360779, 0.7975168228149414, 0.8087438941001892, 0.8133667707443237, 0.8224804997444153, 0.8227446675300598, 0.8096684813499451, 0.8252542614936829, 0.8238013386726379, 0.8216879963874817], "val_loss": [1.9134387969970703, 1.1094846725463867, 0.8837772607803345, 0.7785510420799255, 0.7542238235473633, 0.7102672457695007, 0.6672261357307434, 0.6241396069526672, 0.608440101146698, 0.5993362665176392, 0.6224225163459778, 0.5733736157417297, 0.5751650333404541, 0.5416936278343201, 0.5456132292747498, 0.5304157137870789, 0.5497686266899109, 0.5226050019264221, 0.505628228187561, 0.4897325336933136, 0.5080922842025757, 0.48126742243766785, 0.481334924697876, 0.4665738046169281, 0.4685567617416382, 0.46227774024009705, 0.4618505537509918, 0.451750785112381, 0.49529314041137695, 0.45510730147361755, 0.4437214434146881, 0.44826677441596985, 0.4318426847457886], "val_accuracy": [0.5786666870117188, 0.6136666536331177, 0.6693333387374878, 0.7160000205039978, 0.7166666388511658, 0.7403333187103271, 0.7476666569709778, 0.7666666507720947, 0.7683333158493042, 0.7763333320617676, 0.7596666812896729, 0.7836666703224182, 0.7756666541099548, 0.8006666898727417, 0.7916666865348816, 0.8040000200271606, 0.7786666750907898, 0.7946666479110718, 0.8140000104904175, 0.8149999976158142, 0.8023333549499512, 0.8209999799728394, 0.8216666579246521, 0.8199999928474426, 0.8266666531562805, 0.8306666612625122, 0.8266666531562805, 0.8373333215713501, 0.7889999747276306, 0.824999988079071, 0.8309999704360962, 0.8286666870117188, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [5, 0, 4, 1, 0], [5, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 6, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.3157142996788025, "mapping_values": [1, 10, 5, 5, 2, 10, 5, 5, 2, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.325038194656372, 2.3036720752716064, 2.2917118072509766, 2.283637046813965, 2.2945547103881836, 2.31394624710083, 2.3043248653411865, 2.303555488586426], "accuracy": [0.17910447716712952, 0.10196803510189056, 0.11913882195949554, 0.1224408894777298, 0.1430458277463913, 0.1566503793001175, 0.09826971590518951, 0.09285431355237961], "val_loss": [2.3048391342163086, 2.300424575805664, 2.185865879058838, 2.3028838634490967, 2.1597859859466553, 2.30507493019104, 2.3033530712127686, 2.3027167320251465], "val_accuracy": [0.09799999743700027, 0.10199999809265137, 0.32766667008399963, 0.0949999988079071, 0.2460000067949295, 0.1003333330154419, 0.0949999988079071, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 2], [0, 2, 2, 0, 2], [2, 39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 1, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.16914285719394684, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [71.40753173828125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2094835489988327, 0.11042134463787079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3333.19140625, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.16599999368190765, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 1, 2, 2, 1], [0, 6, 7, 4, 0], [0, 22], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 0, 2, 1, 1, 1, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [2.3099939823150635, 2.3102614879608154, 2.309664487838745, 2.3096065521240234, 2.3099453449249268, 2.3102660179138184], "accuracy": [0.08836349099874496, 0.09549596905708313, 0.09377889335155487, 0.0940430611371994, 0.09311848133802414, 0.08796724677085876], "val_loss": [2.3092358112335205, 2.3092358112335205, 2.3092358112335205, 2.3092358112335205, 2.3092358112335205, 2.3092358112335205], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 0, 2, 5], [0, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310086965560913, 2.309813976287842, 2.310058116912842, 2.309380054473877, 2.3092572689056396, 2.309563636779785], "accuracy": [0.09285431355237961, 0.0952318087220192, 0.0944393053650856, 0.09959053993225098, 0.09457138925790787, 0.09615638852119446], "val_loss": [2.3084795475006104, 2.3084795475006104, 2.3084795475006104, 2.3084795475006104, 2.3084795475006104, 2.3084795475006104], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]