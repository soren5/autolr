[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8105714321136475, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2126660346984863, 1.6127995252609253, 1.1452938318252563, 0.9612831473350525, 0.8796501755714417, 0.8286173343658447, 0.783991277217865, 0.751513659954071, 0.7137978076934814, 0.71397465467453, 0.677547812461853, 0.6624549031257629, 0.6633474230766296, 0.6626976132392883, 0.6232459545135498, 0.6158590316772461, 0.6036350727081299, 0.5944868922233582, 0.5981029272079468, 0.5575172901153564, 0.5655720829963684, 0.5417413115501404, 0.5467979907989502, 0.5239978432655334, 0.5308665633201599, 0.5268425345420837, 0.5141937136650085, 0.5242711901664734], "accuracy": [0.2677321434020996, 0.5024435520172119, 0.5958262085914612, 0.663848876953125, 0.6839255094528198, 0.69673752784729, 0.7077004313468933, 0.7285695672035217, 0.7345132827758789, 0.7345132827758789, 0.748249888420105, 0.7477215528488159, 0.750231146812439, 0.7518161535263062, 0.7680623531341553, 0.7717606425285339, 0.7769119143486023, 0.7837802171707153, 0.7755910754203796, 0.7948752045631409, 0.7923656105995178, 0.8010830879211426, 0.7923656105995178, 0.8120459914207458, 0.8053097128868103, 0.8055738806724548, 0.8088759779930115, 0.8072909712791443], "val_loss": [1.9223382472991943, 1.126960277557373, 0.8989132642745972, 0.7723571062088013, 0.7586479783058167, 0.6851356625556946, 0.669532060623169, 0.6467296481132507, 0.7229990363121033, 0.6292250752449036, 0.578504204750061, 0.6031535863876343, 0.569541335105896, 0.6236119866371155, 0.545187771320343, 0.5617702007293701, 0.5521753430366516, 0.5550971031188965, 0.5113734006881714, 0.5224440693855286, 0.5427634119987488, 0.4943424463272095, 0.4927213191986084, 0.5086098909378052, 0.5051569938659668, 0.48440998792648315, 0.5004311800003052, 0.4723607897758484], "val_accuracy": [0.5463333129882812, 0.640666663646698, 0.6846666932106018, 0.7206666469573975, 0.7136666774749756, 0.737333357334137, 0.7363333106040955, 0.7516666650772095, 0.7139999866485596, 0.7486666440963745, 0.7706666588783264, 0.765999972820282, 0.7789999842643738, 0.7509999871253967, 0.7956666946411133, 0.7956666946411133, 0.796999990940094, 0.781000018119812, 0.8106666803359985, 0.8080000281333923, 0.7983333468437195, 0.8223333358764648, 0.8270000219345093, 0.812333345413208, 0.8119999766349792, 0.8169999718666077, 0.8116666674613953, 0.8233333230018616]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 9, 4, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 0, 3, 7, 7, 1, 2, 1, 2, 5], [0, 6, 1, 6, 0, 2, 6, 6, 5], [0, 22], [1], [0], [6], [0]], "fitness": -0.2785714268684387, "mapping_values": [1, 1, 0, 1, 1, 8, 6, 2, 2, 20, 11, 9, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(grad, grad), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4104318618774414, 2.4064364433288574, 2.2818973064422607, 2.3031935691833496, 2.3041515350341797, 2.3507518768310547], "accuracy": [0.21529521048069, 0.12270505726337433, 0.14951789379119873, 0.09853387624025345, 0.1516312211751938, 0.16959451138973236], "val_loss": [2.6885905265808105, 2.2997350692749023, 2.30533504486084, 2.2858476638793945, 2.29075026512146, 2.308349847793579], "val_accuracy": [0.2866666615009308, 0.10066666454076767, 0.11666666716337204, 0.18199999630451202, 0.19300000369548798, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 6, 3, 3, 3, 5, 1], [3, 2, 1, 0, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [0, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 7, 0], [0, 6, 3, 6], [0], [1], [0], [2], [0]], "fitness": -0.10457143187522888, "mapping_values": [1, 13, 7, 6, 1, 7, 4, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.multiply(grad, grad), tf.math.square(alpha)), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [129511458865152.0, 5566975547801600.0, 4.214621342793728e+16, 1.5970131515539456e+17, 4.468839598050509e+17, 1.0219911789349437e+18, 2.1026135405431357e+18, 3.8631508717432996e+18, 6.684328108947931e+18, 1.1042531617196212e+19, 1.7253659608363303e+19, 2.6009281806576124e+19], "accuracy": [0.108440101146698, 0.11213842034339905, 0.10645885765552521, 0.10817593336105347, 0.1018359512090683, 0.10566636174917221, 0.10896842926740646, 0.11094967275857925, 0.10619468986988068, 0.11121384054422379, 0.10487385839223862, 0.11174217611551285], "val_loss": [896251495186432.0, 1.4556192848216064e+16, 7.346430749651763e+16, 2.3220878124777472e+17, 5.7446170272517325e+17, 1.2231886813978952e+18, 2.3432384991859835e+18, 4.192473021081977e+18, 7.119818826186752e+18, 1.1496466092235162e+19, 1.7806746942483464e+19, 2.6628320047153545e+19], "val_accuracy": [0.09033333510160446, 0.09266666322946548, 0.09566666930913925, 0.10199999809265137, 0.10566666722297668, 0.10566666722297668, 0.10700000077486038, 0.10633333027362823, 0.10466666519641876, 0.10599999874830246, 0.10599999874830246, 0.10700000077486038]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 2, 0, 8, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 12, 7, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 36, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 0, 3, 8, 2], [2, 0, 3, 1, 0], [74, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 3, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309497594833374, 2.3105156421661377, 2.3094875812530518, 2.309025764465332, 2.3084716796875, 2.3093173503875732], "accuracy": [0.09206181764602661, 0.09245806187391281, 0.09192973375320435, 0.0944393053650856, 0.09034473448991776, 0.0956280529499054], "val_loss": [2.3081538677215576, 2.3081538677215576, 2.3081538677215576, 2.3081538677215576, 2.3081538677215576, 2.3081538677215576], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]