[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2072558403015137, 1.6087300777435303, 1.1429892778396606, 0.9424008131027222, 0.9329738020896912, 0.8389517664909363, 0.7874046564102173, 0.7562863230705261, 0.7237217426300049, 0.7198288440704346, 0.6724928617477417, 0.6826152801513672, 0.6424949765205383, 0.6339743733406067, 0.6239039897918701, 0.6263699531555176, 0.6088640689849854, 0.5913867354393005, 0.5886979103088379, 0.5782345533370972, 0.5543753504753113, 0.5517399311065674, 0.5626852512359619, 0.5468562841415405, 0.5276180505752563, 0.5172159075737, 0.5220820307731628, 0.5222476124763489], "accuracy": [0.26826047897338867, 0.495839387178421, 0.5960903167724609, 0.6635847091674805, 0.6672830581665039, 0.6951525807380676, 0.71100252866745, 0.7182670831680298, 0.7345132827758789, 0.7351737022399902, 0.7486461400985718, 0.7448157668113708, 0.765949010848999, 0.7638356685638428, 0.7663452625274658, 0.7672698497772217, 0.77677983045578, 0.7799497842788696, 0.7832518815994263, 0.7903843522071838, 0.7924976944923401, 0.7931581139564514, 0.7957997918128967, 0.7991018295288086, 0.8041210174560547, 0.8117818236351013, 0.8078193068504333, 0.8059701323509216], "val_loss": [1.9111237525939941, 1.0955630540847778, 0.8620600700378418, 0.7918059825897217, 0.7794343829154968, 0.6697413921356201, 0.6630941033363342, 0.6205460429191589, 0.664014458656311, 0.6031516790390015, 0.5839601159095764, 0.5625702738761902, 0.5669668316841125, 0.536665678024292, 0.5510281920433044, 0.5327544808387756, 0.5410781502723694, 0.5064839720726013, 0.5022507905960083, 0.4964357614517212, 0.49125340580940247, 0.4878727197647095, 0.47631242871284485, 0.4874764680862427, 0.4742596745491028, 0.48785603046417236, 0.47355395555496216, 0.4682188034057617], "val_accuracy": [0.5586666464805603, 0.6573333144187927, 0.6853333115577698, 0.7070000171661377, 0.6883333325386047, 0.7393333315849304, 0.731333315372467, 0.7606666684150696, 0.7443333268165588, 0.7620000243186951, 0.7823333144187927, 0.7879999876022339, 0.7796666622161865, 0.7886666655540466, 0.7883333563804626, 0.8006666898727417, 0.7903333306312561, 0.8043333292007446, 0.8113333582878113, 0.8109999895095825, 0.8116666674613953, 0.8140000104904175, 0.8223333358764648, 0.8116666674613953, 0.8203333616256714, 0.8086666464805603, 0.8166666626930237, 0.8199999928474426]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 6, 3, 1, 3, 5], [0, 2, 1, 3, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1], [5, 2, 0, 2, 5], [0, 6, 7], [0], [1], [0], [2], [0]], "fitness": -0.8022857308387756, "mapping_values": [1, 8, 4, 4, 1, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.1971778869628906, 1.4924198389053345, 1.1116715669631958, 0.8979101181030273, 0.8242795467376709, 0.7765235304832458, 0.75032639503479, 0.7155796885490417, 0.6785697340965271, 0.6911173462867737, 0.6535488367080688, 0.6394399404525757, 0.6295943856239319, 0.6190109252929688, 0.6053705811500549, 0.5850119590759277, 0.5824321508407593, 0.5628120303153992, 0.552213728427887, 0.5499874353408813, 0.5335940718650818, 0.534518837928772, 0.5228272676467896, 0.5124534368515015, 0.5204692482948303, 0.5192527174949646, 0.4958406388759613, 0.48142051696777344, 0.4894618093967438, 0.48486587405204773, 0.4747162163257599, 0.4717484414577484, 0.4675297439098358, 0.45779046416282654, 0.43979907035827637, 0.4475623071193695, 0.434103786945343, 0.44030874967575073, 0.426470547914505, 0.42775759100914, 0.434098482131958, 0.43553870916366577, 0.41348186135292053, 0.41027912497520447], "accuracy": [0.26918503642082214, 0.507330596446991, 0.6013736724853516, 0.6752080321311951, 0.6934354901313782, 0.7088891863822937, 0.7147008180618286, 0.7290979027748108, 0.7427024245262146, 0.7397965788841248, 0.7499669790267944, 0.7604015469551086, 0.761590301990509, 0.7644960880279541, 0.767401933670044, 0.7798177003860474, 0.7765156626701355, 0.7886672616004944, 0.7936864495277405, 0.7911768555641174, 0.8020076751708984, 0.7998943328857422, 0.8001585006713867, 0.8123101592063904, 0.8035926818847656, 0.8006868362426758, 0.8156121969223022, 0.8234050869941711, 0.8173292875289917, 0.8195747137069702, 0.8222163319587708, 0.8202351331710815, 0.8276317715644836, 0.8260467648506165, 0.8372738361358643, 0.8325188159942627, 0.8393871188163757, 0.8379341959953308, 0.8421608805656433, 0.8392550349235535, 0.8380662798881531, 0.8343679904937744, 0.8454629778862, 0.8471800088882446], "val_loss": [1.7601336240768433, 1.0021718740463257, 0.9238130450248718, 0.846845805644989, 0.7808710932731628, 0.7427613735198975, 0.6725379824638367, 0.6814725995063782, 0.671258807182312, 0.6383923888206482, 0.644199550151825, 0.6166632771492004, 0.6158621311187744, 0.6585455536842346, 0.5874961614608765, 0.5737800002098083, 0.5769450068473816, 0.5671703815460205, 0.5568376183509827, 0.5461229681968689, 0.5475701689720154, 0.536706805229187, 0.5307655334472656, 0.5392056703567505, 0.521538257598877, 0.52860027551651, 0.49130016565322876, 0.5001909136772156, 0.5112324357032776, 0.5111201405525208, 0.5005138516426086, 0.47875070571899414, 0.49376070499420166, 0.47091975808143616, 0.4778289496898651, 0.48355427384376526, 0.47019556164741516, 0.45457109808921814, 0.45255473256111145, 0.4610937833786011, 0.46868106722831726, 0.4547450840473175, 0.4586593508720398, 0.4476565718650818], "val_accuracy": [0.5929999947547913, 0.6669999957084656, 0.6616666913032532, 0.6746666431427002, 0.7073333263397217, 0.706333339214325, 0.7509999871253967, 0.7273333072662354, 0.7426666617393494, 0.7493333220481873, 0.7606666684150696, 0.7680000066757202, 0.762666642665863, 0.7329999804496765, 0.7633333206176758, 0.7766666412353516, 0.781000018119812, 0.7850000262260437, 0.7956666946411133, 0.7929999828338623, 0.7973333597183228, 0.7946666479110718, 0.7963333129882812, 0.7870000004768372, 0.7990000247955322, 0.7829999923706055, 0.8143333196640015, 0.8066666722297668, 0.8033333420753479, 0.7996666431427002, 0.8033333420753479, 0.8190000057220459, 0.8090000152587891, 0.8226666450500488, 0.8146666884422302, 0.8143333196640015, 0.8180000185966492, 0.8289999961853027, 0.8309999704360962, 0.8176666498184204, 0.8199999928474426, 0.828000009059906, 0.8243333101272583, 0.8289999961853027]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 7], [0, 0, 1, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 0, 6, 6, 8, 2], [2, 0, 3, 1, 2], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [26], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 3, 8, 4, 3, 6, 9], [2, 1, 6, 0, 4], [0, 93]], "fitness": -0.24857142567634583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(alpha, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.sqrt(alpha), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.pow(beta, alpha)), tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), grad))", "other_info": {"loss": [2.3641645908355713, 2.3278377056121826, 2.2616615295410156, 2.8897199630737305, 2.604445457458496, 2.2877798080444336, 2.2830698490142822, 2.3047056198120117, 2.303779125213623, 2.3031578063964844, 2.303356170654297], "accuracy": [0.1912561058998108, 0.16259410977363586, 0.11940298229455948, 0.18861444294452667, 0.10302469879388809, 0.13961167633533478, 0.13591335713863373, 0.09800554811954498, 0.1002509593963623, 0.10170386731624603, 0.09840179979801178], "val_loss": [2.2931911945343018, 1.914462924003601, 2.2936089038848877, 4.497435092926025, 2.3030169010162354, 2.15494441986084, 2.304213047027588, 2.303053140640259, 2.3029024600982666, 2.302783966064453, 2.302551507949829], "val_accuracy": [0.15133333206176758, 0.234333336353302, 0.1823333352804184, 0.0949999988079071, 0.10199999809265137, 0.25333333015441895, 0.10199999809265137, 0.10199999809265137, 0.09966666996479034, 0.10133333504199982, 0.09866666793823242]}, "mapping_values": [1, 12, 6, 6, 2, 11, 6, 5, 1, 1, 0, 1, 1, 13, 8, 5, 2], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [8, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 6, 2, 9, 3, 6, 9, 7, 7, 7, 0, 5, 9, 5, 7, 6, 7, 6], [2, 0, 3, 1, 3, 2, 2, 2, 1, 0, 5, 5], [16, 1, 88, 75, 36], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 34, 22, 12, 5, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), beta), tf.math.square(tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(beta, alpha)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304018259048462, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5, 2, 9], [0, 0, 1, 0, 2], [0, 90, 39, 54], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 9, 6, 7, 8, 3], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [7], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 13, 8, 5, 4, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095362186431885, 2.3095669746398926, 2.3114583492279053, 2.311203956604004, 2.3096420764923096, 2.3101963996887207], "accuracy": [0.0944393053650856, 0.09259014576673508, 0.09074098616838455, 0.08730682730674744, 0.0952318087220192, 0.08757099509239197], "val_loss": [2.3087666034698486, 2.3087666034698486, 2.3087666034698486, 2.3087666034698486, 2.3087666034698486, 2.3087666034698486], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]