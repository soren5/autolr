[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8011428713798523, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2130095958709717, 1.6127045154571533, 1.1435036659240723, 0.991275429725647, 0.8770175576210022, 0.8470090627670288, 0.7746232748031616, 0.7644222974777222, 0.7236469984054565, 0.7065905928611755, 0.6820378303527832, 0.6888726949691772, 0.6600377559661865, 0.6304638385772705, 0.6349467039108276, 0.6051377058029175, 0.6081414818763733, 0.5918551683425903, 0.5820766091346741, 0.5646171569824219, 0.5627206563949585, 0.5608601570129395, 0.552156925201416, 0.5438717007637024, 0.5347419381141663, 0.521693229675293, 0.5222826600074768, 0.5084354281425476, 0.5007416605949402, 0.5135557651519775], "accuracy": [0.270109623670578, 0.5140668153762817, 0.6048077940940857, 0.6476026773452759, 0.683000922203064, 0.6882842183113098, 0.7127195596694946, 0.7230220437049866, 0.7333245277404785, 0.7338528633117676, 0.7486461400985718, 0.7506273984909058, 0.7578919529914856, 0.7693831920623779, 0.7600052952766418, 0.7770439982414246, 0.7711002230644226, 0.7770439982414246, 0.7815347909927368, 0.7911768555641174, 0.7952714562416077, 0.7907806038856506, 0.7952714562416077, 0.7957997918128967, 0.7992339134216309, 0.8083476424217224, 0.8100647330284119, 0.8104609847068787, 0.8153480291366577, 0.8088759779930115], "val_loss": [1.9313398599624634, 1.1040821075439453, 0.9801472425460815, 0.8297389149665833, 0.7934425473213196, 0.6940285563468933, 0.6712489724159241, 0.7062820792198181, 0.6497225761413574, 0.6192819476127625, 0.6309624314308167, 0.6147228479385376, 0.5678640007972717, 0.5784724354743958, 0.5592157244682312, 0.5594883561134338, 0.546096682548523, 0.5736832022666931, 0.5419342517852783, 0.5235638618469238, 0.5178207755088806, 0.5023362636566162, 0.5114416480064392, 0.4882024824619293, 0.4760981500148773, 0.494637131690979, 0.48643872141838074, 0.47404244542121887, 0.5154646635055542, 0.47339847683906555], "val_accuracy": [0.5429999828338623, 0.6313333511352539, 0.6330000162124634, 0.6983333230018616, 0.6886666417121887, 0.7316666841506958, 0.7356666922569275, 0.7329999804496765, 0.75, 0.7639999985694885, 0.765666663646698, 0.7473333477973938, 0.7876666784286499, 0.7893333435058594, 0.7906666398048401, 0.7873333096504211, 0.7853333353996277, 0.7713333368301392, 0.7873333096504211, 0.8019999861717224, 0.8050000071525574, 0.8106666803359985, 0.8016666769981384, 0.8109999895095825, 0.8236666917800903, 0.812666654586792, 0.8153333067893982, 0.8196666836738586, 0.7993333339691162, 0.8169999718666077]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 3, 2, 6, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 9, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [3, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 3, 3, 0, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(sigma, tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, grad))))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [94.4718246459961, 11181.2568359375, 182827.421875, 1330946.5, 5745088.0, 18694272.0], "accuracy": [0.0952318087220192, 0.10157178342342377, 0.10077928751707077, 0.0948355570435524, 0.1022322028875351, 0.10157178342342377], "val_loss": [805.7708129882812, 39558.60546875, 420381.6875, 2284964.25, 8547799.0, 25196318.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 2, 3, 3, 3, 5], [0, 3, 2, 0, 2], [35, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 1, 3, 3, 0], [16, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 3, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 2, 0, 5, 6, 9], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 6, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [83, 19], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 7, 4, 7, 5, 5], [2, 5, 0, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 3, 10, 6, 4, 1, 8, 5, 3, 1, 10, 6, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.square(alpha)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 8, 0], [0, 2, 1, 3, 1], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 6, 9, 2], [4, 4, 0, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1, 3, 7], [5, 6, 2, 6, 0, 2, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 7, 4, 3, 1, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(tf.math.multiply(beta, grad), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.8036455339016994e+24, 2060.763427734375, 2287.911865234375, 2894.8876953125, 3998.643798828125, 4979.359375, 4424.06982421875, 7121.400390625, 9313.6474609375, 7934.39794921875, 5533.0244140625, 5937.61181640625, 7444.80712890625, 7862.34033203125, 5375.904296875], "accuracy": [0.09747721254825592, 0.1022322028875351, 0.10394927859306335, 0.09893012791872025, 0.09496764093637466, 0.09721305221319199, 0.1002509593963623, 0.09998679161071777, 0.09919429570436478, 0.09589222073554993, 0.09694888442754745, 0.09708096832036972, 0.10289261490106583, 0.10276053100824356, 0.1026284471154213], "val_loss": [2119.00732421875, 1491.4736328125, 3389.214599609375, 3471.901611328125, 4299.796875, 3778.154052734375, 5591.76953125, 8252.7744140625, 8504.2685546875, 8031.9140625, 3861.657958984375, 8863.3056640625, 7153.083984375, 6309.15087890625, 7876.619140625], "val_accuracy": [0.0976666659116745, 0.0989999994635582, 0.0989999994635582, 0.0976666659116745, 0.09600000083446503, 0.10066666454076767, 0.09933333098888397, 0.09966666996479034, 0.09933333098888397, 0.10199999809265137, 0.0976666659116745, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.10199999809265137]}}]