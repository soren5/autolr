[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8022857308387756, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209151029586792, 1.6140530109405518, 1.1844843626022339, 1.003914713859558, 0.8769688606262207, 0.8546586632728577, 0.8030640482902527, 0.7613065838813782, 0.7398185133934021, 0.7193037867546082, 0.6921018958091736, 0.6844367384910583, 0.6578090786933899, 0.6622853875160217, 0.6327527761459351, 0.6144283413887024, 0.6060537695884705, 0.592617928981781, 0.5835343599319458, 0.5808272957801819, 0.5564669370651245, 0.5689530372619629, 0.5487014651298523, 0.5563399195671082, 0.5307883620262146, 0.5310627818107605, 0.5305873155593872, 0.51524817943573, 0.5100025534629822, 0.5060141682624817, 0.49870744347572327, 0.48635414242744446, 0.4903620481491089, 0.4831142723560333, 0.485383540391922, 0.47304567694664, 0.46404504776000977], "accuracy": [0.2673358917236328, 0.5020473003387451, 0.5779950022697449, 0.6365077495574951, 0.6775855422019958, 0.6827367544174194, 0.7008321285247803, 0.7186633348464966, 0.7257958054542542, 0.7325320243835449, 0.7395324110984802, 0.7401928305625916, 0.7524765729904175, 0.7531369924545288, 0.7635715007781982, 0.7687227725982666, 0.7717606425285339, 0.7778365015983582, 0.7864218950271606, 0.7816668748855591, 0.7915731072425842, 0.7897239327430725, 0.7940827012062073, 0.7903843522071838, 0.8029322624206543, 0.7984414100646973, 0.8000264167785645, 0.8100647330284119, 0.8099326491355896, 0.8104609847068787, 0.8109893202781677, 0.8224804997444153, 0.8185180425643921, 0.8193105459213257, 0.8231409192085266, 0.8271034359931946, 0.8304054737091064], "val_loss": [1.9192426204681396, 1.1118896007537842, 0.8528245687484741, 0.7626725435256958, 0.7275724411010742, 0.6640267372131348, 0.6976182460784912, 0.6181865930557251, 0.604771077632904, 0.5939203500747681, 0.598105251789093, 0.5884583592414856, 0.5567579865455627, 0.5429201722145081, 0.5382024049758911, 0.5358737111091614, 0.5425242781639099, 0.5175413489341736, 0.49856308102607727, 0.501457929611206, 0.5058904886245728, 0.48417383432388306, 0.467502236366272, 0.4906036853790283, 0.48139485716819763, 0.47491955757141113, 0.4570447504520416, 0.46980416774749756, 0.45904895663261414, 0.4470643997192383, 0.4541323184967041, 0.43622052669525146, 0.4525500535964966, 0.449615478515625, 0.44650042057037354, 0.44995394349098206, 0.4343295395374298], "val_accuracy": [0.5093333125114441, 0.6309999823570251, 0.7023333311080933, 0.7246666550636292, 0.718999981880188, 0.7536666393280029, 0.7226666808128357, 0.7693333625793457, 0.7739999890327454, 0.7670000195503235, 0.7493333220481873, 0.7796666622161865, 0.7850000262260437, 0.7923333048820496, 0.7960000038146973, 0.7946666479110718, 0.7929999828338623, 0.8080000281333923, 0.815666675567627, 0.8013333082199097, 0.8103333115577698, 0.8190000057220459, 0.8296666741371155, 0.8086666464805603, 0.8169999718666077, 0.8213333487510681, 0.8360000252723694, 0.8233333230018616, 0.8323333263397217, 0.8383333086967468, 0.8259999752044678, 0.8450000286102295, 0.8410000205039978, 0.8360000252723694, 0.8376666903495789, 0.8240000009536743, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 0, 3, 4], [3, 0, 2, 0, 2], [0, 44, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [99, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [5, 2, 0, 5, 5, 2, 4], [0, 6, 1, 5, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 7, 4, 3, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(grad), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.244591604323258e+24, 2524.74365234375, 3729.60693359375, 5149.29541015625, 6469.3798828125, 7671.703125, 8677.1064453125, 9510.6162109375], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09800554811954498, 0.1006472036242485, 0.09840179979801178, 0.09787346422672272, 0.1026284471154213, 0.10011887550354004], "val_loss": [1911.3043212890625, 3247.37744140625, 4545.94091796875, 5947.052734375, 7204.4384765625, 8274.822265625, 9190.044921875, 9931.810546875], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10166666656732559, 0.0989999994635582, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 6, 5], [0, 2, 1, 1, 2], [0, 39, 39], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 0, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 0, 2, 5, 2, 1], [1, 6, 5, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 5, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.square(alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [0, 0, 3, 1, 0, 5], [67, 1, 53], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 5, 2, 3], [0, 6, 1, 6, 0], [0, 49], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 13, 7, 6, 3, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.add(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [26687068160.0, 4030560993280.0, 66713051725824.0, 465026108358656.0, 2050714410942464.0, 6671309886980096.0], "accuracy": [0.10936468094587326, 0.10910051316022873, 0.11081759631633759, 0.10910051316022873, 0.1080438494682312, 0.10817593336105347], "val_loss": [355450454016.0, 18532551098368.0, 193989630230528.0, 1035305490579456.0, 3815182941814784.0, 1.1113052858482688e+16], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 4], [0, 2, 1, 3, 2], [0, 39, 78], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 0, 6, 3, 8, 2], [5, 3, 3, 1, 0], [16, 69], [1, 0, 0, 0, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.05342857167124748, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.4828141820246915e+24, 1.7746347026672503e+26, 1.2704073418727772e+27, 5.152483754200085e+27, 1.4558695786242797e+28, 3.201513245488731e+28, 6.291184796617067e+28], "accuracy": [0.08109892904758453, 0.08466517180204391, 0.0882314071059227, 0.08479725569486618, 0.08321225643157959, 0.08532558381557465, 0.08136309683322906], "val_loss": [3.4714544902374476e+25, 5.556272946944811e+26, 2.81319133774451e+27, 8.89158742220551e+27, 2.1708725805301483e+28, 4.501629850834166e+28, 8.33996743916402e+28], "val_accuracy": [0.0573333315551281, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417]}}]