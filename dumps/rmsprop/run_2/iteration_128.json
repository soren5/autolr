[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8102856874465942, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210094451904297, 1.6065747737884521, 1.1610870361328125, 0.9720953106880188, 0.8849902153015137, 0.8388287425041199, 0.7968877553939819, 0.7744693160057068, 0.726338267326355, 0.7126912474632263, 0.7081606984138489, 0.6580028533935547, 0.6614392399787903, 0.6331498026847839, 0.6407244205474854, 0.6194872260093689, 0.6017824411392212, 0.5884485840797424, 0.5837610960006714, 0.558033287525177, 0.5731319189071655, 0.5542259216308594, 0.5447994470596313, 0.5367937684059143, 0.538071870803833, 0.5292776226997375, 0.5146539807319641, 0.5213992595672607, 0.5059998035430908, 0.5080364942550659, 0.4828173518180847, 0.4849046468734741, 0.4751848578453064, 0.46381875872612, 0.4693509340286255, 0.45564812421798706, 0.4581666588783264, 0.4609583914279938, 0.4482738971710205, 0.4526382386684418, 0.4462815523147583, 0.42890942096710205, 0.4367523193359375, 0.42436471581459045, 0.4311988353729248, 0.41813892126083374, 0.4261893332004547, 0.408302366733551, 0.4167790412902832, 0.4124363362789154], "accuracy": [0.26760005950927734, 0.5041606426239014, 0.604939877986908, 0.6593580842018127, 0.681547999382019, 0.69673752784729, 0.7092854380607605, 0.7074362635612488, 0.7304186820983887, 0.733060359954834, 0.735041618347168, 0.7514199018478394, 0.7508915662765503, 0.7613261342048645, 0.7581561207771301, 0.7700436115264893, 0.7736098170280457, 0.774270236492157, 0.7825914621353149, 0.7891955971717834, 0.7774402499198914, 0.7910447716712952, 0.7992339134216309, 0.7936864495277405, 0.7960638999938965, 0.7979130744934082, 0.8053097128868103, 0.8049134612083435, 0.8088759779930115, 0.8074230551719666, 0.8276317715644836, 0.8181217908859253, 0.8251221776008606, 0.8289526104927063, 0.8239334225654602, 0.8347642421722412, 0.8269713521003723, 0.829216718673706, 0.8362171649932861, 0.8329150676727295, 0.8338396549224854, 0.841500461101532, 0.8421608805656433, 0.8449346423149109, 0.839519202709198, 0.842028796672821, 0.8408400416374207, 0.847840428352356, 0.8425571322441101, 0.8438779711723328], "val_loss": [1.9226194620132446, 1.1527472734451294, 0.8546266555786133, 0.7796096205711365, 0.7294918894767761, 0.6556270122528076, 0.6606749892234802, 0.6491213440895081, 0.5991373062133789, 0.5778892636299133, 0.5765628814697266, 0.5743944644927979, 0.5818742513656616, 0.5324137806892395, 0.556297779083252, 0.5482598543167114, 0.5233961343765259, 0.49227237701416016, 0.5049460530281067, 0.48608464002609253, 0.4769546389579773, 0.4763028621673584, 0.48075273633003235, 0.5016074776649475, 0.4658585488796234, 0.4590705931186676, 0.4605203866958618, 0.4434599280357361, 0.4526418447494507, 0.44282230734825134, 0.43711042404174805, 0.4417082667350769, 0.42336034774780273, 0.4267391264438629, 0.4071308672428131, 0.40781018137931824, 0.4099718928337097, 0.4267457127571106, 0.4031943082809448, 0.4120625853538513, 0.39528074860572815, 0.39507564902305603, 0.3992200195789337, 0.4088977575302124, 0.3811721205711365, 0.3872777223587036, 0.394043892621994, 0.39634400606155396, 0.3943433165550232, 0.39219388365745544], "val_accuracy": [0.5973333120346069, 0.6359999775886536, 0.7149999737739563, 0.7093333601951599, 0.7323333621025085, 0.7586666941642761, 0.7393333315849304, 0.75, 0.7710000276565552, 0.7876666784286499, 0.7889999747276306, 0.781333327293396, 0.7796666622161865, 0.8046666383743286, 0.7896666526794434, 0.7960000038146973, 0.8066666722297668, 0.8256666660308838, 0.8180000185966492, 0.82833331823349, 0.8236666917800903, 0.8263333439826965, 0.8173333406448364, 0.8180000185966492, 0.8289999961853027, 0.8286666870117188, 0.8326666951179504, 0.8399999737739563, 0.831333339214325, 0.8410000205039978, 0.843999981880188, 0.8423333168029785, 0.8516666889190674, 0.8500000238418579, 0.8600000143051147, 0.8579999804496765, 0.8619999885559082, 0.843666672706604, 0.8646666407585144, 0.8539999723434448, 0.8686666488647461, 0.8636666536331177, 0.859333336353302, 0.8529999852180481, 0.8709999918937683, 0.8606666922569275, 0.8586666584014893, 0.8640000224113464, 0.8633333444595337, 0.8686666488647461]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 7, 0, 6, 3, 8, 2], [2, 0, 3, 0, 5], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [4], [0]], "fitness": -0.5774285793304443, "mapping_values": [1, 12, 7, 5, 3, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.7288451194763184, 2.30509090423584, 2.3033289909362793, 2.3028674125671387, 2.3023386001586914, 2.3017284870147705, 2.2968366146087646, 2.223590135574341, 2.2322099208831787, 2.1653130054473877, 2.1384317874908447, 1.7224663496017456, 1.871056318283081, 1.724934458732605, 1.7571557760238647, 2.4158823490142822, 2.304476737976074], "accuracy": [0.18650111556053162, 0.09549596905708313, 0.09589222073554993, 0.10130762308835983, 0.10117553919553757, 0.10672302544116974, 0.12389380484819412, 0.2044644057750702, 0.189274862408638, 0.23735305666923523, 0.25003302097320557, 0.4295337498188019, 0.39043718576431274, 0.4231937527656555, 0.395720511674881, 0.17012283205986023, 0.15717871487140656], "val_loss": [2.306047201156616, 2.3027186393737793, 2.3023221492767334, 2.302119255065918, 2.301481246948242, 2.299816131591797, 2.2768325805664062, 2.229260206222534, 2.267393112182617, 2.101428985595703, 1.7236590385437012, 1.3046681880950928, 1.51926851272583, 1.329243540763855, 1.988458275794983, 2.3078434467315674, 2.3055315017700195], "val_accuracy": [0.0989999994635582, 0.10133333504199982, 0.10566666722297668, 0.10466666519641876, 0.13099999725818634, 0.11833333224058151, 0.20999999344348907, 0.2173333317041397, 0.1720000058412552, 0.2783333361148834, 0.4143333435058594, 0.5820000171661377, 0.4519999921321869, 0.5460000038146973, 0.44333332777023315, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 15], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [7, 2, 0, 6, 3, 8, 3, 3, 5, 5, 2, 6, 6, 3, 3, 8, 2, 5, 3, 1, 8, 7, 5, 7, 8, 9, 8], [1, 0, 3, 1, 0, 1, 3, 2, 3, 0, 4, 5, 5, 0, 4, 5], [38, 1, 32, 10, 28], [0, 0, 1, 1, 0, 1, 0, 1], [4, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 43, 27, 16, 5, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, alpha), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.math.sqrt(alpha), tf.math.add(grad, beta)), tf.math.square(grad)))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad)), grad)), tf.math.add(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [6, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 9], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 1], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 3, 12, 8, 4, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308525323867798, 2.3025851249694824, 2.3025851249694824, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.10236428678035736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 7, 0, 6, 3, 8, 2, 9, 1, 6, 9], [2, 0, 3, 1, 0], [16, 1, 2, 77], [1, 0, 1, 0, 0, 0, 0, 0], [0, 2, 0, 2, 3], [4, 6, 1], [8], [1], [0], [0], [0]], "fitness": -0.0908571407198906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), alpha)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30900239944458, 2.3108232021331787, 2.310269594192505, 2.30928111076355, 2.309580087661743, 2.310117244720459], "accuracy": [0.09708096832036972, 0.08757099509239197, 0.09166556596755981, 0.09338264167308807, 0.09232597798109055, 0.08994849026203156], "val_loss": [2.3090567588806152, 2.3090567588806152, 2.3090567588806152, 2.3090567588806152, 2.3090567588806152, 2.3090567588806152], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}, "mapping_values": [1, 6, 3, 3, 2, 16, 11, 5, 4, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 20}]