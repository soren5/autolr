[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8091428279876709, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118659019470215, 1.620851993560791, 1.1527025699615479, 0.9693600535392761, 0.9045203328132629, 0.8395282030105591, 0.7704842686653137, 0.75065016746521, 0.7350034713745117, 0.7082454562187195, 0.6794617176055908, 0.6738765239715576, 0.6381483674049377, 0.6572467684745789, 0.6270720958709717, 0.618449330329895, 0.6036810874938965, 0.5912644863128662, 0.5948475003242493, 0.5690073370933533, 0.5609205365180969, 0.5486484169960022, 0.5477359890937805, 0.5368675589561462, 0.5346142649650574, 0.5347545742988586, 0.5195093750953674, 0.5079949498176575, 0.5097418427467346, 0.49936988949775696, 0.4979037046432495, 0.48278048634529114, 0.49627891182899475, 0.47436636686325073, 0.4764631688594818, 0.4723829925060272, 0.4605419933795929, 0.45918768644332886, 0.4509933590888977, 0.4436589777469635, 0.4577242434024811, 0.43963858485221863, 0.4345865547657013, 0.42831212282180786, 0.4277384281158447, 0.43014001846313477, 0.4257148206233978, 0.42099207639694214, 0.41592493653297424, 0.41022488474845886], "accuracy": [0.252938836812973, 0.5042926669120789, 0.5943732857704163, 0.6551313996315002, 0.6670188903808594, 0.6923788189888, 0.7180029153823853, 0.7219653725624084, 0.72672039270401, 0.7334566116333008, 0.7458723783493042, 0.7495707273483276, 0.7631752490997314, 0.7535332441329956, 0.7630431652069092, 0.7687227725982666, 0.7753269076347351, 0.7816668748855591, 0.7784969210624695, 0.7865539789199829, 0.7968564033508301, 0.7938185334205627, 0.7981772422790527, 0.7964601516723633, 0.7968564033508301, 0.7991018295288086, 0.8086118102073669, 0.8090080618858337, 0.8090080618858337, 0.8125742673873901, 0.8099326491355896, 0.8220842480659485, 0.8129705190658569, 0.8220842480659485, 0.8190463781356812, 0.822348415851593, 0.82683926820755, 0.8280280232429504, 0.8359529972076416, 0.8321225643157959, 0.8308017253875732, 0.8370096683502197, 0.8364813327789307, 0.8425571322441101, 0.8446704745292664, 0.8424250483512878, 0.837537944316864, 0.8393871188163757, 0.8442742228507996, 0.845859169960022], "val_loss": [1.927223801612854, 1.102061152458191, 0.8904849290847778, 0.8365136981010437, 0.7928245663642883, 0.6939777135848999, 0.6352972984313965, 0.6992079019546509, 0.6297869682312012, 0.6209869980812073, 0.5918819308280945, 0.5671660900115967, 0.5794214010238647, 0.5705780982971191, 0.5495200157165527, 0.538997232913971, 0.5364280343055725, 0.53224116563797, 0.5116172432899475, 0.5107386708259583, 0.5075086355209351, 0.512922465801239, 0.511967122554779, 0.504875659942627, 0.47600579261779785, 0.481980562210083, 0.47078844904899597, 0.48294880986213684, 0.4972166419029236, 0.4707939326763153, 0.4609867334365845, 0.47915729880332947, 0.455397367477417, 0.45391446352005005, 0.4478539228439331, 0.46440818905830383, 0.4660687744617462, 0.4409266710281372, 0.449123740196228, 0.44000276923179626, 0.43095365166664124, 0.4283989369869232, 0.4312441051006317, 0.42490649223327637, 0.41715824604034424, 0.418038934469223, 0.4306470453739166, 0.42786431312561035, 0.41966262459754944, 0.4178178608417511], "val_accuracy": [0.5903333425521851, 0.6303333044052124, 0.6506666541099548, 0.6803333163261414, 0.7106666564941406, 0.7366666793823242, 0.7609999775886536, 0.7243333458900452, 0.7573333382606506, 0.7633333206176758, 0.7756666541099548, 0.7799999713897705, 0.7706666588783264, 0.7789999842643738, 0.7823333144187927, 0.8006666898727417, 0.7903333306312561, 0.796999990940094, 0.8076666593551636, 0.8086666464805603, 0.7990000247955322, 0.8006666898727417, 0.812666654586792, 0.7910000085830688, 0.8136666417121887, 0.8149999976158142, 0.8246666789054871, 0.8133333325386047, 0.8056666851043701, 0.8149999976158142, 0.8266666531562805, 0.8190000057220459, 0.8353333473205566, 0.8276666402816772, 0.8339999914169312, 0.8166666626930237, 0.8293333053588867, 0.8373333215713501, 0.8320000171661377, 0.8376666903495789, 0.840666651725769, 0.8420000076293945, 0.8446666598320007, 0.8410000205039978, 0.8476666808128357, 0.8426666855812073, 0.8370000123977661, 0.8383333086967468, 0.8429999947547913, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 2], [0, 0, 1, 0, 2, 2], [0, 81, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 0, 6, 3, 8, 2], [2, 0, 4, 1, 4], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 0, 2, 5, 2, 2], [0, 6, 1, 6, 2], [0, 22], [1], [0], [1], [0]], "fitness": -0.7837142944335938, "mapping_values": [1, 12, 6, 6, 3, 3, 2, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.9984186887741089, 1.3922715187072754, 0.9110211730003357, 0.7949095368385315, 0.8178078532218933, 0.8007717132568359, 0.805314302444458, 0.8010299205780029, 0.8581608533859253, 0.9143351316452026, 0.9276392459869385, 0.9330592155456543, 1.0797454118728638], "accuracy": [0.34341567754745483, 0.4951789677143097, 0.6732267737388611, 0.7174745798110962, 0.7030775547027588, 0.7160216569900513, 0.7009642124176025, 0.7103421092033386, 0.7017567157745361, 0.6770572066307068, 0.652621865272522, 0.6742834448814392, 0.648659348487854], "val_loss": [1.5096988677978516, 0.8293645977973938, 0.6703617572784424, 0.6105204820632935, 0.6527121663093567, 0.6222127079963684, 0.6126663684844971, 0.6285714507102966, 0.6415289044380188, 0.7477570176124573, 0.7691285014152527, 0.87026447057724, 0.862230122089386], "val_accuracy": [0.40799999237060547, 0.6800000071525574, 0.7456666827201843, 0.7390000224113464, 0.734666645526886, 0.7663333415985107, 0.7516666650772095, 0.7676666378974915, 0.7526666522026062, 0.7196666598320007, 0.7450000047683716, 0.7073333263397217, 0.6706666946411133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 2, 7, 2, 3, 5, 5, 0, 9], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 2, 0, 2, 5, 3, 1], [0, 1, 2, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 9, 4, 2, 4, 3, 1, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.square(grad))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(beta))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034420013427734, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5, 9], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 6, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 2, 5, 2, 1], [0, 6, 1, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11676132678985596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 8, 3, 5, 2, 3, 3, 4, 3, 9, 6, 1, 2, 9, 5, 2, 7, 0, 8, 9, 3, 8], [0, 2, 1, 0, 2, 3, 0, 3, 0, 3, 2, 0], [0, 92, 39, 5, 19, 37, 68, 41], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [61, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [6, 2, 0, 2, 5, 2, 1, 7, 1, 9], [0, 6, 1, 6, 0, 0, 6], [0, 22, 39, 75], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 24, 12, 8, 1, 1, 0, 1, 17, 10, 7, 4, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.multiply(tf.math.square(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(grad, grad)))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha), tf.math.add(grad, tf.math.subtract(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [36525551616.0, 5363830095872.0, 89230554431488.0, 622370624634880.0, 2843351296507904.0, 9315046404390912.0], "accuracy": [0.0936468094587326, 0.09853387624025345, 0.09972262382507324, 0.09945846349000931, 0.10236428678035736, 0.09589222073554993], "val_loss": [360183529472.0, 19418243399680.0, 208427666112512.0, 1136406336372736.0, 4257106353979392.0, 1.2551948507021312e+16], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]