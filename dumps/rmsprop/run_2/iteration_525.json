[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110917568206787, 1.6086639165878296, 1.1280715465545654, 0.9581151008605957, 0.8856227397918701, 0.8265548348426819, 0.7676145434379578, 0.7531702518463135, 0.7308117747306824, 0.704785943031311, 0.6841418147087097, 0.6700635552406311, 0.6469387412071228, 0.6393022537231445, 0.6165744662284851, 0.593414306640625, 0.6032558679580688, 0.5952082276344299, 0.6057190895080566, 0.5638183951377869, 0.5705260634422302, 0.5448526740074158, 0.5511711835861206, 0.54691082239151, 0.5318899154663086, 0.5287497639656067, 0.5201873183250427, 0.5099306106567383, 0.5249105095863342, 0.501691997051239, 0.48831382393836975, 0.4836213290691376], "accuracy": [0.2674679756164551, 0.505349338054657, 0.6096948981285095, 0.6622639298439026, 0.6795667409896851, 0.6927750706672668, 0.7086250185966492, 0.718399167060852, 0.7248712182044983, 0.7327961921691895, 0.7470611333847046, 0.7467969655990601, 0.7543256878852844, 0.7580240368843079, 0.7689869403839111, 0.7775723338127136, 0.7732135653495789, 0.7703077793121338, 0.7732135653495789, 0.7893276810646057, 0.7841764688491821, 0.7968564033508301, 0.7972526550292969, 0.793950617313385, 0.8021397590637207, 0.8014793395996094, 0.8095363974571228, 0.8095363974571228, 0.8030643463134766, 0.8173292875289917, 0.8216879963874817, 0.8241975903511047], "val_loss": [1.924943208694458, 1.1281989812850952, 0.9132238030433655, 0.7750184535980225, 0.7671974897384644, 0.7516295313835144, 0.7011157870292664, 0.7008441686630249, 0.6681578755378723, 0.6264868378639221, 0.6194069385528564, 0.6215397715568542, 0.5855394005775452, 0.5694035887718201, 0.5706363320350647, 0.5903287529945374, 0.5778040885925293, 0.5634047389030457, 0.535548985004425, 0.5294623970985413, 0.5368284583091736, 0.5107825398445129, 0.5183963775634766, 0.5039201378822327, 0.48896825313568115, 0.4983406662940979, 0.4814828634262085, 0.49499714374542236, 0.4828680753707886, 0.4726100265979767, 0.46626290678977966, 0.4937984347343445], "val_accuracy": [0.6060000061988831, 0.6366666555404663, 0.6650000214576721, 0.7183333039283752, 0.7036666870117188, 0.6980000138282776, 0.7300000190734863, 0.7289999723434448, 0.7436666488647461, 0.7699999809265137, 0.7670000195503235, 0.7453333139419556, 0.7803333401679993, 0.7910000085830688, 0.7906666398048401, 0.7773333191871643, 0.7603333592414856, 0.7789999842643738, 0.8003333210945129, 0.8046666383743286, 0.7979999780654907, 0.8136666417121887, 0.7983333468437195, 0.8096666932106018, 0.8166666626930237, 0.8059999942779541, 0.8259999752044678, 0.8146666884422302, 0.8130000233650208, 0.8220000267028809, 0.8240000009536743, 0.8106666803359985]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 5, 1, 6, 0], [0, 22], [1], [0], [7], [0]], "fitness": -0.29571428894996643, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, grad))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.34307599067688, 2.279815435409546, 2.321361541748047, 2.303328514099121, 2.4644052982330322, 2.3069777488708496], "accuracy": [0.22942808270454407, 0.16034869849681854, 0.11715757846832275, 0.10011887550354004, 0.13815876841545105, 0.09774138033390045], "val_loss": [1.9947447776794434, 2.236973524093628, 2.302703380584717, 2.301334857940674, 2.310302972793579, 2.303640604019165], "val_accuracy": [0.2913333475589752, 0.2633333206176758, 0.10266666859388351, 0.09966666996479034, 0.0989999994635582, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 0, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [9, 2, 4, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [9, 2, 0, 2, 5, 8, 6], [0, 6, 1, 4, 5], [5, 22], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.7817370891571045, 29.67963409423828, 288.491455078125, 1755.55810546875, 7517.744140625, 24406.833984375], "accuracy": [0.09470347315073013, 0.10117553919553757, 0.10289261490106583, 0.09576013684272766, 0.09998679161071777, 0.09906221181154251], "val_loss": [5.4540486335754395, 78.97891235351562, 605.2373046875, 3052.028564453125, 11154.927734375, 32552.68359375], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 86], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2741408348083496, 2.330136775970459, 2.3287737369537354, 2.3167073726654053, 2.3207955360412598, 2.320368528366089, 2.324007272720337, 2.3246121406555176, 2.3180599212646484, 2.3138999938964844, 2.3236305713653564, 2.3307626247406006], "accuracy": [0.14053626358509064, 0.09245806187391281, 0.09760929644107819, 0.09840179979801178, 0.09311848133802414, 0.09602430462837219, 0.09972262382507324, 0.10170386731624603, 0.09668471664190292, 0.1010434553027153, 0.09694888442754745, 0.1014397069811821], "val_loss": [2.3259637355804443, 2.305675745010376, 2.3112847805023193, 2.335130453109741, 2.334083080291748, 2.3213422298431396, 2.3042776584625244, 2.309615135192871, 2.329798460006714, 2.3344063758850098, 2.321458339691162, 2.3077447414398193], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.10166666656732559, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 2, 3, 6, 3, 5, 9, 2, 9], [0, 0, 1, 0, 0], [0, 39, 39, 3, 92], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 3, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 4, 1, 6], [0, 6, 2, 4, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 9, 4, 5, 12, 7, 5, 1, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.subtract(beta, grad))), tf.math.divide_no_nan(grad, sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]