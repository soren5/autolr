[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108983993530273, 1.603218913078308, 1.1276335716247559, 0.9789333343505859, 0.8697336912155151, 0.8464537858963013, 0.7659419178962708, 0.7424754500389099, 0.7180815935134888, 0.7045390009880066, 0.6745672225952148, 0.6827532052993774, 0.6384932398796082, 0.6366791725158691, 0.6104369759559631, 0.6008990406990051, 0.6070449948310852, 0.5789586305618286, 0.5763602256774902, 0.573466420173645, 0.5599161982536316, 0.5439686179161072, 0.5431931614875793, 0.5363665223121643, 0.5186052322387695, 0.5180957317352295, 0.5127286314964294, 0.4991264343261719, 0.5039867758750916, 0.4980059862136841, 0.4847135543823242, 0.47979840636253357, 0.48027992248535156, 0.4710243344306946, 0.46870315074920654, 0.4575011134147644, 0.4527200758457184, 0.4496556520462036, 0.4542120397090912, 0.44880881905555725, 0.4392974078655243, 0.42922988533973694, 0.4229777753353119], "accuracy": [0.26443007588386536, 0.5099722743034363, 0.6077136397361755, 0.6497160196304321, 0.6812838315963745, 0.6789063811302185, 0.7180029153823853, 0.7214370369911194, 0.7277770638465881, 0.7327961921691895, 0.7448157668113708, 0.7437590956687927, 0.7633073329925537, 0.7581561207771301, 0.7696473598480225, 0.7770439982414246, 0.7730814814567566, 0.7828556299209595, 0.7798177003860474, 0.785101056098938, 0.7886672616004944, 0.7931581139564514, 0.7917051911354065, 0.7943468689918518, 0.8064984679222107, 0.8005547523498535, 0.8080834746360779, 0.8088759779930115, 0.8104609847068787, 0.8158763647079468, 0.8169330358505249, 0.8214238286018372, 0.819442629814148, 0.8261788487434387, 0.8231409192085266, 0.8302733898162842, 0.8302733898162842, 0.8314621448516846, 0.828820526599884, 0.834632158279419, 0.8314621448516846, 0.8381983637809753, 0.8465195894241333], "val_loss": [1.9283803701400757, 1.1414769887924194, 0.9460760951042175, 0.8021191954612732, 0.7366325855255127, 0.7213713526725769, 0.6946486234664917, 0.6377301216125488, 0.6930961012840271, 0.6164608597755432, 0.6506378054618835, 0.6114629507064819, 0.5944761037826538, 0.5839143991470337, 0.5585017204284668, 0.5538597702980042, 0.5403051972389221, 0.5426426529884338, 0.527793288230896, 0.5483906865119934, 0.5236240029335022, 0.5314478278160095, 0.5078017115592957, 0.5017145872116089, 0.5075080394744873, 0.5108560919761658, 0.5353581309318542, 0.48730483651161194, 0.4774481952190399, 0.47117146849632263, 0.4651668667793274, 0.46838468313217163, 0.4785540699958801, 0.4599625766277313, 0.4688986837863922, 0.44793927669525146, 0.469666987657547, 0.4506032168865204, 0.4605073928833008, 0.4530775845050812, 0.44556429982185364, 0.4518999457359314, 0.43573200702667236], "val_accuracy": [0.5876666903495789, 0.643666684627533, 0.6800000071525574, 0.7096666693687439, 0.7263333201408386, 0.737333357334137, 0.7296666502952576, 0.7630000114440918, 0.7403333187103271, 0.7673333287239075, 0.7556666731834412, 0.7593333125114441, 0.7786666750907898, 0.7873333096504211, 0.7986666560173035, 0.7873333096504211, 0.8029999732971191, 0.7993333339691162, 0.8143333196640015, 0.7976666688919067, 0.8116666674613953, 0.8066666722297668, 0.8176666498184204, 0.8163333535194397, 0.8166666626930237, 0.812666654586792, 0.8059999942779541, 0.8226666450500488, 0.8299999833106995, 0.8356666564941406, 0.8356666564941406, 0.8393333554267883, 0.8316666483879089, 0.8413333296775818, 0.8253333568572998, 0.8399999737739563, 0.8273333311080933, 0.8453333377838135, 0.8343333601951599, 0.8410000205039978, 0.8420000076293945, 0.8333333134651184, 0.843666672706604]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 3, 5], [0, 2, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 52], [1], [0], [4], [0]], "fitness": -0.24228571355342865, "mapping_values": [1, 12, 6, 6, 2, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3150296211242676, 2.303287982940674, 2.4423210620880127, 2.348470449447632, 2.3047096729278564, 2.303201198577881], "accuracy": [0.2145027071237564, 0.12957337498664856, 0.2246730923652649, 0.09496764093637466, 0.09628847241401672, 0.1022322028875351], "val_loss": [2.129621744155884, 2.2721171379089355, 2.542660713195801, 2.304443120956421, 2.302961587905884, 2.3027594089508057], "val_accuracy": [0.24699999392032623, 0.15266667306423187, 0.09666666388511658, 0.1003333330154419, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 5, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 2, 7, 1, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.15685714781284332, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3568291664123535, 2.490705728530884, 2.275705575942993, 2.3057518005371094, 2.301636219024658, 2.22598934173584], "accuracy": [0.19759608805179596, 0.15572579205036163, 0.14700831472873688, 0.1002509593963623, 0.10685510188341141, 0.15982036292552948], "val_loss": [2.095756769180298, 2.305011034011841, 2.3093912601470947, 2.3025424480438232, 2.2827751636505127, 2.296698808670044], "val_accuracy": [0.1679999977350235, 0.12999999523162842, 0.09799999743700027, 0.09799999743700027, 0.12999999523162842, 0.12066666781902313]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 7, 3, 5], [3, 2, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1, 89], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 2, 1, 2, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 11, 6, 5, 3, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30509877204895, 10.960789680480957, 2556.39306640625, 635946.8125, 165092048.0, 41455009792.0], "accuracy": [0.09272222965955734, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3400943279266357, 96.20832061767578, 24398.654296875, 6245441.5, 1598833024.0, 409301254144.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 6, 8, 2], [1, 0, 4, 1, 0], [25, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]