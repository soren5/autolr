[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8425714373588562, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091166973114014, 1.5994065999984741, 1.152098298072815, 0.9776023030281067, 0.9058924317359924, 0.8279892206192017, 0.7973901629447937, 0.7744203805923462, 0.7488365769386292, 0.694042980670929, 0.7089754939079285, 0.6857885718345642, 0.6554906964302063, 0.6506686806678772, 0.638885498046875, 0.6244163513183594, 0.6023227572441101, 0.6135458946228027, 0.5946454405784607, 0.5869961380958557, 0.5744373798370361, 0.5728214979171753, 0.571141242980957, 0.5432196259498596, 0.5400077700614929, 0.5371504426002502, 0.5498624444007874, 0.5276787281036377, 0.5099497437477112, 0.4973906874656677, 0.5139175653457642, 0.507074773311615, 0.49546581506729126, 0.49640601873397827, 0.4812338948249817, 0.47701123356819153, 0.47103574872016907, 0.4655376374721527, 0.4593251049518585, 0.45552852749824524, 0.45874151587486267, 0.47017738223075867, 0.4441637396812439, 0.4410018026828766, 0.4435310959815979, 0.44216102361679077, 0.44271156191825867], "accuracy": [0.2694492042064667, 0.5081230998039246, 0.5962224006652832, 0.6507726907730103, 0.6745476126670837, 0.7009642124176025, 0.7120591998100281, 0.7173424959182739, 0.7256637215614319, 0.7470611333847046, 0.7376832365989685, 0.7460044622421265, 0.761590301990509, 0.7556465268135071, 0.7622507214546204, 0.7662131786346436, 0.7766477465629578, 0.7725531458854675, 0.7791573405265808, 0.7852331399917603, 0.7841764688491821, 0.7877426743507385, 0.7889314293861389, 0.7969884872436523, 0.8049134612083435, 0.8053097128868103, 0.7989697456359863, 0.8034605979919434, 0.81548011302948, 0.8137630224227905, 0.8094043135643005, 0.8162726163864136, 0.816008448600769, 0.8153480291366577, 0.8235371708869934, 0.8234050869941711, 0.826310932636261, 0.8280280232429504, 0.8341038227081299, 0.8314621448516846, 0.8304054737091064, 0.8261788487434387, 0.835160493850708, 0.8408400416374207, 0.837537944316864, 0.8370096683502197, 0.8374059200286865], "val_loss": [1.9216899871826172, 1.1054493188858032, 0.9378995895385742, 0.8624433875083923, 0.7555796504020691, 0.7375370264053345, 0.7195680141448975, 0.7353176474571228, 0.6381627321243286, 0.6562685370445251, 0.6278279423713684, 0.5974324345588684, 0.5859118103981018, 0.5916748642921448, 0.5581343770027161, 0.5509900450706482, 0.5441887974739075, 0.5567628741264343, 0.5397107601165771, 0.5413017868995667, 0.531443178653717, 0.5220559239387512, 0.5144655704498291, 0.506193220615387, 0.5051848292350769, 0.5070859789848328, 0.4909186065196991, 0.48714694380760193, 0.47697752714157104, 0.4886532723903656, 0.5171022415161133, 0.46807414293289185, 0.46741190552711487, 0.48831847310066223, 0.4558403789997101, 0.45534446835517883, 0.45626065135002136, 0.44343769550323486, 0.45184484124183655, 0.44190022349357605, 0.48154959082603455, 0.43571385741233826, 0.44035279750823975, 0.4395994544029236, 0.4437655806541443, 0.43377017974853516, 0.4422723352909088], "val_accuracy": [0.5529999732971191, 0.6589999794960022, 0.6776666641235352, 0.6926666498184204, 0.7236666679382324, 0.7200000286102295, 0.7310000061988831, 0.7179999947547913, 0.7663333415985107, 0.7210000157356262, 0.7689999938011169, 0.7766666412353516, 0.7853333353996277, 0.7559999823570251, 0.7950000166893005, 0.7850000262260437, 0.7903333306312561, 0.7879999876022339, 0.7816666960716248, 0.7953333258628845, 0.7943333387374878, 0.7866666913032532, 0.7963333129882812, 0.8066666722297668, 0.812333345413208, 0.8083333373069763, 0.8090000152587891, 0.8183333277702332, 0.8169999718666077, 0.8086666464805603, 0.7889999747276306, 0.8236666917800903, 0.8226666450500488, 0.8003333210945129, 0.8270000219345093, 0.828000009059906, 0.8213333487510681, 0.8333333134651184, 0.8276666402816772, 0.8343333601951599, 0.8059999942779541, 0.8376666903495789, 0.8326666951179504, 0.8309999704360962, 0.8346666693687439, 0.8363333344459534, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 4, 1, 3, 4], [3, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 3, 6, 3, 1, 6, 7, 1, 4, 7, 4, 8, 2, 8, 6, 5, 6, 6, 2, 3, 8, 4, 7, 5, 9, 8, 5, 5, 7, 8, 8, 5, 3, 7, 3], [0, 6, 1, 7, 4, 5, 0, 5, 3, 7, 0, 6, 3, 2, 7, 5, 5, 4, 1, 5, 0, 1, 1, 1], [69, 30, 6, 99, 94], [1], [0], [5], [0]], "fitness": -0.3019999861717224, "mapping_values": [1, 6, 3, 3, 1, 9, 5, 4, 1, 62, 38, 24, 5, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(grad, tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(grad))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(sigma, grad), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(grad, tf.math.add(sigma, tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(beta))))), tf.math.square(grad)), grad), tf.math.square(tf.math.add(tf.math.sqrt(grad), tf.math.sqrt(grad)))), tf.math.square(tf.math.multiply(alpha, tf.math.add(grad, tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), alpha)))))), alpha)), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.1900634765625, 2.2405498027801514, 2.102602005004883, 2.4465270042419434, 2.3067400455474854, 2.3034017086029053, 2.302619218826294, 2.303757667541504], "accuracy": [0.19997358322143555, 0.18544445931911469, 0.2616563141345978, 0.16655659675598145, 0.09840179979801178, 0.09655263274908066, 0.10659094154834747, 0.09074098616838455], "val_loss": [2.251039743423462, 2.285165786743164, 2.2703795433044434, 2.310183525085449, 2.30318284034729, 2.3026206493377686, 2.3025827407836914, 2.3025901317596436], "val_accuracy": [0.156333327293396, 0.21799999475479126, 0.3089999854564667, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 3], [1, 0, 1, 0, 2], [0, 4, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 4], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 1, 0, 4, 4], [57, 50], [1], [0], [2], [0]], "fitness": -0.10085714608430862, "mapping_values": [1, 8, 4, 4, 2, 12, 7, 5, 1, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [10.185624122619629, 129.4384307861328, 559.19970703125, 1414.8060302734375, 3064.215576171875, 4891.03857421875, 7342.875, 10083.0224609375, 13303.45703125], "accuracy": [0.11200633645057678, 0.1002509593963623, 0.08757099509239197, 0.09391097724437714, 0.08770307898521423, 0.08770307898521423, 0.1014397069811821, 0.09325055778026581, 0.09800554811954498], "val_loss": [12.176511764526367, 272.34307861328125, 503.48492431640625, 1750.99853515625, 2568.831298828125, 3881.524658203125, 5325.87890625, 7088.2919921875, 8791.6748046875], "val_accuracy": [0.0820000022649765, 0.0689999982714653, 0.09466666728258133, 0.10566666722297668, 0.0976666659116745, 0.05066666752099991, 0.059333331882953644, 0.06366666406393051, 0.0689999982714653]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 2, 0, 2, 0, 2, 1], [0, 6, 1, 0, 0], [0, 22, 93], [1], [0], [2], [0]], "fitness": -0.09628571569919586, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 11, 6, 5, 3, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309345006942749, 2.3092241287231445, 2.308854579925537, 2.309145212173462, 2.3087339401245117, 2.3096132278442383], "accuracy": [0.09192973375320435, 0.09536388516426086, 0.09866596013307571, 0.09285431355237961, 0.09391097724437714, 0.09153348207473755], "val_loss": [2.308134078979492, 2.308134078979492, 2.308134078979492, 2.308134078979492, 2.308134078979492, 2.308134078979492], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 5, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 7, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [0], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 2, 8, 5, 3, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.308748722076416, 2.3088746070861816, 2.3100831508636475, 2.3091354370117188, 2.3097808361053467, 2.310831308364868], "accuracy": [0.0952318087220192, 0.09232597798109055, 0.08717474341392517, 0.09549596905708313, 0.08981640636920929, 0.0882314071059227], "val_loss": [2.3093411922454834, 2.3093411922454834, 2.3093411922454834, 2.3093411922454834, 2.3093411922454834, 2.3093411922454834], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]