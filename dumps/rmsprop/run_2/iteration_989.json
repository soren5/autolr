[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212247848510742, 1.6154941320419312, 1.1245020627975464, 1.0150418281555176, 0.866154134273529, 0.8353281617164612, 0.7827521562576294, 0.7536599636077881, 0.7444096803665161, 0.6956759095191956, 0.6866068243980408, 0.6778515577316284, 0.654167890548706, 0.642829418182373, 0.6335650682449341, 0.6082218289375305, 0.609562337398529, 0.585239827632904, 0.5916129946708679, 0.5670138001441956, 0.5716690421104431, 0.5537997484207153, 0.5484486222267151, 0.5331881642341614, 0.5306198596954346, 0.5156539082527161, 0.5190268158912659, 0.5205363631248474, 0.506859302520752, 0.497608482837677, 0.49712368845939636, 0.4913674592971802, 0.48239046335220337, 0.4891735911369324, 0.46429795026779175, 0.46502918004989624, 0.46270322799682617, 0.4469567835330963, 0.4504852294921875, 0.44568488001823425, 0.4459710121154785, 0.4508444666862488, 0.43431365489959717, 0.421506404876709, 0.41775766015052795, 0.4263947010040283, 0.4123877286911011, 0.4190554916858673, 0.4078664779663086, 0.40573838353157043, 0.40411895513534546, 0.3986680507659912, 0.3982187509536743, 0.3887481391429901, 0.38914230465888977, 0.38525766134262085, 0.3817797601222992, 0.3811098635196686], "accuracy": [0.26680755615234375, 0.49425438046455383, 0.6065248847007751, 0.6394135355949402, 0.6816800832748413, 0.7008321285247803, 0.7029454708099365, 0.7232862114906311, 0.718399167060852, 0.7388719916343689, 0.7441553473472595, 0.7508915662765503, 0.7564390301704407, 0.7499669790267944, 0.7652885913848877, 0.7730814814567566, 0.7769119143486023, 0.778761088848114, 0.7774402499198914, 0.7901201844215393, 0.785101056098938, 0.7944789528846741, 0.7964601516723633, 0.8030643463134766, 0.806630551815033, 0.8101968169212341, 0.8026680946350098, 0.8070268034934998, 0.8121780753135681, 0.8101968169212341, 0.8190463781356812, 0.821820080280304, 0.8241975903511047, 0.826310932636261, 0.8273676037788391, 0.8255184292793274, 0.8280280232429504, 0.8322546482086182, 0.8378021121025085, 0.8364813327789307, 0.8338396549224854, 0.8339717388153076, 0.8442742228507996, 0.8455950617790222, 0.8488970994949341, 0.8449346423149109, 0.8504821062088013, 0.8466516733169556, 0.8511425256729126, 0.8520671129226685, 0.8511425256729126, 0.8507462739944458, 0.8556333184242249, 0.857218325138092, 0.8588033318519592, 0.8584070801734924, 0.8615770936012268, 0.8627657890319824], "val_loss": [1.9225631952285767, 1.1266251802444458, 0.8817076683044434, 0.787177562713623, 0.770583987236023, 0.7424617409706116, 0.6865307092666626, 0.710422694683075, 0.6243426203727722, 0.6085145473480225, 0.6673147082328796, 0.5959535241127014, 0.6158876419067383, 0.5761617422103882, 0.5888159275054932, 0.5971007943153381, 0.5837532877922058, 0.5569537878036499, 0.5428543090820312, 0.5396501421928406, 0.5770343542098999, 0.5217570662498474, 0.5132027268409729, 0.5020464658737183, 0.4902445077896118, 0.5104645490646362, 0.5074333548545837, 0.4868322014808655, 0.49008625745773315, 0.4736281633377075, 0.47279512882232666, 0.47280123829841614, 0.4669548273086548, 0.48218441009521484, 0.46669521927833557, 0.4620571434497833, 0.4545491635799408, 0.4466060400009155, 0.44949477910995483, 0.4538668692111969, 0.44646984338760376, 0.4357666075229645, 0.44183149933815, 0.44080036878585815, 0.4466433525085449, 0.43482595682144165, 0.44915133714675903, 0.4205266237258911, 0.4341466426849365, 0.4324718713760376, 0.42642855644226074, 0.43554478883743286, 0.4112677276134491, 0.41767773032188416, 0.4179475009441376, 0.41900455951690674, 0.43066972494125366, 0.42112845182418823], "val_accuracy": [0.5759999752044678, 0.6306666731834412, 0.671999990940094, 0.7076666951179504, 0.7170000076293945, 0.6986666917800903, 0.746666669845581, 0.7143333554267883, 0.7573333382606506, 0.7673333287239075, 0.7356666922569275, 0.7710000276565552, 0.7546666860580444, 0.7789999842643738, 0.778333306312561, 0.7799999713897705, 0.7873333096504211, 0.7793333530426025, 0.7906666398048401, 0.7976666688919067, 0.7680000066757202, 0.7960000038146973, 0.8059999942779541, 0.8136666417121887, 0.815666675567627, 0.8066666722297668, 0.8146666884422302, 0.8293333053588867, 0.8146666884422302, 0.8233333230018616, 0.8276666402816772, 0.8220000267028809, 0.8306666612625122, 0.8163333535194397, 0.8256666660308838, 0.8373333215713501, 0.8366666436195374, 0.8386666774749756, 0.8366666436195374, 0.8356666564941406, 0.8396666646003723, 0.8420000076293945, 0.8373333215713501, 0.8450000286102295, 0.8336666822433472, 0.840666651725769, 0.8426666855812073, 0.8510000109672546, 0.8456666469573975, 0.8443333506584167, 0.8510000109672546, 0.8496666550636292, 0.8543333411216736, 0.8510000109672546, 0.8536666631698608, 0.8510000109672546, 0.8479999899864197, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 4, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 3, 3, 8, 2, 5, 7, 1, 3, 7, 7, 1, 0, 1, 8, 2, 6, 2, 8], [1, 0, 4, 1, 0, 2, 1, 4, 4, 1, 5, 5, 0, 2, 0], [16, 1, 61, 73], [0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 4], [0, 1, 1], [63], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 36, 21, 15, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(beta, alpha)))))), tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(grad), grad), alpha), tf.math.subtract(tf.math.sqrt(tf.math.add(grad, grad)), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 1, 8, 9, 2], [2, 2, 1, 0, 2, 0], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 1, 5, 2, 1, 9], [0, 6, 6, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 5, 3, 2, 1, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(grad, grad), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035340309143066, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 2, 0, 2], [0, 11, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [7, 4, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 2, 7, 5, 1, 1], [4, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 5, 5, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [327807936.0, 7.609279483991818e+17, 3.462511508710513e+24, 110.79236602783203, 151.02691650390625, 191.82577514648438], "accuracy": [0.09179764986038208, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [64625577984.0, 1.1465388835880724e+20, 94.28868865966797, 134.20068359375, 174.74508666992188, 215.68408203125], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 2, 3, 8], [1, 0, 3, 0, 2], [0, 26, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [40, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [3, 2, 7, 2, 8, 2, 1], [1, 6, 1, 6, 0], [0, 22], [1], [0], [0], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 4, 2, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3091654777526855, 2.310014486312866, 2.3097312450408936, 2.308358669281006, 2.3089799880981445, 2.310817241668701], "accuracy": [0.09153348207473755, 0.09496764093637466, 0.0948355570435524, 0.0952318087220192, 0.09457138925790787, 0.09219389408826828], "val_loss": [2.307870388031006, 2.307870388031006, 2.307870388031006, 2.307870388031006, 2.307870388031006, 2.307870388031006], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]