[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134671211242676, 1.6188912391662598, 1.1682333946228027, 0.9787992835044861, 0.8762130737304688, 0.8412721753120422, 0.8140362501144409, 0.7519533038139343, 0.7365739941596985, 0.7130790948867798, 0.6995294690132141, 0.6598197817802429, 0.659053385257721, 0.6643668413162231, 0.6353116631507874, 0.6236130595207214, 0.6085476279258728, 0.6092466115951538, 0.6009515523910522, 0.5707265138626099, 0.5654731392860413, 0.5671126842498779, 0.5534784197807312, 0.545200526714325, 0.565083384513855, 0.5324474573135376, 0.5313300490379333, 0.5199886560440063, 0.5126873850822449, 0.4987392723560333, 0.5005797147750854, 0.49619054794311523, 0.4898585379123688, 0.49735888838768005, 0.4707476496696472, 0.4707801043987274, 0.4792691171169281, 0.46223577857017517, 0.4608812928199768, 0.461501806974411, 0.4550791382789612, 0.45488205552101135, 0.4438401460647583, 0.43555814027786255, 0.4313097596168518, 0.43490517139434814, 0.43415865302085876, 0.43088042736053467, 0.41765540838241577, 0.41726648807525635], "accuracy": [0.2583542466163635, 0.49993395805358887, 0.5976753234863281, 0.6535464525222778, 0.6923788189888, 0.6952846646308899, 0.7008321285247803, 0.7195879220962524, 0.7305507659912109, 0.7364945411682129, 0.735569953918457, 0.7547219395637512, 0.7578919529914856, 0.7536653280258179, 0.7584202885627747, 0.7650244235992432, 0.7736098170280457, 0.767930269241333, 0.7721568942070007, 0.7885351777076721, 0.7897239327430725, 0.7881389260292053, 0.7959318161010742, 0.7971205711364746, 0.7886672616004944, 0.8004226684570312, 0.8017435073852539, 0.8086118102073669, 0.8082155585289001, 0.8182538747787476, 0.8117818236351013, 0.8202351331710815, 0.8185180425643921, 0.8129705190658569, 0.8182538747787476, 0.8239334225654602, 0.8212917447090149, 0.8310658931732178, 0.8335754871368408, 0.8285563588142395, 0.8296129703521729, 0.8289526104927063, 0.8380662798881531, 0.8421608805656433, 0.8430854678153992, 0.8436138033866882, 0.8366134166717529, 0.8432175517082214, 0.8454629778862, 0.8437458872795105], "val_loss": [1.9265198707580566, 1.1332205533981323, 0.8648799061775208, 0.7723639607429504, 0.7492506504058838, 0.7577378153800964, 0.6582714319229126, 0.6123123168945312, 0.5989484190940857, 0.5653815269470215, 0.56988126039505, 0.5509026646614075, 0.5508593916893005, 0.5285961031913757, 0.5341199636459351, 0.5033364295959473, 0.5077347755432129, 0.5057003498077393, 0.4940372705459595, 0.4913838803768158, 0.4837636351585388, 0.47732335329055786, 0.4870144724845886, 0.46020010113716125, 0.45475977659225464, 0.46034741401672363, 0.4528365433216095, 0.4391835629940033, 0.4454168975353241, 0.4405284821987152, 0.4460647702217102, 0.4278630018234253, 0.4287986159324646, 0.4283938705921173, 0.44595980644226074, 0.4403451383113861, 0.43213626742362976, 0.4105587601661682, 0.4291718602180481, 0.41879284381866455, 0.41101109981536865, 0.4094502627849579, 0.40233227610588074, 0.3999916911125183, 0.3986697196960449, 0.3978133201599121, 0.3970223665237427, 0.3997880816459656, 0.4000806212425232, 0.3924277424812317], "val_accuracy": [0.5586666464805603, 0.6226666569709778, 0.6936666369438171, 0.734000027179718, 0.7176666855812073, 0.7066666483879089, 0.7540000081062317, 0.7596666812896729, 0.7753333449363708, 0.7876666784286499, 0.7886666655540466, 0.793666660785675, 0.7960000038146973, 0.8056666851043701, 0.7976666688919067, 0.812333345413208, 0.8090000152587891, 0.8050000071525574, 0.8100000023841858, 0.8230000138282776, 0.812333345413208, 0.8233333230018616, 0.8106666803359985, 0.8346666693687439, 0.8333333134651184, 0.8259999752044678, 0.8306666612625122, 0.8389999866485596, 0.8386666774749756, 0.8393333554267883, 0.8323333263397217, 0.8403333425521851, 0.8389999866485596, 0.8336666822433472, 0.8293333053588867, 0.8336666822433472, 0.8443333506584167, 0.8506666421890259, 0.8339999914169312, 0.8460000157356262, 0.8429999947547913, 0.8536666631698608, 0.8496666550636292, 0.8526666760444641, 0.8579999804496765, 0.847000002861023, 0.8506666421890259, 0.8510000109672546, 0.846666693687439, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2106130123138428, 1.6114271879196167, 1.1521351337432861, 0.9964189529418945, 0.8787461519241333, 0.8187434077262878, 0.7900927066802979, 0.7546815872192383, 0.7512637972831726, 0.7106185555458069, 0.6812469363212585, 0.6723034977912903, 0.6506935954093933, 0.6371625065803528, 0.6207101345062256, 0.6019170880317688, 0.6108481884002686, 0.5912864208221436, 0.5824899673461914, 0.574924886226654, 0.5645512342453003, 0.5544775128364563, 0.540925145149231, 0.5295031666755676, 0.5265144109725952, 0.5236527323722839], "accuracy": [0.26403382420539856, 0.5070664286613464, 0.5979394912719727, 0.6406022906303406, 0.6796988248825073, 0.700700044631958, 0.7086250185966492, 0.7211728692054749, 0.7281733155250549, 0.7358341217041016, 0.7445515990257263, 0.7493065595626831, 0.7572315335273743, 0.7658169269561768, 0.7708360552787781, 0.7749306559562683, 0.7681944370269775, 0.7802139520645142, 0.7790252566337585, 0.7882710099220276, 0.7872143983840942, 0.7944789528846741, 0.7973847389221191, 0.805177628993988, 0.8083476424217224, 0.8053097128868103], "val_loss": [1.9196901321411133, 1.0894943475723267, 0.8897854685783386, 0.7629721760749817, 0.6978294253349304, 0.6880836486816406, 0.6259884238243103, 0.6291218996047974, 0.6214559078216553, 0.6044408082962036, 0.5732077360153198, 0.5597923398017883, 0.5918682217597961, 0.550173819065094, 0.5304136276245117, 0.5595415234565735, 0.5243850350379944, 0.503757655620575, 0.5068466663360596, 0.512278139591217, 0.4845123589038849, 0.5035752654075623, 0.48260238766670227, 0.48203474283218384, 0.48012468218803406, 0.47251537442207336], "val_accuracy": [0.5303333401679993, 0.6386666893959045, 0.6536666750907898, 0.7206666469573975, 0.737333357334137, 0.7326666712760925, 0.7630000114440918, 0.7586666941642761, 0.7673333287239075, 0.7789999842643738, 0.7853333353996277, 0.7926666736602783, 0.7730000019073486, 0.7986666560173035, 0.8006666898727417, 0.7913333177566528, 0.8096666932106018, 0.8083333373069763, 0.8130000233650208, 0.8050000071525574, 0.8236666917800903, 0.8083333373069763, 0.8193333148956299, 0.8199999928474426, 0.8220000267028809, 0.8180000185966492]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 1, 0, 1, 0, 0, 0, 1], [0, 7, 0, 4, 1], [2, 6, 1], [0], [1], [0], [5], [0]], "fitness": -0.3222857117652893, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.852839469909668, 2.30814790725708, 2.3032960891723633, 2.265993356704712, 2.2534267902374268, 2.5527024269104004, 2.303480625152588, 2.303410291671753, 2.303117275238037, 2.3027827739715576], "accuracy": [0.20063400268554688, 0.09787346422672272, 0.10157178342342377, 0.16180160641670227, 0.15136705338954926, 0.1578391194343567, 0.10117553919553757, 0.09602430462837219, 0.09642054885625839, 0.09576013684272766], "val_loss": [2.3158366680145264, 2.3039138317108154, 2.30063533782959, 2.30031681060791, 1.8999131917953491, 2.303287982940674, 2.302593946456909, 2.302454948425293, 2.302597761154175, 2.302663803100586], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.0989999994635582, 0.31933334469795227, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 5}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 0, 3, 1, 3, 5, 2], [0, 0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [9, 2, 0, 6, 3, 8, 5], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 1, 1, 0, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), grad), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [94.6969985961914, 10827.7666015625, 181242.6875, 1277844.125, 5618619.5, 18523012.0], "accuracy": [0.0944393053650856, 0.1014397069811821, 0.10276053100824356, 0.09813763201236725, 0.09734513610601425, 0.09747721254825592], "val_loss": [802.0017700195312, 39326.46875, 417865.34375, 2271222.0, 8496296.0, 25044370.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 2, 5], [0, 0, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2, 6, 5, 9, 9], [2, 0, 3, 1, 0], [16, 1, 99], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 3, 0, 6, 8, 6], [0, 6, 1, 3, 3, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 15, 11, 4, 3, 16, 10, 6, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(grad), alpha))), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 7, 3, 5, 0, 1], [3, 0, 1, 0, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 5, 5], [0, 6, 2], [0], [1], [0], [2], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 14, 8, 6, 3, 7, 4, 3, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [681674861969408.0, 781758337384448.0, 779596022677504.0, 786621985193984.0, 775684045668352.0, 791338329047040.0], "accuracy": [0.09509972482919693, 0.09655263274908066, 0.10117553919553757, 0.10408136248588562, 0.09959053993225098, 0.10276053100824356], "val_loss": [454559172395008.0, 454559172395008.0, 454559172395008.0, 454559172395008.0, 454559172395008.0, 454559172395008.0], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545]}}]