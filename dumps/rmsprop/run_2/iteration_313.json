[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 0, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.834857165813446, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7589164972305298, 1.084855318069458, 0.904410719871521, 0.8444399237632751, 0.7838287949562073, 0.7443893551826477, 0.7168828248977661, 0.6984400749206543, 0.6785271167755127, 0.6584243774414062, 0.6433438658714294, 0.6386380791664124, 0.6107012629508972, 0.6134954690933228, 0.6015687584877014, 0.5955869555473328, 0.5877441167831421, 0.5730434656143188, 0.5684109330177307, 0.5598497986793518, 0.5549042820930481, 0.5520100593566895, 0.539669394493103, 0.5417768955230713, 0.5320971012115479, 0.5206186175346375, 0.5289784073829651, 0.5173294544219971, 0.5181479454040527, 0.5112702250480652, 0.5051470994949341, 0.4984046220779419, 0.5053228139877319, 0.49331316351890564, 0.4976428151130676, 0.48564010858535767, 0.48363393545150757, 0.48054754734039307, 0.4871228039264679, 0.48208969831466675, 0.4752384126186371, 0.46902674436569214, 0.4711623787879944, 0.4691217839717865, 0.4680476188659668, 0.46359488368034363, 0.4598044753074646, 0.45919594168663025, 0.4668404459953308, 0.4581076502799988, 0.45623740553855896, 0.4555974006652832, 0.4453391134738922, 0.4421238601207733, 0.44144171476364136, 0.44638314843177795, 0.4401504695415497, 0.44493216276168823, 0.43882447481155396], "accuracy": [0.43085458874702454, 0.6353189945220947, 0.6933034062385559, 0.7045304179191589, 0.7230220437049866, 0.7347774505615234, 0.7420420050621033, 0.7506273984909058, 0.7541936039924622, 0.7644960880279541, 0.767401933670044, 0.7695152759552002, 0.7819310426712036, 0.7828556299209595, 0.7845727205276489, 0.7884030938148499, 0.7911768555641174, 0.7959318161010742, 0.7961959838867188, 0.7979130744934082, 0.8037247657775879, 0.8038568496704102, 0.8094043135643005, 0.8061022162437439, 0.8050455451011658, 0.8173292875289917, 0.8142913579940796, 0.8175934553146362, 0.8177255392074585, 0.8178576231002808, 0.8231409192085266, 0.8274996876716614, 0.8214238286018372, 0.8259146809577942, 0.8252542614936829, 0.8298771381378174, 0.8325188159942627, 0.8305375576019287, 0.8314621448516846, 0.8273676037788391, 0.8338396549224854, 0.832650899887085, 0.8330471515655518, 0.8358209133148193, 0.8345000743865967, 0.8355567455291748, 0.8391229510307312, 0.8362171649932861, 0.8347642421722412, 0.837537944316864, 0.8424250483512878, 0.8408400416374207, 0.846387505531311, 0.8455950617790222, 0.8442742228507996, 0.8433496356010437, 0.8466516733169556, 0.8418967127799988, 0.8482366800308228], "val_loss": [1.1054610013961792, 0.828458845615387, 0.7391015887260437, 0.7013916969299316, 0.646645724773407, 0.6226683855056763, 0.6051415801048279, 0.5810892581939697, 0.5791592001914978, 0.5607745051383972, 0.5465887188911438, 0.5367702841758728, 0.5282290577888489, 0.5219558477401733, 0.5177079439163208, 0.5126270055770874, 0.5099037289619446, 0.4995264410972595, 0.4929494261741638, 0.49317362904548645, 0.48886945843696594, 0.4894269108772278, 0.4768715500831604, 0.47506725788116455, 0.4682609736919403, 0.4681444466114044, 0.46519410610198975, 0.4621618688106537, 0.46031424403190613, 0.4552185833454132, 0.4500243365764618, 0.4531679153442383, 0.44678348302841187, 0.44594287872314453, 0.4479235112667084, 0.44199901819229126, 0.4401204288005829, 0.4378690719604492, 0.4380519688129425, 0.4326625168323517, 0.4317297339439392, 0.42791616916656494, 0.4308485984802246, 0.42631953954696655, 0.4273989796638489, 0.4282653033733368, 0.42410945892333984, 0.4280552566051483, 0.4204149842262268, 0.4196157157421112, 0.4192805290222168, 0.42253121733665466, 0.4183902442455292, 0.4124871492385864, 0.41178378462791443, 0.41209733486175537, 0.4125458300113678, 0.41133806109428406, 0.40990227460861206], "val_accuracy": [0.6693333387374878, 0.7163333296775818, 0.7459999918937683, 0.7423333525657654, 0.7739999890327454, 0.7753333449363708, 0.7803333401679993, 0.7923333048820496, 0.7900000214576721, 0.8009999990463257, 0.8006666898727417, 0.8103333115577698, 0.8090000152587891, 0.8119999766349792, 0.8103333115577698, 0.812333345413208, 0.8196666836738586, 0.8159999847412109, 0.8166666626930237, 0.8223333358764648, 0.8236666917800903, 0.8240000009536743, 0.8273333311080933, 0.8273333311080933, 0.8293333053588867, 0.8296666741371155, 0.8306666612625122, 0.8333333134651184, 0.8343333601951599, 0.8363333344459534, 0.8383333086967468, 0.8366666436195374, 0.8376666903495789, 0.8399999737739563, 0.8413333296775818, 0.8376666903495789, 0.8413333296775818, 0.8416666388511658, 0.843999981880188, 0.8433333039283752, 0.846666693687439, 0.846666693687439, 0.8460000157356262, 0.8496666550636292, 0.8460000157356262, 0.8429999947547913, 0.8479999899864197, 0.8453333377838135, 0.8500000238418579, 0.8486666679382324, 0.8500000238418579, 0.8493333458900452, 0.8506666421890259, 0.8529999852180481, 0.8519999980926514, 0.8506666421890259, 0.8519999980926514, 0.8513333201408386, 0.8529999852180481]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8168571591377258, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213313341140747, 1.6057519912719727, 1.1434030532836914, 0.9898218512535095, 0.8809364438056946, 0.842840313911438, 0.7706713080406189, 0.7621265053749084, 0.7142938375473022, 0.7017253041267395, 0.6803866624832153, 0.6555261015892029, 0.6382564902305603, 0.6377050876617432, 0.6256160140037537, 0.6212179660797119, 0.5938997268676758, 0.5859512090682983, 0.575669527053833, 0.5609135627746582, 0.5633960366249084, 0.5433359146118164, 0.5370526909828186, 0.5324550867080688, 0.5231696963310242, 0.5266808867454529, 0.5114997625350952], "accuracy": [0.2623167335987091, 0.5060097575187683, 0.5931845307350159, 0.6448289752006531, 0.6742834448814392, 0.6890767216682434, 0.7119271159172058, 0.7136441469192505, 0.7349095344543457, 0.7325320243835449, 0.7454761862754822, 0.7489103078842163, 0.763439416885376, 0.7602694630622864, 0.7633073329925537, 0.761590301990509, 0.7773081660270691, 0.7803460359573364, 0.7778365015983582, 0.7857614755630493, 0.7868181467056274, 0.7998943328857422, 0.7972526550292969, 0.8012151718139648, 0.7996301651000977, 0.8014793395996094, 0.8047813773155212], "val_loss": [1.9270241260528564, 1.129158854484558, 0.8787594437599182, 0.7752538919448853, 0.7567127346992493, 0.6991434693336487, 0.7295215725898743, 0.6193550825119019, 0.646148145198822, 0.6011737585067749, 0.5939932465553284, 0.5700973272323608, 0.5696651935577393, 0.6140769720077515, 0.5457155704498291, 0.5358725786209106, 0.5580275654792786, 0.5252540111541748, 0.5352603197097778, 0.5182837247848511, 0.49306318163871765, 0.49923184514045715, 0.5044293403625488, 0.47957587242126465, 0.4850773811340332, 0.49532780051231384, 0.4714180827140808], "val_accuracy": [0.5506666898727417, 0.6259999871253967, 0.6933333277702332, 0.7239999771118164, 0.7129999995231628, 0.7279999852180481, 0.7123333215713501, 0.765666663646698, 0.7493333220481873, 0.7733333110809326, 0.765666663646698, 0.7863333225250244, 0.7699999809265137, 0.7603333592414856, 0.7929999828338623, 0.7910000085830688, 0.7806666493415833, 0.8069999814033508, 0.7963333129882812, 0.7986666560173035, 0.8166666626930237, 0.8243333101272583, 0.8046666383743286, 0.8209999799728394, 0.8206666707992554, 0.8036666512489319, 0.8223333358764648]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [16, 95, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1, 1], [0, 7], [2, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 7, 4, 3, 1, 8, 5, 3, 1, 4, 2, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 2, 6, 6, 4, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1, 29], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [8, 2, 0, 6, 5, 3, 1], [0, 6, 1, 6, 0], [92, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 3, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 6, 0, 2, 8, 5], [0, 2, 1, 0, 2], [24, 3, 39], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 7, 4, 3, 5, 2], [2, 4, 3, 1, 0], [7, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 16], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 11, 6, 5, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.multiply(grad, grad), alpha), tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(grad, tf.math.square(alpha))), tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}]