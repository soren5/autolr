[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2136545181274414, 1.6197267770767212, 1.1643160581588745, 0.9863520264625549, 0.8837292790412903, 0.8339995741844177, 0.8035797476768494, 0.7367223501205444, 0.7335359454154968, 0.702088475227356, 0.6875454783439636, 0.6736235618591309, 0.6529439687728882, 0.6461067199707031, 0.6172155737876892, 0.6130054593086243, 0.6228408217430115, 0.5936205983161926, 0.5869064927101135, 0.5759963393211365, 0.5786314010620117, 0.5681218504905701, 0.5520405769348145, 0.5424699187278748], "accuracy": [0.2670717239379883, 0.4885748326778412, 0.5952978730201721, 0.6444327235221863, 0.6807554960250854, 0.6934354901313782, 0.7073041796684265, 0.7310791015625, 0.7251353859901428, 0.7372870445251465, 0.7442874312400818, 0.752212405204773, 0.7586844563484192, 0.7567031979560852, 0.7681944370269775, 0.7703077793121338, 0.7677981853485107, 0.7773081660270691, 0.7874785661697388, 0.7832518815994263, 0.7835160493850708, 0.7910447716712952, 0.7972526550292969, 0.7969884872436523], "val_loss": [1.9260863065719604, 1.1233494281768799, 0.9061762690544128, 0.8010512590408325, 0.7524157166481018, 0.7274638414382935, 0.6862737536430359, 0.6688540577888489, 0.6478087306022644, 0.6176561713218689, 0.6294341087341309, 0.5895648002624512, 0.5892215967178345, 0.5710700154304504, 0.6002148985862732, 0.5876581072807312, 0.5505028367042542, 0.5315112471580505, 0.530619204044342, 0.5332741141319275, 0.5311832427978516, 0.5166870355606079, 0.526634693145752, 0.5092416405677795], "val_accuracy": [0.5099999904632568, 0.6073333621025085, 0.6629999876022339, 0.7026666402816772, 0.715666651725769, 0.7316666841506958, 0.7453333139419556, 0.7366666793823242, 0.7536666393280029, 0.762333333492279, 0.7746666669845581, 0.7860000133514404, 0.7739999890327454, 0.7906666398048401, 0.7749999761581421, 0.7766666412353516, 0.8056666851043701, 0.809333324432373, 0.8199999928474426, 0.8040000200271606, 0.8023333549499512, 0.8186666369438171, 0.8073333501815796, 0.8166666626930237]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 7, 3, 2, 3, 5, 8, 1, 3, 0, 7], [0, 2, 1, 2, 2, 3, 2, 1], [14, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 7, 6, 3, 8, 2], [2, 0, 2, 2, 0, 2], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 5], [0, 22], [1], [0], [7], [0]], "fitness": -0.38999998569488525, "mapping_values": [1, 19, 11, 8, 1, 13, 7, 6, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.subtract(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(grad, grad)))))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3068482875823975, 2.2687501907348633, 2.264275550842285, 2.665720224380493, 2.5439255237579346, 2.2923061847686768, 2.3069865703582764, 2.303673028945923], "accuracy": [0.2008981704711914, 0.15519747138023376, 0.16166952252388, 0.17197199165821075, 0.14053626358509064, 0.15519747138023376, 0.10170386731624603, 0.09985470771789551], "val_loss": [2.1418330669403076, 2.2989845275878906, 1.7053272724151611, 2.2908413410186768, 2.046630620956421, 2.3086369037628174, 2.303629159927368, 2.302741289138794], "val_accuracy": [0.29866665601730347, 0.09833333641290665, 0.37566667795181274, 0.10499999672174454, 0.19233334064483643, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 5, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 3, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303454637527466, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 50, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 2, 1, 6, 3, 8, 2], [2, 0, 3, 1, 0, 5], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 6, 3, 4], [0, 6, 1, 6, 1, 6, 1, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 0, 1, 1, 11, 5, 6, 2, 18, 10, 8, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, alpha), grad), tf.math.multiply(alpha, grad)))), tf.math.pow(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097033500671387, 2.308685541152954, 2.310356378555298, 2.309685468673706, 2.3096814155578613, 2.3082451820373535], "accuracy": [0.09285431355237961, 0.09536388516426086, 0.08479725569486618, 0.09417514503002167, 0.09549596905708313, 0.09813763201236725], "val_loss": [2.309070587158203, 2.309069871902466, 2.309067964553833, 2.309065103530884, 2.3090615272521973, 2.3090567588806152], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 0, 0], [16, 92], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 0, 3], [0, 6, 1, 6, 0], [18], [1], [0], [2], [0]], "fitness": -0.08342856913805008, "mapping_values": [1, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.6811671252988663e+22, 4.028069046316073e+22, 4.2208204082077535e+22, 4.12128004780376e+22, 4.028152362909179e+22, 4.028670276866327e+22], "accuracy": [0.09681680053472519, 0.08757099509239197, 0.09311848133802414, 0.09377889335155487, 0.09708096832036972, 0.09087307006120682], "val_loss": [3.2102838086999267e+22, 3.2102838086999267e+22, 3.2102838086999267e+22, 3.2102838086999267e+22, 3.2102838086999267e+22, 3.2102838086999267e+22], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]