[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8208571672439575, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209218978881836, 1.6004056930541992, 1.1531050205230713, 0.9772484302520752, 0.8695904612541199, 0.8215727806091309, 0.7806975245475769, 0.7511362433433533, 0.7250826358795166, 0.6921538710594177, 0.6862631440162659, 0.659207284450531, 0.6578283905982971, 0.6345738172531128, 0.6366086602210999, 0.6049551367759705, 0.6098452806472778, 0.5862732529640198, 0.5823642015457153, 0.5734986662864685, 0.5670849084854126, 0.5576239228248596, 0.5389407277107239, 0.545503556728363, 0.5349464416503906, 0.5092777013778687, 0.516483724117279, 0.5204789638519287, 0.5028623938560486, 0.5060384273529053, 0.5086155533790588], "accuracy": [0.2670717239379883, 0.5196143388748169, 0.6022982597351074, 0.6509047746658325, 0.6823405027389526, 0.6989829540252686, 0.7124554514884949, 0.7180029153823853, 0.7304186820983887, 0.7423061728477478, 0.7441553473472595, 0.7574957013130188, 0.7519482374191284, 0.7656848430633545, 0.7623828053474426, 0.7761194109916687, 0.7730814814567566, 0.7816668748855591, 0.7825914621353149, 0.7880068421363831, 0.7854973077774048, 0.7943468689918518, 0.8009510040283203, 0.7957997918128967, 0.8001585006713867, 0.8123101592063904, 0.8119139075279236, 0.8063663840293884, 0.8133667707443237, 0.8125742673873901, 0.8105930685997009], "val_loss": [1.9251246452331543, 1.1134543418884277, 0.9341620802879333, 0.8208370804786682, 0.7449987530708313, 0.723172664642334, 0.7119408249855042, 0.6517529487609863, 0.6415228843688965, 0.6422873735427856, 0.6239211559295654, 0.6219636797904968, 0.5851126909255981, 0.5769541263580322, 0.5809258818626404, 0.5613353848457336, 0.5528025031089783, 0.5462740063667297, 0.5491259098052979, 0.5250248908996582, 0.535344660282135, 0.5299675464630127, 0.5228390097618103, 0.5374830365180969, 0.4969751834869385, 0.4929552376270294, 0.4905344545841217, 0.5015936493873596, 0.5183557868003845, 0.4966789484024048, 0.4785347878932953], "val_accuracy": [0.5916666388511658, 0.652999997138977, 0.6723333597183228, 0.6936666369438171, 0.718666672706604, 0.7160000205039978, 0.7203333377838135, 0.7523333430290222, 0.7493333220481873, 0.7480000257492065, 0.7616666555404663, 0.7586666941642761, 0.7683333158493042, 0.7756666541099548, 0.7706666588783264, 0.7900000214576721, 0.7863333225250244, 0.7806666493415833, 0.781000018119812, 0.7979999780654907, 0.7870000004768372, 0.8069999814033508, 0.7973333597183228, 0.7903333306312561, 0.8050000071525574, 0.8186666369438171, 0.8173333406448364, 0.8023333549499512, 0.7850000262260437, 0.8159999847412109, 0.8180000185966492]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 7, 2, 3, 5], [3, 2, 1, 0, 2], [0, 77, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 6, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 5, 5, 8, 0, 7, 8, 3, 0, 0, 4], [3, 2, 1, 0, 2, 3, 0, 3], [0, 45, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 16, 8, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [95.2137680053711, 10799.3642578125, 181934.984375, 1285016.875, 5667569.5, 18485494.0], "accuracy": [0.09774138033390045, 0.10579843819141388, 0.09734513610601425, 0.10130762308835983, 0.1014397069811821, 0.09972262382507324], "val_loss": [801.3692626953125, 39295.79296875, 417528.75, 2269375.75, 8489367.0, 25023914.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [99, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 4, 0, 2, 7, 2, 1], [1, 6, 1, 7, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 6, 0, 8, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [3], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3099303245544434, 2.3100926876068115, 2.308786630630493, 2.3109335899353027, 2.3101823329925537, 2.3105812072753906], "accuracy": [0.08677849918603897, 0.09074098616838455, 0.09325055778026581, 0.08757099509239197, 0.09047681838274002, 0.0882314071059227], "val_loss": [2.3092617988586426, 2.3092617988586426, 2.3092617988586426, 2.3092617988586426, 2.3092617988586426, 2.3092617988586426], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]