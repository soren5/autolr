[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110941410064697, 1.5965360403060913, 1.1334729194641113, 0.9813464879989624, 0.864364743232727, 0.8590527772903442, 0.7831282019615173, 0.736378014087677, 0.7396455407142639, 0.6856434345245361, 0.6759845614433289, 0.6638918519020081, 0.6546421647071838, 0.6249918937683105, 0.6225723028182983, 0.6110902428627014, 0.5982791781425476, 0.5896076560020447, 0.5810232758522034, 0.5524457097053528, 0.5551064610481262, 0.5568208694458008, 0.5394744873046875, 0.5417577028274536, 0.5244776010513306, 0.5271739363670349, 0.5034900307655334, 0.5051769614219666, 0.4985305070877075, 0.490826278924942, 0.4837630093097687, 0.4823393225669861, 0.4756845533847809, 0.47248029708862305, 0.4738573729991913, 0.46432095766067505], "accuracy": [0.26178839802742004, 0.5175009965896606, 0.6026945114135742, 0.6493197679519653, 0.6913221478462219, 0.6863030195236206, 0.7197200059890747, 0.7320036888122559, 0.7273808121681213, 0.7454761862754822, 0.7511557340621948, 0.7565711140632629, 0.7563069462776184, 0.7707040309906006, 0.7711002230644226, 0.774798572063446, 0.7814027070999146, 0.7836481332778931, 0.7835160493850708, 0.7991018295288086, 0.7943468689918518, 0.7955356240272522, 0.8039889335632324, 0.8021397590637207, 0.8055738806724548, 0.8108572363853455, 0.8157442808151245, 0.817461371421814, 0.8170651197433472, 0.8249900937080383, 0.8278959393501282, 0.8230088353157043, 0.8290846943855286, 0.8269713521003723, 0.8286884427070618, 0.8322546482086182], "val_loss": [1.9163568019866943, 1.0926274061203003, 0.9082399010658264, 0.771453857421875, 0.7475249171257019, 0.7186620831489563, 0.6563138961791992, 0.6491129398345947, 0.6260514259338379, 0.6071171760559082, 0.615898847579956, 0.6264339089393616, 0.5569986701011658, 0.5906285047531128, 0.5424196124076843, 0.546515941619873, 0.537613034248352, 0.5331379175186157, 0.5111082196235657, 0.49631360173225403, 0.5119993686676025, 0.4913904070854187, 0.48845353722572327, 0.4733723998069763, 0.5024732351303101, 0.4708401560783386, 0.5020370483398438, 0.4640088677406311, 0.4768872857093811, 0.4788174629211426, 0.45422640442848206, 0.4568833112716675, 0.4442594051361084, 0.49567288160324097, 0.4496692419052124, 0.4576076567173004], "val_accuracy": [0.6033333539962769, 0.6493333578109741, 0.6769999861717224, 0.7233333587646484, 0.7123333215713501, 0.7183333039283752, 0.7603333592414856, 0.7433333396911621, 0.765333354473114, 0.7693333625793457, 0.7493333220481873, 0.750333309173584, 0.7943333387374878, 0.7803333401679993, 0.7879999876022339, 0.7983333468437195, 0.7866666913032532, 0.7856666445732117, 0.8100000023841858, 0.8130000233650208, 0.8016666769981384, 0.8136666417121887, 0.8190000057220459, 0.8230000138282776, 0.8169999718666077, 0.8256666660308838, 0.8096666932106018, 0.8273333311080933, 0.8180000185966492, 0.812666654586792, 0.8333333134651184, 0.8256666660308838, 0.8296666741371155, 0.8183333277702332, 0.8333333134651184, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 6, 3, 1, 3, 0], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 11], [0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 0, 2, 2], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.1128571406006813, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [57539567812608.0, 64593078517760.0, 65271029039104.0, 65029248385024.0, 65268659257344.0, 65951437422592.0], "accuracy": [0.09972262382507324, 0.10513802617788315, 0.10328886657953262, 0.10460969805717468, 0.10632677376270294, 0.10302469879388809], "val_loss": [45936881434624.0, 46050098282496.0, 46050098282496.0, 46050098282496.0, 46050098282496.0, 46050098282496.0], "val_accuracy": [0.11566666513681412, 0.11433333158493042, 0.11433333158493042, 0.11433333158493042, 0.11433333158493042, 0.11433333158493042]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [25, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [93, 1], [0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [5, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 12, 7, 5, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 3, 3, 0, 2], [0, 31, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 2, 0, 6, 5, 7, 8, 1, 0], [0, 5, 1, 7, 0, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 15, 9, 6, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, alpha))), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309375524520874, 2.3099751472473145, 2.309382677078247, 2.309824228286743, 2.311668634414673, 2.310471534729004], "accuracy": [0.09126931428909302, 0.08889182657003403, 0.09721305221319199, 0.08558975160121918, 0.09034473448991776, 0.09047681838274002], "val_loss": [2.3086464405059814, 2.3086464405059814, 2.3086464405059814, 2.3086464405059814, 2.3086464405059814, 2.3086464405059814], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [6, 2, 3, 8, 3, 5, 4, 0, 0, 9], [0, 0, 1, 0, 2], [0, 83, 54, 4], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 0, 1, 5, 2, 1], [7, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 15, 10, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.negative(alpha), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309739828109741, 2.309657335281372, 2.311535596847534, 2.309842586517334, 2.309295177459717, 2.3093156814575195], "accuracy": [0.09060890227556229, 0.09549596905708313, 0.08915598690509796, 0.08902391046285629, 0.09642054885625839, 0.0936468094587326], "val_loss": [2.308701515197754, 2.308701515197754, 2.308701515197754, 2.308701515197754, 2.308701515197754, 2.308701515197754], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]