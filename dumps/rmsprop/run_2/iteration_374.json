[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8240000009536743, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2098565101623535, 1.5948833227157593, 1.1481202840805054, 0.9776878356933594, 0.887805163860321, 0.8494840264320374, 0.7883147597312927, 0.751569926738739, 0.7315225601196289, 0.6974338889122009, 0.6918009519577026, 0.6747578382492065, 0.6492937803268433, 0.6436566114425659, 0.6305335164070129, 0.6045345067977905, 0.5937505960464478, 0.5885753631591797, 0.5824520587921143, 0.5651512742042542, 0.5708277821540833, 0.5519158840179443, 0.5549311637878418, 0.5364932417869568, 0.5313524007797241, 0.5250493884086609, 0.5169826745986938, 0.5132424831390381, 0.5013357400894165, 0.5115982890129089, 0.4904555380344391, 0.4815436005592346, 0.4743625521659851, 0.4725096523761749, 0.4737570881843567, 0.4644443690776825, 0.45664182305336, 0.46168118715286255, 0.4445950388908386, 0.4548257291316986, 0.4438351094722748, 0.4412948191165924, 0.42562466859817505, 0.4333605170249939, 0.43124547600746155, 0.4207313358783722, 0.41633644700050354], "accuracy": [0.26918503642082214, 0.5099722743034363, 0.588297426700592, 0.6576409935951233, 0.674679696559906, 0.6890767216682434, 0.7062475085258484, 0.7273808121681213, 0.7294940948486328, 0.7347774505615234, 0.7471932172775269, 0.7504953145980835, 0.7549861073493958, 0.7574957013130188, 0.7668735980987549, 0.7759873270988464, 0.7829877138137817, 0.7808743715286255, 0.7839123010635376, 0.7951393723487854, 0.7877426743507385, 0.8009510040283203, 0.7960638999938965, 0.8006868362426758, 0.8068947196006775, 0.8090080618858337, 0.8078193068504333, 0.8132346868515015, 0.8158763647079468, 0.8133667707443237, 0.8203672170639038, 0.8249900937080383, 0.8293488025665283, 0.8298771381378174, 0.82683926820755, 0.829216718673706, 0.8343679904937744, 0.8329150676727295, 0.8426892161369324, 0.833179235458374, 0.8384625315666199, 0.8454629778862, 0.8474441766738892, 0.8389908671379089, 0.843481719493866, 0.8479725122451782, 0.852859616279602], "val_loss": [1.9110628366470337, 1.068711757659912, 0.8888727426528931, 0.8112552762031555, 0.768349289894104, 0.6718113422393799, 0.6372780799865723, 0.6253455877304077, 0.5795677900314331, 0.5974714159965515, 0.5784886479377747, 0.5553789734840393, 0.5400187373161316, 0.5191585421562195, 0.5058548450469971, 0.5037627220153809, 0.49958330392837524, 0.48802629113197327, 0.4933370053768158, 0.4723243713378906, 0.49792659282684326, 0.4716806709766388, 0.4641047418117523, 0.45782679319381714, 0.4526066780090332, 0.4609205722808838, 0.43373265862464905, 0.4418088495731354, 0.45127615332603455, 0.43161359429359436, 0.42971867322921753, 0.43979257345199585, 0.41605284810066223, 0.430563747882843, 0.4264585077762604, 0.4053439795970917, 0.4088573455810547, 0.40738317370414734, 0.4306555986404419, 0.40619662404060364, 0.4000686705112457, 0.39824768900871277, 0.39064472913742065, 0.4055311679840088, 0.3859710395336151, 0.389794260263443, 0.388864666223526], "val_accuracy": [0.5839999914169312, 0.6769999861717224, 0.7026666402816772, 0.6993333101272583, 0.7196666598320007, 0.7419999837875366, 0.762333333492279, 0.7493333220481873, 0.7786666750907898, 0.7726666927337646, 0.7756666541099548, 0.784333348274231, 0.7916666865348816, 0.8066666722297668, 0.8169999718666077, 0.8090000152587891, 0.8206666707992554, 0.8213333487510681, 0.812333345413208, 0.8180000185966492, 0.8086666464805603, 0.8266666531562805, 0.8296666741371155, 0.8306666612625122, 0.8339999914169312, 0.8236666917800903, 0.8339999914169312, 0.831333339214325, 0.8309999704360962, 0.8360000252723694, 0.8416666388511658, 0.8373333215713501, 0.843666672706604, 0.8413333296775818, 0.843666672706604, 0.8519999980926514, 0.8519999980926514, 0.8526666760444641, 0.840666651725769, 0.8543333411216736, 0.846666693687439, 0.8616666793823242, 0.8526666760444641, 0.8493333458900452, 0.8553333282470703, 0.8553333282470703, 0.8536666631698608]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 3, 3, 5, 2], [0, 3, 1, 0, 2, 3], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 2, 0, 2, 5, 2, 1], [0, 5, 1, 6, 0], [0, 22], [1], [0], [7], [0]], "fitness": -0.36142855882644653, "mapping_values": [1, 13, 7, 6, 2, 5, 3, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.272460699081421, 2.4940617084503174, 2.3568742275238037, 2.3051278591156006, 2.2426512241363525, 2.450493812561035, 2.2065889835357666, 2.310912609100342, 2.304340362548828, 2.30317759513855], "accuracy": [0.2056531459093094, 0.1546691358089447, 0.12191256135702133, 0.10170386731624603, 0.16470743715763092, 0.17738740146160126, 0.25280675292015076, 0.09694888442754745, 0.09945846349000931, 0.09972262382507324], "val_loss": [2.2917304039001465, 2.535001516342163, 2.3034932613372803, 2.30163836479187, 1.7567909955978394, 1.9301413297653198, 2.31943678855896, 2.3054237365722656, 2.3032450675964355, 2.3028597831726074], "val_accuracy": [0.10166666656732559, 0.09933333098888397, 0.0976666659116745, 0.09866666793823242, 0.3479999899864197, 0.265666663646698, 0.0976666659116745, 0.0976666659116745, 0.09933333098888397, 0.12033333629369736]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 0, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 1, 1], [0, 6, 1, 0, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10542856901884079, "mapping_values": [1, 11, 6, 5, 1, 8, 5, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [23403.31640625, 23398723584.0, 9231201126580224.0, 5208672829440.0, 380952.96875, 100092992.0, NaN], "accuracy": [0.09536388516426086, 0.10500594228506088, 0.10038304328918457, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09906221181154251], "val_loss": [644932.0625, 7.076402719778406e+16, 11828021166080.0, 14451.2744140625, 3699526.25, 947078720.0, NaN], "val_accuracy": [0.10133333504199982, 0.1106666699051857, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10533333569765091]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 9, 0, 6, 1, 8, 2], [2, 0, 5, 1, 0], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 5, 0, 2, 5, 2, 2], [0, 6, 1, 6, 0], [0, 17], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 4, 3, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.5497541427612305, 58.69340133666992, 204.47068786621094, 501.6514892578125, 1016.3963012695312, 1800.142822265625], "accuracy": [0.10091137140989304, 0.1014397069811821, 0.09893012791872025, 0.10289261490106583, 0.0948355570435524, 0.09615638852119446], "val_loss": [20.501497268676758, 95.87490844726562, 265.6379699707031, 578.7371826171875, 1083.7061767578125, 1829.5167236328125], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 1], [2, 2, 1, 0, 0], [0, 59, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 0, 3, 1, 0], [61, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 2, 3, 2, 2, 2, 5, 5, 2, 3, 3, 7, 1, 1, 6, 2, 8, 7, 9, 9, 6, 1, 2, 0, 6, 9, 8, 1, 5, 9], [6, 6, 1, 6, 0, 4, 4, 7, 5, 2, 7, 4, 5, 0, 0, 1, 4], [0, 22, 77, 86, 35, 99, 99], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 0, 47, 30, 17, 7, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.add(grad, tf.math.square(alpha))), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.negative(grad), beta), grad), tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(grad)), tf.math.subtract(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3092567920684814, 2.310250997543335, 2.3103625774383545, 2.31046724319458, 2.3087501525878906, 2.3103678226470947], "accuracy": [0.09694888442754745, 0.08968432247638702, 0.09734513610601425, 0.0886276587843895, 0.10038304328918457, 0.09430722147226334], "val_loss": [2.3089067935943604, 2.3089067935943604, 2.3089067935943604, 2.3089067935943604, 2.3089067935943604, 2.3089067935943604], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]