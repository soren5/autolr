[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212885618209839, 1.606878638267517, 1.161820411682129, 0.9830711483955383, 0.9044239521026611, 0.8434919118881226, 0.7965670228004456, 0.7690719366073608, 0.7306655645370483, 0.7202080488204956, 0.7023138403892517, 0.6797305941581726, 0.6646618843078613, 0.6586840152740479, 0.6272971630096436, 0.6033506393432617, 0.6178812384605408, 0.5913936495780945, 0.5868438482284546, 0.578403890132904, 0.572851300239563, 0.5540001392364502, 0.5515674948692322, 0.5412359237670898, 0.5346343517303467, 0.5248560309410095, 0.5199776887893677, 0.5036011338233948, 0.5111681818962097, 0.4978739619255066, 0.503621518611908, 0.48813632130622864, 0.4835019111633301, 0.4858975410461426, 0.48220914602279663, 0.47223129868507385, 0.47083061933517456, 0.46480637788772583, 0.45925256609916687, 0.4460829496383667, 0.44286561012268066, 0.4486978352069855, 0.4266643226146698, 0.4346555471420288, 0.42075544595718384, 0.4257681965827942, 0.4234499931335449, 0.4166584312915802], "accuracy": [0.2665433883666992, 0.5020473003387451, 0.5913353562355042, 0.6481310129165649, 0.6700568199157715, 0.6868313550949097, 0.7069079279899597, 0.7193237543106079, 0.7273808121681213, 0.7293620109558105, 0.7353057861328125, 0.7425703406333923, 0.7453441023826599, 0.7530049085617065, 0.76106196641922, 0.7754589915275574, 0.7675340175628662, 0.7824593782424927, 0.7791573405265808, 0.7766477465629578, 0.785629391670227, 0.7940827012062073, 0.7903843522071838, 0.7968564033508301, 0.8047813773155212, 0.8047813773155212, 0.8068947196006775, 0.8119139075279236, 0.8043851256370544, 0.8129705190658569, 0.8124422430992126, 0.8204993009567261, 0.8178576231002808, 0.8204993009567261, 0.8187822103500366, 0.8255184292793274, 0.8244617581367493, 0.8318583965301514, 0.8274996876716614, 0.8360850811004639, 0.8392550349235535, 0.833179235458374, 0.8475762605667114, 0.8378021121025085, 0.8424250483512878, 0.8450667262077332, 0.8409721255302429, 0.8487650156021118], "val_loss": [1.92012357711792, 1.0739126205444336, 0.917840838432312, 0.8054417371749878, 0.748738706111908, 0.6993293166160583, 0.7020151615142822, 0.6582196950912476, 0.6373783946037292, 0.6157099008560181, 0.6014333367347717, 0.5994235873222351, 0.575505793094635, 0.5701131224632263, 0.5383138060569763, 0.5580297112464905, 0.5400876998901367, 0.5218570828437805, 0.5394681096076965, 0.5033213496208191, 0.5141530632972717, 0.4946376085281372, 0.500406801700592, 0.4859415590763092, 0.4878224730491638, 0.48260053992271423, 0.4693574905395508, 0.5019552111625671, 0.4787023067474365, 0.4684240221977234, 0.47581779956817627, 0.45762577652931213, 0.45438119769096375, 0.4613282084465027, 0.44747698307037354, 0.4632003605365753, 0.4383240044116974, 0.4440537989139557, 0.43113887310028076, 0.43123963475227356, 0.4727535843849182, 0.42613622546195984, 0.4196511209011078, 0.4273676872253418, 0.41730281710624695, 0.41362643241882324, 0.42989176511764526, 0.419259250164032], "val_accuracy": [0.6023333072662354, 0.6683333516120911, 0.6710000038146973, 0.6956666707992554, 0.7080000042915344, 0.7386666536331177, 0.718666672706604, 0.7353333234786987, 0.7603333592414856, 0.7663333415985107, 0.765666663646698, 0.7739999890327454, 0.7820000052452087, 0.7753333449363708, 0.800000011920929, 0.7846666574478149, 0.7910000085830688, 0.8090000152587891, 0.7823333144187927, 0.8190000057220459, 0.8083333373069763, 0.8180000185966492, 0.8149999976158142, 0.8169999718666077, 0.8270000219345093, 0.8180000185966492, 0.8383333086967468, 0.8103333115577698, 0.8236666917800903, 0.8266666531562805, 0.8203333616256714, 0.8396666646003723, 0.8336666822433472, 0.8323333263397217, 0.8433333039283752, 0.8306666612625122, 0.8426666855812073, 0.8423333168029785, 0.8519999980926514, 0.8450000286102295, 0.8166666626930237, 0.8473333120346069, 0.8536666631698608, 0.847000002861023, 0.8473333120346069, 0.8516666889190674, 0.8389999866485596, 0.846666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [5, 2, 3, 1, 3, 5, 5], [0, 3, 1, 0, 2], [88, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0, 5], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 0, 3], [0, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.15142856538295746, "mapping_values": [1, 12, 7, 5, 2, 13, 7, 6, 2, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.7723731994628906, 7.691170692443848, 16.637676239013672, 20.99468994140625, 23.07512092590332, 33.08705520629883, 40.854244232177734, 38.40363311767578, 34.128318786621094, 33.1392707824707], "accuracy": [0.10077928751707077, 0.0882314071059227, 0.07607977837324142, 0.08796724677085876, 0.09628847241401672, 0.11359133571386337, 0.10672302544116974, 0.09628847241401672, 0.09325055778026581, 0.09021265059709549], "val_loss": [6.205010414123535, 13.144478797912598, 11.948898315429688, 17.7335262298584, 16.62143325805664, 26.723934173583984, 29.136962890625, 26.67128562927246, 24.198978424072266, 23.193117141723633], "val_accuracy": [0.06433333456516266, 0.05133333429694176, 0.04833333194255829, 0.09000000357627869, 0.1523333340883255, 0.1509999930858612, 0.11599999666213989, 0.10999999940395355, 0.0846666693687439, 0.09200000017881393]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 2], [0, 3, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [9, 6, 1, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 6, 2, 5, 2, 1], [0, 6, 1, 6, 0, 6], [0, 34], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 1, 0, 1, 13, 7, 6, 2, 3, 2, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [95.25605010986328, 11137.7109375, 179609.15625, 1285517.75, 5693810.5, 18575906.0], "accuracy": [0.09721305221319199, 0.09536388516426086, 0.09840179979801178, 0.1002509593963623, 0.10157178342342377, 0.10513802617788315], "val_loss": [787.2256469726562, 38572.375, 409808.125, 2227354.5, 8332076.5, 24560126.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 2, 0, 3, 1], [3, 2, 1, 0, 1, 2, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2, 9], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [4, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 18, 10, 8, 2, 11, 8, 3, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(alpha, grad))))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3087353706359863, 2.310255527496338, 2.3095593452453613, 2.3080239295959473, 2.3091843128204346, 2.3098196983337402], "accuracy": [0.09536388516426086, 0.09391097724437714, 0.0936468094587326, 0.09509972482919693, 0.09060890227556229, 0.08519349992275238], "val_loss": [2.3090553283691406, 2.3090553283691406, 2.3090553283691406, 2.3090553283691406, 2.3090553283691406, 2.3090553283691406], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 5, 5, 4, 8, 3, 2, 4, 1, 8, 1, 0, 3], [0, 2, 0, 0, 2, 2, 2, 0, 3, 0, 1], [69, 50, 39, 29, 74], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 27, 16, 11, 5, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.pow(grad, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad), grad), tf.math.sqrt(tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102946281433105, 2.3101413249969482, 2.312106132507324, 2.3091118335723877, 2.3111517429351807, 2.311697244644165], "accuracy": [0.09259014576673508, 0.09496764093637466, 0.08532558381557465, 0.09576013684272766, 0.09192973375320435, 0.08334434032440186], "val_loss": [2.3086347579956055, 2.3086347579956055, 2.3086347579956055, 2.3086347579956055, 2.3086347579956055, 2.3086347579956055], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]