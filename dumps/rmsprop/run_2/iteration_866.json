[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2066657543182373, 1.5895071029663086, 1.1538841724395752, 0.9600823521614075, 0.8829054236412048, 0.8318693041801453, 0.7982233762741089, 0.7397068738937378, 0.7432911396026611, 0.7158265113830566, 0.6804787516593933, 0.6705381870269775, 0.6495341658592224, 0.6224873065948486, 0.6142855882644653, 0.6154399514198303, 0.5957833528518677, 0.5866633057594299, 0.5630613565444946, 0.5744569897651672, 0.553896427154541, 0.5449011921882629, 0.5309649109840393, 0.5235281586647034, 0.5328016877174377, 0.5127457976341248, 0.49829429388046265, 0.4930432438850403, 0.49242743849754333, 0.48400431871414185, 0.4838831424713135, 0.4823354184627533, 0.46173742413520813, 0.4671826958656311, 0.4607904553413391, 0.44964465498924255, 0.4592878222465515, 0.43879249691963196, 0.44435158371925354, 0.4321686625480652, 0.4229975640773773, 0.42612454295158386, 0.42366650700569153, 0.41510704159736633, 0.4090098738670349, 0.414655864238739, 0.409822553396225, 0.38741543889045715, 0.3956463634967804], "accuracy": [0.2782987654209137, 0.5115572810173035, 0.5996565818786621, 0.6642451286315918, 0.6832650899887085, 0.6968696117401123, 0.7100779414176941, 0.7304186820983887, 0.7283053994178772, 0.7359662055969238, 0.7490423917770386, 0.7500990629196167, 0.7606657147407532, 0.7713643908500671, 0.7736098170280457, 0.7737419009208679, 0.7788931727409363, 0.7854973077774048, 0.7944789528846741, 0.7880068421363831, 0.800818920135498, 0.7976489067077637, 0.8025360107421875, 0.8090080618858337, 0.8080834746360779, 0.8061022162437439, 0.8168009519577026, 0.8215559124946594, 0.8198388814926147, 0.8226125836372375, 0.8236692547798157, 0.822348415851593, 0.8330471515655518, 0.8330471515655518, 0.8330471515655518, 0.8327829837799072, 0.8313300609588623, 0.8407079577445984, 0.8359529972076416, 0.8425571322441101, 0.8485008478164673, 0.8466516733169556, 0.8469158411026001, 0.8481045961380005, 0.8562937378883362, 0.8481045961380005, 0.8519350290298462, 0.8588033318519592, 0.8585391640663147], "val_loss": [1.9124475717544556, 1.1138427257537842, 0.8574526309967041, 0.7566704154014587, 0.7436352372169495, 0.77311110496521, 0.6496667265892029, 0.6674931645393372, 0.6602630019187927, 0.6023345589637756, 0.6045624017715454, 0.562819242477417, 0.5617305040359497, 0.5589762330055237, 0.5580641627311707, 0.5315211415290833, 0.5630958676338196, 0.5016573667526245, 0.5206646919250488, 0.538062572479248, 0.5013537406921387, 0.48578402400016785, 0.49591466784477234, 0.4894900619983673, 0.47810062766075134, 0.4658847749233246, 0.4589824676513672, 0.45387911796569824, 0.47589337825775146, 0.443743497133255, 0.45234087109565735, 0.4439955949783325, 0.45030689239501953, 0.45993277430534363, 0.4454149901866913, 0.43153929710388184, 0.4241665303707123, 0.4224870502948761, 0.4285415709018707, 0.4222663938999176, 0.4437563121318817, 0.42630520462989807, 0.4172109365463257, 0.4138915538787842, 0.41154688596725464, 0.4114627242088318, 0.4072107672691345, 0.41709017753601074, 0.4203890860080719], "val_accuracy": [0.5553333163261414, 0.6423333287239075, 0.70333331823349, 0.7269999980926514, 0.7143333554267883, 0.7160000205039978, 0.7720000147819519, 0.7443333268165588, 0.7413333058357239, 0.7766666412353516, 0.7749999761581421, 0.7983333468437195, 0.7916666865348816, 0.7870000004768372, 0.7816666960716248, 0.8033333420753479, 0.7723333239555359, 0.8223333358764648, 0.8073333501815796, 0.8050000071525574, 0.8106666803359985, 0.8230000138282776, 0.812666654586792, 0.8243333101272583, 0.8289999961853027, 0.8366666436195374, 0.8349999785423279, 0.8379999995231628, 0.8273333311080933, 0.8396666646003723, 0.8393333554267883, 0.8446666598320007, 0.8403333425521851, 0.8360000252723694, 0.840666651725769, 0.8479999899864197, 0.8516666889190674, 0.8526666760444641, 0.8463333249092102, 0.8479999899864197, 0.8373333215713501, 0.8536666631698608, 0.8486666679382324, 0.856333315372467, 0.8473333120346069, 0.8500000238418579, 0.8500000238418579, 0.846666693687439, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [95.223388671875, 11007.23046875, 181512.640625, 1289652.0, 5676523.0, 18720018.0], "accuracy": [0.09945846349000931, 0.10540219396352768, 0.10408136248588562, 0.10421344637870789, 0.10051512718200684, 0.10394927859306335], "val_loss": [809.3283081054688, 39750.41796875, 422444.375, 2296229.25, 8590032.0, 25320950.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [2, 2, 3, 2, 3, 5, 6], [3, 2, 3, 0, 2, 1, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 7, 6, 3, 3, 2], [2, 5, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 0, 6, 0], [0, 22], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 7, 1, 5, 7, 4, 4, 7, 2, 1, 1, 8, 8, 6, 0, 4, 4, 7, 1, 5, 8, 9, 6, 1, 2, 3, 5, 3, 9, 2, 3], [2, 3, 6, 7, 1, 1, 4, 4, 3, 2, 1, 1, 4, 7, 1, 5, 0, 7, 3, 1], [0, 38, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 1, 1, 0, 1, 0, 2, 1, 1, 1, 51, 31, 20, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), grad), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(beta, sigma), tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.sqrt(grad), grad), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.pow(tf.math.pow(alpha, grad), grad))))), tf.math.add(sigma, beta))), alpha), tf.math.subtract(alpha, tf.math.square(grad)))), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.square(alpha), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad))), sigma), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 3, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 2, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 2, 5, 5, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 8, 6, 2, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 3, 1, 0, 2], [67, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [0], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 5, 3, 2, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3101789951324463, 2.3097941875457764, 2.3123154640197754, 2.3109514713287354, 2.310166597366333, 2.3109846115112305], "accuracy": [0.09113723784685135, 0.09113723784685135, 0.09008057415485382, 0.08955223858356476, 0.09140139818191528, 0.09179764986038208], "val_loss": [2.3091015815734863, 2.3091015815734863, 2.3091015815734863, 2.3091015815734863, 2.3091015815734863, 2.3091015815734863], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]