[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8122857213020325, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110040187835693, 1.6003975868225098, 1.1598113775253296, 0.9844970107078552, 0.8851019740104675, 0.8475185036659241, 0.792331874370575, 0.7582307457923889, 0.7493520975112915, 0.7081738710403442, 0.6958653330802917, 0.6982865333557129, 0.6614633798599243, 0.6611645221710205, 0.6513484120368958, 0.6229312419891357, 0.6048869490623474, 0.5960613489151001, 0.5975900292396545, 0.5776466727256775, 0.569179117679596, 0.576399564743042, 0.5540603399276733, 0.5594994425773621, 0.5354553461074829, 0.535234808921814, 0.5386871099472046, 0.527852475643158, 0.5183365345001221, 0.5148594379425049, 0.5036483407020569, 0.49113303422927856, 0.4872279465198517, 0.4922879934310913, 0.4782731235027313, 0.4901372492313385, 0.48143407702445984, 0.4729008674621582, 0.46237459778785706, 0.4593338072299957, 0.45484647154808044, 0.45947107672691345], "accuracy": [0.2661471366882324, 0.5110289454460144, 0.587372899055481, 0.6530181169509888, 0.6811517477035522, 0.6976621150970459, 0.713379979133606, 0.7194558382034302, 0.718399167060852, 0.7363624572753906, 0.7420420050621033, 0.7378153204917908, 0.7531369924545288, 0.7543256878852844, 0.7593448758125305, 0.7663452625274658, 0.7726852297782898, 0.7808743715286255, 0.7790252566337585, 0.787082314491272, 0.7884030938148499, 0.78113853931427, 0.7960638999938965, 0.7960638999938965, 0.8021397590637207, 0.8034605979919434, 0.8020076751708984, 0.804649293422699, 0.8121780753135681, 0.8117818236351013, 0.8120459914207458, 0.8231409192085266, 0.8197067975997925, 0.8193105459213257, 0.8265751004219055, 0.8248580098152161, 0.8230088353157043, 0.8265751004219055, 0.8322546482086182, 0.8337075710296631, 0.8338396549224854, 0.8317263126373291], "val_loss": [1.9210182428359985, 1.0924766063690186, 0.9294975399971008, 0.7645778059959412, 0.7401425838470459, 0.6790338754653931, 0.6739808320999146, 0.6383519172668457, 0.6230213046073914, 0.5885669589042664, 0.5674178004264832, 0.5721705555915833, 0.5720392465591431, 0.5663968920707703, 0.5170835256576538, 0.5157234072685242, 0.5149794816970825, 0.530476987361908, 0.4983435869216919, 0.48596638441085815, 0.47717148065567017, 0.48949000239372253, 0.48732998967170715, 0.47502946853637695, 0.453853040933609, 0.4912419319152832, 0.4479494094848633, 0.44535717368125916, 0.45154184103012085, 0.4475528597831726, 0.4276963174343109, 0.4229668080806732, 0.4276363253593445, 0.4404773712158203, 0.44868579506874084, 0.42342033982276917, 0.41027387976646423, 0.42281901836395264, 0.4036085903644562, 0.40985241532325745, 0.41347119212150574, 0.39586758613586426], "val_accuracy": [0.5846666693687439, 0.6520000100135803, 0.6833333373069763, 0.737333357334137, 0.7279999852180481, 0.7459999918937683, 0.7393333315849304, 0.7559999823570251, 0.7720000147819519, 0.7860000133514404, 0.7863333225250244, 0.7816666960716248, 0.765333354473114, 0.7923333048820496, 0.8146666884422302, 0.8086666464805603, 0.8026666641235352, 0.8013333082199097, 0.8159999847412109, 0.8273333311080933, 0.8306666612625122, 0.831333339214325, 0.8253333568572998, 0.828000009059906, 0.8399999737739563, 0.8209999799728394, 0.8413333296775818, 0.8476666808128357, 0.8293333053588867, 0.843666672706604, 0.8500000238418579, 0.8483333587646484, 0.8423333168029785, 0.843666672706604, 0.8293333053588867, 0.8556666374206543, 0.8629999756813049, 0.8433333039283752, 0.8576666712760925, 0.856333315372467, 0.8500000238418579, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 1, 2], [2, 4, 1, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 2, 2, 5, 2, 1, 0, 7, 6, 4], [0, 4, 1, 6, 0, 0, 7, 4, 4], [0, 22, 30], [1], [0], [2], [0]], "fitness": -0.1379999965429306, "mapping_values": [1, 5, 3, 2, 1, 7, 4, 3, 0, 20, 11, 9, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [80860798976.0, 1386132537344.0, 2435812687872.0, 2971201961984.0, 3430205095936.0, 3841504837632.0, 4067917561856.0, 4404935655424.0], "accuracy": [0.09536388516426086, 0.09787346422672272, 0.11015717685222626, 0.10527011007070541, 0.1088363528251648, 0.10170386731624603, 0.10276053100824356, 0.09945846349000931], "val_loss": [265892741120.0, 1289063628800.0, 1722479149056.0, 2064197091328.0, 2315406278656.0, 2537283125248.0, 2801877385216.0, 2993833115648.0], "val_accuracy": [0.08733333647251129, 0.12399999797344208, 0.13733333349227905, 0.1316666603088379, 0.12800000607967377, 0.125, 0.12700000405311584, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [9, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 9, 0, 2, 8, 2, 1], [0, 6, 5, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.11142857372760773, "mapping_values": [1, 1, 1, 0, 1, 8, 4, 4, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.914710367398983e+24, 1.3793620617853343e+34, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09496764093637466, 0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.1341426108052986e+26, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.11266666650772095, 0.11266666650772095, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 9], [2, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 2, 5, 2, 6, 7, 4, 5, 4, 9], [0, 6, 1, 6, 0, 0, 6], [30, 22, 55, 1], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 6, 4, 2, 1, 19, 12, 7, 4, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, alpha), grad), tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033204078674316, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5, 9], [1, 2, 1, 0, 3], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 2, 0, 1, 3, 4, 2], [2, 0, 3, 2, 0], [16, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 0, 8, 2, 1], [0, 0, 1, 1, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 8, 4, 4, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [46.70947265625, Infinity, 3.665081262588501, 6.764247894287109, 10.350568771362305, 13.9522123336792], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [174963621888.0, 2.916055679321289, 5.363018989562988, 8.928027153015137, 12.544058799743652, 16.120359420776367], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]