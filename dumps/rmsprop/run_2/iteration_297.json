[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2137248516082764, 1.6184102296829224, 1.1909865140914917, 1.0240803956985474, 0.8816904425621033, 0.8327520489692688, 0.8005726337432861, 0.7625013589859009, 0.7525553107261658, 0.7165821194648743, 0.7014235258102417, 0.6616085767745972, 0.6844703555107117, 0.638313889503479, 0.6380183100700378, 0.6261203289031982, 0.6076763272285461, 0.6075116991996765, 0.5843996405601501, 0.5888018608093262, 0.5661574602127075, 0.5679938197135925, 0.5487198233604431, 0.5508394837379456, 0.5280249118804932, 0.5204933285713196, 0.5194477438926697, 0.5163390040397644, 0.5122814178466797, 0.5021972060203552, 0.48879706859588623, 0.4835854172706604, 0.49368447065353394, 0.48082035779953003, 0.4686879813671112, 0.46672767400741577, 0.46430984139442444, 0.4630759060382843, 0.4568268656730652, 0.44852906465530396, 0.4389025866985321, 0.4415241777896881, 0.4341179430484772, 0.4372425377368927, 0.439238965511322, 0.43436485528945923, 0.41920122504234314, 0.4250757396221161, 0.4187287390232086, 0.4110175371170044, 0.4087865948677063, 0.40728288888931274, 0.3905985951423645, 0.3933371603488922, 0.39551636576652527, 0.39250802993774414, 0.38384947180747986, 0.38303932547569275], "accuracy": [0.26535463333129883, 0.4947827160358429, 0.5766741633415222, 0.6336019039154053, 0.6799629926681519, 0.6869634389877319, 0.7033417224884033, 0.7170783281326294, 0.717870831489563, 0.7368907928466797, 0.7445515990257263, 0.7602694630622864, 0.7497028112411499, 0.7556465268135071, 0.7606657147407532, 0.7693831920623779, 0.7740060687065125, 0.7733456492424011, 0.7816668748855591, 0.7815347909927368, 0.7968564033508301, 0.7881389260292053, 0.8035926818847656, 0.7977809906005859, 0.8030643463134766, 0.806630551815033, 0.8136309385299683, 0.8146876096725464, 0.8125742673873901, 0.817989706993103, 0.8210275769233704, 0.8255184292793274, 0.8181217908859253, 0.8226125836372375, 0.8284242749214172, 0.8304054737091064, 0.8360850811004639, 0.832650899887085, 0.8379341959953308, 0.8405758738517761, 0.843481719493866, 0.8388587832450867, 0.8436138033866882, 0.8421608805656433, 0.8488970994949341, 0.8429533839225769, 0.8490291833877563, 0.8450667262077332, 0.8462554216384888, 0.8512746095657349, 0.8500858545303345, 0.8524633646011353, 0.8595958352088928, 0.8589354157447815, 0.8558974862098694, 0.8615770936012268, 0.8605204224586487, 0.8647470474243164], "val_loss": [1.9283839464187622, 1.1336361169815063, 0.9160411953926086, 0.825878918170929, 0.7180180549621582, 0.6772343516349792, 0.6913891434669495, 0.6599833965301514, 0.6067417860031128, 0.6429622173309326, 0.5856596827507019, 0.565974771976471, 0.5647733807563782, 0.5425312519073486, 0.554323136806488, 0.5463258624076843, 0.5142744183540344, 0.5195720791816711, 0.5286413431167603, 0.49869295954704285, 0.5568823218345642, 0.4858643114566803, 0.5275753736495972, 0.48020943999290466, 0.49394312500953674, 0.48007673025131226, 0.5045735239982605, 0.4592748284339905, 0.46511897444725037, 0.46309900283813477, 0.451104074716568, 0.4953644871711731, 0.445716917514801, 0.4484438896179199, 0.4373595118522644, 0.44735413789749146, 0.4386782944202423, 0.4781566262245178, 0.42462223768234253, 0.4456084072589874, 0.4328433871269226, 0.4193486273288727, 0.4274647533893585, 0.4646306037902832, 0.42427942156791687, 0.43460142612457275, 0.4066632390022278, 0.40423673391342163, 0.42253491282463074, 0.4126273989677429, 0.3956654965877533, 0.4054206907749176, 0.3912557065486908, 0.3954959213733673, 0.3976534903049469, 0.39406031370162964, 0.3909720182418823, 0.3969958424568176], "val_accuracy": [0.49566665291786194, 0.640666663646698, 0.6673333048820496, 0.7080000042915344, 0.7390000224113464, 0.7409999966621399, 0.7250000238418579, 0.7493333220481873, 0.7726666927337646, 0.750333309173584, 0.7816666960716248, 0.7896666526794434, 0.7910000085830688, 0.7910000085830688, 0.7826666831970215, 0.7853333353996277, 0.8069999814033508, 0.7976666688919067, 0.7946666479110718, 0.8100000023841858, 0.7916666865348816, 0.8166666626930237, 0.7956666946411133, 0.8236666917800903, 0.8203333616256714, 0.8220000267028809, 0.793666660785675, 0.828000009059906, 0.8299999833106995, 0.824999988079071, 0.8296666741371155, 0.8130000233650208, 0.8376666903495789, 0.8336666822433472, 0.840666651725769, 0.8346666693687439, 0.8450000286102295, 0.8149999976158142, 0.8483333587646484, 0.8326666951179504, 0.8386666774749756, 0.8500000238418579, 0.8413333296775818, 0.8253333568572998, 0.8463333249092102, 0.8309999704360962, 0.8560000061988831, 0.8536666631698608, 0.8453333377838135, 0.8506666421890259, 0.859333336353302, 0.8523333072662354, 0.8633333444595337, 0.859000027179718, 0.8573333621025085, 0.859666645526886, 0.8603333234786987, 0.8586666584014893]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 7, 1], [0, 0, 1, 0, 2, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 8], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 2, 5, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.sqrt(grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 14, 7, 7, 3, 11, 7, 4, 1, 9, 6, 3, 1, 1, 0, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 2, 3, 1], [0, 0, 1, 6, 5], [54, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 5, 4, 1, 1, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303760290145874, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 2, 3, 2, 8, 5], [0, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 5, 2, 1], [0, 6, 1, 5, 0], [0, 59], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 10, 6, 4, 1, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.square(alpha))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha)), tf.math.add(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 3, 2, 3, 1], [0, 2, 1, 0, 2], [0, 39, 39], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [9, 2, 0, 6, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095428943634033, 2.3097124099731445, 2.308420181274414, 2.308824062347412, 2.3111588954925537, 2.3099310398101807], "accuracy": [0.09721305221319199, 0.09219389408826828, 0.09628847241401672, 0.09787346422672272, 0.09219389408826828, 0.09391097724437714], "val_loss": [2.3087825775146484, 2.3087825775146484, 2.3087825775146484, 2.3087825775146484, 2.3087825775146484, 2.3087825775146484], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]