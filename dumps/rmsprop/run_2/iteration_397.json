[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8428571224212646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109298706054688, 1.6083654165267944, 1.146431565284729, 0.9918817281723022, 0.9209432005882263, 0.8274673223495483, 0.7896023988723755, 0.768348753452301, 0.729761004447937, 0.7248846888542175, 0.6812576651573181, 0.6820334792137146, 0.6695349216461182, 0.6408336758613586, 0.6218001842498779, 0.6316384673118591, 0.6067313551902771, 0.6053869724273682, 0.5955675840377808, 0.5719797015190125, 0.5545540452003479, 0.5667053461074829, 0.5648242831230164, 0.5402035117149353, 0.5323265194892883, 0.5271620154380798, 0.5208245515823364, 0.5176307559013367, 0.5013895034790039, 0.495930939912796, 0.5036903619766235, 0.48420873284339905, 0.4832586348056793, 0.47907084226608276, 0.472988098859787, 0.4669150412082672, 0.46216875314712524, 0.4634830951690674, 0.4627436399459839, 0.448443204164505, 0.4460638165473938, 0.4521062970161438, 0.4362594783306122, 0.44376328587532043, 0.4266435503959656, 0.427665650844574, 0.4277975857257843, 0.4111418128013611, 0.4138788878917694, 0.41531744599342346, 0.4040897488594055, 0.40640929341316223, 0.3993905782699585, 0.39380690455436707, 0.39706292748451233, 0.38416868448257446, 0.3878512382507324, 0.38504117727279663, 0.3765452802181244], "accuracy": [0.270109623670578, 0.505877673625946, 0.6024303436279297, 0.6489235162734985, 0.6613393425941467, 0.6955488324165344, 0.7125874757766724, 0.7153612375259399, 0.7277770638465881, 0.7257958054542542, 0.7490423917770386, 0.7417778372764587, 0.7535332441329956, 0.7630431652069092, 0.7697794437408447, 0.7647602558135986, 0.7771760821342468, 0.776251494884491, 0.7759873270988464, 0.7872143983840942, 0.7969884872436523, 0.7865539789199829, 0.789459764957428, 0.8024039268493652, 0.7998943328857422, 0.8062343001365662, 0.805177628993988, 0.8105930685997009, 0.819442629814148, 0.8204993009567261, 0.8141592741012573, 0.8265751004219055, 0.8224804997444153, 0.8234050869941711, 0.8241975903511047, 0.8325188159942627, 0.8298771381378174, 0.8305375576019287, 0.8333113193511963, 0.8383304476737976, 0.8352925777435303, 0.8358209133148193, 0.8453308939933777, 0.8400475382804871, 0.8455950617790222, 0.8405758738517761, 0.8432175517082214, 0.852859616279602, 0.8514066934585571, 0.8487650156021118, 0.8532558679580688, 0.8512746095657349, 0.8502179384231567, 0.8627657890319824, 0.8537842035293579, 0.8621054291725159, 0.8613129258155823, 0.8593316674232483, 0.8631620407104492], "val_loss": [1.9238214492797852, 1.1077107191085815, 0.979982852935791, 0.8340335488319397, 0.7733889818191528, 0.7137019038200378, 0.6556572914123535, 0.6537341475486755, 0.672422468662262, 0.6325070261955261, 0.5939702987670898, 0.5991242527961731, 0.5580739974975586, 0.564365804195404, 0.551305890083313, 0.5429205894470215, 0.5471762418746948, 0.5352344512939453, 0.5260260701179504, 0.5119981169700623, 0.4881439507007599, 0.5381743907928467, 0.48929157853126526, 0.4808778762817383, 0.4718262553215027, 0.4817124009132385, 0.49372240900993347, 0.46584293246269226, 0.44612443447113037, 0.4744754731655121, 0.44931694865226746, 0.44115304946899414, 0.4389495551586151, 0.4282897114753723, 0.4375266134738922, 0.4258730411529541, 0.45312777161598206, 0.4262525141239166, 0.41473689675331116, 0.41701292991638184, 0.41705241799354553, 0.40563344955444336, 0.448172390460968, 0.4074340760707855, 0.3984247148036957, 0.42534568905830383, 0.3946055769920349, 0.40706419944763184, 0.3947089910507202, 0.4068610370159149, 0.3906390070915222, 0.4015895128250122, 0.3926409184932709, 0.3890727162361145, 0.3956300914287567, 0.38492515683174133, 0.38948795199394226, 0.3792587220668793, 0.38833481073379517], "val_accuracy": [0.5809999704360962, 0.653333306312561, 0.6603333353996277, 0.6840000152587891, 0.7013333439826965, 0.7173333168029785, 0.753000020980835, 0.746999979019165, 0.7213333249092102, 0.7506666779518127, 0.7736666798591614, 0.7663333415985107, 0.7903333306312561, 0.7820000052452087, 0.7986666560173035, 0.7893333435058594, 0.7853333353996277, 0.7863333225250244, 0.8029999732971191, 0.8076666593551636, 0.8199999928474426, 0.8053333163261414, 0.8186666369438171, 0.8243333101272583, 0.8266666531562805, 0.8180000185966492, 0.8143333196640015, 0.8270000219345093, 0.8343333601951599, 0.8233333230018616, 0.8353333473205566, 0.8389999866485596, 0.8420000076293945, 0.8493333458900452, 0.8479999899864197, 0.8416666388511658, 0.8320000171661377, 0.8473333120346069, 0.8519999980926514, 0.8526666760444641, 0.8500000238418579, 0.8543333411216736, 0.828000009059906, 0.8526666760444641, 0.8583333492279053, 0.8456666469573975, 0.859000027179718, 0.847000002861023, 0.8546666502952576, 0.8560000061988831, 0.8610000014305115, 0.8510000109672546, 0.8579999804496765, 0.8646666407585144, 0.8543333411216736, 0.8633333444595337, 0.8583333492279053, 0.8636666536331177, 0.8566666841506958]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 8, 3, 7, 1, 0, 6, 8, 3, 3, 9, 0, 2, 9, 6, 5, 6, 0, 4, 8, 2, 4, 4, 1, 1, 1, 0, 2, 1, 9, 6, 9, 5, 9, 1, 6, 3, 5], [1, 2, 1, 0, 2, 0, 0, 2, 3, 3, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 3, 0], [75, 39, 39, 59, 34, 58, 43, 97, 99, 49, 57], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 3, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 8, 1], [0, 0, 1, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 65, 43, 22, 11, 12, 7, 5, 1, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.sqrt(grad)), tf.math.multiply(alpha, tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, grad))))), tf.math.square(grad)), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.sqrt(grad), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), tf.math.pow(tf.math.subtract(tf.math.subtract(alpha, tf.math.subtract(tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(grad))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 9, 0, 2], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [25, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 2, 0, 2, 5, 2, 1], [6, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 12, 7, 5, 2, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(grad, tf.math.negative(grad)), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 6, 0, 6, 3, 8, 2, 6], [2, 0, 3, 1, 0, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 5, 2, 6], [0, 6, 1, 1], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(alpha, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098580837249756, 2.309812307357788, 2.311535120010376, 2.309459686279297, 2.31033992767334, 2.3120760917663574], "accuracy": [0.09602430462837219, 0.09008057415485382, 0.08809932321310043, 0.09642054885625839, 0.09245806187391281, 0.08981640636920929], "val_loss": [2.3092727661132812, 2.3092727661132812, 2.3092727661132812, 2.3092727661132812, 2.3092727661132812, 2.3092727661132812], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}, "mapping_values": [1, 6, 3, 3, 1, 14, 8, 6, 2, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 98], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 2, 3, 1, 5], [16, 1], [0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 0, 2, 0], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310753583908081, 2.310360908508301, 2.3096959590911865, 2.3097870349884033, 2.3098044395446777, 2.3105342388153076], "accuracy": [0.08638224750757217, 0.09325055778026581, 0.09245806187391281, 0.09087307006120682, 0.09325055778026581, 0.09470347315073013], "val_loss": [2.309213638305664, 2.309213638305664, 2.309213638305664, 2.309213638305664, 2.309213638305664, 2.309213638305664], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11}]