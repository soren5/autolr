[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.824571430683136, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209041118621826, 1.6214600801467896, 1.183037519454956, 0.9701330661773682, 0.9147220849990845, 0.8311318755149841, 0.8171403408050537, 0.7497828006744385, 0.7402429580688477, 0.7156581282615662, 0.6807343363761902, 0.6738467216491699, 0.666485071182251, 0.6471452116966248, 0.6184935569763184, 0.6108649373054504, 0.6050300002098083, 0.5964373350143433, 0.5686601996421814, 0.5765348076820374, 0.571298360824585, 0.5485877394676208, 0.5436264276504517, 0.5347688794136047, 0.5281776189804077, 0.5282323360443115, 0.5148487091064453, 0.5232203006744385, 0.5027874112129211, 0.4897938072681427, 0.482230007648468, 0.49440211057662964, 0.48862144351005554, 0.48320189118385315, 0.47898533940315247, 0.4731500446796417, 0.45077189803123474, 0.4633949100971222, 0.46525704860687256, 0.4369141459465027, 0.43445590138435364, 0.4496469795703888, 0.44662296772003174, 0.43479061126708984, 0.4374838173389435, 0.43403685092926025, 0.41301798820495605, 0.42164483666419983, 0.41444432735443115, 0.402554452419281, 0.4125588536262512, 0.4115148186683655, 0.4005483388900757, 0.4001415967941284, 0.3977416157722473, 0.3936341404914856, 0.393647164106369, 0.38978391885757446], "accuracy": [0.25624093413352966, 0.4916127324104309, 0.5880332589149475, 0.6543388962745667, 0.6695284843444824, 0.700171709060669, 0.7004358768463135, 0.7251353859901428, 0.7239466309547424, 0.7342491149902344, 0.748249888420105, 0.7453441023826599, 0.7489103078842163, 0.7597411274909973, 0.7703077793121338, 0.7736098170280457, 0.7783648371696472, 0.7816668748855591, 0.7922335267066956, 0.785101056098938, 0.7857614755630493, 0.7979130744934082, 0.7968564033508301, 0.8034605979919434, 0.8050455451011658, 0.8004226684570312, 0.8136309385299683, 0.8080834746360779, 0.8161405324935913, 0.8206313848495483, 0.8215559124946594, 0.8182538747787476, 0.8210275769233704, 0.8240655064582825, 0.8256505131721497, 0.8257825970649719, 0.8322546482086182, 0.8235371708869934, 0.8310658931732178, 0.8418967127799988, 0.8416325449943542, 0.8367455005645752, 0.8355567455291748, 0.843481719493866, 0.8412362933158875, 0.8432175517082214, 0.8495575189590454, 0.8462554216384888, 0.8490291833877563, 0.8536521196365356, 0.8450667262077332, 0.847840428352356, 0.8508783578872681, 0.8561616539955139, 0.8565579056739807, 0.8548408150672913, 0.8552370667457581, 0.8574824929237366], "val_loss": [1.9188228845596313, 1.1279990673065186, 0.932751476764679, 0.7543584108352661, 0.7365261912345886, 0.7021880149841309, 0.7161655426025391, 0.6972656846046448, 0.6412006616592407, 0.620729923248291, 0.5850209593772888, 0.562481701374054, 0.6061135530471802, 0.5556360483169556, 0.5631125569343567, 0.5253730416297913, 0.5235868692398071, 0.5368576049804688, 0.5185831785202026, 0.5167898535728455, 0.4939602315425873, 0.49781110882759094, 0.48741158843040466, 0.5079939961433411, 0.4749336838722229, 0.4631483256816864, 0.4723990559577942, 0.4635257422924042, 0.4647277891635895, 0.46398869156837463, 0.4457455277442932, 0.44677838683128357, 0.4427339732646942, 0.45396003127098083, 0.4409390985965729, 0.42517635226249695, 0.4364453852176666, 0.43329182267189026, 0.4220629036426544, 0.41827651858329773, 0.422853022813797, 0.4470047950744629, 0.4312075674533844, 0.4175105690956116, 0.43629157543182373, 0.4068637788295746, 0.39484652876853943, 0.41550204157829285, 0.4029436707496643, 0.3914438784122467, 0.42009636759757996, 0.39390575885772705, 0.38502126932144165, 0.39233431220054626, 0.4228609502315521, 0.40097713470458984, 0.3976033627986908, 0.3984741270542145], "val_accuracy": [0.5696666836738586, 0.6363333463668823, 0.6460000276565552, 0.7303333282470703, 0.7129999995231628, 0.7239999771118164, 0.7386666536331177, 0.7170000076293945, 0.762333333492279, 0.7680000066757202, 0.7596666812896729, 0.7739999890327454, 0.7596666812896729, 0.7863333225250244, 0.7636666893959045, 0.8013333082199097, 0.7943333387374878, 0.7933333516120911, 0.8019999861717224, 0.7993333339691162, 0.8083333373069763, 0.7933333516120911, 0.8056666851043701, 0.7973333597183228, 0.8166666626930237, 0.8186666369438171, 0.8113333582878113, 0.8143333196640015, 0.8166666626930237, 0.8213333487510681, 0.8263333439826965, 0.8263333439826965, 0.8266666531562805, 0.8209999799728394, 0.8343333601951599, 0.8360000252723694, 0.8309999704360962, 0.8299999833106995, 0.8349999785423279, 0.8429999947547913, 0.8383333086967468, 0.8289999961853027, 0.831333339214325, 0.843666672706604, 0.8373333215713501, 0.843999981880188, 0.8500000238418579, 0.8429999947547913, 0.8493333458900452, 0.8526666760444641, 0.8433333039283752, 0.8550000190734863, 0.8579999804496765, 0.8500000238418579, 0.8373333215713501, 0.847000002861023, 0.846666693687439, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 0, 5], [0, 2, 1, 2, 3], [0, 3, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 7, 6, 0], [0, 22], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 11, 6, 5, 2, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 94, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 7, 1, 3, 8, 2], [2, 3, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 5, 0, 2, 5, 2, 1], [4, 6, 1, 6, 0], [56, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 0, 11, 7, 4, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 6, 5, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0, 4], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 5, 6, 7], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 13, 7, 6, 2, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 3, 3, 2, 4, 1], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8.545961380004883, 60401244.0, 1047846392430592.0, 1.97147302969959e+22, NaN, NaN], "accuracy": [0.10091137140989304, 0.10196803510189056, 0.10011887550354004, 0.1002509593963623, 0.09879804402589798, 0.09998679161071777], "val_loss": [273.82763671875, 3934299904.0, 6.603799550912102e+16, 1.793693371358745e+24, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09266666322946548, 0.0976666659116745, 0.0976666659116745]}}]