[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134671211242676, 1.6188912391662598, 1.1682333946228027, 0.9787992835044861, 0.8762130737304688, 0.8412721753120422, 0.8140362501144409, 0.7519533038139343, 0.7365739941596985, 0.7130790948867798, 0.6995294690132141, 0.6598197817802429, 0.659053385257721, 0.6643668413162231, 0.6353116631507874, 0.6236130595207214, 0.6085476279258728, 0.6092466115951538, 0.6009515523910522, 0.5707265138626099, 0.5654731392860413, 0.5671126842498779, 0.5534784197807312, 0.545200526714325, 0.565083384513855, 0.5324474573135376, 0.5313300490379333, 0.5199886560440063, 0.5126873850822449, 0.4987392723560333, 0.5005797147750854, 0.49619054794311523, 0.4898585379123688, 0.49735888838768005, 0.4707476496696472, 0.4707801043987274, 0.4792691171169281, 0.46223577857017517, 0.4608812928199768, 0.461501806974411, 0.4550791382789612, 0.45488205552101135, 0.4438401460647583, 0.43555814027786255, 0.4313097596168518, 0.43490517139434814, 0.43415865302085876, 0.43088042736053467, 0.41765540838241577, 0.41726648807525635], "accuracy": [0.2583542466163635, 0.49993395805358887, 0.5976753234863281, 0.6535464525222778, 0.6923788189888, 0.6952846646308899, 0.7008321285247803, 0.7195879220962524, 0.7305507659912109, 0.7364945411682129, 0.735569953918457, 0.7547219395637512, 0.7578919529914856, 0.7536653280258179, 0.7584202885627747, 0.7650244235992432, 0.7736098170280457, 0.767930269241333, 0.7721568942070007, 0.7885351777076721, 0.7897239327430725, 0.7881389260292053, 0.7959318161010742, 0.7971205711364746, 0.7886672616004944, 0.8004226684570312, 0.8017435073852539, 0.8086118102073669, 0.8082155585289001, 0.8182538747787476, 0.8117818236351013, 0.8202351331710815, 0.8185180425643921, 0.8129705190658569, 0.8182538747787476, 0.8239334225654602, 0.8212917447090149, 0.8310658931732178, 0.8335754871368408, 0.8285563588142395, 0.8296129703521729, 0.8289526104927063, 0.8380662798881531, 0.8421608805656433, 0.8430854678153992, 0.8436138033866882, 0.8366134166717529, 0.8432175517082214, 0.8454629778862, 0.8437458872795105], "val_loss": [1.9265198707580566, 1.1332205533981323, 0.8648799061775208, 0.7723639607429504, 0.7492506504058838, 0.7577378153800964, 0.6582714319229126, 0.6123123168945312, 0.5989484190940857, 0.5653815269470215, 0.56988126039505, 0.5509026646614075, 0.5508593916893005, 0.5285961031913757, 0.5341199636459351, 0.5033364295959473, 0.5077347755432129, 0.5057003498077393, 0.4940372705459595, 0.4913838803768158, 0.4837636351585388, 0.47732335329055786, 0.4870144724845886, 0.46020010113716125, 0.45475977659225464, 0.46034741401672363, 0.4528365433216095, 0.4391835629940033, 0.4454168975353241, 0.4405284821987152, 0.4460647702217102, 0.4278630018234253, 0.4287986159324646, 0.4283938705921173, 0.44595980644226074, 0.4403451383113861, 0.43213626742362976, 0.4105587601661682, 0.4291718602180481, 0.41879284381866455, 0.41101109981536865, 0.4094502627849579, 0.40233227610588074, 0.3999916911125183, 0.3986697196960449, 0.3978133201599121, 0.3970223665237427, 0.3997880816459656, 0.4000806212425232, 0.3924277424812317], "val_accuracy": [0.5586666464805603, 0.6226666569709778, 0.6936666369438171, 0.734000027179718, 0.7176666855812073, 0.7066666483879089, 0.7540000081062317, 0.7596666812896729, 0.7753333449363708, 0.7876666784286499, 0.7886666655540466, 0.793666660785675, 0.7960000038146973, 0.8056666851043701, 0.7976666688919067, 0.812333345413208, 0.8090000152587891, 0.8050000071525574, 0.8100000023841858, 0.8230000138282776, 0.812333345413208, 0.8233333230018616, 0.8106666803359985, 0.8346666693687439, 0.8333333134651184, 0.8259999752044678, 0.8306666612625122, 0.8389999866485596, 0.8386666774749756, 0.8393333554267883, 0.8323333263397217, 0.8403333425521851, 0.8389999866485596, 0.8336666822433472, 0.8293333053588867, 0.8336666822433472, 0.8443333506584167, 0.8506666421890259, 0.8339999914169312, 0.8460000157356262, 0.8429999947547913, 0.8536666631698608, 0.8496666550636292, 0.8526666760444641, 0.8579999804496765, 0.847000002861023, 0.8506666421890259, 0.8510000109672546, 0.846666693687439, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8208571672439575, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211948871612549, 1.608555555343628, 1.1745667457580566, 0.9994048476219177, 0.8887008428573608, 0.8575907945632935, 0.780694842338562, 0.7550736665725708, 0.7282708287239075, 0.711826741695404, 0.684295654296875, 0.684205949306488, 0.6469229459762573, 0.6501641273498535, 0.6013649106025696, 0.631161630153656, 0.5944397449493408, 0.6068965196609497, 0.5803784728050232, 0.563416600227356, 0.5625646114349365, 0.5663694739341736, 0.5473238229751587, 0.5281331539154053, 0.5333908200263977, 0.5391793251037598, 0.5120297074317932, 0.5018091201782227, 0.5122548937797546, 0.49928373098373413, 0.49485933780670166, 0.4949890673160553, 0.48104721307754517, 0.4623837172985077, 0.4709663987159729, 0.4658556282520294, 0.4728304147720337, 0.4506753385066986, 0.4482346773147583, 0.443698525428772, 0.4414287805557251, 0.43021324276924133, 0.44764530658721924, 0.43023911118507385, 0.43584659695625305, 0.4241460859775543, 0.4257200062274933, 0.4200635254383087, 0.41809332370758057, 0.41734644770622253, 0.39319467544555664, 0.4070146381855011, 0.4045124053955078, 0.40098175406455994, 0.3925647735595703], "accuracy": [0.2615242302417755, 0.5090476870536804, 0.5886936783790588, 0.6370360851287842, 0.6781138777732849, 0.6831330060958862, 0.7170783281326294, 0.7153612375259399, 0.7276449799537659, 0.735569953918457, 0.7428345084190369, 0.7456082701683044, 0.7625148296356201, 0.7585523724555969, 0.7795535326004028, 0.7625148296356201, 0.7804781198501587, 0.7703077793121338, 0.7864218950271606, 0.7915731072425842, 0.7944789528846741, 0.793950617313385, 0.7994980812072754, 0.8096684813499451, 0.8086118102073669, 0.8021397590637207, 0.8142913579940796, 0.8171972036361694, 0.8123101592063904, 0.8178576231002808, 0.8220842480659485, 0.8211596608161926, 0.8253863453865051, 0.8318583965301514, 0.8244617581367493, 0.8304054737091064, 0.8280280232429504, 0.839519202709198, 0.837537944316864, 0.8381983637809753, 0.8428213000297546, 0.8450667262077332, 0.8334434032440186, 0.8444063067436218, 0.8413683772087097, 0.8474441766738892, 0.8481045961380005, 0.8488970994949341, 0.8471800088882446, 0.843481719493866, 0.8557654023170471, 0.8490291833877563, 0.8555012345314026, 0.852331280708313, 0.8578787446022034], "val_loss": [1.922284722328186, 1.1636854410171509, 0.8619385361671448, 0.7709320187568665, 0.7233761548995972, 0.687046229839325, 0.6458809971809387, 0.6560791730880737, 0.6053427457809448, 0.6057509779930115, 0.6133347153663635, 0.5771836042404175, 0.5542553067207336, 0.5497956275939941, 0.5445171594619751, 0.5095804333686829, 0.5165975093841553, 0.4893045723438263, 0.4978281557559967, 0.5131784081459045, 0.4866681694984436, 0.47693559527397156, 0.4654902219772339, 0.46253809332847595, 0.45026856660842896, 0.44751590490341187, 0.4413692355155945, 0.44526514410972595, 0.4496952295303345, 0.43808284401893616, 0.4476386606693268, 0.41963037848472595, 0.42667195200920105, 0.42667797207832336, 0.4158428907394409, 0.4093846380710602, 0.4045247435569763, 0.41593697667121887, 0.4262687861919403, 0.3980042040348053, 0.4131878614425659, 0.3968154191970825, 0.41221386194229126, 0.40223461389541626, 0.399126797914505, 0.3973245322704315, 0.3792646527290344, 0.38680270314216614, 0.3902435004711151, 0.3790358901023865, 0.3844223916530609, 0.37477922439575195, 0.3865193724632263, 0.37016040086746216, 0.38818424940109253], "val_accuracy": [0.5559999942779541, 0.6053333282470703, 0.690666675567627, 0.718999981880188, 0.7306666374206543, 0.7493333220481873, 0.7613333463668823, 0.7476666569709778, 0.7649999856948853, 0.7670000195503235, 0.7490000128746033, 0.781000018119812, 0.777999997138977, 0.7873333096504211, 0.7953333258628845, 0.812333345413208, 0.8090000152587891, 0.8206666707992554, 0.8130000233650208, 0.7990000247955322, 0.8149999976158142, 0.8163333535194397, 0.8343333601951599, 0.8253333568572998, 0.8339999914169312, 0.8299999833106995, 0.8363333344459534, 0.8366666436195374, 0.8289999961853027, 0.8316666483879089, 0.8263333439826965, 0.8500000238418579, 0.8403333425521851, 0.8423333168029785, 0.8410000205039978, 0.8443333506584167, 0.8523333072662354, 0.847000002861023, 0.8426666855812073, 0.8513333201408386, 0.8513333201408386, 0.8553333282470703, 0.8489999771118164, 0.8576666712760925, 0.8546666502952576, 0.8569999933242798, 0.8619999885559082, 0.8533333539962769, 0.859666645526886, 0.8653333187103271, 0.8550000190734863, 0.8613333106040955, 0.8566666841506958, 0.859000027179718, 0.8556666374206543]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [8, 2, 3, 1, 3, 5, 4], [1, 1, 1, 1, 2, 2], [90, 62, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 6, 2, 7, 6, 8, 4, 4, 8, 7, 9, 1, 2, 1, 2, 4, 1, 6, 3, 8, 6, 8, 0, 1, 8, 2, 1, 7, 6, 4, 0, 1, 1, 9, 7, 0, 4, 1, 6, 9, 5, 7, 3, 4, 1, 5, 6, 4, 0, 7, 9, 1, 8], [2, 0, 3, 1, 0, 0, 5, 3, 1, 5, 1, 2, 0, 0, 5, 0, 3, 4, 4, 4, 0, 4, 2, 5, 0, 1, 0, 5, 1, 5, 5, 5, 0, 4, 1, 4, 2], [16, 1, 52, 67, 87, 95, 45, 46, 17, 34, 29, 92, 2, 94], [0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 2, 5], [0, 6, 1], [13], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 7, 6, 1, 1], [2, 6, 2, 6, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 0, 96, 59, 37, 14, 7, 4, 3, 1, 11, 6, 5, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, alpha), alpha), tf.math.multiply(alpha, tf.math.square(tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.pow(grad, tf.math.subtract(alpha, tf.math.divide_no_nan(grad, tf.math.multiply(alpha, beta))))), tf.math.sqrt(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)))), grad), tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(grad, grad), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.negative(tf.math.subtract(beta, tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))))))), tf.math.add(tf.math.multiply(grad, tf.math.pow(grad, tf.math.subtract(tf.math.square(grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.negative(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, grad))), tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, grad), tf.math.subtract(beta, tf.math.subtract(grad, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 3], [2, 0, 3, 1, 0, 5], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 14, 8, 6, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 5, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 7, 2, 2], [0, 6, 6, 4, 3], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 10, 5, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(grad, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104610443115234, 2.3104727268218994, 2.309335708618164, 2.310576915740967, 2.311260223388672, 2.3099873065948486], "accuracy": [0.09338264167308807, 0.08955223858356476, 0.09021265059709549, 0.0940430611371994, 0.09074098616838455, 0.08902391046285629], "val_loss": [2.3085851669311523, 2.3085851669311523, 2.3085851669311523, 2.3085851669311523, 2.3085851669311523, 2.3085851669311523], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [81, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 5, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.08714285492897034, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3112194538116455, 2.310288429260254, 2.310323715209961, 2.310225009918213, 2.3105342388153076, 2.3100197315216064], "accuracy": [0.09166556596755981, 0.09417514503002167, 0.09113723784685135, 0.08889182657003403, 0.09338264167308807, 0.0940430611371994], "val_loss": [2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]