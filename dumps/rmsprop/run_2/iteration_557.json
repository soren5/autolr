[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8137142658233643, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2059249877929688, 1.609369158744812, 1.1449121236801147, 0.9671664237976074, 0.8959073424339294, 0.822550356388092, 0.7578436732292175, 0.7729028463363647, 0.7190795540809631, 0.7122639417648315, 0.6790253520011902, 0.6576942801475525, 0.6440160274505615, 0.6277450919151306, 0.6247286200523376, 0.6037132143974304, 0.5905932188034058, 0.5871468782424927, 0.5655451416969299, 0.5630207657814026, 0.5635221600532532, 0.5534349679946899, 0.5558624267578125, 0.5238485336303711, 0.5371692776679993, 0.539332926273346, 0.5081576108932495, 0.5346679091453552, 0.5055950880050659, 0.5002793669700623, 0.49011075496673584], "accuracy": [0.2748646140098572, 0.4979526996612549, 0.6040153503417969, 0.6553955674171448, 0.6736230254173279, 0.7047945857048035, 0.7252674698829651, 0.7136441469192505, 0.7326641082763672, 0.7306828498840332, 0.7503632307052612, 0.7559106945991516, 0.7614582180976868, 0.7664773464202881, 0.7703077793121338, 0.7763835787773132, 0.7854973077774048, 0.7817989587783813, 0.7931581139564514, 0.7930260300636292, 0.7880068421363831, 0.7911768555641174, 0.7909126877784729, 0.8067626357078552, 0.8038568496704102, 0.7994980812072754, 0.809140145778656, 0.8031964302062988, 0.8210275769233704, 0.8109893202781677, 0.8210275769233704], "val_loss": [1.9160254001617432, 1.1366914510726929, 0.9092179536819458, 0.8216933608055115, 0.778221845626831, 0.7044220566749573, 0.6810524463653564, 0.6930403709411621, 0.6887744665145874, 0.651799201965332, 0.625518262386322, 0.6004547476768494, 0.6379052996635437, 0.5819522142410278, 0.5663787722587585, 0.5798971056938171, 0.5466352701187134, 0.5491845607757568, 0.5348556041717529, 0.5792100429534912, 0.5199424624443054, 0.5200905203819275, 0.524802565574646, 0.5500528216362, 0.5238224864006042, 0.4989800751209259, 0.5162415504455566, 0.5095435976982117, 0.49098196625709534, 0.5106099247932434, 0.48412254452705383], "val_accuracy": [0.49566665291786194, 0.6163333058357239, 0.6896666884422302, 0.687333345413208, 0.70333331823349, 0.7326666712760925, 0.746999979019165, 0.746666669845581, 0.7233333587646484, 0.7393333315849304, 0.7743333578109741, 0.7756666541099548, 0.7429999709129333, 0.7946666479110718, 0.7960000038146973, 0.7836666703224182, 0.79666668176651, 0.793666660785675, 0.8056666851043701, 0.7776666879653931, 0.8166666626930237, 0.8090000152587891, 0.8029999732971191, 0.796999990940094, 0.8130000233650208, 0.8240000009536743, 0.8130000233650208, 0.8149999976158142, 0.8236666917800903, 0.8029999732971191, 0.8203333616256714]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 4], [0, 2, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 8, 7, 2], [0, 0, 3, 1, 0], [13, 66], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 6, 0, 2, 5, 1, 5], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.12399999797344208, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 2, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.subtract(grad, alpha)), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.8923389673819585e+28, 1.2130363185170464e+30, 8.838600529375088e+30, 3.5739251562916473e+31, 9.53623704459625e+31, 2.1905047247270228e+32], "accuracy": [0.11438383162021637, 0.10870426893234253, 0.11530841141939163, 0.11055342853069305, 0.1080438494682312, 0.10857218503952026], "val_loss": [1.894958165680551e+29, 3.031935180709066e+30, 1.5349172607918285e+31, 4.85109532199385e+31, 1.1843492281284539e+32, 2.455865682985614e+32], "val_accuracy": [0.12700000405311584, 0.12700000405311584, 0.12700000405311584, 0.12700000405311584, 0.12700000405311584, 0.12700000405311584]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 5, 2, 3, 1], [0, 2, 1, 0, 2], [98, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 6, 5, 2, 7, 4, 2, 9], [0, 0, 1, 6, 0, 6], [0, 22, 30, 29], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 10, 6, 4, 1, 16, 10, 6, 4, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [9.046893621568665e+23, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.595116726386274e+27, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 8, 2, 3, 5], [0, 1, 1, 0, 2], [17, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [0, 0, 3, 5, 0], [10, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 4, 2, 1], [0, 6, 1, 6, 0], [0, 49], [1], [0], [3], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3089072704315186, 2.310556173324585, 2.311660051345825, 2.309713125228882, 2.310053825378418, 2.3103203773498535], "accuracy": [0.09153348207473755, 0.0940430611371994, 0.09047681838274002, 0.09470347315073013, 0.08809932321310043, 0.09021265059709549], "val_loss": [2.3081400394439697, 2.3081400394439697, 2.3081400394439697, 2.3081400394439697, 2.3081400394439697, 2.3081400394439697], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [8, 9, 0, 2, 5, 8, 1], [0, 6, 3, 6, 0], [0, 22], [0, 0], [0, 9], [2], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 2, 1, 1, 1, 7, 5, 2, 2, 1, 0, 1, 1, 2, 2, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309220314025879, 2.3093793392181396, 2.310577154159546, 2.311081647872925, 2.309213638305664, 2.3095645904541016], "accuracy": [0.09060890227556229, 0.09192973375320435, 0.08545766770839691, 0.08717474341392517, 0.09206181764602661, 0.09417514503002167], "val_loss": [2.3086233139038086, 2.3086233139038086, 2.3086233139038086, 2.3086233139038086, 2.3086233139038086, 2.3086233139038086], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]