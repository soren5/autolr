[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2132699489593506, 1.61750066280365, 1.1537877321243286, 0.9674952030181885, 0.9151870012283325, 0.8258528113365173, 0.7771414518356323, 0.7806098461151123, 0.7328288555145264, 0.7063252925872803, 0.7028692364692688, 0.659557580947876, 0.6704760193824768, 0.6549475789070129, 0.62761390209198, 0.5977244973182678, 0.6152456998825073, 0.6004577875137329, 0.5854572653770447, 0.5771824717521667, 0.5591742992401123, 0.547690212726593, 0.5619933605194092, 0.5372805595397949, 0.5230225324630737, 0.5504189133644104, 0.5179733633995056, 0.5176839232444763, 0.5151305794715881, 0.49989622831344604, 0.5033817291259766, 0.49185922741889954], "accuracy": [0.26680755615234375, 0.49953770637512207, 0.59661865234375, 0.6515651941299438, 0.6662263870239258, 0.6930392384529114, 0.7145687341690063, 0.7124554514884949, 0.7293620109558105, 0.7338528633117676, 0.7372870445251465, 0.7540615797042847, 0.7497028112411499, 0.7506273984909058, 0.7630431652069092, 0.7757231593132019, 0.7713643908500671, 0.7770439982414246, 0.778232753276825, 0.7862898111343384, 0.7969884872436523, 0.7961959838867188, 0.7869502305984497, 0.7991018295288086, 0.8024039268493652, 0.7876105904579163, 0.8078193068504333, 0.8099326491355896, 0.8109893202781677, 0.817989706993103, 0.8142913579940796, 0.8153480291366577], "val_loss": [1.9294421672821045, 1.0992506742477417, 0.8983187079429626, 0.7506892681121826, 0.831693708896637, 0.6738523244857788, 0.6528223156929016, 0.6256723403930664, 0.6123870015144348, 0.6089157462120056, 0.5919700264930725, 0.5870181322097778, 0.5514652729034424, 0.5738543272018433, 0.5458092093467712, 0.5387083292007446, 0.5209072232246399, 0.5335097312927246, 0.5196248292922974, 0.49931204319000244, 0.4953576624393463, 0.5016512870788574, 0.48258712887763977, 0.4790283739566803, 0.4793843626976013, 0.4762614071369171, 0.4551926255226135, 0.4768635928630829, 0.4638182818889618, 0.47591114044189453, 0.45926228165626526, 0.4504009485244751], "val_accuracy": [0.5339999794960022, 0.6536666750907898, 0.6803333163261414, 0.7319999933242798, 0.6913333535194397, 0.7463333606719971, 0.7446666955947876, 0.7613333463668823, 0.7570000290870667, 0.7543333172798157, 0.7706666588783264, 0.7856666445732117, 0.7993333339691162, 0.7929999828338623, 0.7910000085830688, 0.7963333129882812, 0.8143333196640015, 0.7990000247955322, 0.8063333630561829, 0.8166666626930237, 0.815666675567627, 0.8090000152587891, 0.8203333616256714, 0.8173333406448364, 0.8176666498184204, 0.8213333487510681, 0.8356666564941406, 0.8149999976158142, 0.8349999785423279, 0.8169999718666077, 0.8243333101272583, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 5, 5], [3, 3, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [7], [0]], "fitness": -0.3942857086658478, "mapping_values": [1, 6, 3, 3, 0, 5, 3, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4308507442474365, 3.6571741104125977, 2.2990589141845703, 2.168996572494507, 2.0753962993621826, 2.3198494911193848, 2.304701328277588, 2.232640266418457, 2.2444241046905518, 2.175156593322754, 2.306710720062256, 2.303602933883667, 2.3035266399383545], "accuracy": [0.186104878783226, 0.21595561504364014, 0.11491216719150543, 0.18835029006004333, 0.3031303584575653, 0.09985470771789551, 0.10553427785634995, 0.16919825971126556, 0.1806894689798355, 0.2657508850097656, 0.09853387624025345, 0.10038304328918457, 0.10130762308835983], "val_loss": [2.267535924911499, 2.3094863891601562, 2.2227132320404053, 2.018995761871338, 2.3356523513793945, 2.307465076446533, 2.2959320545196533, 1.8334017992019653, 1.8494371175765991, 2.3097503185272217, 2.303335189819336, 2.302597999572754, 2.3030951023101807], "val_accuracy": [0.25200000405311584, 0.10133333504199982, 0.09833333641290665, 0.320333331823349, 0.10199999809265137, 0.10100000351667404, 0.14499999582767487, 0.39366665482521057, 0.3916666805744171, 0.10166666656732559, 0.09933333098888397, 0.10133333504199982, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [7], [0]], "fitness": -0.21314285695552826, "mapping_values": [1, 7, 3, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3019185066223145, 2.439664125442505, 2.304511070251465, 2.3036484718322754, 2.302849292755127, 2.3013176918029785], "accuracy": [0.1982565075159073, 0.14159291982650757, 0.09774138033390045, 0.09787346422672272, 0.09813763201236725, 0.11042134463787079], "val_loss": [2.2275547981262207, 2.3052022457122803, 2.3031105995178223, 2.3024375438690186, 2.3021113872528076, 2.2949252128601074], "val_accuracy": [0.21433334052562714, 0.10133333504199982, 0.10133333504199982, 0.10199999809265137, 0.11233333498239517, 0.19633333384990692]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 2, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 2, 0, 6, 0, 8, 2, 8, 0, 8, 9], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 14, 11, 3, 2, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.negative(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 2, 8, 2, 3, 5], [0, 2, 1, 0, 2], [0, 7, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 2, 2, 1], [0, 6, 1, 6, 0, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309677839279175, 2.3104264736175537, 2.310115098953247, 2.3100645542144775, 2.309738874435425, 2.3108325004577637], "accuracy": [0.09615638852119446, 0.09074098616838455, 0.09060890227556229, 0.09589222073554993, 0.08875974267721176, 0.09153348207473755], "val_loss": [2.308563470840454, 2.308563470840454, 2.308563470840454, 2.308563470840454, 2.308563470840454, 2.308563470840454], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]