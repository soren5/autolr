[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8054285645484924, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2116336822509766, 1.6088515520095825, 1.1413520574569702, 0.9931170344352722, 0.9021888375282288, 0.845571756362915, 0.7953718304634094, 0.7527908682823181, 0.7750847935676575, 0.7272682189941406, 0.689232349395752, 0.6606165766716003, 0.6480284929275513, 0.6445396542549133, 0.6227467656135559, 0.6192100048065186, 0.6123446822166443, 0.5924825668334961, 0.5989705920219421, 0.5752490758895874, 0.5692453980445862, 0.5627614855766296, 0.5405399799346924, 0.5416921377182007, 0.5259512662887573, 0.5186983942985535, 0.5125486254692078, 0.49924421310424805, 0.5107800960540771, 0.4948585629463196, 0.4848082363605499, 0.48106154799461365, 0.47538822889328003, 0.4779101610183716, 0.45976924896240234, 0.4597392976284027, 0.45073065161705017, 0.46517840027809143, 0.4512607455253601, 0.44049888849258423, 0.44569918513298035, 0.437239408493042, 0.43238770961761475, 0.4279443025588989, 0.42216917872428894, 0.41806507110595703, 0.41624516248703003], "accuracy": [0.26178839802742004, 0.5005943775177002, 0.6073173880577087, 0.6503764390945435, 0.67666095495224, 0.6977941989898682, 0.7094175219535828, 0.7238145470619202, 0.717870831489563, 0.7314753532409668, 0.7504953145980835, 0.7563069462776184, 0.7586844563484192, 0.7598732113838196, 0.7783648371696472, 0.7695152759552002, 0.7738739848136902, 0.7840443849563599, 0.7777044177055359, 0.7938185334205627, 0.7869502305984497, 0.7951393723487854, 0.8034605979919434, 0.8005547523498535, 0.8107251524925232, 0.8101968169212341, 0.8104609847068787, 0.8201030492782593, 0.8115176558494568, 0.817989706993103, 0.8257825970649719, 0.8260467648506165, 0.8264430165290833, 0.8236692547798157, 0.8363492488861084, 0.8339717388153076, 0.8374059200286865, 0.8300092220306396, 0.8378021121025085, 0.8426892161369324, 0.8401796221733093, 0.8471800088882446, 0.8466516733169556, 0.8432175517082214, 0.8479725122451782, 0.8444063067436218, 0.8529917001724243], "val_loss": [1.9236243963241577, 1.1073952913284302, 0.9043329358100891, 0.8045085668563843, 0.7664437890052795, 0.7165711522102356, 0.6635795831680298, 0.6619182229042053, 0.6383767127990723, 0.6127622723579407, 0.6280867457389832, 0.6093513369560242, 0.5864859819412231, 0.574744701385498, 0.561785101890564, 0.5667606592178345, 0.5475659370422363, 0.5563803911209106, 0.538176953792572, 0.5489411354064941, 0.546546220779419, 0.5081439018249512, 0.5486160516738892, 0.5047898888587952, 0.5058937668800354, 0.5100275278091431, 0.48319539427757263, 0.5518354773521423, 0.48301008343696594, 0.4780518114566803, 0.4647485315799713, 0.4807409346103668, 0.5049329996109009, 0.46485474705696106, 0.4615860879421234, 0.453059583902359, 0.4613754153251648, 0.45617061853408813, 0.4510980546474457, 0.4828556180000305, 0.4491041600704193, 0.43187299370765686, 0.43767639994621277, 0.45491358637809753, 0.43246179819107056, 0.43276265263557434, 0.4288548529148102], "val_accuracy": [0.5383333563804626, 0.6620000004768372, 0.6783333420753479, 0.7009999752044678, 0.7086666822433472, 0.7196666598320007, 0.7513333559036255, 0.7593333125114441, 0.7649999856948853, 0.7666666507720947, 0.7596666812896729, 0.7696666717529297, 0.7763333320617676, 0.7806666493415833, 0.7923333048820496, 0.7786666750907898, 0.7953333258628845, 0.7846666574478149, 0.7963333129882812, 0.7943333387374878, 0.7940000295639038, 0.812666654586792, 0.7786666750907898, 0.8113333582878113, 0.809333324432373, 0.8043333292007446, 0.8186666369438171, 0.7873333096504211, 0.8226666450500488, 0.8246666789054871, 0.8270000219345093, 0.8196666836738586, 0.8163333535194397, 0.8296666741371155, 0.8296666741371155, 0.831333339214325, 0.8336666822433472, 0.8353333473205566, 0.8346666693687439, 0.8196666836738586, 0.8339999914169312, 0.8433333039283752, 0.8373333215713501, 0.8316666483879089, 0.8423333168029785, 0.8433333039283752, 0.8426666855812073]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 9, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 6, 2, 5, 2, 1, 3, 8], [0, 7, 1, 3, 0, 3, 5], [0, 22], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(tf.math.multiply(grad, alpha), sigma), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma)), grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 2, 0, 2, 3, 8, 2], [3, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 1, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 0, 7, 4, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(grad), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309648275375366, 2.3126235008239746, 2.3176193237304688, 2.3291826248168945, 2.37732195854187, 2.5090768337249756, 2.7506885528564453], "accuracy": [0.09021265059709549, 0.0940430611371994, 0.09509972482919693, 0.09998679161071777, 0.10117553919553757, 0.10091137140989304, 0.10077928751707077], "val_loss": [2.308962821960449, 2.3096230030059814, 2.3119373321533203, 2.32523775100708, 2.363528251647949, 2.4555208683013916, 2.6618525981903076], "val_accuracy": [0.09566666930913925, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 7, 5], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6], [2, 0, 3, 1, 0, 4], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 7, 4, 5, 2, 7, 9, 3, 0, 7, 2, 5, 9, 8, 8], [0, 6, 1, 6, 0, 4, 2], [0, 22, 46, 96], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 14, 8, 6, 2, 23, 16, 7, 4, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(beta))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 2, 1, 2, 2], [73, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309580087661743, 2.3088929653167725, 2.3102684020996094, 2.309471607208252, 2.309847831726074, 2.3096070289611816], "accuracy": [0.08691058307886124, 0.09470347315073013, 0.0936468094587326, 0.09615638852119446, 0.0886276587843895, 0.09325055778026581], "val_loss": [2.308624267578125, 2.308624267578125, 2.308624267578125, 2.308624267578125, 2.308624267578125, 2.308624267578125], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]