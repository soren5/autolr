[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8208571672439575, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2072887420654297, 1.601902723312378, 1.1520946025848389, 0.9783411026000977, 0.8968688249588013, 0.8455262780189514, 0.7784690260887146, 0.7558475136756897, 0.7478612661361694, 0.6864847540855408, 0.705094039440155, 0.6583817005157471, 0.6607218384742737, 0.6396790146827698, 0.6318650841712952, 0.610497236251831, 0.6210217475891113, 0.6033769845962524, 0.5778216123580933, 0.5627943277359009, 0.5698279142379761, 0.5607801079750061, 0.5391026139259338, 0.5453240275382996, 0.5339171290397644, 0.5329973697662354, 0.5207253098487854, 0.5054262280464172, 0.5032685399055481, 0.5016387701034546, 0.4935368597507477, 0.48276954889297485, 0.4930766522884369, 0.4744323790073395, 0.45574426651000977, 0.4697742760181427, 0.47543081641197205, 0.46072331070899963, 0.4520609378814697, 0.4421837031841278, 0.4378243386745453, 0.4399261772632599, 0.43227964639663696, 0.43750283122062683, 0.43658211827278137, 0.4214547276496887, 0.41614577174186707, 0.41023895144462585, 0.4210016131401062, 0.4145604372024536, 0.4059666395187378], "accuracy": [0.2705058753490448, 0.5056135058403015, 0.5997886657714844, 0.6519614458084106, 0.6734909415245056, 0.698718786239624, 0.7168141603469849, 0.7213049530982971, 0.7256637215614319, 0.7489103078842163, 0.7436270117759705, 0.7627789974212646, 0.7602694630622864, 0.7675340175628662, 0.7668735980987549, 0.7794214487075806, 0.7720248103141785, 0.780610203742981, 0.7876105904579163, 0.7981772422790527, 0.7918372750282288, 0.7980451583862305, 0.8079513907432556, 0.8030643463134766, 0.8064984679222107, 0.8045172095298767, 0.8080834746360779, 0.8187822103500366, 0.8216879963874817, 0.8183859586715698, 0.8214238286018372, 0.8274996876716614, 0.8244617581367493, 0.8313300609588623, 0.8337075710296631, 0.8286884427070618, 0.8241975903511047, 0.8334434032440186, 0.8363492488861084, 0.8399154543876648, 0.8449346423149109, 0.8396512866020203, 0.8455950617790222, 0.8432175517082214, 0.8403117060661316, 0.8482366800308228, 0.845859169960022, 0.8544445633888245, 0.8524633646011353, 0.8532558679580688, 0.8488970994949341], "val_loss": [1.9163776636123657, 1.1131306886672974, 0.8837319612503052, 0.8266205787658691, 0.8718790411949158, 0.6819319128990173, 0.6758790612220764, 0.6419013738632202, 0.641692042350769, 0.6138838529586792, 0.5816624760627747, 0.5761926174163818, 0.5808665752410889, 0.5361436009407043, 0.5540191531181335, 0.5437315702438354, 0.5757520198822021, 0.5052322745323181, 0.4953552186489105, 0.5241453647613525, 0.4910842180252075, 0.4766906201839447, 0.48855236172676086, 0.49081388115882874, 0.4718201458454132, 0.466071218252182, 0.45599234104156494, 0.4493461549282074, 0.4469699561595917, 0.4587380290031433, 0.4430897533893585, 0.44116467237472534, 0.44660261273384094, 0.42761287093162537, 0.43802815675735474, 0.43713903427124023, 0.4309642016887665, 0.4200783669948578, 0.4246833920478821, 0.4206920862197876, 0.4094800353050232, 0.4392378032207489, 0.4030251204967499, 0.4074171483516693, 0.39828890562057495, 0.3942534923553467, 0.401019811630249, 0.4071234166622162, 0.40237513184547424, 0.40123334527015686, 0.3958788216114044], "val_accuracy": [0.5073333382606506, 0.6513333320617676, 0.690666675567627, 0.6943333148956299, 0.6943333148956299, 0.7440000176429749, 0.7403333187103271, 0.7333333492279053, 0.7570000290870667, 0.765999972820282, 0.7670000195503235, 0.7720000147819519, 0.7763333320617676, 0.7886666655540466, 0.7856666445732117, 0.7860000133514404, 0.7736666798591614, 0.8059999942779541, 0.8119999766349792, 0.7913333177566528, 0.8106666803359985, 0.8133333325386047, 0.8100000023841858, 0.8090000152587891, 0.8196666836738586, 0.8190000057220459, 0.8259999752044678, 0.82833331823349, 0.8316666483879089, 0.8256666660308838, 0.82833331823349, 0.8386666774749756, 0.8276666402816772, 0.8343333601951599, 0.8326666951179504, 0.8366666436195374, 0.8396666646003723, 0.8423333168029785, 0.8320000171661377, 0.8399999737739563, 0.8403333425521851, 0.8330000042915344, 0.8539999723434448, 0.8460000157356262, 0.843666672706604, 0.8556666374206543, 0.8496666550636292, 0.847000002861023, 0.8516666889190674, 0.8510000109672546, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [7, 6, 1, 6, 5], [0, 23], [1], [0], [7], [0]], "fitness": -0.4034285843372345, "mapping_values": [1, 6, 3, 3, 2, 4, 3, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.587796449661255, 2.2833104133605957, 2.284691095352173, 2.2278873920440674, 2.1544950008392334, 2.2525492854784e+16, NaN, NaN, NaN], "accuracy": [0.19270901381969452, 0.1320829540491104, 0.1472724825143814, 0.18280279636383057, 0.30141329765319824, 0.14291374385356903, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3031930923461914, 2.006368637084961, 2.2812907695770264, 1.6179908514022827, 2.073667526245117, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.2823333442211151, 0.10100000351667404, 0.41100001335144043, 0.37433332204818726, 0.10166666656732559, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 0, 0, 2], [0, 39, 8], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [23, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 3, 3], [0, 6, 0, 6, 0], [0, 29, 55], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 12, 7, 5, 3, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 2, 5], [0, 1, 1, 3, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 8, 0, 2, 1, 2, 5], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.741542339324951, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19059570133686066, 0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2143.767578125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 8, 4], [0, 0, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 0, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 14, 8, 6, 3, 9, 5, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088765144348145, 2.3081414699554443, 2.310732364654541, 2.308302402496338, 2.3107657432556152, 2.309954881668091], "accuracy": [0.09272222965955734, 0.09813763201236725, 0.09140139818191528, 0.09708096832036972, 0.08796724677085876, 0.09589222073554993], "val_loss": [2.3082170486450195, 2.3082170486450195, 2.3082170486450195, 2.3082170486450195, 2.3082170486450195, 2.3082170486450195], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]