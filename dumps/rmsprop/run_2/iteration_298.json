[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.806857168674469, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206599235534668, 1.5967124700546265, 1.1671967506408691, 0.9901148080825806, 0.8882741928100586, 0.8443366885185242, 0.7874695658683777, 0.7647033929824829, 0.7432387471199036, 0.719359278678894, 0.6840823292732239, 0.671538770198822, 0.6674083471298218, 0.660771369934082, 0.63826584815979, 0.6264373064041138, 0.6199040412902832, 0.6116434335708618, 0.5826597809791565, 0.5815343260765076, 0.5673169493675232, 0.5611764788627625, 0.5560186505317688, 0.5535892844200134, 0.5364827513694763], "accuracy": [0.2751287817955017, 0.5032360553741455, 0.5811649560928345, 0.6436402201652527, 0.6732267737388611, 0.6906617283821106, 0.7132478952407837, 0.7180029153823853, 0.7239466309547424, 0.7342491149902344, 0.7449478507041931, 0.7437590956687927, 0.7498348951339722, 0.7563069462776184, 0.7576277852058411, 0.7633073329925537, 0.7684586048126221, 0.7693831920623779, 0.7829877138137817, 0.783119797706604, 0.7873464822769165, 0.7911768555641174, 0.7890635132789612, 0.789988100528717, 0.7971205711364746], "val_loss": [1.905424952507019, 1.0714579820632935, 0.8852797746658325, 0.7611730098724365, 0.7297165393829346, 0.6957764625549316, 0.6573348045349121, 0.6271623373031616, 0.631126880645752, 0.6124641299247742, 0.5665949583053589, 0.5497969388961792, 0.5346576571464539, 0.5623241662979126, 0.5313031077384949, 0.5210068225860596, 0.5302665829658508, 0.5314191579818726, 0.5029428601264954, 0.5062306523323059, 0.5016667246818542, 0.4857458174228668, 0.5047413110733032, 0.48330745100975037, 0.4806758165359497], "val_accuracy": [0.6303333044052124, 0.6226666569709778, 0.6940000057220459, 0.7383333444595337, 0.7276666760444641, 0.7403333187103271, 0.7379999756813049, 0.7633333206176758, 0.7646666765213013, 0.7590000033378601, 0.7886666655540466, 0.7906666398048401, 0.8076666593551636, 0.7886666655540466, 0.7990000247955322, 0.809333324432373, 0.7876666784286499, 0.8106666803359985, 0.809333324432373, 0.8226666450500488, 0.8063333630561829, 0.812333345413208, 0.8090000152587891, 0.8159999847412109, 0.8180000185966492]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [18, 17, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 3, 0], [11, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 8, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 44], [1], [0], [2], [0]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.666245460510254, 8.474764823913574, 68.541015625, 2.3111047744750977, 2.3045735359191895, 2.3032662868499756], "accuracy": [0.20182274281978607, 0.17316074669361115, 0.09919429570436478, 0.09708096832036972, 0.09721305221319199, 0.09298639744520187], "val_loss": [2.2681009769439697, 35.10382843017578, 2.3180596828460693, 2.30592942237854, 2.303321361541748, 2.3028197288513184], "val_accuracy": [0.10499999672174454, 0.10100000351667404, 0.09933333098888397, 0.10199999809265137, 0.10199999809265137, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 2, 3, 5], [0, 2, 1, 2, 2], [0, 17, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1, 1, 5, 8, 7, 3, 3, 8, 9, 8, 9], [4, 6, 1, 6, 0, 6, 1], [0, 22, 42], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 1, 24, 17, 7, 3, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.multiply(alpha, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)), alpha)))), tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9], [2, 0, 3, 3, 0], [16, 35], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 4, 2, 5, 5, 0], [5, 6, 1, 6, 0], [0], [1], [0], [2], [0]], "fitness": -0.09571428596973419, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 11, 7, 4, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.square(grad)), tf.math.negative(alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30973744392395, 2.3100156784057617, 2.310619592666626, 2.309109687805176, 2.3095858097076416, 2.3091604709625244], "accuracy": [0.09893012791872025, 0.09285431355237961, 0.09060890227556229, 0.09536388516426086, 0.08691058307886124, 0.09166556596755981], "val_loss": [2.3078503608703613, 2.3078503608703613, 2.3078503608703613, 2.3078503608703613, 2.3078503608703613, 2.3078503608703613], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [54, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 3, 1], [0, 6, 1, 1, 0], [0, 22], [0, 1], [0], [0], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 1, 12, 7, 5, 2, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha))), tf.math.subtract(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309363842010498, 2.3093223571777344, 2.310316801071167, 2.3109073638916016, 2.310051918029785, 2.310323715209961], "accuracy": [0.09034473448991776, 0.09245806187391281, 0.0886276587843895, 0.08757099509239197, 0.08955223858356476, 0.0952318087220192], "val_loss": [2.3084397315979004, 2.3084397315979004, 2.3084397315979004, 2.3084397315979004, 2.3084397315979004, 2.3084397315979004], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]