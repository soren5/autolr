[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134671211242676, 1.6188912391662598, 1.1682333946228027, 0.9787992835044861, 0.8762130737304688, 0.8412721753120422, 0.8140362501144409, 0.7519533038139343, 0.7365739941596985, 0.7130790948867798, 0.6995294690132141, 0.6598197817802429, 0.659053385257721, 0.6643668413162231, 0.6353116631507874, 0.6236130595207214, 0.6085476279258728, 0.6092466115951538, 0.6009515523910522, 0.5707265138626099, 0.5654731392860413, 0.5671126842498779, 0.5534784197807312, 0.545200526714325, 0.565083384513855, 0.5324474573135376, 0.5313300490379333, 0.5199886560440063, 0.5126873850822449, 0.4987392723560333, 0.5005797147750854, 0.49619054794311523, 0.4898585379123688, 0.49735888838768005, 0.4707476496696472, 0.4707801043987274, 0.4792691171169281, 0.46223577857017517, 0.4608812928199768, 0.461501806974411, 0.4550791382789612, 0.45488205552101135, 0.4438401460647583, 0.43555814027786255, 0.4313097596168518, 0.43490517139434814, 0.43415865302085876, 0.43088042736053467, 0.41765540838241577, 0.41726648807525635], "accuracy": [0.2583542466163635, 0.49993395805358887, 0.5976753234863281, 0.6535464525222778, 0.6923788189888, 0.6952846646308899, 0.7008321285247803, 0.7195879220962524, 0.7305507659912109, 0.7364945411682129, 0.735569953918457, 0.7547219395637512, 0.7578919529914856, 0.7536653280258179, 0.7584202885627747, 0.7650244235992432, 0.7736098170280457, 0.767930269241333, 0.7721568942070007, 0.7885351777076721, 0.7897239327430725, 0.7881389260292053, 0.7959318161010742, 0.7971205711364746, 0.7886672616004944, 0.8004226684570312, 0.8017435073852539, 0.8086118102073669, 0.8082155585289001, 0.8182538747787476, 0.8117818236351013, 0.8202351331710815, 0.8185180425643921, 0.8129705190658569, 0.8182538747787476, 0.8239334225654602, 0.8212917447090149, 0.8310658931732178, 0.8335754871368408, 0.8285563588142395, 0.8296129703521729, 0.8289526104927063, 0.8380662798881531, 0.8421608805656433, 0.8430854678153992, 0.8436138033866882, 0.8366134166717529, 0.8432175517082214, 0.8454629778862, 0.8437458872795105], "val_loss": [1.9265198707580566, 1.1332205533981323, 0.8648799061775208, 0.7723639607429504, 0.7492506504058838, 0.7577378153800964, 0.6582714319229126, 0.6123123168945312, 0.5989484190940857, 0.5653815269470215, 0.56988126039505, 0.5509026646614075, 0.5508593916893005, 0.5285961031913757, 0.5341199636459351, 0.5033364295959473, 0.5077347755432129, 0.5057003498077393, 0.4940372705459595, 0.4913838803768158, 0.4837636351585388, 0.47732335329055786, 0.4870144724845886, 0.46020010113716125, 0.45475977659225464, 0.46034741401672363, 0.4528365433216095, 0.4391835629940033, 0.4454168975353241, 0.4405284821987152, 0.4460647702217102, 0.4278630018234253, 0.4287986159324646, 0.4283938705921173, 0.44595980644226074, 0.4403451383113861, 0.43213626742362976, 0.4105587601661682, 0.4291718602180481, 0.41879284381866455, 0.41101109981536865, 0.4094502627849579, 0.40233227610588074, 0.3999916911125183, 0.3986697196960449, 0.3978133201599121, 0.3970223665237427, 0.3997880816459656, 0.4000806212425232, 0.3924277424812317], "val_accuracy": [0.5586666464805603, 0.6226666569709778, 0.6936666369438171, 0.734000027179718, 0.7176666855812073, 0.7066666483879089, 0.7540000081062317, 0.7596666812896729, 0.7753333449363708, 0.7876666784286499, 0.7886666655540466, 0.793666660785675, 0.7960000038146973, 0.8056666851043701, 0.7976666688919067, 0.812333345413208, 0.8090000152587891, 0.8050000071525574, 0.8100000023841858, 0.8230000138282776, 0.812333345413208, 0.8233333230018616, 0.8106666803359985, 0.8346666693687439, 0.8333333134651184, 0.8259999752044678, 0.8306666612625122, 0.8389999866485596, 0.8386666774749756, 0.8393333554267883, 0.8323333263397217, 0.8403333425521851, 0.8389999866485596, 0.8336666822433472, 0.8293333053588867, 0.8336666822433472, 0.8443333506584167, 0.8506666421890259, 0.8339999914169312, 0.8460000157356262, 0.8429999947547913, 0.8536666631698608, 0.8496666550636292, 0.8526666760444641, 0.8579999804496765, 0.847000002861023, 0.8506666421890259, 0.8510000109672546, 0.846666693687439, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8100000023841858, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2088096141815186, 1.6039172410964966, 1.1390413045883179, 0.9791949391365051, 0.8744893670082092, 0.8521315455436707, 0.8127768039703369, 0.7572482228279114, 0.7421550750732422, 0.7036542892456055, 0.7016233205795288, 0.667373538017273, 0.6673954129219055, 0.6371734738349915, 0.6349428296089172, 0.6192377805709839, 0.6110550761222839, 0.5870028138160706, 0.5884504914283752, 0.5810329914093018, 0.5732642412185669, 0.5549862384796143, 0.5375885367393494, 0.5435205101966858, 0.5327498912811279, 0.5183642506599426, 0.5151655077934265, 0.5178053379058838, 0.5062729716300964, 0.4963051378726959, 0.5156799554824829, 0.4833883047103882, 0.48103559017181396, 0.48201021552085876, 0.4662253260612488, 0.46852678060531616, 0.4592711925506592, 0.46111124753952026, 0.4544062316417694, 0.4393177628517151, 0.4437541365623474, 0.4417326748371124, 0.4319603145122528, 0.43616265058517456, 0.42229607701301575, 0.41944438219070435, 0.4238359034061432, 0.41200733184814453, 0.4019273519515991, 0.4098052978515625], "accuracy": [0.2697133719921112, 0.5023114681243896, 0.601109504699707, 0.6538106203079224, 0.6785101294517517, 0.6886804699897766, 0.6975300312042236, 0.7255316376686096, 0.7269845604896545, 0.7440232634544373, 0.7368907928466797, 0.7524765729904175, 0.7490423917770386, 0.7617223858833313, 0.7625148296356201, 0.7652885913848877, 0.7708360552787781, 0.7837802171707153, 0.7788931727409363, 0.7840443849563599, 0.7873464822769165, 0.7947431206703186, 0.8009510040283203, 0.8006868362426758, 0.8043851256370544, 0.8086118102073669, 0.8101968169212341, 0.8083476424217224, 0.8125742673873901, 0.81548011302948, 0.8059701323509216, 0.8226125836372375, 0.8235371708869934, 0.8186501264572144, 0.8248580098152161, 0.828820526599884, 0.8305375576019287, 0.832650899887085, 0.8359529972076416, 0.8396512866020203, 0.8399154543876648, 0.8381983637809753, 0.842028796672821, 0.8392550349235535, 0.8487650156021118, 0.842028796672821, 0.8433496356010437, 0.8496896028518677, 0.8532558679580688, 0.8487650156021118], "val_loss": [1.9091923236846924, 1.0762699842453003, 0.8909260034561157, 0.7890929579734802, 0.7620079517364502, 0.7015885710716248, 0.6554373502731323, 0.6333869695663452, 0.6636538505554199, 0.6100326180458069, 0.5844371914863586, 0.59212327003479, 0.5668628215789795, 0.5841516256332397, 0.5528784394264221, 0.5616210103034973, 0.5366666913032532, 0.5312315225601196, 0.5204041600227356, 0.5315320491790771, 0.49681180715560913, 0.4989796280860901, 0.48859548568725586, 0.4872208535671234, 0.4746541380882263, 0.4696345925331116, 0.4786357283592224, 0.4799196422100067, 0.4643550515174866, 0.496013343334198, 0.4630918800830841, 0.45297616720199585, 0.4442146122455597, 0.4581422805786133, 0.4378379285335541, 0.4489191174507141, 0.43811872601509094, 0.4514455199241638, 0.43031975626945496, 0.4197155833244324, 0.4388444125652313, 0.4166548550128937, 0.4107438921928406, 0.4231433868408203, 0.4048132002353668, 0.41866716742515564, 0.4140518009662628, 0.40953296422958374, 0.4035176634788513, 0.39887499809265137], "val_accuracy": [0.6026666760444641, 0.6513333320617676, 0.6793333292007446, 0.7076666951179504, 0.715666651725769, 0.7379999756813049, 0.7586666941642761, 0.7596666812896729, 0.734333336353302, 0.7760000228881836, 0.7856666445732117, 0.7676666378974915, 0.7756666541099548, 0.7706666588783264, 0.8040000200271606, 0.7760000228881836, 0.7983333468437195, 0.796999990940094, 0.7956666946411133, 0.8080000281333923, 0.8223333358764648, 0.8063333630561829, 0.8196666836738586, 0.8113333582878113, 0.8233333230018616, 0.828000009059906, 0.8263333439826965, 0.812333345413208, 0.8216666579246521, 0.8063333630561829, 0.8353333473205566, 0.8410000205039978, 0.8333333134651184, 0.8220000267028809, 0.8386666774749756, 0.8306666612625122, 0.8416666388511658, 0.8299999833106995, 0.8403333425521851, 0.8500000238418579, 0.8346666693687439, 0.847000002861023, 0.8513333201408386, 0.8416666388511658, 0.8610000014305115, 0.8429999947547913, 0.859666645526886, 0.8546666502952576, 0.8543333411216736, 0.8573333621025085]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 7, 9, 8, 3, 1, 1, 2, 9, 7, 9, 3], [1, 0, 1, 0, 2, 2, 3, 0, 1], [0, 39, 39, 64, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 8, 4, 2, 5, 4], [4, 0, 3, 1, 0, 5, 2, 0, 2], [16, 32, 29], [1, 0, 1, 1, 0, 0, 0, 0], [7, 2, 5, 2, 5], [0, 2, 1], [0], [1], [0], [7], [0]], "fitness": -0.4114285707473755, "mapping_values": [1, 25, 16, 9, 6, 22, 13, 9, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(grad, grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(grad, tf.math.add(tf.math.square(beta), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.385672569274902, 2.2994909286499023, 2.309659242630005, 2.2951488494873047, 2.302978277206421, 2.196533679962158, 2.3106508255004883, 2.3039803504943848, 2.302999258041382, 2.3007566928863525, 2.217883348464966], "accuracy": [0.18333113193511963, 0.17553824186325073, 0.13353586196899414, 0.15229164063930511, 0.09932637959718704, 0.1916523575782776, 0.1282525360584259, 0.09496764093637466, 0.09879804402589798, 0.11372341960668564, 0.1938977688550949], "val_loss": [2.294995069503784, 2.2959227561950684, 2.2400169372558594, 2.302982807159424, 2.299018621444702, 2.276505470275879, 2.30269455909729, 2.3027122020721436, 2.3020362854003906, 2.2958457469940186, 2.042666435241699], "val_accuracy": [0.13199999928474426, 0.09933333098888397, 0.24300000071525574, 0.09866666793823242, 0.10333333164453506, 0.40666666626930237, 0.10166666656732559, 0.09733333438634872, 0.10433333367109299, 0.21566666662693024, 0.31700000166893005]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [3, 0, 3, 1, 3, 5], [0, 0, 2, 0, 2], [16, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 5], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6.640567502181981e+20, 7.605449648597274e+20, 7.389010168943057e+20, 7.43646544264159e+20, 7.468138414395957e+20, 7.42683688737576e+20], "accuracy": [0.09932637959718704, 0.10130762308835983, 0.10487385839223862, 0.10091137140989304, 0.10315678268671036, 0.09840179979801178], "val_loss": [7.55230998774407e+20, 7.55230998774407e+20, 7.55230998774407e+20, 7.55230998774407e+20, 7.55230998774407e+20, 7.55230998774407e+20], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 26], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [8, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 0, 6, 9, 5, 6, 6, 5, 3, 3, 3, 8, 6, 5, 1, 6, 1, 8], [7, 6, 1, 7, 6, 5, 2, 6, 7, 1, 6, 4], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 34, 22, 12, 1, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), grad)), tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(alpha), grad), tf.math.multiply(tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(grad)), beta), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.sqrt(grad)), alpha), grad)), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 1, 8, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9], [2, 0, 3, 1, 2], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [73], [0, 0, 0, 1], [0, 5, 8], [0], [0]], "fitness": -0.09428571164608002, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3098998069763184, 2.3100686073303223, 2.309075355529785, 2.3104324340820312, 2.3098604679107666, 2.308685064315796], "accuracy": [0.09087307006120682, 0.09681680053472519, 0.0952318087220192, 0.09377889335155487, 0.09087307006120682, 0.09179764986038208], "val_loss": [2.3085074424743652, 2.3085074424743652, 2.3085074424743652, 2.3085074424743652, 2.3085074424743652, 2.3085074424743652], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}, "mapping_values": [1, 4, 2, 2, 2, 10, 7, 3, 2, 7, 4, 3, 1, 4, 3, 1, 1], "tree_depth": 12}]