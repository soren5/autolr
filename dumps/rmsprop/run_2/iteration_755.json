[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8008571267127991, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208864212036133, 1.600265383720398, 1.1261240243911743, 0.9964708089828491, 0.8797221779823303, 0.8188520669937134, 0.7983917593955994, 0.7263117432594299, 0.7053794860839844, 0.7051182389259338, 0.685447096824646, 0.6681351661682129, 0.6627202033996582, 0.6349497437477112, 0.6267974972724915, 0.6103525161743164, 0.592773973941803, 0.5841687917709351, 0.583544135093689, 0.5753752589225769, 0.5655563473701477, 0.5434844493865967, 0.570835292339325, 0.5414120554924011, 0.5422089695930481, 0.5215353965759277, 0.5258957147598267, 0.5075985789299011, 0.512653648853302, 0.4894229769706726, 0.49218228459358215, 0.48722130060195923, 0.4907779395580292, 0.4906260073184967, 0.4704166054725647, 0.46363845467567444, 0.4581473469734192, 0.45390552282333374, 0.45158305764198303, 0.44886693358421326, 0.45033690333366394, 0.4469459056854248, 0.4413166344165802, 0.4255043864250183, 0.4324275553226471, 0.4326152205467224, 0.4233126938343048, 0.42088961601257324, 0.4184054434299469, 0.4177824556827545, 0.4136037826538086, 0.4009961485862732, 0.4022325277328491, 0.4039996564388275, 0.393386572599411], "accuracy": [0.2735437750816345, 0.5077268481254578, 0.6110157370567322, 0.6343944072723389, 0.6796988248825073, 0.7028133869171143, 0.7022850513458252, 0.7304186820983887, 0.7407211661338806, 0.7367587089538574, 0.7415136694908142, 0.7460044622421265, 0.7508915662765503, 0.7643640041351318, 0.7644960880279541, 0.7692511081695557, 0.7827235460281372, 0.7802139520645142, 0.7854973077774048, 0.7833839654922485, 0.7918372750282288, 0.7969884872436523, 0.7881389260292053, 0.7969884872436523, 0.7980451583862305, 0.807158887386322, 0.8053097128868103, 0.8112534880638123, 0.8067626357078552, 0.8216879963874817, 0.8198388814926147, 0.819442629814148, 0.817461371421814, 0.8195747137069702, 0.8280280232429504, 0.8264430165290833, 0.8293488025665283, 0.8310658931732178, 0.8339717388153076, 0.834632158279419, 0.8321225643157959, 0.8350284099578857, 0.8359529972076416, 0.8448025584220886, 0.8448025584220886, 0.839519202709198, 0.8446704745292664, 0.8465195894241333, 0.8487650156021118, 0.8482366800308228, 0.8466516733169556, 0.8515387773513794, 0.852331280708313, 0.8471800088882446, 0.8561616539955139], "val_loss": [1.9107662439346313, 1.0872365236282349, 0.8750449419021606, 0.8390347361564636, 0.7761544585227966, 0.693155825138092, 0.6614685654640198, 0.6282963156700134, 0.6213541030883789, 0.5958978533744812, 0.5965563654899597, 0.6065046191215515, 0.589995801448822, 0.6499600410461426, 0.595964789390564, 0.5595271587371826, 0.5344568490982056, 0.5354995131492615, 0.5385318398475647, 0.5272428393363953, 0.5226894617080688, 0.5774046182632446, 0.511492908000946, 0.49821558594703674, 0.491822749376297, 0.49096035957336426, 0.4967612326145172, 0.49995157122612, 0.4744665026664734, 0.4874729812145233, 0.472493439912796, 0.5079011917114258, 0.46654948592185974, 0.47260043025016785, 0.4756544530391693, 0.4547275900840759, 0.45615634322166443, 0.4616900086402893, 0.4457733929157257, 0.4545775055885315, 0.4488489627838135, 0.4528787434101105, 0.43620455265045166, 0.4413606822490692, 0.44370055198669434, 0.43182504177093506, 0.42580974102020264, 0.4282964766025543, 0.41894763708114624, 0.418130099773407, 0.42089617252349854, 0.41643026471138, 0.42223110795021057, 0.42298319935798645, 0.4250931739807129], "val_accuracy": [0.5690000057220459, 0.6453333497047424, 0.6883333325386047, 0.687333345413208, 0.7056666612625122, 0.7450000047683716, 0.7540000081062317, 0.7673333287239075, 0.7573333382606506, 0.7766666412353516, 0.7766666412353516, 0.778333306312561, 0.7730000019073486, 0.7509999871253967, 0.7643333077430725, 0.7763333320617676, 0.7979999780654907, 0.7960000038146973, 0.7973333597183228, 0.8100000023841858, 0.8006666898727417, 0.7663333415985107, 0.8063333630561829, 0.8169999718666077, 0.8183333277702332, 0.8246666789054871, 0.815666675567627, 0.8050000071525574, 0.8276666402816772, 0.8183333277702332, 0.8209999799728394, 0.79666668176651, 0.8293333053588867, 0.8236666917800903, 0.8173333406448364, 0.8326666951179504, 0.828000009059906, 0.8343333601951599, 0.8356666564941406, 0.8323333263397217, 0.8353333473205566, 0.8303333520889282, 0.8386666774749756, 0.8356666564941406, 0.8373333215713501, 0.8396666646003723, 0.8386666774749756, 0.8403333425521851, 0.8450000286102295, 0.847000002861023, 0.8396666646003723, 0.8463333249092102, 0.8426666855812073, 0.8383333086967468, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 2, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [7], [0]], "fitness": -0.25914284586906433, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7917001247406006, 2.554043769836426, 2.3055191040039062, 2.2982707023620605, 2.1315624713897705, 2.1935086250305176, 2.318744421005249, 2.304733991622925, 2.303359031677246], "accuracy": [0.1666886806488037, 0.1406683325767517, 0.09153348207473755, 0.11345925182104111, 0.2218993455171585, 0.25861841440200806, 0.09655263274908066, 0.1002509593963623, 0.10011887550354004], "val_loss": [2.297036647796631, 2.309065818786621, 2.3034541606903076, 2.2004706859588623, 2.2925429344177246, 2.3503406047821045, 2.3038651943206787, 2.302743911743164, 2.302535057067871], "val_accuracy": [0.10266666859388351, 0.09966666996479034, 0.1133333370089531, 0.257666677236557, 0.14433333277702332, 0.10333333164453506, 0.10333333164453506, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 6, 6, 0], [86, 22], [1], [0], [2], [0]], "fitness": -0.10057143121957779, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9630286693573, 2.830481767654419, 2.4802191257476807, 2.4059059619903564, 2.433483362197876, 2.4243106842041016, 2.4283409118652344], "accuracy": [0.20697398483753204, 0.10170386731624603, 0.10315678268671036, 0.10077928751707077, 0.09998679161071777, 0.10500594228506088, 0.09932637959718704], "val_loss": [3.159489631652832, 2.4358506202697754, 2.481611967086792, 2.4336135387420654, 2.361743688583374, 2.4205355644226074, 2.4311470985412598], "val_accuracy": [0.0963333323597908, 0.10300000011920929, 0.10066666454076767, 0.09966666996479034, 0.10000000149011612, 0.0963333323597908, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 2, 3, 4, 5, 6], [0, 0, 1, 0, 2, 0, 3], [0, 39, 39, 4], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 2, 7, 1], [0, 6, 1, 6, 0, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 15, 8, 7, 4, 11, 6, 5, 2, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099727630615234, 2.31015944480896, 2.3113739490509033, 2.3093101978302, 2.310279607772827, 2.3097658157348633], "accuracy": [0.09377889335155487, 0.08928807079792023, 0.08572183549404144, 0.10249637067317963, 0.09179764986038208, 0.0886276587843895], "val_loss": [2.308898448944092, 2.308898448944092, 2.308898448944092, 2.308898448944092, 2.308898448944092, 2.308898448944092], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 2, 9, 3, 6], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 2, 0], [74, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 0, 9, 5, 6, 1], [0, 0, 1, 6, 0], [1, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 12, 7, 5, 3, 10, 6, 4, 0, 4, 4, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(grad, grad))), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310617446899414, 2.3097851276397705, 2.3092691898345947, 2.30961275100708, 2.310279369354248, 2.3093996047973633], "accuracy": [0.09034473448991776, 0.09417514503002167, 0.0952318087220192, 0.09034473448991776, 0.0866464152932167, 0.09232597798109055], "val_loss": [2.3087704181671143, 2.3087704181671143, 2.3087704181671143, 2.3087704181671143, 2.3087704181671143, 2.3087704181671143], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]