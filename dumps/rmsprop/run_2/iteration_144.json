[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211641550064087, 1.6068695783615112, 1.1602355241775513, 0.9785602688789368, 0.8971383571624756, 0.8421696424484253, 0.7821809649467468, 0.7561614513397217, 0.742440938949585, 0.702603816986084, 0.6775703430175781, 0.665355920791626, 0.6586684584617615, 0.6310551762580872, 0.633264422416687, 0.6189174652099609, 0.6011145114898682, 0.6022405624389648, 0.60045325756073, 0.5729879140853882, 0.5730611681938171, 0.5445589423179626, 0.5477426052093506, 0.5604162812232971, 0.5352169871330261, 0.5314308404922485, 0.5201141834259033, 0.511069118976593, 0.519913375377655, 0.5181974172592163, 0.5085973143577576, 0.49869194626808167, 0.4834724962711334, 0.4844965636730194, 0.4790939688682556, 0.4836685061454773, 0.4664601683616638, 0.4652750790119171, 0.4658345580101013, 0.45817795395851135, 0.45072224736213684, 0.45056694746017456, 0.45109793543815613, 0.43041667342185974, 0.4430123567581177, 0.43344932794570923, 0.4278874695301056, 0.4306585192680359, 0.43143025040626526, 0.4161780774593353], "accuracy": [0.2665433883666992, 0.5049530863761902, 0.5872408151626587, 0.6482630968093872, 0.6794346570968628, 0.6980583667755127, 0.7156254053115845, 0.717870831489563, 0.7294940948486328, 0.7416457533836365, 0.7524765729904175, 0.752212405204773, 0.7592127919197083, 0.7609298825263977, 0.763439416885376, 0.7700436115264893, 0.7770439982414246, 0.7695152759552002, 0.7740060687065125, 0.7857614755630493, 0.7872143983840942, 0.7991018295288086, 0.7994980812072754, 0.7902522683143616, 0.8012151718139648, 0.8057059645652771, 0.8092722296714783, 0.8104609847068787, 0.8107251524925232, 0.8101968169212341, 0.8063663840293884, 0.8152159452438354, 0.8216879963874817, 0.8144234418869019, 0.8259146809577942, 0.8208954930305481, 0.8267071843147278, 0.8255184292793274, 0.8317263126373291, 0.8329150676727295, 0.835160493850708, 0.8335754871368408, 0.8297450542449951, 0.8405758738517761, 0.8364813327789307, 0.8397833704948425, 0.839519202709198, 0.8430854678153992, 0.8409721255302429, 0.8462554216384888], "val_loss": [1.929657220840454, 1.1285730600357056, 0.9243143200874329, 0.7733511328697205, 0.7439394593238831, 0.6972661018371582, 0.6744452118873596, 0.6383680701255798, 0.6390508413314819, 0.5961827039718628, 0.5875054001808167, 0.5656487345695496, 0.5580592155456543, 0.5486985445022583, 0.5328367352485657, 0.5277806520462036, 0.5233995914459229, 0.573998212814331, 0.5415555238723755, 0.5078381299972534, 0.491403728723526, 0.48753634095191956, 0.5203287601470947, 0.4956170320510864, 0.48490625619888306, 0.47587069869041443, 0.4645175337791443, 0.4559992253780365, 0.45799434185028076, 0.45439594984054565, 0.45179739594459534, 0.45767009258270264, 0.43630802631378174, 0.43801814317703247, 0.43515515327453613, 0.43412041664123535, 0.43849730491638184, 0.4176207184791565, 0.43004995584487915, 0.41636744141578674, 0.42505648732185364, 0.410369336605072, 0.4130880534648895, 0.41131505370140076, 0.3999671936035156, 0.40261101722717285, 0.40070840716362, 0.4019109606742859, 0.3967262804508209, 0.3905520439147949], "val_accuracy": [0.6133333444595337, 0.6513333320617676, 0.6700000166893005, 0.7139999866485596, 0.7409999966621399, 0.734666645526886, 0.7300000190734863, 0.7523333430290222, 0.7580000162124634, 0.7796666622161865, 0.7683333158493042, 0.7900000214576721, 0.7910000085830688, 0.7953333258628845, 0.793666660785675, 0.7990000247955322, 0.7990000247955322, 0.762333333492279, 0.7979999780654907, 0.8143333196640015, 0.8130000233650208, 0.8140000104904175, 0.7996666431427002, 0.8046666383743286, 0.8146666884422302, 0.8296666741371155, 0.8233333230018616, 0.8309999704360962, 0.8289999961853027, 0.8299999833106995, 0.8259999752044678, 0.8293333053588867, 0.8410000205039978, 0.8349999785423279, 0.8386666774749756, 0.8360000252723694, 0.8376666903495789, 0.8460000157356262, 0.8376666903495789, 0.8416666388511658, 0.8456666469573975, 0.8479999899864197, 0.8493333458900452, 0.843666672706604, 0.8573333621025085, 0.8489999771118164, 0.8519999980926514, 0.8539999723434448, 0.8510000109672546, 0.8536666631698608]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 1, 8, 0], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 4], [32, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 0, 2, 5, 8], [0, 2, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), tf.math.square(alpha)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [76054.140625, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1624869699584.0, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 2, 3, 1, 3, 0, 4, 7], [0, 0, 1, 0, 2, 3, 2, 2], [0, 39, 14], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 9], [2, 4, 3, 1, 0], [42, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 5], [94], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 8, 8, 3, 14, 9, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad)), grad), tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 8, 9, 3, 5], [1, 3, 1, 3, 2], [4, 39, 56], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 0, 8, 2, 6, 5, 6, 7, 0, 5, 5], [0, 0, 3, 1, 0, 4, 5], [16, 1, 49], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 21, 14, 7, 3, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.math.square(grad)))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [392544.03125, 1329639.375, 2268983.0, 3210495.5, 4158862.75, 5103201.5], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [932040.0, 1865391.625, 2800093.5, 3736123.5, 4673475.0, 5612152.0], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 9, 1], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 6, 3], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101511001586914, 2.3107786178588867, 2.3110079765319824, 2.310168981552124, 2.309187412261963, 2.310147285461426], "accuracy": [0.08717474341392517, 0.08809932321310043, 0.09126931428909302, 0.09021265059709549, 0.09589222073554993, 0.09259014576673508], "val_loss": [2.3087704181671143, 2.3087704181671143, 2.3087704181671143, 2.3087704181671143, 2.3087704181671143, 2.3087704181671143], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]