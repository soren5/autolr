[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210097312927246, 1.6038800477981567, 1.137900710105896, 1.00746750831604, 0.8733559250831604, 0.812140166759491, 0.7710757851600647, 0.7589161992073059, 0.730553150177002, 0.7055019736289978, 0.6769261360168457, 0.6694577932357788, 0.6385335326194763, 0.644834578037262, 0.6108555197715759, 0.6025137901306152, 0.5986934304237366, 0.5724669098854065, 0.5603485107421875, 0.5675591826438904, 0.5588428378105164, 0.5473018288612366, 0.544068455696106, 0.5402945280075073, 0.5215787887573242, 0.5152270793914795, 0.5037986636161804, 0.506439208984375, 0.49565231800079346, 0.49633774161338806, 0.48249921202659607, 0.488215833902359, 0.47241416573524475, 0.47358793020248413, 0.4692153036594391, 0.4512021839618683, 0.4604012370109558, 0.4561709761619568, 0.43953946232795715, 0.45088887214660645, 0.4354562759399414, 0.43156898021698, 0.4272519052028656, 0.4278976619243622], "accuracy": [0.27116629481315613, 0.5024435520172119, 0.6009774208068848, 0.6375643610954285, 0.6844538450241089, 0.703209638595581, 0.7141724824905396, 0.7165499925613403, 0.7309470176696777, 0.7407211661338806, 0.7498348951339722, 0.7473253011703491, 0.7618544697761536, 0.7618544697761536, 0.7683265209197998, 0.7703077793121338, 0.7711002230644226, 0.7857614755630493, 0.7940827012062073, 0.7820631265640259, 0.7878747582435608, 0.7979130744934082, 0.7924976944923401, 0.7956677079200745, 0.8075551390647888, 0.8068947196006775, 0.8150838613510132, 0.8101968169212341, 0.8150838613510132, 0.8138951063156128, 0.8228767514228821, 0.8187822103500366, 0.8252542614936829, 0.8247259259223938, 0.8274996876716614, 0.8347642421722412, 0.8281601071357727, 0.8286884427070618, 0.8403117060661316, 0.8329150676727295, 0.8401796221733093, 0.8372738361358643, 0.8451988101005554, 0.8385946154594421], "val_loss": [1.9247320890426636, 1.1446093320846558, 0.916469395160675, 0.7990204095840454, 0.7425642609596252, 0.6895707845687866, 0.7664282917976379, 0.6755918264389038, 0.6193177103996277, 0.6214370131492615, 0.5922008752822876, 0.600386381149292, 0.6041576862335205, 0.5631080865859985, 0.6058913469314575, 0.5607423782348633, 0.5537899732589722, 0.5342373251914978, 0.5316863656044006, 0.5142802596092224, 0.5287496447563171, 0.5089238286018372, 0.5001022815704346, 0.4997071623802185, 0.4979739487171173, 0.4941200315952301, 0.49295899271965027, 0.48361191153526306, 0.4923253059387207, 0.48189184069633484, 0.4725341498851776, 0.47658398747444153, 0.47196418046951294, 0.4637579023838043, 0.4623338282108307, 0.45641565322875977, 0.459189772605896, 0.4499588906764984, 0.4404905140399933, 0.4452386200428009, 0.4506005048751831, 0.44499462842941284, 0.43065544962882996, 0.43784651160240173], "val_accuracy": [0.5243333578109741, 0.6206666827201843, 0.6660000085830688, 0.6986666917800903, 0.7086666822433472, 0.7390000224113464, 0.6913333535194397, 0.7493333220481873, 0.765333354473114, 0.7639999985694885, 0.7786666750907898, 0.7636666893959045, 0.7590000033378601, 0.7916666865348816, 0.7570000290870667, 0.784333348274231, 0.7916666865348816, 0.796999990940094, 0.7889999747276306, 0.812333345413208, 0.7983333468437195, 0.8080000281333923, 0.8163333535194397, 0.8166666626930237, 0.8113333582878113, 0.8169999718666077, 0.812666654586792, 0.8203333616256714, 0.8186666369438171, 0.812333345413208, 0.824999988079071, 0.8266666531562805, 0.8180000185966492, 0.8326666951179504, 0.8309999704360962, 0.8326666951179504, 0.8256666660308838, 0.8363333344459534, 0.8410000205039978, 0.8316666483879089, 0.8339999914169312, 0.8289999961853027, 0.8389999866485596, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 5, 5, 4, 6, 2, 3, 5, 0, 5, 9], [0, 2, 1, 0, 2, 2, 1, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 9, 5, 2, 1], [6, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 16, 8, 3, 12, 7, 5, 2, 6, 5, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.square(tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad), tf.math.negative(tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 6, 5, 2, 4, 5], [0, 2, 3, 2, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 3, 4, 2, 5, 4, 1, 5, 4, 5, 3, 5], [2, 6, 2, 1, 6, 7, 7, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 9, 5, 4, 1, 2, 1, 1, 0, 20, 12, 8, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.square(beta), tf.math.pow(grad, tf.math.subtract(beta, alpha))), grad), tf.math.square(tf.math.pow(tf.math.square(tf.math.multiply(grad, grad)), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107707500457764, 2.309302568435669, 2.310896158218384, 2.311204195022583, 2.309767007827759, 2.3091893196105957], "accuracy": [0.08585391938686371, 0.09192973375320435, 0.09642054885625839, 0.0886276587843895, 0.09060890227556229, 0.08955223858356476], "val_loss": [2.3083698749542236, 2.3083698749542236, 2.3083698749542236, 2.3083698749542236, 2.3083698749542236, 2.3083698749542236], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 2, 3, 2, 1, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 3, 0, 2, 5, 2, 3], [0, 6, 1, 6, 0], [0, 22], [1], [0], [1], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 1, 8, 4, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3094332218170166, 2.309102773666382, 2.3105978965759277, 2.309218645095825, 2.309627056121826, 2.311523914337158], "accuracy": [0.09060890227556229, 0.0944393053650856, 0.08849557489156723, 0.09074098616838455, 0.08902391046285629, 0.09074098616838455], "val_loss": [2.308940887451172, 2.308940887451172, 2.308940887451172, 2.308940887451172, 2.308940887451172, 2.308940887451172], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 3, 1, 3, 5, 8, 1, 4, 2], [0, 0, 1, 0, 2, 0, 0, 3], [0, 39, 39, 61, 87], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 3, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 6, 5, 2, 1], [0, 0, 1], [0, 87], [1], [0], [0], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 18, 10, 8, 5, 13, 7, 6, 2, 8, 5, 3, 2, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310241222381592, 2.3088064193725586, 2.310816764831543, 2.3106331825256348, 2.3101675510406494, 2.3095862865448], "accuracy": [0.09192973375320435, 0.09285431355237961, 0.09047681838274002, 0.08809932321310043, 0.09325055778026581, 0.0948355570435524], "val_loss": [2.308673620223999, 2.308673620223999, 2.308673620223999, 2.308673620223999, 2.308673620223999, 2.308673620223999], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]