[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209538459777832, 1.6011695861816406, 1.1623327732086182, 1.003398060798645, 0.877480685710907, 0.840284526348114, 0.8005509376525879, 0.7423312067985535, 0.7345797419548035, 0.7310758829116821, 0.6938616633415222, 0.6803579926490784, 0.6589029431343079, 0.6518927812576294, 0.6167382597923279, 0.6175305843353271, 0.6119566559791565, 0.5924443006515503, 0.5708738565444946, 0.5782120823860168, 0.5558469295501709, 0.5564951300621033, 0.5419773459434509, 0.529690146446228, 0.5261965394020081, 0.5329945683479309, 0.534391462802887, 0.5145283341407776], "accuracy": [0.2666754722595215, 0.505349338054657, 0.5909391045570374, 0.6495839357376099, 0.6877558827400208, 0.6865671873092651, 0.7043983340263367, 0.7283053994178772, 0.7327961921691895, 0.7268524765968323, 0.7421740889549255, 0.7485140562057495, 0.7535332441329956, 0.7552502751350403, 0.7737419009208679, 0.7746664881706238, 0.7737419009208679, 0.7841764688491821, 0.7932901978492737, 0.7835160493850708, 0.7965922355651855, 0.7960638999938965, 0.8018755912780762, 0.8082155585289001, 0.8062343001365662, 0.8030643463134766, 0.8041210174560547, 0.8125742673873901], "val_loss": [1.9186900854110718, 1.1089876890182495, 0.9194767475128174, 0.777677595615387, 0.7386484146118164, 0.7137713432312012, 0.6526818871498108, 0.7103046774864197, 0.6288396120071411, 0.6107253432273865, 0.6125755310058594, 0.5898785591125488, 0.5641161799430847, 0.5752503871917725, 0.5609890818595886, 0.5345314145088196, 0.5250020623207092, 0.5220438838005066, 0.5180093050003052, 0.5183601975440979, 0.5109745264053345, 0.5061492323875427, 0.4939708709716797, 0.4970718324184418, 0.5060513019561768, 0.49196699261665344, 0.5073394179344177, 0.49169060587882996], "val_accuracy": [0.5740000009536743, 0.6466666460037231, 0.6713333129882812, 0.7276666760444641, 0.7099999785423279, 0.7193333506584167, 0.762666642665863, 0.7269999980926514, 0.7703333497047424, 0.7746666669845581, 0.7776666879653931, 0.7763333320617676, 0.7956666946411133, 0.7896666526794434, 0.7960000038146973, 0.8040000200271606, 0.8103333115577698, 0.8143333196640015, 0.8136666417121887, 0.8149999976158142, 0.8109999895095825, 0.812666654586792, 0.8213333487510681, 0.8140000104904175, 0.8136666417121887, 0.8166666626930237, 0.8029999732971191, 0.8159999847412109]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 3, 2, 1], [0, 6, 1, 6, 0], [0, 90], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1372173.375, 26101938.0, 120858768.0, 339462784.0, 719239232.0, 1329512064.0], "accuracy": [0.09747721254825592, 0.10091137140989304, 0.09906221181154251, 0.09906221181154251, 0.1010434553027153, 0.09721305221319199], "val_loss": [6388224.0, 51041696.0, 172196272.0, 408087872.0, 796954304.0, 1377029888.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [8, 1, 0, 2, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 8, 8, 1], [0, 6, 1, 6, 0], [24, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 7, 4, 3, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.negative(grad), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 2, 6], [0, 6, 1, 6, 0], [0, 3], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310746431350708, 2.310239791870117, 2.3110268115997314, 2.3096401691436768, 2.309713840484619, 2.3099379539489746], "accuracy": [0.09325055778026581, 0.09549596905708313, 0.09219389408826828, 0.09681680053472519, 0.09311848133802414, 0.08691058307886124], "val_loss": [2.308781623840332, 2.308781623840332, 2.308781623840332, 2.308781623840332, 2.308781623840332, 2.308781623840332], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 4], [0, 6, 1, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108747005462646, 2.310914993286133, 2.310304641723633, 2.310349941253662, 2.310033082962036, 2.3097469806671143], "accuracy": [0.08572183549404144, 0.09206181764602661, 0.08994849026203156, 0.09126931428909302, 0.09034473448991776, 0.09840179979801178], "val_loss": [2.3095474243164062, 2.3095474243164062, 2.3095474243164062, 2.3095474243164062, 2.3095474243164062, 2.3095474243164062], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]