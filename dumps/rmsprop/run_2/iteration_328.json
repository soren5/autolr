[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8037142753601074, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207204818725586, 1.5976616144180298, 1.1495612859725952, 1.0052915811538696, 0.8999903798103333, 0.8259710669517517, 0.7782519459724426, 0.7627756595611572, 0.7408007383346558, 0.730924665927887, 0.7066172361373901, 0.6814768314361572, 0.6763362884521484, 0.6607781052589417, 0.6345247030258179, 0.6232706308364868, 0.6143335103988647, 0.6047807931900024, 0.5990158319473267, 0.5776471495628357, 0.580684244632721, 0.5595512986183167, 0.5664104223251343, 0.5526859760284424, 0.5443789958953857, 0.5482416152954102, 0.5310809016227722, 0.5258803963661194, 0.5083053112030029, 0.5215989351272583, 0.5072386264801025, 0.5117865204811096, 0.4996478855609894, 0.49631476402282715, 0.48517531156539917], "accuracy": [0.2709021270275116, 0.5103685259819031, 0.6007132530212402, 0.6373002529144287, 0.6749438643455505, 0.6997754573822021, 0.7136441469192505, 0.7160216569900513, 0.7240787148475647, 0.7298903465270996, 0.7325320243835449, 0.7446836829185486, 0.7423061728477478, 0.7477215528488159, 0.7627789974212646, 0.7646281719207764, 0.7630431652069092, 0.7714964747428894, 0.7737419009208679, 0.7840443849563599, 0.7817989587783813, 0.7926297783851624, 0.7874785661697388, 0.7890635132789612, 0.7931581139564514, 0.7910447716712952, 0.802271842956543, 0.8053097128868103, 0.8063663840293884, 0.8050455451011658, 0.8119139075279236, 0.8068947196006775, 0.8119139075279236, 0.8149517774581909, 0.8175934553146362], "val_loss": [1.9142545461654663, 1.0878808498382568, 0.8926166892051697, 0.8009964823722839, 0.7215901613235474, 0.6623210906982422, 0.6506668925285339, 0.6972426176071167, 0.6678553819656372, 0.5968968868255615, 0.6226387619972229, 0.6085951924324036, 0.6041457056999207, 0.5657234787940979, 0.5384127497673035, 0.5433242917060852, 0.546094536781311, 0.5104828476905823, 0.5177732110023499, 0.5506793856620789, 0.4943341910839081, 0.5032249689102173, 0.5042058825492859, 0.4964112937450409, 0.47303181886672974, 0.49526065587997437, 0.45927074551582336, 0.4602838158607483, 0.4630308449268341, 0.45773938298225403, 0.4493822157382965, 0.44869986176490784, 0.4508472979068756, 0.4379071593284607, 0.4493252635002136], "val_accuracy": [0.5726666450500488, 0.67166668176651, 0.6713333129882812, 0.7213333249092102, 0.7269999980926514, 0.7583333253860474, 0.765333354473114, 0.7423333525657654, 0.7490000128746033, 0.7806666493415833, 0.7553333044052124, 0.7726666927337646, 0.7630000114440918, 0.7866666913032532, 0.812333345413208, 0.7850000262260437, 0.8013333082199097, 0.8143333196640015, 0.7913333177566528, 0.7856666445732117, 0.8183333277702332, 0.8116666674613953, 0.8119999766349792, 0.8223333358764648, 0.8223333358764648, 0.8140000104904175, 0.8353333473205566, 0.8266666531562805, 0.8309999704360962, 0.843666672706604, 0.8293333053588867, 0.8253333568572998, 0.8376666903495789, 0.8396666646003723, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 82, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 8, 6, 3, 8, 2, 5, 8], [0, 5, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 6, 0, 2, 5, 2, 1, 7, 5, 9, 4], [0, 6, 1, 6, 0, 5], [0, 93, 78], [0, 0, 0, 1, 1], [0, 7, 8], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 14, 9, 5, 2, 17, 11, 6, 3, 5, 3, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.math.square(grad), alpha)), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(grad, alpha)), tf.math.subtract(tf.math.add(grad, tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(alpha), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 6, 2, 2, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 9, 5, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098700046539307, 2.3095643520355225, 2.3100359439849854, 2.3074800968170166, 2.3101861476898193, 2.309959650039673], "accuracy": [0.09126931428909302, 0.0870426595211029, 0.0956280529499054, 0.09760929644107819, 0.0948355570435524, 0.09259014576673508], "val_loss": [2.308156967163086, 2.308156967163086, 2.308156967163086, 2.308156967163086, 2.308156967163086, 2.308156967163086], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [68, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 3], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 11, 6, 5, 1, 7, 4, 3, 0, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3090837001800537, 2.3103766441345215, 2.3100316524505615, 2.3108465671539307, 2.3091442584991455, 2.3109138011932373], "accuracy": [0.09140139818191528, 0.08770307898521423, 0.09047681838274002, 0.0956280529499054, 0.09113723784685135, 0.09166556596755981], "val_loss": [2.3084497451782227, 2.3084497451782227, 2.3084497451782227, 2.3084497451782227, 2.3084497451782227, 2.3084497451782227], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 1, 0, 1, 4, 1, 5, 0, 2, 5, 0], [0, 2, 2, 0, 2, 0, 1, 3, 0, 0], [0, 39, 39, 7, 90], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 0, 3, 5, 0, 4], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.02685714326798916, "mapping_values": [1, 26, 16, 10, 5, 13, 7, 6, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(grad))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(alpha))), tf.math.add(grad, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [629607825408.0, 747775721472.0, 727466770432.0, 723251232768.0, 726501687296.0, 722001330176.0], "accuracy": [0.08691058307886124, 0.08215559273958206, 0.08479725569486618, 0.08400475233793259, 0.07607977837324142, 0.08545766770839691], "val_loss": [437937602560.0, 437937602560.0, 437937864704.0, 437937766400.0, 437937668096.0, 437937766400.0], "val_accuracy": [0.023666666820645332, 0.023666666820645332, 0.023666666820645332, 0.023666666820645332, 0.023666666820645332, 0.023666666820645332]}}]