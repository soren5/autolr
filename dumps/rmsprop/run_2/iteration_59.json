[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8197143077850342, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2125418186187744, 1.6247812509536743, 1.169100046157837, 0.9962620139122009, 0.9044677019119263, 0.8279528617858887, 0.7928770184516907, 0.74640291929245, 0.7333338856697083, 0.7118454575538635, 0.6883146166801453, 0.6814874410629272, 0.6592565774917603, 0.6674404740333557, 0.6407045125961304, 0.6121937036514282, 0.60954749584198, 0.5892740488052368, 0.5801016092300415, 0.5834208726882935, 0.5792462229728699, 0.5673180222511292, 0.5414159297943115, 0.5323116183280945, 0.5378045439720154, 0.5342612862586975, 0.5227571725845337, 0.5155012607574463, 0.49907201528549194, 0.5098307132720947, 0.49386295676231384, 0.490913450717926, 0.4935666620731354, 0.4819057881832123, 0.47674617171287537, 0.46154388785362244, 0.4742050766944885, 0.45761653780937195, 0.4581015408039093, 0.45741531252861023, 0.4655666649341583, 0.43949654698371887, 0.4368235766887665, 0.44173723459243774, 0.43097081780433655, 0.43335476517677307, 0.43605250120162964, 0.41636133193969727, 0.41568079590797424, 0.40629613399505615, 0.4147908389568329, 0.4116634726524353, 0.40998396277427673, 0.4054317772388458, 0.39625829458236694, 0.3918771743774414, 0.39459970593452454, 0.38572245836257935, 0.38961005210876465, 0.38117364048957825, 0.3874708116054535, 0.37556755542755127, 0.37845584750175476, 0.37860724329948425, 0.36875399947166443, 0.36714452505111694, 0.36490288376808167, 0.35942894220352173, 0.3570064604282379, 0.3605276048183441], "accuracy": [0.2627129852771759, 0.4998018741607666, 0.5880332589149475, 0.643772304058075, 0.6734909415245056, 0.698190450668335, 0.7084929347038269, 0.7273808121681213, 0.7308149337768555, 0.7341170310974121, 0.7466648817062378, 0.7448157668113708, 0.7582882046699524, 0.7483819723129272, 0.7658169269561768, 0.776251494884491, 0.7688548564910889, 0.7799497842788696, 0.7864218950271606, 0.7869502305984497, 0.7872143983840942, 0.7886672616004944, 0.8033285140991211, 0.805177628993988, 0.7981772422790527, 0.800818920135498, 0.8083476424217224, 0.8105930685997009, 0.8131026029586792, 0.8086118102073669, 0.8198388814926147, 0.8203672170639038, 0.8165367841720581, 0.8208954930305481, 0.8220842480659485, 0.8297450542449951, 0.8236692547798157, 0.830669641494751, 0.8300092220306396, 0.8308017253875732, 0.8247259259223938, 0.8401796221733093, 0.8333113193511963, 0.8315942287445068, 0.8418967127799988, 0.8393871188163757, 0.8379341959953308, 0.8491612672805786, 0.8418967127799988, 0.8525954484939575, 0.8444063067436218, 0.8448025584220886, 0.8504821062088013, 0.8455950617790222, 0.8581429123878479, 0.8539162874221802, 0.8548408150672913, 0.8568220734596252, 0.8570862412452698, 0.8595958352088928, 0.8549728989601135, 0.8585391640663147, 0.8574824929237366, 0.8593316674232483, 0.8631620407104492, 0.8683133125305176, 0.8638224601745605, 0.8687095642089844, 0.8646149635314941, 0.8672566413879395], "val_loss": [1.930985689163208, 1.111150860786438, 0.9628871083259583, 0.7841686010360718, 0.7231598496437073, 0.700128436088562, 0.6764838695526123, 0.6661030054092407, 0.633594810962677, 0.6259431838989258, 0.62293940782547, 0.6170515418052673, 0.5795299410820007, 0.5824818015098572, 0.5497995018959045, 0.5868511199951172, 0.5240197777748108, 0.53262859582901, 0.5344786643981934, 0.5417826771736145, 0.507766842842102, 0.49876073002815247, 0.4948787987232208, 0.5197523832321167, 0.4791733920574188, 0.48503637313842773, 0.4904683530330658, 0.46300801634788513, 0.46199488639831543, 0.4769039452075958, 0.4564231038093567, 0.4458419680595398, 0.46123072504997253, 0.4429871439933777, 0.44111815094947815, 0.4532182514667511, 0.43750980496406555, 0.463957279920578, 0.4280721843242645, 0.4682076871395111, 0.42627331614494324, 0.42653706669807434, 0.44226059317588806, 0.4183271527290344, 0.4319893419742584, 0.4324391782283783, 0.40772461891174316, 0.42262163758277893, 0.4062551259994507, 0.4147987365722656, 0.40382063388824463, 0.4213828146457672, 0.4102535545825958, 0.4055817723274231, 0.3924349248409271, 0.39719587564468384, 0.4026351273059845, 0.3908410668373108, 0.3873806893825531, 0.38445985317230225, 0.3923580050468445, 0.38444605469703674, 0.38413387537002563, 0.38041284680366516, 0.37701427936553955, 0.4046708643436432, 0.38990992307662964, 0.38021624088287354, 0.3936878740787506, 0.4009484052658081], "val_accuracy": [0.5713333487510681, 0.6606666445732117, 0.6693333387374878, 0.7139999866485596, 0.731333315372467, 0.7329999804496765, 0.7453333139419556, 0.7379999756813049, 0.7516666650772095, 0.7596666812896729, 0.7630000114440918, 0.781333327293396, 0.7853333353996277, 0.7793333530426025, 0.7923333048820496, 0.7596666812896729, 0.7983333468437195, 0.8080000281333923, 0.8063333630561829, 0.7960000038146973, 0.8046666383743286, 0.8193333148956299, 0.8109999895095825, 0.8040000200271606, 0.8243333101272583, 0.8246666789054871, 0.8169999718666077, 0.8343333601951599, 0.8366666436195374, 0.8199999928474426, 0.8333333134651184, 0.8410000205039978, 0.828000009059906, 0.843666672706604, 0.843666672706604, 0.8270000219345093, 0.8450000286102295, 0.8309999704360962, 0.8453333377838135, 0.809333324432373, 0.847000002861023, 0.8489999771118164, 0.8396666646003723, 0.8483333587646484, 0.8456666469573975, 0.843666672706604, 0.8539999723434448, 0.8460000157356262, 0.8526666760444641, 0.8529999852180481, 0.859000027179718, 0.8473333120346069, 0.8526666760444641, 0.8526666760444641, 0.8616666793823242, 0.8586666584014893, 0.8573333621025085, 0.8653333187103271, 0.8640000224113464, 0.8629999756813049, 0.862333357334137, 0.859666645526886, 0.8666666746139526, 0.8643333315849304, 0.8686666488647461, 0.8526666760444641, 0.856333315372467, 0.8650000095367432, 0.8583333492279053, 0.8523333072662354]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 0, 6, 3, 8, 2, 3, 6, 9, 9], [2, 0, 3, 1, 0], [16, 1, 54, 27], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 8, 5], [4, 6, 6], [0], [1], [0], [1], [0]], "fitness": -0.8148571252822876, "mapping_values": [1, 6, 3, 3, 2, 16, 11, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.084195613861084, 1.3763200044631958, 0.9385952949523926, 0.8041793704032898, 0.7320201992988586, 0.6782722473144531, 0.6601348519325256, 0.6219760775566101, 0.6079344749450684, 0.5893949270248413, 0.5877587795257568, 0.5914168953895569, 0.5717352032661438, 0.562811017036438, 0.590103805065155, 0.595449686050415, 0.6284022927284241], "accuracy": [0.2922995686531067, 0.5587108731269836, 0.6551313996315002, 0.6951525807380676, 0.7314753532409668, 0.7396644949913025, 0.7541936039924622, 0.7602694630622864, 0.7692511081695557, 0.774798572063446, 0.7732135653495789, 0.7770439982414246, 0.791441023349762, 0.7862898111343384, 0.7773081660270691, 0.7795535326004028, 0.7689869403839111], "val_loss": [1.048614263534546, 0.9549544453620911, 0.7728081345558167, 0.6336348652839661, 0.615486204624176, 0.6158240437507629, 0.5753663778305054, 0.5839319825172424, 0.5479863286018372, 0.5407078266143799, 0.5493420362472534, 0.5346255898475647, 0.5417917370796204, 0.5537238717079163, 0.5388199090957642, 0.5792620182037354, 0.5688795447349548], "val_accuracy": [0.6256666779518127, 0.6536666750907898, 0.6980000138282776, 0.7590000033378601, 0.7546666860580444, 0.7786666750907898, 0.7796666622161865, 0.7836666703224182, 0.7839999794960022, 0.7979999780654907, 0.8009999990463257, 0.8153333067893982, 0.8046666383743286, 0.8130000233650208, 0.7973333597183228, 0.8059999942779541, 0.8036666512489319]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 9, 2], [5, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 8], [5, 6, 1], [95], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08638224750757217, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 9, 4, 4, 2, 0, 6, 4, 6], [0, 2, 1, 0, 1, 2, 0, 2, 3, 0], [16, 39, 39, 59, 57], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 2, 0, 6, 0, 8, 2], [2, 0, 3, 1, 0], [97, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 5, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(grad, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [6, 6, 1], [96], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 13}]