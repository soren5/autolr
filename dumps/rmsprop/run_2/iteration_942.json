[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105205059051514, 1.6116962432861328, 1.1552425622940063, 0.9940024614334106, 0.90882807970047, 0.8509202599525452, 0.7899635434150696, 0.7644364237785339, 0.7558194398880005, 0.7058155536651611, 0.6897872686386108, 0.6936056613922119, 0.6602403521537781, 0.658582329750061, 0.6453568339347839, 0.6170381307601929, 0.6149436235427856, 0.6175825595855713, 0.5884990096092224, 0.5683152079582214, 0.5968916416168213, 0.557618260383606, 0.5587125420570374, 0.5544784069061279, 0.5347222089767456, 0.5334196090698242, 0.5330759882926941, 0.513663113117218, 0.5123107433319092, 0.5043632388114929, 0.507879912853241, 0.5029463171958923, 0.48986387252807617, 0.483442485332489, 0.47464892268180847, 0.4724469780921936, 0.47317537665367126, 0.46079057455062866, 0.46458590030670166, 0.46121108531951904, 0.4516245424747467, 0.4466075003147125, 0.44477882981300354, 0.45135247707366943, 0.4373132586479187, 0.4368654489517212, 0.42734888195991516, 0.4308668375015259, 0.4324612617492676, 0.41912978887557983, 0.4238266050815582], "accuracy": [0.26839256286621094, 0.49266940355300903, 0.6028265953063965, 0.6483951807022095, 0.6691322326660156, 0.6897371411323547, 0.7087571024894714, 0.7182670831680298, 0.7166820764541626, 0.7380794882774353, 0.7471932172775269, 0.7412495017051697, 0.7592127919197083, 0.7598732113838196, 0.7635715007781982, 0.7685906887054443, 0.7726852297782898, 0.7721568942070007, 0.7868181467056274, 0.7921014428138733, 0.7849689722061157, 0.7930260300636292, 0.7993659973144531, 0.8006868362426758, 0.8009510040283203, 0.804649293422699, 0.8021397590637207, 0.8092722296714783, 0.8109893202781677, 0.8153480291366577, 0.8137630224227905, 0.8164047002792358, 0.8244617581367493, 0.8260467648506165, 0.8304054737091064, 0.8273676037788391, 0.8290846943855286, 0.8319904804229736, 0.8260467648506165, 0.8342359066009521, 0.8338396549224854, 0.8416325449943542, 0.8387266993522644, 0.8374059200286865, 0.8400475382804871, 0.8411042094230652, 0.8449346423149109, 0.8421608805656433, 0.8416325449943542, 0.8445383906364441, 0.8454629778862], "val_loss": [1.9163581132888794, 1.0794496536254883, 0.9249022006988525, 0.7863608598709106, 0.7241583466529846, 0.715631902217865, 0.6563788056373596, 0.6397373080253601, 0.6332406997680664, 0.5986402630805969, 0.6120965480804443, 0.5742987990379333, 0.6342000961303711, 0.614736020565033, 0.5640907287597656, 0.5381805300712585, 0.5762728452682495, 0.5320553183555603, 0.5409733653068542, 0.5267571210861206, 0.5159450769424438, 0.5077558755874634, 0.5138632655143738, 0.5020024180412292, 0.5079910159111023, 0.49698400497436523, 0.4785711169242859, 0.4895327091217041, 0.4734785854816437, 0.47991108894348145, 0.46887117624282837, 0.4707998037338257, 0.46426287293434143, 0.4546271860599518, 0.4579432010650635, 0.4517606198787689, 0.4546789228916168, 0.4608769416809082, 0.4616670608520508, 0.4556954801082611, 0.4358847737312317, 0.44039037823677063, 0.4592052102088928, 0.4340968728065491, 0.4576222598552704, 0.42722246050834656, 0.44441694021224976, 0.4394911825656891, 0.4344135820865631, 0.426364004611969, 0.43315503001213074], "val_accuracy": [0.5903333425521851, 0.6679999828338623, 0.6583333611488342, 0.7139999866485596, 0.7256666421890259, 0.7263333201408386, 0.753000020980835, 0.7580000162124634, 0.765666663646698, 0.7829999923706055, 0.7676666378974915, 0.7919999957084656, 0.7543333172798157, 0.7753333449363708, 0.7906666398048401, 0.7979999780654907, 0.7889999747276306, 0.8040000200271606, 0.7916666865348816, 0.8053333163261414, 0.8053333163261414, 0.8230000138282776, 0.8169999718666077, 0.8096666932106018, 0.8073333501815796, 0.8226666450500488, 0.82833331823349, 0.8236666917800903, 0.8316666483879089, 0.8220000267028809, 0.828000009059906, 0.8326666951179504, 0.8273333311080933, 0.8379999995231628, 0.8339999914169312, 0.8396666646003723, 0.840666651725769, 0.8320000171661377, 0.8326666951179504, 0.8333333134651184, 0.8463333249092102, 0.8463333249092102, 0.8296666741371155, 0.8456666469573975, 0.8326666951179504, 0.8479999899864197, 0.8349999785423279, 0.8416666388511658, 0.846666693687439, 0.8460000157356262, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 4, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 7, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [5], [0]], "fitness": -0.19371429085731506, "mapping_values": [1, 6, 3, 3, 1, 11, 6, 5, 2, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.math.square(alpha)), tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3192784786224365, 2.4594366550445557, 2.3012776374816895, 2.2471566200256348, 2.304358959197998, 2.3031885623931885, 2.303704023361206, 2.3032097816467285], "accuracy": [0.1962752640247345, 0.10606260597705841, 0.11108175665140152, 0.16602826118469238, 0.09377889335155487, 0.09219389408826828, 0.09893012791872025, 0.09985470771789551], "val_loss": [3.185108184814453, 2.303049087524414, 2.281606674194336, 2.303870677947998, 2.3028228282928467, 2.3028757572174072, 2.302767038345337, 2.3025527000427246], "val_accuracy": [0.1366666704416275, 0.09700000286102295, 0.1863333284854889, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 4, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 0, 6, 2, 8, 2], [1, 0, 0, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 8, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 2, 2, 0, 1, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035402297973633, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 6, 3], [0, 2, 2, 0, 2, 1, 3], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [18, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 7], [2, 6, 1, 3, 0], [13, 22], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 15, 8, 7, 2, 2, 1, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.multiply(grad, alpha), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(grad, tf.math.add(alpha, sigma)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309520959854126, 2.310417652130127, 2.3094561100006104, 2.3097314834594727, 2.309783458709717, 2.3099279403686523], "accuracy": [0.09087307006120682, 0.0882314071059227, 0.09760929644107819, 0.09008057415485382, 0.09668471664190292, 0.08453308790922165], "val_loss": [2.307999610900879, 2.307999610900879, 2.307999610900879, 2.307999610900879, 2.307999610900879, 2.307999610900879], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 8, 6, 5], [0, 2, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 0, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0665714293718338, "mapping_values": [1, 15, 9, 6, 2, 7, 4, 3, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.sqrt(alpha)))), tf.math.divide_no_nan(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.670367436524749e+16, 6.443935714194227e+16, 6.709456605387162e+16, 6.354766180175053e+16, 6.543730138310246e+16, 6.396321277254042e+16], "accuracy": [0.07409853488206863, 0.07687227427959442, 0.07449477910995483, 0.07660810649394989, 0.07674019038677216, 0.08268392831087112], "val_loss": [4.048631594221568e+16, 4.048631594221568e+16, 4.048631594221568e+16, 4.048631594221568e+16, 4.048631594221568e+16, 4.048631594221568e+16], "val_accuracy": [0.06300000101327896, 0.06300000101327896, 0.06300000101327896, 0.06300000101327896, 0.06300000101327896, 0.06300000101327896]}}]