[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212308168411255, 1.6056420803070068, 1.138880968093872, 0.9719677567481995, 0.8795256614685059, 0.8239205479621887, 0.7752183079719543, 0.7608349323272705, 0.706587016582489, 0.6888211369514465, 0.6747587323188782, 0.6664285659790039, 0.646016538143158, 0.6329014897346497, 0.6164767742156982, 0.610680878162384, 0.5992426872253418, 0.5963342189788818, 0.5831249952316284, 0.570708155632019, 0.5554115772247314, 0.5436153411865234, 0.5403386950492859, 0.5305982828140259, 0.5280992388725281, 0.5202635526657104, 0.50657719373703, 0.5130326747894287, 0.5105759501457214, 0.494068443775177, 0.48199698328971863, 0.48762038350105286, 0.48653900623321533, 0.47481316328048706, 0.47219720482826233], "accuracy": [0.2639017403125763, 0.5085193514823914, 0.5999207496643066, 0.6573768258094788, 0.6814159154891968, 0.7028133869171143, 0.7172104120254517, 0.7228899598121643, 0.7415136694908142, 0.743891179561615, 0.7448157668113708, 0.7483819723129272, 0.7565711140632629, 0.7584202885627747, 0.7684586048126221, 0.7705719470977783, 0.7771760821342468, 0.7753269076347351, 0.778761088848114, 0.7843085527420044, 0.7964601516723633, 0.7980451583862305, 0.7998943328857422, 0.800818920135498, 0.8017435073852539, 0.8039889335632324, 0.8075551390647888, 0.8058380484580994, 0.813498854637146, 0.8136309385299683, 0.8220842480659485, 0.8201030492782593, 0.8177255392074585, 0.822348415851593, 0.82683926820755], "val_loss": [1.9289358854293823, 1.0949677228927612, 0.9016364216804504, 0.8369660377502441, 0.7882269024848938, 0.668231189250946, 0.7497823238372803, 0.6462212204933167, 0.6085636615753174, 0.604312002658844, 0.6002106666564941, 0.5638846158981323, 0.5863242149353027, 0.5407647490501404, 0.5449079275131226, 0.515339732170105, 0.5251986384391785, 0.4899577498435974, 0.5156006813049316, 0.490927129983902, 0.4813779294490814, 0.4819595515727997, 0.46427062153816223, 0.46305638551712036, 0.4471229612827301, 0.4486123025417328, 0.4569108188152313, 0.4599788784980774, 0.4508708417415619, 0.4312346279621124, 0.4570975601673126, 0.43934178352355957, 0.432105153799057, 0.427573561668396, 0.41465914249420166], "val_accuracy": [0.47099998593330383, 0.6549999713897705, 0.6669999957084656, 0.6943333148956299, 0.6963333487510681, 0.753333330154419, 0.7080000042915344, 0.7596666812896729, 0.7676666378974915, 0.7603333592414856, 0.7763333320617676, 0.7850000262260437, 0.7716666460037231, 0.8003333210945129, 0.7946666479110718, 0.8113333582878113, 0.8009999990463257, 0.8133333325386047, 0.796999990940094, 0.8220000267028809, 0.8226666450500488, 0.8233333230018616, 0.828000009059906, 0.8316666483879089, 0.8346666693687439, 0.8360000252723694, 0.8309999704360962, 0.8316666483879089, 0.8336666822433472, 0.8450000286102295, 0.8243333101272583, 0.8396666646003723, 0.840666651725769, 0.8416666388511658, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [3, 2, 4, 2, 3, 5], [3, 2, 1, 3, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 5, 0, 6, 9, 8, 2], [2, 3, 1, 1, 0], [0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 8, 2, 5, 2, 1], [4, 0, 1, 6, 0], [52, 22], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 3, 2, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9840688705444336, 2.304492950439453, 2.3031704425811768, 2.3029606342315674, 2.303096294403076, 2.3030099868774414], "accuracy": [0.18438778817653656, 0.09866596013307571, 0.0952318087220192, 0.09800554811954498, 0.09457138925790787, 0.09840179979801178], "val_loss": [2.3046791553497314, 2.302715539932251, 2.3026535511016846, 2.3025760650634766, 2.3028104305267334, 2.302809000015259], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [6, 2, 3, 2, 3, 5, 7, 9], [2, 2, 1, 0, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 4, 9, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 2, 0, 2, 5, 2, 1, 5, 7, 8], [0, 6, 1, 6, 0, 1, 5], [0, 3], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 11, 7, 4, 2, 17, 10, 7, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.multiply(grad, tf.math.square(alpha))), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.square(alpha), grad)))), tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 1, 2], [33, 51, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 0, 2], [2, 0, 3, 4, 0], [98, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 0, 2, 1, 3], [6, 6, 2, 6, 0, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 0, 11, 6, 5, 2, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.subtract(tf.math.multiply(beta, grad), tf.constant(0.0, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303260087966919, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 4], [3, 2, 1, 0, 0, 0], [0, 39, 39], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 4, 2, 1], [0, 6, 1, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 12, 6, 6, 3, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.add(grad, alpha)), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30971360206604, 2.3103790283203125, 2.309446096420288, 2.3095431327819824, 2.3098483085632324, 2.309375524520874], "accuracy": [0.09021265059709549, 0.09430722147226334, 0.09655263274908066, 0.09760929644107819, 0.09219389408826828, 0.09681680053472519], "val_loss": [2.3093342781066895, 2.3093342781066895, 2.3093342781066895, 2.3093342781066895, 2.3093342781066895, 2.3093342781066895], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]