[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2082924842834473, 1.5923854112625122, 1.1553884744644165, 0.9964854717254639, 0.9103038907051086, 0.8508248329162598, 0.7924909591674805, 0.7677155137062073, 0.7346085906028748, 0.7057173848152161, 0.7074040770530701, 0.6786282062530518, 0.6718307733535767, 0.6366499066352844, 0.6497481465339661, 0.612967312335968, 0.61094731092453, 0.6063231825828552, 0.5948107838630676, 0.5913209319114685, 0.5738282799720764, 0.5670775771141052, 0.5773947238922119, 0.5497643351554871, 0.5333377718925476, 0.5348667502403259, 0.5364121794700623, 0.5214648842811584, 0.5155364274978638, 0.5157517194747925, 0.49671459197998047, 0.48883894085884094, 0.48820292949676514, 0.48698854446411133, 0.4741101861000061, 0.4757569134235382, 0.47830498218536377, 0.4565279483795166, 0.46212825179100037, 0.45572590827941895, 0.46003609895706177, 0.45042842626571655, 0.44539767503738403, 0.43503767251968384, 0.4365898072719574, 0.43281251192092896, 0.4421992003917694, 0.4243294894695282, 0.4266220033168793, 0.41871896386146545, 0.4098818600177765, 0.4112527072429657, 0.41115519404411316, 0.39972880482673645, 0.4007960855960846, 0.3967142403125763, 0.40342310070991516, 0.39214056730270386, 0.3878609836101532, 0.3847724199295044, 0.38524916768074036], "accuracy": [0.26760005950927734, 0.5152555704116821, 0.6019020080566406, 0.6409985423088074, 0.6737551093101501, 0.6787742972373962, 0.7092854380607605, 0.715889573097229, 0.7277770638465881, 0.7401928305625916, 0.733588695526123, 0.7424382567405701, 0.7539294958114624, 0.7646281719207764, 0.7588165402412415, 0.7664773464202881, 0.7734777331352234, 0.7721568942070007, 0.778232753276825, 0.7814027070999146, 0.7845727205276489, 0.7915731072425842, 0.7839123010635376, 0.7961959838867188, 0.8035926818847656, 0.7980451583862305, 0.8031964302062988, 0.8068947196006775, 0.8058380484580994, 0.8080834746360779, 0.8162726163864136, 0.8158763647079468, 0.8231409192085266, 0.8219521641731262, 0.8261788487434387, 0.8281601071357727, 0.8232730031013489, 0.8310658931732178, 0.8265751004219055, 0.8323867321014404, 0.8298771381378174, 0.8342359066009521, 0.8404437899589539, 0.841500461101532, 0.8429533839225769, 0.8425571322441101, 0.8348963260650635, 0.8426892161369324, 0.8455950617790222, 0.8453308939933777, 0.8520671129226685, 0.8510104417800903, 0.850350022315979, 0.8555012345314026, 0.8521991968154907, 0.8574824929237366, 0.8541803956031799, 0.8576145768165588, 0.8553691506385803, 0.8576145768165588, 0.8581429123878479], "val_loss": [1.9185140132904053, 1.101697325706482, 0.8924787640571594, 0.8793100714683533, 0.7318226099014282, 0.7397333979606628, 0.6803123354911804, 0.6427358984947205, 0.6228052973747253, 0.5864835977554321, 0.5781517028808594, 0.6052601933479309, 0.5539619326591492, 0.607825517654419, 0.5581070780754089, 0.5299211740493774, 0.5213887691497803, 0.5203679800033569, 0.5559030175209045, 0.5068908929824829, 0.4961710572242737, 0.5272785425186157, 0.5281991958618164, 0.49769580364227295, 0.46642398834228516, 0.4882644712924957, 0.4820162057876587, 0.4682857394218445, 0.4778307378292084, 0.4477618932723999, 0.471161425113678, 0.46148061752319336, 0.44451823830604553, 0.4449712038040161, 0.44603991508483887, 0.4610714018344879, 0.44867679476737976, 0.4313628077507019, 0.4244162142276764, 0.4252573251724243, 0.4214385449886322, 0.4296024441719055, 0.41601917147636414, 0.4143088459968567, 0.4087129831314087, 0.4158305525779724, 0.4042757451534271, 0.424699068069458, 0.4116493761539459, 0.4023399353027344, 0.4097674489021301, 0.4054614305496216, 0.39613839983940125, 0.388591468334198, 0.39188969135284424, 0.3894224464893341, 0.38936278223991394, 0.3929721713066101, 0.39646434783935547, 0.3893554210662842, 0.41454318165779114], "val_accuracy": [0.5956666469573975, 0.6553333401679993, 0.6853333115577698, 0.6909999847412109, 0.7250000238418579, 0.7146666646003723, 0.7379999756813049, 0.7636666893959045, 0.7689999938011169, 0.7730000019073486, 0.7883333563804626, 0.7546666860580444, 0.7839999794960022, 0.7703333497047424, 0.7923333048820496, 0.7990000247955322, 0.8029999732971191, 0.8019999861717224, 0.7889999747276306, 0.8146666884422302, 0.8149999976158142, 0.8090000152587891, 0.7879999876022339, 0.8146666884422302, 0.831333339214325, 0.8233333230018616, 0.8163333535194397, 0.8326666951179504, 0.815666675567627, 0.8330000042915344, 0.8266666531562805, 0.8370000123977661, 0.8376666903495789, 0.8376666903495789, 0.8443333506584167, 0.8243333101272583, 0.8410000205039978, 0.8416666388511658, 0.843666672706604, 0.8456666469573975, 0.8493333458900452, 0.840666651725769, 0.8479999899864197, 0.8500000238418579, 0.8536666631698608, 0.8500000238418579, 0.8536666631698608, 0.8416666388511658, 0.8500000238418579, 0.8556666374206543, 0.8543333411216736, 0.8523333072662354, 0.856333315372467, 0.8613333106040955, 0.8543333411216736, 0.8619999885559082, 0.859666645526886, 0.8576666712760925, 0.8543333411216736, 0.8556666374206543, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [13, 38, 39], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 1, 0, 1, 1, 1, 0, 1], [0, 7, 0, 2, 5], [2, 7, 1], [0], [0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 2, 8], [2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 4, 2, 2, 1, 2, 1, 1, 0, 7, 5, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(tf.math.sqrt(beta), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 0, 4, 8, 2, 8], [2, 0, 3, 1, 0], [65, 1], [0, 0, 0, 1, 0, 1, 0, 1], [5, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 8, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.sqrt(beta), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 9], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 1, 4, 8, 5], [4, 2, 3, 1, 0, 4, 3, 2], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 2, 0, 2, 5], [0, 6, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 20, 12, 8, 1, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(tf.math.sqrt(tf.math.square(grad)), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 6, 1, 1, 5], [1, 3, 1, 0, 2], [18, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 9, 5, 4, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.subtract(tf.math.square(alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]