[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.205739974975586, 1.5846669673919678, 1.1474021673202515, 0.9503718018531799, 0.8979583382606506, 0.8040587902069092, 0.775840163230896, 0.7351836562156677, 0.7497059106826782, 0.701295793056488, 0.6740306615829468, 0.6460846662521362, 0.6321333646774292, 0.6451361179351807, 0.6155017614364624, 0.6255531907081604, 0.5941094160079956, 0.5780999064445496, 0.5746033787727356, 0.5659399032592773, 0.5529899001121521, 0.5619141459465027, 0.5395016074180603, 0.527746319770813, 0.5286502242088318, 0.5450537204742432, 0.5099992156028748, 0.511768102645874, 0.5051191449165344, 0.49455371499061584, 0.4978392720222473, 0.4816370904445648, 0.4882880449295044, 0.47192445397377014, 0.4626879096031189, 0.4670495092868805, 0.45461922883987427, 0.4527082145214081, 0.46179771423339844, 0.4583713412284851, 0.4441571831703186, 0.4443419575691223, 0.42835500836372375, 0.4357736110687256, 0.4295739233493805, 0.42130932211875916], "accuracy": [0.26878878474235535, 0.5196143388748169, 0.6058644652366638, 0.6666226387023926, 0.6695284843444824, 0.7079645991325378, 0.7172104120254517, 0.7300224304199219, 0.7232862114906311, 0.7395324110984802, 0.7499669790267944, 0.763967752456665, 0.7701756954193115, 0.76106196641922, 0.7737419009208679, 0.7637035846710205, 0.7799497842788696, 0.7887993454933167, 0.7868181467056274, 0.7902522683143616, 0.7960638999938965, 0.785629391670227, 0.7985734939575195, 0.8083476424217224, 0.8057059645652771, 0.8010830879211426, 0.8049134612083435, 0.8127063512802124, 0.81548011302948, 0.8220842480659485, 0.8216879963874817, 0.8220842480659485, 0.8183859586715698, 0.8261788487434387, 0.8335754871368408, 0.8298771381378174, 0.8333113193511963, 0.8323867321014404, 0.8348963260650635, 0.8309338092803955, 0.8334434032440186, 0.8345000743865967, 0.8459912538528442, 0.8387266993522644, 0.8401796221733093, 0.8498216867446899], "val_loss": [1.9094921350479126, 1.0840438604354858, 0.8541165590286255, 0.7694641351699829, 0.7145633101463318, 0.6865890026092529, 0.6520410180091858, 0.6514052152633667, 0.6483903527259827, 0.6197320818901062, 0.6088346242904663, 0.5660898685455322, 0.5580211877822876, 0.5533955693244934, 0.5607647895812988, 0.5511918663978577, 0.5332403182983398, 0.5121169686317444, 0.5186108350753784, 0.50875324010849, 0.5340556502342224, 0.4898739457130432, 0.47328463196754456, 0.5344376564025879, 0.47072720527648926, 0.47005197405815125, 0.46016520261764526, 0.46287211775779724, 0.4590493440628052, 0.4711799621582031, 0.44286850094795227, 0.46619001030921936, 0.4418518841266632, 0.43154531717300415, 0.4347609579563141, 0.42666760087013245, 0.42112964391708374, 0.43039876222610474, 0.42362508177757263, 0.4336596727371216, 0.41683605313301086, 0.41242459416389465, 0.4089002311229706, 0.4138442873954773, 0.4069000780582428, 0.40681004524230957], "val_accuracy": [0.5950000286102295, 0.6633333563804626, 0.7020000219345093, 0.7110000252723694, 0.734000027179718, 0.746666669845581, 0.7559999823570251, 0.7563333511352539, 0.7400000095367432, 0.750333309173584, 0.7616666555404663, 0.7863333225250244, 0.7916666865348816, 0.7893333435058594, 0.7806666493415833, 0.7993333339691162, 0.7886666655540466, 0.8059999942779541, 0.7996666431427002, 0.815666675567627, 0.7913333177566528, 0.8173333406448364, 0.8256666660308838, 0.784333348274231, 0.8243333101272583, 0.8253333568572998, 0.8306666612625122, 0.8270000219345093, 0.8383333086967468, 0.8270000219345093, 0.8379999995231628, 0.8253333568572998, 0.8363333344459534, 0.843666672706604, 0.8383333086967468, 0.843999981880188, 0.8450000286102295, 0.8393333554267883, 0.8476666808128357, 0.8403333425521851, 0.8536666631698608, 0.8479999899864197, 0.8433333039283752, 0.8426666855812073, 0.8523333072662354, 0.8510000109672546]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [5, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 1, 4, 9, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 2, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12402588874101639, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [2, 9, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [31, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 7, 5, 2, 7], [0, 6, 1, 6, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5, 5, 9], [3, 1, 1, 0, 2], [0, 45, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2, 1, 4, 6, 1, 4, 0, 7, 2, 1, 3, 8, 3, 7, 2, 3, 3, 3, 1, 5, 8, 0, 8, 8, 4, 7, 9, 9, 7, 5, 3, 5, 9, 6, 1], [2, 0, 3, 1, 0, 3, 4, 5, 1, 0, 0, 0, 5, 0, 5, 2, 0, 4, 3, 3, 3, 1, 5, 1, 3], [16, 1, 4, 41, 39, 56, 88, 42, 45, 9], [0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5], [2, 6, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 2, 66, 41, 25, 10, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, alpha), tf.math.square(alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.pow(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad)))), grad), tf.math.subtract(tf.math.pow(tf.math.negative(alpha), tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.multiply(grad, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.sqrt(tf.math.negative(beta)))), tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.square(grad), grad)), tf.math.multiply(tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha)))), tf.math.divide_no_nan(tf.math.subtract(grad, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 2, 1, 2], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105156421661377, 2.3093209266662598, 2.310274362564087, 2.309807538986206, 2.309804677963257, 2.3100104331970215], "accuracy": [0.09509972482919693, 0.09800554811954498, 0.09628847241401672, 0.0936468094587326, 0.09140139818191528, 0.09589222073554993], "val_loss": [2.3083693981170654, 2.3083693981170654, 2.3083693981170654, 2.3083693981170654, 2.3083693981170654, 2.3083693981170654], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]