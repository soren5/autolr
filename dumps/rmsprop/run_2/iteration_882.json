[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8394285440444946, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213413953781128, 1.6143487691879272, 1.1711722612380981, 0.9499436616897583, 0.8837183713912964, 0.8076978325843811, 0.751882791519165, 0.7564772963523865, 0.7104856967926025, 0.6854611039161682, 0.6588769555091858, 0.6498282551765442, 0.6273785829544067, 0.6420750021934509, 0.6011896729469299, 0.6056408882141113, 0.5709943175315857, 0.5740918517112732, 0.5535184144973755, 0.5558004379272461, 0.5363767743110657, 0.5266314744949341, 0.521996021270752, 0.5150027275085449, 0.5071017742156982, 0.5036850571632385, 0.49473875761032104, 0.4889689087867737, 0.4914618730545044, 0.4719052016735077, 0.45883047580718994, 0.4663819372653961, 0.4577576220035553, 0.45738157629966736, 0.451151043176651], "accuracy": [0.25399550795555115, 0.5017831325531006, 0.5886936783790588, 0.6612072587013245, 0.6804913282394409, 0.7038700580596924, 0.726192057132721, 0.7125874757766724, 0.7392682433128357, 0.7409853339195251, 0.7493065595626831, 0.7606657147407532, 0.7668735980987549, 0.761590301990509, 0.7717606425285339, 0.7651565074920654, 0.7857614755630493, 0.7833839654922485, 0.7942147850990295, 0.7884030938148499, 0.8005547523498535, 0.8041210174560547, 0.8033285140991211, 0.8076872229576111, 0.8074230551719666, 0.8109893202781677, 0.8161405324935913, 0.8195747137069702, 0.8108572363853455, 0.8222163319587708, 0.828820526599884, 0.8244617581367493, 0.8308017253875732, 0.8310658931732178, 0.8352925777435303], "val_loss": [1.9334640502929688, 1.1571781635284424, 0.9033602476119995, 0.8137298226356506, 0.7811181545257568, 0.6950855255126953, 0.6673858761787415, 0.7023753523826599, 0.6196251511573792, 0.5997042655944824, 0.624251127243042, 0.6065888404846191, 0.5923776626586914, 0.558414101600647, 0.6017698049545288, 0.5493501424789429, 0.5422770977020264, 0.5350269079208374, 0.5418729782104492, 0.5234429240226746, 0.5119361877441406, 0.5297130942344666, 0.4922083020210266, 0.5126521587371826, 0.5187062621116638, 0.4893648624420166, 0.4794052243232727, 0.49281877279281616, 0.48811617493629456, 0.46517041325569153, 0.4621507525444031, 0.46981221437454224, 0.4641236960887909, 0.46667104959487915, 0.4534771740436554], "val_accuracy": [0.5353333353996277, 0.6233333349227905, 0.67166668176651, 0.7039999961853027, 0.6940000057220459, 0.7306666374206543, 0.7480000257492065, 0.7369999885559082, 0.7763333320617676, 0.7806666493415833, 0.7683333158493042, 0.7796666622161865, 0.7726666927337646, 0.7926666736602783, 0.7576666474342346, 0.7979999780654907, 0.7873333096504211, 0.7973333597183228, 0.7950000166893005, 0.8026666641235352, 0.8119999766349792, 0.8019999861717224, 0.8196666836738586, 0.8119999766349792, 0.8006666898727417, 0.8209999799728394, 0.8220000267028809, 0.8183333277702332, 0.8193333148956299, 0.8373333215713501, 0.8296666741371155, 0.8263333439826965, 0.8303333520889282, 0.8339999914169312, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 4, 5], [2, 2, 1, 0, 2, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 0, 8, 2, 8], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 6, 2, 1], [3, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 12, 8, 4, 1, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.sqrt(grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(sigma, grad), alpha)), tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 2, 2, 6, 5, 4, 7, 9], [0, 3, 2, 2, 2, 3], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 2, 0, 1, 0], [1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 15, 9, 6, 2, 2, 1, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.divide_no_nan(grad, tf.math.square(tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3111732006073, 2.3099782466888428, 2.310736656188965, 2.3108069896698, 2.310243844985962, 2.3098318576812744], "accuracy": [0.09338264167308807, 0.09496764093637466, 0.08796724677085876, 0.09060890227556229, 0.09338264167308807, 0.09430722147226334], "val_loss": [2.308445692062378, 2.308445692062378, 2.308445692062378, 2.308445692062378, 2.308445692062378, 2.308445692062378], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 3, 3, 1, 0], [69, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 0, 1, 5, 2, 1], [0, 6, 5, 0, 0], [0, 22, 63], [0, 1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 0, 12, 7, 5, 3, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3104584217071533, 2.3100898265838623, 2.310687303543091, 2.3087310791015625, 2.3100569248199463, 2.30997371673584], "accuracy": [0.09351472556591034, 0.09021265059709549, 0.08440100401639938, 0.0886276587843895, 0.08968432247638702, 0.09126931428909302], "val_loss": [2.308472156524658, 2.308472156524658, 2.308472156524658, 2.308472156524658, 2.308472156524658, 2.308472156524658], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 2, 6, 3, 5], [0, 2, 1, 2, 2], [2, 39, 39], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 0, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 6, 0, 2, 0, 4, 4], [0, 4, 1, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(tf.math.pow(alpha, grad), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309915065765381, 2.309980869293213, 2.3107810020446777, 2.3089544773101807, 2.310016632080078, 2.3100016117095947], "accuracy": [0.09760929644107819, 0.09179764986038208, 0.09192973375320435, 0.10210011899471283, 0.08836349099874496, 0.0886276587843895], "val_loss": [2.3086938858032227, 2.3086938858032227, 2.3086938858032227, 2.3086938858032227, 2.3086938858032227, 2.3086938858032227], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]