[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8057143092155457, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108564376831055, 1.595123529434204, 1.1335612535476685, 1.0017672777175903, 0.8700874447822571, 0.8006722927093506, 0.7747070789337158, 0.7402907609939575, 0.7370890974998474, 0.6788904666900635, 0.6843487620353699, 0.6765381693840027, 0.6373273134231567, 0.6349544525146484, 0.6212222576141357, 0.5955906510353088, 0.5907624363899231, 0.5830524563789368, 0.5641782283782959, 0.5620846748352051, 0.5718398094177246, 0.5401999354362488, 0.5399269461631775, 0.5246521830558777, 0.522129476070404, 0.5193431973457336, 0.5082001686096191, 0.507776141166687, 0.5023059248924255, 0.4934399425983429, 0.487809956073761, 0.4848978817462921, 0.47679242491722107, 0.47562846541404724, 0.4747752845287323, 0.45646408200263977, 0.466840922832489, 0.4523608684539795, 0.4439815878868103], "accuracy": [0.26865673065185547, 0.5087835192680359, 0.6086382269859314, 0.6369040012359619, 0.6890767216682434, 0.707040011882782, 0.7170783281326294, 0.7260599732398987, 0.724210798740387, 0.7500990629196167, 0.7420420050621033, 0.7503632307052612, 0.763439416885376, 0.7572315335273743, 0.7638356685638428, 0.7777044177055359, 0.7781006693840027, 0.7858935594558716, 0.7876105904579163, 0.789988100528717, 0.7881389260292053, 0.796328067779541, 0.8004226684570312, 0.8047813773155212, 0.8047813773155212, 0.8013472557067871, 0.8131026029586792, 0.8121780753135681, 0.8121780753135681, 0.8171972036361694, 0.8164047002792358, 0.8171972036361694, 0.8231409192085266, 0.8235371708869934, 0.8207634687423706, 0.826310932636261, 0.8300092220306396, 0.8339717388153076, 0.8364813327789307], "val_loss": [1.915391445159912, 1.106418490409851, 0.9166442155838013, 0.8267706632614136, 0.714849591255188, 0.7133673429489136, 0.6690190434455872, 0.6387746334075928, 0.6317248344421387, 0.6590133309364319, 0.589583158493042, 0.6382806897163391, 0.5644538998603821, 0.5697830319404602, 0.5381652116775513, 0.5346372127532959, 0.5247726440429688, 0.5319725871086121, 0.5315923690795898, 0.517505407333374, 0.5142782926559448, 0.5150963068008423, 0.48740750551223755, 0.4997735321521759, 0.4927448630332947, 0.48569563031196594, 0.47407016158103943, 0.4738253951072693, 0.49516919255256653, 0.4840857684612274, 0.4637809097766876, 0.4946167469024658, 0.48044002056121826, 0.45579230785369873, 0.46027010679244995, 0.4637085497379303, 0.4530555009841919, 0.4446495771408081, 0.47855839133262634], "val_accuracy": [0.5506666898727417, 0.6489999890327454, 0.6676666736602783, 0.7200000286102295, 0.7416666746139526, 0.7393333315849304, 0.7350000143051147, 0.7506666779518127, 0.765333354473114, 0.737666666507721, 0.7806666493415833, 0.75, 0.7839999794960022, 0.7793333530426025, 0.8066666722297668, 0.8026666641235352, 0.8100000023841858, 0.8029999732971191, 0.7993333339691162, 0.8193333148956299, 0.8190000057220459, 0.8063333630561829, 0.82833331823349, 0.8209999799728394, 0.8163333535194397, 0.828000009059906, 0.8316666483879089, 0.82833331823349, 0.8220000267028809, 0.8159999847412109, 0.8320000171661377, 0.8053333163261414, 0.8303333520889282, 0.843666672706604, 0.8330000042915344, 0.8330000042915344, 0.8396666646003723, 0.8433333039283752, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 9, 3, 3, 3, 4, 5, 4, 2, 7, 6, 7, 7, 6, 0, 1, 8, 8, 3, 6, 9, 1, 4, 1, 7, 4], [0, 2, 1, 0, 2, 3, 0, 1, 2, 0, 2, 2, 0, 3, 3, 2, 3, 1, 0, 0, 2, 1], [86, 39, 39, 95, 41, 37, 87, 66, 90], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 8, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1, 1], [0, 4], [2, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 53, 31, 22, 9, 3, 2, 1, 0, 8, 5, 3, 1, 4, 2, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.multiply(grad, alpha), tf.math.multiply(tf.math.pow(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(grad, tf.math.add(grad, tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(grad), tf.math.sqrt(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.subtract(grad, tf.math.pow(grad, tf.math.subtract(grad, grad))))), tf.math.add(alpha, tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1142133376.0, 21874604032.0, 100883603456.0, 281844842496.0, 598949953536.0, 1100340264960.0], "accuracy": [0.10091137140989304, 0.09972262382507324, 0.09826971590518951, 0.10051512718200684, 0.10355303436517715, 0.09906221181154251], "val_loss": [5299474944.0, 42390749184.0, 143062761472.0, 339103940608.0, 662304260096.0, 1144446517248.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 2, 3, 1, 0], [43, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 2, 0, 2, 5, 2, 1], [7, 6, 1, 6, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 7, 4, 3, 0, 10, 6, 4, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(grad, grad)), alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 3, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 5, 1], [57], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 2, 1, 1, 1, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094186782836914, 2.309896945953369, 2.3099849224090576, 2.308391571044922, 2.310267210006714, 2.31048321723938], "accuracy": [0.09338264167308807, 0.09113723784685135, 0.09087307006120682, 0.09787346422672272, 0.09259014576673508, 0.08875974267721176], "val_loss": [2.308687210083008, 2.308687210083008, 2.308687210083008, 2.308687210083008, 2.308687210083008, 2.308687210083008], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [9, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 70, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 2, 0, 2, 1, 2, 1, 1, 4, 3, 9, 8], [0, 6, 1, 3, 0, 1, 7, 0, 7], [0, 22, 22, 61], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 1, 0, 1, 7, 4, 3, 0, 21, 12, 9, 4, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(grad, alpha), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), alpha), grad)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308598041534424, 2.3092758655548096, 2.309239149093628, 2.309311866760254, 2.3089280128479004, 2.310410976409912], "accuracy": [0.09840179979801178, 0.09655263274908066, 0.09549596905708313, 0.09219389408826828, 0.0956280529499054, 0.09219389408826828], "val_loss": [2.3081979751586914, 2.3081979751586914, 2.3081979751586914, 2.3081979751586914, 2.3081979751586914, 2.3081979751586914], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]