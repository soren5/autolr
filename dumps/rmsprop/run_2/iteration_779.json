[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211472511291504, 1.6097508668899536, 1.170844554901123, 0.9763709306716919, 0.9209446310997009, 0.8551728129386902, 0.7943251132965088, 0.7694988250732422, 0.7271294593811035, 0.7255821824073792, 0.7028252482414246, 0.674939751625061, 0.6693283915519714, 0.6547802686691284, 0.6240954399108887, 0.6010437607765198, 0.607982337474823, 0.5829555988311768, 0.5869686603546143, 0.5723865032196045, 0.5751965641975403, 0.5551961660385132, 0.5467595458030701, 0.5462237596511841, 0.5242441296577454, 0.523327648639679, 0.5044437050819397, 0.516610860824585, 0.5055568814277649, 0.49580326676368713, 0.4999794661998749, 0.4904700219631195, 0.47558510303497314, 0.46835625171661377, 0.47787901759147644, 0.4646918773651123, 0.47227731347084045, 0.45974892377853394, 0.4520987570285797, 0.45675128698349, 0.4464349150657654, 0.43670907616615295, 0.4385480284690857, 0.4398334324359894, 0.4331827759742737, 0.4153127372264862, 0.42282530665397644, 0.4153327941894531, 0.42079564929008484, 0.40606942772865295, 0.39668554067611694, 0.40427061915397644], "accuracy": [0.2689208686351776, 0.5068022608757019, 0.5893540978431702, 0.6548672318458557, 0.6760005354881287, 0.6926429867744446, 0.7022850513458252, 0.7197200059890747, 0.7293620109558105, 0.7251353859901428, 0.7338528633117676, 0.7471932172775269, 0.7499669790267944, 0.7568352818489075, 0.7625148296356201, 0.7773081660270691, 0.7714964747428894, 0.7821952104568481, 0.7753269076347351, 0.7869502305984497, 0.7832518815994263, 0.7936864495277405, 0.7955356240272522, 0.7967243194580078, 0.8024039268493652, 0.8034605979919434, 0.8152159452438354, 0.8096684813499451, 0.8107251524925232, 0.8137630224227905, 0.8120459914207458, 0.8201030492782593, 0.8231409192085266, 0.82683926820755, 0.8220842480659485, 0.8294808864593506, 0.8238013386726379, 0.8280280232429504, 0.8342359066009521, 0.8302733898162842, 0.8345000743865967, 0.8397833704948425, 0.837141752243042, 0.8376700282096863, 0.8407079577445984, 0.8475762605667114, 0.8429533839225769, 0.8498216867446899, 0.8450667262077332, 0.8512746095657349, 0.8562937378883362, 0.8498216867446899], "val_loss": [1.924739956855774, 1.107870101928711, 0.8789585828781128, 0.8571283221244812, 0.756196141242981, 0.7334253191947937, 0.6940728425979614, 0.6437938809394836, 0.6637663841247559, 0.6038209795951843, 0.6063426733016968, 0.5837727785110474, 0.6196397542953491, 0.5884747505187988, 0.5500827431678772, 0.5318295359611511, 0.5331910848617554, 0.5128083229064941, 0.5187447667121887, 0.5112682580947876, 0.5030276775360107, 0.49096155166625977, 0.47898778319358826, 0.4859776198863983, 0.5213387608528137, 0.47185075283050537, 0.4639173150062561, 0.4580131471157074, 0.46695759892463684, 0.47101473808288574, 0.45359358191490173, 0.437984824180603, 0.43960538506507874, 0.4371010363101959, 0.4335291385650635, 0.44809237122535706, 0.4351167678833008, 0.42570075392723083, 0.4450102150440216, 0.4540834426879883, 0.4304749667644501, 0.43563753366470337, 0.42769497632980347, 0.41322585940361023, 0.41752737760543823, 0.40888386964797974, 0.41512638330459595, 0.4146323502063751, 0.4162881672382355, 0.42054426670074463, 0.4068550765514374, 0.40534913539886475], "val_accuracy": [0.5856666564941406, 0.6679999828338623, 0.6966666579246521, 0.699999988079071, 0.7070000171661377, 0.7059999704360962, 0.7473333477973938, 0.7670000195503235, 0.7476666569709778, 0.768666684627533, 0.7789999842643738, 0.7820000052452087, 0.7559999823570251, 0.762333333492279, 0.7903333306312561, 0.796999990940094, 0.7933333516120911, 0.7996666431427002, 0.8130000233650208, 0.8119999766349792, 0.8143333196640015, 0.8169999718666077, 0.8309999704360962, 0.8173333406448364, 0.8026666641235352, 0.8266666531562805, 0.8336666822433472, 0.8316666483879089, 0.8299999833106995, 0.8230000138282776, 0.8309999704360962, 0.8376666903495789, 0.8383333086967468, 0.8383333086967468, 0.8389999866485596, 0.8353333473205566, 0.8433333039283752, 0.840666651725769, 0.8316666483879089, 0.8296666741371155, 0.843666672706604, 0.8399999737739563, 0.8433333039283752, 0.8486666679382324, 0.8506666421890259, 0.8513333201408386, 0.8539999723434448, 0.8463333249092102, 0.8533333539962769, 0.8443333506584167, 0.8486666679382324, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 60, 39], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 6, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [6, 6, 1, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 1, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, alpha), tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(grad, grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033623695373535, 2.3025858402252197, 2.302584409713745, 2.30258846282959, 2.302579879760742, 2.3026113510131836], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302584409713745, 2.302581310272217, 2.302577257156372, 2.302574634552002, 2.3025729656219482, 2.3025765419006348], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 3, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 4, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 13, 8, 5, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [58.06470489501953, 1108.6754150390625, 1004.822021484375, 1221.016845703125, 698.0833740234375, 1346.93408203125, 1287.31982421875, 1229.9920654296875], "accuracy": [0.12310130894184113, 0.09509972482919693, 0.10474177449941635, 0.10051512718200684, 0.09681680053472519, 0.10434553027153015, 0.10672302544116974, 0.10302469879388809], "val_loss": [449.737548828125, 867.944580078125, 1312.572998046875, 557.5366821289062, 1112.3056640625, 1258.519287109375, 891.134521484375, 948.9801635742188], "val_accuracy": [0.09966666996479034, 0.10199999809265137, 0.10266666859388351, 0.10266666859388351, 0.09933333098888397, 0.09966666996479034, 0.10066666454076767, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 9, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 7, 4, 5, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 5, 3, 2, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038675785064697, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 6, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 6, 2, 6, 2], [0, 6, 1, 6, 0, 3, 7, 0, 2], [0, 22, 95], [0, 0, 0, 1, 1, 0], [0, 6, 3, 9], [2, 6], [0]], "fitness": -0.09628571569919586, "mapping_values": [1, 2, 1, 1, 1, 5, 3, 2, 1, 20, 11, 9, 3, 6, 4, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(alpha, grad), tf.math.divide_no_nan(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(tf.math.add(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.308793306350708, 2.311101198196411, 2.309997320175171, 2.3100037574768066, 2.309408187866211, 2.3084797859191895], "accuracy": [0.0948355570435524, 0.09232597798109055, 0.08994849026203156, 0.09457138925790787, 0.08519349992275238, 0.09430722147226334], "val_loss": [2.308845043182373, 2.308845043182373, 2.308845043182373, 2.308845043182373, 2.308845043182373, 2.308845043182373], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]