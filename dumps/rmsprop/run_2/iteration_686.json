[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213155746459961, 1.6113232374191284, 1.119506597518921, 1.0025842189788818, 0.8796362280845642, 0.8261262774467468, 0.7910047769546509, 0.7666197419166565, 0.7153490781784058, 0.7059271931648254, 0.6918658018112183, 0.6643555760383606, 0.638840913772583, 0.6413450837135315, 0.6273176670074463, 0.6073250770568848, 0.594131350517273, 0.5944114923477173, 0.5781968832015991, 0.5782608985900879, 0.5626810789108276, 0.5646898150444031, 0.5437831878662109, 0.5395323038101196, 0.5418288111686707, 0.5161418318748474, 0.522246778011322, 0.5173761248588562, 0.5087637901306152, 0.5058963298797607, 0.4974834620952606, 0.4809779226779938, 0.4869312047958374, 0.4708777070045471, 0.4731501042842865, 0.4799139201641083, 0.45812562108039856, 0.45721757411956787, 0.4525644779205322, 0.4488655924797058, 0.4501543939113617, 0.44440844655036926, 0.43607890605926514, 0.44685012102127075, 0.4350630044937134], "accuracy": [0.2603355050086975, 0.50785893201828, 0.614317774772644, 0.6444327235221863, 0.6831330060958862, 0.6930392384529114, 0.7117950320243835, 0.7186633348464966, 0.7375511527061462, 0.7432307600975037, 0.7448157668113708, 0.7524765729904175, 0.7675340175628662, 0.7617223858833313, 0.7672698497772217, 0.7757231593132019, 0.780610203742981, 0.7804781198501587, 0.7876105904579163, 0.7878747582435608, 0.7926297783851624, 0.7997622489929199, 0.8024039268493652, 0.7984414100646973, 0.8004226684570312, 0.8146876096725464, 0.8086118102073669, 0.8068947196006775, 0.8142913579940796, 0.8113855719566345, 0.8173292875289917, 0.8232730031013489, 0.8202351331710815, 0.828820526599884, 0.8272355198860168, 0.8257825970649719, 0.8341038227081299, 0.8348963260650635, 0.8374059200286865, 0.8383304476737976, 0.834632158279419, 0.8421608805656433, 0.8413683772087097, 0.834632158279419, 0.8433496356010437], "val_loss": [1.928365707397461, 1.1131774187088013, 0.8921678066253662, 0.8020097017288208, 0.7654249668121338, 0.7157161235809326, 0.6951372027397156, 0.6553264856338501, 0.6886850595474243, 0.6156669855117798, 0.6029745936393738, 0.6189277768135071, 0.6013104319572449, 0.5675719976425171, 0.5561015605926514, 0.5414654016494751, 0.5554203987121582, 0.5493797063827515, 0.5286116600036621, 0.5254517793655396, 0.5136379599571228, 0.5232043862342834, 0.49522876739501953, 0.5370745658874512, 0.49610236287117004, 0.4971999228000641, 0.49246516823768616, 0.471356600522995, 0.49236059188842773, 0.46348947286605835, 0.4566435217857361, 0.4625227749347687, 0.4557980000972748, 0.44387418031692505, 0.4462628662586212, 0.4407382905483246, 0.43362244963645935, 0.4396815598011017, 0.435528963804245, 0.43098804354667664, 0.43477311730384827, 0.4401053190231323, 0.4360252320766449, 0.4264145493507385, 0.4340209662914276], "val_accuracy": [0.6043333411216736, 0.6669999957084656, 0.6776666641235352, 0.7089999914169312, 0.7096666693687439, 0.7286666631698608, 0.7406666874885559, 0.7523333430290222, 0.734333336353302, 0.7703333497047424, 0.7733333110809326, 0.7683333158493042, 0.7696666717529297, 0.7820000052452087, 0.7863333225250244, 0.8023333549499512, 0.7950000166893005, 0.8046666383743286, 0.7986666560173035, 0.8063333630561829, 0.8033333420753479, 0.7923333048820496, 0.8193333148956299, 0.796999990940094, 0.8119999766349792, 0.8076666593551636, 0.8169999718666077, 0.8223333358764648, 0.8119999766349792, 0.8273333311080933, 0.8289999961853027, 0.8263333439826965, 0.8323333263397217, 0.8376666903495789, 0.831333339214325, 0.840666651725769, 0.8379999995231628, 0.8403333425521851, 0.8360000252723694, 0.8453333377838135, 0.8433333039283752, 0.8376666903495789, 0.8346666693687439, 0.8420000076293945, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [9, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [8, 51, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 4, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 4, 0], [16, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 1, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 0, 0], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 3, 2, 5, 2, 1], [5, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304103136062622, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 0], [0, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 6, 6, 8, 2, 6, 8, 5, 0, 1], [2, 0, 3, 1, 0, 3, 4], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 3, 1], [0, 6, 1, 6, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 12, 7, 5, 3, 19, 12, 7, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.sqrt(tf.math.square(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.subtract(alpha, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105549812316895, 2.310736894607544, 2.309601306915283, 2.309535503387451, 2.311004161834717, 2.310600519180298], "accuracy": [0.09391097724437714, 0.08889182657003403, 0.09153348207473755, 0.09417514503002167, 0.0886276587843895, 0.09259014576673508], "val_loss": [2.308830976486206, 2.308830976486206, 2.308830976486206, 2.308830976486206, 2.308830976486206, 2.308830976486206], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]