[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211437225341797, 1.5914108753204346, 1.1511971950531006, 0.976749062538147, 0.8940899968147278, 0.8358021378517151, 0.7614232897758484, 0.755024254322052, 0.7078744173049927, 0.7094642519950867, 0.684023380279541, 0.6533777713775635, 0.6268470883369446, 0.6393511891365051, 0.6137085556983948, 0.6055024266242981, 0.607967734336853, 0.5757991671562195, 0.5798139572143555, 0.554610550403595, 0.5501753687858582, 0.5573140382766724, 0.5284098982810974, 0.5240150094032288, 0.5173554420471191, 0.5233252644538879, 0.5175419449806213, 0.5174538493156433, 0.4912603199481964, 0.49932733178138733, 0.48258092999458313, 0.48994725942611694, 0.47694411873817444, 0.4695427119731903, 0.4699392318725586, 0.46029239892959595, 0.4499244689941406, 0.4492942988872528], "accuracy": [0.2604675590991974, 0.5143309831619263, 0.5933166146278381, 0.650640606880188, 0.6762647032737732, 0.7004358768463135, 0.719852089881897, 0.7153612375259399, 0.7428345084190369, 0.7331924438476562, 0.7437590956687927, 0.76106196641922, 0.7703077793121338, 0.761590301990509, 0.7740060687065125, 0.7763835787773132, 0.7721568942070007, 0.7942147850990295, 0.7865539789199829, 0.7988376617431641, 0.7989697456359863, 0.7992339134216309, 0.809140145778656, 0.8123101592063904, 0.8138951063156128, 0.8120459914207458, 0.8145555257797241, 0.8146876096725464, 0.8177255392074585, 0.8157442808151245, 0.8285563588142395, 0.8214238286018372, 0.8259146809577942, 0.8319904804229736, 0.8294808864593506, 0.8347642421722412, 0.8405758738517761, 0.8385946154594421], "val_loss": [1.9211342334747314, 1.0927436351776123, 0.8802950978279114, 0.7895684242248535, 0.7135722637176514, 0.6870408654212952, 0.6428003907203674, 0.6179093718528748, 0.6459113955497742, 0.5881510972976685, 0.5926125645637512, 0.5667387843132019, 0.5678441524505615, 0.5619046092033386, 0.5623801946640015, 0.52652907371521, 0.5123713612556458, 0.5297852158546448, 0.5079158544540405, 0.5035775303840637, 0.4896199107170105, 0.4901886284351349, 0.5018580555915833, 0.463273286819458, 0.4732646048069, 0.4664943516254425, 0.47088074684143066, 0.4617767035961151, 0.46680331230163574, 0.46468451619148254, 0.45890796184539795, 0.45100054144859314, 0.43280208110809326, 0.43792811036109924, 0.42456957697868347, 0.4321882426738739, 0.4277845025062561, 0.4204040467739105], "val_accuracy": [0.5843333601951599, 0.6486666798591614, 0.6859999895095825, 0.706333339214325, 0.7356666922569275, 0.7319999933242798, 0.7486666440963745, 0.7606666684150696, 0.746666669845581, 0.7676666378974915, 0.7703333497047424, 0.7836666703224182, 0.7856666445732117, 0.781000018119812, 0.7806666493415833, 0.7923333048820496, 0.8053333163261414, 0.7996666431427002, 0.8166666626930237, 0.8149999976158142, 0.8119999766349792, 0.8166666626930237, 0.8050000071525574, 0.8209999799728394, 0.8209999799728394, 0.8240000009536743, 0.8303333520889282, 0.824999988079071, 0.8230000138282776, 0.8259999752044678, 0.8316666483879089, 0.8293333053588867, 0.843666672706604, 0.8296666741371155, 0.840666651725769, 0.8370000123977661, 0.8379999995231628, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 62, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6, 8, 9, 2, 4, 9, 0], [2, 0, 4, 1, 0, 1], [16, 1, 43, 98], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 7, 2, 5], [0, 6, 1, 5], [49], [1], [0], [2], [0]], "fitness": -0.7857142686843872, "mapping_values": [1, 11, 6, 5, 3, 20, 14, 6, 4, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2944252490997314, 2.2541115283966064, 2.1958162784576416, 2.092336654663086, 1.9071227312088013, 1.6363967657089233, 1.4055500030517578, 1.2411121129989624, 1.1237843036651611, 1.0536867380142212, 1.0088584423065186, 0.9642223119735718, 0.9166205525398254, 0.8874232172966003, 0.8688312768936157, 0.8544322848320007, 0.8342432379722595, 0.823318362236023, 0.7994306087493896, 0.7759213447570801, 0.7767919898033142, 0.7621777057647705, 0.7554265856742859, 0.7462134957313538, 0.7371610999107361, 0.7230270504951477, 0.7192602157592773, 0.702954113483429, 0.705564022064209, 0.7010985612869263, 0.6888949275016785, 0.6863124966621399, 0.6822660565376282, 0.6830306649208069, 0.6830862760543823, 0.6711466312408447], "accuracy": [0.12521463632583618, 0.22572976350784302, 0.3156782388687134, 0.38568219542503357, 0.4321753978729248, 0.5001981258392334, 0.5334830284118652, 0.5684850215911865, 0.6078457236289978, 0.6272619366645813, 0.6424514651298523, 0.6579051613807678, 0.6688680648803711, 0.6752080321311951, 0.6869634389877319, 0.6946242451667786, 0.695813000202179, 0.6996433734893799, 0.7066437602043152, 0.7207766771316528, 0.7150970697402954, 0.7244749665260315, 0.7256637215614319, 0.7265883088111877, 0.7317395210266113, 0.7353057861328125, 0.7360982894897461, 0.7437590956687927, 0.7366266250610352, 0.7424382567405701, 0.7454761862754822, 0.7475894689559937, 0.7477215528488159, 0.7493065595626831, 0.750231146812439, 0.7577598690986633], "val_loss": [2.2659683227539062, 2.2160840034484863, 2.128892660140991, 1.965442419052124, 1.688909888267517, 1.3687907457351685, 1.1367603540420532, 0.9949541687965393, 0.9041551351547241, 0.845228910446167, 0.8024140000343323, 0.7743492126464844, 0.741115391254425, 0.7141743302345276, 0.6993698477745056, 0.6814559102058411, 0.6704177260398865, 0.6613287925720215, 0.6484071016311646, 0.6339893937110901, 0.6248400211334229, 0.6244210600852966, 0.621117353439331, 0.6083098649978638, 0.5937972068786621, 0.5894182324409485, 0.5841335654258728, 0.5801812410354614, 0.5746998190879822, 0.5782325267791748, 0.5593535304069519, 0.5635502338409424, 0.556169331073761, 0.5565032362937927, 0.5490307211875916, 0.5513444542884827], "val_accuracy": [0.25999999046325684, 0.44466665387153625, 0.5090000033378601, 0.5630000233650208, 0.6179999709129333, 0.6520000100135803, 0.6683333516120911, 0.6853333115577698, 0.6983333230018616, 0.7009999752044678, 0.7193333506584167, 0.7296666502952576, 0.737666666507721, 0.7409999966621399, 0.75, 0.7576666474342346, 0.746999979019165, 0.7599999904632568, 0.7526666522026062, 0.7603333592414856, 0.7726666927337646, 0.7590000033378601, 0.7666666507720947, 0.7639999985694885, 0.7789999842643738, 0.7789999842643738, 0.7850000262260437, 0.7823333144187927, 0.7886666655540466, 0.7850000262260437, 0.7956666946411133, 0.7823333144187927, 0.7953333258628845, 0.7919999957084656, 0.7956666946411133, 0.7853333353996277]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [24, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 2, 2, 3, 7, 7, 0, 7, 7, 2, 3, 0, 1, 7, 3, 1, 9, 1, 4, 1], [2, 0, 3, 1, 0, 3, 3, 3, 4, 4, 5, 3, 3, 2, 1, 4, 3, 4, 0], [16, 1, 15, 33], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 1, 2, 1, 2, 9, 6], [0, 6, 1, 0, 2, 4, 7], [74, 2, 59], [1], [0], [2], [0]], "fitness": -0.1834285706281662, "mapping_values": [1, 11, 6, 5, 3, 43, 24, 19, 4, 18, 11, 7, 3, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.add(grad, tf.math.add(tf.math.multiply(grad, tf.math.negative(grad)), tf.math.subtract(tf.math.add(grad, tf.math.multiply(tf.math.subtract(grad, beta), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(alpha, grad), grad)))))))), tf.math.subtract(grad, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.325343608856201, 2.282186985015869, 2.2830896377563477, 2.2818052768707275, 2.2823002338409424, 2.2784581184387207, 2.282040596008301], "accuracy": [0.0882314071059227, 0.12415797263383865, 0.12270505726337433, 0.1200634017586708, 0.12072381377220154, 0.12112006545066833, 0.12310130894184113], "val_loss": [2.2730884552001953, 2.2694525718688965, 2.269439697265625, 2.269439697265625, 2.269439697265625, 2.269439697265625, 2.269439697265625], "val_accuracy": [0.17499999701976776, 0.17866666615009308, 0.17866666615009308, 0.17866666615009308, 0.17866666615009308, 0.17866666615009308, 0.17866666615009308]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [9, 0, 2, 1, 9, 5], [3, 0, 1, 0, 2], [0, 9, 96], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 9, 8, 5], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 7, 5, 2, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3041059970855713, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 0, 3, 0, 1], [0, 5, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 5, 2, 9], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 0, 1], [0, 17], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 8, 4, 2, 4, 2, 2, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5755395176647885e+17, 1611818496.0, 413854564352.0, 106078075355136.0, 2.7320248315150336e+16, 6.93251702039511e+18], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [58754544.0, 15764147200.0, 4037028085760.0, 1033481203220480.0, 2.6457118802444288e+17, 6.773022413425738e+19], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]