[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206941843032837, 1.6047120094299316, 1.156898021697998, 0.9875051379203796, 0.9232892990112305, 0.8422901630401611, 0.8152089715003967, 0.7575483918190002, 0.7369955778121948, 0.7158054709434509, 0.6978052854537964, 0.6792489886283875, 0.6585715413093567, 0.6573325991630554, 0.6391111612319946, 0.6138747334480286, 0.6035264134407043, 0.5906506180763245, 0.5876508951187134, 0.5999487042427063, 0.5855262875556946, 0.5524067282676697, 0.548740565776825, 0.5428481101989746, 0.5367470383644104, 0.5349546074867249, 0.5274726152420044, 0.5040871500968933, 0.5232647061347961, 0.5087913274765015, 0.5007076859474182, 0.48841482400894165, 0.4899948835372925, 0.47223731875419617, 0.4809555113315582, 0.4749554991722107, 0.4724658727645874, 0.4650086462497711, 0.460900217294693, 0.455498605966568, 0.44931209087371826, 0.4365291893482208, 0.4396485686302185, 0.43075430393218994, 0.42668616771698, 0.43058618903160095, 0.4258791506290436, 0.4366292655467987, 0.4236254096031189, 0.4186004102230072, 0.41097238659858704, 0.4125968813896179, 0.4077819287776947, 0.3988778293132782, 0.4057074189186096, 0.39261502027511597, 0.4002908766269684, 0.38932129740715027, 0.39105483889579773, 0.3802373707294464, 0.3850495219230652, 0.3808518052101135, 0.3812336027622223, 0.36747482419013977], "accuracy": [0.2712983787059784, 0.49927353858947754, 0.591731607913971, 0.6470743417739868, 0.6679434776306152, 0.689869225025177, 0.7000396251678467, 0.7213049530982971, 0.7213049530982971, 0.7322678565979004, 0.7395324110984802, 0.7452120184898376, 0.7499669790267944, 0.7508915662765503, 0.7618544697761536, 0.7716285586357117, 0.7729493975639343, 0.7790252566337585, 0.7765156626701355, 0.7766477465629578, 0.7783648371696472, 0.7889314293861389, 0.7996301651000977, 0.8009510040283203, 0.8001585006713867, 0.7968564033508301, 0.8035926818847656, 0.8117818236351013, 0.8079513907432556, 0.8095363974571228, 0.811649739742279, 0.8208954930305481, 0.8201030492782593, 0.8234050869941711, 0.8197067975997925, 0.8231409192085266, 0.8230088353157043, 0.8277638554573059, 0.828292191028595, 0.833179235458374, 0.8338396549224854, 0.8352925777435303, 0.8392550349235535, 0.8432175517082214, 0.8413683772087097, 0.8428213000297546, 0.8444063067436218, 0.8425571322441101, 0.8432175517082214, 0.8417646288871765, 0.8444063067436218, 0.8466516733169556, 0.8473120927810669, 0.8533879518508911, 0.8508783578872681, 0.8564258217811584, 0.8535200357437134, 0.8573504090309143, 0.8577466607093811, 0.8640866279602051, 0.8556333184242249, 0.856689989566803, 0.8544445633888245, 0.863558292388916], "val_loss": [1.9052610397338867, 1.0738787651062012, 0.8806858658790588, 0.9562456607818604, 0.7607055902481079, 0.6819789409637451, 0.6556656360626221, 0.6272575855255127, 0.6403791904449463, 0.5866490602493286, 0.6397555470466614, 0.5877456665039062, 0.5624377727508545, 0.5784043073654175, 0.5433856844902039, 0.5297666192054749, 0.5154231786727905, 0.5723947882652283, 0.5256697535514832, 0.5576860308647156, 0.5078898668289185, 0.5046268701553345, 0.4838431775569916, 0.47618529200553894, 0.47445905208587646, 0.4794836938381195, 0.45743992924690247, 0.4622002840042114, 0.4673934876918793, 0.4534008800983429, 0.4473642110824585, 0.4608209729194641, 0.4453316926956177, 0.4578104317188263, 0.4649803340435028, 0.4371047019958496, 0.4550839960575104, 0.43124330043792725, 0.4431956708431244, 0.4237411320209503, 0.41230079531669617, 0.4159032702445984, 0.40434911847114563, 0.4047178030014038, 0.40418797731399536, 0.40445902943611145, 0.4051680564880371, 0.3932894766330719, 0.39520320296287537, 0.4013393521308899, 0.3982091546058655, 0.3934694826602936, 0.3987399935722351, 0.3990933299064636, 0.38662049174308777, 0.3954298794269562, 0.3986852765083313, 0.3896907567977905, 0.3881813883781433, 0.4118904769420624, 0.3884555995464325, 0.3869049549102783, 0.380092054605484, 0.3752608597278595], "val_accuracy": [0.5276666879653931, 0.6473333239555359, 0.6736666560173035, 0.6256666779518127, 0.7103333473205566, 0.746999979019165, 0.7509999871253967, 0.7570000290870667, 0.7456666827201843, 0.777999997138977, 0.7540000081062317, 0.7793333530426025, 0.7876666784286499, 0.7816666960716248, 0.7929999828338623, 0.7916666865348816, 0.8063333630561829, 0.7736666798591614, 0.7886666655540466, 0.7680000066757202, 0.8133333325386047, 0.8029999732971191, 0.8130000233650208, 0.8266666531562805, 0.8196666836738586, 0.8213333487510681, 0.8289999961853027, 0.8316666483879089, 0.8226666450500488, 0.8320000171661377, 0.8299999833106995, 0.8213333487510681, 0.8370000123977661, 0.8246666789054871, 0.8159999847412109, 0.8336666822433472, 0.8243333101272583, 0.8450000286102295, 0.8336666822433472, 0.8443333506584167, 0.8493333458900452, 0.8500000238418579, 0.8489999771118164, 0.8500000238418579, 0.8529999852180481, 0.8510000109672546, 0.8510000109672546, 0.8533333539962769, 0.856333315372467, 0.8533333539962769, 0.8573333621025085, 0.8583333492279053, 0.8489999771118164, 0.8486666679382324, 0.8550000190734863, 0.859666645526886, 0.859333336353302, 0.8526666760444641, 0.8633333444595337, 0.8516666889190674, 0.8600000143051147, 0.859000027179718, 0.8629999756813049, 0.8633333444595337]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 2, 3, 5], [0, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 8, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [8, 2, 3, 2, 3, 5, 1, 1, 9, 2, 8, 8, 4, 3, 6, 0, 5, 1, 5, 9, 5], [1, 2, 1, 0, 2, 2, 0, 2, 0, 0], [0, 39, 39, 63, 81, 45], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 9, 0, 6, 3, 1, 2], [2, 0, 3, 1, 0], [89, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [4, 2, 0, 9, 5, 7, 4, 6], [4, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 31, 21, 10, 6, 2, 1, 1, 0, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.multiply(grad, grad), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(grad, tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.add(grad, tf.math.pow(alpha, tf.math.divide_no_nan(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097667694091797, 2.3106801509857178, 2.3094472885131836, 2.310826539993286, 2.310258150100708, 2.309278726577759], "accuracy": [0.09549596905708313, 0.09272222965955734, 0.08598599582910538, 0.09853387624025345, 0.09232597798109055, 0.09391097724437714], "val_loss": [2.3085107803344727, 2.3085107803344727, 2.3085107803344727, 2.3085107803344727, 2.3085107803344727, 2.3085107803344727], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 1, 5, 2, 9], [0, 2, 1, 0, 2], [0, 78, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 6, 2, 1], [0, 6, 1, 6, 0, 7], [6, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 13, 8, 5, 3, 2, 1, 1, 0, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.square(alpha))), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.add(tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30863094329834, 2.3110406398773193, 2.3101134300231934, 2.3090977668762207, 2.3093316555023193, 2.310082197189331], "accuracy": [0.09760929644107819, 0.08453308790922165, 0.0886276587843895, 0.09060890227556229, 0.09153348207473755, 0.09047681838274002], "val_loss": [2.3085761070251465, 2.3085761070251465, 2.3085761070251465, 2.3085761070251465, 2.3085761070251465, 2.3085761070251465], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 2, 6, 3, 8, 2], [4, 0, 3, 3, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 5, 3], [0], [1], [0], [1], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(alpha, grad), sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309436798095703, 2.309537172317505, 2.309786319732666, 2.308502674102783, 2.3097481727600098, 2.3106119632720947], "accuracy": [0.09338264167308807, 0.09153348207473755, 0.09219389408826828, 0.0956280529499054, 0.09126931428909302, 0.09206181764602661], "val_loss": [2.3083465099334717, 2.3083465099334717, 2.3083465099334717, 2.3083465099334717, 2.3083465099334717, 2.3083465099334717], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]