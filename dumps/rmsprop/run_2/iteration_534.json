[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8368571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2121434211730957, 1.6050431728363037, 1.1278210878372192, 0.978500247001648, 0.8784151673316956, 0.8121345639228821, 0.784136950969696, 0.7827879190444946, 0.7395758032798767, 0.7107051014900208, 0.6864525675773621, 0.6778978109359741, 0.6497191190719604, 0.6323129534721375, 0.6429617404937744, 0.6196688413619995, 0.6091993451118469, 0.5860655307769775, 0.5803178548812866, 0.562823474407196, 0.5646704435348511, 0.5591046810150146, 0.5408048033714294, 0.5402314066886902, 0.533794641494751, 0.5271506309509277, 0.5166399478912354, 0.5173892378807068, 0.4944135844707489, 0.5072278380393982, 0.5050750970840454, 0.4838045537471771, 0.4855380356311798, 0.4734620749950409, 0.46407350897789, 0.45917555689811707, 0.4629780054092407, 0.45739564299583435, 0.4539550244808197, 0.44951558113098145], "accuracy": [0.27024170756340027, 0.5099722743034363, 0.6063928008079529, 0.6412627100944519, 0.684982180595398, 0.7046625018119812, 0.7127195596694946, 0.7137762308120728, 0.7264562249183655, 0.7387399077415466, 0.741909921169281, 0.7493065595626831, 0.7547219395637512, 0.7630431652069092, 0.7556465268135071, 0.7689869403839111, 0.7750627398490906, 0.783119797706604, 0.7790252566337585, 0.7924976944923401, 0.7915731072425842, 0.7923656105995178, 0.7979130744934082, 0.8017435073852539, 0.8045172095298767, 0.8061022162437439, 0.8104609847068787, 0.8059701323509216, 0.8153480291366577, 0.8157442808151245, 0.8149517774581909, 0.821820080280304, 0.8203672170639038, 0.8249900937080383, 0.8265751004219055, 0.8337075710296631, 0.8257825970649719, 0.8317263126373291, 0.8318583965301514, 0.8323867321014404], "val_loss": [1.9280452728271484, 1.105380892753601, 0.8794407844543457, 0.8177043199539185, 0.7431983947753906, 0.69793301820755, 0.767693281173706, 0.6853833198547363, 0.6767408847808838, 0.6162124276161194, 0.6217378377914429, 0.6194660067558289, 0.5982989072799683, 0.6256741285324097, 0.5796576142311096, 0.5704377293586731, 0.5585681796073914, 0.5417108535766602, 0.5428845286369324, 0.5466374754905701, 0.5334214568138123, 0.5476083755493164, 0.5385692715644836, 0.51861572265625, 0.5184100270271301, 0.5260515213012695, 0.5071654319763184, 0.4916169345378876, 0.5006657838821411, 0.5163716077804565, 0.4877036213874817, 0.4959968328475952, 0.4842053949832916, 0.48035433888435364, 0.4689945876598358, 0.501390814781189, 0.4773222804069519, 0.48399195075035095, 0.45171621441841125, 0.47582608461380005], "val_accuracy": [0.528333306312561, 0.6743333339691162, 0.6976666450500488, 0.7146666646003723, 0.7279999852180481, 0.7416666746139526, 0.7133333086967468, 0.7329999804496765, 0.7563333511352539, 0.7823333144187927, 0.7699999809265137, 0.7583333253860474, 0.777999997138977, 0.753000020980835, 0.7846666574478149, 0.7976666688919067, 0.7900000214576721, 0.8053333163261414, 0.8046666383743286, 0.7956666946411133, 0.8146666884422302, 0.7963333129882812, 0.79666668176651, 0.8169999718666077, 0.809333324432373, 0.79666668176651, 0.8176666498184204, 0.8190000057220459, 0.8183333277702332, 0.8063333630561829, 0.8240000009536743, 0.8206666707992554, 0.8236666917800903, 0.8253333568572998, 0.8370000123977661, 0.8130000233650208, 0.8303333520889282, 0.8220000267028809, 0.8349999785423279, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 2, 2], [0, 50, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 5, 6, 3, 9, 2], [2, 0, 3, 1, 0], [25, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 6, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 9, 5, 4, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.309534788131714, 2.3125083446502686, 2.312729597091675, 2.313835382461548, 2.3172154426574707, 2.319755792617798, 2.3227171897888184, 2.3257668018341064, 2.3305952548980713, 2.334339141845703, 2.3353304862976074, 2.342038869857788, 2.3456478118896484, 2.353642702102661, 2.3616726398468018], "accuracy": [0.09602430462837219, 0.08717474341392517, 0.0874389111995697, 0.09179764986038208, 0.08757099509239197, 0.08757099509239197, 0.08572183549404144, 0.08281600475311279, 0.08558975160121918, 0.08387266844511032, 0.09060890227556229, 0.09074098616838455, 0.0866464152932167, 0.09074098616838455, 0.09245806187391281], "val_loss": [2.3089981079101562, 2.310401439666748, 2.3124794960021973, 2.3149819374084473, 2.3178441524505615, 2.3210442066192627, 2.3241703510284424, 2.327239513397217, 2.330422878265381, 2.3340139389038086, 2.337893009185791, 2.3422858715057373, 2.3472533226013184, 2.3530874252319336, 2.360023260116577], "val_accuracy": [0.09266666322946548, 0.09166666865348816, 0.09233333170413971, 0.09300000220537186, 0.09533333033323288, 0.09700000286102295, 0.09933333098888397, 0.10133333504199982, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 2, 3, 2, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 5, 0], [0, 6, 2], [0], [1], [0], [0], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 9, 4, 5, 3, 2, 1, 1, 0, 7, 4, 3, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30881667137146, 2.3109092712402344, 2.3093295097351074, 2.3097758293151855, 2.3091540336608887, 2.31034779548645], "accuracy": [0.09457138925790787, 0.08915598690509796, 0.09734513610601425, 0.09668471664190292, 0.09800554811954498, 0.09338264167308807], "val_loss": [2.3086838722229004, 2.3086838722229004, 2.3086838722229004, 2.3086838722229004, 2.3086838722229004, 2.3086838722229004], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 5, 2, 3, 5, 7, 9], [0, 2, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 7, 0, 2, 5, 2, 1, 8, 3, 2, 6, 0, 3, 1, 0, 5], [0, 6, 1, 6, 0, 3, 2, 5, 3, 1], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 12, 8, 4, 3, 7, 5, 2, 2, 26, 16, 10, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha)))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, tf.math.sqrt(alpha)), grad))), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.negative(sigma), tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.square(beta)), grad), sigma)), alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107850551605225, 2.3105204105377197, 2.3097753524780273, 2.3094289302825928, 2.3110859394073486, 2.310177803039551], "accuracy": [0.08915598690509796, 0.0956280529499054, 0.0940430611371994, 0.0952318087220192, 0.09126931428909302, 0.08955223858356476], "val_loss": [2.309436082839966, 2.309436082839966, 2.309436082839966, 2.309436082839966, 2.309436082839966, 2.309436082839966], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [8, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 75, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 2, 1, 6, 3, 8, 2], [2, 3, 3, 1, 0, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1, 9], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 1, 0, 1, 1, 12, 6, 6, 2, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30952525138855, 2.3085458278656006, 2.310617208480835, 2.310248613357544, 2.3111181259155273, 2.3087358474731445], "accuracy": [0.08796724677085876, 0.0940430611371994, 0.09047681838274002, 0.09179764986038208, 0.09153348207473755, 0.09391097724437714], "val_loss": [2.3082542419433594, 2.3082542419433594, 2.3082542419433594, 2.3082542419433594, 2.3082542419433594, 2.3082542419433594], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]