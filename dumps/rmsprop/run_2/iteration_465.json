[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8134285807609558, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2123208045959473, 1.616379737854004, 1.1484533548355103, 1.0256657600402832, 0.8888237476348877, 0.8398157358169556, 0.7818994522094727, 0.765936017036438, 0.7452030777931213, 0.7108492851257324, 0.689799964427948, 0.6892818212509155, 0.6584600210189819, 0.6370629668235779, 0.641613245010376, 0.6163581013679504, 0.6092512607574463, 0.598516583442688, 0.5773481130599976, 0.5732521414756775, 0.5811020731925964, 0.5644065141677856, 0.5441136360168457, 0.5366766452789307, 0.538621187210083, 0.5382615327835083, 0.5148150324821472, 0.5178287029266357, 0.5085534453392029, 0.48749375343322754, 0.49499526619911194, 0.5003182888031006, 0.48023948073387146, 0.4713117182254791, 0.47105130553245544, 0.46759164333343506, 0.4696980118751526, 0.46284162998199463, 0.4651489853858948, 0.44702935218811035, 0.44336602091789246, 0.45094648003578186, 0.43774038553237915, 0.43509361147880554, 0.42181140184402466, 0.4204128086566925, 0.4203115701675415, 0.4234212040901184, 0.40643244981765747, 0.4054867625236511], "accuracy": [0.27077004313468933, 0.5068022608757019, 0.6069211363792419, 0.6317527294158936, 0.6740192770957947, 0.689869225025177, 0.713908314704895, 0.7140403985977173, 0.7257958054542542, 0.7383436560630798, 0.7413815855979919, 0.7390040755271912, 0.754589855670929, 0.7637035846710205, 0.7606657147407532, 0.7732135653495789, 0.7718927264213562, 0.7790252566337585, 0.7866860628128052, 0.7876105904579163, 0.7839123010635376, 0.7887993454933167, 0.8013472557067871, 0.8039889335632324, 0.7967243194580078, 0.802800178527832, 0.8104609847068787, 0.806630551815033, 0.8112534880638123, 0.8212917447090149, 0.8208954930305481, 0.8140271902084351, 0.8253863453865051, 0.8264430165290833, 0.8293488025665283, 0.8284242749214172, 0.8280280232429504, 0.8335754871368408, 0.8280280232429504, 0.8330471515655518, 0.8412362933158875, 0.8327829837799072, 0.8366134166717529, 0.8409721255302429, 0.8467837572097778, 0.8467837572097778, 0.8462554216384888, 0.8462554216384888, 0.8514066934585571, 0.8492933511734009], "val_loss": [1.9317421913146973, 1.1362687349319458, 0.8906499743461609, 0.7820530533790588, 0.7326897978782654, 0.7057214975357056, 0.6617606282234192, 0.6674028635025024, 0.6398952007293701, 0.6484771966934204, 0.6006489992141724, 0.5860565304756165, 0.5670045018196106, 0.5753467082977295, 0.5602731704711914, 0.538729190826416, 0.5480153560638428, 0.5256574153900146, 0.5299749970436096, 0.5240594148635864, 0.5206897854804993, 0.5114288926124573, 0.49690893292427063, 0.49062085151672363, 0.4989008903503418, 0.4877431094646454, 0.4786118268966675, 0.4778895974159241, 0.45776814222335815, 0.4613789916038513, 0.4799770414829254, 0.46703508496284485, 0.44472241401672363, 0.454487144947052, 0.45951810479164124, 0.4334154725074768, 0.459768146276474, 0.4915260374546051, 0.43191641569137573, 0.42295923829078674, 0.43252888321876526, 0.41609135270118713, 0.41937580704689026, 0.4195738434791565, 0.40889811515808105, 0.42868635058403015, 0.41034969687461853, 0.40704232454299927, 0.4140845239162445, 0.4149123430252075], "val_accuracy": [0.5136666893959045, 0.6326666474342346, 0.6846666932106018, 0.7016666531562805, 0.7396666407585144, 0.7436666488647461, 0.753000020980835, 0.7360000014305115, 0.7549999952316284, 0.7526666522026062, 0.7749999761581421, 0.7803333401679993, 0.7866666913032532, 0.781000018119812, 0.7976666688919067, 0.8026666641235352, 0.7963333129882812, 0.8106666803359985, 0.7926666736602783, 0.8159999847412109, 0.8100000023841858, 0.8096666932106018, 0.8256666660308838, 0.8289999961853027, 0.8223333358764648, 0.8236666917800903, 0.8289999961853027, 0.8286666870117188, 0.8360000252723694, 0.8296666741371155, 0.8193333148956299, 0.82833331823349, 0.8433333039283752, 0.840666651725769, 0.8360000252723694, 0.8496666550636292, 0.8356666564941406, 0.8136666417121887, 0.8473333120346069, 0.8539999723434448, 0.8416666388511658, 0.8506666421890259, 0.8473333120346069, 0.8523333072662354, 0.8550000190734863, 0.8446666598320007, 0.8510000109672546, 0.8536666631698608, 0.847000002861023, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 8, 1, 3, 5], [0, 2, 1, 0, 2], [0, 65, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 2, 0, 1, 3, 8, 2], [2, 4, 3, 0, 0, 5], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 6], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 13, 7, 6, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(beta), grad), tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 7], [2, 0, 2, 1, 0, 3], [16, 42], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 8, 5, 2, 1], [0, 4, 1, 6, 1], [0, 22], [0, 0, 0, 1], [0, 4, 9], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 7, 6, 2, 6, 5, 1, 1, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 4, 2, 2, 2, 9, 5, 4, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309976577758789, 2.310749053955078, 2.309192180633545, 2.310624837875366, 2.3093771934509277, 2.310072660446167], "accuracy": [0.08796724677085876, 0.09126931428909302, 0.09576013684272766, 0.09245806187391281, 0.0936468094587326, 0.09100515395402908], "val_loss": [2.3085289001464844, 2.3085289001464844, 2.3085289001464844, 2.3085289001464844, 2.3085289001464844, 2.3085289001464844], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 9, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.08628571778535843, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096837997436523, 2.310697317123413, 2.310187339782715, 2.309889316558838, 2.3096978664398193, 2.310307264328003], "accuracy": [0.09391097724437714, 0.08942015469074249, 0.09219389408826828, 0.09351472556591034, 0.0944393053650856, 0.09074098616838455], "val_loss": [2.309342384338379, 2.309342384338379, 2.309342384338379, 2.309342384338379, 2.309342384338379, 2.309342384338379], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}]