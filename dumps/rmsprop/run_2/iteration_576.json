[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8037142753601074, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108516693115234, 1.6186683177947998, 1.1675888299942017, 0.9973369836807251, 0.9013159275054932, 0.8339027762413025, 0.7865278124809265, 0.7730066776275635, 0.7231572866439819, 0.7157674431800842, 0.7014439702033997, 0.6990250945091248, 0.661540150642395, 0.680164635181427, 0.6421964764595032, 0.6304244995117188, 0.6172958612442017, 0.6211585402488708, 0.5792703628540039, 0.5867872834205627, 0.5723444223403931, 0.5564415454864502, 0.5411608815193176, 0.5436652898788452, 0.5327960848808289, 0.5436264276504517, 0.5269133448600769, 0.5044445395469666, 0.501560389995575, 0.5110015869140625, 0.49865013360977173, 0.4995467960834503, 0.49003174901008606, 0.470725417137146, 0.48401424288749695, 0.4711262881755829, 0.45672735571861267, 0.46117568016052246, 0.453239768743515, 0.4487383961677551, 0.4432079493999481, 0.44992682337760925, 0.4442070722579956, 0.4410462975502014, 0.4353886544704437], "accuracy": [0.26443007588386536, 0.49808478355407715, 0.5954299569129944, 0.6473385095596313, 0.6774534583091736, 0.6973979473114014, 0.7140403985977173, 0.7141724824905396, 0.7329282760620117, 0.7408532500267029, 0.7374191284179688, 0.7446836829185486, 0.7514199018478394, 0.7470611333847046, 0.7655527591705322, 0.7617223858833313, 0.7695152759552002, 0.7721568942070007, 0.7861577272415161, 0.7854973077774048, 0.7881389260292053, 0.7967243194580078, 0.8047813773155212, 0.7985734939575195, 0.8037247657775879, 0.8005547523498535, 0.8090080618858337, 0.8162726163864136, 0.8146876096725464, 0.8107251524925232, 0.8170651197433472, 0.8219521641731262, 0.8198388814926147, 0.8298771381378174, 0.8231409192085266, 0.8273676037788391, 0.8314621448516846, 0.833179235458374, 0.8378021121025085, 0.8366134166717529, 0.8424250483512878, 0.8384625315666199, 0.8364813327789307, 0.8368775844573975, 0.8425571322441101], "val_loss": [1.9199250936508179, 1.0916379690170288, 0.87734055519104, 0.8043732047080994, 0.7060968279838562, 0.6566705107688904, 0.6903964281082153, 0.6370387673377991, 0.6109173893928528, 0.6299865245819092, 0.5965495109558105, 0.5741268396377563, 0.5779842138290405, 0.5756245255470276, 0.5511327385902405, 0.5478159785270691, 0.5721611380577087, 0.5079096555709839, 0.5001062750816345, 0.5020678639411926, 0.5237431526184082, 0.4841790497303009, 0.4824362099170685, 0.46676138043403625, 0.4695352017879486, 0.4605714976787567, 0.4531306028366089, 0.4646672308444977, 0.4615437090396881, 0.4614284336566925, 0.4464745819568634, 0.4659726023674011, 0.43744996190071106, 0.4505116641521454, 0.43529051542282104, 0.4190383851528168, 0.4209015965461731, 0.42108529806137085, 0.42215853929519653, 0.4145660698413849, 0.41138118505477905, 0.41850805282592773, 0.4065380096435547, 0.4244535267353058, 0.40590810775756836], "val_accuracy": [0.5076666474342346, 0.6576666831970215, 0.6976666450500488, 0.7066666483879089, 0.7396666407585144, 0.7516666650772095, 0.7196666598320007, 0.7446666955947876, 0.7540000081062317, 0.7536666393280029, 0.7630000114440918, 0.765333354473114, 0.765333354473114, 0.7856666445732117, 0.7889999747276306, 0.7873333096504211, 0.7829999923706055, 0.8043333292007446, 0.8203333616256714, 0.7996666431427002, 0.7906666398048401, 0.8203333616256714, 0.8220000267028809, 0.8259999752044678, 0.8186666369438171, 0.8286666870117188, 0.8346666693687439, 0.8253333568572998, 0.8183333277702332, 0.82833331823349, 0.8363333344459534, 0.8173333406448364, 0.8336666822433472, 0.8266666531562805, 0.8306666612625122, 0.8443333506584167, 0.8423333168029785, 0.8429999947547913, 0.8393333554267883, 0.8479999899864197, 0.847000002861023, 0.8396666646003723, 0.843666672706604, 0.8360000252723694, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 9, 7], [0, 2, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 3, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 2, 2, 5, 2, 1], [0, 6, 6, 6, 0], [0, 3], [1], [0], [6], [0]], "fitness": -0.14171428978443146, "mapping_values": [1, 13, 8, 5, 3, 5, 3, 2, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(grad))), tf.math.add(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.6473329067230225, 2.814324140548706, 2.3099734783172607, 2.3044986724853516, 2.3033318519592285, 2.302999973297119], "accuracy": [0.17857614159584045, 0.19178444147109985, 0.09998679161071777, 0.09774138033390045, 0.09272222965955734, 0.09800554811954498], "val_loss": [2.165513515472412, 2.315279245376587, 2.3050038814544678, 2.303037166595459, 2.302762746810913, 2.302617073059082], "val_accuracy": [0.14100000262260437, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 28, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 0, 3, 8, 2, 1], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 13, 8, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12468630075454712, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 6, 2, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 0, 0, 6, 8, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 9, 1, 0], [0, 3, 1, 2, 0], [10, 24], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 11, 8, 3, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.58972930908203, 10865.9501953125, 178717.09375, 1282917.75, 5611020.0, 18693494.0], "accuracy": [0.10051512718200684, 0.10579843819141388, 0.10302469879388809, 0.09879804402589798, 0.10117553919553757, 0.09893012791872025], "val_loss": [803.5782470703125, 39448.4765625, 419205.34375, 2278570.75, 8523890.0, 25125860.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 5, 2, 3, 4], [0, 1, 2, 1, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 2, 0, 2, 1, 4, 1, 0, 9], [7, 6, 1, 6, 0, 1], [0, 34], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 10, 6, 4, 1, 17, 11, 6, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.subtract(alpha, tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]