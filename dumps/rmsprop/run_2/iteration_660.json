[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8025714159011841, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214501142501831, 1.619362711906433, 1.1393756866455078, 0.991323709487915, 0.8786591291427612, 0.8382741808891296, 0.7741796374320984, 0.7523357272148132, 0.7033703327178955, 0.7287962436676025, 0.6779299974441528, 0.653355062007904, 0.6592329740524292, 0.6400314569473267, 0.6102763414382935, 0.6226098537445068, 0.5965067744255066, 0.5867190957069397, 0.5677503347396851, 0.5643614530563354, 0.548523485660553, 0.5580793023109436, 0.5629771947860718, 0.5278304219245911, 0.5175024271011353, 0.5241797566413879, 0.4989791214466095, 0.5088285803794861, 0.4997502267360687, 0.49489685893058777, 0.4792667627334595, 0.48188814520835876, 0.47755512595176697, 0.4694198966026306, 0.46361294388771057, 0.457961767911911, 0.453100323677063, 0.439697802066803, 0.43798643350601196, 0.4421597719192505, 0.4434495270252228, 0.43928879499435425, 0.43870705366134644, 0.41413453221321106, 0.4186418950557709, 0.4259992837905884, 0.41473227739334106, 0.42089447379112244, 0.40969112515449524, 0.41044288873672485, 0.4130411446094513], "accuracy": [0.260071337223053, 0.5106326937675476, 0.6083740592002869, 0.643772304058075, 0.683529257774353, 0.6934354901313782, 0.7181349992752075, 0.7205125093460083, 0.7405890822410583, 0.7322678565979004, 0.7473253011703491, 0.7630431652069092, 0.7540615797042847, 0.7573636174201965, 0.7746664881706238, 0.76542067527771, 0.7766477465629578, 0.780610203742981, 0.7923656105995178, 0.7893276810646057, 0.802271842956543, 0.7955356240272522, 0.789988100528717, 0.8075551390647888, 0.8142913579940796, 0.802800178527832, 0.8158763647079468, 0.8087438941001892, 0.8175934553146362, 0.8211596608161926, 0.8235371708869934, 0.8142913579940796, 0.8238013386726379, 0.8241975903511047, 0.8284242749214172, 0.8289526104927063, 0.8337075710296631, 0.841500461101532, 0.8400475382804871, 0.8407079577445984, 0.8356888294219971, 0.8372738361358643, 0.8381983637809753, 0.8481045961380005, 0.8454629778862, 0.8507462739944458, 0.845859169960022, 0.8462554216384888, 0.8481045961380005, 0.8510104417800903, 0.847840428352356], "val_loss": [1.937126636505127, 1.109654426574707, 0.868908703327179, 0.7849477529525757, 0.7550601959228516, 0.7205275297164917, 0.6713986396789551, 0.6658020615577698, 0.6588582992553711, 0.6347559690475464, 0.6824594140052795, 0.6468968391418457, 0.6400853991508484, 0.5747061967849731, 0.6155598163604736, 0.5669041872024536, 0.560788094997406, 0.5343472361564636, 0.5464216470718384, 0.5252183675765991, 0.5277726054191589, 0.5625762939453125, 0.5256679058074951, 0.5250375866889954, 0.5402531027793884, 0.5028285980224609, 0.5108225345611572, 0.5089805722236633, 0.5079869627952576, 0.4890526533126831, 0.49436092376708984, 0.4857334792613983, 0.4813406467437744, 0.4897015690803528, 0.4801272749900818, 0.47130534052848816, 0.45968741178512573, 0.4706093370914459, 0.4602556526660919, 0.45831140875816345, 0.4566023349761963, 0.4618138372898102, 0.45253315567970276, 0.45499417185783386, 0.4645511209964752, 0.44025418162345886, 0.4385685622692108, 0.44782477617263794, 0.46380510926246643, 0.44079434871673584, 0.4344659447669983], "val_accuracy": [0.5839999914169312, 0.6526666879653931, 0.7003333568572998, 0.7193333506584167, 0.7103333473205566, 0.7229999899864197, 0.7316666841506958, 0.7563333511352539, 0.7613333463668823, 0.768666684627533, 0.7480000257492065, 0.7483333349227905, 0.746999979019165, 0.7820000052452087, 0.768666684627533, 0.781333327293396, 0.7903333306312561, 0.796999990940094, 0.7973333597183228, 0.8083333373069763, 0.8029999732971191, 0.7923333048820496, 0.8136666417121887, 0.8023333549499512, 0.8029999732971191, 0.8180000185966492, 0.8176666498184204, 0.8140000104904175, 0.8113333582878113, 0.8223333358764648, 0.8190000057220459, 0.8209999799728394, 0.8253333568572998, 0.8240000009536743, 0.8256666660308838, 0.8309999704360962, 0.8333333134651184, 0.8253333568572998, 0.8320000171661377, 0.8363333344459534, 0.8346666693687439, 0.8353333473205566, 0.8353333473205566, 0.8379999995231628, 0.8326666951179504, 0.8450000286102295, 0.8420000076293945, 0.8383333086967468, 0.8320000171661377, 0.8433333039283752, 0.843999981880188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 6, 7, 3, 1, 8, 5, 0, 9], [0, 2, 1, 0, 2, 2, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 2, 5, 2, 1, 7, 7, 4, 6, 5, 7], [0, 6, 1, 4, 0, 4, 1, 0, 0, 7], [61, 22, 46, 74], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 3, 12, 7, 5, 2, 23, 13, 10, 4, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.subtract(tf.math.sqrt(grad), tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.math.add(grad, tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)), alpha), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [7, 2, 9, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 4, 0, 5, 3, 1], [0, 6, 3, 6, 0], [0, 36], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 7, 4], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 3, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.167543971209767e+26, 1369.5699462890625, 1502.2073974609375, 1432.5364990234375, 1499.2572021484375, 1634.717041015625, 1111.616943359375, 1330.196533203125, 1259.5794677734375, 1323.18310546875], "accuracy": [0.10355303436517715, 0.09826971590518951, 0.09694888442754745, 0.10210011899471283, 0.10011887550354004, 0.10632677376270294, 0.1018359512090683, 0.09734513610601425, 0.10011887550354004, 0.09509972482919693], "val_loss": [1594.920166015625, 1305.7984619140625, 1544.579345703125, 1351.04931640625, 2268.5, 1516.95947265625, 1426.8465576171875, 1028.6492919921875, 1292.5621337890625, 1766.45849609375], "val_accuracy": [0.09700000286102295, 0.10300000011920929, 0.10133333504199982, 0.10000000149011612, 0.10466666519641876, 0.10066666454076767, 0.0963333323597908, 0.1003333330154419, 0.10300000011920929, 0.10466666519641876]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 3, 0, 1], [0, 25, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 3, 5, 1, 0], [87, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 3, 4, 2, 1], [0, 6, 1, 4, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09600000083446503, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 0, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309234619140625, 2.306483030319214, 2.306964874267578, 2.3060617446899414, 2.3048932552337646, 2.304212808609009, 2.3042197227478027, 2.303964138031006, 2.3034415245056152, 2.303511619567871, 2.3033785820007324, 2.3027093410491943, 2.3026485443115234, 2.3023407459259033, 2.30197811126709, 2.301976203918457], "accuracy": [0.09338264167308807, 0.09800554811954498, 0.09074098616838455, 0.09668471664190292, 0.09826971590518951, 0.09774138033390045, 0.09153348207473755, 0.10077928751707077, 0.09245806187391281, 0.09206181764602661, 0.09100515395402908, 0.09417514503002167, 0.09945846349000931, 0.09417514503002167, 0.09179764986038208, 0.08902391046285629], "val_loss": [2.3074212074279785, 2.306204080581665, 2.3053677082061768, 2.304875373840332, 2.3044819831848145, 2.304065465927124, 2.3038442134857178, 2.3034865856170654, 2.3031601905822754, 2.3029258251190186, 2.302684783935547, 2.3024237155914307, 2.3022451400756836, 2.3021187782287598, 2.3021295070648193, 2.3021891117095947], "val_accuracy": [0.08900000154972076, 0.08833333104848862, 0.08900000154972076, 0.09099999815225601, 0.09200000017881393, 0.09000000357627869, 0.09066666662693024, 0.09266666322946548, 0.09133332967758179, 0.09300000220537186, 0.09333333373069763, 0.09133332967758179, 0.09166666865348816, 0.08900000154972076, 0.08566666394472122, 0.08233333379030228]}}]