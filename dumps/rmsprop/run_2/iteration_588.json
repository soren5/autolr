[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8657143115997314, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.553265929222107, 0.85453861951828, 0.6951126456260681, 0.6417160630226135, 0.594848096370697, 0.5547066926956177, 0.5182081460952759, 0.5041377544403076, 0.4794104993343353, 0.47085386514663696, 0.458874374628067, 0.4458868205547333, 0.43521034717559814, 0.41706743836402893, 0.42186886072158813, 0.40135419368743896, 0.3918980658054352, 0.3924863040447235, 0.3764365017414093, 0.3686660826206207, 0.36656612157821655, 0.3627268373966217, 0.3634563386440277, 0.35341760516166687, 0.35034114122390747, 0.3460384011268616, 0.3450535237789154, 0.33352041244506836, 0.3332812190055847, 0.32164493203163147, 0.3236733376979828, 0.31893014907836914, 0.31595271825790405, 0.3122769296169281, 0.3071374297142029, 0.30685490369796753, 0.30151113867759705, 0.29852980375289917, 0.29517850279808044, 0.29506033658981323, 0.28887227177619934, 0.28770366311073303, 0.28502950072288513, 0.277906596660614], "accuracy": [0.44406285881996155, 0.6931713223457336, 0.7498348951339722, 0.7651565074920654, 0.7858935594558716, 0.7979130744934082, 0.8144234418869019, 0.8157442808151245, 0.8325188159942627, 0.835160493850708, 0.8381983637809753, 0.8424250483512878, 0.8481045961380005, 0.8565579056739807, 0.8516708612442017, 0.8549728989601135, 0.8650112152099609, 0.8693699836730957, 0.868049144744873, 0.8677849769592285, 0.871879518032074, 0.8741249442100525, 0.872407853603363, 0.8768987059593201, 0.8778232932090759, 0.8758420348167419, 0.8794082403182983, 0.8829745054244995, 0.8870691061019897, 0.8861445188522339, 0.887597382068634, 0.8879936337471008, 0.8907673954963684, 0.889578640460968, 0.8910315632820129, 0.8945978283882141, 0.8975036144256592, 0.8945978283882141, 0.8975036144256592, 0.8957865834236145, 0.8989565372467041, 0.8980319499969482, 0.90423983335495, 0.9019944667816162], "val_loss": [0.9152910113334656, 0.6493937373161316, 0.5760699510574341, 0.5483265519142151, 0.5223461985588074, 0.49424105882644653, 0.4756125807762146, 0.4578591585159302, 0.45458826422691345, 0.44401928782463074, 0.4504248797893524, 0.43405696749687195, 0.41838353872299194, 0.4183504581451416, 0.4129572808742523, 0.4156229794025421, 0.3959205746650696, 0.3936011493206024, 0.39167359471321106, 0.39671117067337036, 0.38852018117904663, 0.3949359059333801, 0.3813638389110565, 0.3776390850543976, 0.3809013366699219, 0.3799983263015747, 0.3773766756057739, 0.3738490343093872, 0.37159040570259094, 0.3681413531303406, 0.3831099569797516, 0.36778590083122253, 0.36691755056381226, 0.3608981966972351, 0.36405131220817566, 0.36149775981903076, 0.3671475052833557, 0.3573682904243469, 0.35654857754707336, 0.3521009087562561, 0.3538167178630829, 0.35091090202331543, 0.3581313490867615, 0.3587125241756439], "val_accuracy": [0.6643333435058594, 0.7590000033378601, 0.7770000100135803, 0.7950000166893005, 0.8040000200271606, 0.8166666626930237, 0.8203333616256714, 0.8303333520889282, 0.8389999866485596, 0.8356666564941406, 0.8376666903495789, 0.8399999737739563, 0.8456666469573975, 0.8483333587646484, 0.8463333249092102, 0.8500000238418579, 0.859000027179718, 0.8583333492279053, 0.8583333492279053, 0.859000027179718, 0.859333336353302, 0.8603333234786987, 0.8643333315849304, 0.8656666874885559, 0.8643333315849304, 0.8643333315849304, 0.862666666507721, 0.8659999966621399, 0.8653333187103271, 0.8679999709129333, 0.8616666793823242, 0.8659999966621399, 0.8673333525657654, 0.8700000047683716, 0.8693333268165588, 0.8676666617393494, 0.8696666955947876, 0.8713333606719971, 0.8736666440963745, 0.8730000257492065, 0.8700000047683716, 0.8736666440963745, 0.8730000257492065, 0.871666669845581]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.801714301109314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2107934951782227, 1.595629096031189, 1.1480060815811157, 0.9933704137802124, 0.9072535037994385, 0.8306576013565063, 0.7892128229141235, 0.76485276222229, 0.7578555941581726, 0.7105231285095215, 0.7131087779998779, 0.672421932220459, 0.6514691114425659, 0.6575527191162109, 0.6246940493583679, 0.6351518630981445, 0.615107536315918, 0.6021338701248169, 0.6011371612548828, 0.5982244610786438, 0.5723164081573486, 0.5702462792396545, 0.564357340335846, 0.5515181422233582, 0.5410434007644653, 0.5310253500938416, 0.5335656404495239, 0.5093957185745239, 0.5221505761146545, 0.5228959918022156, 0.5090177655220032, 0.5015389323234558, 0.48969021439552307, 0.4907885789871216, 0.4808530807495117, 0.47860416769981384, 0.4685235321521759, 0.4727770984172821, 0.46678969264030457, 0.4600985050201416, 0.45538821816444397, 0.4513236880302429, 0.4546251595020294, 0.44639483094215393], "accuracy": [0.2662792205810547, 0.5046889185905457, 0.5979394912719727, 0.6479989290237427, 0.6709813475608826, 0.7018887996673584, 0.7112666964530945, 0.7224937081336975, 0.7228899598121643, 0.7376832365989685, 0.7372870445251465, 0.7491744756698608, 0.7640998363494873, 0.7601373791694641, 0.7700436115264893, 0.7646281719207764, 0.7697794437408447, 0.7736098170280457, 0.7733456492424011, 0.7807422876358032, 0.7880068421363831, 0.7881389260292053, 0.7887993454933167, 0.7985734939575195, 0.7992339134216309, 0.8067626357078552, 0.8026680946350098, 0.8125742673873901, 0.8075551390647888, 0.8063663840293884, 0.8124422430992126, 0.8150838613510132, 0.8241975903511047, 0.8204993009567261, 0.8248580098152161, 0.8234050869941711, 0.8276317715644836, 0.8297450542449951, 0.8317263126373291, 0.833179235458374, 0.8363492488861084, 0.8317263126373291, 0.8355567455291748, 0.8360850811004639], "val_loss": [1.9150315523147583, 1.1309560537338257, 0.9479545950889587, 0.8863558173179626, 0.7386581897735596, 0.7182369828224182, 0.6646850109100342, 0.6827306151390076, 0.6207021474838257, 0.6247334480285645, 0.5972690582275391, 0.5817734599113464, 0.5708571672439575, 0.5562435984611511, 0.6001310348510742, 0.536584734916687, 0.5250938534736633, 0.5405330657958984, 0.5232968926429749, 0.5290942192077637, 0.5166207551956177, 0.5105701684951782, 0.5016030073165894, 0.5096422433853149, 0.49132952094078064, 0.4695793390274048, 0.4684499502182007, 0.46954554319381714, 0.4680313766002655, 0.4900226294994354, 0.4713135063648224, 0.4523654878139496, 0.45161691308021545, 0.4614658057689667, 0.47151386737823486, 0.4355061948299408, 0.4416264593601227, 0.4314190149307251, 0.4368404150009155, 0.4277613162994385, 0.43581026792526245, 0.4293268322944641, 0.4282398819923401, 0.4224494695663452], "val_accuracy": [0.5666666626930237, 0.6309999823570251, 0.6539999842643738, 0.6823333501815796, 0.7203333377838135, 0.7386666536331177, 0.7620000243186951, 0.7463333606719971, 0.7776666879653931, 0.7666666507720947, 0.7806666493415833, 0.7866666913032532, 0.7973333597183228, 0.7976666688919067, 0.7820000052452087, 0.8073333501815796, 0.8083333373069763, 0.7979999780654907, 0.8066666722297668, 0.8109999895095825, 0.8109999895095825, 0.812666654586792, 0.8196666836738586, 0.8146666884422302, 0.8240000009536743, 0.828000009059906, 0.8303333520889282, 0.8333333134651184, 0.8303333520889282, 0.8196666836738586, 0.8243333101272583, 0.8309999704360962, 0.8420000076293945, 0.828000009059906, 0.824999988079071, 0.8450000286102295, 0.8426666855812073, 0.8403333425521851, 0.8456666469573975, 0.8433333039283752, 0.8399999737739563, 0.8456666469573975, 0.8410000205039978, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 72, 86], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 3], [4, 0, 3, 1, 0, 4], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 0, 2, 2, 5, 9, 8], [0, 6, 1], [92, 52], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 14, 8, 6, 2, 11, 8, 3, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 2, 0, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 5], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 1], [0, 6, 4, 6, 0], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 1, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, alpha))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [27200.552734375, 557940539392.0, 9.024911287552836e+18, 6.92249120179691e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09826971590518951, 0.10077928751707077, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1952781.0, 34616262000640.0, 5.7463144642978093e+20, 2.3025853633880615, NaN, NaN, NaN, NaN, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09533333033323288, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 3], [2, 2, 1, 1, 2], [88, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 1, 1, 6, 0], [0, 89], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 10, 5, 5, 0, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, grad)))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309419870376587, 2.3109350204467773, 2.310426712036133, 2.310821533203125, 2.3081400394439697, 2.3104262351989746], "accuracy": [0.09972262382507324, 0.09325055778026581, 0.09298639744520187, 0.0870426595211029, 0.09417514503002167, 0.08981640636920929], "val_loss": [2.3085832595825195, 2.3085832595825195, 2.3085832595825195, 2.3085832595825195, 2.3085832595825195, 2.3085832595825195], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]