[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2089757919311523, 1.6146190166473389, 1.1346698999404907, 1.0017684698104858, 0.8828873634338379, 0.8362293839454651, 0.7944461107254028, 0.7614044547080994, 0.7585185170173645, 0.7189251780509949, 0.6940132975578308, 0.6836827993392944, 0.6854091882705688, 0.6613559126853943, 0.6315604448318481, 0.6222541928291321, 0.623417854309082, 0.6055181622505188, 0.5986814498901367, 0.5906577706336975, 0.5961135625839233, 0.5856507420539856, 0.57337886095047, 0.5415437817573547, 0.5437281131744385, 0.5435619354248047, 0.5363919734954834, 0.5224970579147339, 0.5222733616828918, 0.5133565068244934, 0.51018887758255, 0.5121772289276123, 0.5004927515983582, 0.499403715133667, 0.48479437828063965, 0.48469990491867065, 0.483925461769104, 0.47790080308914185, 0.4801497459411621, 0.4750329554080963, 0.4665195345878601, 0.46823954582214355, 0.4472704827785492, 0.4466479420661926, 0.44801566004753113, 0.44171425700187683, 0.44203081727027893, 0.43855664134025574, 0.4353298842906952, 0.4266495406627655, 0.4282293915748596, 0.4117344319820404, 0.4151357412338257, 0.41427260637283325, 0.40945664048194885, 0.40123289823532104, 0.39948976039886475, 0.40891340374946594, 0.3970608115196228], "accuracy": [0.27077004313468933, 0.49729230999946594, 0.6061286330223083, 0.6433760523796082, 0.6800950765609741, 0.7013604640960693, 0.707040011882782, 0.7238145470619202, 0.7211728692054749, 0.7298903465270996, 0.7445515990257263, 0.7452120184898376, 0.7452120184898376, 0.7619865536689758, 0.7701756954193115, 0.7728173136711121, 0.7712323069572449, 0.7774402499198914, 0.7794214487075806, 0.7817989587783813, 0.7802139520645142, 0.7847048044204712, 0.7944789528846741, 0.8099326491355896, 0.7992339134216309, 0.802800178527832, 0.8035926818847656, 0.81112140417099, 0.8095363974571228, 0.8131026029586792, 0.8173292875289917, 0.8161405324935913, 0.8204993009567261, 0.8216879963874817, 0.8267071843147278, 0.8228767514228821, 0.8274996876716614, 0.8276317715644836, 0.8234050869941711, 0.8274996876716614, 0.8301413059234619, 0.8272355198860168, 0.8408400416374207, 0.8391229510307312, 0.8367455005645752, 0.8407079577445984, 0.8393871188163757, 0.8436138033866882, 0.8436138033866882, 0.8421608805656433, 0.8432175517082214, 0.8492933511734009, 0.8470479249954224, 0.8469158411026001, 0.8502179384231567, 0.8540483713150024, 0.8535200357437134, 0.8473120927810669, 0.8516708612442017], "val_loss": [1.925389289855957, 1.1403454542160034, 0.9533221125602722, 0.773655116558075, 0.7436632513999939, 0.6756622195243835, 0.677773654460907, 0.6474210023880005, 0.6113616824150085, 0.5924259424209595, 0.6005769968032837, 0.5697166323661804, 0.5682864785194397, 0.5344454646110535, 0.527273416519165, 0.5573800802230835, 0.5308025479316711, 0.5244008898735046, 0.5082589387893677, 0.508639931678772, 0.5427635312080383, 0.49997618794441223, 0.5015441179275513, 0.4931543469429016, 0.4802168011665344, 0.4789346158504486, 0.4620571434497833, 0.46620020270347595, 0.45877501368522644, 0.4546809196472168, 0.4465371072292328, 0.47947070002555847, 0.4442228674888611, 0.4403918981552124, 0.4445449113845825, 0.4292619526386261, 0.4476865231990814, 0.45138224959373474, 0.4179154336452484, 0.41780850291252136, 0.44756290316581726, 0.41410768032073975, 0.4262147545814514, 0.4067695736885071, 0.4131620228290558, 0.4151337146759033, 0.41020336747169495, 0.402363657951355, 0.40240755677223206, 0.4206717908382416, 0.3964982032775879, 0.394849568605423, 0.39787885546684265, 0.38737162947654724, 0.4137614667415619, 0.39140886068344116, 0.3912341296672821, 0.3898673355579376, 0.3929450809955597], "val_accuracy": [0.5329999923706055, 0.6290000081062317, 0.6399999856948853, 0.7083333134651184, 0.7120000123977661, 0.7486666440963745, 0.7476666569709778, 0.7513333559036255, 0.7620000243186951, 0.778333306312561, 0.7536666393280029, 0.7716666460037231, 0.7786666750907898, 0.7889999747276306, 0.7973333597183228, 0.7749999761581421, 0.800000011920929, 0.7940000295639038, 0.8026666641235352, 0.8050000071525574, 0.7736666798591614, 0.8059999942779541, 0.8066666722297668, 0.8003333210945129, 0.8143333196640015, 0.8063333630561829, 0.8230000138282776, 0.8209999799728394, 0.8233333230018616, 0.8253333568572998, 0.8316666483879089, 0.8096666932106018, 0.8346666693687439, 0.8309999704360962, 0.8323333263397217, 0.8399999737739563, 0.8306666612625122, 0.8236666917800903, 0.8396666646003723, 0.8403333425521851, 0.8253333568572998, 0.8383333086967468, 0.8393333554267883, 0.8446666598320007, 0.8399999737739563, 0.8443333506584167, 0.847000002861023, 0.8486666679382324, 0.8493333458900452, 0.8403333425521851, 0.8460000157356262, 0.8496666550636292, 0.8526666760444641, 0.8550000190734863, 0.8450000286102295, 0.8546666502952576, 0.8529999852180481, 0.8543333411216736, 0.8446666598320007]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 2, 3, 5, 1], [0, 0, 1, 2, 2, 3], [0, 42, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2], [2, 0, 3, 1, 0], [16, 36], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 0, 4, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.26828572154045105, "mapping_values": [1, 13, 7, 6, 2, 4, 2, 2, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha)), grad), grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3391354084014893, 2.241021156311035, 2.062211751937866, 2.604794502258301, 2.316812753677368, 2.3006670475006104, 2.304647207260132], "accuracy": [0.2148989588022232, 0.18782195448875427, 0.28661999106407166, 0.18240654468536377, 0.10527011007070541, 0.1438383311033249, 0.09259014576673508], "val_loss": [2.270355224609375, 2.1517601013183594, 2.3164162635803223, 2.3359577655792236, 2.278820037841797, 2.3037092685699463, 2.3027987480163574], "val_accuracy": [0.25733333826065063, 0.2653333246707916, 0.09966666996479034, 0.0989999994635582, 0.2513333261013031, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [5, 2, 3, 1, 3, 5], [0, 0, 0, 1, 0], [0, 44, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 47], [1, 0, 0, 1, 0, 1, 0, 1], [0, 5, 0, 2, 5], [0, 6, 3], [0], [1], [0], [2], [0]], "fitness": -0.1411428600549698, "mapping_values": [1, 6, 3, 3, 3, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3076186180114746, 2.304908514022827, 2.3007636070251465, 2.2961370944976807, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.1010434553027153, 0.11213842034339905, 0.11847840249538422, 0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.305281639099121, 2.301562786102295, 2.296795606613159, 2.288027286529541, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08966666460037231, 0.09399999678134918, 0.10533333569765091, 0.14100000262260437, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 3, 1, 3, 2], [0, 0, 1, 1, 2], [0, 39, 39], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 2, 9, 3, 4, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 5, 5, 2, 3, 2, 0, 4, 4, 7, 8, 2, 2, 1, 3, 7, 9, 6, 2, 2, 4, 4, 1, 4, 4, 0, 9, 4, 2, 2, 1, 4, 1, 3, 9, 5, 6, 3, 8, 3, 8, 3, 1, 0, 1, 7, 7, 9, 4, 2, 2, 3, 6, 1, 8, 8, 2, 0, 2, 2], [0, 3, 1, 3, 2, 3, 6, 4, 4, 6, 2, 4, 2, 3, 0, 7, 4, 2, 5, 7, 6, 3, 4, 2, 2, 0, 2, 5, 2, 4, 1, 2, 7, 4, 4, 4, 2, 2, 6, 1, 4], [0, 46, 4, 93, 80, 90, 25], [0, 0, 1, 1], [0, 3], [2, 4], [0]], "fitness": -0.09314285963773727, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.multiply(tf.math.add(alpha, sigma), tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.sqrt(sigma)), tf.math.add(tf.math.add(grad, grad), tf.math.subtract(tf.math.multiply(tf.math.add(grad, grad), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.pow(grad, beta), tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, tf.math.multiply(beta, tf.math.sqrt(grad)))))), grad))), grad), tf.math.multiply(tf.math.sqrt(sigma), tf.math.multiply(tf.math.subtract(tf.math.negative(grad), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), beta)))), grad), beta), grad)), tf.math.pow(tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(grad), tf.math.sqrt(grad)), tf.math.add(grad, beta))))), tf.math.negative(tf.math.add(beta, grad))))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, grad))", "other_info": {"loss": [2.308530807495117, 2.3094656467437744, 2.309457302093506, 2.308964729309082, 2.3115501403808594, 2.310734272003174], "accuracy": [0.09153348207473755, 0.09259014576673508, 0.09219389408826828, 0.09602430462837219, 0.08809932321310043, 0.08757099509239197], "val_loss": [2.308659076690674, 2.308659076690674, 2.308659076690674, 2.308659076690674, 2.308659076690674, 2.308659076690674], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}, "mapping_values": [1, 7, 3, 4, 2, 1, 0, 1, 0, 103, 62, 41, 7, 4, 2, 2, 0], "tree_depth": 55}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 4, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 0, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106935024261475, 2.3098113536834717, 2.3094663619995117, 2.3103506565093994, 2.3098645210266113, 2.3108904361724854], "accuracy": [0.09298639744520187, 0.09166556596755981, 0.09179764986038208, 0.09259014576673508, 0.09100515395402908, 0.08717474341392517], "val_loss": [2.308475971221924, 2.308475971221924, 2.308475971221924, 2.308475971221924, 2.308475971221924, 2.308475971221924], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]