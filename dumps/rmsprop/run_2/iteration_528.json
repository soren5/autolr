[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8094285726547241, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20697283744812, 1.5830070972442627, 1.130308985710144, 0.9904624819755554, 0.8965798616409302, 0.8219273090362549, 0.7852540612220764, 0.7702665328979492, 0.7206754088401794, 0.7009320855140686, 0.6687108874320984, 0.6657398343086243, 0.652394711971283, 0.6249632835388184, 0.6175190210342407, 0.6173244714736938, 0.5949478149414062, 0.5764764547348022, 0.577303409576416, 0.5712655782699585, 0.5561379194259644, 0.5503425598144531, 0.5370593070983887, 0.5279838442802429, 0.5149945616722107, 0.5040206909179688, 0.509002685546875, 0.5007524490356445, 0.4900604784488678, 0.4893004298210144, 0.4764876961708069, 0.47579512000083923, 0.46160247921943665, 0.4667607545852661, 0.4549538195133209, 0.44555196166038513, 0.4404052793979645, 0.44124889373779297, 0.4370509088039398, 0.4245910346508026, 0.4201376736164093, 0.41275954246520996, 0.40925899147987366, 0.42734605073928833, 0.42118239402770996, 0.40140819549560547, 0.39755183458328247, 0.39949172735214233, 0.3991629183292389, 0.39084821939468384, 0.37798359990119934, 0.39593935012817383, 0.3895724415779114, 0.3788672089576721, 0.37392333149909973, 0.36970198154449463, 0.37294670939445496, 0.3730730712413788, 0.3689606189727783, 0.3650641441345215, 0.3594960570335388, 0.3511364758014679], "accuracy": [0.27301543951034546, 0.5115572810173035, 0.6026945114135742, 0.6469422578811646, 0.6724342703819275, 0.698190450668335, 0.7100779414176941, 0.7153612375259399, 0.7301545143127441, 0.7392682433128357, 0.7495707273483276, 0.7491744756698608, 0.7604015469551086, 0.7725531458854675, 0.7736098170280457, 0.7652885913848877, 0.7775723338127136, 0.7823272943496704, 0.7849689722061157, 0.7881389260292053, 0.7930260300636292, 0.7965922355651855, 0.8080834746360779, 0.8090080618858337, 0.8064984679222107, 0.8099326491355896, 0.811649739742279, 0.8128384351730347, 0.8185180425643921, 0.8195747137069702, 0.8255184292793274, 0.826310932636261, 0.830669641494751, 0.826310932636261, 0.8341038227081299, 0.8314621448516846, 0.8389908671379089, 0.8358209133148193, 0.8391229510307312, 0.8430854678153992, 0.8433496356010437, 0.8496896028518677, 0.8477083444595337, 0.8400475382804871, 0.8466516733169556, 0.8529917001724243, 0.8524633646011353, 0.847840428352356, 0.8500858545303345, 0.8568220734596252, 0.86118084192276, 0.8487650156021118, 0.854708731174469, 0.8607845902442932, 0.8631620407104492, 0.8632941246032715, 0.8643507957458496, 0.8626337051391602, 0.8643507957458496, 0.8667283058166504, 0.8685774803161621, 0.8716153502464294], "val_loss": [1.9075403213500977, 1.1098895072937012, 0.900134265422821, 0.8439430594444275, 0.7484233975410461, 0.6947405338287354, 0.7890270352363586, 0.6932109594345093, 0.6378227472305298, 0.6421406269073486, 0.6078785061836243, 0.6236879229545593, 0.5802459120750427, 0.5601981282234192, 0.5654671788215637, 0.5501633882522583, 0.5576725006103516, 0.5616007447242737, 0.5260486602783203, 0.5273623466491699, 0.5087055563926697, 0.5522379279136658, 0.49911144375801086, 0.49659213423728943, 0.5055806636810303, 0.48803651332855225, 0.4804794490337372, 0.4794284701347351, 0.49200886487960815, 0.5048654079437256, 0.46772006154060364, 0.4789023697376251, 0.4654812812805176, 0.45670315623283386, 0.47092747688293457, 0.45477932691574097, 0.45323416590690613, 0.4414668679237366, 0.45750004053115845, 0.4503316581249237, 0.4413754940032959, 0.4342675507068634, 0.4352676272392273, 0.44021013379096985, 0.42367228865623474, 0.42783302068710327, 0.44938135147094727, 0.4357897937297821, 0.4440194070339203, 0.41716647148132324, 0.4236273467540741, 0.41568708419799805, 0.42716625332832336, 0.4171878695487976, 0.4172517955303192, 0.42018431425094604, 0.4100639522075653, 0.4251972734928131, 0.43086937069892883, 0.4062618911266327, 0.4069478213787079, 0.4174066185951233], "val_accuracy": [0.5730000138282776, 0.6543333530426025, 0.6729999780654907, 0.6676666736602783, 0.7009999752044678, 0.7253333330154419, 0.7093333601951599, 0.7289999723434448, 0.7473333477973938, 0.7419999837875366, 0.7743333578109741, 0.7416666746139526, 0.7839999794960022, 0.7816666960716248, 0.7789999842643738, 0.7940000295639038, 0.7889999747276306, 0.781000018119812, 0.8066666722297668, 0.8059999942779541, 0.8059999942779541, 0.7870000004768372, 0.8173333406448364, 0.8109999895095825, 0.8086666464805603, 0.8153333067893982, 0.8199999928474426, 0.8240000009536743, 0.8230000138282776, 0.8043333292007446, 0.8309999704360962, 0.8240000009536743, 0.828000009059906, 0.8353333473205566, 0.8263333439826965, 0.8353333473205566, 0.8370000123977661, 0.8426666855812073, 0.8320000171661377, 0.8386666774749756, 0.8420000076293945, 0.8429999947547913, 0.8399999737739563, 0.8423333168029785, 0.8473333120346069, 0.8489999771118164, 0.840666651725769, 0.8479999899864197, 0.8396666646003723, 0.8529999852180481, 0.8496666550636292, 0.8569999933242798, 0.8420000076293945, 0.8513333201408386, 0.8503333330154419, 0.8556666374206543, 0.8576666712760925, 0.8529999852180481, 0.8489999771118164, 0.8573333621025085, 0.8573333621025085, 0.8510000109672546]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 4, 3, 3, 4, 7, 6, 8, 7, 3, 7, 2, 6, 5, 1, 8, 7, 9, 1, 5, 7, 0, 0, 0], [2, 2, 1, 0, 2, 1, 3, 1, 0, 1, 0, 0, 3, 0, 0, 0, 2], [0, 39, 39, 97, 80, 11, 65, 20], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 0, 2, 1], [0, 1, 1, 6, 0], [0, 22], [0, 0, 0, 0, 1, 1], [0, 3, 0, 8], [2, 6], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 43, 26, 17, 8, 1, 0, 1, 0, 1, 0, 1, 1, 6, 4, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.sqrt(beta)), grad))", "other_info": {"loss": [2.310147523880005, 2.309692621231079, 2.308959722518921, 2.3103249073028564, 2.3106229305267334, 2.3099050521850586], "accuracy": [0.09259014576673508, 0.09998679161071777, 0.09470347315073013, 0.09008057415485382, 0.08994849026203156, 0.09721305221319199], "val_loss": [2.3086929321289062, 2.3086929321289062, 2.3086929321289062, 2.3086929321289062, 2.3086929321289062, 2.3086929321289062], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 9], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1, 54], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 4], [0, 6, 1, 6, 0], [0, 22], [1], [0], [0], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 3, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3107714653015137, 2.3107080459594727, 2.3106000423431396, 2.309570789337158, 2.3096354007720947, 2.3110601902008057], "accuracy": [0.09034473448991776, 0.08994849026203156, 0.09047681838274002, 0.09219389408826828, 0.09549596905708313, 0.09087307006120682], "val_loss": [2.308281421661377, 2.308281421661377, 2.308281421661377, 2.308281421661377, 2.308281421661377, 2.308281421661377], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 7, 9, 2, 5, 2, 2, 3], [0, 6, 1, 6, 0], [0, 22, 40], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 1, 13, 8, 5, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.add(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)), grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309980630874634, 2.3103179931640625, 2.3098692893981934, 2.3091626167297363, 2.3100271224975586, 2.310659170150757], "accuracy": [0.09681680053472519, 0.09536388516426086, 0.08955223858356476, 0.09087307006120682, 0.09536388516426086, 0.08400475233793259], "val_loss": [2.3091068267822266, 2.3091068267822266, 2.3091068267822266, 2.3091068267822266, 2.3091068267822266, 2.3091068267822266], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 2, 3, 5, 5], [0, 1, 3, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 9, 2, 0, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(grad)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309847354888916, 2.3091442584991455, 2.309544086456299, 2.307957172393799, 2.3097193241119385, 2.309678077697754], "accuracy": [0.08849557489156723, 0.09377889335155487, 0.09721305221319199, 0.09391097724437714, 0.0944393053650856, 0.09734513610601425], "val_loss": [2.309264659881592, 2.309264659881592, 2.309264659881592, 2.309264659881592, 2.309264659881592, 2.309264659881592], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]