[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8105714321136475, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2097485065460205, 1.6063573360443115, 1.1421478986740112, 0.9771323204040527, 0.8698567152023315, 0.8153249621391296, 0.7842528223991394, 0.7521861791610718, 0.7124864459037781, 0.7045208215713501, 0.6888067126274109, 0.6698574423789978, 0.6502675414085388, 0.6385489106178284, 0.6251166462898254, 0.6030585169792175, 0.5882123708724976, 0.5932314991950989, 0.5950352549552917, 0.566527783870697, 0.5605619549751282, 0.5479270815849304, 0.5324631929397583, 0.5521013736724854, 0.5251505970954895, 0.519931435585022, 0.5101667642593384, 0.5077202916145325, 0.5067997574806213, 0.5007950067520142, 0.48350462317466736, 0.4923316538333893, 0.48382601141929626, 0.4803047180175781, 0.47937706112861633, 0.4708481729030609, 0.4639596939086914, 0.4635683596134186, 0.4515235722064972, 0.4481501281261444, 0.4555680453777313, 0.4393109381198883, 0.4396473467350006], "accuracy": [0.2735437750816345, 0.509311854839325, 0.6037511825561523, 0.6505085229873657, 0.6885483860969543, 0.7053229212760925, 0.7193237543106079, 0.7202483415603638, 0.7382115721702576, 0.7392682433128357, 0.7400607466697693, 0.7524765729904175, 0.7553823590278625, 0.763439416885376, 0.7652885913848877, 0.7765156626701355, 0.7759873270988464, 0.7799497842788696, 0.7775723338127136, 0.7840443849563599, 0.7882710099220276, 0.7950072884559631, 0.8047813773155212, 0.7981772422790527, 0.807158887386322, 0.8080834746360779, 0.8086118102073669, 0.8053097128868103, 0.8117818236351013, 0.8137630224227905, 0.822348415851593, 0.8227446675300598, 0.8190463781356812, 0.8253863453865051, 0.8177255392074585, 0.8296129703521729, 0.82683926820755, 0.8259146809577942, 0.8350284099578857, 0.8364813327789307, 0.8330471515655518, 0.8396512866020203, 0.8422929644584656], "val_loss": [1.9270817041397095, 1.1563583612442017, 0.9080491662025452, 0.8505884408950806, 0.7668138146400452, 0.7118487358093262, 0.6899415850639343, 0.664155900478363, 0.6647778153419495, 0.63917475938797, 0.6659886837005615, 0.6351454854011536, 0.6348993182182312, 0.601380467414856, 0.571951150894165, 0.5580908060073853, 0.5636031031608582, 0.5512958765029907, 0.5504187941551208, 0.5398666858673096, 0.5211950540542603, 0.5205262303352356, 0.5214882493019104, 0.528522253036499, 0.5118658542633057, 0.5196691751480103, 0.5371891856193542, 0.49642378091812134, 0.4864524006843567, 0.4864865839481354, 0.47639909386634827, 0.5025830864906311, 0.4796404540538788, 0.47805550694465637, 0.4725613594055176, 0.482737272977829, 0.4619874358177185, 0.4562128782272339, 0.4605695903301239, 0.46692097187042236, 0.45146477222442627, 0.4509337246417999, 0.45755887031555176], "val_accuracy": [0.5379999876022339, 0.6179999709129333, 0.6723333597183228, 0.6943333148956299, 0.7003333568572998, 0.7233333587646484, 0.7383333444595337, 0.7446666955947876, 0.753000020980835, 0.762333333492279, 0.7493333220481873, 0.7583333253860474, 0.7563333511352539, 0.7593333125114441, 0.784333348274231, 0.7873333096504211, 0.7846666574478149, 0.7853333353996277, 0.7850000262260437, 0.7946666479110718, 0.8069999814033508, 0.8080000281333923, 0.8003333210945129, 0.796999990940094, 0.8059999942779541, 0.809333324432373, 0.8083333373069763, 0.8153333067893982, 0.8146666884422302, 0.8196666836738586, 0.8180000185966492, 0.8119999766349792, 0.8216666579246521, 0.8263333439826965, 0.8240000009536743, 0.8266666531562805, 0.8330000042915344, 0.8366666436195374, 0.8326666951179504, 0.828000009059906, 0.8336666822433472, 0.8323333263397217, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 4, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 6, 2, 8, 2, 1, 6, 3], [5, 0, 3, 1, 0, 1, 5, 0, 4], [16, 1, 29], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.2362857162952423, "mapping_values": [1, 11, 6, 5, 2, 19, 10, 9, 3, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4665687084198, 2.5478992462158203, 2.31179141998291, 2.3000447750091553, 2.231400728225708, 2.305386781692505], "accuracy": [0.20737022161483765, 0.1842557191848755, 0.10302469879388809, 0.1154404953122139, 0.20301149785518646, 0.09708096832036972], "val_loss": [2.2287814617156982, 2.3227880001068115, 2.3048462867736816, 2.261087656021118, 2.30661940574646, 2.303138256072998], "val_accuracy": [0.2423333376646042, 0.10466666519641876, 0.10133333504199982, 0.22100000083446503, 0.10433333367109299, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 2, 3, 5], [0, 2, 3, 0, 1, 2], [0, 39, 39], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 2, 0, 2, 6, 2, 1, 9], [0, 6, 1, 3, 0, 6], [18, 22, 65], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 2, 2, 1, 1, 0, 14, 8, 6, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, sigma))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09074098616838455, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 0, 1, 2, 1], [0, 6, 1, 6, 0, 7], [84, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 0, 15, 9, 6, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.subtract(tf.math.add(grad, alpha), grad))))), tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 2, 3, 5], [0, 1, 2, 2, 2], [62, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 0, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105833530426025, 2.3085122108459473, 2.3102915287017822, 2.3098654747009277, 2.3102691173553467, 2.309603691101074], "accuracy": [0.09100515395402908, 0.09298639744520187, 0.09074098616838455, 0.09166556596755981, 0.08875974267721176, 0.09219389408826828], "val_loss": [2.3088786602020264, 2.3088786602020264, 2.3088786602020264, 2.3088786602020264, 2.3088786602020264, 2.3088786602020264], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]