[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118499279022217, 1.6017992496490479, 1.1719727516174316, 0.9965912699699402, 0.8984886407852173, 0.8161420822143555, 0.7961263060569763, 0.7678203582763672, 0.7100486755371094, 0.6835992932319641, 0.6852840185165405, 0.6647518277168274, 0.6575693488121033, 0.6402342915534973, 0.6150503158569336, 0.6126555800437927, 0.5971614718437195, 0.5805325508117676, 0.5763747096061707, 0.5597564578056335, 0.5600435733795166, 0.5528276562690735, 0.5391600728034973, 0.5253885984420776, 0.5264400243759155, 0.5181826949119568, 0.5100960731506348, 0.5018706917762756, 0.4926450848579407, 0.4918513000011444, 0.4798371195793152, 0.48419782519340515, 0.46231746673583984, 0.45808178186416626, 0.46244290471076965, 0.4525286555290222, 0.4521837830543518, 0.44581088423728943], "accuracy": [0.2678642272949219, 0.5065380930900574, 0.5893540978431702, 0.6482630968093872, 0.6742834448814392, 0.6977941989898682, 0.7033417224884033, 0.7173424959182739, 0.7387399077415466, 0.744419515132904, 0.7465327978134155, 0.7498348951339722, 0.7535332441329956, 0.7622507214546204, 0.7751948237419128, 0.776251494884491, 0.7781006693840027, 0.7852331399917603, 0.7889314293861389, 0.7957997918128967, 0.7915731072425842, 0.7911768555641174, 0.8018755912780762, 0.8035926818847656, 0.8029322624206543, 0.8101968169212341, 0.8164047002792358, 0.8121780753135681, 0.8177255392074585, 0.8232730031013489, 0.8256505131721497, 0.8224804997444153, 0.8302733898162842, 0.8321225643157959, 0.8310658931732178, 0.835160493850708, 0.8341038227081299, 0.8379341959953308], "val_loss": [1.9213086366653442, 1.0943799018859863, 0.8623194098472595, 0.7827896475791931, 0.712700366973877, 0.681801974773407, 0.6622229218482971, 0.6512998342514038, 0.6285901069641113, 0.6149750351905823, 0.6131375432014465, 0.6189523935317993, 0.5662248730659485, 0.5352124571800232, 0.5715534090995789, 0.5328863859176636, 0.5186442136764526, 0.5171440243721008, 0.5205960869789124, 0.5356143116950989, 0.5004119873046875, 0.5098243951797485, 0.47129619121551514, 0.4714953601360321, 0.47085919976234436, 0.49861058592796326, 0.4529659152030945, 0.4581497311592102, 0.4495481848716736, 0.4534280598163605, 0.4522950053215027, 0.44073259830474854, 0.4300801157951355, 0.42664018273353577, 0.4431958496570587, 0.43891075253486633, 0.4517193138599396, 0.4235003590583801], "val_accuracy": [0.5076666474342346, 0.628333330154419, 0.6936666369438171, 0.7173333168029785, 0.7390000224113464, 0.7486666440963745, 0.7513333559036255, 0.7446666955947876, 0.7549999952316284, 0.7620000243186951, 0.762333333492279, 0.762333333492279, 0.7956666946411133, 0.8003333210945129, 0.7799999713897705, 0.7963333129882812, 0.8080000281333923, 0.8140000104904175, 0.7986666560173035, 0.8009999990463257, 0.8113333582878113, 0.7979999780654907, 0.8316666483879089, 0.8213333487510681, 0.82833331823349, 0.8066666722297668, 0.8316666483879089, 0.8393333554267883, 0.8413333296775818, 0.8320000171661377, 0.8326666951179504, 0.8376666903495789, 0.8473333120346069, 0.8446666598320007, 0.8333333134651184, 0.8366666436195374, 0.8286666870117188, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [8, 95, 60, 22], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 1, 7, 5], [2, 0, 3, 1, 0, 4], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5], [0, 7, 1], [42], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 15, 9, 6, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 7], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 6, 0, 2, 5], [0, 6, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [7.536921501159668, 58.79684066772461, 201.80850219726562, 499.9573669433594, 1000.4560546875, 1781.8447265625], "accuracy": [0.09668471664190292, 0.09760929644107819, 0.10249637067317963, 0.09642054885625839, 0.10302469879388809, 0.09826971590518951], "val_loss": [20.65890121459961, 96.76446533203125, 268.1685791015625, 584.45751953125, 1094.73486328125, 1848.5687255859375], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 6, 1, 1, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 2, 0, 6, 3, 8, 2, 8, 9], [0, 0, 3, 1, 0], [16, 1, 2], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 7], [0, 7, 2, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 13, 9, 4, 3, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [25.78156280517578, 3.103332281112671, 3.9297616481781006, 37.79703140258789, 11.835844039916992, 17.8184814453125, 23.384597778320312, 45.366031646728516, 84.33712005615234], "accuracy": [0.09734513610601425, 0.10315678268671036, 0.09681680053472519, 0.1002509593963623, 0.10355303436517715, 0.09985470771789551, 0.10302469879388809, 0.09787346422672272, 0.10421344637870789], "val_loss": [3.009547472000122, 3.073556423187256, 6.469946384429932, 8.074308395385742, 73.89701843261719, 52.289188385009766, 66.6480712890625, 35.52462387084961, 4819.66015625], "val_accuracy": [0.09600000083446503, 0.09700000286102295, 0.09700000286102295, 0.10199999809265137, 0.10166666656732559, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [4, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 7, 8, 8, 2], [2, 0, 3, 1, 0], [16, 92], [0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 4, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093364238739014, 2.3105478286743164, 2.31003475189209, 2.3104300498962402, 2.3113644123077393, 2.310465097427368], "accuracy": [0.09615638852119446, 0.08915598690509796, 0.0952318087220192, 0.09311848133802414, 0.08638224750757217, 0.09325055778026581], "val_loss": [2.3091070652008057, 2.3091070652008057, 2.3091070652008057, 2.3091070652008057, 2.3091070652008057, 2.3091070652008057], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]