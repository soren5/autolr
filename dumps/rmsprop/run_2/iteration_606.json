[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209498167037964, 1.6002224683761597, 1.1562824249267578, 0.9901618957519531, 0.8668535351753235, 0.8587669134140015, 0.7813814282417297, 0.7558630704879761, 0.7259233593940735, 0.6988214254379272, 0.6829026937484741, 0.6547200083732605, 0.6499032378196716, 0.6232746839523315, 0.6318116188049316, 0.6131616234779358, 0.5985287427902222, 0.5977785587310791, 0.5912071466445923, 0.5845803618431091, 0.5688451528549194, 0.5436651706695557, 0.5473558902740479, 0.5407907366752625, 0.5245030522346497, 0.5281684994697571, 0.5118299722671509, 0.5059013366699219, 0.5097578167915344, 0.49239614605903625, 0.49297985434532166, 0.4985118508338928, 0.5021214485168457, 0.489245742559433, 0.4757815897464752, 0.478803426027298], "accuracy": [0.27077004313468933, 0.5095760226249695, 0.6013736724853516, 0.6399418711662292, 0.6866992712020874, 0.6866992712020874, 0.7099458575248718, 0.7218332886695862, 0.7323999404907227, 0.7400607466697693, 0.7460044622421265, 0.7528728246688843, 0.7531369924545288, 0.763439416885376, 0.7633073329925537, 0.7655527591705322, 0.7771760821342468, 0.774270236492157, 0.7796856164932251, 0.7812706232070923, 0.7890635132789612, 0.7938185334205627, 0.8004226684570312, 0.7989697456359863, 0.806630551815033, 0.7993659973144531, 0.8059701323509216, 0.8131026029586792, 0.81112140417099, 0.8216879963874817, 0.8173292875289917, 0.8158763647079468, 0.8137630224227905, 0.8206313848495483, 0.8297450542449951, 0.8224804997444153], "val_loss": [1.9207185506820679, 1.123568058013916, 0.9358271360397339, 0.7962407469749451, 0.7156895995140076, 0.7131352424621582, 0.6918160915374756, 0.6908495426177979, 0.6104111075401306, 0.6072691679000854, 0.5892358422279358, 0.5695081353187561, 0.5576109886169434, 0.5561955571174622, 0.5435425043106079, 0.5251464247703552, 0.5391440391540527, 0.5508846044540405, 0.557273268699646, 0.537273108959198, 0.48722338676452637, 0.4892932176589966, 0.5009356141090393, 0.48280298709869385, 0.470182865858078, 0.46279218792915344, 0.470547080039978, 0.4620836675167084, 0.4512089788913727, 0.4629797041416168, 0.4388331174850464, 0.4551858603954315, 0.4485021233558655, 0.43925341963768005, 0.4433692991733551, 0.4471338391304016], "val_accuracy": [0.5773333311080933, 0.6389999985694885, 0.6543333530426025, 0.7203333377838135, 0.734000027179718, 0.7289999723434448, 0.7296666502952576, 0.7423333525657654, 0.7693333625793457, 0.762666642665863, 0.7680000066757202, 0.784333348274231, 0.7946666479110718, 0.7886666655540466, 0.7940000295639038, 0.8029999732971191, 0.8023333549499512, 0.7696666717529297, 0.7816666960716248, 0.7853333353996277, 0.8180000185966492, 0.8173333406448364, 0.8073333501815796, 0.8119999766349792, 0.8213333487510681, 0.8343333601951599, 0.8190000057220459, 0.8246666789054871, 0.8299999833106995, 0.8303333520889282, 0.8373333215713501, 0.8303333520889282, 0.8296666741371155, 0.8360000252723694, 0.8370000123977661, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 2, 3, 2, 3, 5, 5, 3, 6, 7, 2, 5, 6, 5, 0, 4, 2, 5, 9, 9, 4], [0, 3, 1, 0, 2, 2, 1, 3, 0, 1, 2], [16, 39, 39, 19, 40], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 9, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.3562857210636139, "mapping_values": [1, 32, 21, 11, 5, 12, 7, 5, 2, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.math.square(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, alpha)), tf.math.square(tf.math.negative(tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2311179637908936, 2.289052963256836, 2.2814791202545166, 2.5660784244537354, 2.305163860321045, 2.3033857345581055], "accuracy": [0.21595561504364014, 0.14978206157684326, 0.14555540680885315, 0.17936864495277405, 0.10170386731624603, 0.09972262382507324], "val_loss": [2.1479294300079346, 2.3019661903381348, 1.9937663078308105, 2.3048789501190186, 2.302625894546509, 2.3020293712615967], "val_accuracy": [0.35499998927116394, 0.11733333021402359, 0.2293333262205124, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 5, 3, 2, 3, 5], [2, 2, 2, 0, 2], [0, 94, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 0, 11, 6, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(grad, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [35.87322998046875, 7150.73486328125, 40104.98046875, 73277.2578125, 99542.0703125, 178309.5625, 321925.5, 527159.3125, 786529.375, 1156547.625], "accuracy": [0.09945846349000931, 0.10170386731624603, 0.1006472036242485, 0.10196803510189056, 0.10302469879388809, 0.10077928751707077, 0.09998679161071777, 0.09734513610601425, 0.09945846349000931, 0.09998679161071777], "val_loss": [786.4226684570312, 23518.28515625, 69382.828125, 86376.8671875, 128173.671875, 253080.625, 419043.25, 680771.3125, 979628.6875, 1391007.375], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.10000000149011612, 0.0976666659116745, 0.10333333164453506, 0.10266666859388351, 0.09833333641290665, 0.10000000149011612, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 83], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 3, 0], [2, 0, 3, 1, 0], [16, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 3, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036105632781982, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 0, 6, 3, 3, 2, 7, 5, 6, 7, 1, 6, 3, 4, 0, 7, 0, 9, 4, 9, 5], [2, 0, 3, 1, 1, 3, 2, 5, 4, 3, 4, 0, 2], [58, 1, 41, 26], [0, 1, 0, 1, 0, 1, 0, 1], [0, 5, 9, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 35, 22, 13, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(alpha, alpha)))), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, beta), grad), tf.math.multiply(grad, grad))), tf.math.pow(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}]