[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8125714063644409, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2149038314819336, 1.6228642463684082, 1.1491453647613525, 0.9728367924690247, 0.9033202528953552, 0.8399646878242493, 0.7826571464538574, 0.7814403772354126, 0.7390347719192505, 0.7117313742637634, 0.7229809761047363, 0.6723807454109192, 0.6711530089378357, 0.6598731279373169, 0.6383942365646362, 0.6158407926559448, 0.6085048913955688, 0.6225411295890808, 0.5939360857009888, 0.5985620617866516, 0.5660087466239929, 0.5616437792778015, 0.564328134059906, 0.5494540333747864, 0.5479608178138733, 0.5462532639503479, 0.5278827548027039, 0.5343942642211914, 0.5156055688858032, 0.5048081874847412, 0.511817216873169, 0.4992348551750183, 0.49107852578163147, 0.49055933952331543, 0.48608267307281494, 0.4710724353790283, 0.4733169674873352, 0.47221964597702026, 0.46357855200767517, 0.46750426292419434, 0.4499077796936035], "accuracy": [0.26482629776000977, 0.49108439683914185, 0.6004490852355957, 0.6464139223098755, 0.6750759482383728, 0.6910579800605774, 0.7117950320243835, 0.7094175219535828, 0.724739134311676, 0.7342491149902344, 0.7292299270629883, 0.7450799345970154, 0.7544577717781067, 0.7518161535263062, 0.7569673657417297, 0.7695152759552002, 0.7668735980987549, 0.7660810947418213, 0.7786290049552917, 0.772288978099823, 0.7840443849563599, 0.7880068421363831, 0.7841764688491821, 0.7893276810646057, 0.7906485199928284, 0.7961959838867188, 0.8030643463134766, 0.7979130744934082, 0.8072909712791443, 0.8083476424217224, 0.8083476424217224, 0.8113855719566345, 0.8123101592063904, 0.8162726163864136, 0.8207634687423706, 0.8249900937080383, 0.8201030492782593, 0.8183859586715698, 0.8265751004219055, 0.8259146809577942, 0.832650899887085], "val_loss": [1.9342864751815796, 1.0966401100158691, 0.9130280613899231, 0.7695528864860535, 0.765756368637085, 0.6611475944519043, 0.6764953136444092, 0.703994870185852, 0.6184113621711731, 0.6363604664802551, 0.6034799218177795, 0.5696437954902649, 0.572310745716095, 0.5512850880622864, 0.5365887880325317, 0.5173192024230957, 0.5803850293159485, 0.49990054965019226, 0.5241186022758484, 0.5105553865432739, 0.4823659360408783, 0.487704873085022, 0.48105818033218384, 0.4751201868057251, 0.456565797328949, 0.45516714453697205, 0.4572077691555023, 0.46218013763427734, 0.46789151430130005, 0.43356257677078247, 0.4504128098487854, 0.4299665093421936, 0.4225327670574188, 0.4433891177177429, 0.4262153208255768, 0.41418448090553284, 0.40787285566329956, 0.41247090697288513, 0.4093744158744812, 0.402690589427948, 0.400582879781723], "val_accuracy": [0.5353333353996277, 0.6626666784286499, 0.6869999766349792, 0.7056666612625122, 0.7143333554267883, 0.75, 0.7433333396911621, 0.7133333086967468, 0.7639999985694885, 0.7526666522026062, 0.7670000195503235, 0.7820000052452087, 0.7763333320617676, 0.781333327293396, 0.793666660785675, 0.8026666641235352, 0.7776666879653931, 0.8130000233650208, 0.7986666560173035, 0.8106666803359985, 0.8303333520889282, 0.8130000233650208, 0.8106666803359985, 0.815666675567627, 0.8379999995231628, 0.831333339214325, 0.8196666836738586, 0.8203333616256714, 0.8190000057220459, 0.8410000205039978, 0.840666651725769, 0.8483333587646484, 0.8433333039283752, 0.8396666646003723, 0.8383333086967468, 0.8539999723434448, 0.8523333072662354, 0.8500000238418579, 0.8506666421890259, 0.8486666679382324, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 3, 3, 4, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 4, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [82.61726379394531, 9312.57421875, 156578.21875, 1116378.125, 4905460.5, 16163091.0], "accuracy": [0.10170386731624603, 0.10315678268671036, 0.10038304328918457, 0.09457138925790787, 0.10091137140989304, 0.10130762308835983], "val_loss": [707.371337890625, 34460.10546875, 365975.8125, 1988936.5, 7439934.0, 21930004.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 2, 2, 5, 2, 1, 4, 2, 1, 1, 5, 9, 0, 2], [0, 6, 1, 5, 6, 0, 4, 0, 3, 1], [0, 22, 47, 59], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 1, 25, 15, 10, 4, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.pow(alpha, tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.square(grad), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303816080093384, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [49, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 1, 2, 5], [0, 6, 1, 7, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(alpha))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9.099025849703225e+23, 1.0555409264689521e+24, 1.0542993020660846e+24, 1.038071499543179e+24, 1.0463196441023245e+24, 1.039488800360311e+24], "accuracy": [0.08889182657003403, 0.0940430611371994, 0.09047681838274002, 0.0948355570435524, 0.09232597798109055, 0.08836349099874496], "val_loss": [8.978185985077561e+23, 8.978185985077561e+23, 8.978185985077561e+23, 8.978185985077561e+23, 8.978185985077561e+23, 8.978185985077561e+23], "val_accuracy": [0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765, 0.0820000022649765]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [8, 2, 3, 2, 3, 7], [1, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 3, 6, 3, 0, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 2], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 2, 1, 1, 0, 11, 6, 5, 2, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha)), tf.math.add(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310882329940796, 2.3100991249084473, 2.3106751441955566, 2.309654712677002, 2.3110527992248535, 2.310725450515747], "accuracy": [0.09219389408826828, 0.09219389408826828, 0.09206181764602661, 0.09642054885625839, 0.08968432247638702, 0.0940430611371994], "val_loss": [2.3085553646087646, 2.3085553646087646, 2.3085553646087646, 2.3085553646087646, 2.3085553646087646, 2.3085553646087646], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]