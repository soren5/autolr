[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8477143049240112, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206897735595703, 1.5800589323043823, 1.134291172027588, 0.9844392538070679, 0.8733298778533936, 0.8039296865463257, 0.7679668068885803, 0.7305931448936462, 0.7152064442634583, 0.6874812841415405, 0.6703786253929138, 0.6649132966995239, 0.6363538503646851, 0.6361575722694397, 0.6186810731887817, 0.5891485214233398, 0.5882272720336914, 0.569555401802063, 0.5671219229698181, 0.555366575717926, 0.5469608902931213, 0.5497736930847168, 0.5348790287971497, 0.5342175364494324, 0.5177463889122009, 0.5185325741767883, 0.5044983625411987, 0.4904322028160095, 0.5058398246765137, 0.49983274936676025, 0.4842555820941925, 0.48135989904403687, 0.4758491814136505, 0.4610954225063324, 0.4661949574947357, 0.4616868495941162, 0.4574921727180481, 0.46356332302093506, 0.45391008257865906, 0.44412416219711304, 0.4433276057243347, 0.4351518154144287, 0.42610985040664673, 0.4308643341064453, 0.4199211597442627, 0.4170251190662384, 0.4146951138973236, 0.41331103444099426, 0.40762048959732056, 0.4086972177028656, 0.40918540954589844, 0.4010646343231201, 0.40034219622612, 0.39564868807792664, 0.39002230763435364, 0.39240142703056335, 0.37806233763694763, 0.3765279948711395, 0.38674482703208923, 0.3821110129356384, 0.3797323405742645, 0.3695884644985199, 0.36228662729263306, 0.3696339428424835, 0.36098751425743103, 0.36157122254371643, 0.359652578830719], "accuracy": [0.27182671427726746, 0.5131422281265259, 0.6092986464500427, 0.6468101739883423, 0.6756042838096619, 0.7041342258453369, 0.7128516435623169, 0.7323999404907227, 0.7300224304199219, 0.7460044622421265, 0.7473253011703491, 0.7516840696334839, 0.7621186375617981, 0.7617223858833313, 0.7629110813140869, 0.7790252566337585, 0.774798572063446, 0.7852331399917603, 0.7848368883132935, 0.7898560166358948, 0.7988376617431641, 0.7897239327430725, 0.7988376617431641, 0.7979130744934082, 0.8090080618858337, 0.8075551390647888, 0.8100647330284119, 0.8210275769233704, 0.8133667707443237, 0.8113855719566345, 0.8204993009567261, 0.8210275769233704, 0.8230088353157043, 0.8315942287445068, 0.8252542614936829, 0.8315942287445068, 0.8253863453865051, 0.8251221776008606, 0.8314621448516846, 0.8368775844573975, 0.8355567455291748, 0.8388587832450867, 0.8421608805656433, 0.8370096683502197, 0.8496896028518677, 0.8436138033866882, 0.8479725122451782, 0.8475762605667114, 0.8491612672805786, 0.8467837572097778, 0.8462554216384888, 0.8531237840652466, 0.8545766472816467, 0.8491612672805786, 0.8540483713150024, 0.8532558679580688, 0.8581429123878479, 0.8609166741371155, 0.859199583530426, 0.8580108284950256, 0.8535200357437134, 0.8636903762817383, 0.8672566413879395, 0.8669924736022949, 0.8741249442100525, 0.8639545440673828, 0.8652753829956055], "val_loss": [1.909673810005188, 1.0777034759521484, 0.8921390175819397, 0.8023022413253784, 0.7235758304595947, 0.70501309633255, 0.6728924512863159, 0.6492390036582947, 0.6350604891777039, 0.6322259306907654, 0.6021651029586792, 0.5814783573150635, 0.5814282894134521, 0.5615425109863281, 0.5440950393676758, 0.5504063963890076, 0.5631118416786194, 0.542490541934967, 0.5316181182861328, 0.5043371915817261, 0.5092127323150635, 0.5183337330818176, 0.520868718624115, 0.4998331665992737, 0.49454596638679504, 0.4975939095020294, 0.4744414985179901, 0.48516198992729187, 0.4750436246395111, 0.49085521697998047, 0.4729190766811371, 0.46754395961761475, 0.4583241641521454, 0.45512109994888306, 0.45269274711608887, 0.4551216661930084, 0.44427064061164856, 0.45475515723228455, 0.4459987282752991, 0.4341503083705902, 0.45324262976646423, 0.43148717284202576, 0.4317386746406555, 0.4339313507080078, 0.44780468940734863, 0.43614163994789124, 0.4260963499546051, 0.4148392677307129, 0.417267769575119, 0.4204210340976715, 0.41122427582740784, 0.4040626287460327, 0.4111895263195038, 0.4076991677284241, 0.41702619194984436, 0.40214207768440247, 0.39951562881469727, 0.42181673645973206, 0.3996454179286957, 0.39066728949546814, 0.3977230191230774, 0.39782005548477173, 0.39486393332481384, 0.3934887647628784, 0.3925316035747528, 0.3897358477115631, 0.40208691358566284], "val_accuracy": [0.4906666576862335, 0.6629999876022339, 0.6893333196640015, 0.703000009059906, 0.7226666808128357, 0.7089999914169312, 0.734000027179718, 0.7426666617393494, 0.7526666522026062, 0.7453333139419556, 0.7706666588783264, 0.7803333401679993, 0.7826666831970215, 0.7870000004768372, 0.7953333258628845, 0.7833333611488342, 0.7733333110809326, 0.7923333048820496, 0.7929999828338623, 0.8059999942779541, 0.7986666560173035, 0.7956666946411133, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8116666674613953, 0.8253333568572998, 0.8113333582878113, 0.8190000057220459, 0.8056666851043701, 0.8216666579246521, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8336666822433472, 0.831333339214325, 0.8376666903495789, 0.8243333101272583, 0.8363333344459534, 0.8343333601951599, 0.8286666870117188, 0.8413333296775818, 0.8403333425521851, 0.8366666436195374, 0.8266666531562805, 0.8373333215713501, 0.8416666388511658, 0.8489999771118164, 0.8483333587646484, 0.8476666808128357, 0.8496666550636292, 0.8550000190734863, 0.8446666598320007, 0.8453333377838135, 0.8450000286102295, 0.8560000061988831, 0.8553333282470703, 0.8476666808128357, 0.8579999804496765, 0.8619999885559082, 0.8526666760444641, 0.862666666507721, 0.8606666922569275, 0.8560000061988831, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8122857213020325, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2096197605133057, 1.603276252746582, 1.1400477886199951, 0.9716867804527283, 0.8811869621276855, 0.8303821682929993, 0.7597576379776001, 0.7592254281044006, 0.7299529314041138, 0.7024803161621094, 0.6666024327278137, 0.6511787176132202, 0.6425068974494934, 0.63583904504776, 0.6220928430557251, 0.5934900045394897, 0.6002205610275269, 0.5968754887580872, 0.5666573643684387, 0.5639706254005432, 0.5634374022483826, 0.5625578761100769, 0.525749683380127, 0.5397972464561462, 0.5225645899772644, 0.5250372886657715, 0.5212855339050293, 0.5080776810646057, 0.49031007289886475, 0.5002710223197937, 0.48757991194725037, 0.4878426194190979, 0.4841494560241699, 0.47108298540115356, 0.45971599221229553, 0.46977323293685913, 0.45103782415390015, 0.4514801800251007, 0.4552108645439148, 0.44047752022743225, 0.44155558943748474, 0.4389491081237793, 0.43644052743911743, 0.42959102988243103], "accuracy": [0.26376965641975403, 0.5064060091972351, 0.5972790718078613, 0.6514331102371216, 0.6738871932029724, 0.69673752784729, 0.7219653725624084, 0.7215691208839417, 0.7298903465270996, 0.7345132827758789, 0.7543256878852844, 0.7586844563484192, 0.7580240368843079, 0.759609043598175, 0.7667415142059326, 0.7807422876358032, 0.7750627398490906, 0.7745344042778015, 0.7874785661697388, 0.793422281742096, 0.7905164361000061, 0.7927618622779846, 0.8043851256370544, 0.7957997918128967, 0.8076872229576111, 0.7989697456359863, 0.8146876096725464, 0.8123101592063904, 0.8191784620285034, 0.8190463781356812, 0.8211596608161926, 0.8228767514228821, 0.8231409192085266, 0.8297450542449951, 0.8350284099578857, 0.8260467648506165, 0.8293488025665283, 0.8348963260650635, 0.8302733898162842, 0.8341038227081299, 0.8393871188163757, 0.8385946154594421, 0.8391229510307312, 0.8409721255302429], "val_loss": [1.9170602560043335, 1.0992465019226074, 0.9900418519973755, 0.8186118006706238, 0.7340025901794434, 0.6914786696434021, 0.6636171340942383, 0.6964426040649414, 0.6354957818984985, 0.6171950101852417, 0.5876767635345459, 0.6207075119018555, 0.5743011832237244, 0.5596104860305786, 0.5531019568443298, 0.5494975447654724, 0.5916941165924072, 0.5378605723381042, 0.5581202507019043, 0.5409224033355713, 0.5193926692008972, 0.5079294443130493, 0.5452303886413574, 0.5124488472938538, 0.5104790925979614, 0.5015842318534851, 0.49835970997810364, 0.4891662299633026, 0.4972307085990906, 0.4822390079498291, 0.49744656682014465, 0.494533896446228, 0.4703899323940277, 0.4643741846084595, 0.48767828941345215, 0.4573912024497986, 0.4640214741230011, 0.4515564441680908, 0.45282331109046936, 0.4583818316459656, 0.4596678912639618, 0.4772896468639374, 0.44732195138931274, 0.4430387318134308], "val_accuracy": [0.47066667675971985, 0.6516666412353516, 0.6073333621025085, 0.6786666512489319, 0.7196666598320007, 0.746666669845581, 0.7526666522026062, 0.7239999771118164, 0.7663333415985107, 0.7713333368301392, 0.7896666526794434, 0.7599999904632568, 0.7879999876022339, 0.7963333129882812, 0.7979999780654907, 0.7990000247955322, 0.7643333077430725, 0.8006666898727417, 0.7910000085830688, 0.7950000166893005, 0.8130000233650208, 0.8149999976158142, 0.7919999957084656, 0.815666675567627, 0.812333345413208, 0.8253333568572998, 0.8143333196640015, 0.8253333568572998, 0.8176666498184204, 0.8309999704360962, 0.8180000185966492, 0.8220000267028809, 0.8320000171661377, 0.8343333601951599, 0.8166666626930237, 0.8363333344459534, 0.8343333601951599, 0.8379999995231628, 0.8446666598320007, 0.8339999914169312, 0.8296666741371155, 0.8323333263397217, 0.8413333296775818, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 3, 3, 5, 0, 8, 5, 1, 0, 6], [3, 0, 1, 0, 2, 1, 0], [0, 39, 39], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 6, 3, 8, 6], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 3, 4, 2, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.square(grad), tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(tf.math.subtract(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [28768.908203125, 569751502848.0, 9.179310757639094e+18, 7.737484957043064e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09126931428909302, 0.09985470771789551, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1956306.125, 34680153833472.0, 5.771755580067802e+20, 2.3025853633880615, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09666666388511658, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 9, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 8, 0, 6, 5], [0, 6, 1], [0], [1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8947317600250244, 2.349622964859009, 2.9149835109710693, 2.3073582649230957, 2.303480625152588, 2.30303955078125, 2.3031814098358154, 2.3029022216796875], "accuracy": [0.19244486093521118, 0.18570862710475922, 0.16061286628246307, 0.09919429570436478, 0.0952318087220192, 0.09298639744520187, 0.09140139818191528, 0.0952318087220192], "val_loss": [2.299710512161255, 2.2975003719329834, 2.313267230987549, 2.3032619953155518, 2.302738666534424, 2.302614212036133, 2.3025882244110107, 2.302619695663452], "val_accuracy": [0.09866666793823242, 0.10166666656732559, 0.10199999809265137, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 81], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 0, 3, 3, 0], [16, 1], [1, 0, 1, 1, 1, 1, 0, 1], [3, 2, 0, 2, 5], [0, 6, 1], [96], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310737371444702, 2.31005859375, 2.3097004890441895, 2.3093509674072266, 2.3098840713500977, 2.3101494312286377], "accuracy": [0.08928807079792023, 0.09232597798109055, 0.09179764986038208, 0.0948355570435524, 0.09206181764602661, 0.09179764986038208], "val_loss": [2.308488368988037, 2.308488368988037, 2.308488368988037, 2.308488368988037, 2.308488368988037, 2.308488368988037], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 1, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 2, 0, 4, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 5, 7, 4, 6, 0, 3, 3, 6, 2, 8, 5, 6, 5, 6, 2], [0, 6, 7, 4, 7, 4, 4, 3, 2, 4, 0, 5, 3], [0, 26], [1], [0], [2], [0]], "fitness": -0.08857142925262451, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 33, 20, 13, 2, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(grad, tf.math.sqrt(grad)), tf.math.square(grad)), grad), grad)), sigma), tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(beta, grad)), tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309666872024536, 2.3106939792633057, 2.3101632595062256, 2.3095452785491943, 2.3108439445495605, 2.3107049465179443], "accuracy": [0.09232597798109055, 0.08889182657003403, 0.09021265059709549, 0.08928807079792023, 0.08770307898521423, 0.09668471664190292], "val_loss": [2.3091182708740234, 2.3091182708740234, 2.3091182708740234, 2.3091182708740234, 2.3091182708740234, 2.3091182708740234], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]