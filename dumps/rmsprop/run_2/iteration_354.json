[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212830066680908, 1.6170470714569092, 1.1550266742706299, 0.995022714138031, 0.8801824450492859, 0.8372653126716614, 0.7837029695510864, 0.7492156028747559, 0.7196967005729675, 0.7002972960472107, 0.6932066082954407, 0.6543363332748413, 0.6432436108589172, 0.6366552114486694, 0.6269306540489197, 0.6153066158294678, 0.6079434156417847, 0.5878197550773621, 0.5727088451385498, 0.5668337941169739, 0.565651535987854, 0.5383684635162354, 0.550011396408081, 0.5388163328170776, 0.554628312587738, 0.5279902815818787, 0.5053852796554565, 0.5046976804733276, 0.5055360794067383, 0.5005323886871338, 0.48785263299942017, 0.48503851890563965, 0.4851750433444977, 0.48721829056739807, 0.4709926247596741, 0.4670107960700989, 0.46027299761772156, 0.4598471522331238, 0.4586777091026306, 0.45291000604629517, 0.4463086724281311, 0.43842217326164246, 0.438573956489563, 0.4367913007736206, 0.4365948438644409, 0.42563194036483765, 0.43072235584259033, 0.4183986186981201, 0.4082784652709961, 0.42100897431373596, 0.4162276089191437, 0.41624918580055237, 0.39963534474372864, 0.3950037956237793, 0.39707890152931213, 0.4023253321647644, 0.3878946900367737, 0.3970332443714142], "accuracy": [0.25795799493789673, 0.5071985125541687, 0.5962224006652832, 0.6493197679519653, 0.6934354901313782, 0.7024171352386475, 0.7169462442398071, 0.7264562249183655, 0.7388719916343689, 0.7458723783493042, 0.7467969655990601, 0.7626469135284424, 0.7680623531341553, 0.767401933670044, 0.7721568942070007, 0.7753269076347351, 0.7758552432060242, 0.785101056098938, 0.7891955971717834, 0.7893276810646057, 0.7864218950271606, 0.8014793395996094, 0.8001585006713867, 0.800290584564209, 0.7893276810646057, 0.811649739742279, 0.8121780753135681, 0.8131026029586792, 0.8112534880638123, 0.8148196935653687, 0.816008448600769, 0.8210275769233704, 0.8227446675300598, 0.8185180425643921, 0.8301413059234619, 0.8264430165290833, 0.8285563588142395, 0.8304054737091064, 0.8290846943855286, 0.8334434032440186, 0.8329150676727295, 0.8360850811004639, 0.841500461101532, 0.8392550349235535, 0.8381983637809753, 0.8437458872795105, 0.8411042094230652, 0.8436138033866882, 0.8519350290298462, 0.8465195894241333, 0.8448025584220886, 0.8482366800308228, 0.8457271456718445, 0.8514066934585571, 0.8580108284950256, 0.8541803956031799, 0.8580108284950256, 0.852859616279602], "val_loss": [1.9286261796951294, 1.1439881324768066, 0.9557062387466431, 0.8122220635414124, 0.7433499097824097, 0.6833059787750244, 0.6744650602340698, 0.6214792728424072, 0.6062960028648376, 0.6143220067024231, 0.6121171116828918, 0.5613611936569214, 0.5588662624359131, 0.5420625805854797, 0.574758768081665, 0.5377112030982971, 0.5268381237983704, 0.5068596601486206, 0.5349194407463074, 0.49394115805625916, 0.49341022968292236, 0.48498255014419556, 0.49632006883621216, 0.49060124158859253, 0.47588199377059937, 0.484101265668869, 0.4892220199108124, 0.4550397992134094, 0.4456654489040375, 0.4593546986579895, 0.43806159496307373, 0.4385451674461365, 0.443846195936203, 0.4335196018218994, 0.42820146679878235, 0.435026615858078, 0.4319330155849457, 0.4347544312477112, 0.42514508962631226, 0.41633671522140503, 0.410664826631546, 0.4169729948043823, 0.42669200897216797, 0.43597009778022766, 0.4113789498806, 0.41243505477905273, 0.4198686480522156, 0.39943212270736694, 0.4172874391078949, 0.39587000012397766, 0.4123932421207428, 0.390097975730896, 0.39404353499412537, 0.3906766474246979, 0.40045809745788574, 0.38639166951179504, 0.38964909315109253, 0.3800700306892395], "val_accuracy": [0.5616666674613953, 0.6336666941642761, 0.659333348274231, 0.6903333067893982, 0.7213333249092102, 0.7363333106040955, 0.734333336353302, 0.7663333415985107, 0.7743333578109741, 0.7733333110809326, 0.7609999775886536, 0.7893333435058594, 0.7906666398048401, 0.800000011920929, 0.7786666750907898, 0.8003333210945129, 0.8026666641235352, 0.8080000281333923, 0.7873333096504211, 0.8133333325386047, 0.8190000057220459, 0.8036666512489319, 0.8056666851043701, 0.8180000185966492, 0.8209999799728394, 0.8153333067893982, 0.8113333582878113, 0.8286666870117188, 0.8326666951179504, 0.8270000219345093, 0.8373333215713501, 0.8360000252723694, 0.8253333568572998, 0.8410000205039978, 0.8413333296775818, 0.8363333344459534, 0.8399999737739563, 0.8376666903495789, 0.8376666903495789, 0.847000002861023, 0.846666693687439, 0.843999981880188, 0.8413333296775818, 0.8376666903495789, 0.8493333458900452, 0.8423333168029785, 0.8363333344459534, 0.8526666760444641, 0.8376666903495789, 0.8476666808128357, 0.8393333554267883, 0.8513333201408386, 0.856333315372467, 0.8519999980926514, 0.856333315372467, 0.8523333072662354, 0.8479999899864197, 0.8560000061988831]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 5, 5, 2, 1, 3, 7, 2, 3, 1, 3, 0, 3, 0, 6, 5, 4, 1, 3], [0, 6, 1, 0, 0, 0, 4, 2, 4, 4, 4, 1, 6, 7], [0, 87, 1, 69], [1], [0], [2], [0]], "fitness": -0.29257142543792725, "mapping_values": [1, 10, 5, 5, 2, 8, 5, 3, 1, 35, 21, 14, 4, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.square(tf.math.square(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, alpha), tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.negative(beta)))))), tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.square(tf.math.pow(grad, grad)))), tf.math.subtract(tf.math.multiply(alpha, grad), grad)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.378156900405884, 2.2475152015686035, 2.297220468521118, 2.3040366172790527, 2.303210735321045, 2.3031961917877197, 2.3026340007781982, 2.298964500427246, 2.25040602684021, 2.8062198162078857, 2.3058366775512695, 2.303689956665039, 2.303121566772461, 2.302990436553955], "accuracy": [0.20842689275741577, 0.17593449354171753, 0.1422533392906189, 0.09998679161071777, 0.1018359512090683, 0.09708096832036972, 0.09826971590518951, 0.1274600476026535, 0.13538502156734467, 0.1710474193096161, 0.09998679161071777, 0.0936468094587326, 0.09800554811954498, 0.09602430462837219], "val_loss": [2.30224871635437, 2.263242483139038, 2.3050200939178467, 2.3030505180358887, 2.3027243614196777, 2.3022656440734863, 2.3015739917755127, 2.273829698562622, 2.25559139251709, 2.3073291778564453, 2.3037126064300537, 2.302833080291748, 2.302583932876587, 2.302476167678833], "val_accuracy": [0.10266666859388351, 0.11666666716337204, 0.10100000351667404, 0.09933333098888397, 0.09833333641290665, 0.09933333098888397, 0.15433333814144135, 0.1743333339691162, 0.2876666784286499, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [4, 2, 0, 6, 3, 8, 2], [2, 0, 3, 0, 0], [16, 1, 87], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 1, 4, 0, 1, 2], [0, 6, 1, 3, 0, 3, 3, 1, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 10, 5, 5, 3, 21, 12, 9, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.math.add(grad, alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.subtract(alpha, tf.math.pow(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.negative(sigma))))), tf.math.subtract(sigma, tf.math.add(alpha, beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 1, 1, 0, 2], [0, 39, 50], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 4, 5, 0], [16, 4], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1, 6, 0], [37], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30964732170105, 2.3097641468048096, 2.3100779056549072, 2.3102550506591797, 2.309368133544922, 2.30942964553833], "accuracy": [0.09549596905708313, 0.09681680053472519, 0.08928807079792023, 0.09008057415485382, 0.09219389408826828, 0.09734513610601425], "val_loss": [2.309685468673706, 2.309685468673706, 2.309685468673706, 2.309685468673706, 2.309685468673706, 2.309685468673706], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 71, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [6, 2, 9, 0, 8, 2, 1, 0, 8], [0, 6, 1, 0, 0], [0, 22, 50], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 0, 13, 9, 4, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.math.subtract(tf.math.negative(tf.math.sqrt(alpha)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097987174987793, 2.310408115386963, 2.31111741065979, 2.310084581375122, 2.308999538421631, 2.309372663497925], "accuracy": [0.09153348207473755, 0.09021265059709549, 0.0874389111995697, 0.09166556596755981, 0.09774138033390045, 0.09589222073554993], "val_loss": [2.308527946472168, 2.308527946472168, 2.308527946472168, 2.308527946472168, 2.308527946472168, 2.308527946472168], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]