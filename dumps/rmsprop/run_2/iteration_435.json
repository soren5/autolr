[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7931428551673889, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209336757659912, 1.5891438722610474, 1.126008152961731, 0.9798197746276855, 0.8637220859527588, 0.8122918009757996, 0.7609966397285461, 0.7510328888893127, 0.7178208827972412, 0.7008386254310608, 0.6602842807769775, 0.6630532741546631, 0.661040723323822, 0.6249523162841797, 0.601954996585846, 0.6003308892250061, 0.5892868041992188], "accuracy": [0.2728833854198456, 0.5101043581962585, 0.6073173880577087, 0.6413947939872742, 0.6886804699897766, 0.700171709060669, 0.7205125093460083, 0.7129837274551392, 0.7346453666687012, 0.7367587089538574, 0.7528728246688843, 0.754589855670929, 0.7489103078842163, 0.7689869403839111, 0.7700436115264893, 0.7712323069572449, 0.772288978099823], "val_loss": [1.919529676437378, 1.130643606185913, 0.960264265537262, 0.7880454063415527, 0.7745395302772522, 0.6885919570922852, 0.6789543032646179, 0.6468912959098816, 0.636135995388031, 0.6244692206382751, 0.5930205583572388, 0.5867380499839783, 0.5916526913642883, 0.5713047981262207, 0.5995274186134338, 0.5999113917350769, 0.5510833859443665], "val_accuracy": [0.5070000290870667, 0.5929999947547913, 0.628000020980835, 0.7039999961853027, 0.7256666421890259, 0.7310000061988831, 0.7386666536331177, 0.7670000195503235, 0.7680000066757202, 0.7713333368301392, 0.7833333611488342, 0.7940000295639038, 0.7876666784286499, 0.7796666622161865, 0.7720000147819519, 0.7559999823570251, 0.7893333435058594]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 1, 2, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 8, 2, 7, 2, 3], [0, 6, 1, 6, 0], [0, 22], [1], [0], [5], [0]], "fitness": -0.3677142858505249, "mapping_values": [1, 8, 4, 4, 1, 11, 6, 5, 2, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(alpha, tf.math.add(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.244258403778076, 2.292043924331665, 2.3040921688079834, 2.300649642944336, 2.945387125015259, 2.3593389987945557], "accuracy": [0.2370888888835907, 0.18676528334617615, 0.12495046854019165, 0.10315678268671036, 0.19891692698001862, 0.13234710693359375], "val_loss": [1.7490019798278809, 2.005793333053589, 2.3031716346740723, 2.284886360168457, 2.315751552581787, 2.3129758834838867], "val_accuracy": [0.36266666650772095, 0.2906666696071625, 0.10166666656732559, 0.156333327293396, 0.08133333176374435, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 8, 2, 3, 1], [0, 0, 1, 0, 2], [70, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 2, 0, 2, 5, 1, 9, 3], [0, 6, 1, 6, 0], [0, 22, 5], [0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 4, 8, 2], [2, 2, 7, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 4, 2, 2, 0, 13, 8, 5, 3, 9, 5, 4, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha))), tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [8, 2, 3, 2, 7, 5], [0, 2, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [82, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 2, 8, 2, 1], [4, 6, 1, 6, 4, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 5, 3, 2, 1, 13, 7, 6, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.add(grad, tf.math.subtract(alpha, grad))), grad), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032214641571045, 2.485060930252075, 18.27991485595703, 86.74895477294922, 212.89271545410156, 396.243408203125], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3090929985046387, 4.6969733238220215, 49.399173736572266, 151.7835235595703, 311.72625732421875, 529.378662109375], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 3, 5, 6, 4, 2, 3, 6, 6, 6, 1, 8, 7, 4, 2, 0], [0, 2, 1, 3, 0, 1, 2, 3, 1, 3, 1, 3, 3, 2, 0, 2, 1], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 0, 5, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 38, 21, 17, 3, 2, 1, 1, 0, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(grad, grad), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, alpha), tf.math.subtract(grad, tf.math.sqrt(grad)))), tf.math.add(tf.math.pow(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(alpha)))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103249073028564, 2.3098044395446777, 2.3099348545074463, 2.311107873916626, 2.3103890419006348, 2.3101460933685303], "accuracy": [0.0956280529499054, 0.08981640636920929, 0.09100515395402908, 0.09100515395402908, 0.08849557489156723, 0.09694888442754745], "val_loss": [2.308657646179199, 2.308657646179199, 2.308657646179199, 2.308657646179199, 2.308657646179199, 2.308657646179199], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]