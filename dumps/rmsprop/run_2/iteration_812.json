[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8180000185966492, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2154502868652344, 1.6301020383834839, 1.1627833843231201, 0.9692115783691406, 0.8940761685371399, 0.8205938339233398, 0.829310417175293, 0.7564894556999207, 0.7553383708000183, 0.698674738407135, 0.6813811659812927, 0.682697057723999, 0.668411135673523, 0.6424651145935059, 0.6279931664466858, 0.6362712979316711, 0.594925045967102, 0.6029686331748962, 0.5929110050201416, 0.5812665224075317, 0.5583662986755371, 0.5631858110427856, 0.5435615181922913, 0.553210437297821, 0.5258609056472778, 0.5378890633583069, 0.5220890641212463, 0.5030214190483093, 0.5054134130477905, 0.4894757568836212, 0.5007873773574829, 0.49305468797683716, 0.4756092131137848, 0.4804942011833191, 0.48269304633140564, 0.47431662678718567, 0.464045912027359, 0.4722212553024292, 0.4617195427417755, 0.4406946003437042, 0.4466118812561035, 0.44636139273643494, 0.4441211223602295, 0.43849536776542664, 0.4354766309261322, 0.42550724744796753, 0.42263251543045044, 0.42661356925964355, 0.4173060357570648, 0.40521755814552307, 0.40686801075935364, 0.39147505164146423, 0.40411561727523804, 0.40014901757240295, 0.3956288993358612, 0.40137869119644165, 0.38165590167045593, 0.3911255896091461, 0.3838083744049072, 0.38161852955818176, 0.37579432129859924, 0.37819066643714905, 0.36846524477005005, 0.3730214238166809, 0.3703814744949341, 0.35890665650367737, 0.35237714648246765, 0.35015422105789185, 0.3603602647781372], "accuracy": [0.2658829689025879, 0.5046889185905457, 0.594241201877594, 0.6548672318458557, 0.6785101294517517, 0.6976621150970459, 0.6933034062385559, 0.7191916704177856, 0.7239466309547424, 0.7397965788841248, 0.7510236501693726, 0.7437590956687927, 0.7474573850631714, 0.7592127919197083, 0.7648923397064209, 0.7585523724555969, 0.7807422876358032, 0.7738739848136902, 0.7825914621353149, 0.776251494884491, 0.7922335267066956, 0.7873464822769165, 0.7989697456359863, 0.7922335267066956, 0.8092722296714783, 0.804649293422699, 0.8112534880638123, 0.8175934553146362, 0.8164047002792358, 0.8239334225654602, 0.8190463781356812, 0.8164047002792358, 0.8230088353157043, 0.8215559124946594, 0.8212917447090149, 0.8298771381378174, 0.8265751004219055, 0.8234050869941711, 0.8308017253875732, 0.8389908671379089, 0.8329150676727295, 0.8354246616363525, 0.8322546482086182, 0.8416325449943542, 0.8352925777435303, 0.8445383906364441, 0.8459912538528442, 0.8426892161369324, 0.848368763923645, 0.8498216867446899, 0.8514066934585571, 0.8564258217811584, 0.8519350290298462, 0.8518029451370239, 0.8562937378883362, 0.8512746095657349, 0.8598600029945374, 0.8548408150672913, 0.8580108284950256, 0.8582749962806702, 0.860652506351471, 0.8614450097084045, 0.8639545440673828, 0.8615770936012268, 0.8652753829956055, 0.870030403137207, 0.8730682730674744, 0.8732003569602966, 0.8683133125305176], "val_loss": [1.9327828884124756, 1.1086703538894653, 0.9234192967414856, 0.8267581462860107, 0.8352119326591492, 0.6928920745849609, 0.6461800336837769, 0.6623852252960205, 0.6089568734169006, 0.6517854928970337, 0.6739970445632935, 0.62456876039505, 0.5777227282524109, 0.5504096746444702, 0.5655668377876282, 0.5394961833953857, 0.5600857734680176, 0.5486807823181152, 0.5314698815345764, 0.5038957595825195, 0.5064241290092468, 0.5241951942443848, 0.48755231499671936, 0.4969250559806824, 0.48647361993789673, 0.477581262588501, 0.48025259375572205, 0.46416833996772766, 0.4520532190799713, 0.4624829590320587, 0.4683549106121063, 0.451331228017807, 0.460659921169281, 0.4532155394554138, 0.45174556970596313, 0.4374346137046814, 0.433744877576828, 0.4511447846889496, 0.42399054765701294, 0.43427759408950806, 0.42823678255081177, 0.4578036367893219, 0.41818127036094666, 0.4220923185348511, 0.4143500030040741, 0.4125785827636719, 0.40964484214782715, 0.4134393632411957, 0.39728865027427673, 0.40672916173934937, 0.3945726454257965, 0.40966731309890747, 0.3940085470676422, 0.4024336636066437, 0.3913646936416626, 0.40289124846458435, 0.3905593156814575, 0.38781169056892395, 0.387746661901474, 0.38832372426986694, 0.3794676959514618, 0.3900417983531952, 0.3800751268863678, 0.37872835993766785, 0.37548115849494934, 0.38507941365242004, 0.37698274850845337, 0.3798786997795105, 0.4065016806125641], "val_accuracy": [0.5773333311080933, 0.6539999842643738, 0.6356666684150696, 0.6733333468437195, 0.668666660785675, 0.7319999933242798, 0.7443333268165588, 0.7263333201408386, 0.7676666378974915, 0.7493333220481873, 0.7089999914169312, 0.7363333106040955, 0.7736666798591614, 0.7773333191871643, 0.7633333206176758, 0.7856666445732117, 0.7803333401679993, 0.7886666655540466, 0.7926666736602783, 0.8046666383743286, 0.8029999732971191, 0.7979999780654907, 0.8143333196640015, 0.8083333373069763, 0.8083333373069763, 0.8230000138282776, 0.8206666707992554, 0.8199999928474426, 0.8246666789054871, 0.8220000267028809, 0.8206666707992554, 0.8276666402816772, 0.8303333520889282, 0.8230000138282776, 0.8289999961853027, 0.8273333311080933, 0.8336666822433472, 0.8246666789054871, 0.8376666903495789, 0.8293333053588867, 0.828000009059906, 0.8183333277702332, 0.843666672706604, 0.8349999785423279, 0.8420000076293945, 0.8513333201408386, 0.8483333587646484, 0.8356666564941406, 0.8500000238418579, 0.8496666550636292, 0.8526666760444641, 0.8429999947547913, 0.8526666760444641, 0.8503333330154419, 0.8533333539962769, 0.8506666421890259, 0.8539999723434448, 0.8506666421890259, 0.8566666841506958, 0.8529999852180481, 0.8603333234786987, 0.8519999980926514, 0.8600000143051147, 0.8616666793823242, 0.8610000014305115, 0.8526666760444641, 0.8610000014305115, 0.8566666841506958, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 7, 8, 6], [0, 2, 1, 0, 2, 0, 3], [0, 1, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 7, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [4], [0]], "fitness": -0.2919999957084656, "mapping_values": [1, 16, 9, 7, 3, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.080967426300049, 2.307130813598633, 2.263564109802246, 2.085949420928955, 2.534632921218872, 2.306533098220825, 2.304586172103882, 2.30370831489563, 2.3031017780303955], "accuracy": [0.17870822548866272, 0.11451591551303864, 0.14859332144260406, 0.26984545588493347, 0.1274600476026535, 0.10170386731624603, 0.09311848133802414, 0.09919429570436478, 0.09893012791872025], "val_loss": [2.3111979961395264, 2.2593343257904053, 2.2598652839660645, 2.291531801223755, 2.305919885635376, 2.3031044006347656, 2.3027029037475586, 2.302842140197754, 2.302757501602173], "val_accuracy": [0.1353333294391632, 0.24666666984558105, 0.2683333456516266, 0.28966665267944336, 0.10066666454076767, 0.10333333164453506, 0.10100000351667404, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [4, 6, 3, 2, 4, 5, 2], [0, 2, 1, 0, 2, 2, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 0, 1, 0, 1, 8], [2, 0, 3, 0, 0, 3, 2], [16, 1, 91], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 8, 9, 3, 2, 1], [0, 6, 1, 6, 4], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 3, 19, 12, 7, 3, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 4, 3, 5, 7], [3, 2, 1, 0, 2, 0], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 6, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1, 1, 1, 0, 0], [0, 2, 0, 2, 8, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 13, 7, 6, 2, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, tf.math.pow(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3112807273864746, 2.3081214427948, 2.310331106185913, 2.3100368976593018, 2.311112642288208, 2.3099586963653564], "accuracy": [0.09338264167308807, 0.09628847241401672, 0.09232597798109055, 0.09140139818191528, 0.09166556596755981, 0.09021265059709549], "val_loss": [2.308281660079956, 2.308281660079956, 2.308281660079956, 2.308281660079956, 2.308281660079956, 2.308281660079956], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [8, 2, 3, 2, 5, 5, 6, 0, 6, 8, 1, 6, 2, 5, 3, 3, 7, 8, 8], [0, 2, 1, 0, 2, 3, 1, 1, 0, 1, 2, 3], [0, 92, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 6, 2], [2, 0, 3, 1, 0, 4], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [7, 7, 9, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22, 1], [0, 0], [0, 9], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 31, 19, 12, 3, 13, 7, 6, 2, 12, 7, 5, 3, 2, 2, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.multiply(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha))), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3098464012145996, 2.3102405071258545, 2.3108668327331543, 2.310028314590454, 2.309708833694458, 2.3113059997558594], "accuracy": [0.09457138925790787, 0.09285431355237961, 0.0940430611371994, 0.08994849026203156, 0.09774138033390045, 0.09232597798109055], "val_loss": [2.309523344039917, 2.309523344039917, 2.309523344039917, 2.309523344039917, 2.309523344039917, 2.309523344039917], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]