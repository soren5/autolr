[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2085399627685547, 1.5911551713943481, 1.1266061067581177, 0.948396623134613, 0.8727338910102844, 0.8313202857971191, 0.7558795213699341, 0.7366483807563782, 0.711760938167572, 0.692173957824707, 0.6673754453659058, 0.6579862236976624, 0.644767701625824, 0.62253338098526, 0.5931130051612854, 0.5987390875816345, 0.5879285931587219, 0.5800333619117737, 0.5698350667953491, 0.5516954064369202, 0.554756224155426, 0.5252405405044556, 0.5228431820869446, 0.5377720594406128, 0.5061773061752319, 0.5033350586891174, 0.49528011679649353, 0.49914467334747314, 0.4874798655509949, 0.4811280071735382, 0.4850902855396271, 0.46794068813323975, 0.46784707903862, 0.4602270722389221, 0.459302693605423, 0.4478497803211212, 0.44296810030937195, 0.43970128893852234, 0.43789947032928467, 0.4396582245826721, 0.42847537994384766, 0.41546431183815, 0.44083818793296814, 0.4159153699874878, 0.4072500765323639, 0.40625476837158203, 0.41099750995635986, 0.40567442774772644, 0.39624232053756714, 0.39597681164741516, 0.386806458234787, 0.3871211111545563, 0.3801388144493103, 0.38516470789909363, 0.3803981840610504, 0.3706554174423218, 0.3684578537940979, 0.36564937233924866, 0.36785346269607544, 0.35799461603164673, 0.36213281750679016, 0.3582616150379181, 0.34056544303894043, 0.3526461124420166, 0.34518834948539734, 0.33846035599708557], "accuracy": [0.27539294958114624, 0.5116893649101257, 0.6066569685935974, 0.6650376319885254, 0.6790384650230408, 0.6940959095954895, 0.7202483415603638, 0.7290979027748108, 0.7360982894897461, 0.7367587089538574, 0.7526086568832397, 0.7580240368843079, 0.7576277852058411, 0.76542067527771, 0.7800818681716919, 0.7774402499198914, 0.7788931727409363, 0.7784969210624695, 0.7849689722061157, 0.7969884872436523, 0.7913089394569397, 0.7991018295288086, 0.8021397590637207, 0.8013472557067871, 0.8080834746360779, 0.8144234418869019, 0.8170651197433472, 0.8124422430992126, 0.8150838613510132, 0.8202351331710815, 0.8193105459213257, 0.8296129703521729, 0.8219521641731262, 0.832650899887085, 0.8294808864593506, 0.8333113193511963, 0.8404437899589539, 0.8389908671379089, 0.8412362933158875, 0.8378021121025085, 0.8418967127799988, 0.847840428352356, 0.8363492488861084, 0.8450667262077332, 0.8519350290298462, 0.8500858545303345, 0.8461233377456665, 0.8535200357437134, 0.8562937378883362, 0.8551049828529358, 0.8555012345314026, 0.8610487580299377, 0.8577466607093811, 0.8555012345314026, 0.8584070801734924, 0.8638224601745605, 0.8636903762817383, 0.863558292388916, 0.8603883385658264, 0.8676528930664062, 0.8659358024597168, 0.8687095642089844, 0.8790120482444763, 0.8728041052818298, 0.8722757697105408, 0.8721436858177185], "val_loss": [1.9093531370162964, 1.099230408668518, 0.8904664516448975, 0.7554591298103333, 0.771787703037262, 0.7373151779174805, 0.6367518305778503, 0.6611813306808472, 0.6224483847618103, 0.6015120148658752, 0.6032333374023438, 0.5862963199615479, 0.5744801163673401, 0.542524516582489, 0.5497757792472839, 0.6016544699668884, 0.5261406898498535, 0.5263535380363464, 0.5548493266105652, 0.5503305792808533, 0.5089601278305054, 0.5073570013046265, 0.49502649903297424, 0.5040300488471985, 0.47237882018089294, 0.48888614773750305, 0.4678376317024231, 0.4820188879966736, 0.4674004316329956, 0.4844509959220886, 0.47549909353256226, 0.4748261570930481, 0.4599374532699585, 0.44744381308555603, 0.4426584541797638, 0.4517380893230438, 0.452479749917984, 0.4371311366558075, 0.4501490890979767, 0.4276142716407776, 0.43321627378463745, 0.43181151151657104, 0.4263963997364044, 0.4408006966114044, 0.42604631185531616, 0.43390119075775146, 0.427298903465271, 0.42455777525901794, 0.41631844639778137, 0.41686174273490906, 0.4199986457824707, 0.41711685061454773, 0.4122394919395447, 0.4056796133518219, 0.40263867378234863, 0.40247461199760437, 0.41254276037216187, 0.4223211407661438, 0.4062204957008362, 0.4050063490867615, 0.39644816517829895, 0.4119568169116974, 0.40740740299224854, 0.40584126114845276, 0.391457736492157, 0.40931788086891174], "val_accuracy": [0.5173333287239075, 0.6453333497047424, 0.6809999942779541, 0.7193333506584167, 0.7073333263397217, 0.7009999752044678, 0.7643333077430725, 0.7493333220481873, 0.7519999742507935, 0.7770000100135803, 0.765666663646698, 0.7773333191871643, 0.7730000019073486, 0.8016666769981384, 0.7870000004768372, 0.7493333220481873, 0.8026666641235352, 0.7953333258628845, 0.7846666574478149, 0.7846666574478149, 0.8056666851043701, 0.8076666593551636, 0.8083333373069763, 0.8073333501815796, 0.8259999752044678, 0.8066666722297668, 0.8236666917800903, 0.8136666417121887, 0.8270000219345093, 0.8190000057220459, 0.8183333277702332, 0.8159999847412109, 0.824999988079071, 0.8386666774749756, 0.8386666774749756, 0.8296666741371155, 0.8266666531562805, 0.8420000076293945, 0.8316666483879089, 0.8450000286102295, 0.8363333344459534, 0.8396666646003723, 0.8403333425521851, 0.8343333601951599, 0.8453333377838135, 0.8433333039283752, 0.843666672706604, 0.843666672706604, 0.8479999899864197, 0.8500000238418579, 0.8446666598320007, 0.8413333296775818, 0.8463333249092102, 0.8496666550636292, 0.8533333539962769, 0.8536666631698608, 0.8460000157356262, 0.8370000123977661, 0.8513333201408386, 0.8510000109672546, 0.8560000061988831, 0.8410000205039978, 0.8503333330154419, 0.8476666808128357, 0.8560000061988831, 0.8483333587646484]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [58, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [4, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 7, 4, 3, 1, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 2, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 3, 4, 1], [0, 6, 1, 6, 0], [65, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.pow(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 2], [16, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [7, 7, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 1, 5, 3, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.add(alpha, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [84, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [4, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 2, 1, 1, 1, 4, 3, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093459606170654, 2.3100874423980713, 2.309690475463867, 2.3104727268218994, 2.3110241889953613, 2.3097949028015137], "accuracy": [0.09153348207473755, 0.0940430611371994, 0.09285431355237961, 0.09113723784685135, 0.08651433140039444, 0.09576013684272766], "val_loss": [2.308082342147827, 2.308082342147827, 2.308082342147827, 2.308082342147827, 2.308082342147827, 2.308082342147827], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]