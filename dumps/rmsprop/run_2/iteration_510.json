[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208679437637329, 1.6022427082061768, 1.159900188446045, 0.9703552722930908, 0.8783866763114929, 0.848781943321228, 0.7746758460998535, 0.7610072493553162, 0.7331834435462952, 0.7147640585899353, 0.683540940284729, 0.6929327845573425, 0.6445783376693726, 0.6487625241279602, 0.645597517490387, 0.6106556057929993, 0.6086431741714478, 0.602773129940033, 0.5741930603981018, 0.5706917643547058, 0.5807372331619263, 0.5528285503387451, 0.5492479801177979, 0.5480554103851318, 0.5313366651535034, 0.5375784635543823, 0.5166710615158081, 0.5124629139900208, 0.5062026381492615, 0.509017288684845, 0.5002071857452393, 0.505298912525177, 0.4880998730659485, 0.47942641377449036, 0.47268545627593994, 0.46450525522232056, 0.4670540690422058, 0.45896559953689575, 0.45286956429481506, 0.45463424921035767, 0.4501066207885742, 0.45393088459968567, 0.4352874159812927, 0.42174699902534485, 0.43328016996383667, 0.4276992678642273, 0.43477609753608704, 0.42947012186050415, 0.41759786009788513, 0.41703498363494873, 0.40982380509376526, 0.4048609137535095, 0.4106873571872711, 0.4141610264778137, 0.39510616660118103], "accuracy": [0.2645621597766876, 0.5007264614105225, 0.5968828201293945, 0.6547351479530334, 0.6828688383102417, 0.6882842183113098, 0.7187954187393188, 0.7180029153823853, 0.733060359954834, 0.7360982894897461, 0.750231146812439, 0.7415136694908142, 0.7588165402412415, 0.7598732113838196, 0.7652885913848877, 0.7700436115264893, 0.7744023203849792, 0.7751948237419128, 0.7857614755630493, 0.789459764957428, 0.7817989587783813, 0.7976489067077637, 0.7979130744934082, 0.7923656105995178, 0.8062343001365662, 0.8025360107421875, 0.8079513907432556, 0.806630551815033, 0.8138951063156128, 0.8137630224227905, 0.8145555257797241, 0.813498854637146, 0.8186501264572144, 0.8259146809577942, 0.8255184292793274, 0.8334434032440186, 0.8309338092803955, 0.8294808864593506, 0.8308017253875732, 0.8322546482086182, 0.8348963260650635, 0.8319904804229736, 0.8428213000297546, 0.8462554216384888, 0.8396512866020203, 0.8429533839225769, 0.8401796221733093, 0.8421608805656433, 0.8474441766738892, 0.8436138033866882, 0.8494254350662231, 0.8500858545303345, 0.8499537706375122, 0.8492933511734009, 0.852859616279602], "val_loss": [1.9157005548477173, 1.1067029237747192, 0.8884579539299011, 0.8077090382575989, 0.7245109677314758, 0.6947333812713623, 0.7645615935325623, 0.6505247354507446, 0.6411489844322205, 0.6300113797187805, 0.5848896503448486, 0.5981689691543579, 0.5665029883384705, 0.6334505081176758, 0.5590085387229919, 0.5497444272041321, 0.5641208291053772, 0.5310713052749634, 0.5214890241622925, 0.5258967280387878, 0.5108869075775146, 0.5002933144569397, 0.5128771066665649, 0.523037850856781, 0.486324667930603, 0.49681738018989563, 0.48806115984916687, 0.4946635663509369, 0.48792603611946106, 0.4598483741283417, 0.46275633573532104, 0.4636898636817932, 0.4552661180496216, 0.47239428758621216, 0.44705477356910706, 0.45286378264427185, 0.4441949725151062, 0.44309917092323303, 0.4391644597053528, 0.4401770830154419, 0.4423062205314636, 0.4365881383419037, 0.4325598180294037, 0.42529910802841187, 0.42908424139022827, 0.45617419481277466, 0.42658740282058716, 0.4205411374568939, 0.4132842719554901, 0.41199830174446106, 0.41465356945991516, 0.41900578141212463, 0.4474406838417053, 0.4231519401073456, 0.4086022973060608], "val_accuracy": [0.4909999966621399, 0.6439999938011169, 0.6919999718666077, 0.718666672706604, 0.7273333072662354, 0.7289999723434448, 0.7043333053588867, 0.7483333349227905, 0.7396666407585144, 0.7556666731834412, 0.7676666378974915, 0.7693333625793457, 0.784333348274231, 0.746666669845581, 0.7760000228881836, 0.7870000004768372, 0.765666663646698, 0.7979999780654907, 0.8036666512489319, 0.8013333082199097, 0.8146666884422302, 0.8109999895095825, 0.8056666851043701, 0.7960000038146973, 0.8180000185966492, 0.809333324432373, 0.8130000233650208, 0.8116666674613953, 0.8173333406448364, 0.8276666402816772, 0.8343333601951599, 0.8339999914169312, 0.8346666693687439, 0.8289999961853027, 0.8379999995231628, 0.8276666402816772, 0.8389999866485596, 0.8376666903495789, 0.8386666774749756, 0.8413333296775818, 0.8393333554267883, 0.8453333377838135, 0.8423333168029785, 0.8460000157356262, 0.843666672706604, 0.8353333473205566, 0.8423333168029785, 0.8503333330154419, 0.8519999980926514, 0.8576666712760925, 0.8500000238418579, 0.8510000109672546, 0.8286666870117188, 0.846666693687439, 0.8536666631698608]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [89, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [2, 9, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 9, 6, 2, 7, 2, 7], [0, 6, 0, 6, 6], [11, 32], [1], [0], [7], [0]], "fitness": -0.3448571562767029, "mapping_values": [1, 6, 3, 3, 1, 4, 3, 1, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5448997020721436, 2.311140298843384, 2.222388505935669, 2.3093512058258057, 2.3031809329986572, 2.284796953201294, 2.2799322605133057, 2.30558443069458, 2.30423903465271, 2.30407452583313, 2.3006234169006348], "accuracy": [0.18742570281028748, 0.11227050423622131, 0.19693566858768463, 0.10342095047235489, 0.09985470771789551, 0.14410249888896942, 0.15097081661224365, 0.09734513610601425, 0.09945846349000931, 0.09457138925790787, 0.11042134463787079], "val_loss": [2.303093910217285, 2.3109493255615234, 2.324176549911499, 2.3032233715057373, 2.3022618293762207, 2.031531572341919, 2.3069007396698, 2.3028979301452637, 2.3033900260925293, 2.3020641803741455, 2.2743589878082275], "val_accuracy": [0.09966666996479034, 0.1146666631102562, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665, 0.3553333282470703, 0.10066666454076767, 0.10100000351667404, 0.09833333641290665, 0.10300000011920929, 0.27666667103767395]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 7, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1, 1], [0, 2], [2, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 0, 11, 7, 4, 1, 4, 2, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 2, 3, 5], [0, 2, 1, 0, 2], [94, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 0, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 9, 0, 2, 5, 5, 8], [6, 6, 1, 6, 0], [0, 22], [0, 0, 1, 1], [0, 2], [2, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 5, 1, 1, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, beta))", "other_info": {"loss": [2.303818941116333, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 23, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035080432891846, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]