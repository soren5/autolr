[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109901905059814, 1.612125277519226, 1.1616641283035278, 1.000296950340271, 0.8841562867164612, 0.8437690138816833, 0.7943483591079712, 0.7570107579231262, 0.7657859921455383, 0.6954612731933594, 0.7093700766563416, 0.6897013187408447, 0.6593548059463501, 0.6527408957481384, 0.6361004710197449, 0.6274822354316711, 0.600492537021637, 0.6086778044700623, 0.5898473858833313, 0.5791559219360352, 0.5745777487754822, 0.5732277631759644, 0.5470854640007019, 0.5452982783317566, 0.5392984747886658, 0.5379365682601929, 0.5221717357635498, 0.5127518773078918, 0.5116597414016724, 0.5098548531532288, 0.5096787810325623, 0.5015942454338074, 0.5115566849708557, 0.4832042455673218], "accuracy": [0.2646942138671875, 0.5007264614105225, 0.5890899300575256, 0.6390172839164734, 0.6800950765609741, 0.6877558827400208, 0.7104741930961609, 0.7259278893470764, 0.7154933214187622, 0.7466648817062378, 0.7308149337768555, 0.7409853339195251, 0.750759482383728, 0.7489103078842163, 0.76106196641922, 0.7700436115264893, 0.7773081660270691, 0.7753269076347351, 0.7810064554214478, 0.7864218950271606, 0.787082314491272, 0.7881389260292053, 0.7944789528846741, 0.7952714562416077, 0.8042530417442322, 0.7928939461708069, 0.8067626357078552, 0.8087438941001892, 0.8100647330284119, 0.8086118102073669, 0.8095363974571228, 0.8131026029586792, 0.8150838613510132, 0.8187822103500366], "val_loss": [1.922816514968872, 1.0908595323562622, 0.8960689306259155, 0.7807902097702026, 0.8129009008407593, 0.6834293007850647, 0.6822022199630737, 0.6562408804893494, 0.6021198630332947, 0.6318114995956421, 0.6362149715423584, 0.568272054195404, 0.5720212459564209, 0.5631219148635864, 0.559572160243988, 0.5442489981651306, 0.5560718774795532, 0.5060201287269592, 0.5005005598068237, 0.5131641626358032, 0.49416449666023254, 0.4953693151473999, 0.47734129428863525, 0.4914499521255493, 0.4791763126850128, 0.48878034949302673, 0.462821900844574, 0.4593693017959595, 0.446491003036499, 0.45502039790153503, 0.45808008313179016, 0.46462541818618774, 0.4518120586872101, 0.4548085033893585], "val_accuracy": [0.47966668009757996, 0.6579999923706055, 0.6836666464805603, 0.7273333072662354, 0.6959999799728394, 0.7396666407585144, 0.7473333477973938, 0.7573333382606506, 0.7816666960716248, 0.7379999756813049, 0.7366666793823242, 0.7876666784286499, 0.7773333191871643, 0.7799999713897705, 0.7910000085830688, 0.7793333530426025, 0.7826666831970215, 0.8190000057220459, 0.8116666674613953, 0.812666654586792, 0.8143333196640015, 0.8046666383743286, 0.8303333520889282, 0.8043333292007446, 0.8159999847412109, 0.8270000219345093, 0.8243333101272583, 0.8343333601951599, 0.840666651725769, 0.8346666693687439, 0.8320000171661377, 0.8356666564941406, 0.8326666951179504, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2, 3, 3], [0, 2, 1, 0, 2, 3, 1, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 0, 0], [0, 5, 35], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 2, 11, 6, 5, 2, 12, 7, 5, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304929733276367, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 3, 2, 8, 5], [0, 2, 1, 0, 2], [79, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1, 2, 6, 2, 5, 2, 8, 3, 9, 1], [0, 6, 1, 6, 0, 4, 5, 4, 4, 0], [41, 22, 70, 44], [0, 0, 1, 1], [0, 2], [2, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 4, 2, 2, 1, 26, 16, 10, 4, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.math.add(tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.add(grad, grad)))), tf.math.sqrt(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1, 1], [6, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 5], [0], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.011242628097534, 2.307788133621216, 2.303860902786255, 2.3030357360839844, 2.303128719329834, 2.3031909465789795, 2.3030076026916504, 2.3030920028686523], "accuracy": [0.19680359959602356, 0.10011887550354004, 0.1010434553027153, 0.09853387624025345, 0.09536388516426086, 0.09192973375320435, 0.09272222965955734, 0.0936468094587326], "val_loss": [2.308838129043579, 2.303539752960205, 2.3026185035705566, 2.3025991916656494, 2.302607536315918, 2.302572011947632, 2.302617073059082, 2.302609920501709], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10166666656732559, 0.09933333098888397, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09933333098888397]}, "mapping_values": [1, 12, 6, 6, 3, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 9, 3, 5], [0, 0, 1, 0, 2], [0, 39, 44], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 7, 3, 8, 2], [1, 2, 2, 1, 0], [16, 1], [0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 1, 0, 1, 9, 5, 4, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.multiply(beta, beta), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308631420135498, 2.3093130588531494, 2.310676097869873, 2.3111703395843506, 2.3097426891326904, 2.308953046798706], "accuracy": [0.0940430611371994, 0.08730682730674744, 0.0886276587843895, 0.09126931428909302, 0.09351472556591034, 0.09232597798109055], "val_loss": [2.3089773654937744, 2.3089773654937744, 2.3089773654937744, 2.3089773654937744, 2.3089773654937744, 2.3089773654937744], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]