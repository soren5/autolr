[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8025714159011841, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2107021808624268, 1.6234427690505981, 1.1704339981079102, 0.9828459620475769, 0.9072085022926331, 0.8454425930976868, 0.8038537502288818, 0.7497513890266418, 0.7542572021484375, 0.7152189612388611, 0.7088056206703186, 0.677091121673584, 0.666667640209198, 0.6424584984779358, 0.6287602782249451, 0.6276087760925293, 0.6118884682655334, 0.5987387299537659, 0.5934147834777832, 0.5784632563591003, 0.5729286670684814, 0.5541486740112305, 0.5411821007728577, 0.5614771246910095, 0.5262206792831421, 0.5418549180030823, 0.5321606397628784, 0.5140324831008911, 0.5138535499572754, 0.5074717998504639, 0.49855244159698486, 0.4982879161834717, 0.4996929168701172, 0.4884176552295685], "accuracy": [0.2694492042064667, 0.4986131191253662, 0.590278685092926, 0.6497160196304321, 0.6701889038085938, 0.6946242451667786, 0.7036058902740479, 0.7246070504188538, 0.7231541275978088, 0.7353057861328125, 0.7322678565979004, 0.7483819723129272, 0.7500990629196167, 0.7607977986335754, 0.7623828053474426, 0.7668735980987549, 0.7701756954193115, 0.7802139520645142, 0.7788931727409363, 0.7833839654922485, 0.783119797706604, 0.7950072884559631, 0.7950072884559631, 0.7922335267066956, 0.8034605979919434, 0.7940827012062073, 0.7998943328857422, 0.8080834746360779, 0.8108572363853455, 0.8090080618858337, 0.8145555257797241, 0.811649739742279, 0.8157442808151245, 0.8171972036361694], "val_loss": [1.9206129312515259, 1.1111646890640259, 0.883435845375061, 0.8151054978370667, 0.7681582570075989, 0.685275137424469, 0.6430953145027161, 0.6643073558807373, 0.6025035977363586, 0.6317470073699951, 0.5830380916595459, 0.5486207008361816, 0.5499932169914246, 0.5462737083435059, 0.547878623008728, 0.5304635167121887, 0.5175447463989258, 0.5171563029289246, 0.49508118629455566, 0.49204200506210327, 0.48709794878959656, 0.47248560190200806, 0.47728344798088074, 0.46476879715919495, 0.46343547105789185, 0.47181883454322815, 0.45714908838272095, 0.4761819541454315, 0.4420812726020813, 0.4419911205768585, 0.4411170184612274, 0.4434329867362976, 0.43195080757141113, 0.4528096914291382], "val_accuracy": [0.5839999914169312, 0.6460000276565552, 0.6996666789054871, 0.7099999785423279, 0.7213333249092102, 0.7463333606719971, 0.7630000114440918, 0.7403333187103271, 0.7760000228881836, 0.746999979019165, 0.7806666493415833, 0.7976666688919067, 0.7950000166893005, 0.796999990940094, 0.7883333563804626, 0.8026666641235352, 0.8023333549499512, 0.8100000023841858, 0.815666675567627, 0.8203333616256714, 0.8256666660308838, 0.8303333520889282, 0.8183333277702332, 0.8299999833106995, 0.8159999847412109, 0.8233333230018616, 0.8346666693687439, 0.8220000267028809, 0.8433333039283752, 0.8429999947547913, 0.8420000076293945, 0.8366666436195374, 0.8383333086967468, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 2, 7, 2, 3, 5], [0, 2, 1, 0, 2], [11, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 4, 3, 7], [2, 4, 3, 1, 0, 5, 4, 1, 4], [98, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 1, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 20, 11, 9, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), grad), tf.math.add(tf.math.add(grad, alpha), tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad), grad), alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 6, 8, 8, 2, 9], [2, 0, 3, 1, 0], [12, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 6, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 10, 8, 2, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30935001373291, 2.310340166091919, 2.309434413909912, 2.3121793270111084, 2.3095929622650146, 2.3099024295806885], "accuracy": [0.09338264167308807, 0.09351472556591034, 0.09087307006120682, 0.09087307006120682, 0.09232597798109055, 0.09325055778026581], "val_loss": [2.3087151050567627, 2.3087151050567627, 2.3087151050567627, 2.3087151050567627, 2.3087151050567627, 2.3087151050567627], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 8, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310565710067749, 2.3089616298675537, 2.3093667030334473, 2.3091115951538086, 2.309587001800537, 2.30975341796875], "accuracy": [0.08730682730674744, 0.09351472556591034, 0.09060890227556229, 0.08651433140039444, 0.0948355570435524, 0.09642054885625839], "val_loss": [2.3083555698394775, 2.3083555698394775, 2.3083555698394775, 2.3083555698394775, 2.3083555698394775, 2.3083555698394775], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 5, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 0, 2, 7, 2, 1, 7, 0, 3, 2, 4, 1, 6, 1, 2, 6, 1, 5, 2, 0, 1, 2, 9, 0, 8, 7, 3, 4, 0, 1, 0, 5], [5, 6, 2, 6, 0, 3, 5, 7, 1, 2, 5, 5, 2, 7, 6, 4, 3, 4, 7, 7, 1, 1, 0], [0, 22, 74], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 0, 56, 33, 23, 3, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(tf.math.negative(beta), grad), tf.math.multiply(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), tf.math.add(grad, tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.square(alpha)), tf.math.add(tf.math.negative(tf.math.subtract(beta, tf.math.add(grad, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(beta)), grad), tf.math.sqrt(grad)), tf.math.add(tf.math.multiply(grad, tf.math.pow(sigma, tf.math.negative(tf.math.subtract(grad, grad)))), grad))), alpha), tf.math.negative(tf.math.square(alpha))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309156894683838, 2.310192108154297, 2.3091773986816406, 2.309870481491089, 2.3091626167297363, 2.3101131916046143], "accuracy": [0.09060890227556229, 0.09628847241401672, 0.09694888442754745, 0.09509972482919693, 0.09642054885625839, 0.08942015469074249], "val_loss": [2.3092825412750244, 2.3092825412750244, 2.3092825412750244, 2.3092825412750244, 2.3092825412750244, 2.3092825412750244], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]