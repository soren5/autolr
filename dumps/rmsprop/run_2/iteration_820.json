[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.215902328491211, 1.6132280826568604, 1.13119375705719, 1.003970742225647, 0.8831639885902405, 0.8362962603569031, 0.767753541469574, 0.7697622179985046, 0.7394839525222778, 0.7049333453178406, 0.6780121326446533, 0.6720095872879028, 0.6894084811210632, 0.6372708082199097, 0.643903911113739, 0.6338212490081787, 0.5971797704696655, 0.5976439118385315, 0.6072931289672852, 0.5830721855163574, 0.5601747035980225, 0.5730101466178894, 0.5655767917633057, 0.5392847061157227, 0.541854739189148, 0.5418063998222351, 0.5221397876739502, 0.5132981538772583, 0.5153511762619019, 0.5159410238265991, 0.5054499506950378, 0.5039306282997131, 0.48802176117897034, 0.4832032024860382, 0.47727590799331665, 0.4743354022502899, 0.4687866270542145, 0.4715004563331604, 0.4653710424900055, 0.4602452516555786, 0.4535102844238281, 0.45865732431411743, 0.448974609375, 0.44583532214164734, 0.434707909822464, 0.4324406683444977, 0.4399664103984833, 0.43283507227897644, 0.42483311891555786, 0.428166925907135, 0.42944711446762085, 0.41245147585868835, 0.42146816849708557, 0.4089967906475067, 0.4163825213909149, 0.40859705209732056, 0.4040548801422119, 0.39586013555526733, 0.3912128508090973, 0.3884509801864624], "accuracy": [0.25478801131248474, 0.5101043581962585, 0.6050719618797302, 0.6465460062026978, 0.6847180128097534, 0.689869225025177, 0.7153612375259399, 0.7123233675956726, 0.7271166443824768, 0.7359662055969238, 0.7479857206344604, 0.7425703406333923, 0.7408532500267029, 0.7622507214546204, 0.7541936039924622, 0.7637035846710205, 0.7736098170280457, 0.7720248103141785, 0.7720248103141785, 0.7819310426712036, 0.7950072884559631, 0.78113853931427, 0.7860256433486938, 0.7991018295288086, 0.7976489067077637, 0.7992339134216309, 0.8042530417442322, 0.8035926818847656, 0.8094043135643005, 0.8138951063156128, 0.8096684813499451, 0.8112534880638123, 0.8206313848495483, 0.8177255392074585, 0.8216879963874817, 0.8273676037788391, 0.8280280232429504, 0.8244617581367493, 0.8241975903511047, 0.8269713521003723, 0.8329150676727295, 0.8285563588142395, 0.8354246616363525, 0.8338396549224854, 0.8408400416374207, 0.8421608805656433, 0.8389908671379089, 0.8465195894241333, 0.8366134166717529, 0.8421608805656433, 0.8417646288871765, 0.8491612672805786, 0.8473120927810669, 0.8457271456718445, 0.8465195894241333, 0.8490291833877563, 0.8500858545303345, 0.8570862412452698, 0.8557654023170471, 0.8602562546730042], "val_loss": [1.9329254627227783, 1.0979543924331665, 0.950631856918335, 0.8237141370773315, 0.7538403272628784, 0.7435784339904785, 0.7281761169433594, 0.7082892060279846, 0.6459836363792419, 0.6577622890472412, 0.6362296342849731, 0.6184581518173218, 0.5898147821426392, 0.610390841960907, 0.6114118695259094, 0.5646597743034363, 0.5636088252067566, 0.5981628894805908, 0.5610265731811523, 0.5344274640083313, 0.543359100818634, 0.5321455597877502, 0.5438036918640137, 0.5230416059494019, 0.5071004033088684, 0.5085141658782959, 0.5081658363342285, 0.5311389565467834, 0.5167916417121887, 0.49707064032554626, 0.4767323434352875, 0.4767836928367615, 0.46956875920295715, 0.47187769412994385, 0.48022785782814026, 0.47425082325935364, 0.4871324896812439, 0.4664157032966614, 0.4677838981151581, 0.45291048288345337, 0.46302542090415955, 0.45955559611320496, 0.4455808997154236, 0.45420727133750916, 0.4450675845146179, 0.4396739602088928, 0.4666914939880371, 0.43284258246421814, 0.45405125617980957, 0.4515830874443054, 0.4252888560295105, 0.42490363121032715, 0.42480966448783875, 0.4410642385482788, 0.41845566034317017, 0.4272691607475281, 0.4260731637477875, 0.4254637360572815, 0.41854777932167053, 0.4275589883327484], "val_accuracy": [0.5636666417121887, 0.6483333110809326, 0.6456666588783264, 0.7013333439826965, 0.7126666903495789, 0.7066666483879089, 0.6963333487510681, 0.7316666841506958, 0.7553333044052124, 0.7446666955947876, 0.7506666779518127, 0.7696666717529297, 0.7726666927337646, 0.7683333158493042, 0.7609999775886536, 0.7799999713897705, 0.7760000228881836, 0.7523333430290222, 0.7846666574478149, 0.8019999861717224, 0.7889999747276306, 0.8053333163261414, 0.7916666865348816, 0.8036666512489319, 0.8130000233650208, 0.8053333163261414, 0.8119999766349792, 0.7963333129882812, 0.7990000247955322, 0.8193333148956299, 0.8233333230018616, 0.824999988079071, 0.8276666402816772, 0.8253333568572998, 0.8133333325386047, 0.82833331823349, 0.8159999847412109, 0.8299999833106995, 0.8286666870117188, 0.8306666612625122, 0.824999988079071, 0.8330000042915344, 0.8360000252723694, 0.828000009059906, 0.8309999704360962, 0.8346666693687439, 0.815666675567627, 0.840666651725769, 0.82833331823349, 0.8386666774749756, 0.8410000205039978, 0.8423333168029785, 0.8366666436195374, 0.8383333086967468, 0.846666693687439, 0.8429999947547913, 0.840666651725769, 0.8463333249092102, 0.8423333168029785, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 6, 1, 6, 0], [38, 22], [1], [0], [2], [0]], "fitness": -0.11542857438325882, "mapping_values": [1, 11, 6, 5, 1, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, alpha), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.9905606026461184e+16, 1.078399905011073e+18, 9.05264426934023e+18, 3.3527632366145634e+19, 8.641810430207774e+19, 2.0507492746952442e+20], "accuracy": [0.0944393053650856, 0.1006472036242485, 0.09628847241401672, 0.10130762308835983, 0.09985470771789551, 0.09866596013307571], "val_loss": [1.8357707271359693e+17, 2.934906047057363e+18, 1.4854222870858433e+19, 4.6940917761012924e+19, 1.145934328114656e+20, 2.3760910709950933e+20], "val_accuracy": [0.11566666513681412, 0.11533333361148834, 0.11533333361148834, 0.11533333361148834, 0.11533333361148834, 0.11533333361148834]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [8, 8, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 6, 0, 2, 5, 2, 1, 6, 0], [0, 0, 1, 6, 0, 2], [0, 80, 17], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 1, 0, 1, 1, 15, 9, 6, 3, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, grad)))), tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [93.2879867553711, 11092.8466796875, 183734.921875, 1299887.375, 5736082.5, 18717814.0], "accuracy": [0.10170386731624603, 0.0956280529499054, 0.10672302544116974, 0.09959053993225098, 0.09655263274908066, 0.09879804402589798], "val_loss": [800.1314697265625, 39250.11328125, 417057.03125, 2266829.25, 8479863.0, 24995910.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 3, 2, 3, 4], [0, 2, 1, 0, 2], [30, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 0, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 0, 1], [0, 5, 0, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 2, 0, 1, 8, 5, 3, 1, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311386823654175, 2.3111348152160645, 2.3133151531219482, 2.3168485164642334, 2.316148042678833, 2.3198018074035645], "accuracy": [0.08968432247638702, 0.09074098616838455, 0.09457138925790787, 0.08440100401639938, 0.0866464152932167, 0.08730682730674744], "val_loss": [2.310659408569336, 2.3125367164611816, 2.3144397735595703, 2.3163814544677734, 2.3183164596557617, 2.3203091621398926], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09166666865348816, 0.09133332967758179, 0.09099999815225601, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5, 1, 6], [0, 2, 1, 2, 3, 0, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 5, 0, 6, 6, 8, 2], [2, 0, 0, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 2, 0, 2, 5, 3, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 15, 8, 7, 3, 11, 7, 4, 2, 11, 6, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(grad, tf.math.square(alpha))), tf.math.multiply(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311459541320801, 2.310654401779175, 2.309983491897583, 2.3106954097747803, 2.3097198009490967, 2.30902099609375], "accuracy": [0.0866464152932167, 0.09034473448991776, 0.0878351628780365, 0.09060890227556229, 0.08677849918603897, 0.09100515395402908], "val_loss": [2.3076350688934326, 2.3076350688934326, 2.3076350688934326, 2.3076350688934326, 2.3076350688934326, 2.3076350688934326], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]