[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091434001922607, 1.605454444885254, 1.147233247756958, 0.9923942685127258, 0.906200110912323, 0.8413146734237671, 0.7997478246688843, 0.7676035761833191, 0.7429625391960144, 0.7444037199020386, 0.6966965794563293, 0.6826618313789368, 0.6613710522651672, 0.6266244649887085, 0.6225695610046387, 0.6325956583023071, 0.6101555228233337, 0.6053241491317749, 0.5931172370910645, 0.5740472078323364, 0.5552394986152649, 0.5615519881248474, 0.5569850206375122, 0.541654109954834, 0.5310920476913452, 0.524168848991394, 0.5151333808898926, 0.5065345168113708, 0.5127488374710083, 0.4999733865261078, 0.4904104173183441, 0.5042678117752075, 0.4878247082233429, 0.47105181217193604, 0.4797956347465515, 0.4548597037792206, 0.4616169035434723, 0.45661094784736633, 0.451342910528183, 0.4481363296508789, 0.4487285912036896, 0.4386008381843567, 0.44187065958976746, 0.4379914104938507, 0.4277372658252716, 0.4235578179359436, 0.4164556562900543, 0.4190741181373596], "accuracy": [0.2642979919910431, 0.5004622936248779, 0.6057323813438416, 0.6468101739883423, 0.6778497099876404, 0.6951525807380676, 0.7100779414176941, 0.720380425453186, 0.7313432693481445, 0.7240787148475647, 0.7485140562057495, 0.7489103078842163, 0.7582882046699524, 0.7709681391716003, 0.7777044177055359, 0.7652885913848877, 0.7795535326004028, 0.7763835787773132, 0.7852331399917603, 0.7866860628128052, 0.7991018295288086, 0.7968564033508301, 0.7931581139564514, 0.8061022162437439, 0.8057059645652771, 0.8067626357078552, 0.817461371421814, 0.8185180425643921, 0.8136309385299683, 0.8219521641731262, 0.8257825970649719, 0.817989706993103, 0.824329674243927, 0.8281601071357727, 0.8255184292793274, 0.8366134166717529, 0.8325188159942627, 0.8404437899589539, 0.8358209133148193, 0.8387266993522644, 0.8350284099578857, 0.8397833704948425, 0.8391229510307312, 0.8436138033866882, 0.8470479249954224, 0.8459912538528442, 0.8482366800308228, 0.8466516733169556], "val_loss": [1.9113596677780151, 1.0916746854782104, 0.9132246971130371, 0.7983431220054626, 0.7276144027709961, 0.7008044719696045, 0.6539955139160156, 0.6444124579429626, 0.7052256464958191, 0.6029796004295349, 0.5793930888175964, 0.5554969310760498, 0.5532349348068237, 0.531531572341919, 0.6123453974723816, 0.5171005725860596, 0.5401887893676758, 0.5523386001586914, 0.49535322189331055, 0.4961627721786499, 0.4867860972881317, 0.49530255794525146, 0.5299023389816284, 0.4741935133934021, 0.4620018005371094, 0.48716849088668823, 0.46092480421066284, 0.5100799202919006, 0.4497714936733246, 0.4557303190231323, 0.46097829937934875, 0.45606428384780884, 0.4337673485279083, 0.44997167587280273, 0.43393614888191223, 0.4432990849018097, 0.42411789298057556, 0.42749467492103577, 0.4176909923553467, 0.4504920542240143, 0.41923341155052185, 0.41787537932395935, 0.41674140095710754, 0.414997935295105, 0.4168761670589447, 0.4110051989555359, 0.4456130862236023, 0.41507282853126526], "val_accuracy": [0.5450000166893005, 0.6650000214576721, 0.6706666946411133, 0.7266666889190674, 0.7303333282470703, 0.7296666502952576, 0.7526666522026062, 0.7566666603088379, 0.7183333039283752, 0.7736666798591614, 0.7836666703224182, 0.800000011920929, 0.7983333468437195, 0.8053333163261414, 0.7606666684150696, 0.8140000104904175, 0.7910000085830688, 0.7826666831970215, 0.8140000104904175, 0.8186666369438171, 0.8263333439826965, 0.8116666674613953, 0.7916666865348816, 0.8309999704360962, 0.8373333215713501, 0.8166666626930237, 0.8376666903495789, 0.8080000281333923, 0.8410000205039978, 0.8296666741371155, 0.8353333473205566, 0.8366666436195374, 0.8473333120346069, 0.8323333263397217, 0.8463333249092102, 0.8410000205039978, 0.8493333458900452, 0.8489999771118164, 0.8516666889190674, 0.8320000171661377, 0.8483333587646484, 0.8493333458900452, 0.8536666631698608, 0.8506666421890259, 0.8516666889190674, 0.8503333330154419, 0.8316666483879089, 0.8503333330154419]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 7], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 0], [0, 0, 3, 1, 0], [16, 1, 69], [1, 0, 0, 0, 0, 1, 0, 1], [1, 2, 0, 2, 5], [0, 6, 1], [0], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.21057142317295074, "mapping_values": [1, 6, 3, 3, 2, 13, 8, 5, 3, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [7475635421184.0, 405543797653504.0, 3417231136391168.0, 1.5178025729523712e+16, 4.941951720541389e+16, 1.3147188668819046e+17], "accuracy": [0.10672302544116974, 0.1200634017586708, 0.12072381377220154, 0.11134592443704605, 0.109232597053051, 0.09589222073554993], "val_loss": [42320497999872.0, 954884643880960.0, 6388299459461120.0, 2.5014057035628544e+16, 7.258813416813363e+16, 1.7390088935283098e+17], "val_accuracy": [0.22200000286102295, 0.1340000033378601, 0.13500000536441803, 0.12700000405311584, 0.1236666664481163, 0.11299999803304672]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 1, 7, 3, 8, 2, 1, 9, 1, 9, 2], [2, 0, 2, 1, 0, 0, 0], [16, 1, 98, 7, 83, 37], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 7, 2, 5, 3, 5, 2, 5], [5, 5, 1, 3, 2, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 19, 12, 7, 6, 15, 9, 6, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.math.multiply(tf.math.square(tf.math.add(grad, grad)), tf.math.square(alpha))), sigma), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [2, 2, 3, 1, 3, 5, 1, 6, 1, 6, 8, 9, 0, 2], [1, 0, 1, 2, 2, 2, 3, 2, 1, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6, 4, 3, 7, 5, 2], [2, 0, 3, 1, 0, 1, 1, 0, 0, 0], [16, 61, 55, 4, 90], [1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 14, 10, 2, 23, 13, 10, 5, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.subtract(grad, grad)), grad), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.pow(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), alpha), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 1, 8, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 0], [6, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 7, 4, 3, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034305572509766, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]