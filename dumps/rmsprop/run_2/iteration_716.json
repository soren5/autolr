[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2120821475982666, 1.6027650833129883, 1.1632932424545288, 1.003348708152771, 0.911058783531189, 0.8360429406166077, 0.7850657105445862, 0.7708577513694763, 0.7480369210243225, 0.7114567756652832, 0.7091154456138611, 0.6839147210121155, 0.6531464457511902, 0.6635175347328186, 0.6356618404388428, 0.6205452680587769, 0.6104351282119751, 0.617568850517273, 0.5888572335243225, 0.592229962348938, 0.5888019800186157, 0.5605860352516174, 0.5478008985519409, 0.561037003993988, 0.5402624011039734, 0.5319882035255432, 0.5341187715530396, 0.5348833203315735, 0.5144099593162537, 0.5032145977020264, 0.5067630410194397, 0.5206422805786133, 0.5052618980407715, 0.4854114055633545, 0.4860796630382538, 0.4787484407424927, 0.4695798456668854, 0.4758196771144867, 0.4590015113353729, 0.45918694138526917, 0.45715591311454773, 0.45767146348953247, 0.44309550523757935, 0.4406687915325165, 0.43299975991249084], "accuracy": [0.2731475234031677, 0.509311854839325, 0.5933166146278381, 0.6338660717010498, 0.6664905548095703, 0.6914542317390442, 0.711530864238739, 0.713908314704895, 0.7239466309547424, 0.7343811988830566, 0.733588695526123, 0.7425703406333923, 0.7568352818489075, 0.7539294958114624, 0.765949010848999, 0.7691190242767334, 0.7730814814567566, 0.7738739848136902, 0.7804781198501587, 0.7795535326004028, 0.7837802171707153, 0.793950617313385, 0.7964601516723633, 0.7895918488502502, 0.8030643463134766, 0.7993659973144531, 0.8020076751708984, 0.800290584564209, 0.8067626357078552, 0.8138951063156128, 0.8099326491355896, 0.804649293422699, 0.8137630224227905, 0.8238013386726379, 0.8191784620285034, 0.8239334225654602, 0.8300092220306396, 0.8235371708869934, 0.828820526599884, 0.8310658931732178, 0.826310932636261, 0.8338396549224854, 0.835160493850708, 0.8391229510307312, 0.8411042094230652], "val_loss": [1.9216902256011963, 1.092417597770691, 0.8763144612312317, 0.8847891688346863, 0.7137136459350586, 0.665619969367981, 0.6972981095314026, 0.6443584561347961, 0.6126658320426941, 0.5827617049217224, 0.579512357711792, 0.531432569026947, 0.5743340849876404, 0.5400015711784363, 0.5142436027526855, 0.5113756060600281, 0.5283253788948059, 0.5065035223960876, 0.5349804162979126, 0.5348460078239441, 0.4777563512325287, 0.4897433817386627, 0.4828019142150879, 0.4504361152648926, 0.4522956907749176, 0.44939985871315, 0.4505155086517334, 0.43404680490493774, 0.4461369216442108, 0.4460581839084625, 0.49994027614593506, 0.4460689425468445, 0.41442716121673584, 0.4152195155620575, 0.41854867339134216, 0.42481255531311035, 0.4145866632461548, 0.40913817286491394, 0.40276777744293213, 0.396378755569458, 0.4112255573272705, 0.41302189230918884, 0.38832756876945496, 0.3928777575492859, 0.38778620958328247], "val_accuracy": [0.5053333044052124, 0.6320000290870667, 0.6946666836738586, 0.6840000152587891, 0.7446666955947876, 0.7519999742507935, 0.734666645526886, 0.7546666860580444, 0.765999972820282, 0.7820000052452087, 0.777999997138977, 0.8043333292007446, 0.7733333110809326, 0.8056666851043701, 0.8059999942779541, 0.8096666932106018, 0.7956666946411133, 0.8159999847412109, 0.79666668176651, 0.8023333549499512, 0.8213333487510681, 0.8056666851043701, 0.8143333196640015, 0.843666672706604, 0.8353333473205566, 0.8393333554267883, 0.8316666483879089, 0.8443333506584167, 0.8339999914169312, 0.8336666822433472, 0.7943333387374878, 0.8336666822433472, 0.8569999933242798, 0.8513333201408386, 0.8579999804496765, 0.8446666598320007, 0.8489999771118164, 0.8483333587646484, 0.859000027179718, 0.8636666536331177, 0.8486666679382324, 0.8463333249092102, 0.862333357334137, 0.8603333234786987, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 2, 3, 5], [0, 2, 2, 0, 2], [0, 21, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 2, 0, 2], [2, 2, 5, 1, 0], [83, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [2, 5, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 9, 3, 2, 3, 5], [0, 1, 1, 0, 1], [87, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 2, 7, 2, 1, 2], [0, 6, 1, 6, 0, 6, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 2, 0, 1, 1, 0, 1, 0, 15, 8, 7, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310210704803467, 2.3100223541259766, 2.310140609741211, 2.3093225955963135, 2.3095991611480713, 2.3096892833709717], "accuracy": [0.09179764986038208, 0.09100515395402908, 0.08928807079792023, 0.09153348207473755, 0.09140139818191528, 0.09153348207473755], "val_loss": [2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596, 2.3089706897735596], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 3, 0, 2], [0, 39, 39], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 5, 0, 2, 5, 2, 1, 3, 9, 5, 7, 3], [1, 6, 1, 6, 0, 6], [0, 0], [0, 1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 18, 12, 6, 2, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.subtract(alpha, tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha)), tf.math.square(tf.math.add(tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3097188472747803, 2.3096981048583984, 2.3090221881866455, 2.3093645572662354, 2.309638500213623, 2.3090829849243164], "accuracy": [0.09285431355237961, 0.08809932321310043, 0.09470347315073013, 0.09391097724437714, 0.09536388516426086, 0.09813763201236725], "val_loss": [2.3086836338043213, 2.3086836338043213, 2.3086836338043213, 2.3086836338043213, 2.3086836338043213, 2.3086836338043213], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 3, 3, 8], [3, 1, 1, 0, 2, 3, 3], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 2, 9, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 9, 2, 5, 2, 1], [0, 6, 5, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 16, 9, 7, 1, 1, 0, 1, 0, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.multiply(alpha, tf.math.square(alpha))), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094987869262695, 2.3093392848968506, 2.309614896774292, 2.31054949760437, 2.3104169368743896, 2.3096392154693604], "accuracy": [0.0936468094587326, 0.08981640636920929, 0.09496764093637466, 0.09245806187391281, 0.09153348207473755, 0.09140139818191528], "val_loss": [2.30906343460083, 2.30906343460083, 2.30906343460083, 2.30906343460083, 2.30906343460083, 2.30906343460083], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]