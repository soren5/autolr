[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7960000038146973, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2072815895080566, 1.6010297536849976, 1.1482373476028442, 0.9639022350311279, 0.8865628838539124, 0.8601126670837402, 0.8006964325904846, 0.744819700717926, 0.7682005763053894, 0.7346920371055603, 0.6809771656990051, 0.6967113614082336, 0.6626701951026917, 0.6385852098464966, 0.6284658908843994, 0.6308282017707825, 0.6123214960098267, 0.5988678336143494, 0.5973509550094604], "accuracy": [0.2723550498485565, 0.5008585453033447, 0.5967507362365723, 0.6626601219177246, 0.6795667409896851, 0.6828688383102417, 0.7066437602043152, 0.7220974564552307, 0.7092854380607605, 0.7277770638465881, 0.7457403540611267, 0.7390040755271912, 0.7547219395637512, 0.7622507214546204, 0.7650244235992432, 0.7626469135284424, 0.7656848430633545, 0.7753269076347351, 0.7779685854911804], "val_loss": [1.910613775253296, 1.08723783493042, 0.8970897793769836, 0.7715186476707458, 0.7488510608673096, 0.692808985710144, 0.6610293984413147, 0.6355034708976746, 0.6977897882461548, 0.6196473240852356, 0.5890384912490845, 0.5967917442321777, 0.5627720355987549, 0.5489210486412048, 0.5659682750701904, 0.579911470413208, 0.5663231015205383, 0.5470885634422302, 0.5662654638290405], "val_accuracy": [0.5083333253860474, 0.6543333530426025, 0.6880000233650208, 0.7160000205039978, 0.7286666631698608, 0.7436666488647461, 0.7429999709129333, 0.7580000162124634, 0.7289999723434448, 0.7696666717529297, 0.7710000276565552, 0.7826666831970215, 0.7866666913032532, 0.7946666479110718, 0.7836666703224182, 0.7703333497047424, 0.7796666622161865, 0.7916666865348816, 0.7633333206176758]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 1, 8], [4, 6, 1, 6, 0], [0, 65], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032026290893555, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [80, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 4, 7, 2, 5, 2, 0], [0, 6, 1, 7, 4, 6, 7], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 6, 5, 2, 18, 11, 7, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.pow(tf.math.add(tf.math.add(grad, alpha), tf.math.square(grad)), tf.math.add(tf.math.negative(grad), grad))), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 6, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 5, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 14], [0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 2, 5], [0, 0, 1], [0, 40], [1], [0], [2], [0]], "fitness": -0.09371428936719894, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101232051849365, 2.3099472522735596, 2.309023380279541, 2.3098063468933105, 2.3104357719421387, 2.3103442192077637], "accuracy": [0.09417514503002167, 0.09153348207473755, 0.09628847241401672, 0.09126931428909302, 0.0944393053650856, 0.0952318087220192], "val_loss": [2.308830499649048, 2.308830499649048, 2.308830499649048, 2.308830499649048, 2.308830499649048, 2.308830499649048], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}, "mapping_values": [1, 11, 6, 5, 2, 4, 3, 1, 0, 4, 2, 2, 2, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 3, 2], [0, 28, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 5, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309868097305298, 2.311276912689209, 2.3096935749053955, 2.309468984603882, 2.3112640380859375, 2.3097333908081055], "accuracy": [0.09140139818191528, 0.08717474341392517, 0.09021265059709549, 0.09549596905708313, 0.08638224750757217, 0.09417514503002167], "val_loss": [2.3097245693206787, 2.3097245693206787, 2.3097245693206787, 2.3097245693206787, 2.3097245693206787, 2.3097245693206787], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]