[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.7968571186065674, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.205284357070923, 1.589808464050293, 1.161881446838379, 0.9464438557624817, 0.8823944330215454, 0.8525703549385071, 0.7920308113098145, 0.7795164585113525, 0.735706627368927, 0.6933141946792603, 0.6879780888557434, 0.6695132851600647, 0.6520411372184753, 0.6554891467094421, 0.627071738243103, 0.6106985211372375, 0.6179546117782593, 0.5934015512466431, 0.5887490510940552, 0.5787872076034546, 0.5699247121810913], "accuracy": [0.26984545588493347, 0.5114251971244812, 0.5927882790565491, 0.6635847091674805, 0.6864351034164429, 0.6931713223457336, 0.7143045663833618, 0.7147008180618286, 0.7276449799537659, 0.7504953145980835, 0.7460044622421265, 0.7540615797042847, 0.7631752490997314, 0.7530049085617065, 0.7692511081695557, 0.7744023203849792, 0.7741381525993347, 0.783119797706604, 0.7845727205276489, 0.7857614755630493, 0.7868181467056274], "val_loss": [1.9082750082015991, 1.113574504852295, 0.8947250247001648, 0.8800469636917114, 0.7458072304725647, 0.7238803505897522, 0.6919706463813782, 0.6714131832122803, 0.6398156881332397, 0.640240490436554, 0.6237353682518005, 0.5885292291641235, 0.5647279620170593, 0.5713245868682861, 0.6005221605300903, 0.5305090546607971, 0.5413872003555298, 0.5397083163261414, 0.521328866481781, 0.5130053758621216, 0.5227957963943481], "val_accuracy": [0.5483333468437195, 0.6240000128746033, 0.6803333163261414, 0.6793333292007446, 0.7083333134651184, 0.7229999899864197, 0.7263333201408386, 0.7283333539962769, 0.7540000081062317, 0.7456666827201843, 0.7710000276565552, 0.7616666555404663, 0.7836666703224182, 0.778333306312561, 0.7663333415985107, 0.7993333339691162, 0.7950000166893005, 0.7929999828338623, 0.7963333129882812, 0.7983333468437195, 0.7910000085830688]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 3, 2, 3, 5, 9], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 0, 2, 1, 2, 1, 6, 9, 9, 9], [0, 6, 1, 6, 0], [0, 22, 33, 87], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 3, 0, 2, 2, 1, 4, 2, 3, 4, 8, 1, 0, 7, 9, 0, 8, 0, 5, 2, 0], [2, 1, 3, 0, 6, 7, 1, 3, 1, 3, 2], [0, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 7, 4, 3, 1, 15, 11, 4, 4, 33, 22, 11, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad)), alpha), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.pow(sigma, tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.negative(tf.math.sqrt(grad))), tf.math.negative(tf.math.square(tf.math.add(alpha, sigma)))), alpha), sigma), tf.math.negative(beta)))))))", "other_info": {"loss": [41680662528.0, 30059039555584.0, 79789738164224.0, 166324907016192.0, 312326095896576.0, 496548215521280.0], "accuracy": [0.08981640636920929, 0.10011887550354004, 0.10051512718200684, 0.10381719470024109, 0.09853387624025345, 0.09972262382507324], "val_loss": [192227.328125, 55743952715776.0, 121752583667712.0, 239930026491904.0, 404062470144000.0, 626184824029184.0], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 2, 3, 5], [0, 1, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 3], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 9, 5, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 5, 5], [0, 2, 1, 0, 1], [0, 38, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 0, 2, 3, 2, 7, 7, 2, 1, 6, 8, 9, 5, 5], [0, 6, 1, 6, 0, 2, 0, 1, 5], [0, 22, 9, 28], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 24, 15, 9, 4, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.add(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [49195413504.0, 7086310686720.0, 119665388945408.0, 841535021121536.0, 3677071825960960.0, 1.2231156325941248e+16], "accuracy": [0.10196803510189056, 0.10355303436517715, 0.10276053100824356, 0.1014397069811821, 0.09602430462837219, 0.10157178342342377], "val_loss": [473587515392.0, 25531928018944.0, 274053642321920.0, 1494099936935936.0, 5596752556064768.0, 1.6514974960582656e+16], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 0, 5], [0, 2, 1, 0, 2], [0, 17, 39], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 2, 1], [1, 6, 1, 6, 2], [0, 40], [0, 0, 1, 0, 0, 1, 0, 1], [0, 6, 7, 5, 5], [2, 2, 3], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 0, 1, 0, 1, 0, 8, 5, 3, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(tf.math.square(beta), tf.math.square(sigma))))", "other_info": {"loss": [2.3088231086730957, 2.3102426528930664, 2.3104801177978516, 2.3101744651794434, 2.309734582901001, 2.310478448867798], "accuracy": [0.1002509593963623, 0.09245806187391281, 0.09206181764602661, 0.09417514503002167, 0.0956280529499054, 0.09457138925790787], "val_loss": [2.308366298675537, 2.308366298675537, 2.308366298675537, 2.308366298675537, 2.308366298675537, 2.308366298675537], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]