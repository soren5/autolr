[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2092792987823486, 1.608686923980713, 1.1583813428878784, 0.9855058193206787, 0.8797938823699951, 0.8502805233001709, 0.8016344308853149, 0.7604461908340454, 0.7265710830688477, 0.7116554975509644, 0.7009367346763611, 0.6773012280464172, 0.6545746326446533, 0.6273518204689026, 0.6367886066436768, 0.622734785079956, 0.6039842367172241, 0.5947011113166809, 0.5904935598373413, 0.5717297196388245, 0.5736634731292725, 0.545867919921875, 0.5425351858139038, 0.5424587726593018, 0.5382223725318909, 0.5337024331092834, 0.5144687294960022, 0.5032622814178467, 0.5188853740692139, 0.49246668815612793, 0.49318045377731323, 0.49259451031684875, 0.47719356417655945, 0.4772477149963379, 0.4665091633796692, 0.4645980894565582, 0.46650153398513794], "accuracy": [0.2674679756164551, 0.5050851702690125, 0.5952978730201721, 0.651168942451477, 0.684982180595398, 0.6869634389877319, 0.7094175219535828, 0.7170783281326294, 0.7345132827758789, 0.7388719916343689, 0.7411174178123474, 0.7437590956687927, 0.7637035846710205, 0.7687227725982666, 0.7656848430633545, 0.7684586048126221, 0.7775723338127136, 0.7828556299209595, 0.7804781198501587, 0.7877426743507385, 0.7889314293861389, 0.804649293422699, 0.8016114234924316, 0.7930260300636292, 0.7977809906005859, 0.7964601516723633, 0.8094043135643005, 0.8168009519577026, 0.8137630224227905, 0.81548011302948, 0.81548011302948, 0.8203672170639038, 0.8222163319587708, 0.8244617581367493, 0.8256505131721497, 0.8256505131721497, 0.828820526599884], "val_loss": [1.922612190246582, 1.0859391689300537, 0.9576367735862732, 0.7865208387374878, 0.7613242268562317, 0.7149147391319275, 0.6719688177108765, 0.6505240201950073, 0.6771711707115173, 0.6057966351509094, 0.6076570749282837, 0.6031494736671448, 0.5696954727172852, 0.5766909122467041, 0.5513576865196228, 0.5826215744018555, 0.5427775979042053, 0.5362462401390076, 0.5301157832145691, 0.5282630324363708, 0.5105104446411133, 0.5258041620254517, 0.5025402903556824, 0.5029867887496948, 0.536817193031311, 0.4852074086666107, 0.48909518122673035, 0.47720280289649963, 0.47456949949264526, 0.48183658719062805, 0.4690357744693756, 0.457800954580307, 0.4749448597431183, 0.46663883328437805, 0.4509410858154297, 0.450614333152771, 0.4459749460220337], "val_accuracy": [0.5513333082199097, 0.6669999957084656, 0.668666660785675, 0.706333339214325, 0.7153333425521851, 0.7293333411216736, 0.7536666393280029, 0.753333330154419, 0.7329999804496765, 0.7739999890327454, 0.7820000052452087, 0.7803333401679993, 0.7803333401679993, 0.7733333110809326, 0.7926666736602783, 0.7696666717529297, 0.7986666560173035, 0.8106666803359985, 0.8083333373069763, 0.8086666464805603, 0.8146666884422302, 0.8043333292007446, 0.8213333487510681, 0.8136666417121887, 0.8050000071525574, 0.8216666579246521, 0.8149999976158142, 0.8386666774749756, 0.8360000252723694, 0.8309999704360962, 0.8299999833106995, 0.8486666679382324, 0.8333333134651184, 0.8270000219345093, 0.8476666808128357, 0.8426666855812073, 0.8463333249092102]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 1], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 6, 8, 8, 2], [2, 0, 3, 1, 0], [8, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 9, 0, 2, 8, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 7, 4, 3, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 2, 3, 2, 3, 5, 9], [0, 2, 0, 0, 1], [0, 39, 39, 26], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 5, 6, 4, 8, 2], [2, 0, 3, 1, 0], [48, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 1, 4, 2, 1], [0, 6, 1, 6, 0], [0, 90], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 12, 7, 5, 4, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309955596923828, 2.3103647232055664, 2.3101401329040527, 2.310054063796997, 2.309767961502075, 2.310019016265869], "accuracy": [0.08994849026203156, 0.08598599582910538, 0.08942015469074249, 0.09338264167308807, 0.08625016361474991, 0.08796724677085876], "val_loss": [2.307637929916382, 2.307637929916382, 2.307637929916382, 2.307637929916382, 2.307637929916382, 2.307637929916382], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 3, 1, 3, 8], [0, 0, 1, 0, 2], [0, 16, 39], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 9, 2, 3, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 5, 7, 2, 5, 2, 4], [0, 6, 1, 6, 1], [0, 22], [0, 1], [0], [3], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3110289573669434, 2.308851957321167, 2.3103859424591064, 2.308032989501953, 2.3095438480377197, 2.309765577316284], "accuracy": [0.09126931428909302, 0.0952318087220192, 0.09602430462837219, 0.09615638852119446, 0.0886276587843895, 0.09060890227556229], "val_loss": [2.30867338180542, 2.30867338180542, 2.30867338180542, 2.30867338180542, 2.30867338180542, 2.30867338180542], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 7, 9], [3, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2], [2, 5, 4, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 13, 8, 5, 2, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309431314468384, 2.309164047241211, 2.3088605403900146, 2.3091814517974854, 2.3106746673583984, 2.3103091716766357], "accuracy": [0.0952318087220192, 0.09602430462837219, 0.09919429570436478, 0.09602430462837219, 0.08942015469074249, 0.08796724677085876], "val_loss": [2.308290958404541, 2.308290958404541, 2.308290958404541, 2.308290958404541, 2.308290958404541, 2.308290958404541], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]