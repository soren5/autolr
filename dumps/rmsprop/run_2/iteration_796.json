[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8097142577171326, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208022356033325, 1.6170328855514526, 1.1667600870132446, 0.9665235877037048, 0.9034916162490845, 0.8812501430511475, 0.8009586334228516, 0.7458072304725647, 0.7255623936653137, 0.6934309601783752, 0.7214739918708801, 0.6683836579322815, 0.6539279818534851, 0.6471872925758362, 0.6245723962783813, 0.6130757331848145, 0.6036925911903381, 0.6007116436958313, 0.5847374796867371, 0.5673708915710449, 0.5614120364189148, 0.5602800250053406], "accuracy": [0.2743362784385681, 0.49649980664253235, 0.5937128663063049, 0.659490168094635, 0.6715096831321716, 0.6762647032737732, 0.7078325152397156, 0.7209087014198303, 0.7283053994178772, 0.7442874312400818, 0.7283053994178772, 0.7514199018478394, 0.7560427784919739, 0.7537974119186401, 0.7643640041351318, 0.7716285586357117, 0.7773081660270691, 0.778232753276825, 0.7858935594558716, 0.791441023349762, 0.7942147850990295, 0.7909126877784729], "val_loss": [1.9175288677215576, 1.1378698348999023, 0.921676754951477, 0.7923258543014526, 0.7615585923194885, 0.6921257376670837, 0.6587793231010437, 0.6340343356132507, 0.660588800907135, 0.6117761135101318, 0.6056292057037354, 0.5713208317756653, 0.5902603268623352, 0.5503798127174377, 0.5512540936470032, 0.5547075867652893, 0.5329647660255432, 0.5479562878608704, 0.5163766741752625, 0.5102694630622864, 0.5126997828483582, 0.5075833797454834], "val_accuracy": [0.48266667127609253, 0.6236666440963745, 0.6773333549499512, 0.7213333249092102, 0.7089999914169312, 0.7433333396911621, 0.75, 0.7549999952316284, 0.7559999823570251, 0.7519999742507935, 0.7613333463668823, 0.7836666703224182, 0.7739999890327454, 0.7946666479110718, 0.7863333225250244, 0.7789999842643738, 0.8080000281333923, 0.7876666784286499, 0.8080000281333923, 0.8050000071525574, 0.7983333468437195, 0.8063333630561829]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 6, 1, 2], [5, 4, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 2, 2, 1, 5, 2], [0, 6, 1, 6, 0, 3, 2], [0, 1], [1], [0], [6], [0]], "fitness": -0.18714286386966705, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 0, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(sigma, beta)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3787031173706055, 2.3020577430725098, 2.331932544708252, 2.3051302433013916, 2.3040859699249268, 2.3027877807617188, 2.291860342025757, 2.3070271015167236], "accuracy": [0.19033153355121613, 0.11227050423622131, 0.13300752639770508, 0.17421740293502808, 0.09959053993225098, 0.09721305221319199, 0.12759213149547577, 0.09853387624025345], "val_loss": [2.303245782852173, 2.289327383041382, 2.2990622520446777, 2.3049540519714355, 2.30275297164917, 2.3004143238067627, 2.3103854656219482, 2.304091215133667], "val_accuracy": [0.1003333330154419, 0.10899999737739563, 0.18733333051204681, 0.09966666996479034, 0.09966666996479034, 0.11933333426713943, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 8, 3, 6, 5, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 7, 2], [2, 2, 3, 0, 0], [37, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 9, 8, 2, 7], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1, 0, 1, 0, 1, 1], [0, 7, 6, 6], [3, 5, 1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 8, 4, 4, 1, 5, 4, 1, 2, 8, 4, 4, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(beta, grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, beta))))", "other_info": {"loss": [515.3875122070312, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 0, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 8, 0, 2, 5, 2, 1], [0, 6, 4, 6, 0], [0, 9], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 4, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3093698024749756, 2.3096673488616943, 2.310492753982544, 2.3091468811035156, 2.310128688812256, 2.309598207473755], "accuracy": [0.09179764986038208, 0.09377889335155487, 0.08691058307886124, 0.09377889335155487, 0.09179764986038208, 0.09602430462837219], "val_loss": [2.3081061840057373, 2.3081061840057373, 2.3081061840057373, 2.3081061840057373, 2.3081061840057373, 2.3081061840057373], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 8, 5, 7, 6, 8], [0, 0, 1, 0, 0, 2, 3], [0, 39, 39, 45], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 6], [2, 0, 3, 1, 0], [16, 74], [0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 5], [0, 6, 1], [24], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 17, 10, 7, 4, 2, 1, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309502363204956, 2.3098556995391846, 2.3089513778686523, 2.3104865550994873, 2.310410499572754, 2.308558702468872], "accuracy": [0.09536388516426086, 0.09192973375320435, 0.09509972482919693, 0.0936468094587326, 0.09694888442754745, 0.09338264167308807], "val_loss": [2.3091490268707275, 2.3091490268707275, 2.3091490268707275, 2.3091490268707275, 2.3091490268707275, 2.3091490268707275], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]