[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2111141681671143, 1.6098462343215942, 1.1665583848953247, 0.9760736227035522, 0.8930473923683167, 0.8394874930381775, 0.7989145517349243, 0.7805085778236389, 0.7452699542045593, 0.7169589400291443, 0.7025920748710632, 0.6747971773147583, 0.6742919683456421, 0.6500173211097717, 0.6404195427894592, 0.6223631501197815, 0.6169601678848267, 0.6050325632095337, 0.5931193232536316, 0.5818095803260803, 0.5823572278022766, 0.5585650205612183, 0.566207766532898, 0.5501691699028015, 0.5448248386383057, 0.5351163148880005, 0.5289164781570435, 0.5230806469917297, 0.5156989097595215, 0.52337646484375, 0.5018486976623535, 0.5054841637611389, 0.49982142448425293, 0.5017988085746765, 0.4763811230659485, 0.48596975207328796, 0.47529691457748413, 0.46715739369392395, 0.4692200720310211, 0.46244949102401733, 0.45781999826431274, 0.44231072068214417, 0.44913360476493835, 0.4388955235481262, 0.43299224972724915, 0.4382714033126831, 0.4265565276145935, 0.42100369930267334, 0.4248588979244232, 0.42615246772766113, 0.4155440926551819, 0.40962734818458557, 0.4037463366985321, 0.41041141748428345, 0.39997896552085876, 0.3966900408267975, 0.39443087577819824, 0.3857877850532532, 0.38934326171875, 0.3781620264053345, 0.382220983505249, 0.3769834339618683], "accuracy": [0.2646942138671875, 0.5037643909454346, 0.5892220139503479, 0.6547351479530334, 0.6779817938804626, 0.6975300312042236, 0.7100779414176941, 0.7131158113479614, 0.72672039270401, 0.7368907928466797, 0.737947404384613, 0.7500990629196167, 0.7528728246688843, 0.7626469135284424, 0.7609298825263977, 0.7700436115264893, 0.769911527633667, 0.7794214487075806, 0.7777044177055359, 0.78113853931427, 0.7857614755630493, 0.7924976944923401, 0.7895918488502502, 0.8000264167785645, 0.8010830879211426, 0.8045172095298767, 0.8064984679222107, 0.8058380484580994, 0.8087438941001892, 0.8105930685997009, 0.8138951063156128, 0.8153480291366577, 0.8181217908859253, 0.817461371421814, 0.8264430165290833, 0.8226125836372375, 0.8264430165290833, 0.8298771381378174, 0.8314621448516846, 0.8308017253875732, 0.8286884427070618, 0.8411042094230652, 0.8380662798881531, 0.8408400416374207, 0.8392550349235535, 0.8385946154594421, 0.8433496356010437, 0.8438779711723328, 0.8416325449943542, 0.8430854678153992, 0.8438779711723328, 0.8511425256729126, 0.8537842035293579, 0.8502179384231567, 0.8535200357437134, 0.8589354157447815, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8594637513160706, 0.8619733452796936, 0.8623695969581604], "val_loss": [1.9155113697052002, 1.0936139822006226, 0.8787098526954651, 0.7963187098503113, 0.7265007495880127, 0.6839323043823242, 0.6525487303733826, 0.6600804328918457, 0.6194010972976685, 0.594377338886261, 0.6254890561103821, 0.5703696012496948, 0.5727823376655579, 0.5692228078842163, 0.5374784469604492, 0.5277859568595886, 0.5368707776069641, 0.5379505157470703, 0.5268217921257019, 0.5416750311851501, 0.5038392543792725, 0.5008469223976135, 0.5038136839866638, 0.5026513338088989, 0.487984836101532, 0.4739965498447418, 0.471904456615448, 0.47148099541664124, 0.4979373812675476, 0.4778006672859192, 0.45801272988319397, 0.4590452015399933, 0.48271098732948303, 0.4392734467983246, 0.4420943260192871, 0.45588403940200806, 0.4358920753002167, 0.4423042833805084, 0.43205171823501587, 0.42247042059898376, 0.4285406172275543, 0.43086352944374084, 0.42154955863952637, 0.44110187888145447, 0.4266031086444855, 0.41633373498916626, 0.4137529730796814, 0.4113953411579132, 0.41529569029808044, 0.40918293595314026, 0.41197702288627625, 0.4003090560436249, 0.4025375545024872, 0.4029795825481415, 0.3962770104408264, 0.4200989603996277, 0.3964158594608307, 0.3976019024848938, 0.41738492250442505, 0.40025821328163147, 0.4257369041442871, 0.40011852979660034], "val_accuracy": [0.5763333439826965, 0.6743333339691162, 0.699999988079071, 0.706333339214325, 0.7363333106040955, 0.7566666603088379, 0.762333333492279, 0.749666690826416, 0.7723333239555359, 0.7839999794960022, 0.7516666650772095, 0.7846666574478149, 0.7803333401679993, 0.7706666588783264, 0.7926666736602783, 0.7983333468437195, 0.796999990940094, 0.7986666560173035, 0.8026666641235352, 0.7793333530426025, 0.8106666803359985, 0.8159999847412109, 0.8149999976158142, 0.8013333082199097, 0.812333345413208, 0.8196666836738586, 0.8213333487510681, 0.8259999752044678, 0.8056666851043701, 0.8203333616256714, 0.8316666483879089, 0.8293333053588867, 0.8086666464805603, 0.8379999995231628, 0.8360000252723694, 0.828000009059906, 0.8360000252723694, 0.8356666564941406, 0.8413333296775818, 0.8473333120346069, 0.8433333039283752, 0.843999981880188, 0.8489999771118164, 0.831333339214325, 0.843666672706604, 0.8476666808128357, 0.8510000109672546, 0.8513333201408386, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8503333330154419, 0.8553333282470703, 0.8456666469573975, 0.859333336353302, 0.856333315372467, 0.8476666808128357, 0.8556666374206543, 0.8519999980926514, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8399999737739563, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211050510406494, 1.6197599172592163, 1.1693310737609863, 0.988700270652771, 0.8899577856063843, 0.8266341090202332, 0.80489182472229, 0.7833523154258728, 0.731857419013977, 0.6915178298950195, 0.6902010440826416, 0.6947610974311829, 0.6451153755187988, 0.6276677846908569, 0.629823625087738, 0.6178460717201233, 0.608904242515564, 0.5880185961723328, 0.5813370943069458, 0.5951480865478516, 0.5573535561561584, 0.5427618026733398, 0.5404971241950989, 0.5469057559967041, 0.5294057130813599, 0.5191250443458557, 0.5216748714447021, 0.5045799016952515, 0.5083951950073242, 0.4998263418674469, 0.49267154932022095, 0.4929075539112091, 0.481392502784729, 0.467557430267334, 0.468698114156723, 0.4599597752094269, 0.46316665410995483, 0.453029602766037, 0.4581011235713959, 0.44623541831970215, 0.44412505626678467, 0.44052401185035706, 0.440078467130661, 0.41924330592155457, 0.4195915162563324, 0.4201325476169586, 0.41402319073677063, 0.41700229048728943, 0.4086895287036896, 0.40346625447273254, 0.406758189201355, 0.3980870842933655, 0.40708664059638977, 0.3971588611602783, 0.39358603954315186, 0.3864683210849762], "accuracy": [0.26760005950927734, 0.5031039714813232, 0.5946374535560608, 0.648659348487854, 0.6750759482383728, 0.6999075412750244, 0.7042662501335144, 0.7145687341690063, 0.7305507659912109, 0.7483819723129272, 0.7489103078842163, 0.7449478507041931, 0.7543256878852844, 0.7696473598480225, 0.770439863204956, 0.7688548564910889, 0.7749306559562683, 0.7820631265640259, 0.7873464822769165, 0.7783648371696472, 0.7946110367774963, 0.796328067779541, 0.8049134612083435, 0.7989697456359863, 0.7987055778503418, 0.8067626357078552, 0.8095363974571228, 0.8117818236351013, 0.8133667707443237, 0.8108572363853455, 0.8227446675300598, 0.8212917447090149, 0.8253863453865051, 0.830669641494751, 0.8300092220306396, 0.8334434032440186, 0.8286884427070618, 0.8315942287445068, 0.8294808864593506, 0.8404437899589539, 0.8378021121025085, 0.8374059200286865, 0.8407079577445984, 0.8459912538528442, 0.8470479249954224, 0.8495575189590454, 0.8486329317092896, 0.8500858545303345, 0.850350022315979, 0.8491612672805786, 0.8494254350662231, 0.8499537706375122, 0.8465195894241333, 0.8551049828529358, 0.8533879518508911, 0.8617091774940491], "val_loss": [1.92537260055542, 1.1047157049179077, 0.9390243887901306, 0.8106570839881897, 0.7747355699539185, 0.7907612323760986, 0.7207044363021851, 0.6734250783920288, 0.6627621054649353, 0.6590481996536255, 0.6843038201332092, 0.6081947684288025, 0.6312164068222046, 0.6041221022605896, 0.586493968963623, 0.5809153914451599, 0.5788891315460205, 0.560746431350708, 0.5627044439315796, 0.5412394404411316, 0.5328627228736877, 0.5519500970840454, 0.5155953764915466, 0.5241516828536987, 0.5130282640457153, 0.5370956063270569, 0.5119711756706238, 0.5061529874801636, 0.5154895186424255, 0.501851499080658, 0.4859318435192108, 0.48461031913757324, 0.4840629994869232, 0.47208330035209656, 0.47196266055107117, 0.4727975130081177, 0.4701572358608246, 0.4741801619529724, 0.47622543573379517, 0.4628863036632538, 0.4500783681869507, 0.47457394003868103, 0.45279446244239807, 0.4609649181365967, 0.454212486743927, 0.446873277425766, 0.44416674971580505, 0.45103710889816284, 0.4385260343551636, 0.44308027625083923, 0.4311753213405609, 0.4283103942871094, 0.44196850061416626, 0.44407331943511963, 0.43428006768226624, 0.42385542392730713], "val_accuracy": [0.5770000219345093, 0.6610000133514404, 0.656333327293396, 0.6983333230018616, 0.7106666564941406, 0.7026666402816772, 0.7283333539962769, 0.753000020980835, 0.7563333511352539, 0.7480000257492065, 0.7509999871253967, 0.7776666879653931, 0.7590000033378601, 0.7796666622161865, 0.7860000133514404, 0.7870000004768372, 0.7976666688919067, 0.7940000295639038, 0.7903333306312561, 0.8053333163261414, 0.8053333163261414, 0.7903333306312561, 0.8086666464805603, 0.8053333163261414, 0.8153333067893982, 0.7960000038146973, 0.8066666722297668, 0.8146666884422302, 0.815666675567627, 0.8109999895095825, 0.8296666741371155, 0.8209999799728394, 0.8196666836738586, 0.8309999704360962, 0.82833331823349, 0.8326666951179504, 0.8330000042915344, 0.8276666402816772, 0.824999988079071, 0.8289999961853027, 0.8416666388511658, 0.8289999961853027, 0.8336666822433472, 0.8320000171661377, 0.8346666693687439, 0.843666672706604, 0.8410000205039978, 0.8360000252723694, 0.8399999737739563, 0.8399999737739563, 0.8503333330154419, 0.846666693687439, 0.8393333554267883, 0.8410000205039978, 0.8463333249092102, 0.8503333330154419]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 0, 1, 0, 7, 0, 2], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 1, 4, 3, 8, 2, 0, 4, 8, 2, 0, 0, 4, 8, 9, 3], [2, 2, 3, 5, 0, 0, 3, 1, 1], [16, 1, 44], [0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 26, 17, 9, 3, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.multiply(beta, grad), tf.math.sqrt(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 6, 3, 9], [0, 0, 0, 2, 2], [32, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2], [2, 0, 4, 1, 0, 1], [16, 70], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 9], [2, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 14, 8, 6, 2, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(grad, alpha), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [4, 2, 3, 1, 3, 5, 8, 7], [0, 0, 1, 0, 2, 3, 3], [0, 51, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 5, 9], [2, 0, 3, 3, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 11, 8, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10645885765552521, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 1, 2], [0, 39, 52], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [88, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [4, 6, 7], [69], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095178604125977, 2.3109288215637207, 2.310170888900757, 2.310896873474121, 2.3101308345794678, 2.3102705478668213], "accuracy": [0.09708096832036972, 0.0886276587843895, 0.08994849026203156, 0.08809932321310043, 0.09206181764602661, 0.09694888442754745], "val_loss": [2.3095622062683105, 2.3095622062683105, 2.3095622062683105, 2.3095622062683105, 2.3095622062683105, 2.3095622062683105], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}]