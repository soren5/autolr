[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8237142562866211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209440231323242, 1.5875859260559082, 1.1428029537200928, 0.9505712389945984, 0.8845720291137695, 0.815278172492981, 0.8099289536476135, 0.7383338809013367, 0.7259635329246521, 0.6983292698860168, 0.665855348110199, 0.6670674681663513, 0.6407100558280945, 0.626563310623169, 0.6213693022727966, 0.6130756735801697, 0.6049990653991699, 0.5691866874694824, 0.5755953192710876, 0.5544534921646118, 0.5643751621246338, 0.5446047186851501, 0.5519745945930481, 0.5328959226608276, 0.5248643755912781, 0.5080182552337646, 0.5021979212760925, 0.5045695900917053, 0.5089876651763916, 0.4904531240463257, 0.4858911335468292, 0.48267340660095215, 0.47415053844451904, 0.47545698285102844, 0.4664478003978729, 0.459803968667984, 0.45852795243263245, 0.45353686809539795, 0.4602510929107666, 0.4276198744773865, 0.44262588024139404, 0.4310092329978943, 0.4298568069934845, 0.4239955246448517, 0.41828155517578125, 0.41565707325935364, 0.4192642867565155, 0.41046497225761414, 0.4061463475227356, 0.40803563594818115, 0.4045625627040863], "accuracy": [0.27327960729599, 0.5075947642326355, 0.6075815558433533, 0.6601505875587463, 0.6745476126670837, 0.6968696117401123, 0.6963412761688232, 0.7223616242408752, 0.7305507659912109, 0.7364945411682129, 0.7511557340621948, 0.7461365461349487, 0.7598732113838196, 0.7637035846710205, 0.7695152759552002, 0.7708360552787781, 0.7766477465629578, 0.7877426743507385, 0.7824593782424927, 0.7901201844215393, 0.7884030938148499, 0.7993659973144531, 0.7961959838867188, 0.8000264167785645, 0.8047813773155212, 0.81112140417099, 0.8120459914207458, 0.8117818236351013, 0.8098005652427673, 0.8178576231002808, 0.8190463781356812, 0.8197067975997925, 0.8259146809577942, 0.8231409192085266, 0.8273676037788391, 0.8298771381378174, 0.8305375576019287, 0.8339717388153076, 0.8286884427070618, 0.8444063067436218, 0.8388587832450867, 0.842028796672821, 0.8388587832450867, 0.843481719493866, 0.8492933511734009, 0.844010055065155, 0.8454629778862, 0.8491612672805786, 0.8499537706375122, 0.8473120927810669, 0.8507462739944458], "val_loss": [1.9167627096176147, 1.0909446477890015, 0.9211335182189941, 0.8465139865875244, 0.7351254820823669, 0.6846954822540283, 0.65956711769104, 0.6591526865959167, 0.623971700668335, 0.6141490340232849, 0.6205796003341675, 0.577568769454956, 0.5754457116127014, 0.5571222305297852, 0.5503604412078857, 0.54825359582901, 0.5475028157234192, 0.5210939645767212, 0.5199164152145386, 0.5122436285018921, 0.5178864598274231, 0.5060985684394836, 0.5034101009368896, 0.4834611415863037, 0.4816799461841583, 0.47214916348457336, 0.4992290139198303, 0.5089327096939087, 0.4830212891101837, 0.45942699909210205, 0.46045586466789246, 0.4742613136768341, 0.4450294077396393, 0.4496265947818756, 0.440823495388031, 0.44577595591545105, 0.45254674553871155, 0.4564248025417328, 0.42544955015182495, 0.4296244978904724, 0.4250895082950592, 0.4132241904735565, 0.42733773589134216, 0.4169415831565857, 0.4172452688217163, 0.4067084491252899, 0.40850576758384705, 0.4007502794265747, 0.40909627079963684, 0.4037439823150635, 0.4130076467990875], "val_accuracy": [0.5556666851043701, 0.643666684627533, 0.668666660785675, 0.6946666836738586, 0.7333333492279053, 0.7413333058357239, 0.7583333253860474, 0.7493333220481873, 0.7513333559036255, 0.7639999985694885, 0.7570000290870667, 0.7833333611488342, 0.7749999761581421, 0.793666660785675, 0.7829999923706055, 0.7829999923706055, 0.7879999876022339, 0.8046666383743286, 0.812666654586792, 0.8036666512489319, 0.8100000023841858, 0.8033333420753479, 0.8063333630561829, 0.8233333230018616, 0.8240000009536743, 0.8243333101272583, 0.8059999942779541, 0.8040000200271606, 0.8236666917800903, 0.8263333439826965, 0.8203333616256714, 0.8166666626930237, 0.8376666903495789, 0.8363333344459534, 0.8393333554267883, 0.8363333344459534, 0.8326666951179504, 0.8266666531562805, 0.840666651725769, 0.8410000205039978, 0.8403333425521851, 0.8429999947547913, 0.8356666564941406, 0.840666651725769, 0.8423333168029785, 0.8539999723434448, 0.8453333377838135, 0.8476666808128357, 0.8456666469573975, 0.8483333587646484, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 0], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033559322357178, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 8, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [96, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 8, 1], [5, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 8, 5, 3, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 2, 3, 5], [0, 2, 1, 1, 2], [27, 37, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 3, 3, 8, 2], [2, 0, 3, 1, 0], [13, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 1, 5, 2, 1, 7, 7, 2, 0, 3, 4, 3, 2, 9, 3, 0, 6], [0, 6, 1, 4, 0, 4, 0, 4, 4, 3, 2, 7, 0], [0, 22, 23, 94, 34], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 32, 19, 13, 5, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.multiply(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(grad, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.negative(tf.math.divide_no_nan(beta, grad)))))))))))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 8, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 5, 2, 5, 7, 1], [0, 4, 6, 6, 0], [0, 21], [1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 8, 4, 4, 1, 2, 1, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), alpha), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107550144195557, 2.310199499130249, 2.310246229171753, 2.310579538345337, 2.31013822555542, 2.3103229999542236], "accuracy": [0.09245806187391281, 0.09377889335155487, 0.09509972482919693, 0.08942015469074249, 0.08651433140039444, 0.09113723784685135], "val_loss": [2.3090529441833496, 2.3090529441833496, 2.3090529441833496, 2.3090529441833496, 2.3090529441833496, 2.3090529441833496], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]