[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102768421173096, 1.6209821701049805, 1.1806899309158325, 0.9681307673454285, 0.9079734683036804, 0.8435847759246826, 0.7698609232902527, 0.7421162128448486, 0.7321102023124695, 0.7024984359741211, 0.6911764144897461, 0.6554598212242126, 0.6464047431945801, 0.6386700868606567, 0.6219557523727417, 0.6201661825180054, 0.5953260064125061, 0.6056453585624695, 0.5695882439613342, 0.564948558807373, 0.5515456795692444, 0.5538743138313293, 0.5399967432022095, 0.5335755944252014, 0.5211149454116821, 0.5197142362594604, 0.5059832334518433, 0.5163905024528503, 0.5060964226722717, 0.4980359375476837, 0.5001717209815979, 0.4807010591030121, 0.46912306547164917, 0.4740403890609741, 0.47139036655426025, 0.4691799283027649, 0.4729287922382355, 0.4490076005458832, 0.44877132773399353, 0.45188742876052856, 0.43433913588523865, 0.4369198679924011, 0.4387757182121277, 0.42625170946121216, 0.4204399883747101, 0.4177543520927429, 0.4195472300052643, 0.4122023284435272, 0.4212089776992798, 0.41607123613357544, 0.3958805799484253, 0.39483749866485596, 0.4010559618473053, 0.38615140318870544, 0.3847828209400177, 0.38894498348236084, 0.38313522934913635, 0.3761388659477234, 0.37927550077438354, 0.3757809102535248, 0.37108755111694336], "accuracy": [0.26178839802742004, 0.501518964767456, 0.5914674401283264, 0.6539427042007446, 0.6724342703819275, 0.6913221478462219, 0.7186633348464966, 0.726192057132721, 0.7230220437049866, 0.7360982894897461, 0.743891179561615, 0.7552502751350403, 0.7577598690986633, 0.7561748623847961, 0.767401933670044, 0.7666094303131104, 0.7803460359573364, 0.7705719470977783, 0.7897239327430725, 0.7932901978492737, 0.7940827012062073, 0.7954035401344299, 0.7991018295288086, 0.805177628993988, 0.8076872229576111, 0.8079513907432556, 0.8148196935653687, 0.8120459914207458, 0.8107251524925232, 0.8132346868515015, 0.8105930685997009, 0.8219521641731262, 0.8325188159942627, 0.8267071843147278, 0.826310932636261, 0.82683926820755, 0.8265751004219055, 0.8362171649932861, 0.8383304476737976, 0.8318583965301514, 0.8404437899589539, 0.8389908671379089, 0.8413683772087097, 0.8429533839225769, 0.8449346423149109, 0.8487650156021118, 0.8451988101005554, 0.8491612672805786, 0.8466516733169556, 0.8479725122451782, 0.8531237840652466, 0.8568220734596252, 0.854708731174469, 0.8577466607093811, 0.858671247959137, 0.852859616279602, 0.8607845902442932, 0.8576145768165588, 0.860652506351471, 0.8632941246032715, 0.8679170608520508], "val_loss": [1.9155713319778442, 1.1288419961929321, 0.9126386642456055, 0.7745173573493958, 0.7204014658927917, 0.6776179671287537, 0.6689263582229614, 0.6279296875, 0.6193435192108154, 0.6242954134941101, 0.5982811450958252, 0.5899879336357117, 0.5524821877479553, 0.5639216303825378, 0.5652177929878235, 0.5253138542175293, 0.5215526819229126, 0.5122049450874329, 0.5293543338775635, 0.5386242866516113, 0.49204307794570923, 0.5113215446472168, 0.49109330773353577, 0.4738950729370117, 0.4817076027393341, 0.46219176054000854, 0.4588268995285034, 0.4607984125614166, 0.4645795226097107, 0.4442475438117981, 0.4585554897785187, 0.44425442814826965, 0.4378412365913391, 0.43623849749565125, 0.42886173725128174, 0.4302538335323334, 0.42234256863594055, 0.4231823682785034, 0.422262579202652, 0.4226737916469574, 0.43112218379974365, 0.4549899101257324, 0.43428733944892883, 0.41755127906799316, 0.41364070773124695, 0.41093066334724426, 0.4229254126548767, 0.4063660502433777, 0.3977099657058716, 0.4045792520046234, 0.40155795216560364, 0.39938464760780334, 0.4027189612388611, 0.38785749673843384, 0.40245503187179565, 0.39171451330184937, 0.3922496736049652, 0.3901996314525604, 0.39315882325172424, 0.3812229037284851, 0.38807201385498047], "val_accuracy": [0.5763333439826965, 0.6370000243186951, 0.6769999861717224, 0.7206666469573975, 0.7176666855812073, 0.7403333187103271, 0.7446666955947876, 0.7620000243186951, 0.7490000128746033, 0.7506666779518127, 0.7576666474342346, 0.762333333492279, 0.7889999747276306, 0.7806666493415833, 0.7770000100135803, 0.8003333210945129, 0.8036666512489319, 0.8080000281333923, 0.800000011920929, 0.781333327293396, 0.8186666369438171, 0.8136666417121887, 0.815666675567627, 0.8223333358764648, 0.8130000233650208, 0.8243333101272583, 0.8259999752044678, 0.8320000171661377, 0.8253333568572998, 0.8363333344459534, 0.8236666917800903, 0.8346666693687439, 0.8426666855812073, 0.8416666388511658, 0.8423333168029785, 0.8416666388511658, 0.8463333249092102, 0.8450000286102295, 0.8410000205039978, 0.8500000238418579, 0.8460000157356262, 0.8140000104904175, 0.8410000205039978, 0.8493333458900452, 0.8516666889190674, 0.8503333330154419, 0.8343333601951599, 0.8503333330154419, 0.8526666760444641, 0.8526666760444641, 0.8526666760444641, 0.8550000190734863, 0.8556666374206543, 0.859666645526886, 0.847000002861023, 0.8616666793823242, 0.8569999933242798, 0.8536666631698608, 0.8500000238418579, 0.8573333621025085, 0.8526666760444641]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 2, 3, 2, 9, 2], [0, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 0, 6, 3, 5, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 5, 0, 2, 5, 2, 1], [0, 6, 1, 6, 6], [0, 71], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303986072540283, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 2, 3, 2, 3, 5, 4, 1, 6, 3, 0, 7, 3, 6, 4, 1, 9, 1, 5, 2, 4, 3, 9, 4, 6, 9], [1, 2, 1, 0, 2, 0, 1, 1, 0, 2, 3, 0, 0, 1, 3, 0, 1], [16, 39, 39, 50, 48, 52, 62, 3, 83], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 4, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 2, 0, 2, 7, 2, 1], [0, 0, 1, 6, 0], [91, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 43, 26, 17, 9, 9, 5, 4, 1, 9, 5, 4, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(alpha, grad), tf.math.square(alpha)), tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.pow(grad, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.square(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), alpha), grad)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), alpha)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 3, 6, 8, 5], [0, 0, 1, 0, 2], [47, 39, 39], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 0, 1, 0], [16, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 7, 0], [0, 58], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 9, 5, 4, 3, 5, 3, 2, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310549736022949, 2.308525800704956, 2.3099966049194336, 2.3095784187316895, 2.3093175888061523, 2.3095738887786865], "accuracy": [0.09021265059709549, 0.0944393053650856, 0.09126931428909302, 0.08889182657003403, 0.09232597798109055, 0.09153348207473755], "val_loss": [2.3087563514709473, 2.3087563514709473, 2.3087563514709473, 2.3087563514709473, 2.3087563514709473, 2.3087563514709473], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 2, 2, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 8, 7, 2], [2, 0, 2, 1, 0], [16, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102598190307617, 2.310112237930298, 2.311161994934082, 2.3104169368743896, 2.310314655303955, 2.308758497238159], "accuracy": [0.09259014576673508, 0.08889182657003403, 0.09430722147226334, 0.09496764093637466, 0.09245806187391281, 0.09377889335155487], "val_loss": [2.3091304302215576, 2.3091304302215576, 2.3091304302215576, 2.3091304302215576, 2.3091304302215576, 2.3091304302215576], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]