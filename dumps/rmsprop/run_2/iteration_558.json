[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209730625152588, 1.5912935733795166, 1.127890944480896, 0.9865051507949829, 0.891542911529541, 0.8413840532302856, 0.7817612290382385, 0.7608736157417297, 0.7333683967590332, 0.7133355140686035, 0.667687177658081, 0.6912686824798584, 0.6426019668579102, 0.6580498218536377, 0.6370788216590881, 0.6233815550804138, 0.6181977987289429, 0.5835321545600891, 0.5815297961235046, 0.5685164332389832, 0.575890839099884, 0.5497993230819702, 0.5405994653701782, 0.5530584454536438, 0.5383874177932739, 0.5314732789993286, 0.5292942523956299, 0.5220558643341064, 0.5033887624740601, 0.5015118718147278, 0.4979042708873749, 0.4990222156047821, 0.4801468253135681], "accuracy": [0.27301543951034546, 0.5138026475906372, 0.6061286330223083, 0.6454893946647644, 0.6790384650230408, 0.6940959095954895, 0.7140403985977173, 0.7189275026321411, 0.7301545143127441, 0.7383436560630798, 0.7519482374191284, 0.7440232634544373, 0.76542067527771, 0.7560427784919739, 0.7622507214546204, 0.769911527633667, 0.7658169269561768, 0.7873464822769165, 0.7812706232070923, 0.7905164361000061, 0.7873464822769165, 0.7932901978492737, 0.800818920135498, 0.7950072884559631, 0.7971205711364746, 0.802271842956543, 0.8037247657775879, 0.8098005652427673, 0.8162726163864136, 0.8178576231002808, 0.8171972036361694, 0.8202351331710815, 0.8251221776008606], "val_loss": [1.9131958484649658, 1.0764299631118774, 0.9368788003921509, 0.868925929069519, 0.7412550449371338, 0.6923549771308899, 0.6417571902275085, 0.6968530416488647, 0.6387640833854675, 0.5829526782035828, 0.5990071892738342, 0.5682291388511658, 0.5461360812187195, 0.5337148308753967, 0.5592114925384521, 0.5695228576660156, 0.5140957236289978, 0.4878358542919159, 0.5003248453140259, 0.5353333950042725, 0.4827648103237152, 0.47926050424575806, 0.4957036077976227, 0.48083364963531494, 0.4503383934497833, 0.4646300971508026, 0.45144662261009216, 0.43951481580734253, 0.4576146602630615, 0.4393743872642517, 0.43663290143013, 0.435835599899292, 0.43379178643226624], "val_accuracy": [0.5870000123977661, 0.6553333401679993, 0.656000018119812, 0.6916666626930237, 0.7256666421890259, 0.7516666650772095, 0.7493333220481873, 0.7250000238418579, 0.7379999756813049, 0.7866666913032532, 0.7883333563804626, 0.7889999747276306, 0.800000011920929, 0.8056666851043701, 0.7876666784286499, 0.7866666913032532, 0.8133333325386047, 0.8256666660308838, 0.8173333406448364, 0.8019999861717224, 0.8246666789054871, 0.8286666870117188, 0.7976666688919067, 0.8113333582878113, 0.8323333263397217, 0.8273333311080933, 0.8429999947547913, 0.8460000157356262, 0.8323333263397217, 0.8320000171661377, 0.8416666388511658, 0.840666651725769, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 3, 3, 5, 9], [0, 2, 1, 0, 2], [0, 41, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 5, 1, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 0, 6, 0], [0, 28, 14], [1], [0], [6], [0]], "fitness": -0.4511428475379944, "mapping_values": [1, 11, 7, 4, 3, 1, 0, 1, 0, 12, 7, 5, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad)))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.394608497619629, 2.26212477684021, 2.7845423221588135, 2.3101601600646973, 2.3042712211608887, 2.3033010959625244, 2.3030741214752197], "accuracy": [0.17117950320243835, 0.1558578759431839, 0.15295206010341644, 0.09893012791872025, 0.09576013684272766, 0.09457138925790787, 0.09708096832036972], "val_loss": [2.3023488521575928, 1.9728281497955322, 2.315382719039917, 2.3048083782196045, 2.3030474185943604, 2.3026230335235596, 2.3025918006896973], "val_accuracy": [0.10333333164453506, 0.45266667008399963, 0.10133333504199982, 0.10133333504199982, 0.09600000083446503, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 0, 2, 5, 5, 1], [0, 6, 1, 7, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3038389682769775, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 0, 2, 5, 3, 7, 2, 7, 1, 1, 7, 3, 1, 2, 9, 6, 6, 9, 0, 0, 2, 9, 0, 9], [0, 6, 1, 5, 2, 6, 5, 3, 4, 3, 5, 2], [0, 42, 95, 60, 1], [0, 1], [0], [2], [0]], "fitness": -0.0917142853140831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.multiply(beta, tf.math.subtract(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad), grad)), sigma), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))), grad), tf.math.negative(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3097763061523438, 2.3095600605010986, 2.3101160526275635, 2.310422897338867, 2.3096272945404053, 2.311239004135132], "accuracy": [0.08875974267721176, 0.08942015469074249, 0.09140139818191528, 0.08875974267721176, 0.09311848133802414, 0.0886276587843895], "val_loss": [2.3092174530029297, 2.3092174530029297, 2.3092174530029297, 2.3092174530029297, 2.3092174530029297, 2.3092174530029297], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 0, 37, 25, 12, 5, 2, 1, 1, 0], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 1, 0, 2], [0, 7, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 1, 2, 5, 2, 1, 2, 0, 7, 7, 8, 2, 5, 1, 6, 1, 5, 8, 2, 4, 6, 1, 9, 3, 8], [0, 6, 4, 6, 0, 5, 6, 6, 5, 3, 2, 1, 2, 3, 7, 4, 2], [0, 62, 63], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 0, 43, 26, 17, 3, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(grad, grad), grad), tf.math.negative(tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), grad), grad)))), tf.math.add(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.subtract(grad, sigma)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), beta))), tf.math.multiply(alpha, beta)), sigma), grad)), grad)), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102805614471436, 2.3095993995666504, 2.3094358444213867, 2.3097105026245117, 2.3098065853118896, 2.3101806640625], "accuracy": [0.09192973375320435, 0.08968432247638702, 0.09536388516426086, 0.08968432247638702, 0.09325055778026581, 0.09113723784685135], "val_loss": [2.30847430229187, 2.30847430229187, 2.30847430229187, 2.30847430229187, 2.30847430229187, 2.30847430229187], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]