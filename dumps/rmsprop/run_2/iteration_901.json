[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214573860168457, 1.6138529777526855, 1.1503572463989258, 0.9884831309318542, 0.8812440633773804, 0.8202583193778992, 0.7895325422286987, 0.7493991851806641, 0.7341011166572571, 0.7249153256416321, 0.6941693425178528, 0.6666373014450073, 0.6461987495422363, 0.6544989943504333, 0.6375919580459595, 0.6165146827697754, 0.6056439280509949, 0.5913071036338806, 0.5890536308288574, 0.5639690160751343, 0.567559540271759, 0.5765022039413452, 0.5492485761642456, 0.550313413143158, 0.5402131676673889, 0.5260622501373291, 0.5310543775558472, 0.5133543610572815, 0.5105275511741638, 0.5056947469711304, 0.4976906180381775, 0.4975377917289734, 0.5026760101318359, 0.49081796407699585, 0.4816717207431793, 0.48447027802467346, 0.48652949929237366], "accuracy": [0.2566371560096741, 0.5044247508049011, 0.5971469879150391, 0.6535464525222778, 0.683000922203064, 0.7040021419525146, 0.7174745798110962, 0.7194558382034302, 0.7296261787414551, 0.7321357727050781, 0.7375511527061462, 0.7471932172775269, 0.7593448758125305, 0.757099449634552, 0.7585523724555969, 0.7724210619926453, 0.7773081660270691, 0.7807422876358032, 0.7837802171707153, 0.7943468689918518, 0.7873464822769165, 0.7862898111343384, 0.7969884872436523, 0.7998943328857422, 0.7996301651000977, 0.8075551390647888, 0.8035926818847656, 0.81112140417099, 0.8076872229576111, 0.8142913579940796, 0.8183859586715698, 0.8183859586715698, 0.8168009519577026, 0.8204993009567261, 0.8232730031013489, 0.821820080280304, 0.8227446675300598], "val_loss": [1.931370496749878, 1.1123634576797485, 1.0169228315353394, 0.7941157221794128, 0.7304081916809082, 0.7602586150169373, 0.6750089526176453, 0.6456299424171448, 0.6464155316352844, 0.6146361231803894, 0.6096472144126892, 0.6096135377883911, 0.5781377553939819, 0.5977192521095276, 0.5868815183639526, 0.5411898493766785, 0.5525466203689575, 0.5320978760719299, 0.5487839579582214, 0.5259882211685181, 0.5338202118873596, 0.5108880400657654, 0.5140548348426819, 0.5127193331718445, 0.48847249150276184, 0.4970129430294037, 0.47913533449172974, 0.47916826605796814, 0.4736746549606323, 0.4775288999080658, 0.46587273478507996, 0.4591776132583618, 0.4833633303642273, 0.4808257222175598, 0.4551846981048584, 0.48402702808380127, 0.4719778597354889], "val_accuracy": [0.5423333048820496, 0.6413333415985107, 0.6623333096504211, 0.7260000109672546, 0.7289999723434448, 0.7260000109672546, 0.737666666507721, 0.7596666812896729, 0.7643333077430725, 0.7710000276565552, 0.7680000066757202, 0.7726666927337646, 0.7873333096504211, 0.7720000147819519, 0.7889999747276306, 0.8029999732971191, 0.7923333048820496, 0.8043333292007446, 0.793666660785675, 0.8113333582878113, 0.8053333163261414, 0.800000011920929, 0.8063333630561829, 0.8176666498184204, 0.8213333487510681, 0.8119999766349792, 0.8270000219345093, 0.8253333568572998, 0.8256666660308838, 0.8263333439826965, 0.8320000171661377, 0.8399999737739563, 0.8196666836738586, 0.8246666789054871, 0.8373333215713501, 0.8186666369438171, 0.824999988079071]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 2, 3, 5], [0, 1, 1, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 2, 0, 6, 3, 8, 2], [2, 4, 1, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 9, 5, 2, 1], [6, 6, 1, 6, 0], [95, 22], [1], [0], [5], [0]], "fitness": -0.3708571493625641, "mapping_values": [1, 11, 6, 5, 1, 7, 4, 3, 0, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.290165424346924, 2.9165596961975098, 2.2846834659576416, 2.1252353191375732, 2.321028232574463, 2.3039352893829346, 2.3028829097747803, 2.303969144821167, 2.3031933307647705], "accuracy": [0.23616431653499603, 0.11715757846832275, 0.12613920867443085, 0.27143046259880066, 0.1290450394153595, 0.10051512718200684, 0.09945846349000931, 0.09549596905708313, 0.1002509593963623], "val_loss": [6.174027442932129, 2.299065589904785, 2.2311887741088867, 2.0749351978302, 2.303718090057373, 2.302828073501587, 2.3029134273529053, 2.3027076721191406, 2.3028814792633057], "val_accuracy": [0.335999995470047, 0.17000000178813934, 0.19099999964237213, 0.37166666984558105, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 1, 2], [0, 2, 3, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 1, 8, 2, 1], [0, 6, 1, 0, 0], [0, 22, 96], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 12, 7, 5, 3, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.subtract(grad, alpha), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 2, 3, 5], [0, 2, 1, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 7, 2, 5, 2, 1], [0, 5, 1, 1, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 6, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 0, 2, 1], [0, 6, 2, 6, 4], [19, 22], [0, 0, 0], [0, 5, 9], [2], [0]], "fitness": -0.08799999952316284, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 12, 7, 5, 1, 3, 3, 0, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3107242584228516, 2.310072660446167, 2.3099467754364014, 2.31015944480896, 2.309356689453125, 2.310572862625122], "accuracy": [0.09377889335155487, 0.09113723784685135, 0.09245806187391281, 0.0952318087220192, 0.08849557489156723, 0.09113723784685135], "val_loss": [2.3083138465881348, 2.3083138465881348, 2.3083138465881348, 2.3083138465881348, 2.3083138465881348, 2.3083138465881348], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]