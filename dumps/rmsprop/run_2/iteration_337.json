[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2073380947113037, 1.6049926280975342, 1.1683465242385864, 0.9790767431259155, 0.8847174644470215, 0.8287957310676575, 0.7981894016265869, 0.7525781393051147, 0.7709268927574158, 0.6976748108863831, 0.674480676651001, 0.6694884300231934, 0.658244788646698, 0.6305797100067139, 0.6203578114509583, 0.6114461421966553, 0.6071351170539856, 0.588552713394165, 0.5723167657852173, 0.5607904195785522, 0.5487465262413025, 0.5564162731170654, 0.5383684635162354, 0.5410923361778259, 0.5226168632507324, 0.5200233459472656, 0.5135286450386047, 0.5158275961875916, 0.49403756856918335, 0.5011993646621704, 0.48504361510276794, 0.4843709468841553, 0.4819745421409607, 0.4666789174079895, 0.46119290590286255, 0.4679572880268097, 0.46200814843177795, 0.4489448070526123, 0.44710272550582886, 0.4396362900733948, 0.44462302327156067, 0.4277431070804596], "accuracy": [0.26997753977775574, 0.5016510486602783, 0.5886936783790588, 0.6523576974868774, 0.6806234121322632, 0.703209638595581, 0.7069079279899597, 0.7269845604896545, 0.7172104120254517, 0.7470611333847046, 0.7582882046699524, 0.7547219395637512, 0.7572315335273743, 0.7749306559562683, 0.7755910754203796, 0.7720248103141785, 0.7788931727409363, 0.7858935594558716, 0.7907806038856506, 0.7960638999938965, 0.8020076751708984, 0.7928939461708069, 0.8031964302062988, 0.8025360107421875, 0.8104609847068787, 0.8125742673873901, 0.8165367841720581, 0.8105930685997009, 0.8206313848495483, 0.817461371421814, 0.8251221776008606, 0.8253863453865051, 0.829216718673706, 0.8314621448516846, 0.830669641494751, 0.8294808864593506, 0.8309338092803955, 0.8393871188163757, 0.8366134166717529, 0.8387266993522644, 0.8426892161369324, 0.8467837572097778], "val_loss": [1.9114134311676025, 1.095381498336792, 0.8814728260040283, 0.7801523208618164, 0.7642614841461182, 0.740657389163971, 0.6761189699172974, 0.6921836733818054, 0.620387852191925, 0.6094303131103516, 0.5764959454536438, 0.5778922438621521, 0.5704188942909241, 0.5729840397834778, 0.5569809079170227, 0.5587351322174072, 0.5362522006034851, 0.5310832262039185, 0.5178410410881042, 0.5169182419776917, 0.5033931732177734, 0.5200172662734985, 0.5069746375083923, 0.4919775426387787, 0.5066066384315491, 0.4875500798225403, 0.47755345702171326, 0.476179838180542, 0.467085599899292, 0.46845728158950806, 0.46147769689559937, 0.4550318717956543, 0.457610160112381, 0.4543694257736206, 0.4551294445991516, 0.4575648307800293, 0.44652920961380005, 0.4372783303260803, 0.4395521581172943, 0.44076070189476013, 0.4309568405151367, 0.4337979853153229], "val_accuracy": [0.5479999780654907, 0.6273333430290222, 0.6856666803359985, 0.7106666564941406, 0.7086666822433472, 0.7266666889190674, 0.7333333492279053, 0.7440000176429749, 0.7710000276565552, 0.7766666412353516, 0.7913333177566528, 0.7776666879653931, 0.7743333578109741, 0.7916666865348816, 0.784333348274231, 0.7903333306312561, 0.8056666851043701, 0.8053333163261414, 0.8036666512489319, 0.8133333325386047, 0.8199999928474426, 0.8063333630561829, 0.8166666626930237, 0.8273333311080933, 0.809333324432373, 0.8153333067893982, 0.8289999961853027, 0.8253333568572998, 0.8293333053588867, 0.8320000171661377, 0.8356666564941406, 0.8376666903495789, 0.8356666564941406, 0.8360000252723694, 0.8339999914169312, 0.8383333086967468, 0.843999981880188, 0.8420000076293945, 0.843666672706604, 0.8403333425521851, 0.843999981880188, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 5, 3, 2, 3, 5], [2, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [51, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 6], [0, 2, 1, 6, 0], [0, 9], [1], [0], [4], [0]], "fitness": -0.33142855763435364, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2948989868164062, 2.275726079940796, 2.294614315032959, 2.276522397994995, 2.304797887802124, 2.3035683631896973, 2.3037381172180176, 2.303213357925415], "accuracy": [0.20882314443588257, 0.18755778670310974, 0.15915995836257935, 0.15678246319293976, 0.09470347315073013, 0.09549596905708313, 0.09853387624025345, 0.08889182657003403], "val_loss": [2.1503140926361084, 2.2780799865722656, 2.2180044651031494, 2.3045477867126465, 2.302934408187866, 2.302926540374756, 2.302635669708252, 2.3025784492492676], "val_accuracy": [0.320333331823349, 0.2083333283662796, 0.33766666054725647, 0.0989999994635582, 0.0989999994635582, 0.09733333438634872, 0.0989999994635582, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 8, 1, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [24, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 12, 7, 5, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 1, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2, 6], [2, 0, 3, 4, 1, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 4, 0, 2, 8], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 14, 8, 6, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, grad), alpha))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 5, 3, 2, 1, 5], [1, 2, 2, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 0, 2, 5, 2, 1], [4, 6, 1, 5, 0], [0, 33], [1], [0], [1], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 3, 2, 1, 0, 2, 1, 1, 0, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3099632263183594, 2.3104488849639893, 2.310145378112793, 2.310235023498535, 2.3107666969299316, 2.3105154037475586], "accuracy": [0.0886276587843895, 0.09430722147226334, 0.09536388516426086, 0.09113723784685135, 0.09166556596755981, 0.09311848133802414], "val_loss": [2.3086094856262207, 2.3086094856262207, 2.3086094856262207, 2.3086094856262207, 2.3086094856262207, 2.3086094856262207], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]