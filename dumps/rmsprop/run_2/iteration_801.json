[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2080342769622803, 1.613120675086975, 1.1646533012390137, 0.9960135817527771, 0.8978030681610107, 0.8310837149620056, 0.7872400283813477, 0.7577033638954163, 0.7531518936157227, 0.6985211968421936, 0.6649370193481445, 0.6801011562347412, 0.6712632179260254, 0.6333020925521851, 0.6226091980934143, 0.6144522428512573, 0.6046614050865173, 0.5809395909309387, 0.592774510383606, 0.5615200996398926, 0.5771442651748657, 0.5647168159484863, 0.545829176902771, 0.5348163843154907, 0.5278502702713013, 0.516329824924469, 0.521914005279541, 0.5090546011924744, 0.5026323199272156, 0.5184609889984131, 0.4954485595226288, 0.4880322515964508, 0.4812956154346466, 0.4828547239303589, 0.47448059916496277, 0.4757133424282074, 0.46489840745925903, 0.4635055959224701], "accuracy": [0.26799631118774414, 0.501518964767456, 0.5875049233436584, 0.6387531161308289, 0.6740192770957947, 0.6907938122749329, 0.7055870890617371, 0.7180029153823853, 0.7169462442398071, 0.743891179561615, 0.7559106945991516, 0.7408532500267029, 0.7442874312400818, 0.7602694630622864, 0.7696473598480225, 0.7662131786346436, 0.772288978099823, 0.7858935594558716, 0.7814027070999146, 0.7918372750282288, 0.7865539789199829, 0.7930260300636292, 0.7911768555641174, 0.8075551390647888, 0.8090080618858337, 0.8136309385299683, 0.8064984679222107, 0.8083476424217224, 0.8140271902084351, 0.8059701323509216, 0.8150838613510132, 0.8178576231002808, 0.8230088353157043, 0.8239334225654602, 0.8289526104927063, 0.8230088353157043, 0.8330471515655518, 0.8325188159942627], "val_loss": [1.9153348207473755, 1.105096697807312, 0.8731754422187805, 0.8082037568092346, 0.7288193106651306, 0.7204583883285522, 0.6978838443756104, 0.6960141658782959, 0.6160314083099365, 0.5924089550971985, 0.5850918889045715, 0.6379404067993164, 0.5990391969680786, 0.5401840209960938, 0.5662659406661987, 0.5386971235275269, 0.5290483832359314, 0.5399563908576965, 0.5134814381599426, 0.5763855576515198, 0.5415304899215698, 0.49442949891090393, 0.4984777867794037, 0.4875064194202423, 0.4801473021507263, 0.4757711589336395, 0.46551546454429626, 0.45663395524024963, 0.46718212962150574, 0.45358580350875854, 0.4557018578052521, 0.45092764496803284, 0.44260430335998535, 0.4728361964225769, 0.4434361159801483, 0.4394708573818207, 0.44026586413383484, 0.44679728150367737], "val_accuracy": [0.6010000109672546, 0.656333327293396, 0.6943333148956299, 0.7049999833106995, 0.7133333086967468, 0.7266666889190674, 0.7256666421890259, 0.7196666598320007, 0.7683333158493042, 0.7856666445732117, 0.7846666574478149, 0.7480000257492065, 0.7820000052452087, 0.8073333501815796, 0.7883333563804626, 0.7983333468437195, 0.8113333582878113, 0.800000011920929, 0.8106666803359985, 0.7649999856948853, 0.7953333258628845, 0.8196666836738586, 0.812666654586792, 0.8306666612625122, 0.8320000171661377, 0.8293333053588867, 0.8370000123977661, 0.8399999737739563, 0.82833331823349, 0.8360000252723694, 0.8399999737739563, 0.8336666822433472, 0.8486666679382324, 0.8196666836738586, 0.8446666598320007, 0.8453333377838135, 0.8486666679382324, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 4, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 0, 0], [0, 22, 27], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 0, 12, 7, 5, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(beta), tf.math.pow(tf.math.multiply(grad, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1135559168.0, 21291862016.0, 99065257984.0, 275808616448.0, 597657387008.0, 1090515763200.0], "accuracy": [0.09721305221319199, 0.09945846349000931, 0.09866596013307571, 0.10210011899471283, 0.10038304328918457, 0.09655263274908066], "val_loss": [5193885184.0, 41545998336.0, 140211257344.0, 332345475072.0, 649102819328.0, 1121646149632.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 5, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 38], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309382438659668, 2.3104021549224854, 2.3103044033050537, 2.3107903003692627, 2.3098902702331543, 2.309871196746826], "accuracy": [0.09206181764602661, 0.09285431355237961, 0.09100515395402908, 0.08585391938686371, 0.09509972482919693, 0.09272222965955734], "val_loss": [2.309955596923828, 2.309955596923828, 2.309955596923828, 2.309955596923828, 2.309955596923828, 2.309955596923828], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 8, 3, 1, 3, 5], [1, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 9], [2, 0, 0, 1, 0], [21, 1, 11], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 3, 5], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 7, 4, 3, 0, 12, 8, 4, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.subtract(alpha, grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.31052303314209, 2.3103551864624023, 2.3102757930755615, 2.310863971710205, 2.309891700744629, 2.3100180625915527], "accuracy": [0.08625016361474991, 0.08928807079792023, 0.08730682730674744, 0.09034473448991776, 0.0874389111995697, 0.09457138925790787], "val_loss": [2.3085319995880127, 2.3085319995880127, 2.3085319995880127, 2.3085319995880127, 2.3085319995880127, 2.3085319995880127], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 8], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [9, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [52, 22], [1], [0], [2], [0]], "fitness": -0.08742856979370117, "mapping_values": [1, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3111345767974854, 2.3096418380737305, 2.3104138374328613, 2.310478448867798, 2.3098537921905518, 2.3117668628692627], "accuracy": [0.09008057415485382, 0.09338264167308807, 0.09325055778026581, 0.09021265059709549, 0.0956280529499054, 0.08757099509239197], "val_loss": [2.3084330558776855, 2.3084330558776855, 2.3084330558776855, 2.3084330558776855, 2.3084330558776855, 2.3084330558776855], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]