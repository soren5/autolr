[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210625410079956, 1.5960993766784668, 1.1752967834472656, 0.9668861627578735, 0.8935384750366211, 0.8157672882080078, 0.8009474873542786, 0.745502233505249, 0.7119375467300415, 0.7294725775718689, 0.6777063608169556, 0.6692315340042114, 0.6636893153190613, 0.6341044902801514, 0.6397042870521545, 0.6278440356254578, 0.6023557782173157, 0.5981084108352661, 0.5900744795799255, 0.5764621496200562, 0.564237654209137, 0.5725593566894531, 0.5554478764533997, 0.5431749820709229, 0.5350331664085388, 0.5302584767341614, 0.5171612501144409, 0.528323233127594, 0.5130437016487122, 0.5186157822608948, 0.4936325252056122, 0.4975779354572296, 0.48747026920318604, 0.4904680550098419, 0.4814315438270569, 0.47521790862083435, 0.4724588990211487, 0.462002158164978, 0.4719964265823364, 0.45278409123420715, 0.4488653838634491, 0.4437830448150635, 0.4403189718723297, 0.43443718552589417, 0.43340420722961426, 0.4373670816421509, 0.42477986216545105, 0.42250779271125793, 0.41811853647232056, 0.4108993709087372, 0.4142186641693115], "accuracy": [0.2697133719921112, 0.5106326937675476, 0.587769091129303, 0.6586976647377014, 0.6785101294517517, 0.6976621150970459, 0.7074362635612488, 0.7218332886695862, 0.7395324110984802, 0.7310791015625, 0.7548540234565735, 0.7512878179550171, 0.7508915662765503, 0.7666094303131104, 0.7672698497772217, 0.7626469135284424, 0.7778365015983582, 0.7843085527420044, 0.7783648371696472, 0.7862898111343384, 0.7935543656349182, 0.7844406366348267, 0.7987055778503418, 0.802271842956543, 0.7984414100646973, 0.8025360107421875, 0.8080834746360779, 0.8025360107421875, 0.8128384351730347, 0.804649293422699, 0.8195747137069702, 0.819442629814148, 0.8190463781356812, 0.8185180425643921, 0.8224804997444153, 0.8271034359931946, 0.826310932636261, 0.8298771381378174, 0.8231409192085266, 0.8378021121025085, 0.8366134166717529, 0.8347642421722412, 0.8418967127799988, 0.8412362933158875, 0.8422929644584656, 0.8372738361358643, 0.843481719493866, 0.8455950617790222, 0.8473120927810669, 0.8466516733169556, 0.8474441766738892], "val_loss": [1.9228583574295044, 1.1058255434036255, 0.8758161067962646, 0.8092682957649231, 0.7040663361549377, 0.687638521194458, 0.6415910720825195, 0.6166015863418579, 0.6344628930091858, 0.5842612385749817, 0.5779626369476318, 0.6071774959564209, 0.5447425842285156, 0.5329115986824036, 0.5353798270225525, 0.5542615056037903, 0.5369197726249695, 0.5118052959442139, 0.4842510521411896, 0.4755600690841675, 0.4984751343727112, 0.48461782932281494, 0.47364336252212524, 0.4740158021450043, 0.4567716419696808, 0.4496137797832489, 0.44895854592323303, 0.44086208939552307, 0.445487380027771, 0.43268224596977234, 0.4773704707622528, 0.42657470703125, 0.41635558009147644, 0.44107645750045776, 0.40554478764533997, 0.4562993049621582, 0.41471362113952637, 0.4186863899230957, 0.39949584007263184, 0.4089455306529999, 0.3850121796131134, 0.38246312737464905, 0.39239779114723206, 0.38903218507766724, 0.4052760899066925, 0.37211930751800537, 0.37121227383613586, 0.3830675482749939, 0.3713197708129883, 0.398367315530777, 0.37068402767181396], "val_accuracy": [0.550000011920929, 0.6620000004768372, 0.6966666579246521, 0.7129999995231628, 0.737666666507721, 0.7403333187103271, 0.762666642665863, 0.7733333110809326, 0.7696666717529297, 0.7806666493415833, 0.7866666913032532, 0.7593333125114441, 0.7940000295639038, 0.7960000038146973, 0.7983333468437195, 0.7836666703224182, 0.8006666898727417, 0.8066666722297668, 0.8149999976158142, 0.8166666626930237, 0.809333324432373, 0.8103333115577698, 0.8163333535194397, 0.8193333148956299, 0.8226666450500488, 0.8243333101272583, 0.831333339214325, 0.831333339214325, 0.8263333439826965, 0.840666651725769, 0.8209999799728394, 0.8360000252723694, 0.8403333425521851, 0.8326666951179504, 0.8476666808128357, 0.8190000057220459, 0.8446666598320007, 0.8479999899864197, 0.8493333458900452, 0.8476666808128357, 0.8543333411216736, 0.859333336353302, 0.8566666841506958, 0.8573333621025085, 0.8426666855812073, 0.862333357334137, 0.8619999885559082, 0.8550000190734863, 0.859666645526886, 0.8473333120346069, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0, 0], [16, 1, 71], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 2, 5, 9, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 13, 7, 6, 3, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 2, 3, 7, 3, 5], [0, 1, 1, 2, 1, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [98, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 1, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(grad, alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 7, 3, 5], [0, 1, 3, 0, 2], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0974285677075386, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310590982437134, 2.310922861099243, 2.3094301223754883, 2.3095898628234863, 2.308880567550659, 2.3106801509857178], "accuracy": [0.09325055778026581, 0.08928807079792023, 0.09192973375320435, 0.09509972482919693, 0.09047681838274002, 0.09100515395402908], "val_loss": [2.3095200061798096, 2.3095200061798096, 2.3095200061798096, 2.3095200061798096, 2.3095200061798096, 2.3095200061798096], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 8, 3, 7, 2, 4], [1, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 2, 9, 2, 1], [6, 6, 0, 6, 0], [0, 81], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 0, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097941875457764, 2.310575008392334, 2.3102080821990967, 2.310394525527954, 2.309948682785034, 2.310241460800171], "accuracy": [0.09470347315073013, 0.09232597798109055, 0.08730682730674744, 0.09087307006120682, 0.0944393053650856, 0.09074098616838455], "val_loss": [2.3086259365081787, 2.3086259365081787, 2.3086259365081787, 2.3086259365081787, 2.3086259365081787, 2.3086259365081787], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]