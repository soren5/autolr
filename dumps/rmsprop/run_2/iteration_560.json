[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102878093719482, 1.6088762283325195, 1.1669713258743286, 0.9960495829582214, 0.9002176523208618, 0.837040364742279, 0.8041498064994812, 0.7837072014808655, 0.7317149043083191, 0.7285619378089905, 0.6937101483345032, 0.6657263040542603, 0.6656855344772339, 0.6421383023262024, 0.6350999474525452, 0.633533239364624, 0.6002562642097473, 0.6097286343574524, 0.5889779925346375, 0.565129816532135, 0.5608421564102173, 0.570358395576477, 0.5622625946998596, 0.5368747115135193, 0.549938440322876, 0.517566442489624, 0.5121644139289856, 0.5160328149795532, 0.513262927532196, 0.5121443867683411, 0.49289003014564514, 0.5015077590942383, 0.49293822050094604, 0.47642484307289124, 0.4815584123134613, 0.4734925329685211, 0.47788044810295105, 0.45978495478630066, 0.44955357909202576, 0.4574510157108307, 0.44855889678001404, 0.45669662952423096, 0.4477750062942505, 0.4579932391643524], "accuracy": [0.26284506916999817, 0.509840190410614, 0.5930524468421936, 0.6411306262016296, 0.6708492636680603, 0.6909258961677551, 0.7100779414176941, 0.7129837274551392, 0.7271166443824768, 0.7279091477394104, 0.7403249144554138, 0.7548540234565735, 0.748778223991394, 0.7549861073493958, 0.7582882046699524, 0.7619865536689758, 0.7792893648147583, 0.7729493975639343, 0.7766477465629578, 0.7874785661697388, 0.7926297783851624, 0.7852331399917603, 0.785629391670227, 0.8016114234924316, 0.7897239327430725, 0.802800178527832, 0.8082155585289001, 0.802800178527832, 0.8074230551719666, 0.8079513907432556, 0.8144234418869019, 0.8164047002792358, 0.8185180425643921, 0.8214238286018372, 0.8198388814926147, 0.8185180425643921, 0.8206313848495483, 0.8304054737091064, 0.8335754871368408, 0.829216718673706, 0.834632158279419, 0.8321225643157959, 0.8333113193511963, 0.8248580098152161], "val_loss": [1.9160264730453491, 1.0940494537353516, 0.8818081021308899, 0.7868462204933167, 0.7611159086227417, 0.7203292846679688, 0.6646042466163635, 0.6532175540924072, 0.6855908036231995, 0.6289737820625305, 0.6430988311767578, 0.5948929786682129, 0.6137663722038269, 0.5831918716430664, 0.561838686466217, 0.5722957253456116, 0.5502601861953735, 0.5652639865875244, 0.5382944941520691, 0.5343163013458252, 0.5222167372703552, 0.5500343441963196, 0.5276736617088318, 0.5237480401992798, 0.5044694542884827, 0.49870792031288147, 0.511345624923706, 0.49659183621406555, 0.484465092420578, 0.4875587522983551, 0.4714657664299011, 0.4715070426464081, 0.480589359998703, 0.4726285934448242, 0.4651660919189453, 0.4923837184906006, 0.4530560374259949, 0.45252135396003723, 0.45507174730300903, 0.4563555121421814, 0.467193067073822, 0.448586106300354, 0.46661752462387085, 0.4501078426837921], "val_accuracy": [0.6010000109672546, 0.6610000133514404, 0.687333345413208, 0.7183333039283752, 0.7300000190734863, 0.7300000190734863, 0.7483333349227905, 0.762333333492279, 0.7310000061988831, 0.7609999775886536, 0.7630000114440918, 0.7763333320617676, 0.7680000066757202, 0.7836666703224182, 0.7896666526794434, 0.7776666879653931, 0.7993333339691162, 0.7826666831970215, 0.8043333292007446, 0.8050000071525574, 0.8069999814033508, 0.7850000262260437, 0.8003333210945129, 0.8056666851043701, 0.8166666626930237, 0.8169999718666077, 0.8096666932106018, 0.8206666707992554, 0.8213333487510681, 0.8209999799728394, 0.8299999833106995, 0.8289999961853027, 0.8240000009536743, 0.8286666870117188, 0.8336666822433472, 0.8176666498184204, 0.8403333425521851, 0.840666651725769, 0.8410000205039978, 0.8343333601951599, 0.8353333473205566, 0.8379999995231628, 0.828000009059906, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 1, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 7, 1, 6, 3], [0, 50], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101871013641357, 2.3100013732910156, 2.310006856918335, 2.311384677886963, 2.309762477874756, 2.310091018676758], "accuracy": [0.09074098616838455, 0.08915598690509796, 0.09826971590518951, 0.09615638852119446, 0.09232597798109055, 0.09232597798109055], "val_loss": [2.3089945316314697, 2.3089945316314697, 2.3089945316314697, 2.3089945316314697, 2.3089945316314697, 2.3089945316314697], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 0, 7, 1, 3, 6, 9, 3, 8], [0, 0, 2, 3, 1, 2, 0, 0, 3], [77, 12, 39, 23, 75], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 6, 6], [0, 1, 1, 6, 0], [0, 60], [1], [0], [0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 23, 14, 9, 5, 7, 4, 3, 1, 12, 7, 5, 2, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.negative(grad))), tf.math.add(tf.math.subtract(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(alpha, grad)))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310603380203247, 2.3096940517425537, 2.310584306716919, 2.3105721473693848, 2.3111445903778076, 2.310145378112793], "accuracy": [0.08796724677085876, 0.09298639744520187, 0.09166556596755981, 0.08902391046285629, 0.09008057415485382, 0.08915598690509796], "val_loss": [2.309079647064209, 2.309079647064209, 2.309079647064209, 2.309079647064209, 2.309079647064209, 2.309079647064209], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 0, 6, 3, 8, 2, 5, 7], [2, 0, 3, 1, 0, 0], [16, 1, 26], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5, 1, 5], [0, 6, 1, 6, 0], [0, 40], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 15, 9, 6, 3, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.square(grad), alpha)))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310495138168335, 2.3109140396118164, 2.3100125789642334, 2.3097405433654785, 2.309568166732788, 2.3092994689941406], "accuracy": [0.08955223858356476, 0.08994849026203156, 0.0882314071059227, 0.09642054885625839, 0.09668471664190292, 0.09668471664190292], "val_loss": [2.3085176944732666, 2.3085176944732666, 2.3085176944732666, 2.3085176944732666, 2.3085176944732666, 2.3085176944732666], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 3, 3, 5], [2, 2, 1, 1, 2], [10, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [21, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 3, 5, 2, 1], [4, 6, 1, 6, 0], [0, 6], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 6, 3, 3, 0, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099465370178223, 2.309755325317383, 2.3102619647979736, 2.3092758655548096, 2.309650182723999, 2.309558391571045], "accuracy": [0.09192973375320435, 0.09100515395402908, 0.09166556596755981, 0.08994849026203156, 0.09100515395402908, 0.09245806187391281], "val_loss": [2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043, 2.308497428894043], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]