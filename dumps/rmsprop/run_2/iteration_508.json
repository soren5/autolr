[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8237142562866211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207902193069458, 1.6001914739608765, 1.1390620470046997, 0.9791173934936523, 0.8951839208602905, 0.8235191106796265, 0.8122048377990723, 0.7615451216697693, 0.7377641797065735, 0.715984582901001, 0.6796947717666626, 0.6633923053741455, 0.6760948896408081, 0.6374037265777588, 0.6365259885787964, 0.616929292678833, 0.6084548830986023, 0.6137154698371887, 0.5859848260879517, 0.5819733142852783, 0.585565447807312, 0.5583705306053162, 0.5472966432571411, 0.5521045327186584, 0.548231840133667, 0.5493835210800171, 0.5296080112457275, 0.5292743444442749, 0.5164605975151062, 0.5087385773658752, 0.5031884908676147, 0.5016987919807434, 0.49518874287605286, 0.49774014949798584, 0.4838680624961853, 0.4706992208957672, 0.4734034836292267], "accuracy": [0.2723550498485565, 0.5079910159111023, 0.5996565818786621, 0.6519614458084106, 0.6705851554870605, 0.7025492191314697, 0.7016246318817139, 0.7185312509536743, 0.7298903465270996, 0.7310791015625, 0.7464007139205933, 0.7504953145980835, 0.7460044622421265, 0.7597411274909973, 0.761590301990509, 0.7721568942070007, 0.7728173136711121, 0.7667415142059326, 0.7802139520645142, 0.7847048044204712, 0.7824593782424927, 0.7931581139564514, 0.7979130744934082, 0.7911768555641174, 0.7988376617431641, 0.8021397590637207, 0.8053097128868103, 0.8021397590637207, 0.8103289008140564, 0.8094043135643005, 0.8164047002792358, 0.8120459914207458, 0.8197067975997925, 0.8132346868515015, 0.8238013386726379, 0.8253863453865051, 0.8245938420295715], "val_loss": [1.9056074619293213, 1.0872209072113037, 0.9173535108566284, 0.8006102442741394, 0.7414811849594116, 0.6702383756637573, 0.6590139865875244, 0.6435898542404175, 0.6494832634925842, 0.6079714298248291, 0.5913847088813782, 0.5775417685508728, 0.5567771792411804, 0.5786421298980713, 0.5554847717285156, 0.5444426536560059, 0.5437085628509521, 0.5284480452537537, 0.5224302411079407, 0.518438458442688, 0.5159939527511597, 0.48137426376342773, 0.5039064288139343, 0.4713311493396759, 0.4798409938812256, 0.4733292758464813, 0.4788869321346283, 0.4622095823287964, 0.4499330520629883, 0.45812076330184937, 0.47597193717956543, 0.43808162212371826, 0.44259634613990784, 0.43400877714157104, 0.42948198318481445, 0.44553858041763306, 0.4580017924308777], "val_accuracy": [0.528333306312561, 0.6579999923706055, 0.6846666932106018, 0.7049999833106995, 0.7356666922569275, 0.7563333511352539, 0.7409999966621399, 0.7649999856948853, 0.7426666617393494, 0.7706666588783264, 0.7786666750907898, 0.7900000214576721, 0.8066666722297668, 0.7753333449363708, 0.7953333258628845, 0.7979999780654907, 0.8026666641235352, 0.809333324432373, 0.8083333373069763, 0.8046666383743286, 0.8046666383743286, 0.8203333616256714, 0.8069999814033508, 0.8266666531562805, 0.8143333196640015, 0.8243333101272583, 0.82833331823349, 0.82833331823349, 0.8373333215713501, 0.8266666531562805, 0.8100000023841858, 0.8453333377838135, 0.8363333344459534, 0.8346666693687439, 0.8423333168029785, 0.8270000219345093, 0.8186666369438171]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 6, 2, 7, 5, 5], [3, 3, 1, 0, 2], [31, 39, 39], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 9, 2], [2, 0, 3, 1, 0], [77, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [7], [0]], "fitness": -0.24371428787708282, "mapping_values": [1, 12, 7, 5, 1, 2, 1, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, grad), alpha), tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3616371154785156, 2.596951961517334, 2.3062524795532227, 2.303154706954956, 2.3028461933135986, 2.302147626876831], "accuracy": [0.22863557934761047, 0.16761326789855957, 0.10091137140989304, 0.10249637067317963, 0.09708096832036972, 0.09760929644107819], "val_loss": [2.2438807487487793, 2.3078296184539795, 2.3031346797943115, 2.3023905754089355, 2.3022055625915527, 2.3012959957122803], "val_accuracy": [0.23633334040641785, 0.10400000214576721, 0.1003333330154419, 0.1003333330154419, 0.10266666859388351, 0.1080000028014183]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 6, 3, 9], [0, 2, 0, 0, 2, 2], [0, 39, 39, 5], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 2], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 5, 7, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 9, 3, 8, 7], [2, 0, 3, 1, 1], [16, 40], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 0, 2, 3, 7, 1, 3, 7, 2, 3], [0, 3, 1, 6, 2, 3, 4, 6, 0, 2, 6], [74, 38], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 2, 25, 14, 11, 2, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(sigma, alpha), tf.math.subtract(tf.math.multiply(grad, beta), tf.math.add(sigma, grad)))))), tf.math.add(tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 1, 2], [0, 73, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 8, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3087821006774902, 2.309903144836426, 2.3094935417175293, 2.308919668197632, 2.309553861618042, 2.3095686435699463], "accuracy": [0.09919429570436478, 0.09140139818191528, 0.09774138033390045, 0.09959053993225098, 0.09311848133802414, 0.08994849026203156], "val_loss": [2.3089993000030518, 2.3089993000030518, 2.3089993000030518, 2.3089993000030518, 2.3089993000030518, 2.3089993000030518], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]