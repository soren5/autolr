[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8142856955528259, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212522506713867, 1.6119722127914429, 1.1281987428665161, 1.009145736694336, 0.857997715473175, 0.8712326288223267, 0.7977374196052551, 0.7386996746063232, 0.748643696308136, 0.7059571743011475, 0.728844404220581, 0.6785761713981628, 0.6562198400497437, 0.6807721257209778, 0.6282092928886414, 0.6108148097991943, 0.6108691692352295, 0.5849704742431641, 0.5880276560783386, 0.5866200923919678, 0.569044291973114, 0.5557352900505066, 0.5444540977478027, 0.5443615913391113, 0.5236543416976929, 0.5304899215698242, 0.5165891647338867, 0.5006354451179504, 0.49767959117889404, 0.49361130595207214, 0.49966949224472046, 0.48655086755752563, 0.4747868478298187, 0.46711575984954834, 0.4778921604156494, 0.47321704030036926, 0.45904967188835144, 0.4550130367279053, 0.4624239206314087, 0.4439081847667694, 0.44328585267066956, 0.4405730068683624, 0.42723047733306885, 0.43633899092674255, 0.42341214418411255, 0.41488951444625854, 0.4270443618297577, 0.4195432960987091, 0.4221757650375366, 0.40770450234413147, 0.40677574276924133, 0.4024641215801239, 0.4009282886981964, 0.4003325402736664, 0.39840957522392273, 0.3870634138584137, 0.3832772374153137, 0.3739575445652008, 0.3834191560745239, 0.3805323839187622, 0.376101553440094, 0.38155871629714966, 0.3707225024700165, 0.3621045649051666, 0.36140963435173035, 0.365495502948761, 0.35844939947128296], "accuracy": [0.26641130447387695, 0.509840190410614, 0.6065248847007751, 0.6446968913078308, 0.6885483860969543, 0.6900013089179993, 0.7045304179191589, 0.7298903465270996, 0.7231541275978088, 0.7420420050621033, 0.7337207794189453, 0.7500990629196167, 0.7578919529914856, 0.7442874312400818, 0.7681944370269775, 0.7761194109916687, 0.774798572063446, 0.7853652238845825, 0.7784969210624695, 0.785101056098938, 0.7935543656349182, 0.798309326171875, 0.8005547523498535, 0.8005547523498535, 0.8121780753135681, 0.8041210174560547, 0.8103289008140564, 0.8168009519577026, 0.819970965385437, 0.8206313848495483, 0.8197067975997925, 0.8228767514228821, 0.8285563588142395, 0.8317263126373291, 0.826310932636261, 0.8269713521003723, 0.8341038227081299, 0.8356888294219971, 0.828820526599884, 0.837141752243042, 0.8401796221733093, 0.8399154543876648, 0.8421608805656433, 0.8407079577445984, 0.8494254350662231, 0.8495575189590454, 0.8428213000297546, 0.8477083444595337, 0.8450667262077332, 0.8518029451370239, 0.8562937378883362, 0.850350022315979, 0.8543124794960022, 0.8540483713150024, 0.8551049828529358, 0.8623695969581604, 0.858671247959137, 0.8625016212463379, 0.8594637513160706, 0.8627657890319824, 0.8628978729248047, 0.8601241707801819, 0.8685774803161621, 0.8696341514587402, 0.8681812286376953, 0.8651432991027832, 0.869502067565918], "val_loss": [1.9266160726547241, 1.0892034769058228, 0.9135552644729614, 0.7687368392944336, 0.7348510026931763, 0.6744644045829773, 0.6544274687767029, 0.6249173879623413, 0.6126276254653931, 0.6227985620498657, 0.5684969425201416, 0.593552827835083, 0.5969990491867065, 0.5672101974487305, 0.5342095494270325, 0.5351319313049316, 0.5548207759857178, 0.5238345265388489, 0.5022220015525818, 0.5027592778205872, 0.5167127251625061, 0.48995962738990784, 0.4971255958080292, 0.48511213064193726, 0.49125346541404724, 0.47620850801467896, 0.48346778750419617, 0.47048869729042053, 0.46935442090034485, 0.4597198963165283, 0.4724230170249939, 0.44896236062049866, 0.4508233368396759, 0.45012834668159485, 0.4440358877182007, 0.442424476146698, 0.44647225737571716, 0.4340978264808655, 0.4320603907108307, 0.4289667010307312, 0.4265322685241699, 0.43871134519577026, 0.429558664560318, 0.43475696444511414, 0.42107638716697693, 0.43044278025627136, 0.4278391897678375, 0.41533029079437256, 0.41017186641693115, 0.41389933228492737, 0.4143451750278473, 0.4268913269042969, 0.439898282289505, 0.40821516513824463, 0.4000701606273651, 0.4013238847255707, 0.39853784441947937, 0.4053032100200653, 0.40133267641067505, 0.39462900161743164, 0.39590394496917725, 0.3911401629447937, 0.39257246255874634, 0.39023348689079285, 0.3891550302505493, 0.4131127893924713, 0.4012412130832672], "val_accuracy": [0.6006666421890259, 0.6583333611488342, 0.6616666913032532, 0.7239999771118164, 0.7273333072662354, 0.753000020980835, 0.7593333125114441, 0.7683333158493042, 0.7773333191871643, 0.7663333415985107, 0.7866666913032532, 0.7663333415985107, 0.7753333449363708, 0.7913333177566528, 0.8013333082199097, 0.796999990940094, 0.793666660785675, 0.8003333210945129, 0.8130000233650208, 0.8153333067893982, 0.8056666851043701, 0.8136666417121887, 0.815666675567627, 0.8119999766349792, 0.8173333406448364, 0.8220000267028809, 0.8270000219345093, 0.8286666870117188, 0.8273333311080933, 0.8370000123977661, 0.8233333230018616, 0.8346666693687439, 0.8373333215713501, 0.8379999995231628, 0.8376666903495789, 0.840666651725769, 0.8396666646003723, 0.8443333506584167, 0.8446666598320007, 0.8479999899864197, 0.847000002861023, 0.8403333425521851, 0.8463333249092102, 0.8453333377838135, 0.8503333330154419, 0.8396666646003723, 0.8429999947547913, 0.8489999771118164, 0.8536666631698608, 0.8523333072662354, 0.8519999980926514, 0.8423333168029785, 0.8410000205039978, 0.8543333411216736, 0.859333336353302, 0.856333315372467, 0.8603333234786987, 0.8519999980926514, 0.8573333621025085, 0.8576666712760925, 0.8550000190734863, 0.8629999756813049, 0.8576666712760925, 0.862666666507721, 0.862666666507721, 0.846666693687439, 0.8510000109672546]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 0], [69, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [9, 2, 0, 0, 3, 3, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 0, 6, 5, 0], [2, 7, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 8, 5, 3, 1, 9, 6, 3, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.negative(grad)), sigma))))", "other_info": {"loss": [2.3325395584106445, 2.336702585220337, 2.336590528488159, 2.335707664489746, 2.33636474609375, 2.3373000621795654], "accuracy": [0.10421344637870789, 0.1002509593963623, 0.10606260597705841, 0.10394927859306335, 0.10315678268671036, 0.09906221181154251], "val_loss": [2.337756872177124, 2.3377087116241455, 2.3377087116241455, 2.3377087116241455, 2.3377087116241455, 2.3377087116241455], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [3, 46, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 0, 6, 3, 7, 2, 3, 1, 3, 1, 2, 6, 7, 3, 9, 5, 7, 2, 1, 9, 8, 9, 6, 0], [2, 0, 2, 1, 0, 2, 2, 5, 0, 3, 2, 4, 5, 0, 5], [16, 1, 79, 89, 22, 34, 28], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 2, 5, 2, 1, 6, 4], [0, 6, 1, 6, 0, 7, 0], [97, 28, 53], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 40, 25, 15, 7, 16, 9, 7, 3, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad), alpha), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(beta, tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.add(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, beta)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), grad), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), grad), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 3, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 8, 5, 3, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.math.add(tf.math.subtract(sigma, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 9, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091683387756348, 2.3100337982177734, 2.3104677200317383, 2.3100311756134033, 2.3093149662017822, 2.3097002506256104], "accuracy": [0.0886276587843895, 0.08889182657003403, 0.0886276587843895, 0.09100515395402908, 0.09470347315073013, 0.08942015469074249], "val_loss": [2.3087213039398193, 2.3087213039398193, 2.3087213039398193, 2.3087213039398193, 2.3087213039398193, 2.3087213039398193], "val_accuracy": [0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439]}}]