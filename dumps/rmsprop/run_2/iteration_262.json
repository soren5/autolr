[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2090840339660645, 1.5926952362060547, 1.1455659866333008, 0.9851342439651489, 0.873805046081543, 0.8020936250686646, 0.7998259663581848, 0.7577417492866516, 0.7044128775596619, 0.6931331753730774, 0.6918715834617615, 0.6631136536598206, 0.6459038853645325, 0.6321122646331787, 0.6286728978157043, 0.6001620888710022, 0.5876427292823792, 0.5948274731636047, 0.5804978609085083, 0.5914958119392395, 0.553494930267334, 0.5492624640464783, 0.5270726084709167, 0.5235880017280579, 0.5320887565612793], "accuracy": [0.2716946303844452, 0.5077268481254578, 0.6090344786643982, 0.6465460062026978, 0.6873596906661987, 0.7020208835601807, 0.7017567157745361, 0.7232862114906311, 0.739400327205658, 0.7413815855979919, 0.7440232634544373, 0.7495707273483276, 0.7592127919197083, 0.7604015469551086, 0.769911527633667, 0.7799497842788696, 0.7798177003860474, 0.7749306559562683, 0.785101056098938, 0.78113853931427, 0.7947431206703186, 0.7950072884559631, 0.8024039268493652, 0.8039889335632324, 0.7981772422790527], "val_loss": [1.9122291803359985, 1.0835734605789185, 0.8845674395561218, 0.7835257053375244, 0.7292177081108093, 0.686410129070282, 0.7047306895256042, 0.6501711010932922, 0.6177293062210083, 0.5890594720840454, 0.5950121879577637, 0.5856643319129944, 0.5797783732414246, 0.6062425374984741, 0.530465304851532, 0.5309680104255676, 0.5231341123580933, 0.520266592502594, 0.5017271637916565, 0.48956307768821716, 0.488054484128952, 0.48353374004364014, 0.4772690534591675, 0.507953941822052, 0.5017561316490173], "val_accuracy": [0.49933332204818726, 0.6536666750907898, 0.6769999861717224, 0.7213333249092102, 0.7269999980926514, 0.734666645526886, 0.7113333344459534, 0.7546666860580444, 0.7630000114440918, 0.765999972820282, 0.7666666507720947, 0.7616666555404663, 0.7673333287239075, 0.7566666603088379, 0.7933333516120911, 0.7900000214576721, 0.7973333597183228, 0.7973333597183228, 0.8083333373069763, 0.8199999928474426, 0.8193333148956299, 0.8140000104904175, 0.815666675567627, 0.7996666431427002, 0.8029999732971191]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 17, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 6, 6, 5], [0, 22], [1], [0], [2], [0]], "fitness": -0.3171428442001343, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.292867422103882, 2.3319594860076904, 2.5410654544830322, 2.4964354038238525, 2.2787556648254395, 2.310455560684204, 2.305056095123291], "accuracy": [0.2044644057750702, 0.1550653874874115, 0.20591731369495392, 0.13142253458499908, 0.1810857206583023, 0.09642054885625839, 0.09972262382507324], "val_loss": [2.247894287109375, 1.8294235467910767, 2.17565655708313, 2.267289638519287, 2.308635711669922, 2.3068394660949707, 2.302696943283081], "val_accuracy": [0.2759999930858612, 0.3096666634082794, 0.13300000131130219, 0.1003333330154419, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 2, 2, 5, 2, 1, 0, 4, 7, 3, 2, 2, 0, 1, 3, 9, 7, 1, 3, 5, 8, 2, 0, 0, 7, 9], [5, 6, 1, 6, 0, 1, 7, 4, 7, 5, 1, 3, 1, 0, 7, 3], [0, 22, 56, 67], [0, 0], [0, 9], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 43, 27, 16, 4, 2, 2, 0, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.add(grad, tf.math.subtract(alpha, grad))), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.math.subtract(grad, tf.math.multiply(tf.math.square(alpha), sigma))))), tf.math.sqrt(alpha)))), tf.math.add(tf.math.negative(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3106822967529297, 2.311044454574585, 2.3096909523010254, 2.309105157852173, 2.30997896194458, 2.3115763664245605], "accuracy": [0.09259014576673508, 0.0878351628780365, 0.08955223858356476, 0.09840179979801178, 0.09325055778026581, 0.09179764986038208], "val_loss": [2.3087363243103027, 2.3087363243103027, 2.3087363243103027, 2.3087363243103027, 2.3087363243103027, 2.3087363243103027], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 2, 4, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 2, 2, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 5, 2, 1], [4, 6, 1, 7, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.math.add(grad, tf.math.square(alpha))), tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105199337005615, 2.308358907699585, 2.310025691986084, 2.309034824371338, 2.3096790313720703, 2.30971097946167], "accuracy": [0.09087307006120682, 0.09589222073554993, 0.09272222965955734, 0.09325055778026581, 0.0940430611371994, 0.09113723784685135], "val_loss": [2.3082375526428223, 2.3082375526428223, 2.3082375526428223, 2.3082375526428223, 2.3082375526428223, 2.3082375526428223], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 2, 4, 2, 9, 5], [2, 2, 1, 0, 2], [70, 39, 39], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 3, 5, 2, 1, 5, 7, 8, 5], [0, 6, 1, 6, 0, 2, 3], [0, 22], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 9, 6, 3, 1, 1, 0, 1, 0, 18, 11, 7, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(grad, alpha)), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30993914604187, 2.3105435371398926, 2.3111581802368164, 2.3104116916656494, 2.3107247352600098, 2.310896396636963], "accuracy": [0.09100515395402908, 0.09087307006120682, 0.08585391938686371, 0.0940430611371994, 0.09206181764602661, 0.09377889335155487], "val_loss": [2.3081471920013428, 2.3081471920013428, 2.3081471920013428, 2.3081471920013428, 2.3081471920013428, 2.3081471920013428], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]