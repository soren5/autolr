[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 6, 1, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.8734285831451416, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5328739881515503, 0.871519923210144, 0.7203779220581055, 0.648631751537323, 0.6028599143028259, 0.5583340525627136, 0.5320100784301758, 0.5152584910392761, 0.5094729065895081, 0.47335413098335266, 0.4640810191631317, 0.45412370562553406, 0.43765226006507874, 0.43018099665641785, 0.4222162067890167, 0.4124569892883301, 0.4051569700241089, 0.3977198898792267, 0.3951950967311859, 0.38183531165122986, 0.377605676651001, 0.36990970373153687, 0.36299043893814087, 0.3604729473590851, 0.3598603904247284, 0.3493820130825043, 0.34761613607406616, 0.33935797214508057, 0.3376021087169647, 0.3325844407081604, 0.3307414650917053, 0.3312874436378479, 0.31633901596069336, 0.3113720715045929, 0.30990374088287354, 0.3059833347797394, 0.30339258909225464, 0.3091489374637604, 0.29914191365242004, 0.2941038906574249, 0.2955728769302368, 0.2899380028247833, 0.28597334027290344], "accuracy": [0.4674415588378906, 0.6993792057037354, 0.743891179561615, 0.7667415142059326, 0.7839123010635376, 0.7993659973144531, 0.8061022162437439, 0.8149517774581909, 0.8165367841720581, 0.8364813327789307, 0.8370096683502197, 0.8408400416374207, 0.846387505531311, 0.8474441766738892, 0.850350022315979, 0.8555012345314026, 0.8597279191017151, 0.863029956817627, 0.8648791313171387, 0.8696341514587402, 0.8676528930664062, 0.8701624870300293, 0.8717474341392517, 0.8774270415306091, 0.8713511824607849, 0.8803328275680542, 0.8762382864952087, 0.8779553771018982, 0.8815215826034546, 0.8811253309249878, 0.882710337638855, 0.8820499181747437, 0.8899748921394348, 0.8886540532112122, 0.8922203183174133, 0.8952582478523254, 0.8938053250312805, 0.8927486538887024, 0.8934090733528137, 0.8988244533538818, 0.89552241563797, 0.8988244533538818, 0.9006736278533936], "val_loss": [0.8829405307769775, 0.6651959419250488, 0.5732173919677734, 0.5515308976173401, 0.5123987793922424, 0.4871732294559479, 0.4656239449977875, 0.4603786766529083, 0.4500759243965149, 0.43906208872795105, 0.42636311054229736, 0.41975414752960205, 0.4129437208175659, 0.4159772992134094, 0.40727970004081726, 0.40073612332344055, 0.3960458040237427, 0.3999771177768707, 0.39795634150505066, 0.40277358889579773, 0.3945871591567993, 0.3857056796550751, 0.37741994857788086, 0.3793829381465912, 0.3764607310295105, 0.3780857026576996, 0.3756099343299866, 0.37437695264816284, 0.37602078914642334, 0.37572339177131653, 0.3742087483406067, 0.3660438656806946, 0.3681411147117615, 0.366424560546875, 0.3653722405433655, 0.3665318489074707, 0.3663632869720459, 0.3697853684425354, 0.36513835191726685, 0.3700054883956909, 0.3614982068538666, 0.36247578263282776, 0.35917943716049194], "val_accuracy": [0.6526666879653931, 0.7540000081062317, 0.7893333435058594, 0.8036666512489319, 0.8243333101272583, 0.8320000171661377, 0.8416666388511658, 0.8410000205039978, 0.8473333120346069, 0.8519999980926514, 0.8553333282470703, 0.8616666793823242, 0.859000027179718, 0.8579999804496765, 0.8636666536331177, 0.8676666617393494, 0.8646666407585144, 0.8656666874885559, 0.8643333315849304, 0.856333315372467, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8706666827201843, 0.8709999918937683, 0.8679999709129333, 0.8736666440963745, 0.8736666440963745, 0.8690000176429749, 0.8700000047683716, 0.875, 0.875, 0.8740000128746033, 0.8756666779518127, 0.8743333220481873, 0.875, 0.8730000257492065, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8769999742507935, 0.8723333477973938, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 2, 5], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.8285714387893677, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211134433746338, 1.6136701107025146, 1.1285439729690552, 0.9902505874633789, 0.8739065527915955, 0.8196511268615723, 0.8162661790847778, 0.7680193781852722, 0.7081196308135986, 0.7346168160438538, 0.6815815567970276, 0.666104793548584, 0.6643528342247009, 0.6501976847648621, 0.6072872281074524, 0.6136260032653809, 0.5993486046791077, 0.5978115797042847, 0.5696892738342285, 0.5704226493835449, 0.5589640140533447, 0.5379342436790466, 0.5354887247085571, 0.5397936701774597, 0.5252202749252319, 0.5325312614440918, 0.5000215768814087, 0.5074416399002075, 0.5164353251457214, 0.5081605315208435, 0.4916655123233795, 0.48810815811157227, 0.477407306432724, 0.4712374806404114, 0.4698132276535034, 0.45781558752059937, 0.4663430452346802, 0.44893717765808105, 0.44592371582984924, 0.4502846598625183, 0.4537007808685303, 0.4308633804321289, 0.43728742003440857, 0.4309096038341522, 0.41855454444885254, 0.4217461943626404, 0.4147675335407257, 0.41254955530166626, 0.40023043751716614, 0.4095657467842102, 0.3960126042366028, 0.39950358867645264, 0.3981163203716278, 0.3946378529071808, 0.39302709698677063, 0.38711002469062805], "accuracy": [0.26839256286621094, 0.499009370803833, 0.6004490852355957, 0.6464139223098755, 0.6819442510604858, 0.703209638595581, 0.6942279934883118, 0.7170783281326294, 0.7427024245262146, 0.724210798740387, 0.7464007139205933, 0.7534011602401733, 0.7516840696334839, 0.7556465268135071, 0.7750627398490906, 0.7677981853485107, 0.778232753276825, 0.7733456492424011, 0.7853652238845825, 0.7884030938148499, 0.793950617313385, 0.7975168228149414, 0.800818920135498, 0.7998943328857422, 0.8034605979919434, 0.7972526550292969, 0.8136309385299683, 0.8121780753135681, 0.8095363974571228, 0.8090080618858337, 0.8216879963874817, 0.819970965385437, 0.8219521641731262, 0.8239334225654602, 0.8274996876716614, 0.8297450542449951, 0.8226125836372375, 0.8321225643157959, 0.8380662798881531, 0.837537944316864, 0.8327829837799072, 0.8416325449943542, 0.8409721255302429, 0.8441421389579773, 0.8453308939933777, 0.8459912538528442, 0.8473120927810669, 0.852331280708313, 0.8524633646011353, 0.8474441766738892, 0.8551049828529358, 0.8515387773513794, 0.8498216867446899, 0.8558974862098694, 0.8502179384231567, 0.8588033318519592], "val_loss": [1.9226055145263672, 1.098309874534607, 0.8578932285308838, 0.7779187560081482, 0.7477216720581055, 0.7389023303985596, 0.6891526579856873, 0.6231174468994141, 0.6399033069610596, 0.5916855335235596, 0.5951006412506104, 0.5700724124908447, 0.5709384083747864, 0.5427800416946411, 0.5470050573348999, 0.5358594655990601, 0.5701518654823303, 0.5090305209159851, 0.5052624344825745, 0.5007659196853638, 0.49499598145484924, 0.5258836150169373, 0.49412477016448975, 0.4819667935371399, 0.48609304428100586, 0.4658946096897125, 0.4755123257637024, 0.4688875377178192, 0.46473947167396545, 0.47529760003089905, 0.46468937397003174, 0.4471674859523773, 0.45444026589393616, 0.44380247592926025, 0.4517102837562561, 0.44198617339134216, 0.4346889555454254, 0.43236044049263, 0.4227312505245209, 0.44096142053604126, 0.43236100673675537, 0.4447310268878937, 0.44161728024482727, 0.40990957617759705, 0.4188859760761261, 0.4235019385814667, 0.42006590962409973, 0.40218010544776917, 0.40178465843200684, 0.39863428473472595, 0.395957350730896, 0.40021634101867676, 0.4050736427307129, 0.4120745360851288, 0.39444467425346375, 0.41192513704299927], "val_accuracy": [0.6169999837875366, 0.6480000019073486, 0.703000009059906, 0.718666672706604, 0.7303333282470703, 0.7129999995231628, 0.7316666841506958, 0.7770000100135803, 0.7563333511352539, 0.7753333449363708, 0.7919999957084656, 0.7850000262260437, 0.7979999780654907, 0.8009999990463257, 0.7910000085830688, 0.7986666560173035, 0.7853333353996277, 0.8109999895095825, 0.8190000057220459, 0.8169999718666077, 0.8206666707992554, 0.8043333292007446, 0.8159999847412109, 0.8223333358764648, 0.8176666498184204, 0.8296666741371155, 0.8216666579246521, 0.8303333520889282, 0.8306666612625122, 0.8246666789054871, 0.8303333520889282, 0.8353333473205566, 0.8346666693687439, 0.8376666903495789, 0.8339999914169312, 0.8413333296775818, 0.8453333377838135, 0.843666672706604, 0.8489999771118164, 0.8396666646003723, 0.8486666679382324, 0.8343333601951599, 0.8326666951179504, 0.8546666502952576, 0.8446666598320007, 0.8476666808128357, 0.8460000157356262, 0.8539999723434448, 0.8566666841506958, 0.8573333621025085, 0.8643333315849304, 0.8553333282470703, 0.8553333282470703, 0.847000002861023, 0.859000027179718, 0.8489999771118164]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 2, 3, 0, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 2, 0, 6, 6, 8, 2, 7, 9, 9], [2, 0, 3, 4, 0], [16, 1, 24], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 2, 5, 2, 8, 3], [0, 6, 5, 6, 0], [0, 22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 14, 10, 4, 3, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(grad), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [8, 2, 3, 6, 9, 5], [0, 2, 0, 0, 2], [9, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2, 7], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 9, 2, 1], [0, 6, 1, 5, 0], [0, 70], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 13, 8, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 1, 0, 3], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [7, 2, 0, 2, 5, 2, 1, 7, 0, 2, 1, 5, 3, 7, 7, 9], [0, 6, 1, 6, 0, 2, 5, 1, 2, 5, 2], [0, 22, 15], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 1, 27, 16, 11, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.add(grad, alpha), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.square(grad), alpha)))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033816814422607, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 3, 2, 3, 5], [1, 2, 0, 2, 0], [99, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 5, 2, 1], [0, 2, 1, 6, 0], [0, 22], [0, 1], [0], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 2, 0, 1, 10, 6, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3106088638305664, 2.3112168312072754, 2.3121337890625, 2.3116016387939453, 2.3125367164611816, 2.31125807762146, 2.3134491443634033], "accuracy": [0.0882314071059227, 0.08968432247638702, 0.08796724677085876, 0.0948355570435524, 0.09074098616838455, 0.0944393053650856, 0.08625016361474991], "val_loss": [2.3101580142974854, 2.3106870651245117, 2.3110976219177246, 2.3114447593688965, 2.3117516040802, 2.3120267391204834, 2.3122854232788086], "val_accuracy": [0.08966666460037231, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.08966666460037231, 0.09000000357627869, 0.08966666460037231]}}]