[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8094285726547241, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212980031967163, 1.6239672899246216, 1.1620068550109863, 0.9832608103752136, 0.9105597734451294, 0.8337110877037048, 0.7981709241867065, 0.7365760803222656, 0.7221975326538086, 0.7087643146514893, 0.6723220944404602, 0.6753093600273132, 0.6579447388648987, 0.6387690901756287, 0.6274589896202087, 0.6036814451217651, 0.620523989200592, 0.5867611765861511, 0.565285325050354, 0.567876398563385, 0.5743233561515808, 0.5734108090400696, 0.541580319404602, 0.5397305488586426], "accuracy": [0.2689208686351776, 0.4934619069099426, 0.5937128663063049, 0.6528860330581665, 0.669792652130127, 0.6948884129524231, 0.7037379741668701, 0.7265883088111877, 0.7273808121681213, 0.7358341217041016, 0.7475894689559937, 0.752740740776062, 0.7508915662765503, 0.76106196641922, 0.7655527591705322, 0.7757231593132019, 0.7717606425285339, 0.7817989587783813, 0.7889314293861389, 0.7907806038856506, 0.7839123010635376, 0.7841764688491821, 0.7998943328857422, 0.8020076751708984], "val_loss": [1.9253013134002686, 1.1324121952056885, 0.9304596185684204, 0.7863875031471252, 0.7333729863166809, 0.7271857857704163, 0.661233127117157, 0.6626097559928894, 0.6083577275276184, 0.5970564484596252, 0.5790157914161682, 0.6022068858146667, 0.6292079091072083, 0.6118593215942383, 0.5672850012779236, 0.5562280416488647, 0.5507014989852905, 0.5216774940490723, 0.5014986395835876, 0.5275396108627319, 0.5126947164535522, 0.4997437596321106, 0.5124558210372925, 0.49322310090065], "val_accuracy": [0.5543333292007446, 0.6293333172798157, 0.6600000262260437, 0.7203333377838135, 0.7246666550636292, 0.7116666436195374, 0.7483333349227905, 0.7319999933242798, 0.7776666879653931, 0.7806666493415833, 0.7879999876022339, 0.7726666927337646, 0.7526666522026062, 0.7699999809265137, 0.781333327293396, 0.7986666560173035, 0.7976666688919067, 0.8053333163261414, 0.8166666626930237, 0.8103333115577698, 0.812666654586792, 0.8076666593551636, 0.8046666383743286, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 2, 1, 0, 0], [70, 59, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 4, 4, 4, 5, 5, 4, 0], [2, 2, 0, 2, 1, 3, 1], [16, 1], [0, 1, 1, 1], [0, 7], [0, 4, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 16, 9, 7, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, grad), alpha), tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.math.pow(tf.math.square(beta), beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), tf.math.negative(alpha)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [65636503912448.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 6, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 3, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 11], [0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 4, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 7, 3, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(alpha, tf.math.negative(tf.math.square(beta))), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.pow(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29279.078125, 4515343.0, 74258488.0, 534361600.0, 2333873152.0, 7635998720.0], "accuracy": [0.09813763201236725, 0.09496764093637466, 0.10196803510189056, 0.10130762308835983, 0.09681680053472519, 0.09576013684272766], "val_loss": [304357.9375, 16317604.0, 174976336.0, 953608640.0, 3571425280.0, 10533779456.0], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 2, 4, 4, 0, 5, 6, 4, 6, 1, 2, 4, 7, 1, 4, 7, 0, 1, 2, 8, 6, 7, 0, 5, 2, 5], [2, 4, 3, 1, 5, 5, 4, 5, 1, 3, 4, 4, 5, 0, 1, 2, 3, 3, 0, 0], [84, 86, 14], [0, 1, 0, 1, 1, 1, 1, 1], [0, 7, 7, 7], [0, 6, 7, 3], [79], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 46, 26, 20, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(grad), tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(grad, alpha), tf.math.add(grad, tf.math.pow(tf.math.add(tf.math.subtract(grad, grad), tf.math.pow(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.sqrt(grad), alpha), tf.math.divide_no_nan(grad, grad))), grad), grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), alpha), beta)))), tf.math.add(grad, tf.math.negative(tf.math.square(tf.math.add(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [0, 39, 29], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 6, 4], [0], [1], [0], [1], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), tf.math.square(tf.math.square(alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3102474212646484, 2.3109452724456787, 2.3105103969573975, 2.3099191188812256, 2.309933662414551, 2.3088037967681885], "accuracy": [0.0944393053650856, 0.09470347315073013, 0.09047681838274002, 0.09285431355237961, 0.08598599582910538, 0.09179764986038208], "val_loss": [2.3087689876556396, 2.3087689876556396, 2.3087689876556396, 2.3087689876556396, 2.3087689876556396, 2.3087689876556396], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]