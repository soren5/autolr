[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8394285440444946, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209913969039917, 1.6154704093933105, 1.143551230430603, 0.9868153929710388, 0.9010785222053528, 0.8497763872146606, 0.7900063395500183, 0.7702352404594421, 0.7322017550468445, 0.7098594307899475, 0.687711238861084, 0.6812346577644348, 0.6529280543327332, 0.6295511722564697, 0.6382898688316345, 0.643871009349823, 0.5914285778999329, 0.5905519723892212, 0.5820663571357727, 0.5589925050735474, 0.5580732226371765, 0.5672921538352966, 0.5504698753356934, 0.5414450168609619, 0.534940242767334, 0.5184972286224365, 0.5093492865562439, 0.512196958065033, 0.5000529885292053, 0.49625131487846375, 0.49216771125793457, 0.47997531294822693, 0.4736412465572357, 0.4812379777431488, 0.4715869724750519, 0.46825623512268066, 0.4573899507522583, 0.4406098425388336, 0.4531756043434143, 0.45574453473091125, 0.4396067261695862, 0.436601459980011, 0.4350806176662445, 0.4303989112377167, 0.4309391975402832, 0.4242118000984192, 0.4179770350456238, 0.41199541091918945, 0.41032999753952026, 0.415568083524704, 0.4052926301956177, 0.39894458651542664, 0.4013509154319763, 0.39505940675735474, 0.3938283622264862, 0.39264562726020813, 0.39153197407722473, 0.37093836069107056, 0.3945487141609192, 0.36990275979042053], "accuracy": [0.26997753977775574, 0.4950468838214874, 0.5971469879150391, 0.6441685557365417, 0.6737551093101501, 0.6922467350959778, 0.713908314704895, 0.7152291536331177, 0.7251353859901428, 0.7298903465270996, 0.7409853339195251, 0.7428345084190369, 0.757099449634552, 0.7709681391716003, 0.759609043598175, 0.7643640041351318, 0.7807422876358032, 0.7804781198501587, 0.7849689722061157, 0.7985734939575195, 0.7959318161010742, 0.7918372750282288, 0.7935543656349182, 0.8009510040283203, 0.7993659973144531, 0.8055738806724548, 0.813498854637146, 0.8098005652427673, 0.8138951063156128, 0.8170651197433472, 0.817461371421814, 0.8260467648506165, 0.8310658931732178, 0.8186501264572144, 0.8277638554573059, 0.8277638554573059, 0.8321225643157959, 0.8401796221733093, 0.8350284099578857, 0.8319904804229736, 0.8421608805656433, 0.8388587832450867, 0.8428213000297546, 0.8391229510307312, 0.8455950617790222, 0.8449346423149109, 0.8433496356010437, 0.8491612672805786, 0.8507462739944458, 0.8498216867446899, 0.8495575189590454, 0.8555012345314026, 0.8525954484939575, 0.8549728989601135, 0.8561616539955139, 0.8551049828529358, 0.8532558679580688, 0.8614450097084045, 0.8543124794960022, 0.8698983192443848], "val_loss": [1.923913598060608, 1.0963810682296753, 0.9327827095985413, 0.8158611059188843, 0.8153303861618042, 0.6873611807823181, 0.7014868855476379, 0.6395525932312012, 0.5993660688400269, 0.6009618043899536, 0.6344912648200989, 0.6251417994499207, 0.5594885945320129, 0.5448140501976013, 0.5357306599617004, 0.5319244265556335, 0.5264427065849304, 0.5154351592063904, 0.5219213962554932, 0.481830358505249, 0.5456551313400269, 0.47824472188949585, 0.5051156282424927, 0.49139291048049927, 0.4790598452091217, 0.45574072003364563, 0.4736180901527405, 0.46565547585487366, 0.44844287633895874, 0.45476505160331726, 0.4376392960548401, 0.4449404776096344, 0.4423334002494812, 0.43573087453842163, 0.46033909916877747, 0.4216494560241699, 0.4241171181201935, 0.4316752851009369, 0.450560063123703, 0.41333794593811035, 0.40961208939552307, 0.41331055760383606, 0.40788790583610535, 0.4037533402442932, 0.4083923399448395, 0.4004272520542145, 0.40579089522361755, 0.40438249707221985, 0.42773714661598206, 0.39301496744155884, 0.40193089842796326, 0.40246257185935974, 0.3965369760990143, 0.3912651836872101, 0.3865179121494293, 0.40376293659210205, 0.3843448758125305, 0.3816632628440857, 0.3879319727420807, 0.3951135277748108], "val_accuracy": [0.5133333206176758, 0.6570000052452087, 0.6633333563804626, 0.7016666531562805, 0.7096666693687439, 0.7473333477973938, 0.7179999947547913, 0.746666669845581, 0.765666663646698, 0.7823333144187927, 0.7416666746139526, 0.7563333511352539, 0.7916666865348816, 0.7933333516120911, 0.815666675567627, 0.8056666851043701, 0.8166666626930237, 0.8023333549499512, 0.7986666560173035, 0.8216666579246521, 0.7923333048820496, 0.824999988079071, 0.8076666593551636, 0.8173333406448364, 0.8259999752044678, 0.8339999914169312, 0.8109999895095825, 0.8286666870117188, 0.8293333053588867, 0.8343333601951599, 0.8453333377838135, 0.8356666564941406, 0.8270000219345093, 0.8403333425521851, 0.8230000138282776, 0.8456666469573975, 0.8443333506584167, 0.8453333377838135, 0.8330000042915344, 0.847000002861023, 0.8476666808128357, 0.8506666421890259, 0.8500000238418579, 0.8516666889190674, 0.8556666374206543, 0.8569999933242798, 0.8493333458900452, 0.8510000109672546, 0.8363333344459534, 0.8573333621025085, 0.8523333072662354, 0.8486666679382324, 0.8546666502952576, 0.8553333282470703, 0.8646666407585144, 0.8513333201408386, 0.862666666507721, 0.8610000014305115, 0.8606666922569275, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [8, 2, 3, 1, 9, 5], [3, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 9, 2, 9, 8, 2], [1, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [93], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 4, 3, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [844810.0625, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14832915365695953, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.456883096293212e+17, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 2, 0, 6, 3, 9, 7, 4, 8, 9], [2, 0, 3, 1, 0], [16, 1, 35], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 6, 1, 8, 3, 2, 0, 0, 4, 4, 7, 1, 2, 7, 5, 5, 2, 2, 4, 1, 2, 0, 1, 4, 7, 5, 6, 6, 6, 4, 4, 3, 4, 6, 7, 5, 9, 7, 6, 5, 8, 5, 7, 4, 7, 0, 9, 5, 4, 7, 9, 0, 4, 3, 6, 0, 8, 5], [0, 6, 1, 7, 5, 7, 0, 4, 7, 6, 6, 2, 6, 4, 1, 4, 5, 7, 6, 1, 4, 6, 5, 5, 4, 3, 6, 2, 6, 6, 6, 7, 2, 3, 4], [0, 11, 71, 62, 86], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 14, 10, 4, 3, 93, 58, 35, 5, 1, 0, 1, 0], "tree_depth": 65, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.pow(grad, alpha))), tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.negative(grad), alpha), tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(grad, tf.math.subtract(grad, tf.math.add(tf.math.add(grad, tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.math.add(grad, tf.math.negative(grad)), grad)), tf.math.subtract(beta, tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.pow(tf.math.multiply(grad, grad), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.square(tf.math.add(grad, grad)))), tf.math.pow(tf.math.add(grad, grad), tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.square(sigma)))))), tf.math.pow(grad, tf.math.add(beta, grad))))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.pow(grad, grad))), grad))))), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.sqrt(sigma)), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 0, 1], [0, 7], [7, 6], [4], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [207174.25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.186104878783226, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3554577664.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 62], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 0, 0], [77, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 2, 7, 4, 7, 3, 5, 4, 0], [1, 6, 2, 3, 2, 6, 2, 3], [71], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 4, 2, 2, 2, 18, 10, 8, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(grad, beta), tf.math.add(tf.math.multiply(sigma, tf.math.square(beta)), tf.math.pow(tf.math.negative(grad), beta)))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302997350692749, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]