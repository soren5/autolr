[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7962856888771057, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2135169506073, 1.6275041103363037, 1.1513211727142334, 0.9969027638435364, 0.9009396433830261, 0.8270777463912964, 0.8135117888450623, 0.7619214653968811, 0.744900107383728, 0.7185297608375549, 0.726376473903656, 0.6616573929786682, 0.6573935747146606, 0.6438461542129517, 0.6317014694213867, 0.6023690700531006, 0.6172921061515808, 0.5822412967681885], "accuracy": [0.2642979919910431, 0.4983489513397217, 0.602562427520752, 0.6436402201652527, 0.678642213344574, 0.6971337795257568, 0.6960771083831787, 0.7176066637039185, 0.7206445932388306, 0.7309470176696777, 0.728701651096344, 0.748249888420105, 0.7486461400985718, 0.7552502751350403, 0.7622507214546204, 0.7770439982414246, 0.7644960880279541, 0.7848368883132935], "val_loss": [1.9321539402008057, 1.1431444883346558, 0.8506520986557007, 0.8113318681716919, 0.718232274055481, 0.6833038926124573, 0.6600814461708069, 0.6345902681350708, 0.6317081451416016, 0.5923176407814026, 0.5679583549499512, 0.5891546607017517, 0.530923068523407, 0.5428202152252197, 0.5255190134048462, 0.564435601234436, 0.5124222636222839, 0.5158144235610962], "val_accuracy": [0.5963333249092102, 0.6136666536331177, 0.6963333487510681, 0.6863333582878113, 0.7160000205039978, 0.7409999966621399, 0.7416666746139526, 0.746666669845581, 0.7356666922569275, 0.7763333320617676, 0.79666668176651, 0.7746666669845581, 0.8050000071525574, 0.7929999828338623, 0.7879999876022339, 0.784333348274231, 0.7943333387374878, 0.7853333353996277]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [9, 2, 0, 6, 3, 8, 2], [2, 2, 0, 3, 0, 3, 1], [78, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 4, 0], [0, 1, 1, 4, 6], [0], [1], [0], [5], [0]], "fitness": -0.23000000417232513, "mapping_values": [1, 10, 5, 5, 3, 1, 1, 0, 1, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(alpha, tf.math.negative(grad)))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2383651733398438, 2.9797825813293457, 2.2306694984436035, 2.3057212829589844, 2.303373336791992, 2.3033323287963867, 2.303201675415039], "accuracy": [0.2401268035173416, 0.11372341960668564, 0.1842557191848755, 0.09800554811954498, 0.10236428678035736, 0.09087307006120682, 0.09496764093637466], "val_loss": [6.8527703285217285, 2.2923288345336914, 2.307710886001587, 2.303070306777954, 2.3025686740875244, 2.30255126953125, 2.3025407791137695], "val_accuracy": [0.19599999487400055, 0.23199999332427979, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 0], [26, 36, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 8, 6, 2], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2, 6, 8, 4], [0, 1, 1, 4, 5, 5], [0], [1], [0], [1], [0]], "fitness": -0.1922857165336609, "mapping_values": [1, 8, 4, 4, 2, 11, 6, 5, 2, 13, 7, 6, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(alpha))), tf.math.pow(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [12.894401550292969, 11.2796049118042, 2.753919839859009, 2.413270950317383, 2.3551955223083496, 2.3471226692199707, 2.330169677734375], "accuracy": [0.21318188309669495, 0.10302469879388809, 0.10632677376270294, 0.09919429570436478, 0.10038304328918457, 0.09628847241401672, 0.09919429570436478], "val_loss": [56.392478942871094, 3.1148548126220703, 2.339934825897217, 2.3312904834747314, 2.3960156440734863, 2.335871934890747, 2.311415672302246], "val_accuracy": [0.1536666601896286, 0.19699999690055847, 0.09933333098888397, 0.09966666996479034, 0.10100000351667404, 0.09966666996479034, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 7, 5, 8, 3, 1, 6], [0, 0, 1, 0, 2, 0, 3, 1, 2], [26, 39, 7, 94], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 2, 3, 1], [26, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 12, 9, 4, 12, 7, 5, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad), alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12838461995124817, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 0, 4, 8, 9], [0, 0, 1, 1, 2], [0, 39, 39], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 5, 5, 5, 4], [2, 0, 3, 1, 1, 4], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [2, 5, 1, 8], [0, 6, 6], [0], [1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 12, 8, 4, 3, 1, 0, 1, 0, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3103270530700684, 2.310469150543213, 2.3098015785217285, 2.3098671436309814, 2.3096745014190674, 2.3089306354522705], "accuracy": [0.09060890227556229, 0.09496764093637466, 0.09430722147226334, 0.0886276587843895, 0.09153348207473755, 0.09391097724437714], "val_loss": [2.3091750144958496, 2.3091750144958496, 2.3091750144958496, 2.3091750144958496, 2.3091750144958496, 2.3091750144958496], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]