[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206367015838623, 1.603888988494873, 1.1213746070861816, 0.9832838177680969, 0.9056906700134277, 0.8220078349113464, 0.8040475249290466, 0.7677115201950073, 0.7184369564056396, 0.7161825895309448, 0.6838198900222778, 0.6751050353050232, 0.639636218547821, 0.6311091184616089, 0.6215294003486633, 0.613347053527832, 0.6039525270462036, 0.5938640832901001, 0.5761823654174805, 0.5813195705413818, 0.5542267560958862, 0.5494170188903809, 0.556650698184967, 0.5294809937477112, 0.5288910269737244, 0.5270100831985474, 0.5273764133453369, 0.5051170587539673, 0.5091620683670044, 0.5074984431266785, 0.5097767114639282, 0.48811793327331543, 0.48461413383483887, 0.4699628949165344, 0.4649536907672882], "accuracy": [0.26535463333129883, 0.5041606426239014, 0.6184123754501343, 0.6528860330581665, 0.672170102596283, 0.6975300312042236, 0.7082287669181824, 0.7177387475967407, 0.7331924438476562, 0.7359662055969238, 0.7466648817062378, 0.7485140562057495, 0.763967752456665, 0.7650244235992432, 0.7725531458854675, 0.7744023203849792, 0.7732135653495789, 0.7779685854911804, 0.7882710099220276, 0.7817989587783813, 0.7882710099220276, 0.7971205711364746, 0.793950617313385, 0.8103289008140564, 0.8055738806724548, 0.8031964302062988, 0.8064984679222107, 0.8092722296714783, 0.8117818236351013, 0.816008448600769, 0.8138951063156128, 0.8186501264572144, 0.8255184292793274, 0.8272355198860168, 0.824329674243927], "val_loss": [1.917259931564331, 1.1260159015655518, 1.008768081665039, 0.8754034042358398, 0.727800190448761, 0.7665777802467346, 0.7326939105987549, 0.661851704120636, 0.6439027786254883, 0.6037286520004272, 0.6543716192245483, 0.6145405173301697, 0.5760172009468079, 0.5950281023979187, 0.5599229335784912, 0.6046546101570129, 0.5571741461753845, 0.5334575772285461, 0.5485683679580688, 0.544458270072937, 0.5569475889205933, 0.5393152832984924, 0.5083127617835999, 0.5157517790794373, 0.544694185256958, 0.5177128314971924, 0.5179698467254639, 0.491156667470932, 0.49990808963775635, 0.48477137088775635, 0.4850913882255554, 0.4712924063205719, 0.4956836700439453, 0.47468802332878113, 0.475433349609375], "val_accuracy": [0.5870000123977661, 0.6576666831970215, 0.6353333592414856, 0.6833333373069763, 0.7310000061988831, 0.7083333134651184, 0.7089999914169312, 0.7590000033378601, 0.7549999952316284, 0.7726666927337646, 0.7386666536331177, 0.762333333492279, 0.7893333435058594, 0.7743333578109741, 0.7956666946411133, 0.7599999904632568, 0.784333348274231, 0.8003333210945129, 0.8006666898727417, 0.79666668176651, 0.7896666526794434, 0.79666668176651, 0.8119999766349792, 0.8130000233650208, 0.7919999957084656, 0.8003333210945129, 0.8116666674613953, 0.8209999799728394, 0.8143333196640015, 0.8270000219345093, 0.8183333277702332, 0.8266666531562805, 0.8100000023841858, 0.824999988079071, 0.8253333568572998]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [7, 2, 3, 1, 3, 5, 6, 3, 9], [0, 0, 1, 0, 2, 1, 0], [0, 39, 39, 0, 74], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 1, 5, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 5, 11, 6, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 7, 9, 2, 2, 6, 6, 4, 7, 5, 6, 3], [2, 2, 0, 4, 0, 3, 1, 2, 2, 5, 3, 0, 2, 5], [16, 1, 33, 59], [0, 0, 1, 1, 1, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 33, 19, 14, 4, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.math.divide_no_nan(beta, tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), beta))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [33875428.0, 2828675584.0, 27775549440.0, 115567329280.0, 315818344448.0, 690283085824.0], "accuracy": [0.09879804402589798, 0.10342095047235489, 0.09787346422672272, 0.09932637959718704, 0.10527011007070541, 0.0956280529499054], "val_loss": [298741632.0, 8260741120.0, 49564299264.0, 162369486848.0, 388152852480.0, 768210042880.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 2, 7], [2, 2, 0, 4, 0, 3, 1], [16, 52], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 15, 8, 7, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.add(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [10863517892608.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2075023055076599, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [0], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3104047775268555, 2.3093831539154053, 2.3090381622314453, 2.309286594390869, 2.310666084289551, 2.3097076416015625], "accuracy": [0.09470347315073013, 0.09232597798109055, 0.09893012791872025, 0.08942015469074249, 0.08241976052522659, 0.09576013684272766], "val_loss": [2.3082571029663086, 2.3082571029663086, 2.3082571029663086, 2.3082571029663086, 2.3082571029663086, 2.3082571029663086], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]