[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2071945667266846, 1.5826530456542969, 1.1420754194259644, 0.9602375626564026, 0.9024509191513062, 0.7964468002319336, 0.7708581686019897, 0.7309776544570923, 0.7190178632736206, 0.7079097628593445, 0.6645691990852356, 0.6718683838844299, 0.6264382600784302, 0.6278120875358582, 0.6372507214546204, 0.5972231030464172, 0.6008566617965698, 0.5669425129890442, 0.5704490542411804, 0.5715922117233276, 0.5426824688911438, 0.5361405611038208, 0.5307276248931885, 0.5281819701194763, 0.5176852941513062, 0.515248715877533, 0.50690758228302, 0.4947645664215088, 0.4920397400856018, 0.481381893157959, 0.4822407364845276, 0.4789578318595886, 0.47417116165161133, 0.4669131934642792, 0.4531499147415161, 0.454037606716156], "accuracy": [0.2779025137424469, 0.5168405771255493, 0.5976753234863281, 0.6583014130592346, 0.6773213744163513, 0.7091533541679382, 0.7211728692054749, 0.7305507659912109, 0.7296261787414551, 0.7357020378112793, 0.7524765729904175, 0.7490423917770386, 0.7709681391716003, 0.7720248103141785, 0.7646281719207764, 0.7732135653495789, 0.7766477465629578, 0.789459764957428, 0.789988100528717, 0.7882710099220276, 0.7994980812072754, 0.8005547523498535, 0.806630551815033, 0.8043851256370544, 0.8083476424217224, 0.8140271902084351, 0.8150838613510132, 0.8202351331710815, 0.8187822103500366, 0.8264430165290833, 0.8216879963874817, 0.8231409192085266, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.8333113193511963], "val_loss": [1.9148222208023071, 1.0891375541687012, 0.9056211113929749, 0.8016678094863892, 0.760240912437439, 0.7038585543632507, 0.6770634055137634, 0.6463528871536255, 0.6302468180656433, 0.6203481554985046, 0.6302914023399353, 0.590358316898346, 0.618607759475708, 0.5765666365623474, 0.5648512244224548, 0.5980960130691528, 0.570862352848053, 0.5760148167610168, 0.5375343561172485, 0.559295654296875, 0.5193827152252197, 0.5377711653709412, 0.5133692026138306, 0.5084794163703918, 0.5028876662254333, 0.5047078728675842, 0.5013857483863831, 0.4947488605976105, 0.4889155328273773, 0.4944532513618469, 0.47344210743904114, 0.4975704252719879, 0.47418901324272156, 0.4700135588645935, 0.47032633423805237, 0.4672855734825134], "val_accuracy": [0.550000011920929, 0.6420000195503235, 0.6753333210945129, 0.6966666579246521, 0.7206666469573975, 0.7390000224113464, 0.7423333525657654, 0.7590000033378601, 0.7583333253860474, 0.7606666684150696, 0.7576666474342346, 0.7786666750907898, 0.768666684627533, 0.7796666622161865, 0.7956666946411133, 0.7693333625793457, 0.7820000052452087, 0.7749999761581421, 0.8009999990463257, 0.7850000262260437, 0.8076666593551636, 0.7979999780654907, 0.812333345413208, 0.8190000057220459, 0.8153333067893982, 0.8230000138282776, 0.812666654586792, 0.8236666917800903, 0.8263333439826965, 0.8223333358764648, 0.8383333086967468, 0.8216666579246521, 0.8303333520889282, 0.8303333520889282, 0.8253333568572998, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091572284698486, 1.5993032455444336, 1.1434707641601562, 0.9727177619934082, 0.9262099862098694, 0.8217897415161133, 0.7795447111129761, 0.7528396248817444, 0.7084818482398987, 0.7091322541236877, 0.6945878863334656, 0.6584498286247253, 0.6519221663475037, 0.6362666487693787, 0.6252393126487732, 0.6097650527954102, 0.6189514398574829, 0.5871080160140991, 0.5561480522155762, 0.5770078301429749, 0.5576359629631042, 0.5464397072792053, 0.5427163243293762, 0.5312040448188782, 0.5486077070236206, 0.53109210729599, 0.5106944441795349, 0.4996970593929291, 0.5026907324790955, 0.49837490916252136, 0.48581662774086, 0.4750824272632599, 0.4804212152957916, 0.4833340346813202, 0.4675181210041046, 0.46964386105537415, 0.46111080050468445, 0.45342934131622314, 0.456604927778244, 0.4459911286830902, 0.4429308772087097, 0.4517958462238312, 0.4356214106082916, 0.4256093502044678, 0.4234409034252167, 0.42164814472198486, 0.4090699255466461, 0.4112910032272339, 0.4157414734363556, 0.4175478219985962, 0.4021286368370056], "accuracy": [0.26495838165283203, 0.5086514353752136, 0.5974111557006836, 0.6585655808448792, 0.6637167930603027, 0.6997754573822021, 0.7189275026321411, 0.7235503792762756, 0.7427024245262146, 0.7342491149902344, 0.7382115721702576, 0.7548540234565735, 0.7536653280258179, 0.7629110813140869, 0.7677981853485107, 0.7749306559562683, 0.7676661014556885, 0.7840443849563599, 0.7950072884559631, 0.7841764688491821, 0.7955356240272522, 0.7993659973144531, 0.7971205711364746, 0.8034605979919434, 0.8014793395996094, 0.805177628993988, 0.8119139075279236, 0.8187822103500366, 0.8119139075279236, 0.817461371421814, 0.8236692547798157, 0.8244617581367493, 0.8239334225654602, 0.8232730031013489, 0.8278959393501282, 0.830669641494751, 0.8317263126373291, 0.8359529972076416, 0.8298771381378174, 0.8374059200286865, 0.8393871188163757, 0.8385946154594421, 0.8359529972076416, 0.8459912538528442, 0.8428213000297546, 0.8477083444595337, 0.8552370667457581, 0.8514066934585571, 0.8515387773513794, 0.8492933511734009, 0.8510104417800903], "val_loss": [1.9137331247329712, 1.0994298458099365, 0.9214218854904175, 0.7856505513191223, 0.7355897426605225, 0.7136262059211731, 0.7035105228424072, 0.6310493350028992, 0.6996434926986694, 0.6323075890541077, 0.6391085386276245, 0.5837209224700928, 0.5726293325424194, 0.5829463005065918, 0.574734091758728, 0.5440433025360107, 0.5495654940605164, 0.5236092805862427, 0.5233072638511658, 0.5358973145484924, 0.5107793211936951, 0.5001224875450134, 0.5302079916000366, 0.5805487632751465, 0.49709805846214294, 0.49589329957962036, 0.48148587346076965, 0.47551390528678894, 0.4753207564353943, 0.48648637533187866, 0.46222347021102905, 0.4615425765514374, 0.45200052857398987, 0.45349636673927307, 0.4471636414527893, 0.46516573429107666, 0.455863893032074, 0.43616366386413574, 0.44066011905670166, 0.4294126331806183, 0.43646296858787537, 0.45074331760406494, 0.4255100190639496, 0.4210783839225769, 0.43346157670021057, 0.4176616072654724, 0.4158756136894226, 0.4274243116378784, 0.4501132667064667, 0.40756046772003174, 0.4132595360279083], "val_accuracy": [0.6033333539962769, 0.6596666574478149, 0.6499999761581421, 0.7203333377838135, 0.7250000238418579, 0.7409999966621399, 0.7179999947547913, 0.7666666507720947, 0.7276666760444641, 0.7506666779518127, 0.7566666603088379, 0.7853333353996277, 0.7919999957084656, 0.7713333368301392, 0.7866666913032532, 0.8096666932106018, 0.8003333210945129, 0.812333345413208, 0.8023333549499512, 0.8080000281333923, 0.8173333406448364, 0.8203333616256714, 0.8016666769981384, 0.7689999938011169, 0.8196666836738586, 0.8256666660308838, 0.828000009059906, 0.82833331823349, 0.8320000171661377, 0.8180000185966492, 0.8343333601951599, 0.8299999833106995, 0.8370000123977661, 0.8330000042915344, 0.8386666774749756, 0.8296666741371155, 0.8276666402816772, 0.8426666855812073, 0.8383333086967468, 0.8476666808128357, 0.8413333296775818, 0.8399999737739563, 0.8463333249092102, 0.8519999980926514, 0.8416666388511658, 0.8543333411216736, 0.8493333458900452, 0.8506666421890259, 0.8343333601951599, 0.8536666631698608, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 0], [0, 39, 39, 97], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 7], [2, 0, 3, 1, 0, 1], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 14, 8, 6, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 3, 1, 2, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 3, 1, 1], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 2, 12, 7, 5, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 1, 0, 5], [0, 3, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 6, 6, 1, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308807849884033, 2.3094851970672607, 2.3104605674743652, 2.310166120529175, 2.309882640838623, 2.3104751110076904], "accuracy": [0.09272222965955734, 0.09140139818191528, 0.09008057415485382, 0.09192973375320435, 0.09206181764602661, 0.09140139818191528], "val_loss": [2.3086113929748535, 2.3086113929748535, 2.3086113929748535, 2.3086113929748535, 2.3086113929748535, 2.3086113929748535], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 7, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 33], [1, 1, 1, 1], [0, 7], [0, 6], [0], [0, 0, 1, 1], [0, 7], [2, 2], [0]], "fitness": -0.09000000357627869, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, beta))", "other_info": {"loss": [2.309908151626587, 2.3100745677948, 2.309972047805786, 2.309619903564453, 2.3089678287506104, 2.309096336364746], "accuracy": [0.08625016361474991, 0.08968432247638702, 0.09470347315073013, 0.09377889335155487, 0.09126931428909302, 0.09060890227556229], "val_loss": [2.3081252574920654, 2.3081252574920654, 2.3081252574920654, 2.3081252574920654, 2.3081252574920654, 2.3081252574920654], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 1, 0, 1, 1, 4, 2, 2, 0], "tree_depth": 12}]