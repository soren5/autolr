[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2106118202209473, 1.600706696510315, 1.154280662536621, 0.9710286855697632, 0.8904366493225098, 0.8238067626953125, 0.7983115315437317, 0.7782485485076904, 0.7302829027175903, 0.6973678469657898, 0.6986380219459534, 0.6828998923301697, 0.6421414017677307, 0.6390998363494873, 0.6473705768585205, 0.6111170649528503, 0.5959709882736206, 0.6138877868652344, 0.5747170448303223, 0.5864880681037903, 0.5636894106864929, 0.5689230561256409, 0.5457373261451721, 0.5264571905136108, 0.5432314872741699, 0.5315754413604736, 0.5189425349235535, 0.5115971565246582, 0.5033667087554932, 0.5104753375053406, 0.496945321559906, 0.48128989338874817, 0.4742739796638489, 0.47807323932647705, 0.4695000946521759, 0.4644937217235565, 0.4502338171005249, 0.46276891231536865, 0.45650598406791687, 0.4389415383338928, 0.44286733865737915, 0.4371063709259033, 0.4305870831012726, 0.4232635796070099, 0.4252889156341553, 0.4198792576789856, 0.41390514373779297, 0.4217434227466583, 0.4108355939388275, 0.4130353033542633], "accuracy": [0.2591467499732971, 0.5017831325531006, 0.6032228469848633, 0.6452252268791199, 0.6679434776306152, 0.6960771083831787, 0.7049266695976257, 0.7124554514884949, 0.7240787148475647, 0.7363624572753906, 0.7388719916343689, 0.7432307600975037, 0.759609043598175, 0.761590301990509, 0.7580240368843079, 0.7720248103141785, 0.7774402499198914, 0.7651565074920654, 0.7828556299209595, 0.7779685854911804, 0.7897239327430725, 0.7873464822769165, 0.7964601516723633, 0.8037247657775879, 0.8035926818847656, 0.800818920135498, 0.8083476424217224, 0.805177628993988, 0.8107251524925232, 0.8131026029586792, 0.8145555257797241, 0.8251221776008606, 0.8267071843147278, 0.8168009519577026, 0.8264430165290833, 0.8278959393501282, 0.8315942287445068, 0.8285563588142395, 0.82683926820755, 0.8356888294219971, 0.8364813327789307, 0.8385946154594421, 0.8422929644584656, 0.8432175517082214, 0.8471800088882446, 0.8442742228507996, 0.848368763923645, 0.8425571322441101, 0.8495575189590454, 0.845859169960022], "val_loss": [1.9233053922653198, 1.0869662761688232, 0.9566318988800049, 0.845249593257904, 0.7654895782470703, 0.7783904671669006, 0.6578094959259033, 0.679975152015686, 0.6263216733932495, 0.6115425825119019, 0.7295519113540649, 0.5866609811782837, 0.5843867659568787, 0.7128340005874634, 0.5545531511306763, 0.5529752373695374, 0.5497300624847412, 0.5451746582984924, 0.5201734304428101, 0.5485641956329346, 0.507524311542511, 0.5111265182495117, 0.48830172419548035, 0.5178565979003906, 0.490949422121048, 0.5099172592163086, 0.47946619987487793, 0.4928749203681946, 0.4778803288936615, 0.49859529733657837, 0.464265376329422, 0.46079590916633606, 0.4496961534023285, 0.4642392694950104, 0.44898149371147156, 0.4382452070713043, 0.43718424439430237, 0.44353386759757996, 0.4267326593399048, 0.43649381399154663, 0.42885538935661316, 0.44136616587638855, 0.4303421080112457, 0.4118253290653229, 0.4157506227493286, 0.42610979080200195, 0.4265114367008209, 0.40685248374938965, 0.4393671751022339, 0.41194185614585876], "val_accuracy": [0.5360000133514404, 0.6723333597183228, 0.6566666960716248, 0.6646666526794434, 0.6993333101272583, 0.6949999928474426, 0.7463333606719971, 0.7433333396911621, 0.7763333320617676, 0.777999997138977, 0.7406666874885559, 0.7730000019073486, 0.7749999761581421, 0.7350000143051147, 0.7979999780654907, 0.7963333129882812, 0.7996666431427002, 0.781333327293396, 0.8059999942779541, 0.7829999923706055, 0.8140000104904175, 0.8086666464805603, 0.8273333311080933, 0.8086666464805603, 0.8243333101272583, 0.8076666593551636, 0.8293333053588867, 0.8159999847412109, 0.8256666660308838, 0.8116666674613953, 0.8346666693687439, 0.8379999995231628, 0.8363333344459534, 0.8360000252723694, 0.8389999866485596, 0.8389999866485596, 0.8433333039283752, 0.8376666903495789, 0.8483333587646484, 0.8416666388511658, 0.8506666421890259, 0.8416666388511658, 0.8486666679382324, 0.8533333539962769, 0.8539999723434448, 0.840666651725769, 0.8416666388511658, 0.8500000238418579, 0.8383333086967468, 0.8526666760444641]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [7, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 0], [0, 39, 39, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 2, 4, 6, 3, 5, 5, 4], [2, 0, 3, 1, 0, 2], [16, 6], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [94], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 4, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.square(alpha)))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 2, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 3, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 7, 6, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), grad), tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3039963245391846, 2.304062843322754, 2.3046298027038574, 2.3052642345428467, 2.304426431655884, 2.3056998252868652, 2.3031868934631348, 2.3041915893554688, 2.30381178855896, 2.3046414852142334, 2.3039238452911377], "accuracy": [0.09708096832036972, 0.09430722147226334, 0.09747721254825592, 0.09853387624025345, 0.1006472036242485, 0.09628847241401672, 0.09628847241401672, 0.09470347315073013, 0.09879804402589798, 0.09826971590518951, 0.09906221181154251], "val_loss": [2.3026177883148193, 2.3026833534240723, 2.3030669689178467, 2.30374813079834, 2.303783416748047, 2.303053140640259, 2.3030786514282227, 2.3028757572174072, 2.3027617931365967, 2.3028366565704346, 2.3034095764160156], "val_accuracy": [0.1003333330154419, 0.0976666659116745, 0.09733333438634872, 0.1003333330154419, 0.0976666659116745, 0.10233332961797714, 0.0976666659116745, 0.0976666659116745, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 3, 1, 3, 5], [0, 0, 2, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [41], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 11, 5, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 3, 4, 0, 2, 1], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3102219104766846, 2.30951189994812, 2.3102824687957764, 2.310009002685547, 2.309645414352417, 2.30949068069458], "accuracy": [0.08968432247638702, 0.09192973375320435, 0.0878351628780365, 0.08942015469074249, 0.09496764093637466, 0.09179764986038208], "val_loss": [2.3083341121673584, 2.3083341121673584, 2.3083341121673584, 2.3083341121673584, 2.3083341121673584, 2.3083341121673584], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]