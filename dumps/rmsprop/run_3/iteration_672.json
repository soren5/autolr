[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8205714225769043, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2128143310546875, 1.621392846107483, 1.165228247642517, 0.9996450543403625, 0.8766475319862366, 0.8752177357673645, 0.7997950315475464, 0.7746089100837708, 0.7546482086181641, 0.7010146379470825, 0.6848000288009644, 0.6783967614173889, 0.6629540324211121, 0.6562780141830444, 0.646720290184021, 0.6360653042793274, 0.6278266906738281, 0.60609370470047, 0.5789372324943542, 0.5755522847175598, 0.5742086172103882, 0.5653191208839417, 0.5603479743003845, 0.5350698232650757, 0.543314516544342], "accuracy": [0.2635054886341095, 0.4959714710712433, 0.5871087312698364, 0.6421872973442078, 0.6832650899887085, 0.6828688383102417, 0.7053229212760925, 0.713908314704895, 0.7187954187393188, 0.7372870445251465, 0.7434949278831482, 0.7448157668113708, 0.7532690763473511, 0.7518161535263062, 0.7563069462776184, 0.7594769597053528, 0.765949010848999, 0.774798572063446, 0.7832518815994263, 0.7853652238845825, 0.7857614755630493, 0.7840443849563599, 0.7866860628128052, 0.8047813773155212, 0.7984414100646973], "val_loss": [1.9236727952957153, 1.0746967792510986, 0.9103657007217407, 0.7720242738723755, 0.778854250907898, 0.7008168697357178, 0.6266841888427734, 0.6462262272834778, 0.5916191935539246, 0.5804361701011658, 0.5643667578697205, 0.5998911261558533, 0.6161069869995117, 0.5607859492301941, 0.5348183512687683, 0.5212464332580566, 0.5355613231658936, 0.5382077097892761, 0.4929148256778717, 0.4906945824623108, 0.4942174553871155, 0.4934524595737457, 0.49529874324798584, 0.481371134519577, 0.5023437738418579], "val_accuracy": [0.5256666541099548, 0.6656666398048401, 0.7080000042915344, 0.7423333525657654, 0.6776666641235352, 0.7303333282470703, 0.768666684627533, 0.753000020980835, 0.7710000276565552, 0.7793333530426025, 0.7913333177566528, 0.765666663646698, 0.75, 0.7753333449363708, 0.7973333597183228, 0.8086666464805603, 0.7893333435058594, 0.781000018119812, 0.8159999847412109, 0.8299999833106995, 0.8206666707992554, 0.8176666498184204, 0.8106666803359985, 0.8203333616256714, 0.8043333292007446]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 8, 9, 0, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [58, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [5], [0]], "fitness": -0.2460000067949295, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.sqrt(grad), beta), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2224981784820557, 2.406245470046997, 2.303602457046509, 2.3022620677948, 2.2565934658050537, 3.1006836891174316], "accuracy": [0.21529521048069, 0.12930920720100403, 0.10500594228506088, 0.10738343745470047, 0.19970941543579102, 0.16034869849681854], "val_loss": [2.272948741912842, 2.3036482334136963, 2.302556037902832, 2.2989096641540527, 2.3128457069396973, 2.3362066745758057], "val_accuracy": [0.24199999868869781, 0.10000000149011612, 0.10000000149011612, 0.18533332645893097, 0.09833333641290665, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 3], [0, 0, 1, 2, 2, 0], [26, 97, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 0, 0, 2], [0, 1, 0, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 14, 8, 6, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.multiply(grad, grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304177761077881, 2.3025856018066406, 2.302579164505005, 2.3026065826416016, 2.302583694458008, 2.302645444869995, 2.302652597427368, 2.302945375442505], "accuracy": [0.09721305221319199, 0.09813763201236725, 0.10236428678035736, 0.10210011899471283, 0.09998679161071777, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.302584409713745, 2.3025591373443604, 2.3025550842285156, 2.3025646209716797, 2.302591562271118, 2.3027119636535645, 2.3030407428741455], "val_accuracy": [0.09933333098888397, 0.10000000149011612, 0.10499999672174454, 0.0976666659116745, 0.0976666659116745, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 1, 8, 1], [2, 2, 2, 4, 0, 3, 1, 3], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [0], [0]], "fitness": -0.09542857110500336, "mapping_values": [1, 7, 4, 3, 2, 19, 11, 8, 1, 8, 4, 4, 1, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.subtract(beta, tf.math.sqrt(beta)), grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3095569610595703, 2.3101861476898193, 2.3095502853393555, 2.3106298446655273, 2.310607433319092, 2.3099207878112793], "accuracy": [0.09074098616838455, 0.09642054885625839, 0.09496764093637466, 0.08849557489156723, 0.09325055778026581, 0.09060890227556229], "val_loss": [2.309192657470703, 2.309192657470703, 2.309192657470703, 2.309192657470703, 2.309192657470703, 2.309192657470703], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 1], [0, 0, 1, 0, 2, 2], [26, 39, 29], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 6, 3, 8, 2, 3, 1, 0, 9, 6, 6, 6, 4, 7, 2, 7, 9, 6, 4, 9, 9, 6, 5, 6], [2, 2, 1, 4, 0, 3, 1, 5, 3, 3, 2, 3, 3, 0, 4], [16, 1, 76, 68, 59, 21], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 7, 3, 8, 3, 4, 0, 5, 9], [0, 4, 2, 5], [0, 71], [1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 12, 6, 6, 3, 41, 26, 15, 6, 13, 9, 4, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(beta, alpha), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad)), beta), tf.math.divide_no_nan(tf.math.square(grad), grad)), tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.pow(grad, beta), tf.math.negative(grad)))), tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3106281757354736, 2.311014175415039, 2.3108952045440674, 2.31081485748291, 2.3103013038635254, 2.309234142303467], "accuracy": [0.08994849026203156, 0.09008057415485382, 0.09060890227556229, 0.0878351628780365, 0.09074098616838455, 0.09351472556591034], "val_loss": [2.3084850311279297, 2.3084850311279297, 2.3084850311279297, 2.3084850311279297, 2.3084850311279297, 2.3084850311279297], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]