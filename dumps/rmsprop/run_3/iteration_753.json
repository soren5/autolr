[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8008571267127991, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2145931720733643, 1.6141324043273926, 1.1652147769927979, 0.9683880805969238, 0.9031714797019958, 0.8480480313301086, 0.7905129194259644, 0.7564300894737244, 0.7235174775123596, 0.6988562941551208, 0.6993151903152466, 0.669135570526123, 0.6511176228523254, 0.6484692096710205, 0.6353452205657959, 0.6208693385124207, 0.6017026305198669, 0.5914373397827148, 0.5775973796844482, 0.5771709084510803, 0.5668296217918396, 0.5647267699241638, 0.5480584502220154, 0.5493273735046387, 0.5236888527870178, 0.5339232087135315, 0.5315719842910767, 0.5017008185386658, 0.5085920095443726, 0.509060263633728, 0.4924052059650421, 0.49663928151130676], "accuracy": [0.25941091775894165, 0.5054814219474792, 0.594241201877594, 0.6520935297012329, 0.6674151420593262, 0.6921146512031555, 0.7098137736320496, 0.7224937081336975, 0.7290979027748108, 0.7412495017051697, 0.7386078238487244, 0.7495707273483276, 0.7539294958114624, 0.7568352818489075, 0.7629110813140869, 0.7683265209197998, 0.7713643908500671, 0.7845727205276489, 0.7866860628128052, 0.785101056098938, 0.7944789528846741, 0.7860256433486938, 0.7932901978492737, 0.7913089394569397, 0.8082155585289001, 0.7989697456359863, 0.8061022162437439, 0.8146876096725464, 0.8120459914207458, 0.8109893202781677, 0.8212917447090149, 0.8170651197433472], "val_loss": [1.9296083450317383, 1.0985957384109497, 0.9074016809463501, 0.8262532353401184, 0.7934702038764954, 0.7256729602813721, 0.6882205605506897, 0.6517967581748962, 0.6500443816184998, 0.6321781873703003, 0.6065952181816101, 0.6322240829467773, 0.5879116058349609, 0.6136630177497864, 0.5736280083656311, 0.5616931915283203, 0.5388281345367432, 0.5428881645202637, 0.531649112701416, 0.5590824484825134, 0.5169423222541809, 0.5273927450180054, 0.5175221562385559, 0.5025106072425842, 0.5138286352157593, 0.495635449886322, 0.4848268926143646, 0.48912256956100464, 0.48532095551490784, 0.4983331561088562, 0.4889984428882599, 0.4792653024196625], "val_accuracy": [0.6013333201408386, 0.6543333530426025, 0.684333324432373, 0.6840000152587891, 0.7043333053588867, 0.7206666469573975, 0.7429999709129333, 0.746999979019165, 0.7360000014305115, 0.7556666731834412, 0.7646666765213013, 0.7473333477973938, 0.765333354473114, 0.7633333206176758, 0.7829999923706055, 0.7796666622161865, 0.7940000295639038, 0.7926666736602783, 0.8003333210945129, 0.7850000262260437, 0.8040000200271606, 0.7950000166893005, 0.8083333373069763, 0.812333345413208, 0.800000011920929, 0.8130000233650208, 0.8186666369438171, 0.8143333196640015, 0.8140000104904175, 0.8063333630561829, 0.8136666417121887, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 9, 0, 6, 3, 3, 2], [2, 0, 3, 1, 0], [60, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 7, 6, 2, 3, 3, 6, 0, 5, 3, 6, 4, 6, 2, 2, 3, 6, 0, 6, 9, 9, 4, 6, 5, 5, 7, 3, 0], [0, 1, 7, 4, 7, 2, 5, 6, 5, 2, 1, 4, 0, 5, 4, 7, 3, 5], [0, 98, 20, 11], [1], [0], [6], [0]], "fitness": -0.272857129573822, "mapping_values": [1, 2, 1, 1, 1, 2, 2, 0, 1, 46, 28, 18, 4, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad), beta), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.square(grad)), grad)), beta), alpha), grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), tf.math.square(grad)), tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), sigma)), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.26279354095459, 2.1470859050750732, 2.5564768314361572, 2.3069047927856445, 2.2833073139190674, 2.2636120319366455], "accuracy": [0.21371020376682281, 0.2118610441684723, 0.15836745500564575, 0.1002509593963623, 0.16880200803279877, 0.1612732857465744], "val_loss": [2.270111322402954, 2.3025155067443848, 2.3147950172424316, 2.2966690063476562, 2.20713210105896, 2.3072497844696045], "val_accuracy": [0.27433332800865173, 0.09866666793823242, 0.10100000351667404, 0.12733332812786102, 0.21433334052562714, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [5, 2, 0, 4, 0, 3, 1], [16, 70], [1, 0, 1, 0, 0, 1, 1, 1], [7, 8, 0, 2], [1, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29511.337890625, 4494448.0, 75438912.0, 530156768.0, 2368541440.0, 7700212736.0], "accuracy": [0.10434553027153015, 0.09932637959718704, 0.10672302544116974, 0.10553427785634995, 0.10210011899471283, 0.10157178342342377], "val_loss": [308571.09375, 16544790.0, 177415056.0, 966905408.0, 3621227776.0, 10680701952.0], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 4, 4, 7, 5, 1], [0, 1, 3, 4, 0, 3, 1, 5, 5], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [4, 3, 0, 2], [0, 6, 1, 4], [16], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 20, 11, 9, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.square(alpha)), tf.math.pow(tf.math.pow(grad, grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.square(tf.math.subtract(alpha, grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [93.7542724609375, 10951.7763671875, 178819.84375, 1277666.5, 5597752.0, 18395328.0], "accuracy": [0.09642054885625839, 0.10500594228506088, 0.10500594228506088, 0.09747721254825592, 0.10038304328918457, 0.10077928751707077], "val_loss": [815.0835571289062, 40079.2578125, 425988.65625, 2315572.0, 8662512.0, 25534786.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 2, 2, 4, 0, 5, 5, 4], [2, 0, 0, 4, 0, 3, 1], [16, 55, 6], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 5, 0], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 3, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]