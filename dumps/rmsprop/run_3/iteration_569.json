[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8031428456306458, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2124035358428955, 1.6106312274932861, 1.1486276388168335, 0.9793485403060913, 0.9034109711647034, 0.8393175601959229, 0.7895478010177612, 0.7611646056175232, 0.7330714464187622, 0.7242392897605896, 0.7004967331886292, 0.6860132217407227, 0.6575384736061096, 0.6210525035858154, 0.6458469033241272, 0.6124709248542786, 0.603936493396759, 0.5894370079040527, 0.5861629843711853, 0.5700905919075012, 0.5650348663330078, 0.5651530623435974, 0.5499093532562256, 0.5219857096672058, 0.5298306941986084, 0.5299746990203857, 0.5192983746528625, 0.5021114349365234], "accuracy": [0.2631092369556427, 0.4982168674468994, 0.5919957756996155, 0.6462818384170532, 0.6744155287742615, 0.6921146512031555, 0.7113987803459167, 0.7137762308120728, 0.7259278893470764, 0.7228899598121643, 0.7407211661338806, 0.7440232634544373, 0.7535332441329956, 0.769911527633667, 0.7565711140632629, 0.7684586048126221, 0.7720248103141785, 0.7825914621353149, 0.7779685854911804, 0.7816668748855591, 0.7864218950271606, 0.7901201844215393, 0.7989697456359863, 0.8039889335632324, 0.8047813773155212, 0.8042530417442322, 0.8033285140991211, 0.8157442808151245], "val_loss": [1.9248651266098022, 1.0881342887878418, 0.8743261694908142, 0.8144361972808838, 0.6951456069946289, 0.6508730053901672, 0.6653157472610474, 0.629574716091156, 0.6266159415245056, 0.5792334675788879, 0.5915865302085876, 0.5903945565223694, 0.5450560450553894, 0.556927502155304, 0.5425636172294617, 0.5578305721282959, 0.5352520942687988, 0.5515486598014832, 0.5061225295066833, 0.5185822248458862, 0.5187262296676636, 0.5281440615653992, 0.47333747148513794, 0.4721994698047638, 0.46916764974594116, 0.49864619970321655, 0.4553844928741455, 0.46601587533950806], "val_accuracy": [0.5533333420753479, 0.6293333172798157, 0.6830000281333923, 0.7076666951179504, 0.7476666569709778, 0.7543333172798157, 0.7336666584014893, 0.7476666569709778, 0.7400000095367432, 0.7870000004768372, 0.7706666588783264, 0.7556666731834412, 0.7956666946411133, 0.7749999761581421, 0.7863333225250244, 0.765999972820282, 0.8003333210945129, 0.7806666493415833, 0.8086666464805603, 0.7893333435058594, 0.8100000023841858, 0.7870000004768372, 0.8339999914169312, 0.8216666579246521, 0.8246666789054871, 0.8063333630561829, 0.8306666612625122, 0.8230000138282776]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 3, 0, 1, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.11514285951852798, "mapping_values": [1, 10, 5, 5, 2, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.306973695755005, 2.304015636444092, 2.3022918701171875, 2.301936149597168, 2.3019826412200928, 2.302037239074707, 2.302229404449463], "accuracy": [0.09576013684272766, 0.10170386731624603, 0.1018359512090683, 0.08677849918603897, 0.08651433140039444, 0.09470347315073013, 0.09140139818191528], "val_loss": [2.304135799407959, 2.301888942718506, 2.301506280899048, 2.301887273788452, 2.302216053009033, 2.302424907684326, 2.302532196044922], "val_accuracy": [0.10333333164453506, 0.10766666382551193, 0.09133332967758179, 0.07533333450555801, 0.0806666687130928, 0.08633333444595337, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 7, 1, 3, 5], [0, 1, 1, 0, 2], [1, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 9, 6, 3, 8, 2], [2, 2, 0, 4, 0, 3, 1], [16, 4], [0, 0, 1, 1], [0, 7], [0, 1, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 4, 3, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035409450531006, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [83, 82, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 2, 5, 6, 3, 5, 5, 2], [2, 2, 0, 4, 0, 3, 1], [16, 91], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 3, 8, 4], [1, 7, 7, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 6, 3, 3, 1, 10, 6, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.multiply(alpha, grad)), tf.math.sqrt(tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [3.3004000186920166, 1361.1077880859375, 359863.875, 85436704.0, 23173150720.0, 5790690705408.0], "accuracy": [0.09549596905708313, 0.10038304328918457, 0.09866596013307571, 0.09985470771789551, 0.10315678268671036, 0.09840179979801178], "val_loss": [26.464168548583984, 13085.1015625, 3416586.5, 954027392.0, 215269212160.0, 62581783920640.0], "val_accuracy": [0.10266666859388351, 0.10133333504199982, 0.09600000083446503, 0.10199999809265137, 0.10199999809265137, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 5, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 39, 56], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 2, 6, 6, 3, 5, 5, 4, 6], [2, 0, 3, 1, 0, 5, 3, 1], [16, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [7, 3, 0, 3, 3, 8, 6, 7, 6, 0, 0, 7, 0], [0, 4, 2, 0, 4, 7, 4, 5, 4], [0, 44], [1], [0], [1], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 7, 4, 3, 1, 17, 9, 8, 2, 22, 13, 9, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(grad, beta)), tf.math.add(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.add(grad, grad)))), grad)), grad))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3115170001983643, 2.309891939163208, 2.310899496078491, 2.309321165084839, 2.310086250305176, 2.3103137016296387], "accuracy": [0.09126931428909302, 0.09259014576673508, 0.09377889335155487, 0.09113723784685135, 0.08902391046285629, 0.08836349099874496], "val_loss": [2.3090198040008545, 2.3090198040008545, 2.3090198040008545, 2.3090198040008545, 2.3090198040008545, 2.3090198040008545], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]