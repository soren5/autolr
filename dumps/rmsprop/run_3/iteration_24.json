[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8462857007980347, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2121634483337402, 1.6058064699172974, 1.1659818887710571, 0.9941021800041199, 0.9063270092010498, 0.8297048807144165, 0.7962977290153503, 0.7743044495582581, 0.7478806972503662, 0.7071171998977661, 0.7008904218673706, 0.6833369731903076, 0.6650691032409668, 0.6434076428413391, 0.6271822452545166, 0.6288935542106628, 0.6064124703407288, 0.5978152751922607, 0.5809007883071899, 0.5822957754135132, 0.5893721580505371, 0.5597249865531921, 0.5529299378395081, 0.5494160652160645, 0.5340973138809204, 0.5420736074447632, 0.5246900916099548, 0.5276092886924744, 0.5137577056884766, 0.5151656270027161, 0.4928545653820038, 0.5020949840545654, 0.4790555238723755, 0.47978609800338745, 0.46961838006973267, 0.4763341248035431, 0.4706381559371948, 0.4523278772830963, 0.45741865038871765, 0.46356502175331116, 0.4553202688694, 0.4446670413017273], "accuracy": [0.26997753977775574, 0.5111610293388367, 0.5915995240211487, 0.6464139223098755, 0.6796988248825073, 0.7058512568473816, 0.7129837274551392, 0.7177387475967407, 0.7316074371337891, 0.739400327205658, 0.7461365461349487, 0.7514199018478394, 0.7577598690986633, 0.7689869403839111, 0.770439863204956, 0.7689869403839111, 0.7827235460281372, 0.7840443849563599, 0.7906485199928284, 0.7860256433486938, 0.783119797706604, 0.7979130744934082, 0.8000264167785645, 0.7930260300636292, 0.8055738806724548, 0.8030643463134766, 0.8092722296714783, 0.8101968169212341, 0.813498854637146, 0.8140271902084351, 0.8187822103500366, 0.8140271902084351, 0.8220842480659485, 0.822348415851593, 0.8284242749214172, 0.8224804997444153, 0.8337075710296631, 0.8350284099578857, 0.8362171649932861, 0.8309338092803955, 0.832650899887085, 0.8370096683502197], "val_loss": [1.9213560819625854, 1.071881890296936, 0.893805742263794, 0.8041472434997559, 0.7145781517028809, 0.6732219457626343, 0.6473119854927063, 0.6252617239952087, 0.596006453037262, 0.6401125192642212, 0.5861183404922485, 0.5807040333747864, 0.5798402428627014, 0.5561313629150391, 0.5202479362487793, 0.524763286113739, 0.5242302417755127, 0.5103773474693298, 0.4988647997379303, 0.526773989200592, 0.49443063139915466, 0.5013923048973083, 0.4722113311290741, 0.46836715936660767, 0.49291449785232544, 0.4651646316051483, 0.4602363407611847, 0.44861888885498047, 0.44406720995903015, 0.44070687890052795, 0.4460841417312622, 0.45467883348464966, 0.4378846287727356, 0.42528191208839417, 0.4396457374095917, 0.42497533559799194, 0.41655972599983215, 0.430476576089859, 0.40443533658981323, 0.43046656250953674, 0.40864109992980957, 0.413320392370224], "val_accuracy": [0.6100000143051147, 0.67166668176651, 0.6886666417121887, 0.7043333053588867, 0.734333336353302, 0.7516666650772095, 0.7450000047683716, 0.7639999985694885, 0.778333306312561, 0.7620000243186951, 0.7876666784286499, 0.7853333353996277, 0.7749999761581421, 0.7906666398048401, 0.8100000023841858, 0.8023333549499512, 0.8053333163261414, 0.8083333373069763, 0.8133333325386047, 0.7906666398048401, 0.8106666803359985, 0.8109999895095825, 0.8230000138282776, 0.8206666707992554, 0.8199999928474426, 0.8259999752044678, 0.8216666579246521, 0.8323333263397217, 0.8326666951179504, 0.8353333473205566, 0.8353333473205566, 0.8256666660308838, 0.8383333086967468, 0.8399999737739563, 0.8323333263397217, 0.8383333086967468, 0.8510000109672546, 0.8383333086967468, 0.8496666550636292, 0.8353333473205566, 0.8479999899864197, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2071945667266846, 1.5826530456542969, 1.1420754194259644, 0.9602375626564026, 0.9024509191513062, 0.7964468002319336, 0.7708581686019897, 0.7309776544570923, 0.7190178632736206, 0.7079097628593445, 0.6645691990852356, 0.6718683838844299, 0.6264382600784302, 0.6278120875358582, 0.6372507214546204, 0.5972231030464172, 0.6008566617965698, 0.5669425129890442, 0.5704490542411804, 0.5715922117233276, 0.5426824688911438, 0.5361405611038208, 0.5307276248931885, 0.5281819701194763, 0.5176852941513062, 0.515248715877533, 0.50690758228302, 0.4947645664215088, 0.4920397400856018, 0.481381893157959, 0.4822407364845276, 0.4789578318595886, 0.47417116165161133, 0.4669131934642792, 0.4531499147415161, 0.454037606716156], "accuracy": [0.2779025137424469, 0.5168405771255493, 0.5976753234863281, 0.6583014130592346, 0.6773213744163513, 0.7091533541679382, 0.7211728692054749, 0.7305507659912109, 0.7296261787414551, 0.7357020378112793, 0.7524765729904175, 0.7490423917770386, 0.7709681391716003, 0.7720248103141785, 0.7646281719207764, 0.7732135653495789, 0.7766477465629578, 0.789459764957428, 0.789988100528717, 0.7882710099220276, 0.7994980812072754, 0.8005547523498535, 0.806630551815033, 0.8043851256370544, 0.8083476424217224, 0.8140271902084351, 0.8150838613510132, 0.8202351331710815, 0.8187822103500366, 0.8264430165290833, 0.8216879963874817, 0.8231409192085266, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.8333113193511963], "val_loss": [1.9148222208023071, 1.0891375541687012, 0.9056211113929749, 0.8016678094863892, 0.760240912437439, 0.7038585543632507, 0.6770634055137634, 0.6463528871536255, 0.6302468180656433, 0.6203481554985046, 0.6302914023399353, 0.590358316898346, 0.618607759475708, 0.5765666365623474, 0.5648512244224548, 0.5980960130691528, 0.570862352848053, 0.5760148167610168, 0.5375343561172485, 0.559295654296875, 0.5193827152252197, 0.5377711653709412, 0.5133692026138306, 0.5084794163703918, 0.5028876662254333, 0.5047078728675842, 0.5013857483863831, 0.4947488605976105, 0.4889155328273773, 0.4944532513618469, 0.47344210743904114, 0.4975704252719879, 0.47418901324272156, 0.4700135588645935, 0.47032633423805237, 0.4672855734825134], "val_accuracy": [0.550000011920929, 0.6420000195503235, 0.6753333210945129, 0.6966666579246521, 0.7206666469573975, 0.7390000224113464, 0.7423333525657654, 0.7590000033378601, 0.7583333253860474, 0.7606666684150696, 0.7576666474342346, 0.7786666750907898, 0.768666684627533, 0.7796666622161865, 0.7956666946411133, 0.7693333625793457, 0.7820000052452087, 0.7749999761581421, 0.8009999990463257, 0.7850000262260437, 0.8076666593551636, 0.7979999780654907, 0.812333345413208, 0.8190000057220459, 0.8153333067893982, 0.8230000138282776, 0.812666654586792, 0.8236666917800903, 0.8263333439826965, 0.8223333358764648, 0.8383333086967468, 0.8216666579246521, 0.8303333520889282, 0.8303333520889282, 0.8253333568572998, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 9, 3, 1, 0, 5], [0, 0, 1, 0, 2], [0, 39, 4], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 2, 9, 7], [4, 0, 3, 4, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 5, 3, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 1, 5], [0, 0, 1, 3, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [44, 1], [0, 0, 1, 1], [0, 7], [0, 0], [0, 55], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 4, 2, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310215711593628, 2.310173749923706, 2.309296131134033, 2.309429168701172, 2.3104183673858643, 2.31058406829834], "accuracy": [0.09074098616838455, 0.08968432247638702, 0.09589222073554993, 0.08902391046285629, 0.08968432247638702, 0.09087307006120682], "val_loss": [2.308638572692871, 2.308638572692871, 2.308638572692871, 2.308638572692871, 2.308638572692871, 2.308638572692871], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 9, 3, 0], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 3, 0, 6, 3, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1], [0, 7, 6], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 9, 6, 3, 3, 2, 1, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309596538543701, 2.3100385665893555, 2.31020188331604, 2.3098275661468506, 2.310580253601074, 2.309777021408081], "accuracy": [0.09589222073554993, 0.09377889335155487, 0.09391097724437714, 0.09470347315073013, 0.08942015469074249, 0.09311848133802414], "val_loss": [2.30818510055542, 2.30818510055542, 2.30818510055542, 2.30818510055542, 2.30818510055542, 2.30818510055542], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 7], [0, 0, 3, 3, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 2, 0, 6, 3, 1, 8], [2, 0, 3, 4, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310509204864502, 2.3102478981018066, 2.3098807334899902, 2.310314416885376, 2.3102848529815674, 2.3095438480377197], "accuracy": [0.09192973375320435, 0.09417514503002167, 0.09391097724437714, 0.08928807079792023, 0.08981640636920929, 0.09760929644107819], "val_loss": [2.308716058731079, 2.308716058731079, 2.308716058731079, 2.308716058731079, 2.308716058731079, 2.308716058731079], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]