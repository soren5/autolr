[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7922857403755188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2073583602905273, 1.5957361459732056, 1.1532453298568726, 0.9904415011405945, 0.9116253852844238, 0.817145049571991, 0.7892745733261108, 0.7609579563140869, 0.7810819149017334, 0.7036247253417969, 0.6842681169509888, 0.6686883568763733, 0.6715100407600403, 0.6459300518035889, 0.6435861587524414, 0.6204774379730225, 0.6032995581626892, 0.5910763740539551, 0.5777924060821533], "accuracy": [0.27103421092033386, 0.5105006098747253, 0.5947695374488831, 0.651168942451477, 0.6715096831321716, 0.7004358768463135, 0.7086250185966492, 0.7206445932388306, 0.7119271159172058, 0.7386078238487244, 0.7446836829185486, 0.7541936039924622, 0.746268630027771, 0.7613261342048645, 0.7582882046699524, 0.7684586048126221, 0.7726852297782898, 0.7778365015983582, 0.7839123010635376], "val_loss": [1.9104390144348145, 1.1204967498779297, 0.9129378199577332, 0.8308663964271545, 0.712031900882721, 0.6885231733322144, 0.696138858795166, 0.681230366230011, 0.6091086864471436, 0.5890273451805115, 0.5959058403968811, 0.5503005981445312, 0.5394160747528076, 0.5355437397956848, 0.5879800915718079, 0.5473922491073608, 0.5210044384002686, 0.5318034887313843, 0.5127692818641663], "val_accuracy": [0.565666675567627, 0.609000027179718, 0.6880000233650208, 0.6953333616256714, 0.7416666746139526, 0.7393333315849304, 0.7229999899864197, 0.7336666584014893, 0.7756666541099548, 0.781000018119812, 0.765333354473114, 0.8019999861717224, 0.8036666512489319, 0.8103333115577698, 0.7733333110809326, 0.7926666736602783, 0.8086666464805603, 0.8003333210945129, 0.8090000152587891]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2], [2, 0, 2, 0, 0, 3], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4, 3, 1, 4, 7, 3], [1, 2, 0, 4, 0, 3, 1, 1, 3], [19, 1, 58], [0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 3, 0, 5, 4], [0, 1, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 22, 13, 9, 3, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))), tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.multiply(alpha, alpha), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(alpha, alpha))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4450893824.0, 631.8101196289062, 431.0721435546875, 176.0049591064453, 334.53570556640625, 544.6729736328125], "accuracy": [0.10751552134752274, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.3535377979278564, 1599.42333984375, 123.44194030761719, 260.8274841308594, 449.6006774902344, 689.7564697265625], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 7, 1, 3, 5, 3, 8, 9], [0, 3, 1, 0, 2], [26, 39, 45], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [2, 5, 4, 7, 0, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2], [0, 1, 5, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 3, 3, 1, 2, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 2, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [4, 6, 4, 7, 0, 5, 5, 5], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 0], [0, 1, 5, 5], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 8, 5, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3032820224761963, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 6, 4, 3, 2, 3, 4, 6, 9], [2, 0, 5, 1, 3, 3, 5, 4, 1, 5], [16, 1], [0, 0, 1, 1], [0, 7], [6, 6], [0], [1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 2, 2, 0, 1, 24, 14, 10, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(grad, alpha), grad)), tf.math.multiply(tf.math.add(tf.math.multiply(grad, grad), tf.math.pow(tf.math.divide_no_nan(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3102996349334717, 2.3088576793670654, 2.31068754196167, 2.3085756301879883, 2.3094427585601807, 2.309976577758789], "accuracy": [0.09153348207473755, 0.0940430611371994, 0.09166556596755981, 0.09338264167308807, 0.0936468094587326, 0.09126931428909302], "val_loss": [2.308865547180176, 2.308865547180176, 2.308865547180176, 2.308865547180176, 2.308865547180176, 2.308865547180176], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]