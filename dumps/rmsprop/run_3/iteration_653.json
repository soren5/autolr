[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8022857308387756, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103936672210693, 1.6041889190673828, 1.1586816310882568, 0.9817363619804382, 0.8906071782112122, 0.8195859789848328, 0.7861364483833313, 0.7659115195274353, 0.7157465815544128, 0.7275738716125488, 0.6829790472984314, 0.6735404133796692, 0.6731107234954834, 0.6546235084533691, 0.6244522929191589, 0.6175438165664673, 0.5989083647727966, 0.5946908593177795, 0.5857178568840027, 0.5842646360397339, 0.5735686421394348, 0.5671675801277161, 0.5640994310379028, 0.5480287671089172, 0.5402184128761292], "accuracy": [0.25637298822402954, 0.5105006098747253, 0.5962224006652832, 0.652621865272522, 0.6775855422019958, 0.7037379741668701, 0.7099458575248718, 0.7148329019546509, 0.7306828498840332, 0.7305507659912109, 0.7453441023826599, 0.7490423917770386, 0.7498348951339722, 0.7614582180976868, 0.7651565074920654, 0.7663452625274658, 0.7769119143486023, 0.7765156626701355, 0.7833839654922485, 0.7827235460281372, 0.7886672616004944, 0.7869502305984497, 0.7890635132789612, 0.7957997918128967, 0.7988376617431641], "val_loss": [1.9225451946258545, 1.0967544317245483, 0.9216012358665466, 0.8504161238670349, 0.7753635048866272, 0.7274181842803955, 0.6894065141677856, 0.7310067415237427, 0.6822384595870972, 0.6315192580223083, 0.6099444627761841, 0.590419590473175, 0.6615752577781677, 0.6076833605766296, 0.560495138168335, 0.5608641505241394, 0.5764021277427673, 0.5584245324134827, 0.5592015981674194, 0.5222001075744629, 0.5702664256095886, 0.5118975639343262, 0.520767092704773, 0.5228762030601501, 0.524199366569519], "val_accuracy": [0.5839999914169312, 0.6486666798591614, 0.687666654586792, 0.687666654586792, 0.7009999752044678, 0.7386666536331177, 0.7383333444595337, 0.7303333282470703, 0.7403333187103271, 0.7523333430290222, 0.7549999952316284, 0.7703333497047424, 0.7586666941642761, 0.7543333172798157, 0.7916666865348816, 0.7820000052452087, 0.7536666393280029, 0.7893333435058594, 0.7876666784286499, 0.8083333373069763, 0.7663333415985107, 0.8043333292007446, 0.8013333082199097, 0.7993333339691162, 0.7960000038146973]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [2, 1, 1, 0, 1], [26, 80, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 5, 5, 5, 4], [2, 0, 0, 4, 0, 3, 1], [16, 1, 94], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 5, 2], [0, 1, 1, 4], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 14, 8, 6, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, alpha), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 3, 5, 8, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 2, 5, 4, 3], [2, 2, 0, 5, 3, 3, 1, 2], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 3, 0, 2], [4, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 17, 9, 8, 1, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.add(tf.math.square(tf.math.pow(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), grad)), grad)), alpha), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3108456134796143, 2.3416895866394043, 2.66933274269104, 4.240999698638916, 8.72308349609375, 18.10374641418457], "accuracy": [0.09681680053472519, 0.09879804402589798, 0.1006472036242485, 0.09919429570436478, 0.10130762308835983, 0.09615638852119446], "val_loss": [2.310023784637451, 2.35984206199646, 2.801884412765503, 4.895655155181885, 10.306918144226074, 20.974512100219727], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [26, 39, 49], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 2, 4, 0, 6, 4, 4], [2, 2, 0, 4, 0, 2, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [3, 3, 3, 2, 6, 1, 2, 8, 1, 6, 5, 6, 8, 4, 5, 8, 6, 0, 0, 8, 5, 1, 1, 6, 4], [0, 1, 3, 4, 6, 3, 6, 0, 3, 7, 1, 3, 5, 7, 0, 4, 1], [56, 19, 69], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 42, 25, 17, 3, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, sigma)), grad), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(sigma, grad)), tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.subtract(tf.math.subtract(alpha, sigma), tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))))), grad))))), alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.482163429260254, 2.347200393676758, 2.3388261795043945, 2.3367342948913574, 2.3427138328552246, 2.349639415740967, 2.3620693683624268, 2.350403308868408, 2.354663848876953, 2.3809762001037598, 2.3606178760528564, 2.357421636581421, 2.36857271194458, 2.369015693664551, 2.3848824501037598], "accuracy": [0.16616034507751465, 0.09813763201236725, 0.10249637067317963, 0.09906221181154251, 0.09668471664190292, 0.1002509593963623, 0.09893012791872025, 0.10196803510189056, 0.1010434553027153, 0.09708096832036972, 0.10011887550354004, 0.0948355570435524, 0.10091137140989304, 0.09866596013307571, 0.10315678268671036], "val_loss": [2.328436851501465, 2.324738025665283, 2.339033603668213, 2.36136794090271, 2.332332134246826, 2.3331329822540283, 2.3662636280059814, 2.385040283203125, 2.3721368312835693, 2.331594467163086, 2.349461317062378, 2.4000842571258545, 2.3500328063964844, 2.3393075466156006, 2.3744688034057617], "val_accuracy": [0.09833333641290665, 0.10000000149011612, 0.09966666996479034, 0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.10066666454076767, 0.09966666996479034, 0.0963333323597908, 0.10366666316986084, 0.0963333323597908, 0.10000000149011612, 0.09966666996479034, 0.10233332961797714, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 46, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [4, 2, 4, 4, 0, 5, 8, 4], [2, 2, 0, 4, 5, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [8, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 14, 8, 6, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033509254455566, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]