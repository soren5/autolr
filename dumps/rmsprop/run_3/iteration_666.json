[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131454944610596, 1.6128488779067993, 1.1664094924926758, 0.9582552909851074, 0.8958783745765686, 0.8418437242507935, 0.7843250632286072, 0.7524727582931519, 0.7479813694953918, 0.702254593372345, 0.6897860169410706, 0.6632486581802368, 0.6482266187667847, 0.6288425922393799, 0.632705807685852, 0.6228083968162537, 0.6049414277076721, 0.5848416686058044, 0.5762476325035095, 0.58493572473526, 0.5567317008972168, 0.5460315346717834, 0.546612560749054, 0.5386641621589661, 0.5274236798286438, 0.5283452272415161, 0.5095567107200623, 0.5047088265419006, 0.508712649345398, 0.49401596188545227, 0.4907708764076233, 0.4824325442314148, 0.4791434705257416, 0.47402268648147583, 0.47115105390548706, 0.46747127175331116, 0.45274096727371216, 0.4561317265033722, 0.4518125355243683, 0.4392595589160919, 0.4330591559410095, 0.44081956148147583, 0.4318290054798126, 0.42691776156425476, 0.4213933050632477, 0.4251379370689392, 0.42060962319374084, 0.4107491374015808], "accuracy": [0.26495838165283203, 0.5120856165885925, 0.5898824334144592, 0.661471426486969, 0.6757363677024841, 0.6995112895965576, 0.7143045663833618, 0.7240787148475647, 0.7206445932388306, 0.7400607466697693, 0.7430986762046814, 0.757099449634552, 0.7559106945991516, 0.7670056819915771, 0.7658169269561768, 0.7708360552787781, 0.7750627398490906, 0.7854973077774048, 0.7890635132789612, 0.7823272943496704, 0.7960638999938965, 0.7961959838867188, 0.8010830879211426, 0.8034605979919434, 0.8070268034934998, 0.8016114234924316, 0.8136309385299683, 0.8158763647079468, 0.81112140417099, 0.8173292875289917, 0.8214238286018372, 0.819442629814148, 0.8259146809577942, 0.826310932636261, 0.8259146809577942, 0.828820526599884, 0.8330471515655518, 0.8335754871368408, 0.8358209133148193, 0.8436138033866882, 0.8426892161369324, 0.8388587832450867, 0.8426892161369324, 0.847840428352356, 0.8470479249954224, 0.846387505531311, 0.8469158411026001, 0.848368763923645], "val_loss": [1.9271246194839478, 1.1144548654556274, 0.8786818981170654, 0.7727850079536438, 0.748094379901886, 0.6984267830848694, 0.653406023979187, 0.6746896505355835, 0.6265984177589417, 0.6288416385650635, 0.6106199622154236, 0.5882867574691772, 0.56803297996521, 0.5863280892372131, 0.5329647660255432, 0.556841254234314, 0.517694890499115, 0.5407869219779968, 0.5295632481575012, 0.5022995471954346, 0.4920044243335724, 0.47888919711112976, 0.48753678798675537, 0.47128137946128845, 0.4935467541217804, 0.4664824604988098, 0.47647616267204285, 0.47443437576293945, 0.45517438650131226, 0.4589937627315521, 0.4459281265735626, 0.4478791356086731, 0.4522082209587097, 0.4353348910808563, 0.4386288523674011, 0.4445755183696747, 0.4230342507362366, 0.42661499977111816, 0.4446965456008911, 0.41734305024147034, 0.42327800393104553, 0.4196193516254425, 0.40768250823020935, 0.4143262803554535, 0.4063880741596222, 0.4428708553314209, 0.40397319197654724, 0.4100511074066162], "val_accuracy": [0.5453333258628845, 0.6536666750907898, 0.7036666870117188, 0.7166666388511658, 0.7243333458900452, 0.737333357334137, 0.7476666569709778, 0.7279999852180481, 0.7720000147819519, 0.7573333382606506, 0.7643333077430725, 0.777999997138977, 0.7793333530426025, 0.7789999842643738, 0.7926666736602783, 0.796999990940094, 0.8096666932106018, 0.7986666560173035, 0.7950000166893005, 0.8140000104904175, 0.8240000009536743, 0.8253333568572998, 0.8183333277702332, 0.8253333568572998, 0.8206666707992554, 0.8273333311080933, 0.8233333230018616, 0.8299999833106995, 0.8293333053588867, 0.828000009059906, 0.8376666903495789, 0.843999981880188, 0.8399999737739563, 0.8403333425521851, 0.8386666774749756, 0.8363333344459534, 0.8489999771118164, 0.8486666679382324, 0.8429999947547913, 0.8523333072662354, 0.8526666760444641, 0.8519999980926514, 0.856333315372467, 0.8506666421890259, 0.8536666631698608, 0.8386666774749756, 0.8519999980926514, 0.8536666631698608]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 0, 0, 4, 0, 5, 1], [16, 1, 82], [1, 0, 0, 0, 0, 1, 1, 1], [1, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29773.638671875, 4372774.5, 76968512.0, 540542016.0, 2348646912.0, 7832699392.0], "accuracy": [0.10421344637870789, 0.10117553919553757, 0.09192973375320435, 0.09430722147226334, 0.09496764093637466, 0.09826971590518951], "val_loss": [302522.375, 16218964.0, 173918432.0, 947842624.0, 3549827072.0, 10470081536.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 9, 2, 1, 3, 5], [2, 0, 1, 0, 2], [80, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 0, 3, 1, 0, 5], [16, 58], [0, 0, 1, 1], [0, 7], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.square(tf.math.square(alpha))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 5, 3, 1, 3, 5], [0, 2, 1, 1, 2], [26, 39, 39], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 4, 4, 4, 0, 1, 5, 7], [2, 2, 0, 4, 0, 5, 1], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2], [0, 5, 1, 2], [0], [0, 0, 0, 0, 1, 1], [0, 2, 8, 0], [1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 5, 2, 3, 1, 6, 3, 3, 1, 6, 4, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(alpha)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [42, 77, 28], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 1, 3], [1, 2, 4, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2, 6], [2, 2, 7, 4, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 16, 9, 7, 1, 10, 5, 5, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.subtract(grad, grad)))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, beta), grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304650068283081, 2.3035078048706055, 2.304692029953003, 2.305464267730713, 2.3065202236175537, 2.306462049484253, 2.307323694229126, 2.3075172901153564], "accuracy": [0.09060890227556229, 0.09668471664190292, 0.10051512718200684, 0.09747721254825592, 0.09681680053472519, 0.09959053993225098, 0.09774138033390045, 0.09760929644107819], "val_loss": [2.3027148246765137, 2.303563117980957, 2.303144693374634, 2.3039588928222656, 2.3048832416534424, 2.305722236633301, 2.3065004348754883, 2.3081915378570557], "val_accuracy": [0.0989999994635582, 0.10066666454076767, 0.10333333164453506, 0.09866666793823242, 0.10066666454076767, 0.09933333098888397, 0.10066666454076767, 0.0989999994635582]}}]