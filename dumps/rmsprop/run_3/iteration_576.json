[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 1, 4], [2, 2, 0, 0, 0, 3, 1], [16, 60, 53], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [54], [1], [0], [1], [0]], "fitness": -0.8659999966621399, "mapping_values": [1, 10, 5, 5, 3, 12, 6, 6, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.102020740509033, 1.2004474401474, 0.8564117550849915, 0.7173094153404236, 0.632422149181366, 0.5854922533035278, 0.5459573268890381, 0.5145070552825928, 0.4986173212528229, 0.46112096309661865, 0.4472707211971283, 0.4314308166503906, 0.4117664694786072, 0.40347087383270264, 0.3929446339607239, 0.3765210807323456, 0.3590223491191864, 0.3429860472679138, 0.3404988646507263, 0.32742685079574585, 0.3280566334724426, 0.3092956840991974, 0.2940584421157837, 0.29199719429016113, 0.27859553694725037, 0.2697374224662781, 0.26566410064697266], "accuracy": [0.2856954038143158, 0.6021661758422852, 0.6877558827400208, 0.7269845604896545, 0.7588165402412415, 0.7746664881706238, 0.7942147850990295, 0.7994980812072754, 0.8112534880638123, 0.8244617581367493, 0.8368775844573975, 0.837537944316864, 0.8474441766738892, 0.8521991968154907, 0.8549728989601135, 0.8602562546730042, 0.8698983192443848, 0.8737286925315857, 0.8759741187095642, 0.8796724081039429, 0.8809932470321655, 0.884691596031189, 0.8908994793891907, 0.8883898854255676, 0.8975036144256592, 0.9000132083892822, 0.8973715305328369], "val_loss": [1.0842455625534058, 0.7972439527511597, 0.6862656474113464, 0.579303503036499, 0.5575008392333984, 0.515450656414032, 0.4736703336238861, 0.47224366664886475, 0.45615771412849426, 0.44125252962112427, 0.41660070419311523, 0.4115886986255646, 0.38793620467185974, 0.3875383734703064, 0.3837932050228119, 0.36910009384155273, 0.36105892062187195, 0.360381156206131, 0.3548049330711365, 0.35510721802711487, 0.34988656640052795, 0.3469526469707489, 0.3465524911880493, 0.3467348515987396, 0.3426953852176666, 0.34493252635002136, 0.3470861315727234], "val_accuracy": [0.6446666717529297, 0.7143333554267883, 0.7406666874885559, 0.7723333239555359, 0.7730000019073486, 0.7889999747276306, 0.815666675567627, 0.8253333568572998, 0.8233333230018616, 0.8349999785423279, 0.8519999980926514, 0.8519999980926514, 0.8629999756813049, 0.8610000014305115, 0.8553333282470703, 0.8629999756813049, 0.8713333606719971, 0.8673333525657654, 0.8696666955947876, 0.8733333349227905, 0.8769999742507935, 0.8793333172798157, 0.8776666522026062, 0.8776666522026062, 0.8763333559036255, 0.8786666393280029, 0.874666690826416]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7968571186065674, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209010601043701, 1.5968245267868042, 1.1248661279678345, 1.0080244541168213, 0.8701767921447754, 0.8151222467422485, 0.7620781064033508, 0.7667387127876282, 0.7149945497512817, 0.7099137306213379, 0.6704151034355164, 0.6539183259010315, 0.6182180047035217, 0.6450046300888062, 0.6076200008392334, 0.5990223288536072, 0.6094361543655396, 0.5752748847007751, 0.5741232633590698, 0.5431596636772156], "accuracy": [0.270109623670578, 0.5060097575187683, 0.6041474342346191, 0.6382247805595398, 0.6844538450241089, 0.7040021419525146, 0.7182670831680298, 0.7136441469192505, 0.7359662055969238, 0.7364945411682129, 0.7564390301704407, 0.759609043598175, 0.7724210619926453, 0.7503632307052612, 0.7781006693840027, 0.7821952104568481, 0.7732135653495789, 0.7891955971717834, 0.7825914621353149, 0.8000264167785645], "val_loss": [1.908278465270996, 1.0855801105499268, 0.9245917797088623, 0.7658633589744568, 0.7155871391296387, 0.6654077172279358, 0.6639446020126343, 0.6330772042274475, 0.6317002177238464, 0.6072768568992615, 0.6129654049873352, 0.5524007678031921, 0.5958999395370483, 0.5600659251213074, 0.5393774509429932, 0.6243956685066223, 0.5400850176811218, 0.5515236854553223, 0.5181882977485657, 0.5030494928359985], "val_accuracy": [0.6066666841506958, 0.6549999713897705, 0.6430000066757202, 0.7113333344459534, 0.734666645526886, 0.7516666650772095, 0.7429999709129333, 0.7696666717529297, 0.7490000128746033, 0.7680000066757202, 0.753333330154419, 0.7960000038146973, 0.746999979019165, 0.7720000147819519, 0.8006666898727417, 0.7639999985694885, 0.7910000085830688, 0.781333327293396, 0.7973333597183228, 0.8003333210945129]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 0, 6, 1, 8], [0, 3, 1, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [63], [1], [0], [2], [0]], "fitness": -0.10342857241630554, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.0834244841714483e+17, 1.2382632950523494e+17, 1.2471208061068902e+17, 1.2310981729111245e+17, 1.1878457047567565e+17, 1.1943019854954496e+17], "accuracy": [0.10038304328918457, 0.10302469879388809, 0.10249637067317963, 0.09853387624025345, 0.09747721254825592, 0.10196803510189056], "val_loss": [1.1035200348540109e+17, 1.1035200348540109e+17, 1.1035200348540109e+17, 1.1035200348540109e+17, 1.1035200348540109e+17, 1.1035200348540109e+17], "val_accuracy": [0.109333336353302, 0.109333336353302, 0.109333336353302, 0.109333336353302, 0.109333336353302, 0.109333336353302]}, "mapping_values": [1, 16, 9, 7, 3, 7, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [4, 2, 3, 1, 3, 5, 5], [0, 0, 1, 2, 0, 2], [73, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 2, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [0, 7, 8, 0], [0, 1, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 12, 6, 6, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.square(beta))), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 80, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 3], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 2, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, beta)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4511587619781494, Infinity, 2.3207664489746094, 2.3256850242614746, 2.3321878910064697, 2.3407504558563232], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.490315914154053, 2.3194000720977783, 2.3238160610198975, 2.3296279907226562, 2.3372490406036377, 2.3474254608154297], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]