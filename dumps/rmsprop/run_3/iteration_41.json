[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8117142915725708, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2132315635681152, 1.6214544773101807, 1.1536215543746948, 0.9795151352882385, 0.8849101662635803, 0.8162993788719177, 0.7756143808364868, 0.7762152552604675, 0.7146092653274536, 0.7109816670417786, 0.6785675883293152, 0.6563843488693237, 0.6650018095970154, 0.6311777830123901, 0.6264863014221191, 0.6185998916625977, 0.6020158529281616, 0.5889765620231628, 0.5801379680633545, 0.5627464652061462, 0.5719218254089355, 0.5525434613227844, 0.540248692035675, 0.5431943535804749, 0.5354803800582886, 0.5261868238449097, 0.5093628764152527, 0.49770641326904297, 0.5138511061668396, 0.49789634346961975, 0.49368998408317566, 0.4789305329322815, 0.48863130807876587, 0.4698663055896759, 0.47121113538742065, 0.45812416076660156, 0.4601389467716217, 0.4466173052787781, 0.44387444853782654, 0.44229015707969666, 0.432020366191864, 0.43844521045684814, 0.42484769225120544, 0.42147672176361084, 0.4144675135612488, 0.41531506180763245, 0.41498228907585144, 0.41908344626426697], "accuracy": [0.25782591104507446, 0.5003302097320557, 0.6028265953063965, 0.6501122713088989, 0.6752080321311951, 0.7010962963104248, 0.7103421092033386, 0.7094175219535828, 0.7359662055969238, 0.7351737022399902, 0.7392682433128357, 0.752740740776062, 0.7500990629196167, 0.7633073329925537, 0.7675340175628662, 0.7681944370269775, 0.7738739848136902, 0.7828556299209595, 0.7881389260292053, 0.785101056098938, 0.7860256433486938, 0.7889314293861389, 0.8043851256370544, 0.7965922355651855, 0.8025360107421875, 0.8055738806724548, 0.8121780753135681, 0.8169330358505249, 0.8095363974571228, 0.8169330358505249, 0.8156121969223022, 0.824329674243927, 0.8222163319587708, 0.8302733898162842, 0.826310932636261, 0.828820526599884, 0.8271034359931946, 0.8350284099578857, 0.8341038227081299, 0.8381983637809753, 0.8446704745292664, 0.8409721255302429, 0.8429533839225769, 0.8508783578872681, 0.8527275323867798, 0.8507462739944458, 0.8516708612442017, 0.8448025584220886], "val_loss": [1.9291399717330933, 1.0679563283920288, 0.908277153968811, 0.7652111053466797, 0.6941344141960144, 0.6499564051628113, 0.6335726976394653, 0.6209380030632019, 0.6266290545463562, 0.5925531983375549, 0.571455717086792, 0.5470736026763916, 0.5467131733894348, 0.5425379276275635, 0.508756697177887, 0.5925958752632141, 0.5023377537727356, 0.4833676218986511, 0.49411332607269287, 0.4822760820388794, 0.4803703725337982, 0.4742269814014435, 0.46494847536087036, 0.4628998935222626, 0.45401182770729065, 0.4570160210132599, 0.45650607347488403, 0.43546923995018005, 0.44193583726882935, 0.4380079209804535, 0.45151013135910034, 0.43121272325515747, 0.424681156873703, 0.42385727167129517, 0.44080913066864014, 0.42931875586509705, 0.4193336069583893, 0.4076637923717499, 0.4070982336997986, 0.400729775428772, 0.3970285654067993, 0.39515265822410583, 0.39095571637153625, 0.39604857563972473, 0.4018624722957611, 0.4030631482601166, 0.3957647383213043, 0.3986022174358368], "val_accuracy": [0.5860000252723694, 0.6779999732971191, 0.6656666398048401, 0.721666693687439, 0.734000027179718, 0.7506666779518127, 0.7586666941642761, 0.7733333110809326, 0.753000020980835, 0.7770000100135803, 0.7730000019073486, 0.7983333468437195, 0.7913333177566528, 0.793666660785675, 0.8026666641235352, 0.7670000195503235, 0.8033333420753479, 0.8209999799728394, 0.8106666803359985, 0.8133333325386047, 0.8240000009536743, 0.8226666450500488, 0.8326666951179504, 0.8226666450500488, 0.8303333520889282, 0.8276666402816772, 0.8326666951179504, 0.8399999737739563, 0.8266666531562805, 0.82833331823349, 0.82833331823349, 0.8376666903495789, 0.8410000205039978, 0.8456666469573975, 0.8293333053588867, 0.8420000076293945, 0.8416666388511658, 0.846666693687439, 0.8500000238418579, 0.8483333587646484, 0.8569999933242798, 0.8523333072662354, 0.8579999804496765, 0.8543333411216736, 0.8496666550636292, 0.856333315372467, 0.8533333539962769, 0.8513333201408386]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 0, 1, 1], [9, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [2, 2, 3, 1, 3, 5, 3, 3, 5, 5, 7, 3, 4, 2, 8, 0, 9, 1, 8, 8, 0, 8, 0, 0, 9], [0, 3, 1, 0, 2, 1, 1, 1, 0, 2, 0], [0, 2, 39, 24, 11, 7], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 4], [35, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 1, 1], [0, 6], [1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 25, 11, 6, 12, 7, 5, 1, 4, 2, 2, 1, 4, 2, 2, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), alpha)), tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.sqrt(grad)))), tf.math.negative(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 2, 3, 1, 3, 5, 5, 1, 8, 9], [3, 0, 1, 0, 2], [0, 45, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 0], [3, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 3, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.square(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 0, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [7, 4], [0], [1], [0], [2], [0]], "fitness": -0.08799999952316284, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104734420776367, 2.310115337371826, 2.3100569248199463, 2.3099844455718994, 2.3109307289123535, 2.310187578201294], "accuracy": [0.09351472556591034, 0.09192973375320435, 0.08942015469074249, 0.09232597798109055, 0.09245806187391281, 0.09113723784685135], "val_loss": [2.308994770050049, 2.308994770050049, 2.308994770050049, 2.308994770050049, 2.308994770050049, 2.308994770050049], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]