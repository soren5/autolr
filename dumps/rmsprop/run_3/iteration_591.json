[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 2, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 3, 0, 3, 6, 6, 7, 9, 6, 9, 2, 2, 5], [0, 1, 1, 2, 3, 1, 7, 7], [0, 58, 25], [1], [0], [1], [0]], "fitness": -0.8654285669326782, "mapping_values": [1, 10, 5, 5, 3, 14, 7, 7, 2, 21, 13, 8, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), beta), tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.square(alpha), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.10518741607666, 1.1907254457473755, 0.8376493453979492, 0.697597324848175, 0.6241759061813354, 0.5666297674179077, 0.5249561667442322, 0.5053263902664185, 0.47016552090644836, 0.46112966537475586, 0.4252795875072479, 0.40382903814315796, 0.3973471522331238, 0.37833014130592346, 0.3625020384788513, 0.3478071391582489, 0.34939926862716675, 0.3437960743904114, 0.31510481238365173, 0.30643537640571594, 0.297803670167923, 0.2917543649673462, 0.29510125517845154, 0.2740756869316101, 0.2777923047542572, 0.2664814293384552, 0.2620420753955841, 0.25798550248146057, 0.232453390955925, 0.23469634354114532, 0.2209365963935852, 0.2165614366531372, 0.21086017787456512, 0.21265354752540588, 0.20580509305000305, 0.19735650718212128, 0.20654930174350739, 0.18707191944122314, 0.18007998168468475, 0.17285960912704468, 0.1687820702791214, 0.1682494580745697, 0.15931253135204315, 0.16069263219833374, 0.16070570051670074, 0.14777345955371857, 0.14803525805473328, 0.13875211775302887, 0.14152704179286957, 0.13832391798496246], "accuracy": [0.29362040758132935, 0.5995244979858398, 0.6828688383102417, 0.7310791015625, 0.7593448758125305, 0.7828556299209595, 0.7985734939575195, 0.8067626357078552, 0.8208954930305481, 0.8220842480659485, 0.8385946154594421, 0.8467837572097778, 0.8485008478164673, 0.8562937378883362, 0.8625016212463379, 0.8697662353515625, 0.8685774803161621, 0.8693699836730957, 0.8804649114608765, 0.8831065893173218, 0.8849557638168335, 0.8879936337471008, 0.8861445188522339, 0.8976356983184814, 0.8971073627471924, 0.8976356983184814, 0.8981640338897705, 0.9001452922821045, 0.910711944103241, 0.9078060984611511, 0.9145423173904419, 0.9122969508171082, 0.9152027368545532, 0.9137498140335083, 0.9170519113540649, 0.9225993752479553, 0.9181085824966431, 0.9257693886756897, 0.9298639297485352, 0.932769775390625, 0.9311847686767578, 0.9332981109619141, 0.9389776587486267, 0.9358077049255371, 0.9366002082824707, 0.939638078212738, 0.9424118399620056, 0.9446572661399841, 0.9429401755332947, 0.9470347166061401], "val_loss": [1.0837994813919067, 0.7787184119224548, 0.6581798791885376, 0.5588205456733704, 0.5211965441703796, 0.48547834157943726, 0.4654988944530487, 0.4367724657058716, 0.4182399809360504, 0.4076942205429077, 0.3836296796798706, 0.39119094610214233, 0.36981257796287537, 0.36005306243896484, 0.35902971029281616, 0.3611384332180023, 0.35441771149635315, 0.3399984836578369, 0.35218489170074463, 0.3437458574771881, 0.3306041657924652, 0.328652024269104, 0.33810412883758545, 0.32727017998695374, 0.3300616145133972, 0.3393808901309967, 0.3410669267177582, 0.33473148941993713, 0.330657422542572, 0.3316531479358673, 0.3457410931587219, 0.33231446146965027, 0.3530210852622986, 0.3232190012931824, 0.3502233922481537, 0.3343568444252014, 0.3445298373699188, 0.33321285247802734, 0.35120686888694763, 0.346760630607605, 0.3519532382488251, 0.34436413645744324, 0.359435111284256, 0.3544517755508423, 0.3613225817680359, 0.3637554943561554, 0.3654499650001526, 0.36396655440330505, 0.37516146898269653, 0.3744862377643585], "val_accuracy": [0.6306666731834412, 0.6986666917800903, 0.75, 0.7776666879653931, 0.781333327293396, 0.8130000233650208, 0.8293333053588867, 0.8420000076293945, 0.8446666598320007, 0.8510000109672546, 0.8576666712760925, 0.8456666469573975, 0.8640000224113464, 0.8676666617393494, 0.8663333058357239, 0.862333357334137, 0.8733333349227905, 0.878333330154419, 0.8709999918937683, 0.871999979019165, 0.8809999823570251, 0.8776666522026062, 0.874666690826416, 0.8820000290870667, 0.8763333559036255, 0.8796666860580444, 0.871666669845581, 0.8826666474342346, 0.8826666474342346, 0.8833333253860474, 0.8756666779518127, 0.8816666603088379, 0.878333330154419, 0.8816666603088379, 0.8849999904632568, 0.8883333206176758, 0.8836666941642761, 0.8866666555404663, 0.8880000114440918, 0.8913333415985107, 0.8866666555404663, 0.8889999985694885, 0.8913333415985107, 0.887666642665863, 0.893666684627533, 0.890333354473114, 0.8926666378974915, 0.890999972820282, 0.8883333206176758, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8022857308387756, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214275360107422, 1.6233391761779785, 1.1547750234603882, 1.0036667585372925, 0.8771291375160217, 0.8595367074012756, 0.7912902235984802, 0.7571914792060852, 0.7508690357208252, 0.7139402627944946, 0.7036150097846985, 0.6799643635749817, 0.6598116755485535, 0.6397497057914734, 0.6355875730514526, 0.6380391120910645, 0.6132915019989014, 0.596146821975708, 0.5891056656837463, 0.5788952708244324, 0.5795629620552063], "accuracy": [0.26244881749153137, 0.49689605832099915, 0.5894861817359924, 0.6460176706314087, 0.6865671873092651, 0.6893408894538879, 0.7077004313468933, 0.7215691208839417, 0.7265883088111877, 0.7338528633117676, 0.7407211661338806, 0.7524765729904175, 0.7530049085617065, 0.7629110813140869, 0.7684586048126221, 0.759080708026886, 0.7750627398490906, 0.7784969210624695, 0.7852331399917603, 0.7864218950271606, 0.7837802171707153], "val_loss": [1.9327610731124878, 1.0974708795547485, 0.8677117228507996, 0.7502861618995667, 0.8081178665161133, 0.7083425521850586, 0.6645282506942749, 0.6529385447502136, 0.6287539005279541, 0.5981436371803284, 0.5811503529548645, 0.5553431510925293, 0.5425116419792175, 0.5660162568092346, 0.5284987688064575, 0.5209004878997803, 0.5604130029678345, 0.5070492625236511, 0.5443230271339417, 0.5110865235328674, 0.5604463815689087], "val_accuracy": [0.5820000171661377, 0.6476666927337646, 0.7016666531562805, 0.7366666793823242, 0.6886666417121887, 0.7286666631698608, 0.75, 0.7506666779518127, 0.7493333220481873, 0.7789999842643738, 0.7743333578109741, 0.7829999923706055, 0.796999990940094, 0.7796666622161865, 0.8069999814033508, 0.8086666464805603, 0.7713333368301392, 0.8059999942779541, 0.7919999957084656, 0.7983333468437195, 0.7716666460037231]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 2], [26, 59, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 2, 5, 5, 9], [1, 2, 0, 4, 0, 3, 1], [16, 1, 15], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 3, 13, 8, 5, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3039538860321045, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 2, 5, 4, 7, 1, 1, 8], [2, 2, 0, 4, 0, 3, 1, 5, 1, 5, 5], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [9, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 23, 12, 11, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), alpha), tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.sqrt(grad), alpha), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034915924072266, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 9], [0, 0, 1, 0, 2], [0, 39, 39, 81], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4, 8, 2, 2], [2, 0, 3, 1, 0, 4, 1, 3, 0], [16, 1, 45], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [8, 3, 0, 6, 7, 2, 8, 3, 7, 2], [0, 1, 4, 4, 0, 7, 1, 3], [92, 2], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035268783569336, 2.3025851249694824, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]