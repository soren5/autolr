[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210508346557617, 1.5977574586868286, 1.1800079345703125, 0.9849640130996704, 0.8886692523956299, 0.8217947483062744, 0.7916432619094849, 0.7748580574989319, 0.7209407091140747, 0.7212598323822021, 0.6750835180282593, 0.6600283980369568, 0.660245418548584, 0.6221898198127747, 0.6173906922340393, 0.6164095401763916, 0.6039397120475769, 0.5720572471618652, 0.5927885174751282, 0.576879620552063, 0.5517413020133972, 0.5516476035118103, 0.552761435508728, 0.5459786653518677, 0.5230618119239807, 0.5320810675621033, 0.5269521474838257, 0.5039477348327637, 0.5040075778961182, 0.49597030878067017, 0.49787506461143494, 0.4865957498550415, 0.4677399694919586, 0.46647530794143677, 0.4689258337020874, 0.46198880672454834, 0.45488518476486206, 0.452144980430603, 0.4532158076763153], "accuracy": [0.2615242302417755, 0.5124818682670593, 0.5892220139503479, 0.6428477168083191, 0.6732267737388611, 0.700171709060669, 0.7098137736320496, 0.7112666964530945, 0.7378153204917908, 0.7302865982055664, 0.7519482374191284, 0.7516840696334839, 0.7495707273483276, 0.7721568942070007, 0.769911527633667, 0.7680623531341553, 0.7758552432060242, 0.7872143983840942, 0.7803460359573364, 0.7889314293861389, 0.796328067779541, 0.7946110367774963, 0.7951393723487854, 0.7992339134216309, 0.804649293422699, 0.8012151718139648, 0.8049134612083435, 0.8132346868515015, 0.816008448600769, 0.8191784620285034, 0.8125742673873901, 0.8193105459213257, 0.8253863453865051, 0.8309338092803955, 0.8271034359931946, 0.8273676037788391, 0.8322546482086182, 0.8310658931732178, 0.8318583965301514], "val_loss": [1.9128342866897583, 1.0733890533447266, 0.8854813575744629, 0.7716697454452515, 0.713005542755127, 0.7722288370132446, 0.6679764986038208, 0.6228401064872742, 0.5977795124053955, 0.6150212287902832, 0.5521373152732849, 0.6536955237388611, 0.5600363612174988, 0.5805001258850098, 0.5395144820213318, 0.5081356167793274, 0.5033530592918396, 0.4901266396045685, 0.5097254514694214, 0.4913892149925232, 0.4741678833961487, 0.491538405418396, 0.48296085000038147, 0.4808129072189331, 0.4768291115760803, 0.4740082919597626, 0.45106959342956543, 0.44304004311561584, 0.44675931334495544, 0.4535524845123291, 0.4548898935317993, 0.43331193923950195, 0.44169023633003235, 0.4287673234939575, 0.4335152506828308, 0.42632609605789185, 0.4236066937446594, 0.44071927666664124, 0.4381968677043915], "val_accuracy": [0.6029999852180481, 0.6476666927337646, 0.6859999895095825, 0.7163333296775818, 0.7336666584014893, 0.7250000238418579, 0.7453333139419556, 0.7553333044052124, 0.7770000100135803, 0.7459999918937683, 0.7953333258628845, 0.7483333349227905, 0.7846666574478149, 0.7703333497047424, 0.7903333306312561, 0.8103333115577698, 0.8143333196640015, 0.8220000267028809, 0.809333324432373, 0.8173333406448364, 0.8220000267028809, 0.8230000138282776, 0.8216666579246521, 0.8299999833106995, 0.8316666483879089, 0.8253333568572998, 0.8330000042915344, 0.8370000123977661, 0.8429999947547913, 0.8289999961853027, 0.82833331823349, 0.8366666436195374, 0.840666651725769, 0.846666693687439, 0.8429999947547913, 0.8446666598320007, 0.8420000076293945, 0.8356666564941406, 0.8336666822433472]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 5, 3, 1, 3, 5], [0, 0, 3, 0, 2], [26, 68, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 0, 5, 5, 4], [2, 4, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [5, 3, 0, 2, 1, 1, 2, 7, 2, 1, 0, 0, 2, 2, 9, 9], [0, 1, 4, 4, 4, 0, 7, 0, 5], [0, 99, 67, 0, 36], [1], [0], [1], [0]], "fitness": -0.11314285546541214, "mapping_values": [1, 7, 4, 3, 2, 12, 7, 5, 2, 25, 16, 9, 5, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(grad, grad))), tf.math.add(grad, tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.math.add(grad, tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.307353973388672, 2.303683042526245, 2.301915407180786, 2.302657127380371, 2.3026623725891113, 2.3027267456054688, 2.3027095794677734], "accuracy": [0.0936468094587326, 0.09576013684272766, 0.10355303436517715, 0.11372341960668564, 0.10434553027153015, 0.10474177449941635, 0.09998679161071777], "val_loss": [2.3044426441192627, 2.3022959232330322, 2.3024191856384277, 2.302645206451416, 2.302659273147583, 2.3026394844055176, 2.3026583194732666], "val_accuracy": [0.09166666865348816, 0.10999999940395355, 0.10700000077486038, 0.10166666656732559, 0.10066666454076767, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [9, 2, 9, 1, 0, 5], [3, 0, 1, 0, 0], [26, 30, 39], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 7, 2, 5], [4, 0, 3, 1, 3], [65, 1], [0, 0, 0, 1, 1, 1], [0, 7, 2], [0, 6, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30838.322265625, 4499143.0, 76495816.0, 542545088.0, 2407482368.0, 7737608192.0], "accuracy": [0.09259014576673508, 0.10342095047235489, 0.10289261490106583, 0.10210011899471283, 0.09760929644107819, 0.10474177449941635], "val_loss": [302496.6875, 16218156.0, 173910768.0, 947803584.0, 3549684480.0, 10469683200.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [93, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 0, 5, 4], [2, 2, 1, 4, 0, 3, 1], [16, 35], [0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 3, 0, 2, 5], [5, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 12, 7, 5, 1, 9, 5, 4, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(beta, alpha)), tf.math.negative(tf.math.negative(tf.math.square(grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.square(grad), alpha)), alpha), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035409450531006, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 8, 5], [0, 0, 0, 2, 2], [26, 31, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 1, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 0, 3], [0, 1, 1, 4], [13], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 4, 2, 2, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.394366502761841, 2.305868625640869, 2.3032467365264893, 2.30328369140625, 2.302978754043579, 2.303050994873047, 2.302910327911377], "accuracy": [0.189274862408638, 0.09747721254825592, 0.09813763201236725, 0.09853387624025345, 0.09668471664190292, 0.09509972482919693, 0.09932637959718704], "val_loss": [2.309649705886841, 2.302912473678589, 2.3026835918426514, 2.3025705814361572, 2.3025407791137695, 2.302513599395752, 2.302642345428467], "val_accuracy": [0.1003333330154419, 0.10100000351667404, 0.09933333098888397, 0.0989999994635582, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]