[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8125714063644409, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2077956199645996, 1.603568196296692, 1.106816053390503, 0.9948978424072266, 0.880644679069519, 0.8284850716590881, 0.7796814441680908, 0.7321919202804565, 0.7293136119842529, 0.72394198179245, 0.6740251779556274, 0.6701556444168091, 0.6638967990875244, 0.6320091485977173, 0.6414196491241455, 0.6170222163200378, 0.6010438203811646, 0.5918440818786621, 0.5842657685279846, 0.5679095983505249, 0.5607061982154846, 0.5639150142669678, 0.5405072569847107, 0.5400366187095642], "accuracy": [0.2690529525279999, 0.5066701769828796, 0.615770697593689, 0.6412627100944519, 0.6796988248825073, 0.6960771083831787, 0.7104741930961609, 0.7273808121681213, 0.7293620109558105, 0.7338528633117676, 0.7528728246688843, 0.750759482383728, 0.7598732113838196, 0.7728173136711121, 0.7577598690986633, 0.770439863204956, 0.7784969210624695, 0.7799497842788696, 0.7854973077774048, 0.793422281742096, 0.7897239327430725, 0.789988100528717, 0.802271842956543, 0.798309326171875], "val_loss": [1.919478178024292, 1.1024399995803833, 0.9172490239143372, 0.8140309453010559, 0.7262259125709534, 0.7025750875473022, 0.6733057498931885, 0.649065375328064, 0.6366153359413147, 0.6216742992401123, 0.6105074286460876, 0.5904983878135681, 0.5637547373771667, 0.6187524199485779, 0.573774516582489, 0.600098729133606, 0.5367822051048279, 0.542741596698761, 0.5189078450202942, 0.5109235048294067, 0.5170069932937622, 0.5054863095283508, 0.4966624677181244, 0.5000550150871277], "val_accuracy": [0.5286666750907898, 0.6610000133514404, 0.6579999923706055, 0.6963333487510681, 0.7226666808128357, 0.7323333621025085, 0.7316666841506958, 0.762333333492279, 0.7649999856948853, 0.7509999871253967, 0.7473333477973938, 0.7763333320617676, 0.7826666831970215, 0.753000020980835, 0.7699999809265137, 0.7673333287239075, 0.8029999732971191, 0.7863333225250244, 0.8106666803359985, 0.8040000200271606, 0.8040000200271606, 0.8069999814033508, 0.8056666851043701, 0.8033333420753479]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [4, 2, 3, 1, 3, 7], [2, 0, 1, 0, 3], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 7, 3, 7, 4, 0, 4], [0, 6, 6, 0, 4, 2], [0, 28], [1], [0], [5], [0]], "fitness": -0.7922857403755188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.negative(tf.math.pow(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"lossaccuracy": [0.2001056671142578, 0.13921542465686798, 0.09879804402589798, 0.10593052208423615, 0.14581957459449768, 0.2145027071237564, 0.39941883087158203, 0.5180293321609497, 0.5995244979858398, 0.6213181614875793, 0.6489235162734985, 0.6799629926681519, 0.6973979473114014, 0.7025492191314697, 0.7186633348464966, 0.7301545143127441, 0.7244749665260315, 0.7512878179550171, 0.7617223858833313, 0.7635715007781982, 0.7629110813140869, 0.7651565074920654, 0.7877426743507385, 0.7755910754203796, 0.7957997918128967], "val_loss": [2.1341867446899414, 2.303635835647583, 2.3016064167022705, 2.2950170040130615, 2.1571483612060547, 1.713443636894226, 1.2460722923278809, 1.400076985359192, 0.9559382200241089, 0.8756488561630249, 0.7030120491981506, 0.8208606839179993, 0.7747735977172852, 0.7795742154121399, 0.6454117298126221, 0.6269073486328125, 0.5964913964271545, 0.5987254977226257, 0.5984142422676086, 0.5211958885192871, 0.544287919998169, 0.553298830986023, 0.5729974508285522, 0.5835856199264526, 0.5541463494300842], "val_accuracy": [0.16866666078567505, 0.10066666454076767, 0.10066666454076767, 0.10599999874830246, 0.20633333921432495, 0.34200000762939453, 0.5166666507720947, 0.49566665291786194, 0.6256666779518127, 0.6859999895095825, 0.7436666488647461, 0.6800000071525574, 0.7160000205039978, 0.7139999866485596, 0.7576666474342346, 0.7446666955947876, 0.7736666798591614, 0.7426666617393494, 0.7593333125114441, 0.7870000004768372, 0.7826666831970215, 0.7793333530426025, 0.749666690826416, 0.7636666893959045, 0.7870000004768372]}, "mapping_values": [1, 7, 3, 4, 2, 1, 0, 1, 0, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 2, 4, 1, 3, 0], [0, 0, 1, 0, 2], [56, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 3, 0, 6, 3, 8, 2, 4, 1, 7, 0, 7, 7, 4, 8, 2, 5, 6, 6, 2], [2, 5, 0, 1, 0, 4, 2, 4, 5, 4, 2, 1, 5, 0, 1], [16, 1, 65], [0, 0, 1, 1], [0, 7], [0, 6], [35], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 35, 20, 15, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), tf.math.add(tf.math.pow(beta, tf.math.sqrt(tf.math.add(grad, grad))), tf.math.square(grad))), tf.math.divide_no_nan(beta, alpha)))), tf.math.divide_no_nan(tf.math.add(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 2, 4, 3, 8, 2], [2, 1, 3, 5, 0], [16, 1], [0, 0, 1, 0, 1, 0], [0, 7, 7, 9], [0, 2], [0, 47], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 0, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3073041439056396, 2.3574371337890625, 56.31211853027344, 13933.8232421875, 3642520.0, 914503680.0], "accuracy": [0.09879804402589798, 0.10659094154834747, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.30186128616333, 3.3630337715148926, 532.1190795898438, 135599.484375, 34711000.0, 8886008832.0], "val_accuracy": [0.1003333330154419, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 39], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102357387542725, 2.3104400634765625, 2.309967041015625, 2.3093056678771973, 2.3097026348114014, 2.310056209564209], "accuracy": [0.08902391046285629, 0.09457138925790787, 0.09615638852119446, 0.08928807079792023, 0.09311848133802414, 0.09496764093637466], "val_loss": [2.3081398010253906, 2.3081398010253906, 2.3081398010253906, 2.3081398010253906, 2.3081398010253906, 2.3081398010253906], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]