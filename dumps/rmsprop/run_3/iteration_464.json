[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.800000011920929, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2069218158721924, 1.5941869020462036, 1.1476027965545654, 0.9747554063796997, 0.8933449387550354, 0.831486165523529, 0.7885581851005554, 0.7461466193199158, 0.7638865113258362, 0.6989145278930664, 0.6789845824241638, 0.6799442768096924, 0.651296079158783, 0.6378287076950073, 0.6244230270385742, 0.6187689900398254, 0.6085690855979919, 0.5866349339485168, 0.5919511914253235, 0.5724911093711853, 0.5705079436302185, 0.5665069222450256, 0.5568026304244995, 0.5297098159790039, 0.5374184846878052, 0.5232669115066528, 0.5207119584083557, 0.5082186460494995, 0.5196081399917603, 0.49688178300857544, 0.4880984425544739, 0.4964384436607361, 0.4814416170120239, 0.4855203330516815, 0.47038108110427856, 0.4668443500995636, 0.4733235538005829, 0.4631538689136505, 0.45937615633010864, 0.4420109987258911, 0.4527736008167267], "accuracy": [0.27063795924186707, 0.5116893649101257, 0.6015057563781738, 0.6565843224525452, 0.6783780455589294, 0.7018887996673584, 0.7088891863822937, 0.7306828498840332, 0.7199841737747192, 0.7396644949913025, 0.7526086568832397, 0.7461365461349487, 0.7606657147407532, 0.7631752490997314, 0.7718927264213562, 0.7758552432060242, 0.7802139520645142, 0.7833839654922485, 0.7820631265640259, 0.7872143983840942, 0.7932901978492737, 0.7897239327430725, 0.7971205711364746, 0.8043851256370544, 0.8013472557067871, 0.805177628993988, 0.8090080618858337, 0.8125742673873901, 0.8045172095298767, 0.8186501264572144, 0.8215559124946594, 0.8207634687423706, 0.8244617581367493, 0.8231409192085266, 0.828292191028595, 0.8267071843147278, 0.8220842480659485, 0.8314621448516846, 0.8308017253875732, 0.8401796221733093, 0.8314621448516846], "val_loss": [1.9120224714279175, 1.1131583452224731, 0.8881263732910156, 0.7736485004425049, 0.8265467286109924, 0.6950636506080627, 0.6845373511314392, 0.6873466968536377, 0.6218529343605042, 0.5912392735481262, 0.601129412651062, 0.6542651653289795, 0.5795992612838745, 0.5775490999221802, 0.5438316464424133, 0.5376895070075989, 0.532956600189209, 0.5561076998710632, 0.524569571018219, 0.5505945086479187, 0.5197545886039734, 0.4983447194099426, 0.5031880140304565, 0.49970632791519165, 0.5318199992179871, 0.4884023368358612, 0.5113658308982849, 0.4820232689380646, 0.47363168001174927, 0.4618685245513916, 0.47863849997520447, 0.4587237238883972, 0.4701639711856842, 0.45077255368232727, 0.4572756290435791, 0.4426735043525696, 0.4531087279319763, 0.457629919052124, 0.44055551290512085, 0.4530952572822571, 0.44702157378196716], "val_accuracy": [0.593999981880188, 0.6513333320617676, 0.6746666431427002, 0.7193333506584167, 0.6899999976158142, 0.734666645526886, 0.7506666779518127, 0.7486666440963745, 0.7599999904632568, 0.781000018119812, 0.7833333611488342, 0.7516666650772095, 0.7906666398048401, 0.7900000214576721, 0.8090000152587891, 0.8036666512489319, 0.8066666722297668, 0.7863333225250244, 0.8133333325386047, 0.7943333387374878, 0.8050000071525574, 0.8169999718666077, 0.8209999799728394, 0.8220000267028809, 0.7876666784286499, 0.8216666579246521, 0.8113333582878113, 0.8199999928474426, 0.8320000171661377, 0.8320000171661377, 0.8306666612625122, 0.8373333215713501, 0.8303333520889282, 0.8423333168029785, 0.8389999866485596, 0.8429999947547913, 0.8399999737739563, 0.8370000123977661, 0.8426666855812073, 0.8299999833106995, 0.8403333425521851]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5, 5], [0, 0, 1, 1, 2], [42, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 0], [75, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 7, 8, 1, 4, 9], [0, 6, 3], [0, 65], [1], [0], [7], [0]], "fitness": -0.2314285784959793, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), sigma))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4012908935546875, 2.37939190864563, 2.3042051792144775, 2.304164409637451, 2.3031229972839355, 2.303168296813965], "accuracy": [0.19112402200698853, 0.10619468986988068, 0.09536388516426086, 0.0956280529499054, 0.09985470771789551, 0.09840179979801178], "val_loss": [2.640144109725952, 2.304135799407959, 2.303285598754883, 2.3029072284698486, 2.302746534347534, 2.3027777671813965], "val_accuracy": [0.23466666042804718, 0.09866666793823242, 0.10000000149011612, 0.10233332961797714, 0.10000000149011612, 0.10233332961797714]}, "mapping_values": [1, 12, 7, 5, 2, 7, 4, 3, 1, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 1, 2, 3, 0, 9], [0, 0, 1, 0, 2], [0, 39, 39, 68], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 1, 6, 3, 2, 2], [2, 0, 3, 1, 0], [62, 1], [0, 0, 1, 1], [0, 5], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 4, 2, 2, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033504486083984, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 2, 3, 1, 3, 5, 7, 8, 9], [0, 2, 0, 0, 2], [0, 39, 39, 55], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0], [3, 7], [0, 6], [73], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 4, 12, 7, 5, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09179764986038208, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 65, 39], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 0], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 0, 1, 1], [0, 7, 1, 3], [3, 5, 3, 5], [75], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(sigma, grad), tf.math.multiply(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105545043945312, 2.3107571601867676, 2.3093807697296143, 2.3099348545074463, 2.3092455863952637, 2.310965061187744], "accuracy": [0.09008057415485382, 0.08994849026203156, 0.08994849026203156, 0.0936468094587326, 0.09259014576673508, 0.09206181764602661], "val_loss": [2.3074791431427, 2.3074791431427, 2.3074791431427, 2.3074791431427, 2.3074791431427, 2.3074791431427], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]