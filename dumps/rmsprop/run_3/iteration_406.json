[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8285714387893677, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211134433746338, 1.6045799255371094, 1.1418291330337524, 0.9693408608436584, 0.8975014686584473, 0.8139230608940125, 0.7865963578224182, 0.7587546110153198, 0.7368558049201965, 0.704481840133667, 0.6870145797729492, 0.6558389663696289, 0.6660605669021606, 0.638210117816925, 0.6242290139198303, 0.6030809283256531, 0.5960783958435059, 0.5923729538917542, 0.5748759508132935, 0.5546939969062805, 0.5738487243652344, 0.5434871912002563, 0.5503765344619751, 0.5272563695907593, 0.5150253772735596, 0.5127754807472229, 0.5180395841598511, 0.5112202763557434, 0.5039490461349487, 0.4948548972606659, 0.48600441217422485, 0.4790055453777313, 0.48348715901374817, 0.4809093773365021, 0.47076886892318726, 0.4635230600833893, 0.4488506615161896, 0.45626533031463623, 0.43477198481559753, 0.43616989254951477, 0.4401513636112213, 0.43100297451019287, 0.4189576208591461], "accuracy": [0.2607317268848419, 0.5102364420890808, 0.6022982597351074, 0.6568484902381897, 0.6725663542747498, 0.7071720957756042, 0.7119271159172058, 0.7206445932388306, 0.7345132827758789, 0.7432307600975037, 0.7445515990257263, 0.7535332441329956, 0.752740740776062, 0.7627789974212646, 0.7700436115264893, 0.7740060687065125, 0.7761194109916687, 0.7799497842788696, 0.7868181467056274, 0.7956677079200745, 0.7857614755630493, 0.7964601516723633, 0.7935543656349182, 0.8112534880638123, 0.8101968169212341, 0.8142913579940796, 0.8030643463134766, 0.813498854637146, 0.816008448600769, 0.8183859586715698, 0.8239334225654602, 0.8278959393501282, 0.8224804997444153, 0.8215559124946594, 0.8294808864593506, 0.8325188159942627, 0.8343679904937744, 0.8319904804229736, 0.843481719493866, 0.8407079577445984, 0.8399154543876648, 0.8445383906364441, 0.8502179384231567], "val_loss": [1.9239881038665771, 1.0983105897903442, 0.9026557803153992, 0.7906743288040161, 0.7304872274398804, 0.6876526474952698, 0.6720826625823975, 0.6602968573570251, 0.6138840317726135, 0.5966342091560364, 0.6023556590080261, 0.5812140703201294, 0.5788787603378296, 0.5804979801177979, 0.5424574613571167, 0.5359174609184265, 0.5304573178291321, 0.5186362266540527, 0.506083607673645, 0.5088130235671997, 0.4970759153366089, 0.5065998435020447, 0.47925683856010437, 0.47798335552215576, 0.4816315174102783, 0.46896782517433167, 0.46954861283302307, 0.4915005564689636, 0.4801957905292511, 0.45672574639320374, 0.46776553988456726, 0.4639842212200165, 0.46106672286987305, 0.44963404536247253, 0.4673536717891693, 0.4418174624443054, 0.4825207591056824, 0.43276751041412354, 0.42973247170448303, 0.42247113585472107, 0.434471994638443, 0.4211510121822357, 0.42042332887649536], "val_accuracy": [0.6263333559036255, 0.6610000133514404, 0.690666675567627, 0.7073333263397217, 0.7403333187103271, 0.7426666617393494, 0.7506666779518127, 0.7593333125114441, 0.7706666588783264, 0.7646666765213013, 0.7786666750907898, 0.7839999794960022, 0.7846666574478149, 0.7673333287239075, 0.7956666946411133, 0.793666660785675, 0.7923333048820496, 0.8063333630561829, 0.8083333373069763, 0.8103333115577698, 0.8076666593551636, 0.8036666512489319, 0.8196666836738586, 0.8243333101272583, 0.8153333067893982, 0.8253333568572998, 0.8173333406448364, 0.8086666464805603, 0.8076666593551636, 0.8270000219345093, 0.8199999928474426, 0.815666675567627, 0.8106666803359985, 0.82833331823349, 0.8216666579246521, 0.8236666917800903, 0.809333324432373, 0.8410000205039978, 0.8343333601951599, 0.8396666646003723, 0.8323333263397217, 0.8343333601951599, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [9, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 3], [16, 87], [0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 7, 4, 0, 2, 9], [0, 6, 3], [0, 55], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 1, 0, 1, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), sigma))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [95.45756530761719, 11054.7919921875, 181674.4375, 1306386.375, 5635026.0, 18383290.0], "accuracy": [0.09985470771789551, 0.09721305221319199, 0.10645885765552521, 0.09708096832036972, 0.09496764093637466, 0.10302469879388809], "val_loss": [806.6986694335938, 39595.26171875, 420762.03125, 2287025.0, 8555502.0, 25219044.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 7, 1, 3, 3, 1, 4, 0, 2, 1, 4, 4, 6, 9, 0, 0, 5], [0, 0, 1, 0, 2, 3, 2, 3, 3, 1, 0, 1], [0, 78, 39, 10, 58], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 0, 8, 2], [2, 0, 3, 2, 0], [16, 1], [1, 1, 1, 1], [8, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.0965714305639267, "mapping_values": [1, 30, 18, 12, 5, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.pow(grad, grad), tf.math.negative(tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.math.pow(grad, grad)), tf.math.divide_no_nan(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.math.square(alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310455322265625, 2.3110828399658203, 2.308554172515869, 2.309983253479004, 2.3094115257263184, 2.309195041656494], "accuracy": [0.09338264167308807, 0.09179764986038208, 0.09787346422672272, 0.0940430611371994, 0.09642054885625839, 0.09206181764602661], "val_loss": [2.3079609870910645, 2.3079609870910645, 2.3079609870910645, 2.3079609870910645, 2.3079609870910645, 2.3079609870910645], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 3, 2], [2, 0, 3, 1, 0], [93, 1], [0, 0, 0, 1, 1, 1], [0, 7, 7], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309891939163208, 2.3084280490875244, 2.3100838661193848, 2.310476541519165, 2.3098881244659424, 2.3090145587921143], "accuracy": [0.09298639744520187, 0.09642054885625839, 0.09047681838274002, 0.09576013684272766, 0.09206181764602661, 0.09457138925790787], "val_loss": [2.3084909915924072, 2.3084909915924072, 2.3084909915924072, 2.3084909915924072, 2.3084909915924072, 2.3084909915924072], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 2, 6, 6, 3, 8, 2], [2, 0, 3, 1, 0], [45, 1], [0, 0, 0, 1, 1, 1], [0, 7, 4], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094637393951416, 2.310955047607422, 2.3094468116760254, 2.310556173324585, 2.310211181640625, 2.309061288833618], "accuracy": [0.09325055778026581, 0.09192973375320435, 0.09087307006120682, 0.09338264167308807, 0.08994849026203156, 0.09126931428909302], "val_loss": [2.3083608150482178, 2.3083608150482178, 2.3083608150482178, 2.3083608150482178, 2.3083608150482178, 2.3083608150482178], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]