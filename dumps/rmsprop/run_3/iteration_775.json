[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.805142879486084, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208989381790161, 1.600115418434143, 1.1659601926803589, 0.9982897639274597, 0.8786785006523132, 0.8466935157775879, 0.7807915806770325, 0.7402663230895996, 0.7456092238426208, 0.6980288624763489, 0.674915075302124, 0.6778692603111267, 0.6390906572341919, 0.6519736647605896, 0.62655109167099, 0.6176226735115051, 0.6032122373580933, 0.5937914848327637, 0.5910273194313049, 0.570830762386322, 0.571416974067688, 0.5486535429954529, 0.5362074375152588, 0.5298677682876587, 0.5284339785575867, 0.5223466157913208, 0.5060279369354248, 0.5105742812156677, 0.4949764907360077, 0.4819493591785431, 0.4783827066421509, 0.4850618541240692, 0.4847995638847351], "accuracy": [0.27578920125961304, 0.5071985125541687, 0.585919976234436, 0.6458855867385864, 0.6845859289169312, 0.687491774559021, 0.7153612375259399, 0.7236824631690979, 0.7257958054542542, 0.7417778372764587, 0.7523444890975952, 0.7461365461349487, 0.7625148296356201, 0.7582882046699524, 0.767930269241333, 0.7701756954193115, 0.7732135653495789, 0.7769119143486023, 0.7744023203849792, 0.7917051911354065, 0.7815347909927368, 0.793422281742096, 0.7951393723487854, 0.804649293422699, 0.800818920135498, 0.8057059645652771, 0.8107251524925232, 0.8074230551719666, 0.81548011302948, 0.8232730031013489, 0.8239334225654602, 0.8202351331710815, 0.8191784620285034], "val_loss": [1.9171100854873657, 1.0962886810302734, 0.93637615442276, 0.8335118889808655, 0.7363460063934326, 0.6957014203071594, 0.6810256242752075, 0.6891915798187256, 0.633036732673645, 0.6392869353294373, 0.6665027737617493, 0.5937438011169434, 0.6030533313751221, 0.6191903352737427, 0.5688585042953491, 0.5746926069259644, 0.5505831837654114, 0.5433897376060486, 0.5534746646881104, 0.5729384422302246, 0.521224856376648, 0.5166944265365601, 0.5180612206459045, 0.5087602734565735, 0.5128179788589478, 0.5109715461730957, 0.5324931740760803, 0.4882594347000122, 0.4905063211917877, 0.5054712891578674, 0.48596614599227905, 0.4799267053604126, 0.5060826539993286], "val_accuracy": [0.5096666812896729, 0.6539999842643738, 0.6790000200271606, 0.6840000152587891, 0.7333333492279053, 0.7453333139419556, 0.7443333268165588, 0.7213333249092102, 0.7566666603088379, 0.7556666731834412, 0.7476666569709778, 0.7893333435058594, 0.7643333077430725, 0.7446666955947876, 0.7803333401679993, 0.7763333320617676, 0.800000011920929, 0.7986666560173035, 0.7903333306312561, 0.7743333578109741, 0.8053333163261414, 0.800000011920929, 0.812333345413208, 0.8146666884422302, 0.79666668176651, 0.8090000152587891, 0.8006666898727417, 0.8246666789054871, 0.8146666884422302, 0.8090000152587891, 0.8190000057220459, 0.8176666498184204, 0.809333324432373]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 8, 3, 1, 8, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 7, 4, 7, 0, 5, 5, 4, 9], [1, 2, 0, 4, 0, 3, 1], [16, 1, 74], [0, 0, 0, 1, 0, 1, 1, 0], [7, 3, 8, 2, 9], [0, 5, 1, 4], [18, 92], [0, 0, 1, 1], [0, 6], [1, 7], [0]], "fitness": -0.11828571557998657, "mapping_values": [1, 1, 0, 1, 1, 14, 9, 5, 3, 8, 5, 3, 2, 4, 2, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, grad))", "other_info": {"loss": [7.728726647662182e+16, 8.820474692553933e+16, 8.756430717216358e+16, 8.84400252340142e+16, 8.604208486311526e+16, 8.816736353019494e+16], "accuracy": [0.10711926966905594, 0.09932637959718704, 0.10698718577623367, 0.10196803510189056, 0.10249637067317963, 0.1026284471154213], "val_loss": [6.18073711181824e+16, 6.18073711181824e+16, 6.18073711181824e+16, 6.18073711181824e+16, 6.18073711181824e+16, 6.18073711181824e+16], "val_accuracy": [0.11699999868869781, 0.11699999868869781, 0.11699999868869781, 0.11699999868869781, 0.11699999868869781, 0.11699999868869781]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 9, 5], [3, 0, 3, 0, 2], [84, 24, 39], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [2, 9, 7, 7, 0, 5, 7, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 5, 0, 2], [0, 1, 1, 4], [0], [0, 0, 1], [0, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 3, 2, 1, 1, 7, 4, 3, 1, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3182103633880615, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.33273983001709, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 2, 5], [0, 0, 0, 0, 2], [24, 39, 88, 90], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 4, 0, 5, 7, 4], [1, 5, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 9, 2], [0, 1, 1, 4], [0, 55], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 1, 0, 1, 0, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [67062.7890625, 2.7139947414398193, 2.4761807918548584, 2.5921084880828857, 2.6616578102111816, 2.5400612354278564, 2.653742551803589, 2.618194818496704], "accuracy": [0.09985470771789551, 0.09972262382507324, 0.10355303436517715, 0.1018359512090683, 0.09800554811954498, 0.10196803510189056, 0.10091137140989304, 0.09694888442754745], "val_loss": [2.7367115020751953, 2.6557605266571045, 2.689272403717041, 2.6278035640716553, 2.8005480766296387, 2.487201452255249, 2.577164649963379, 2.8441998958587646], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10199999809265137, 0.0976666659116745, 0.10066666454076767, 0.10199999809265137, 0.09666666388511658, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [17, 39, 39, 13], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [4, 9, 4, 7, 0, 5, 2, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 1, 1, 1, 1], [7, 4, 0, 2], [0, 1, 1, 4], [78], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 8, 5, 3, 2, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, beta), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [56076.171875, 63632564.0, 15376060.0, 17101500.0, 8157.80322265625, 16249.2197265625], "accuracy": [0.10170386731624603, 0.10236428678035736, 0.09998679161071777, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777], "val_loss": [312121.09375, 3690446.25, 35659668.0, 5687.587890625, 12403.8857421875, 22909.4765625], "val_accuracy": [0.10000000149011612, 0.0976666659116745, 0.0976666659116745, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]