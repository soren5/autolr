[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211758852005005, 1.616866946220398, 1.1697981357574463, 0.9852147698402405, 0.8969141244888306, 0.8345927000045776, 0.8017656803131104, 0.7711785435676575, 0.7204592227935791, 0.7015408277511597, 0.7023685574531555, 0.6951078176498413, 0.6604515314102173, 0.6540271043777466, 0.6340469121932983, 0.6074149012565613, 0.6132510304450989, 0.583380401134491, 0.5910806059837341, 0.5944617390632629, 0.5560501217842102, 0.5477344393730164, 0.5634240508079529, 0.5520210266113281, 0.5346639156341553, 0.5372521281242371, 0.5198961496353149, 0.5126238465309143, 0.5139648914337158, 0.5090232491493225, 0.5005930066108704, 0.4876319468021393, 0.49578747153282166, 0.47824758291244507, 0.4750245213508606, 0.46880558133125305, 0.470009982585907, 0.45435160398483276, 0.45721787214279175, 0.44982898235321045, 0.4502345323562622, 0.4658060073852539, 0.4307207763195038, 0.43906158208847046, 0.4283768832683563, 0.41837772727012634, 0.4267278015613556, 0.423268586397171, 0.4115487337112427, 0.4015878736972809, 0.4009411633014679, 0.4115683436393738, 0.4054955244064331, 0.4097333252429962, 0.39450526237487793], "accuracy": [0.2615242302417755, 0.4951789677143097, 0.5929203629493713, 0.651168942451477, 0.6778497099876404, 0.6934354901313782, 0.7049266695976257, 0.7140403985977173, 0.7304186820983887, 0.7401928305625916, 0.739928662776947, 0.7360982894897461, 0.7564390301704407, 0.7565711140632629, 0.7617223858833313, 0.7713643908500671, 0.7668735980987549, 0.7800818681716919, 0.7759873270988464, 0.7790252566337585, 0.7951393723487854, 0.7988376617431641, 0.7874785661697388, 0.7954035401344299, 0.7988376617431641, 0.8006868362426758, 0.8070268034934998, 0.8057059645652771, 0.8124422430992126, 0.8103289008140564, 0.8150838613510132, 0.8226125836372375, 0.8136309385299683, 0.8236692547798157, 0.8269713521003723, 0.829216718673706, 0.8277638554573059, 0.8334434032440186, 0.8318583965301514, 0.8325188159942627, 0.8370096683502197, 0.8301413059234619, 0.8412362933158875, 0.8374059200286865, 0.8457271456718445, 0.8441421389579773, 0.8455950617790222, 0.8409721255302429, 0.8475762605667114, 0.8524633646011353, 0.8529917001724243, 0.8532558679580688, 0.8506141901016235, 0.8494254350662231, 0.854708731174469], "val_loss": [1.917349934577942, 1.088020920753479, 0.8921898007392883, 0.792959451675415, 0.7086063623428345, 0.6913191676139832, 0.6454869508743286, 0.6292138695716858, 0.6003586649894714, 0.601391077041626, 0.6029912233352661, 0.5539969205856323, 0.568280041217804, 0.5473398566246033, 0.5058554410934448, 0.5317373275756836, 0.49967968463897705, 0.4920486509799957, 0.571401059627533, 0.48677539825439453, 0.4776957929134369, 0.4876878261566162, 0.48351189494132996, 0.4541318714618683, 0.45446956157684326, 0.4572935402393341, 0.4555127024650574, 0.44672346115112305, 0.4404105544090271, 0.44021931290626526, 0.4269258677959442, 0.4378030300140381, 0.42906758189201355, 0.4438880681991577, 0.42149829864501953, 0.4147157669067383, 0.4127027094364166, 0.43876081705093384, 0.4088342785835266, 0.4112480878829956, 0.40682414174079895, 0.40282031893730164, 0.4080990254878998, 0.39871686697006226, 0.3909355401992798, 0.39388060569763184, 0.4139043390750885, 0.3828422725200653, 0.38385021686553955, 0.37755224108695984, 0.41896194219589233, 0.4013403356075287, 0.37909460067749023, 0.38202163577079773, 0.3741842806339264], "val_accuracy": [0.5776666402816772, 0.6486666798591614, 0.6880000233650208, 0.7143333554267883, 0.746999979019165, 0.7519999742507935, 0.7480000257492065, 0.7580000162124634, 0.7756666541099548, 0.7710000276565552, 0.7696666717529297, 0.800000011920929, 0.768666684627533, 0.781000018119812, 0.8083333373069763, 0.7963333129882812, 0.8050000071525574, 0.8109999895095825, 0.7636666893959045, 0.815666675567627, 0.8176666498184204, 0.8149999976158142, 0.8243333101272583, 0.8306666612625122, 0.8253333568572998, 0.8233333230018616, 0.8230000138282776, 0.8306666612625122, 0.8383333086967468, 0.8266666531562805, 0.8460000157356262, 0.8356666564941406, 0.8360000252723694, 0.8386666774749756, 0.8453333377838135, 0.8486666679382324, 0.8496666550636292, 0.82833331823349, 0.8376666903495789, 0.8516666889190674, 0.8423333168029785, 0.8496666550636292, 0.8453333377838135, 0.8560000061988831, 0.8536666631698608, 0.8519999980926514, 0.843999981880188, 0.8550000190734863, 0.856333315372467, 0.8613333106040955, 0.8363333344459534, 0.8453333377838135, 0.859333336353302, 0.8573333621025085, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8057143092155457, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2069993019104004, 1.6015208959579468, 1.1559797525405884, 0.9768257141113281, 0.8598261475563049, 0.8334945440292358, 0.7914383411407471, 0.7749159932136536, 0.7277026176452637, 0.7147504091262817, 0.6874714493751526, 0.6729012131690979, 0.6526839733123779, 0.6290872097015381, 0.6185409426689148, 0.6260747909545898, 0.5978212356567383, 0.5824812054634094, 0.57269686460495, 0.5688902735710144, 0.5622462630271912, 0.561410665512085, 0.5334479212760925, 0.5298976898193359, 0.5386130213737488, 0.5185807943344116, 0.517967939376831, 0.5175714492797852, 0.5255803465843201, 0.49811241030693054, 0.48525333404541016, 0.4706994891166687, 0.48388153314590454, 0.4759121239185333, 0.4754594564437866, 0.4724978804588318, 0.4644722640514374, 0.4633077383041382, 0.4397351145744324, 0.4532330632209778, 0.4450371563434601], "accuracy": [0.2782987654209137, 0.5044247508049011, 0.6042794585227966, 0.6369040012359619, 0.6861709356307983, 0.691850483417511, 0.7108704447746277, 0.7079645991325378, 0.7305507659912109, 0.7312111854553223, 0.7434949278831482, 0.7504953145980835, 0.7607977986335754, 0.7671377658843994, 0.7729493975639343, 0.7604015469551086, 0.7751948237419128, 0.7835160493850708, 0.7907806038856506, 0.7876105904579163, 0.7923656105995178, 0.7980451583862305, 0.8033285140991211, 0.8035926818847656, 0.7987055778503418, 0.8064984679222107, 0.8112534880638123, 0.806630551815033, 0.8063663840293884, 0.8164047002792358, 0.8245938420295715, 0.8305375576019287, 0.8222163319587708, 0.8231409192085266, 0.8251221776008606, 0.8234050869941711, 0.82683926820755, 0.8314621448516846, 0.8381983637809753, 0.8339717388153076, 0.834632158279419], "val_loss": [1.9122682809829712, 1.0908981561660767, 0.9020617008209229, 0.799303412437439, 0.7839704751968384, 0.7525907158851624, 0.7007558345794678, 0.6759061813354492, 0.6807599067687988, 0.6110078692436218, 0.6052885055541992, 0.6314045190811157, 0.5721797943115234, 0.5567960739135742, 0.6673758029937744, 0.5438714027404785, 0.5370561480522156, 0.5195893049240112, 0.5523590445518494, 0.5101175904273987, 0.5357595682144165, 0.4959902763366699, 0.4855937063694, 0.4987751841545105, 0.48866206407546997, 0.47773420810699463, 0.4710870087146759, 0.5349739193916321, 0.4626525044441223, 0.46036165952682495, 0.44905492663383484, 0.4598419964313507, 0.44439923763275146, 0.44374722242355347, 0.48256200551986694, 0.43354305624961853, 0.4390321373939514, 0.4256480634212494, 0.4751127064228058, 0.4299466907978058, 0.4353097677230835], "val_accuracy": [0.5423333048820496, 0.643666684627533, 0.6779999732971191, 0.7036666870117188, 0.7129999995231628, 0.7203333377838135, 0.7179999947547913, 0.7316666841506958, 0.7356666922569275, 0.7736666798591614, 0.7703333497047424, 0.7509999871253967, 0.7860000133514404, 0.8040000200271606, 0.7279999852180481, 0.8043333292007446, 0.8103333115577698, 0.8169999718666077, 0.7799999713897705, 0.8176666498184204, 0.7853333353996277, 0.8196666836738586, 0.8209999799728394, 0.8183333277702332, 0.8143333196640015, 0.8246666789054871, 0.8270000219345093, 0.784333348274231, 0.8320000171661377, 0.8316666483879089, 0.8420000076293945, 0.8263333439826965, 0.8416666388511658, 0.8360000252723694, 0.8276666402816772, 0.8500000238418579, 0.8330000042915344, 0.8483333587646484, 0.8100000023841858, 0.8456666469573975, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 5, 7, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 9, 2, 6, 1, 8, 4], [2, 0, 3, 3, 0], [65, 1], [0, 0, 0, 0, 1, 1, 1, 1], [0, 7, 1, 2], [0, 2, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 2, 0, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), alpha), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3043155670166016, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 1, 3, 3], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 0, 0, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08968432247638702, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 6, 5], [1, 2, 1, 0, 3], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [4, 2, 0, 6, 3, 8, 2, 0, 3, 8, 4, 2, 7, 7, 7, 3, 6, 4, 5, 1, 9, 8, 5, 8, 2, 6, 7, 1, 5, 7, 3, 1, 8, 3, 1, 7, 5, 5, 9, 2, 6, 7, 3, 0, 1, 4], [2, 0, 3, 2, 0, 3, 1, 2, 4, 1, 2, 3, 5, 4, 4, 0, 4, 5, 4, 4, 1, 4, 4, 1, 2, 3, 0, 2, 0, 3], [16, 1, 78, 57, 71, 33, 82], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 0, 0, 0, 1, 1], [0, 8, 1, 5, 0], [2, 1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(alpha, grad), alpha), tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), beta)), tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.square(tf.math.subtract(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta)), tf.math.square(grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.subtract(beta, grad), tf.math.square(tf.math.add(grad, tf.math.multiply(tf.math.subtract(tf.math.sqrt(grad), grad), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.square(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(alpha, tf.math.multiply(grad, grad))))))))), tf.math.negative(alpha)), beta), grad)), tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), beta)))), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.negative(beta)), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 11, 6, 5, 1, 76, 46, 30, 7, 4, 2, 2, 1, 7, 5, 2, 0], "tree_depth": 41}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 23, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [15], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 8, 4, 4, 3, 2, 1, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094968795776367, 2.308924674987793, 2.3103647232055664, 2.3098957538604736, 2.309898853302002, 2.3107144832611084], "accuracy": [0.09959053993225098, 0.09311848133802414, 0.09377889335155487, 0.08915598690509796, 0.08875974267721176, 0.09259014576673508], "val_loss": [2.3082659244537354, 2.3082659244537354, 2.3082659244537354, 2.3082659244537354, 2.3082659244537354, 2.3082659244537354], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]