[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8040000200271606, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2150778770446777, 1.6212246417999268, 1.12868070602417, 0.9973554015159607, 0.8841885924339294, 0.8370577096939087, 0.7823083400726318, 0.7511590123176575, 0.7081663012504578, 0.7035731673240662, 0.6749584674835205, 0.6611546277999878, 0.6500791907310486, 0.6247924566268921, 0.6184549927711487, 0.6012003421783447, 0.59269118309021, 0.5840178728103638, 0.5567323565483093, 0.5600329637527466, 0.5687561631202698, 0.5493863821029663, 0.528285562992096, 0.5204830765724182, 0.5193100571632385, 0.5243545174598694, 0.5005143880844116, 0.48890334367752075, 0.49081793427467346, 0.48232147097587585, 0.4841081202030182, 0.4738413393497467, 0.4736749827861786, 0.4662180244922638, 0.45972153544425964, 0.46223944425582886, 0.44830983877182007, 0.442757785320282, 0.44878721237182617, 0.4390655755996704, 0.42340150475502014, 0.42744195461273193, 0.4260909855365753], "accuracy": [0.26218464970588684, 0.4975564777851105, 0.6069211363792419, 0.6450931429862976, 0.6881521344184875, 0.6926429867744446, 0.7094175219535828, 0.7162858247756958, 0.7327961921691895, 0.7346453666687012, 0.7446836829185486, 0.7483819723129272, 0.7576277852058411, 0.7672698497772217, 0.7660810947418213, 0.7736098170280457, 0.77677983045578, 0.7795535326004028, 0.7895918488502502, 0.7913089394569397, 0.7847048044204712, 0.7915731072425842, 0.8078193068504333, 0.8092722296714783, 0.8053097128868103, 0.8006868362426758, 0.8133667707443237, 0.8232730031013489, 0.817989706993103, 0.8161405324935913, 0.821820080280304, 0.8228767514228821, 0.8222163319587708, 0.8253863453865051, 0.8255184292793274, 0.8247259259223938, 0.8362171649932861, 0.8348963260650635, 0.8339717388153076, 0.8342359066009521, 0.8470479249954224, 0.8403117060661316, 0.8412362933158875], "val_loss": [1.9345450401306152, 1.094006061553955, 0.9305216670036316, 0.7624674439430237, 0.7184262871742249, 0.6745488047599792, 0.7037140130996704, 0.6409022808074951, 0.6292300820350647, 0.5995516180992126, 0.5998364090919495, 0.5763049721717834, 0.5757904648780823, 0.5711950063705444, 0.5341688394546509, 0.5334211587905884, 0.5750714540481567, 0.5133225917816162, 0.499901682138443, 0.5188552141189575, 0.5202075242996216, 0.5231283903121948, 0.47700586915016174, 0.4867584705352783, 0.49586519598960876, 0.48517438769340515, 0.455777108669281, 0.47022175788879395, 0.4747309684753418, 0.4462903141975403, 0.47307655215263367, 0.44226422905921936, 0.4353429675102234, 0.445227712392807, 0.456074059009552, 0.4380093216896057, 0.4281264543533325, 0.4215713441371918, 0.44755199551582336, 0.4273470938205719, 0.42816638946533203, 0.4124976396560669, 0.42494410276412964], "val_accuracy": [0.5923333168029785, 0.6439999938011169, 0.6743333339691162, 0.7316666841506958, 0.7413333058357239, 0.7383333444595337, 0.7173333168029785, 0.7536666393280029, 0.7606666684150696, 0.7613333463668823, 0.7666666507720947, 0.7766666412353516, 0.7766666412353516, 0.7743333578109741, 0.8100000023841858, 0.8036666512489319, 0.7680000066757202, 0.8006666898727417, 0.8149999976158142, 0.8029999732971191, 0.7940000295639038, 0.7950000166893005, 0.8206666707992554, 0.8103333115577698, 0.8106666803359985, 0.8153333067893982, 0.8286666870117188, 0.8226666450500488, 0.8146666884422302, 0.8286666870117188, 0.8143333196640015, 0.831333339214325, 0.8346666693687439, 0.8336666822433472, 0.8220000267028809, 0.8353333473205566, 0.8396666646003723, 0.8473333120346069, 0.8326666951179504, 0.8349999785423279, 0.8336666822433472, 0.847000002861023, 0.8386666774749756]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 1, 5, 5, 4], [1, 1, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.40799999237060547, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2658169269561768, 38488.69140625, NaN, NaN, NaN, NaN], "accuracy": [0.18518029153347015, 0.24633470177650452, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0269970893859863, 17769946.0, NaN, NaN, NaN, NaN], "val_accuracy": [0.40933331847190857, 0.10599999874830246, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 3, 2], [26, 39, 50], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [5, 9, 4, 7, 9, 5, 5, 4], [1, 3, 0, 3, 0, 3, 1], [16, 1], [0, 0, 1, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [5], [0]], "fitness": -0.19371429085731506, "mapping_values": [1, 6, 3, 3, 2, 2, 2, 0, 1, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4153997898101807, 2.2778878211975098, 2.3057854175567627, 2.303189277648926, 2.3764090538024902, 2.3054239749908447, 2.3024230003356934, 2.2903637886047363, 2.2293620109558105, 2.3052148818969727, 2.4338414669036865, 2.3076274394989014, 2.3042123317718506], "accuracy": [0.1900673657655716, 0.13393211364746094, 0.0944393053650856, 0.09681680053472519, 0.10685510188341141, 0.09893012791872025, 0.10500594228506088, 0.13697001338005066, 0.16351869702339172, 0.09681680053472519, 0.1516312211751938, 0.09787346422672272, 0.09708096832036972], "val_loss": [2.3023173809051514, 2.306652545928955, 2.3031742572784424, 2.3019485473632812, 2.3066844940185547, 2.3023815155029297, 2.3005003929138184, 2.2158334255218506, 2.3041436672210693, 2.3021745681762695, 2.31339955329895, 2.3036065101623535, 2.302953004837036], "val_accuracy": [0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1850000023841858, 0.20100000500679016, 0.10000000149011612, 0.09866666793823242, 0.09799999743700027, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 1, 2, 3], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [2, 9, 4, 7, 0, 5, 0, 4, 7, 1, 6, 0, 8, 6, 2, 0], [1, 2, 0, 4, 0, 3, 1, 0, 4], [16, 1, 26, 57], [0, 1, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 0], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 25, 16, 9, 4, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.negative(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303445816040039, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [8, 2, 3, 1, 3, 5, 7, 4, 6, 4], [0, 1, 3, 0, 2, 1, 3, 3, 0], [75, 39, 39], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [8, 9, 4, 0, 0, 5, 5, 4], [3, 3, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [7, 3, 3, 2, 9, 6, 4, 3, 4, 3, 8, 1, 9], [0, 1, 1, 4, 2, 6, 4, 0, 4], [0, 6, 37, 31], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 10, 9, 3, 2, 2, 0, 1, 22, 13, 9, 4, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(alpha, tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.multiply(grad, tf.math.pow(beta, tf.math.multiply(tf.math.sqrt(grad), tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]