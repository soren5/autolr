[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2123095989227295, 1.60822594165802, 1.129099726676941, 0.9574763774871826, 0.8716031312942505, 0.8364956974983215, 0.7608121037483215, 0.7451251745223999, 0.6993389129638672, 0.714117169380188, 0.6780527830123901, 0.6594632267951965, 0.6430463194847107, 0.6219892501831055, 0.636847198009491, 0.6159055829048157, 0.5888918042182922, 0.5829848647117615, 0.5638854503631592, 0.5527551174163818, 0.5470341444015503, 0.5530643463134766, 0.555638313293457, 0.5502670407295227, 0.5359864234924316, 0.5233460068702698, 0.5075278282165527], "accuracy": [0.2716946303844452, 0.5145951509475708, 0.6048077940940857, 0.6610751748085022, 0.6885483860969543, 0.6951525807380676, 0.7165499925613403, 0.7283053994178772, 0.7372870445251465, 0.7388719916343689, 0.7460044622421265, 0.7543256878852844, 0.7585523724555969, 0.7676661014556885, 0.7627789974212646, 0.7618544697761536, 0.7832518815994263, 0.7820631265640259, 0.7910447716712952, 0.7938185334205627, 0.7924976944923401, 0.7961959838867188, 0.7887993454933167, 0.7965922355651855, 0.800290584564209, 0.8041210174560547, 0.8105930685997009], "val_loss": [1.9277877807617188, 1.087743878364563, 0.9010715484619141, 0.8479307293891907, 0.8007524609565735, 0.6902502179145813, 0.709516167640686, 0.6293271780014038, 0.6752212047576904, 0.6225448250770569, 0.6145436763763428, 0.5833428502082825, 0.595221996307373, 0.5636489987373352, 0.5881566405296326, 0.5596771836280823, 0.5536041259765625, 0.563580334186554, 0.5222570896148682, 0.5418306589126587, 0.5335286259651184, 0.509550929069519, 0.5424996018409729, 0.5178900361061096, 0.5121616721153259, 0.5211279988288879, 0.5188627243041992], "val_accuracy": [0.5793333053588867, 0.675000011920929, 0.6890000104904175, 0.6869999766349792, 0.7066666483879089, 0.7513333559036255, 0.7480000257492065, 0.765999972820282, 0.753333330154419, 0.7733333110809326, 0.781000018119812, 0.7853333353996277, 0.7786666750907898, 0.7943333387374878, 0.7770000100135803, 0.8040000200271606, 0.8059999942779541, 0.793666660785675, 0.8103333115577698, 0.7896666526794434, 0.7993333339691162, 0.8113333582878113, 0.7996666431427002, 0.8076666593551636, 0.8113333582878113, 0.8100000023841858, 0.8100000023841858]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 5, 3, 0], [0, 0, 0, 0, 2, 3], [26, 39, 39, 68], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 8, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [21], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 13, 8, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.sqrt(beta), tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [Infinity, 90.90303802490234, 289.0744323730469, 599.9922485351562, 1025.858642578125, 1565.651123046875], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [38.473018646240234, 189.7883758544922, 455.02398681640625, 834.7528076171875, 1328.57470703125, 1936.610107421875], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 4, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 2, 3, 8, 8, 8, 3, 8], [0, 1, 1, 4, 6, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 16, 10, 6, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), alpha), tf.math.sqrt(tf.math.sqrt(tf.math.multiply(grad, tf.math.sqrt(grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303123950958252, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 1, 5], [0, 0, 1, 3, 3], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [2, 2, 4, 4, 8, 9, 6, 4, 0], [2, 2, 0, 4, 5, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 5, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 15, 9, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [14539.521484375, 290876063744.0, 4.84360600607418e+18, 1.9694931943410664e+26, NaN, NaN], "accuracy": [0.1018359512090683, 0.10157178342342377, 0.10487385839223862, 0.09325055778026581, 0.09998679161071777, 0.09998679161071777], "val_loss": [1022819.8125, 18115461120000.0, 3.029339604320067e+20, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10233332961797714, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 84, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [2, 2, 4, 4, 0, 5, 5, 4, 2, 9], [2, 2, 0, 4, 5, 3, 1], [16, 57], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [7, 3, 0, 6, 6, 2, 6, 7, 6, 1, 7, 5, 4, 7, 7, 6, 8, 1, 4, 0, 7, 9, 7, 0, 1, 9, 4, 6, 6, 8, 8, 7, 4, 0, 5, 4, 8, 6, 4, 3, 3, 4, 5, 1, 9, 8], [0, 1, 1, 4, 6, 3, 3, 6, 6, 6, 2, 1, 6, 2, 7, 0, 3, 1, 0, 7, 4, 7, 7, 0, 0, 4, 2, 2, 7], [0, 50, 31, 11, 85, 25, 93, 36], [0, 0], [0, 9], [1], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 6, 3, 3, 2, 16, 10, 6, 2, 75, 46, 29, 8, 2, 2, 0, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), alpha), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(grad, tf.math.square(tf.math.pow(sigma, sigma))), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(grad, grad)), beta), tf.math.pow(tf.math.negative(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.divide_no_nan(beta, grad), tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.negative(tf.math.square(sigma)), tf.math.pow(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.pow(grad, grad)))))))))))), tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.square(tf.math.subtract(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)), beta), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3102450370788574, 2.309434652328491, 2.3105344772338867, 2.308849334716797, 2.311349630355835, 2.3102715015411377], "accuracy": [0.09351472556591034, 0.0944393053650856, 0.08809932321310043, 0.09536388516426086, 0.09549596905708313, 0.08506141602993011], "val_loss": [2.3092586994171143, 2.3092586994171143, 2.3092586994171143, 2.3092586994171143, 2.3092586994171143, 2.3092586994171143], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]