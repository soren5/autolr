[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 2, 4, 6, 3, 5, 5, 4, 1, 9], [1, 2, 0, 4, 0, 2, 1], [16, 1, 48], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8594285845756531, "mapping_values": [1, 10, 5, 5, 3, 17, 10, 7, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, alpha)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110365629196167, 1.1977388858795166, 0.8128418326377869, 0.6759161353111267, 0.5951109528541565, 0.5486066341400146, 0.5159764289855957, 0.4787166714668274, 0.45596376061439514, 0.44733282923698425, 0.424838662147522, 0.4103059768676758, 0.3829447627067566, 0.3744054138660431, 0.3609376847743988, 0.36264389753341675, 0.3383637070655823, 0.33475998044013977, 0.32573604583740234, 0.31128495931625366, 0.31138649582862854, 0.30397719144821167, 0.3075838088989258, 0.291727215051651, 0.2779848873615265, 0.26176151633262634, 0.250953733921051, 0.24721531569957733, 0.23832443356513977, 0.23453664779663086, 0.23003217577934265, 0.2219921499490738, 0.21853862702846527], "accuracy": [0.2903183102607727, 0.5925241112709045, 0.6956809163093567, 0.7368907928466797, 0.774270236492157, 0.7946110367774963, 0.8105930685997009, 0.8259146809577942, 0.83119797706604, 0.837141752243042, 0.8450667262077332, 0.8498216867446899, 0.8584070801734924, 0.8613129258155823, 0.8661999702453613, 0.8664641380310059, 0.8728041052818298, 0.8762382864952087, 0.8742570281028748, 0.8841632604598999, 0.8869370222091675, 0.8865407705307007, 0.8813894987106323, 0.8928807377815247, 0.8952582478523254, 0.902390718460083, 0.9034473896026611, 0.9080702662467957, 0.9085986018180847, 0.9074098467826843, 0.9101836085319519, 0.9148064851760864, 0.9146744012832642], "val_loss": [1.1022236347198486, 0.7493040561676025, 0.6607578992843628, 0.5752763152122498, 0.5321474075317383, 0.5054465532302856, 0.478655606508255, 0.4660760760307312, 0.45848071575164795, 0.4516560435295105, 0.4411264955997467, 0.4306260645389557, 0.43504858016967773, 0.4064980447292328, 0.4166298806667328, 0.39742180705070496, 0.4136100113391876, 0.40008625388145447, 0.3964740037918091, 0.3909899890422821, 0.4063318371772766, 0.41580379009246826, 0.3784993886947632, 0.3922947645187378, 0.38277778029441833, 0.3763674795627594, 0.3861609697341919, 0.37390875816345215, 0.37957563996315, 0.4070543646812439, 0.40707987546920776, 0.4106593728065491, 0.4007980227470398], "val_accuracy": [0.621999979019165, 0.7210000157356262, 0.7590000033378601, 0.7789999842643738, 0.7923333048820496, 0.8046666383743286, 0.824999988079071, 0.8289999961853027, 0.8273333311080933, 0.8356666564941406, 0.8403333425521851, 0.8450000286102295, 0.843666672706604, 0.8523333072662354, 0.8483333587646484, 0.8569999933242798, 0.8556666374206543, 0.8610000014305115, 0.8610000014305115, 0.8656666874885559, 0.8506666421890259, 0.856333315372467, 0.8653333187103271, 0.8669999837875366, 0.8713333606719971, 0.8679999709129333, 0.8733333349227905, 0.8763333559036255, 0.871999979019165, 0.8646666407585144, 0.8640000224113464, 0.8650000095367432, 0.8709999918937683]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20888352394104, 1.599932312965393, 1.1443097591400146, 0.9860172271728516, 0.876872718334198, 0.8520826697349548, 0.780081570148468, 0.7480188012123108, 0.7291353940963745, 0.6998120546340942, 0.6972448229789734, 0.6624979972839355, 0.6618713140487671, 0.6443890929222107, 0.6155672073364258, 0.618587851524353, 0.6068796515464783, 0.6011531352996826, 0.5796025991439819, 0.5795448422431946, 0.5673285722732544, 0.5531408190727234, 0.5547490119934082, 0.5380752086639404, 0.527435302734375, 0.5285289883613586, 0.5218735337257385, 0.524905264377594, 0.5130670666694641, 0.5154848694801331, 0.4975334703922272, 0.49916863441467285, 0.49444687366485596, 0.48950842022895813, 0.483835369348526, 0.48686087131500244, 0.47476905584335327, 0.466524213552475, 0.4672904312610626, 0.46746283769607544, 0.457956999540329, 0.4518285095691681, 0.44129031896591187, 0.4484002888202667, 0.43657705187797546, 0.43294110894203186, 0.4364403784275055, 0.4262191951274872, 0.4356956481933594, 0.42186519503593445, 0.4243171215057373, 0.4282454550266266, 0.4129917025566101, 0.41213521361351013, 0.40336883068084717, 0.4023027718067169, 0.39820995926856995, 0.3956196904182434, 0.3953651785850525, 0.3873153626918793, 0.3850204348564148, 0.40196460485458374, 0.3823763430118561, 0.38060712814331055, 0.37674930691719055, 0.37957900762557983, 0.3711547553539276, 0.3680661618709564, 0.3691721558570862, 0.35884496569633484, 0.36076387763023376, 0.35256680846214294, 0.35105904936790466, 0.3456515669822693, 0.3481135964393616, 0.3565186858177185, 0.34505710005760193, 0.33787962794303894, 0.3400096297264099], "accuracy": [0.27301543951034546, 0.5102364420890808, 0.6028265953063965, 0.6390172839164734, 0.6843217611312866, 0.689869225025177, 0.7144366502761841, 0.722757875919342, 0.7302865982055664, 0.7499669790267944, 0.7400607466697693, 0.7581561207771301, 0.7530049085617065, 0.7604015469551086, 0.7716285586357117, 0.7683265209197998, 0.7725531458854675, 0.7798177003860474, 0.7821952104568481, 0.7823272943496704, 0.7880068421363831, 0.789459764957428, 0.7956677079200745, 0.7997622489929199, 0.8062343001365662, 0.8034605979919434, 0.8082155585289001, 0.8043851256370544, 0.8120459914207458, 0.8109893202781677, 0.8129705190658569, 0.8141592741012573, 0.8231409192085266, 0.8178576231002808, 0.8248580098152161, 0.8202351331710815, 0.8247259259223938, 0.8276317715644836, 0.8260467648506165, 0.8281601071357727, 0.8321225643157959, 0.8333113193511963, 0.8367455005645752, 0.8337075710296631, 0.8392550349235535, 0.8387266993522644, 0.8380662798881531, 0.8416325449943542, 0.8408400416374207, 0.845859169960022, 0.8436138033866882, 0.8421608805656433, 0.847840428352356, 0.8477083444595337, 0.8515387773513794, 0.8510104417800903, 0.8540483713150024, 0.8568220734596252, 0.8552370667457581, 0.8557654023170471, 0.8585391640663147, 0.8521991968154907, 0.86118084192276, 0.8598600029945374, 0.8595958352088928, 0.8601241707801819, 0.8648791313171387, 0.8625016212463379, 0.86553955078125, 0.8648791313171387, 0.8673887252807617, 0.873860776424408, 0.8713511824607849, 0.8730682730674744, 0.868049144744873, 0.8684453964233398, 0.8733324408531189, 0.8749174475669861, 0.872407853603363], "val_loss": [1.921076774597168, 1.0907772779464722, 0.9570151567459106, 0.794528067111969, 0.7642323970794678, 0.7097654342651367, 0.7127120494842529, 0.6871484518051147, 0.636863112449646, 0.6608989238739014, 0.6004469990730286, 0.5913460850715637, 0.5923163890838623, 0.5779234766960144, 0.5980427861213684, 0.5450599789619446, 0.5655561685562134, 0.5782009959220886, 0.5653467774391174, 0.5287731885910034, 0.511641263961792, 0.555592954158783, 0.502805769443512, 0.5101045966148376, 0.5269116759300232, 0.48900967836380005, 0.49526116251945496, 0.49020397663116455, 0.4896402955055237, 0.4798862040042877, 0.47303032875061035, 0.4824965298175812, 0.46737468242645264, 0.4915451109409332, 0.4843631982803345, 0.47840726375579834, 0.4658643901348114, 0.47439485788345337, 0.45797938108444214, 0.44863271713256836, 0.44680631160736084, 0.4528225064277649, 0.4409513473510742, 0.44839656352996826, 0.436343252658844, 0.4366912841796875, 0.4349406063556671, 0.4322143495082855, 0.43191903829574585, 0.4305460751056671, 0.43142130970954895, 0.44115787744522095, 0.4334040582180023, 0.42495474219322205, 0.41891157627105713, 0.425269216299057, 0.41651827096939087, 0.41664639115333557, 0.4183693528175354, 0.40790247917175293, 0.42203524708747864, 0.4092019498348236, 0.4050789475440979, 0.4043446481227875, 0.42585399746894836, 0.4068446159362793, 0.4020996391773224, 0.4258887469768524, 0.39459896087646484, 0.40483519434928894, 0.3952866494655609, 0.402762234210968, 0.39953145384788513, 0.39762911200523376, 0.3979295790195465, 0.3962003290653229, 0.40032702684402466, 0.4107857942581177, 0.39646318554878235], "val_accuracy": [0.6076666712760925, 0.6499999761581421, 0.6499999761581421, 0.715666651725769, 0.7226666808128357, 0.7306666374206543, 0.7269999980926514, 0.7443333268165588, 0.7676666378974915, 0.753000020980835, 0.7699999809265137, 0.7730000019073486, 0.7846666574478149, 0.7796666622161865, 0.7806666493415833, 0.7903333306312561, 0.7903333306312561, 0.7760000228881836, 0.7906666398048401, 0.8163333535194397, 0.8153333067893982, 0.7996666431427002, 0.8186666369438171, 0.8086666464805603, 0.8006666898727417, 0.824999988079071, 0.815666675567627, 0.8213333487510681, 0.824999988079071, 0.8266666531562805, 0.8256666660308838, 0.8173333406448364, 0.8320000171661377, 0.8146666884422302, 0.8276666402816772, 0.8263333439826965, 0.8330000042915344, 0.8226666450500488, 0.8336666822433472, 0.8386666774749756, 0.8379999995231628, 0.8299999833106995, 0.8413333296775818, 0.8330000042915344, 0.8423333168029785, 0.8410000205039978, 0.8443333506584167, 0.843999981880188, 0.8456666469573975, 0.843666672706604, 0.846666693687439, 0.8426666855812073, 0.8446666598320007, 0.8479999899864197, 0.8519999980926514, 0.8493333458900452, 0.8536666631698608, 0.8566666841506958, 0.8543333411216736, 0.8556666374206543, 0.8479999899864197, 0.8579999804496765, 0.8560000061988831, 0.859000027179718, 0.8486666679382324, 0.8576666712760925, 0.8606666922569275, 0.8510000109672546, 0.862333357334137, 0.8600000143051147, 0.8619999885559082, 0.859333336353302, 0.8603333234786987, 0.8653333187103271, 0.8636666536331177, 0.8633333444595337, 0.8603333234786987, 0.8560000061988831, 0.859000027179718]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4, 4, 8, 7, 3, 0, 8], [2, 0, 0, 4, 0, 3, 1, 4, 3, 1], [16, 1, 85], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [7, 3, 0, 3, 1, 3, 0], [0, 1, 0, 2, 4, 1], [0, 45], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 24, 14, 10, 3, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.sqrt(alpha)), grad), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta))), tf.math.multiply(grad, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033223152160645, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 13, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 8, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 3, 2, 3, 2], [0, 2, 1, 2, 0, 2], [0, 16], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 14, 8, 6, 2, 11, 5, 6, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(beta, alpha)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29142.236328125, 4449968.0, 75858680.0, 538185152.0, 2374318336.0, 7761459712.0], "accuracy": [0.09945846349000931, 0.1018359512090683, 0.09602430462837219, 0.1010434553027153, 0.09866596013307571, 0.09787346422672272], "val_loss": [301442.0625, 16160472.0, 173289760.0, 944413888.0, 3536983808.0, 10432215040.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 0, 0], [1, 0, 1, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4, 5], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [68], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 1, 16, 9, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.negative(grad))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.square(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]