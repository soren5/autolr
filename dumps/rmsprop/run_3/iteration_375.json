[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8054285645484924, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210296869277954, 1.5961439609527588, 1.1435068845748901, 0.9571410417556763, 0.8807981014251709, 0.8048272132873535, 0.7696466445922852, 0.7456613183021545, 0.7236813902854919, 0.6788232922554016, 0.6766566634178162, 0.6513012647628784, 0.6382542848587036, 0.6247705221176147, 0.6266710758209229, 0.6091002821922302, 0.6086568236351013, 0.5929346680641174, 0.574838399887085, 0.5624134540557861, 0.5495229959487915, 0.550319492816925, 0.5528663396835327, 0.5192885994911194, 0.5170246958732605, 0.5172112584114075, 0.5153636932373047, 0.49846911430358887, 0.5062403678894043, 0.4965580999851227, 0.4889447093009949, 0.482955664396286, 0.4761572778224945, 0.468867689371109, 0.4669691026210785, 0.46411240100860596, 0.461214542388916, 0.4519864618778229, 0.45435309410095215, 0.4495187997817993, 0.44058936834335327, 0.4386250078678131, 0.43291088938713074, 0.4241319000720978, 0.43067431449890137, 0.42340564727783203, 0.4191133975982666, 0.4115616977214813, 0.4059506058692932], "accuracy": [0.27644962072372437, 0.5131422281265259, 0.5896182656288147, 0.6621318459510803, 0.6800950765609741, 0.7053229212760925, 0.7113987803459167, 0.7251353859901428, 0.7380794882774353, 0.7490423917770386, 0.7514199018478394, 0.76106196641922, 0.7611940503120422, 0.7718927264213562, 0.7688548564910889, 0.7749306559562683, 0.7720248103141785, 0.7740060687065125, 0.7865539789199829, 0.7901201844215393, 0.7969884872436523, 0.7968564033508301, 0.7935543656349182, 0.8099326491355896, 0.8064984679222107, 0.8042530417442322, 0.8101968169212341, 0.8171972036361694, 0.8148196935653687, 0.8136309385299683, 0.8169330358505249, 0.8197067975997925, 0.8210275769233704, 0.8296129703521729, 0.824329674243927, 0.8234050869941711, 0.8272355198860168, 0.8322546482086182, 0.83119797706604, 0.8310658931732178, 0.8400475382804871, 0.8374059200286865, 0.8418967127799988, 0.8459912538528442, 0.8387266993522644, 0.8462554216384888, 0.8446704745292664, 0.8469158411026001, 0.8518029451370239], "val_loss": [1.9255777597427368, 1.1309192180633545, 0.8888285160064697, 0.8925514221191406, 0.7323715090751648, 0.6989452838897705, 0.679818868637085, 0.6476708054542542, 0.6721011400222778, 0.6292650699615479, 0.6194026470184326, 0.6010114550590515, 0.5697796940803528, 0.5766507387161255, 0.569223940372467, 0.5525099039077759, 0.5410571098327637, 0.546445906162262, 0.5383949279785156, 0.5185551643371582, 0.510986328125, 0.5193780660629272, 0.5118812918663025, 0.5099424123764038, 0.5091772675514221, 0.49950969219207764, 0.49521350860595703, 0.49044308066368103, 0.4720436930656433, 0.4765225052833557, 0.4741392135620117, 0.4708632826805115, 0.4797072410583496, 0.44257649779319763, 0.4572567939758301, 0.44878336787223816, 0.44019564986228943, 0.44196778535842896, 0.45801082253456116, 0.4362103343009949, 0.42934781312942505, 0.4371929466724396, 0.4449651837348938, 0.4192509651184082, 0.42500707507133484, 0.4256620407104492, 0.4273260235786438, 0.41827526688575745, 0.4280034899711609], "val_accuracy": [0.5766666531562805, 0.6256666779518127, 0.6796666383743286, 0.6773333549499512, 0.7236666679382324, 0.7379999756813049, 0.7506666779518127, 0.7553333044052124, 0.7296666502952576, 0.7646666765213013, 0.7663333415985107, 0.7676666378974915, 0.7866666913032532, 0.7853333353996277, 0.781000018119812, 0.7973333597183228, 0.8013333082199097, 0.8013333082199097, 0.8043333292007446, 0.8083333373069763, 0.8050000071525574, 0.8116666674613953, 0.7986666560173035, 0.7983333468437195, 0.812333345413208, 0.8056666851043701, 0.8113333582878113, 0.8096666932106018, 0.8246666789054871, 0.8183333277702332, 0.8063333630561829, 0.8220000267028809, 0.8173333406448364, 0.8343333601951599, 0.8196666836738586, 0.8309999704360962, 0.8363333344459534, 0.8353333473205566, 0.8199999928474426, 0.8373333215713501, 0.8323333263397217, 0.8413333296775818, 0.8273333311080933, 0.8420000076293945, 0.8420000076293945, 0.8413333296775818, 0.8360000252723694, 0.8393333554267883, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [7, 2, 3, 5, 3, 8], [0, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 5, 5], [2, 0, 4, 2, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [4], [0]], "fitness": -0.25028571486473083, "mapping_values": [1, 5, 2, 3, 1, 14, 9, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), beta)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5164170265197754, 2.408649444580078, 2.300687789916992, 2.453094482421875, 2.3089044094085693, 2.3041117191314697], "accuracy": [0.1802932173013687, 0.14661207795143127, 0.10751552134752274, 0.19218069314956665, 0.09893012791872025, 0.09576013684272766], "val_loss": [1.949856162071228, 2.3039815425872803, 2.286299705505371, 2.3184385299682617, 2.305168867111206, 2.3032164573669434], "val_accuracy": [0.2553333342075348, 0.09666666388511658, 0.10300000011920929, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 9, 8, 2], [3, 5, 0, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.2288571447134018, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.495790481567383, 7.595582485198975, NaN, NaN, NaN, NaN], "accuracy": [0.21397437155246735, 0.16549994051456451, 0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.6203789710998535, 9161.5703125, NaN, NaN, NaN, NaN], "val_accuracy": [0.23066666722297668, 0.11366666853427887, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 1, 9, 1, 9, 1, 6, 3, 4, 5, 3, 6, 0, 9, 8], [0, 0, 1, 1, 2, 0, 0, 0, 0, 2], [0, 39, 39, 73, 26, 29, 54, 34, 59], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [2, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [3, 1], [1, 0, 0, 1], [9, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 20, 10, 9, 11, 6, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.square(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035659790039062, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.302584409713745, 2.302584409713745, 2.302583932876587, 2.302583932876587, 2.302583932876587, 2.302583932876587], "val_accuracy": [0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 3], [0, 96, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 5, 4, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034050464630127, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]