[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2071945667266846, 1.5826530456542969, 1.1420754194259644, 0.9602375626564026, 0.9024509191513062, 0.7964468002319336, 0.7708581686019897, 0.7309776544570923, 0.7190178632736206, 0.7079097628593445, 0.6645691990852356, 0.6718683838844299, 0.6264382600784302, 0.6278120875358582, 0.6372507214546204, 0.5972231030464172, 0.6008566617965698, 0.5669425129890442, 0.5704490542411804, 0.5715922117233276, 0.5426824688911438, 0.5361405611038208, 0.5307276248931885, 0.5281819701194763, 0.5176852941513062, 0.515248715877533, 0.50690758228302, 0.4947645664215088, 0.4920397400856018, 0.481381893157959, 0.4822407364845276, 0.4789578318595886, 0.47417116165161133, 0.4669131934642792, 0.4531499147415161, 0.454037606716156], "accuracy": [0.2779025137424469, 0.5168405771255493, 0.5976753234863281, 0.6583014130592346, 0.6773213744163513, 0.7091533541679382, 0.7211728692054749, 0.7305507659912109, 0.7296261787414551, 0.7357020378112793, 0.7524765729904175, 0.7490423917770386, 0.7709681391716003, 0.7720248103141785, 0.7646281719207764, 0.7732135653495789, 0.7766477465629578, 0.789459764957428, 0.789988100528717, 0.7882710099220276, 0.7994980812072754, 0.8005547523498535, 0.806630551815033, 0.8043851256370544, 0.8083476424217224, 0.8140271902084351, 0.8150838613510132, 0.8202351331710815, 0.8187822103500366, 0.8264430165290833, 0.8216879963874817, 0.8231409192085266, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.8333113193511963], "val_loss": [1.9148222208023071, 1.0891375541687012, 0.9056211113929749, 0.8016678094863892, 0.760240912437439, 0.7038585543632507, 0.6770634055137634, 0.6463528871536255, 0.6302468180656433, 0.6203481554985046, 0.6302914023399353, 0.590358316898346, 0.618607759475708, 0.5765666365623474, 0.5648512244224548, 0.5980960130691528, 0.570862352848053, 0.5760148167610168, 0.5375343561172485, 0.559295654296875, 0.5193827152252197, 0.5377711653709412, 0.5133692026138306, 0.5084794163703918, 0.5028876662254333, 0.5047078728675842, 0.5013857483863831, 0.4947488605976105, 0.4889155328273773, 0.4944532513618469, 0.47344210743904114, 0.4975704252719879, 0.47418901324272156, 0.4700135588645935, 0.47032633423805237, 0.4672855734825134], "val_accuracy": [0.550000011920929, 0.6420000195503235, 0.6753333210945129, 0.6966666579246521, 0.7206666469573975, 0.7390000224113464, 0.7423333525657654, 0.7590000033378601, 0.7583333253860474, 0.7606666684150696, 0.7576666474342346, 0.7786666750907898, 0.768666684627533, 0.7796666622161865, 0.7956666946411133, 0.7693333625793457, 0.7820000052452087, 0.7749999761581421, 0.8009999990463257, 0.7850000262260437, 0.8076666593551636, 0.7979999780654907, 0.812333345413208, 0.8190000057220459, 0.8153333067893982, 0.8230000138282776, 0.812666654586792, 0.8236666917800903, 0.8263333439826965, 0.8223333358764648, 0.8383333086967468, 0.8216666579246521, 0.8303333520889282, 0.8303333520889282, 0.8253333568572998, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2117204666137695, 1.6087095737457275, 1.1428240537643433, 1.003321647644043, 0.8806970715522766, 0.8335577845573425, 0.7790043354034424, 0.760109007358551, 0.7416091561317444, 0.7075355052947998, 0.6852310299873352, 0.6729201674461365, 0.6686312556266785, 0.6361353397369385, 0.6362999677658081, 0.6166145205497742, 0.6020310521125793, 0.5907047390937805, 0.5995805263519287, 0.5788971781730652, 0.5791414976119995, 0.552122950553894, 0.5464392900466919, 0.532167911529541, 0.5263228416442871, 0.5221139788627625, 0.5262584090232849, 0.5098497867584229, 0.501235842704773, 0.5161188840866089], "accuracy": [0.26984545588493347, 0.5023114681243896, 0.6034870147705078, 0.6427156329154968, 0.6820763349533081, 0.6925109028816223, 0.7144366502761841, 0.715889573097229, 0.724210798740387, 0.7375511527061462, 0.7478536367416382, 0.7449478507041931, 0.7515519857406616, 0.7609298825263977, 0.7619865536689758, 0.765949010848999, 0.7779685854911804, 0.7757231593132019, 0.7740060687065125, 0.7819310426712036, 0.7853652238845825, 0.7957997918128967, 0.7997622489929199, 0.7987055778503418, 0.8063663840293884, 0.8061022162437439, 0.8067626357078552, 0.8119139075279236, 0.819442629814148, 0.8080834746360779], "val_loss": [1.920967936515808, 1.0888581275939941, 0.9521771669387817, 0.821580171585083, 0.7251156568527222, 0.662571132183075, 0.7238627672195435, 0.6151090264320374, 0.6373708248138428, 0.5867530107498169, 0.640842854976654, 0.5798760056495667, 0.5871523022651672, 0.5552217364311218, 0.5408681631088257, 0.5304758548736572, 0.5196541547775269, 0.5438989996910095, 0.5063689947128296, 0.5064977407455444, 0.507334291934967, 0.5285951495170593, 0.48008671402931213, 0.48250362277030945, 0.460064172744751, 0.4939703643321991, 0.4863814413547516, 0.46850651502609253, 0.45660120248794556, 0.4549446105957031], "val_accuracy": [0.5316666960716248, 0.6526666879653931, 0.6039999723434448, 0.687666654586792, 0.7170000076293945, 0.7583333253860474, 0.7210000157356262, 0.768666684627533, 0.753333330154419, 0.7649999856948853, 0.7356666922569275, 0.7883333563804626, 0.7753333449363708, 0.7956666946411133, 0.7873333096504211, 0.8073333501815796, 0.8080000281333923, 0.7923333048820496, 0.8159999847412109, 0.8256666660308838, 0.8136666417121887, 0.7943333387374878, 0.828000009059906, 0.8316666483879089, 0.8370000123977661, 0.8146666884422302, 0.8190000057220459, 0.8306666612625122, 0.8370000123977661, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 61], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 1, 4, 3, 8, 2, 4, 1, 2, 7, 4, 5, 0, 0, 9, 2], [5, 0, 3, 1, 0, 2, 4, 3, 3, 3, 4], [16, 1, 61], [0, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 28, 17, 11, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.pow(alpha, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.square(tf.math.negative(grad)), grad), grad)))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12878087162971497, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 8, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 4], [2, 0, 3, 1, 4], [7, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 4, 2, 2, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.309910297393799, 2.3102786540985107, 2.3104279041290283, 2.3106870651245117, 2.3098742961883545, 2.3090152740478516], "accuracy": [0.0956280529499054, 0.09219389408826828, 0.09311848133802414, 0.09285431355237961, 0.08981640636920929, 0.09589222073554993], "val_loss": [2.3087313175201416, 2.3087313175201416, 2.3087313175201416, 2.3087313175201416, 2.3087313175201416, 2.3087313175201416], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 3, 1, 1], [43, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 7, 4, 4, 0, 1, 9, 8, 2, 7, 5, 2, 7, 8], [0, 6, 5, 0, 1, 7, 0, 0, 7], [0, 56, 10, 19, 9], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 23, 14, 9, 5, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad)), tf.math.add(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310236930847168, 2.309622287750244, 2.3112688064575195, 2.3094863891601562, 2.309490203857422, 2.3105762004852295], "accuracy": [0.09021265059709549, 0.09047681838274002, 0.09021265059709549, 0.09747721254825592, 0.09470347315073013, 0.08994849026203156], "val_loss": [2.3082985877990723, 2.3082985877990723, 2.3082985877990723, 2.3082985877990723, 2.3082985877990723, 2.3082985877990723], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 2, 1, 0, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 1, 0, 1, 0, 1], [0, 7, 2, 8], [0, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 10, 5, 5, 2, 4, 3, 1, 0, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, grad), alpha), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091022968292236, 2.309250593185425, 2.3103976249694824, 2.310222864151001, 2.310035467147827, 2.309487819671631], "accuracy": [0.1002509593963623, 0.09430722147226334, 0.0886276587843895, 0.09391097724437714, 0.09113723784685135, 0.09259014576673508], "val_loss": [2.3094167709350586, 2.3094167709350586, 2.3094167709350586, 2.3094167709350586, 2.3094167709350586, 2.3094167709350586], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]