[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213205575942993, 1.6181453466415405, 1.1485532522201538, 0.9942879676818848, 0.8868010640144348, 0.8190776109695435, 0.801703691482544, 0.7332646250724792, 0.7279183268547058, 0.7339375615119934, 0.6995285153388977, 0.6548535227775574, 0.6693459749221802, 0.6573029160499573, 0.6264101266860962, 0.6301210522651672, 0.6218178272247314, 0.5994310975074768, 0.6099103093147278, 0.5747104287147522, 0.5577493906021118, 0.5710145831108093, 0.5500949025154114, 0.5433000922203064, 0.5300850868225098, 0.5495166182518005, 0.5161364078521729, 0.515213668346405, 0.5060220956802368, 0.4978504776954651, 0.49845749139785767, 0.5096195340156555, 0.49152159690856934, 0.4780714809894562], "accuracy": [0.26799631118774414, 0.4998018741607666, 0.5952978730201721, 0.6552634835243225, 0.684982180595398, 0.700700044631958, 0.7046625018119812, 0.7309470176696777, 0.7341170310974121, 0.7298903465270996, 0.7449478507041931, 0.7548540234565735, 0.7555144429206848, 0.7589486241340637, 0.7664773464202881, 0.7681944370269775, 0.7730814814567566, 0.7802139520645142, 0.7766477465629578, 0.7887993454933167, 0.7987055778503418, 0.7895918488502502, 0.7935543656349182, 0.7991018295288086, 0.8103289008140564, 0.7981772422790527, 0.8127063512802124, 0.8124422430992126, 0.8169330358505249, 0.8149517774581909, 0.8169330358505249, 0.8096684813499451, 0.8222163319587708, 0.8232730031013489], "val_loss": [1.9356814622879028, 1.13505220413208, 0.9249863028526306, 0.7676023840904236, 0.7181503772735596, 0.723741888999939, 0.6492922902107239, 0.6449291706085205, 0.6183272004127502, 0.6093069314956665, 0.5938439965248108, 0.5742208361625671, 0.5845062136650085, 0.559559166431427, 0.5624001622200012, 0.5539146661758423, 0.5443578362464905, 0.5219074487686157, 0.5229545831680298, 0.5107212662696838, 0.4935118854045868, 0.516067624092102, 0.49878376722335815, 0.48220160603523254, 0.48329874873161316, 0.4679557681083679, 0.4609306752681732, 0.4869561493396759, 0.4467945992946625, 0.4453364312648773, 0.4638403654098511, 0.45495158433914185, 0.453610360622406, 0.45107534527778625], "val_accuracy": [0.5753333568572998, 0.6359999775886536, 0.6856666803359985, 0.7323333621025085, 0.7303333282470703, 0.7363333106040955, 0.7649999856948853, 0.7580000162124634, 0.7763333320617676, 0.7760000228881836, 0.7726666927337646, 0.7870000004768372, 0.784333348274231, 0.7879999876022339, 0.7853333353996277, 0.7850000262260437, 0.8066666722297668, 0.8073333501815796, 0.8100000023841858, 0.8096666932106018, 0.8159999847412109, 0.8109999895095825, 0.8173333406448364, 0.8289999961853027, 0.8240000009536743, 0.8336666822433472, 0.8349999785423279, 0.8149999976158142, 0.8410000205039978, 0.8393333554267883, 0.8326666951179504, 0.8373333215713501, 0.8276666402816772, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 2, 8, 2], [2, 2, 3, 1, 2], [16, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 7, 0, 1, 1, 4, 6, 4, 4, 0], [0, 6, 0, 0, 3, 7, 1, 6], [0, 27, 55], [1], [0], [5], [0]], "fitness": -0.31857141852378845, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 18, 10, 8, 3, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), sigma)), grad)), alpha))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.34834623336792, 2.2361338138580322, 2.4069552421569824, 2.3102669715881348, 2.3047468662261963, 2.303405284881592], "accuracy": [0.19416193664073944, 0.20763438940048218, 0.1640470176935196, 0.09721305221319199, 0.09694888442754745, 0.09998679161071777], "val_loss": [2.242446184158325, 2.276385545730591, 2.316909074783325, 2.3056392669677734, 2.3034768104553223, 2.302908182144165], "val_accuracy": [0.32499998807907104, 0.27533334493637085, 0.09666666388511658, 0.09666666388511658, 0.0989999994635582, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 3], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [7, 6], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103044033050537, 2.309293031692505, 2.3091533184051514, 2.3097984790802, 2.308581590652466, 2.310283660888672], "accuracy": [0.09087307006120682, 0.09338264167308807, 0.09747721254825592, 0.09298639744520187, 0.09153348207473755, 0.09219389408826828], "val_loss": [2.308661699295044, 2.308661699295044, 2.308661699295044, 2.308661699295044, 2.308661699295044, 2.308661699295044], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2], [0, 1, 1, 0, 2, 2], [0, 12, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 9, 0, 6, 6, 7, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 2, 6, 2], [0, 6, 6, 5, 0], [0, 33], [1], [0], [0], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 13, 7, 6, 2, 2, 2, 0, 1, 10, 5, 5, 2, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), tf.math.add(grad, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.309577465057373, 2.3084464073181152, 2.3104705810546875, 2.311079263687134, 2.310035228729248, 2.3107247352600098], "accuracy": [0.09100515395402908, 0.09298639744520187, 0.08466517180204391, 0.08492933213710785, 0.09140139818191528, 0.08889182657003403], "val_loss": [2.3088595867156982, 2.3088595867156982, 2.3088595867156982, 2.3088595867156982, 2.3088595867156982, 2.3088595867156982], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 6, 3, 2], [2, 1, 1, 0, 2], [0, 16, 81], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 0, 1, 0], [16, 50], [0, 1, 1, 1], [0, 7], [0, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.08799999952316284, "mapping_values": [1, 6, 3, 3, 0, 3, 2, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.309757709503174, 2.310788631439209, 2.30920672416687, 2.308598279953003, 2.3113796710968018, 2.3109569549560547], "accuracy": [0.09325055778026581, 0.09219389408826828, 0.09311848133802414, 0.09602430462837219, 0.09206181764602661, 0.08849557489156723], "val_loss": [2.3088412284851074, 2.3088412284851074, 2.3088412284851074, 2.3088412284851074, 2.3088412284851074, 2.3088412284851074], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]