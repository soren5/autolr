[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2088112831115723, 1.5972050428390503, 1.119334101676941, 0.9655250310897827, 0.8757306337356567, 0.845932126045227, 0.7781694531440735, 0.7400115728378296, 0.7140159606933594, 0.6998798251152039, 0.6982865333557129, 0.6584982872009277, 0.6381836533546448, 0.6374677419662476, 0.6167629361152649, 0.6208168268203735, 0.6027313470840454, 0.5978624224662781, 0.5745396614074707, 0.56455397605896, 0.5612439513206482, 0.5588762164115906, 0.533543050289154, 0.5255925059318542, 0.5217173099517822, 0.5325242877006531, 0.5110512375831604, 0.4950166344642639, 0.5053430795669556, 0.48813489079475403, 0.48645132780075073, 0.48748457431793213, 0.48295217752456665, 0.47027304768562317, 0.4635951817035675, 0.46551191806793213, 0.45299220085144043, 0.45246270298957825, 0.44932466745376587, 0.4531557857990265, 0.44786784052848816, 0.43328046798706055, 0.4288633167743683, 0.43222224712371826, 0.42226192355155945, 0.41519084572792053, 0.4109063744544983, 0.41023918986320496, 0.41179683804512024, 0.4059733748435974, 0.4088134467601776, 0.3914308547973633, 0.39916083216667175, 0.4038856327533722], "accuracy": [0.2712983787059784, 0.5193501710891724, 0.6133931875228882, 0.656980574131012, 0.6796988248825073, 0.6948884129524231, 0.7187954187393188, 0.7219653725624084, 0.7346453666687012, 0.7383436560630798, 0.7380794882774353, 0.7584202885627747, 0.7642319202423096, 0.7602694630622864, 0.7687227725982666, 0.7683265209197998, 0.7786290049552917, 0.7774402499198914, 0.7836481332778931, 0.7890635132789612, 0.7886672616004944, 0.7860256433486938, 0.7984414100646973, 0.8045172095298767, 0.8033285140991211, 0.7984414100646973, 0.8131026029586792, 0.8137630224227905, 0.8055738806724548, 0.8170651197433472, 0.81548011302948, 0.8203672170639038, 0.8187822103500366, 0.8251221776008606, 0.8278959393501282, 0.826310932636261, 0.8350284099578857, 0.8323867321014404, 0.8272355198860168, 0.8300092220306396, 0.8352925777435303, 0.837141752243042, 0.8359529972076416, 0.8352925777435303, 0.8444063067436218, 0.8462554216384888, 0.8490291833877563, 0.8477083444595337, 0.8485008478164673, 0.847840428352356, 0.8459912538528442, 0.852331280708313, 0.8525954484939575, 0.8515387773513794], "val_loss": [1.9167119264602661, 1.077168345451355, 0.8754835724830627, 0.8003444671630859, 0.7972536087036133, 0.6920673847198486, 0.6657562851905823, 0.6566928625106812, 0.6139925122261047, 0.6128875613212585, 0.5797234773635864, 0.6077798008918762, 0.5580345988273621, 0.5497017502784729, 0.543956458568573, 0.5413586497306824, 0.5603208541870117, 0.5858452320098877, 0.5219720005989075, 0.5221402049064636, 0.5223438143730164, 0.4980393052101135, 0.492623507976532, 0.4897741675376892, 0.49830615520477295, 0.4862307608127594, 0.46100375056266785, 0.4639711081981659, 0.4764370918273926, 0.46789371967315674, 0.447638601064682, 0.4504217803478241, 0.44157445430755615, 0.4479365348815918, 0.45307469367980957, 0.4355667233467102, 0.44143643975257874, 0.45228061079978943, 0.43687281012535095, 0.4290740489959717, 0.42284244298934937, 0.4258800446987152, 0.4206755757331848, 0.42322665452957153, 0.4112914204597473, 0.41559046506881714, 0.40941891074180603, 0.41975492238998413, 0.40527719259262085, 0.4073987901210785, 0.4163046181201935, 0.40669775009155273, 0.4018245339393616, 0.41899824142456055], "val_accuracy": [0.5920000076293945, 0.6673333048820496, 0.6959999799728394, 0.7023333311080933, 0.7306666374206543, 0.7553333044052124, 0.7563333511352539, 0.7409999966621399, 0.768666684627533, 0.7776666879653931, 0.7896666526794434, 0.7603333592414856, 0.7973333597183228, 0.7976666688919067, 0.8009999990463257, 0.7933333516120911, 0.7906666398048401, 0.7699999809265137, 0.8059999942779541, 0.8016666769981384, 0.7910000085830688, 0.8133333325386047, 0.8180000185966492, 0.8163333535194397, 0.8103333115577698, 0.8176666498184204, 0.8306666612625122, 0.8309999704360962, 0.8183333277702332, 0.8246666789054871, 0.8306666612625122, 0.8316666483879089, 0.8343333601951599, 0.8349999785423279, 0.8273333311080933, 0.8416666388511658, 0.8386666774749756, 0.8303333520889282, 0.8360000252723694, 0.846666693687439, 0.8463333249092102, 0.8420000076293945, 0.843999981880188, 0.8473333120346069, 0.8486666679382324, 0.8463333249092102, 0.8513333201408386, 0.8513333201408386, 0.8579999804496765, 0.8460000157356262, 0.846666693687439, 0.8543333411216736, 0.8503333330154419, 0.843999981880188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 7, 3, 1, 9, 5, 0, 9], [0, 0, 1, 0, 3], [97, 39, 39, 17], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 9, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 8, 2, 4, 7, 5, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303220748901367, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 0, 5], [0, 0, 1, 0, 2], [0, 82, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 4, 7, 3, 8, 2, 6, 1, 9], [4, 0, 3, 1, 0, 3, 5], [16, 1, 66], [0, 0, 1, 1], [0, 7], [3, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(grad, tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 7, 4, 3, 2, 17, 10, 7, 3, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 2, 3, 5], [0, 0, 1, 3, 2, 0, 2], [0, 39, 22], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 2, 4, 6, 3, 8, 2, 0, 3, 1, 8, 5, 6, 1, 9, 8, 9], [2, 0, 3, 1, 0, 3, 3, 4], [16, 19, 64, 67], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(grad, grad), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.multiply(tf.math.subtract(grad, tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.subtract(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 15, 8, 7, 3, 25, 17, 8, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 3, 7, 3, 2, 5, 6, 9, 2, 1, 6, 4, 3, 6, 4, 4, 5, 6, 9], [0, 0, 1, 0, 2, 1, 0, 3, 3, 1, 2, 3, 1, 0, 1], [0, 39, 39, 29, 44, 4, 37], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 3, 3, 1, 0], [16, 1], [0, 0, 1, 1], [2, 5], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 35, 20, 15, 7, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(grad, grad), tf.math.pow(alpha, grad)), grad), tf.math.pow(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3106179237365723, 2.3096930980682373, 2.310429334640503, 2.309863805770874, 2.3094642162323, 2.3097753524780273], "accuracy": [0.08968432247638702, 0.09219389408826828, 0.09021265059709549, 0.09311848133802414, 0.09087307006120682, 0.09576013684272766], "val_loss": [2.3089590072631836, 2.3089590072631836, 2.3089590072631836, 2.3089590072631836, 2.3089590072631836, 2.3089590072631836], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]