[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [8, 9, 7, 7, 0, 5, 5, 4], [1, 2, 1, 4, 0, 3, 1], [64, 9], [0, 0, 0, 1, 0, 1, 1, 1], [4, 3, 9, 2], [0, 6, 2, 5], [0, 1], [1], [0], [5], [0]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5341806411743164, 2.266873598098755, 2.2975106239318848, 2.2497105598449707, 2.269580841064453, 2.1490724086761475, 1.805983543395996, 1.7863715887069702, 1.8603988885879517, 1.611173152923584, 1.3508598804473877, 1.3996530771255493, 1.2125577926635742, 1.0967909097671509, 1.1071367263793945, 1.0466845035552979, 0.9749301075935364, 0.8621575832366943, 0.7775534987449646, 0.7929814457893372, 0.748042106628418, 0.6620028018951416, 0.690596342086792, 0.6736178398132324, 0.7139987945556641, 0.6465186476707458], "accuracy": [0.1830669641494751, 0.17051908373832703, 0.12191256135702133, 0.18901069462299347, 0.21621978282928467, 0.2300885021686554, 0.4011359214782715, 0.41962751746177673, 0.35768061876296997, 0.4570069909095764, 0.5352001190185547, 0.509840190410614, 0.5739004015922546, 0.6120724081993103, 0.6050719618797302, 0.6338660717010498, 0.6532822847366333, 0.6884163022041321, 0.7177387475967407, 0.69673752784729, 0.7194558382034302, 0.7514199018478394, 0.743891179561615, 0.7490423917770386, 0.7257958054542542, 0.7560427784919739], "val_loss": [2.245354175567627, 2.303391218185425, 2.200698137283325, 2.278017044067383, 2.296269178390503, 1.8620949983596802, 1.7096436023712158, 2.2459750175476074, 1.3495736122131348, 1.0614393949508667, 1.0079972743988037, 1.0317579507827759, 1.002870798110962, 0.8688474297523499, 0.8306002020835876, 0.7855880260467529, 0.7841578722000122, 0.6812460422515869, 0.765053927898407, 0.663044273853302, 0.5658547282218933, 0.6010317206382751, 0.5903298258781433, 0.6283925771713257, 0.6366276144981384, 0.5908751487731934], "val_accuracy": [0.20100000500679016, 0.09966666996479034, 0.15399999916553497, 0.24799999594688416, 0.12099999934434891, 0.3919999897480011, 0.4169999957084656, 0.16300000250339508, 0.5230000019073486, 0.6340000033378601, 0.6389999985694885, 0.6286666393280029, 0.6583333611488342, 0.6883333325386047, 0.6983333230018616, 0.7123333215713501, 0.7076666951179504, 0.7413333058357239, 0.7009999752044678, 0.7400000095367432, 0.7873333096504211, 0.7609999775886536, 0.7673333287239075, 0.7440000176429749, 0.7749999761581421, 0.7609999775886536]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7805714011192322, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206845998764038, 1.5683643817901611, 1.1469056606292725, 0.938536524772644, 0.8729737401008606, 0.8170942068099976, 0.7688058018684387, 0.7350559830665588, 0.6992106437683105, 0.6842851638793945, 0.6720893383026123, 0.6367589831352234, 0.6525390148162842, 0.6102374196052551, 0.6074384450912476, 0.6006652116775513], "accuracy": [0.27037379145622253, 0.5268788933753967, 0.6001849174499512, 0.6684718132019043, 0.6827367544174194, 0.702681303024292, 0.7162858247756958, 0.7255316376686096, 0.7417778372764587, 0.7446836829185486, 0.7485140562057495, 0.7617223858833313, 0.7561748623847961, 0.7717606425285339, 0.7687227725982666, 0.7781006693840027], "val_loss": [1.9058912992477417, 1.0491912364959717, 0.8612666726112366, 0.7525507211685181, 0.7196096181869507, 0.7517163157463074, 0.643379807472229, 0.6470066905021667, 0.6146203875541687, 0.606852114200592, 0.5526911616325378, 0.5867620706558228, 0.5683669447898865, 0.578045129776001, 0.5570908784866333, 0.5512164831161499], "val_accuracy": [0.6060000061988831, 0.6856666803359985, 0.6980000138282776, 0.7333333492279053, 0.7413333058357239, 0.7076666951179504, 0.7573333382606506, 0.7586666941642761, 0.7516666650772095, 0.7559999823570251, 0.7979999780654907, 0.7766666412353516, 0.7919999957084656, 0.7726666927337646, 0.7923333048820496, 0.7876666784286499]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 2, 2, 2], [26, 92, 53], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4, 4, 7, 1], [1, 2, 1, 4, 0, 3, 1], [18, 1], [1, 0, 0, 0, 0, 1, 1, 0], [7, 3, 0, 7], [0, 1, 1, 4], [0], [1], [0], [7], [0]], "fitness": -0.2668571472167969, "mapping_values": [1, 11, 7, 4, 3, 18, 11, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(alpha, tf.math.pow(grad, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4221386909484863, 2.334115743637085, 2.3500285148620605, 2.2337646484375, 2.240854263305664, 2.304677724838257, 2.302217483520508, 2.255398750305176, 2.3048863410949707], "accuracy": [0.20142649114131927, 0.1640470176935196, 0.11900673806667328, 0.17831197381019592, 0.1538766324520111, 0.09972262382507324, 0.10170386731624603, 0.1888786107301712, 0.09893012791872025], "val_loss": [2.7688417434692383, 2.1688992977142334, 2.3035991191864014, 2.267753839492798, 2.30586838722229, 2.302520990371704, 2.2960448265075684, 2.306334972381592, 2.303398847579956], "val_accuracy": [0.20900000631809235, 0.2529999911785126, 0.09866666793823242, 0.257666677236557, 0.09866666793823242, 0.09866666793823242, 0.23266667127609253, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 3], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [7, 3, 0, 4, 2, 8, 8], [0, 1, 1, 4, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 8, 4, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, alpha)), tf.math.add(grad, tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30318.05859375, 4402343.5, 76663304.0, 535626944.0, 2358792448.0, 7752178688.0], "accuracy": [0.09576013684272766, 0.09985470771789551, 0.09774138033390045, 0.09681680053472519, 0.09496764093637466, 0.09959053993225098], "val_loss": [306520.84375, 16434561.0, 176232480.0, 960459200.0, 3597085440.0, 10609479680.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [26, 6, 60], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 5, 7, 0, 5, 9, 4], [0, 2, 3, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 0, 0, 0], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 3, 1, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [9.110784530639648, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22005018591880798, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [41166.55078125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]