[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8237142562866211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2044930458068848, 1.5944374799728394, 1.155356764793396, 0.9427757859230042, 0.8719435930252075, 0.8295836448669434, 0.7796609401702881, 0.744601309299469, 0.7158318758010864, 0.7162098288536072, 0.6706390380859375, 0.6491193771362305, 0.6316438317298889, 0.6326727867126465, 0.6100445985794067, 0.619728684425354, 0.5972110629081726, 0.5712976455688477, 0.5912144780158997, 0.560111939907074, 0.5548001527786255, 0.5313383936882019, 0.534781813621521, 0.5209284424781799, 0.5206042528152466, 0.5003410577774048, 0.49947547912597656, 0.5021501779556274, 0.4975779950618744, 0.47895166277885437, 0.4813687801361084], "accuracy": [0.27327960729599, 0.5062739253044128, 0.5905428528785706, 0.663848876953125, 0.6841896772384644, 0.695813000202179, 0.7170783281326294, 0.7246070504188538, 0.7321357727050781, 0.7314753532409668, 0.752212405204773, 0.7589486241340637, 0.7671377658843994, 0.7607977986335754, 0.7732135653495789, 0.7718927264213562, 0.7771760821342468, 0.7885351777076721, 0.7795535326004028, 0.7887993454933167, 0.7954035401344299, 0.8031964302062988, 0.7979130744934082, 0.8074230551719666, 0.8057059645652771, 0.8183859586715698, 0.8181217908859253, 0.8144234418869019, 0.8191784620285034, 0.8244617581367493, 0.819442629814148], "val_loss": [1.9111719131469727, 1.1013892889022827, 0.9079153537750244, 0.7692345380783081, 0.7269399166107178, 0.6739100813865662, 0.6524741053581238, 0.6811582446098328, 0.6125909686088562, 0.6503247022628784, 0.5993930101394653, 0.5629139542579651, 0.603239893913269, 0.5611640214920044, 0.5457523465156555, 0.5655239820480347, 0.5403803586959839, 0.5211107134819031, 0.5183645486831665, 0.508878767490387, 0.5294066071510315, 0.5169773101806641, 0.4859209656715393, 0.5077512264251709, 0.49456751346588135, 0.46539804339408875, 0.4759637713432312, 0.4723306894302368, 0.46504130959510803, 0.46435555815696716, 0.48280423879623413], "val_accuracy": [0.5763333439826965, 0.637666642665863, 0.6769999861717224, 0.722000002861023, 0.721666693687439, 0.7490000128746033, 0.753000020980835, 0.7233333587646484, 0.7643333077430725, 0.753333330154419, 0.7696666717529297, 0.7860000133514404, 0.762333333492279, 0.778333306312561, 0.7879999876022339, 0.7726666927337646, 0.7956666946411133, 0.8040000200271606, 0.8096666932106018, 0.8073333501815796, 0.7889999747276306, 0.800000011920929, 0.8163333535194397, 0.8173333406448364, 0.8206666707992554, 0.8296666741371155, 0.824999988079071, 0.8230000138282776, 0.8256666660308838, 0.8253333568572998, 0.8246666789054871]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 2], [25, 39, 39], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [4, 9, 4, 0, 0, 5, 7, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 3, 0, 7, 1, 5, 2, 4, 4, 0, 6, 4, 3, 1, 1, 7, 6, 2, 2, 8, 4, 8, 1, 1, 1, 9, 5, 4, 3, 2, 5, 6, 2, 8, 3, 1, 7, 4, 7, 9], [2, 3, 1, 4, 7, 0, 7, 3, 2, 6, 7, 7, 3, 3, 6, 5, 4, 5, 1, 5, 7, 3, 7, 6, 7, 5, 4, 7], [0, 49, 89], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 0, 68, 40, 28, 3, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(beta), tf.math.add(tf.math.subtract(sigma, tf.math.square(tf.math.add(tf.math.pow(alpha, tf.math.pow(grad, tf.math.negative(grad))), tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(sigma, beta)), tf.math.sqrt(grad)), tf.math.pow(grad, tf.math.sqrt(grad))), sigma), sigma), grad), tf.math.subtract(grad, tf.math.subtract(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.multiply(grad, grad), tf.math.add(alpha, grad)))), grad))), tf.math.square(tf.math.divide_no_nan(sigma, tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, grad), tf.math.add(tf.math.pow(grad, tf.math.add(grad, grad)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30352783203125, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [41, 39, 39], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 8], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 2, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036508560180664, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 21], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 1, 5, 8], [1, 2, 0, 4, 0, 3, 1], [98, 1], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [21], [1], [0], [0], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 6, 3, 3, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3097472190856934, 2.310349702835083, 2.310598373413086, 2.309990167617798, 2.3098700046539307, 2.309919595718384], "accuracy": [0.09140139818191528, 0.09285431355237961, 0.09232597798109055, 0.09338264167308807, 0.09496764093637466, 0.09219389408826828], "val_loss": [2.308931589126587, 2.308931589126587, 2.308931589126587, 2.308931589126587, 2.308931589126587, 2.308931589126587], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 3, 9], [0, 0, 1, 0, 2], [26, 39, 39, 16], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 7, 4, 7, 0, 5, 5, 4], [1, 2, 4, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 0], [0, 7, 4, 6], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 13, 8, 5, 4, 11, 6, 5, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(alpha, beta), tf.math.pow(tf.math.add(grad, grad), tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3104171752929688, 2.30940842628479, 2.3106517791748047, 2.3096096515655518, 2.3110976219177246, 2.310474157333374], "accuracy": [0.09549596905708313, 0.09166556596755981, 0.09509972482919693, 0.09192973375320435, 0.09047681838274002, 0.09034473448991776], "val_loss": [2.308149814605713, 2.308150053024292, 2.308149814605713, 2.308149814605713, 2.308149814605713, 2.308149814605713], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]