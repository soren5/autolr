[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8040000200271606, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131400108337402, 1.6228233575820923, 1.1580520868301392, 0.9955981373786926, 0.9046012759208679, 0.8339998722076416, 0.7978002429008484, 0.7645653486251831, 0.7438051104545593, 0.7081027626991272, 0.7043160796165466, 0.672825813293457, 0.6407099366188049, 0.6547733545303345, 0.6294031739234924, 0.620129406452179, 0.5881123542785645, 0.5864627957344055, 0.5808402895927429], "accuracy": [0.26482629776000977, 0.4885748326778412, 0.587769091129303, 0.6439043879508972, 0.6613393425941467, 0.6894729733467102, 0.7004358768463135, 0.7140403985977173, 0.7186633348464966, 0.7375511527061462, 0.7386078238487244, 0.7483819723129272, 0.7574957013130188, 0.7565711140632629, 0.759080708026886, 0.7637035846710205, 0.7795535326004028, 0.7786290049552917, 0.7800818681716919], "val_loss": [1.9250258207321167, 1.1202031373977661, 0.9237659573554993, 0.850435197353363, 0.716770350933075, 0.6891869306564331, 0.7064118385314941, 0.6252650022506714, 0.6146340370178223, 0.6180715560913086, 0.5719155073165894, 0.5867688059806824, 0.5505144596099854, 0.5289855003356934, 0.530563235282898, 0.5419864654541016, 0.5214496850967407, 0.5554361343383789, 0.5181698203086853], "val_accuracy": [0.5206666588783264, 0.628333330154419, 0.6710000038146973, 0.6769999861717224, 0.7360000014305115, 0.7543333172798157, 0.734000027179718, 0.7556666731834412, 0.7763333320617676, 0.7639999985694885, 0.7883333563804626, 0.7726666927337646, 0.7916666865348816, 0.809333324432373, 0.8080000281333923, 0.7993333339691162, 0.8016666769981384, 0.7816666960716248, 0.8033333420753479]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 8, 3, 5], [0, 0, 2, 0, 1], [26, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 0, 5, 5, 4], [2, 2, 0, 4, 0, 0, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 6, 4], [0], [1], [0], [6], [0]], "fitness": -0.24885714054107666, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(beta, tf.math.negative(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.8396379947662354, 2.2520103454589844, 2.324711561203003, 2.293642520904541, 2.3776111602783203, 2.3125693798065186, 2.30405855178833, 2.302672863006592, 2.2993764877319336], "accuracy": [0.19997358322143555, 0.16682076454162598, 0.09734513610601425, 0.12455421686172485, 0.24818386137485504, 0.09760929644107819, 0.09747721254825592, 0.10210011899471283, 0.1336679458618164], "val_loss": [2.3229520320892334, 2.402279853820801, 2.303856611251831, 2.18259334564209, 2.3237738609313965, 2.3045237064361572, 2.3022959232330322, 2.3007259368896484, 2.2905962467193604], "val_accuracy": [0.09600000083446503, 0.09933333098888397, 0.09833333641290665, 0.2613333463668823, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10199999809265137, 0.19566667079925537]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 3], [26, 66, 39], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 2, 4, 7, 0, 5, 4, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 8, 0, 2], [0, 1, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 7, 6, 2, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.add(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [29704.44140625, 4636903.5, 74887816.0, 539364672.0, 2398817024.0, 7904802304.0], "accuracy": [0.1014397069811821, 0.09840179979801178, 0.10077928751707077, 0.09906221181154251, 0.0940430611371994, 0.10157178342342377], "val_loss": [296708.78125, 15905116.0, 170548720.0, 929470272.0, 3481005312.0, 10267069440.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [2, 2, 4, 4, 0, 8, 5, 4], [2, 4, 4, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 3, 0, 2, 8], [0, 4, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 1, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, grad), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.square(grad))), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.5740084648132324, 2.3408215045928955, 2.3373525142669678, 2.339256525039673, 2.3352811336517334, 2.343858242034912], "accuracy": [0.1958790123462677, 0.10051512718200684, 0.10038304328918457, 0.09509972482919693, 0.10051512718200684, 0.10328886657953262], "val_loss": [2.3404040336608887, 2.3160572052001953, 2.318249464035034, 2.3580708503723145, 2.354668378829956, 2.3442184925079346], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5, 9], [0, 0, 1, 3, 2], [26, 39, 65], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 9], [2, 1, 0, 3, 0, 3, 1], [16, 1], [0, 1, 0, 1, 1, 1, 1, 1], [7, 3, 7, 2], [5, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 12, 8, 4, 2, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(alpha, tf.math.negative(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.multiply(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033382892608643, 2.3025851249694824, 38825.30859375, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]