[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209395170211792, 1.607125997543335, 1.1505767107009888, 0.9603605270385742, 0.8920279741287231, 0.823383092880249, 0.7928227186203003, 0.7592365741729736, 0.7256789803504944, 0.6999481916427612, 0.6947070360183716, 0.6725833415985107, 0.6608797311782837, 0.648192286491394, 0.6332027316093445, 0.6004929542541504, 0.6133205890655518, 0.5922272205352783, 0.5927153825759888, 0.5708031058311462, 0.5703678727149963, 0.5577523112297058, 0.540534257888794, 0.5454820394515991, 0.5418563485145569, 0.5167234539985657, 0.5288645625114441, 0.5134209394454956, 0.5062767863273621, 0.498065710067749, 0.5050292611122131, 0.49716153740882874], "accuracy": [0.261260062456131, 0.5054814219474792, 0.6053361296653748, 0.6584334969520569, 0.6800950765609741, 0.7079645991325378, 0.7121912837028503, 0.7248712182044983, 0.7301545143127441, 0.7383436560630798, 0.7412495017051697, 0.7519482374191284, 0.755118191242218, 0.7633073329925537, 0.7700436115264893, 0.7812706232070923, 0.7759873270988464, 0.7836481332778931, 0.7825914621353149, 0.7938185334205627, 0.7955356240272522, 0.7926297783851624, 0.7997622489929199, 0.8026680946350098, 0.8012151718139648, 0.8173292875289917, 0.8061022162437439, 0.8144234418869019, 0.8178576231002808, 0.819442629814148, 0.813498854637146, 0.8238013386726379], "val_loss": [1.92716646194458, 1.1081898212432861, 0.8846473693847656, 0.8442776799201965, 0.737290620803833, 0.6993997693061829, 0.6858680844306946, 0.6555555462837219, 0.6322734355926514, 0.6071242094039917, 0.6154283881187439, 0.6056391000747681, 0.5990850925445557, 0.5773875117301941, 0.5589486360549927, 0.5429929494857788, 0.5370585322380066, 0.5576011538505554, 0.5311424732208252, 0.5284333229064941, 0.5144020915031433, 0.5162017941474915, 0.5133689045906067, 0.5188660621643066, 0.48667430877685547, 0.48130109906196594, 0.4798593819141388, 0.4747089743614197, 0.4916854202747345, 0.4694195091724396, 0.4941410720348358, 0.4593326151371002], "val_accuracy": [0.6193333268165588, 0.6449999809265137, 0.6916666626930237, 0.6899999976158142, 0.7136666774749756, 0.7440000176429749, 0.7416666746139526, 0.7473333477973938, 0.7666666507720947, 0.7609999775886536, 0.7756666541099548, 0.7666666507720947, 0.7639999985694885, 0.7829999923706055, 0.7946666479110718, 0.7919999957084656, 0.7933333516120911, 0.7870000004768372, 0.793666660785675, 0.8026666641235352, 0.7993333339691162, 0.8063333630561829, 0.8043333292007446, 0.796999990940094, 0.824999988079071, 0.824999988079071, 0.8316666483879089, 0.8316666483879089, 0.8146666884422302, 0.824999988079071, 0.809333324432373, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [0, 85, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 6, 3, 0, 2, 6, 9, 8, 0, 7, 9, 2, 2, 7], [2, 0, 3, 1, 0, 4, 5, 1, 1], [16, 1, 55, 51], [0, 0, 1, 1], [0, 7], [5, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 25, 16, 9, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)))), tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.math.add(grad, alpha), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3064253330230713, 2.305157423019409, 2.310274124145508, 2.3113605976104736, 2.310616970062256, 2.315286159515381], "accuracy": [0.08889182657003403, 0.09879804402589798, 0.09813763201236725, 0.10130762308835983, 0.09893012791872025, 0.09985470771789551], "val_loss": [2.3030169010162354, 2.304513692855835, 2.307934522628784, 2.308659553527832, 2.312878370285034, 2.3095242977142334], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.09700000286102295, 0.10000000149011612, 0.09700000286102295, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [60, 13, 39], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 2], [16, 1], [0, 0, 1, 1], [0, 5], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3086984157562256, 2.3103888034820557, 2.3108291625976562, 2.3100266456604004, 2.3093411922454834, 2.31014347076416], "accuracy": [0.09866596013307571, 0.09060890227556229, 0.09047681838274002, 0.0936468094587326, 0.09813763201236725, 0.08717474341392517], "val_loss": [2.309419870376587, 2.309419870376587, 2.309419870376587, 2.309419870376587, 2.309419870376587, 2.309419870376587], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 5, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [3, 2, 5, 6, 3, 8, 2], [2, 0, 3, 1, 1], [16, 1], [0, 0, 1, 1], [0, 7], [4, 6], [17], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 9, 5, 4, 3, 8, 4, 4, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3088090419769287, 2.3102498054504395, 2.310364246368408, 2.3088293075561523, 2.3098254203796387, 2.3110342025756836], "accuracy": [0.09377889335155487, 0.08942015469074249, 0.0870426595211029, 0.09774138033390045, 0.08889182657003403, 0.09008057415485382], "val_loss": [2.3090200424194336, 2.3090200424194336, 2.3090200424194336, 2.3090200424194336, 2.3090200424194336, 2.3090200424194336], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 3, 7, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [1, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308948040008545, 2.3081583976745605, 2.3106353282928467, 2.30961012840271, 2.309448719024658, 2.308910608291626], "accuracy": [0.09272222965955734, 0.09457138925790787, 0.08730682730674744, 0.0948355570435524, 0.09047681838274002, 0.08942015469074249], "val_loss": [2.3089396953582764, 2.3089396953582764, 2.3089396953582764, 2.3089396953582764, 2.3089396953582764, 2.3089396953582764], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]