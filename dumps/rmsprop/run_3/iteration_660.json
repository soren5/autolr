[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7954285740852356, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2133030891418457, 1.6030499935150146, 1.140359878540039, 0.9546099901199341, 0.905055582523346, 0.8239261507987976, 0.8108860850334167, 0.7479975819587708, 0.7296266555786133, 0.7233268618583679, 0.6820312142372131, 0.6611833572387695, 0.6524490714073181, 0.6392035484313965, 0.6193921566009521, 0.6146909594535828, 0.6134504675865173, 0.5926169753074646, 0.5822275876998901], "accuracy": [0.2635054886341095, 0.5151234865188599, 0.6007132530212402, 0.6577730774879456, 0.6711134314537048, 0.7036058902740479, 0.7083608508110046, 0.7248712182044983, 0.7378153204917908, 0.7312111854553223, 0.7483819723129272, 0.7549861073493958, 0.7592127919197083, 0.7611940503120422, 0.7769119143486023, 0.767930269241333, 0.7703077793121338, 0.7799497842788696, 0.7849689722061157], "val_loss": [1.937000036239624, 1.1249767541885376, 0.918643057346344, 0.8218804001808167, 0.7092868685722351, 0.7265347242355347, 0.6841250658035278, 0.6168623566627502, 0.6166782975196838, 0.6075457334518433, 0.5741596817970276, 0.5656923651695251, 0.5947461128234863, 0.5488191843032837, 0.5235684514045715, 0.560296893119812, 0.5259952545166016, 0.5340762734413147, 0.5612184405326843], "val_accuracy": [0.5540000200271606, 0.6349999904632568, 0.6746666431427002, 0.7070000171661377, 0.7416666746139526, 0.7173333168029785, 0.7526666522026062, 0.7633333206176758, 0.7706666588783264, 0.7786666750907898, 0.7796666622161865, 0.7926666736602783, 0.7720000147819519, 0.8046666383743286, 0.8029999732971191, 0.7829999923706055, 0.7893333435058594, 0.7963333129882812, 0.7829999923706055]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 3, 1, 3, 5], [0, 0, 2, 0, 3], [41, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 2, 0, 4, 0, 5, 5, 4], [5, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1], [0, 7], [0, 1, 1, 4], [22], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08651433140039444, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 5, 5], [0, 2, 1, 0, 3], [26, 39, 39], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 4, 0, 5, 9, 4], [2, 2, 0, 4, 0, 3, 1], [19, 74], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 5, 2], [0, 1, 1, 4, 6], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(alpha))), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034698963165283, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 0], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 0, 4, 1, 5, 9, 4], [5, 3, 0, 4, 0, 0, 1], [16, 1, 7], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 5, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 8, 5, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.pow(tf.math.subtract(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303180456161499, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 77, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 4, 4, 0, 5, 7, 4], [2, 2, 0, 4, 0, 3, 1], [17, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [7, 3, 0, 2, 3, 2, 9], [0, 1, 1, 4, 4], [11, 75], [1], [0], [1], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), grad), tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.math.add(grad, grad)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310147285461426, 2.309401750564575, 2.3098161220550537, 2.310473918914795, 2.310106039047241, 2.310638189315796], "accuracy": [0.09259014576673508, 0.09325055778026581, 0.09100515395402908, 0.09311848133802414, 0.08981640636920929, 0.08849557489156723], "val_loss": [2.308500289916992, 2.308500289916992, 2.308500289916992, 2.308500289916992, 2.308500289916992, 2.308500289916992], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]