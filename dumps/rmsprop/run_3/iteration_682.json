[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2074012756347656, 1.5961145162582397, 1.1253383159637451, 0.9421405792236328, 0.9101095795631409, 0.8080811500549316, 0.778512716293335, 0.7348575592041016, 0.7303693294525146, 0.7112733721733093, 0.6869094967842102, 0.6603101491928101, 0.6442710757255554, 0.6379519701004028, 0.6148242354393005, 0.6178616881370544, 0.5834924578666687, 0.6045372486114502, 0.5701907277107239, 0.5530163645744324, 0.5529468655586243, 0.5596774816513062, 0.5355728268623352, 0.5384361147880554, 0.5240769386291504, 0.5127974152565002, 0.49784260988235474, 0.48729997873306274, 0.49968570470809937, 0.4791593551635742, 0.48288264870643616, 0.47842293977737427, 0.4684807062149048, 0.4704127311706543, 0.45703646540641785, 0.45788151025772095, 0.45769134163856506, 0.4552883207798004, 0.43936267495155334, 0.44923052191734314], "accuracy": [0.2631092369556427, 0.5127459764480591, 0.6026945114135742, 0.6634526252746582, 0.6709813475608826, 0.6996433734893799, 0.7108704447746277, 0.7235503792762756, 0.7223616242408752, 0.7305507659912109, 0.7409853339195251, 0.752212405204773, 0.7560427784919739, 0.7557786107063293, 0.7658169269561768, 0.7667415142059326, 0.7778365015983582, 0.7717606425285339, 0.7876105904579163, 0.7932901978492737, 0.7971205711364746, 0.787082314491272, 0.8000264167785645, 0.8017435073852539, 0.8035926818847656, 0.8108572363853455, 0.8121780753135681, 0.8201030492782593, 0.8156121969223022, 0.8203672170639038, 0.821820080280304, 0.8257825970649719, 0.8277638554573059, 0.8240655064582825, 0.8347642421722412, 0.833179235458374, 0.8358209133148193, 0.8317263126373291, 0.8364813327789307, 0.8352925777435303], "val_loss": [1.9107731580734253, 1.142297387123108, 0.916490912437439, 0.7966288328170776, 0.7240719199180603, 0.7361604571342468, 0.7029173374176025, 0.649376392364502, 0.6577597260475159, 0.6169583797454834, 0.6079046130180359, 0.5693048238754272, 0.5907676815986633, 0.5653702020645142, 0.5438299775123596, 0.5317603945732117, 0.6265532374382019, 0.5185250639915466, 0.522822916507721, 0.5006967186927795, 0.5194118618965149, 0.5078226923942566, 0.4952092170715332, 0.500316321849823, 0.48237353563308716, 0.4710219204425812, 0.4688785672187805, 0.5323212146759033, 0.473734050989151, 0.4557989537715912, 0.4731839895248413, 0.4612257480621338, 0.45056048035621643, 0.45249006152153015, 0.437744677066803, 0.4502006769180298, 0.4534156918525696, 0.43870341777801514, 0.43550390005111694, 0.4360003173351288], "val_accuracy": [0.5346666574478149, 0.6143333315849304, 0.6643333435058594, 0.6940000057220459, 0.7143333554267883, 0.7226666808128357, 0.7256666421890259, 0.734333336353302, 0.7446666955947876, 0.765999972820282, 0.7673333287239075, 0.7776666879653931, 0.7713333368301392, 0.7846666574478149, 0.7963333129882812, 0.8073333501815796, 0.7586666941642761, 0.8056666851043701, 0.8080000281333923, 0.8153333067893982, 0.8040000200271606, 0.8169999718666077, 0.8223333358764648, 0.8106666803359985, 0.8196666836738586, 0.8259999752044678, 0.8330000042915344, 0.7889999747276306, 0.8273333311080933, 0.8333333134651184, 0.8209999799728394, 0.8299999833106995, 0.8360000252723694, 0.8343333601951599, 0.840666651725769, 0.8303333520889282, 0.8289999961853027, 0.8379999995231628, 0.8383333086967468, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 3, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [89, 39, 94], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 8, 4], [3, 2, 0, 4, 5, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 0], [7, 3, 0, 2], [0, 1, 1, 3], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 12, 7, 5, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, beta), tf.math.pow(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [76854.5, 1.969231066686269e+32, 19188.2109375, 3148599.25, 516233856.0, 85552406528.0, NaN], "accuracy": [0.18319904804229736, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10051512718200684], "val_loss": [67357397483520.0, 1000.0800170898438, 163367.6875, 26890910.0, 4426762752.0, 728731287552.0, NaN], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 4, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 2, 0], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 3, 0, 2, 2, 9, 5, 7, 5], [0, 1, 1, 0, 4], [0, 13, 46], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 5, 2, 3, 1, 14, 9, 5, 3, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.square(alpha), alpha))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [15572.48828125, 283562999808.0, 4.5376226403024896e+18, 1.8516234803309623e+26, NaN, NaN], "accuracy": [0.09655263274908066, 0.09694888442754745, 0.10011887550354004, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777], "val_loss": [1010147.3125, 17889098727424.0, 3.010616240712995e+20, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.09866666793823242, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 62], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 7, 7, 3, 2, 4, 8], [0, 2, 1, 4, 4, 2], [0], [0, 1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 0, 1, 1, 13, 7, 6, 2, 13, 7, 6, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, alpha), tf.math.pow(grad, grad))), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3096351623535156, 2.3108136653900146, 2.3106205463409424, 2.3103935718536377, 2.3091320991516113, 2.311084508895874], "accuracy": [0.09774138033390045, 0.08836349099874496, 0.08955223858356476, 0.09074098616838455, 0.09219389408826828, 0.08889182657003403], "val_loss": [2.3082821369171143, 2.3082821369171143, 2.3082821369171143, 2.3082821369171143, 2.3082821369171143, 2.3082821369171143], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]