[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8242856860160828, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2084059715270996, 1.6038011312484741, 1.1543301343917847, 0.9786576628684998, 0.8726652264595032, 0.8169733285903931, 0.8043738007545471, 0.7603386044502258, 0.7234115600585938, 0.7285849452018738, 0.6797506213188171, 0.6611868143081665, 0.6610619425773621, 0.6236903071403503, 0.6278843283653259, 0.6170470118522644, 0.5979393124580383, 0.6013315320014954, 0.5832691192626953, 0.5719335079193115, 0.562519371509552, 0.5471398830413818, 0.5450665950775146, 0.5442629456520081, 0.5302197933197021, 0.5305806398391724, 0.5223183631896973, 0.5065411329269409, 0.49483585357666016, 0.4914071261882782, 0.49691763520240784, 0.4866892695426941, 0.4776793420314789, 0.4783749282360077, 0.4721246063709259, 0.4547823667526245, 0.4506758451461792, 0.46155351400375366, 0.45049041509628296, 0.44750502705574036, 0.44255968928337097, 0.4468572437763214, 0.4283035397529602, 0.4408831298351288, 0.4381316900253296, 0.42132771015167236], "accuracy": [0.2623167335987091, 0.4991414546966553, 0.5982036590576172, 0.6527539491653442, 0.6892088055610657, 0.707040011882782, 0.6988508701324463, 0.7165499925613403, 0.7349095344543457, 0.7312111854553223, 0.7466648817062378, 0.7508915662765503, 0.7504953145980835, 0.7714964747428894, 0.7680623531341553, 0.7707040309906006, 0.774798572063446, 0.7770439982414246, 0.7825914621353149, 0.7874785661697388, 0.7924976944923401, 0.8034605979919434, 0.7956677079200745, 0.8005547523498535, 0.8057059645652771, 0.8029322624206543, 0.8035926818847656, 0.8138951063156128, 0.819970965385437, 0.8198388814926147, 0.8164047002792358, 0.8216879963874817, 0.8245938420295715, 0.8207634687423706, 0.8240655064582825, 0.8318583965301514, 0.8338396549224854, 0.8301413059234619, 0.8301413059234619, 0.833179235458374, 0.8330471515655518, 0.835160493850708, 0.8425571322441101, 0.8387266993522644, 0.8356888294219971, 0.8389908671379089], "val_loss": [1.9208738803863525, 1.146260380744934, 0.9287088513374329, 0.8079652786254883, 0.7617291808128357, 0.7397124767303467, 0.6680769324302673, 0.6580198407173157, 0.6281402707099915, 0.6305135488510132, 0.6030873656272888, 0.6485231518745422, 0.5721631050109863, 0.5858816504478455, 0.5535696148872375, 0.542582631111145, 0.5419951677322388, 0.5367476344108582, 0.5494844317436218, 0.5125970840454102, 0.5248874425888062, 0.5023500323295593, 0.5250071287155151, 0.49373722076416016, 0.49031779170036316, 0.48916804790496826, 0.47505778074264526, 0.47501659393310547, 0.4622906446456909, 0.4841947853565216, 0.4612496793270111, 0.4642437696456909, 0.47517648339271545, 0.44252800941467285, 0.44667133688926697, 0.442640095949173, 0.4651455879211426, 0.44408267736434937, 0.432888925075531, 0.4420681893825531, 0.43379268050193787, 0.44340428709983826, 0.4357782304286957, 0.4262494444847107, 0.4318351745605469, 0.44128286838531494], "val_accuracy": [0.562333345413208, 0.640999972820282, 0.6629999876022339, 0.7096666693687439, 0.715666651725769, 0.731333315372467, 0.7486666440963745, 0.7540000081062317, 0.765333354473114, 0.7590000033378601, 0.7630000114440918, 0.7456666827201843, 0.7823333144187927, 0.7726666927337646, 0.7900000214576721, 0.7986666560173035, 0.7900000214576721, 0.7976666688919067, 0.7923333048820496, 0.8109999895095825, 0.812333345413208, 0.8119999766349792, 0.7979999780654907, 0.8173333406448364, 0.8143333196640015, 0.8216666579246521, 0.8220000267028809, 0.8303333520889282, 0.8316666483879089, 0.8186666369438171, 0.8333333134651184, 0.8226666450500488, 0.8190000057220459, 0.8379999995231628, 0.8339999914169312, 0.8339999914169312, 0.8230000138282776, 0.8386666774749756, 0.8386666774749756, 0.8339999914169312, 0.843666672706604, 0.8349999785423279, 0.8370000123977661, 0.8429999947547913, 0.8423333168029785, 0.8336666822433472]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [4, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 1, 0, 0, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [6], [0]], "fitness": -0.24885714054107666, "mapping_values": [1, 1, 0, 1, 1, 9, 6, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3649442195892334, 2.2975480556488037, 2.3549888134002686, 2.304408550262451, 2.3032257556915283, 2.3030049800872803, 2.302769184112549], "accuracy": [0.18782195448875427, 0.1254788041114807, 0.15189538896083832, 0.09879804402589798, 0.1006472036242485, 0.09721305221319199, 0.09694888442754745], "val_loss": [2.303816556930542, 2.1510276794433594, 2.3056633472442627, 2.303274631500244, 2.3027188777923584, 2.3025097846984863, 2.3025293350219727], "val_accuracy": [0.1003333330154419, 0.24966666102409363, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 2, 3, 1, 2, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [8, 9, 4, 8, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2, 3], [0, 1, 3, 4, 2], [67], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 3, 2, 2, 0, 1, 10, 5, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), alpha), sigma)), grad), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 1, 0, 2], [26, 41, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [9, 9, 4, 7, 0, 7, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 1, 0, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [42672.62109375, 783198715904.0, 1.3182039407848325e+19, 1.0013389822962331e+26, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09879804402589798, 0.09893012791872025, 0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2876269.25, 51012849106944.0, 8.49472550520576e+20, 2.3025853633880615, NaN, NaN, NaN, NaN, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.10066666454076767, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 17, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [7, 3, 4, 2, 4, 0, 3, 3, 8, 7, 9, 6, 9, 5, 9], [0, 1, 7, 4, 5, 5, 3], [0, 99, 28, 92], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 22, 15, 7, 4, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(alpha, grad), tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(grad), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad))), grad)))), sigma), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]