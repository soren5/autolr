[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8002856969833374, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2070937156677246, 1.6066371202468872, 1.1338251829147339, 0.9806214570999146, 0.8901168704032898, 0.810567319393158, 0.7905271649360657, 0.7440802454948425, 0.7084557414054871, 0.6911534070968628, 0.6826490759849548, 0.6417770385742188, 0.6417444944381714, 0.6290149688720703, 0.6200612187385559, 0.6159669756889343, 0.5832710266113281, 0.5730370283126831, 0.5638536214828491, 0.5543956160545349, 0.5560722947120667, 0.5434734225273132, 0.5227478742599487, 0.5290805697441101, 0.5165892243385315, 0.5111570358276367, 0.5042902827262878, 0.5110611319541931, 0.4873482882976532, 0.4840204119682312, 0.47310203313827515, 0.46719181537628174, 0.46267396211624146, 0.4688035249710083, 0.4680723547935486, 0.4562179148197174, 0.45547547936439514, 0.43885883688926697, 0.43025490641593933, 0.42776578664779663, 0.43596068024635315, 0.4278326630592346, 0.42064398527145386, 0.4299877882003784, 0.4135369062423706, 0.40866169333457947, 0.40368548035621643, 0.4023211598396301, 0.40068507194519043, 0.39428314566612244], "accuracy": [0.2743362784385681, 0.49385812878608704, 0.6061286330223083, 0.653150200843811, 0.6742834448814392, 0.7054550051689148, 0.7137762308120728, 0.7217012047767639, 0.7337207794189453, 0.7417778372764587, 0.7409853339195251, 0.7618544697761536, 0.7629110813140869, 0.7597411274909973, 0.7705719470977783, 0.7711002230644226, 0.7802139520645142, 0.7836481332778931, 0.7878747582435608, 0.7924976944923401, 0.7902522683143616, 0.7942147850990295, 0.8107251524925232, 0.8038568496704102, 0.8084797263145447, 0.8101968169212341, 0.807158887386322, 0.8084797263145447, 0.8185180425643921, 0.8175934553146362, 0.8261788487434387, 0.8276317715644836, 0.828292191028595, 0.8271034359931946, 0.8230088353157043, 0.8304054737091064, 0.8337075710296631, 0.8381983637809753, 0.8442742228507996, 0.8413683772087097, 0.8413683772087097, 0.8417646288871765, 0.8448025584220886, 0.8459912538528442, 0.8466516733169556, 0.8498216867446899, 0.8540483713150024, 0.8520671129226685, 0.8485008478164673, 0.8553691506385803], "val_loss": [1.9188792705535889, 1.125601053237915, 0.957506000995636, 0.8861480951309204, 0.7574394345283508, 0.7492293119430542, 0.7044214010238647, 0.6845183968544006, 0.6539639830589294, 0.6341708898544312, 0.6075890064239502, 0.6140193939208984, 0.6172597408294678, 0.5668330192565918, 0.5839100480079651, 0.5447659492492676, 0.5430789589881897, 0.5591248869895935, 0.5292362570762634, 0.5177003741264343, 0.5144311785697937, 0.5110758543014526, 0.4926556944847107, 0.49374258518218994, 0.4796643555164337, 0.4903475046157837, 0.4737493097782135, 0.47496122121810913, 0.4660639762878418, 0.4655087888240814, 0.47904831171035767, 0.45429760217666626, 0.45436611771583557, 0.45611780881881714, 0.451018750667572, 0.4505627453327179, 0.4342242479324341, 0.4299831688404083, 0.4344319701194763, 0.44220060110092163, 0.4241896867752075, 0.44020313024520874, 0.4404661953449249, 0.41996297240257263, 0.41848769783973694, 0.41686031222343445, 0.4058479070663452, 0.4306613802909851, 0.410297691822052, 0.40109550952911377], "val_accuracy": [0.5366666913032532, 0.640666663646698, 0.6756666898727417, 0.6656666398048401, 0.7179999947547913, 0.7233333587646484, 0.722000002861023, 0.7463333606719971, 0.7613333463668823, 0.7606666684150696, 0.7723333239555359, 0.7893333435058594, 0.7509999871253967, 0.793666660785675, 0.7863333225250244, 0.800000011920929, 0.7990000247955322, 0.7793333530426025, 0.8086666464805603, 0.8146666884422302, 0.8230000138282776, 0.8216666579246521, 0.8186666369438171, 0.8253333568572998, 0.831333339214325, 0.8183333277702332, 0.8343333601951599, 0.8336666822433472, 0.8320000171661377, 0.8306666612625122, 0.8253333568572998, 0.8386666774749756, 0.8349999785423279, 0.8393333554267883, 0.8366666436195374, 0.8393333554267883, 0.8460000157356262, 0.8496666550636292, 0.8473333120346069, 0.8389999866485596, 0.8519999980926514, 0.8463333249092102, 0.8316666483879089, 0.8493333458900452, 0.8586666584014893, 0.8550000190734863, 0.8556666374206543, 0.8399999737739563, 0.8543333411216736, 0.8556666374206543]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 9], [0, 0, 3, 0, 2], [0, 39, 96, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [8, 2, 0, 6, 3, 8, 2], [0, 0, 3, 5, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [70], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 3, 8, 7, 2, 1, 5, 1, 8, 6, 3, 6, 7], [2, 5, 1, 5, 3, 0, 1, 3, 7, 2, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 10, 6, 4, 2, 4, 2, 2, 1, 25, 14, 11, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(beta, grad), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.subtract(alpha, grad), tf.math.square(sigma)), tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), sigma), tf.math.add(grad, beta))), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 2, 7, 1, 3, 5, 8], [0, 0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 0, 2, 3, 8, 2, 1, 1, 4, 5, 0], [2, 0, 3, 1, 0, 2, 4, 1], [92, 1], [1, 1, 1, 1], [0, 7], [0, 6], [44], [0, 0, 0, 1, 1], [0, 7, 5], [2, 6], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(beta), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(beta, tf.math.pow(grad, tf.math.square(tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 13, 7, 6, 3, 20, 12, 8, 2, 1, 0, 1, 1, 5, 3, 2, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 1, 3, 8, 2, 6], [1, 2, 3, 1, 5, 1], [16, 1], [0, 0, 1, 1], [0, 0], [0, 6], [73], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 6, 3, 3, 2, 14, 8, 6, 0, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.subtract(tf.math.multiply(beta, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309281826019287, 2.311074733734131, 2.3092169761657715, 2.30881404876709, 2.310103416442871, 2.309805154800415], "accuracy": [0.09668471664190292, 0.08981640636920929, 0.09760929644107819, 0.09285431355237961, 0.09826971590518951, 0.09325055778026581], "val_loss": [2.308877944946289, 2.308877944946289, 2.308877944946289, 2.308877944946289, 2.308877944946289, 2.308877944946289], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 8, 3, 5, 2, 4, 8, 4, 0, 0, 5, 3, 5, 5], [0, 0, 1, 0, 1, 3, 0, 0], [0, 39, 39, 24, 82], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 7, 0, 6, 3, 5, 2], [2, 0, 3, 5, 0], [16, 1], [0, 1, 0, 0], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.08085714280605316, "mapping_values": [1, 24, 16, 8, 5, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.square(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.math.negative(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha))))))), grad)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.114531370414899e+16, 2.407400251116749e+16, 2.4442824237776896e+16, 2.3786488810438656e+16, 2.3786871062528e+16, 2.421213724934144e+16], "accuracy": [0.09840179979801178, 0.09060890227556229, 0.09668471664190292, 0.09549596905708313, 0.09840179979801178, 0.08942015469074249], "val_loss": [1.5360995631300608e+16, 1.5361570083176448e+16, 1.5361570083176448e+16, 1.5361570083176448e+16, 1.5361570083176448e+16, 1.5361570083176448e+16], "val_accuracy": [0.08133333176374435, 0.08133333176374435, 0.08133333176374435, 0.08133333176374435, 0.08133333176374435, 0.08133333176374435]}}]