[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8019999861717224, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21209454536438, 1.615820050239563, 1.1599668264389038, 0.9661641716957092, 0.8804785013198853, 0.8134134411811829, 0.7886599898338318, 0.7853918671607971, 0.7329061031341553, 0.682601809501648, 0.700073778629303, 0.6694657206535339, 0.6467625498771667, 0.6238080263137817, 0.6301209926605225, 0.6067699193954468, 0.6170359253883362, 0.5914592146873474, 0.5785444378852844], "accuracy": [0.2595430016517639, 0.4975564777851105, 0.5995244979858398, 0.6514331102371216, 0.6793025732040405, 0.7040021419525146, 0.7143045663833618, 0.7103421092033386, 0.7277770638465881, 0.7495707273483276, 0.7326641082763672, 0.7515519857406616, 0.7578919529914856, 0.7693831920623779, 0.7717606425285339, 0.7718927264213562, 0.7695152759552002, 0.77677983045578, 0.7886672616004944], "val_loss": [1.9167301654815674, 1.0584348440170288, 0.8753661513328552, 0.7747310996055603, 0.6826343536376953, 0.7795093655586243, 0.6727925539016724, 0.6005091071128845, 0.6024506092071533, 0.585820734500885, 0.5709527730941772, 0.5490366816520691, 0.539910078048706, 0.5263577103614807, 0.5505694150924683, 0.5923258662223816, 0.5084875226020813, 0.5104820132255554, 0.49953165650367737], "val_accuracy": [0.5493333339691162, 0.6833333373069763, 0.7003333568572998, 0.7196666598320007, 0.7523333430290222, 0.7233333587646484, 0.7393333315849304, 0.784333348274231, 0.7846666574478149, 0.7860000133514404, 0.7916666865348816, 0.7929999828338623, 0.8090000152587891, 0.812666654586792, 0.7883333563804626, 0.7743333578109741, 0.8083333373069763, 0.8073333501815796, 0.8090000152587891]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 6, 5], [0, 1, 1, 0, 2, 0], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 3], [16, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [7, 3, 0, 2, 2, 7, 3, 9, 8, 8, 9, 2], [4, 1, 1, 4, 3, 5], [0, 80, 28], [1], [0], [4], [0]], "fitness": -0.11057142913341522, "mapping_values": [1, 13, 7, 6, 3, 12, 7, 5, 1, 18, 12, 6, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, alpha), tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(grad))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad)))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.239898443222046, 2.3055531978607178, 2.983159065246582, 2.307180166244507, 2.3022820949554443, 2.3290343284606934, 2.303068161010742], "accuracy": [0.22863557934761047, 0.13961167633533478, 0.10553427785634995, 0.09496764093637466, 0.1010434553027153, 0.11134592443704605, 0.09853387624025345], "val_loss": [2.424395799636841, 6.6272149085998535, 2.3102896213531494, 2.3042871952056885, 2.293600559234619, 2.3033690452575684, 2.302436590194702], "val_accuracy": [0.09799999743700027, 0.1146666631102562, 0.1003333330154419, 0.1003333330154419, 0.11166666448116302, 0.09866666793823242, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [96, 39, 95], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 9, 4, 7, 4, 5, 5, 4, 4, 8], [4, 2, 0, 4, 0, 3, 1], [16, 1, 19], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [7, 3, 0, 2, 8, 2, 2, 9], [2, 1, 1, 4, 0], [0, 56], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 16, 10, 6, 3, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.pow(tf.math.square(tf.math.square(tf.math.pow(tf.math.pow(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.math.add(alpha, alpha)), tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3039133548736572, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [6, 9, 4, 7, 0, 4, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 0, 1, 5, 4, 1, 6, 7, 6, 9, 2, 6, 1, 6, 4, 9, 3, 6, 0, 0, 1, 8, 1, 8, 6, 8, 3, 3, 7, 3, 1, 2], [0, 7, 1, 4, 2, 1, 6, 6, 0, 4, 4, 3, 6, 5, 1, 1, 0, 7, 4, 6, 6, 7, 4, 3], [0, 53, 55, 65, 20], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 3, 2, 1, 1, 59, 35, 24, 5, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.subtract(grad, tf.math.square(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(beta, tf.math.subtract(alpha, tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.subtract(grad, tf.math.sqrt(grad))), tf.math.divide_no_nan(tf.math.sqrt(sigma), grad)))), tf.math.multiply(grad, alpha)))), alpha), tf.math.multiply(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), grad))))), grad)), tf.math.multiply(grad, tf.math.subtract(grad, tf.math.add(grad, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303476095199585, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 3, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 0, 39], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 9, 4, 7, 1, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 8], [7, 0, 1, 4], [0], [0, 0, 1], [0, 0], [1], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 7, 4, 3, 1, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [2.3100292682647705, 2.3094594478607178, 2.309256076812744, 2.3094775676727295, 2.3091108798980713, 2.3100063800811768], "accuracy": [0.09219389408826828, 0.09179764986038208, 0.09311848133802414, 0.09655263274908066, 0.09100515395402908, 0.09219389408826828], "val_loss": [2.309028387069702, 2.309028387069702, 2.309028387069702, 2.309028387069702, 2.309028387069702, 2.309028387069702], "val_accuracy": [0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545, 0.08533333241939545]}}]