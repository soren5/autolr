[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2070696353912354, 1.604610800743103, 1.1448115110397339, 1.0093004703521729, 0.8949521780014038, 0.8222773671150208, 0.7946327328681946, 0.7542626261711121, 0.7223501205444336, 0.7379370927810669, 0.6892352104187012, 0.6735420823097229, 0.6491933465003967, 0.6509853601455688, 0.6515002250671387, 0.6185036897659302, 0.6247942447662354, 0.6005191206932068, 0.5810666084289551, 0.5809867978096008, 0.5743640065193176, 0.5632644295692444, 0.5614795684814453, 0.541070818901062, 0.5404297113418579, 0.5308133363723755, 0.5357435345649719, 0.5231829881668091, 0.5188155770301819, 0.5127579569816589, 0.5123775005340576, 0.4927821457386017, 0.48921826481819153, 0.4998301565647125, 0.4810731112957001, 0.47791874408721924, 0.47903507947921753, 0.4603208005428314, 0.47014352679252625, 0.46789735555648804, 0.4517175555229187, 0.44512939453125, 0.4506427049636841, 0.43698373436927795, 0.43532460927963257, 0.4432496726512909], "accuracy": [0.26218464970588684, 0.49465063214302063, 0.6042794585227966, 0.6395456194877625, 0.6763967871665955, 0.7022850513458252, 0.7102100253105164, 0.7177387475967407, 0.7345132827758789, 0.7211728692054749, 0.7500990629196167, 0.7469290494918823, 0.7585523724555969, 0.7588165402412415, 0.7518161535263062, 0.7680623531341553, 0.7705719470977783, 0.7751948237419128, 0.7836481332778931, 0.7862898111343384, 0.7864218950271606, 0.7931581139564514, 0.7873464822769165, 0.8018755912780762, 0.8020076751708984, 0.806630551815033, 0.8025360107421875, 0.8115176558494568, 0.8067626357078552, 0.8108572363853455, 0.817461371421814, 0.8198388814926147, 0.8202351331710815, 0.8131026029586792, 0.8318583965301514, 0.8277638554573059, 0.8227446675300598, 0.8339717388153076, 0.8308017253875732, 0.8321225643157959, 0.8385946154594421, 0.8424250483512878, 0.8411042094230652, 0.8446704745292664, 0.8384625315666199, 0.8407079577445984], "val_loss": [1.9124547243118286, 1.1105215549468994, 0.9477200508117676, 0.7740675210952759, 0.7503330707550049, 0.7105624079704285, 0.6832444071769714, 0.6460763216018677, 0.6294408440589905, 0.6193791031837463, 0.606581449508667, 0.5971345901489258, 0.5549363493919373, 0.5950215458869934, 0.5502727031707764, 0.5633001327514648, 0.5380997061729431, 0.5384277105331421, 0.5288416147232056, 0.5315307378768921, 0.5242884755134583, 0.5053919553756714, 0.5098488926887512, 0.530569851398468, 0.49950361251831055, 0.4796408712863922, 0.4834042191505432, 0.4933834671974182, 0.5042931437492371, 0.49322476983070374, 0.4562091529369354, 0.473914235830307, 0.4543642997741699, 0.45839130878448486, 0.44580456614494324, 0.4629964232444763, 0.44404008984565735, 0.459031343460083, 0.4429229199886322, 0.4343661963939667, 0.42262983322143555, 0.4259289503097534, 0.41740337014198303, 0.42074650526046753, 0.43722397089004517, 0.4354763925075531], "val_accuracy": [0.4906666576862335, 0.6439999938011169, 0.6446666717529297, 0.7089999914169312, 0.6943333148956299, 0.7283333539962769, 0.7250000238418579, 0.7369999885559082, 0.7673333287239075, 0.762666642665863, 0.7676666378974915, 0.7756666541099548, 0.7860000133514404, 0.7630000114440918, 0.7919999957084656, 0.7873333096504211, 0.7960000038146973, 0.796999990940094, 0.7923333048820496, 0.8059999942779541, 0.7953333258628845, 0.8086666464805603, 0.8050000071525574, 0.8050000071525574, 0.8046666383743286, 0.8226666450500488, 0.8236666917800903, 0.8206666707992554, 0.8196666836738586, 0.8106666803359985, 0.8299999833106995, 0.8199999928474426, 0.8316666483879089, 0.8299999833106995, 0.8383333086967468, 0.8259999752044678, 0.8373333215713501, 0.8199999928474426, 0.8389999866485596, 0.8370000123977661, 0.8483333587646484, 0.8433333039283752, 0.8483333587646484, 0.8446666598320007, 0.8320000171661377, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 35, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 7, 3, 6, 3, 5, 2, 6, 0, 4, 2], [2, 0, 3, 1, 0, 2, 5, 1, 5], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 20, 11, 9, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))), grad)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12349755316972733, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5, 8, 0, 9], [0, 0, 1, 0, 2], [65, 39, 39, 29], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9], [2, 5, 3, 1, 0], [35, 1], [0, 0, 1, 0, 1, 1], [0, 7, 3], [0, 6, 4], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 13, 9, 4, 4, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3099849224090576, 2.310256242752075, 2.310002326965332, 2.3103320598602295, 2.309396266937256, 2.3102359771728516], "accuracy": [0.09060890227556229, 0.0944393053650856, 0.09285431355237961, 0.08955223858356476, 0.08955223858356476, 0.09047681838274002], "val_loss": [2.308767795562744, 2.308767795562744, 2.308767795562744, 2.308767795562744, 2.308767795562744, 2.308767795562744], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 6, 4, 8, 8], [2, 0, 3, 1, 0, 0, 1], [16, 1, 96], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 18, 11, 7, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.308725118637085, 2.3092410564422607, 2.3102946281433105, 2.309467315673828, 2.310326099395752, 2.3093698024749756], "accuracy": [0.09351472556591034, 0.08730682730674744, 0.09325055778026581, 0.09166556596755981, 0.08981640636920929, 0.09245806187391281], "val_loss": [2.3091495037078857, 2.3091495037078857, 2.3091495037078857, 2.3091495037078857, 2.3091495037078857, 2.3091495037078857], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 2, 3, 1, 3, 7], [1, 0, 1, 3, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [83, 1], [0, 0, 1, 1], [0, 7], [6, 7], [48], [0, 1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 9, 4, 5, 1, 4, 2, 2, 1, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), grad), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.308978796005249, 2.3106181621551514, 2.3105340003967285, 2.310471534729004, 2.3093414306640625, 2.31074595451355], "accuracy": [0.09047681838274002, 0.09179764986038208, 0.08585391938686371, 0.08809932321310043, 0.09589222073554993, 0.09430722147226334], "val_loss": [2.309061288833618, 2.309061288833618, 2.309061288833618, 2.309061288833618, 2.309061288833618, 2.309061288833618], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]