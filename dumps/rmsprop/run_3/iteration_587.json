[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8425714373588562, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103090286254883, 1.6033425331115723, 1.1591414213180542, 0.9821960926055908, 0.8867888450622559, 0.8326780200004578, 0.783835232257843, 0.7498298287391663, 0.7150415778160095, 0.6980339884757996, 0.6719309091567993, 0.6624308228492737, 0.6459136009216309, 0.6207241415977478, 0.6283202171325684, 0.6015710830688477, 0.5775862336158752, 0.5828496813774109, 0.5762948393821716, 0.5579559803009033, 0.550296425819397, 0.5454360842704773, 0.5431313514709473, 0.530511200428009, 0.5215085744857788, 0.4988635778427124, 0.5165322422981262, 0.49661844968795776, 0.49450138211250305, 0.47970345616340637, 0.4885244369506836, 0.4780261218547821, 0.4801618754863739, 0.46479129791259766, 0.4621465504169464, 0.44579699635505676, 0.46000316739082336, 0.44568654894828796, 0.4379918873310089, 0.4368731677532196, 0.42813271284103394, 0.43217337131500244, 0.4263128340244293], "accuracy": [0.2712983787059784, 0.5031039714813232, 0.594241201877594, 0.6507726907730103, 0.6757363677024841, 0.6970016956329346, 0.7143045663833618, 0.7230220437049866, 0.735569953918457, 0.7401928305625916, 0.755118191242218, 0.7478536367416382, 0.7594769597053528, 0.7667415142059326, 0.7664773464202881, 0.7758552432060242, 0.7819310426712036, 0.7778365015983582, 0.7820631265640259, 0.7924976944923401, 0.7936864495277405, 0.800818920135498, 0.7956677079200745, 0.7993659973144531, 0.8047813773155212, 0.8158763647079468, 0.8067626357078552, 0.8137630224227905, 0.8181217908859253, 0.8252542614936829, 0.8204993009567261, 0.8289526104927063, 0.8230088353157043, 0.8260467648506165, 0.8281601071357727, 0.8325188159942627, 0.83119797706604, 0.8385946154594421, 0.8403117060661316, 0.8370096683502197, 0.8372738361358643, 0.8429533839225769, 0.8451988101005554], "val_loss": [1.9178752899169922, 1.1641887426376343, 0.9927675724029541, 0.7916061282157898, 0.7384900450706482, 0.7086730003356934, 0.6886033415794373, 0.6320187449455261, 0.614664614200592, 0.6326634883880615, 0.5709311366081238, 0.5664218068122864, 0.5615001916885376, 0.5706853270530701, 0.5636738538742065, 0.5193493366241455, 0.5302177667617798, 0.5129204392433167, 0.5056626200675964, 0.5017352104187012, 0.5290138721466064, 0.492512971162796, 0.5088739395141602, 0.47468748688697815, 0.46846312284469604, 0.4710817039012909, 0.46431583166122437, 0.47265639901161194, 0.47088754177093506, 0.45897969603538513, 0.44226133823394775, 0.4398248791694641, 0.44073912501335144, 0.44157496094703674, 0.4411047697067261, 0.47439298033714294, 0.4229515790939331, 0.4289666414260864, 0.4380000829696655, 0.4255048334598541, 0.417542964220047, 0.4223739802837372, 0.4279271364212036], "val_accuracy": [0.5523333549499512, 0.609000027179718, 0.6493333578109741, 0.7206666469573975, 0.721666693687439, 0.7266666889190674, 0.7293333411216736, 0.7616666555404663, 0.7556666731834412, 0.7580000162124634, 0.7900000214576721, 0.7879999876022339, 0.7923333048820496, 0.7603333592414856, 0.7883333563804626, 0.8086666464805603, 0.8033333420753479, 0.8106666803359985, 0.809333324432373, 0.8140000104904175, 0.8026666641235352, 0.8180000185966492, 0.809333324432373, 0.8186666369438171, 0.8196666836738586, 0.8270000219345093, 0.8256666660308838, 0.8226666450500488, 0.8243333101272583, 0.8199999928474426, 0.8289999961853027, 0.8373333215713501, 0.8403333425521851, 0.8453333377838135, 0.8423333168029785, 0.8253333568572998, 0.8446666598320007, 0.8510000109672546, 0.8366666436195374, 0.8456666469573975, 0.8456666469573975, 0.8396666646003723, 0.8493333458900452]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 5, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [15, 1], [1, 1, 0, 1, 0, 1, 1, 1], [7, 6, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.7951428294181824, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.081733465194702, 1.4379618167877197, 1.0240986347198486, 0.8225741982460022, 0.7714166045188904, 0.7362449169158936, 0.7122170925140381, 0.6909485459327698, 0.6723402738571167, 0.6695864796638489, 0.6673067212104797, 0.6881094574928284, 0.7066943645477295, 0.7628859281539917], "accuracy": [0.29163914918899536, 0.5815612077713013, 0.6371681690216064, 0.6897371411323547, 0.7141724824905396, 0.7228899598121643, 0.7304186820983887, 0.7433628439903259, 0.7415136694908142, 0.7518161535263062, 0.7548540234565735, 0.7483819723129272, 0.7495707273483276, 0.7281733155250549], "val_loss": [1.0510358810424805, 0.9077223539352417, 0.7775025963783264, 0.6919085383415222, 0.6341158747673035, 0.6702256202697754, 0.5865674614906311, 0.5882636308670044, 0.565356969833374, 0.610619306564331, 0.5950456261634827, 0.5872647166252136, 0.6035336852073669, 0.6590211391448975], "val_accuracy": [0.6306666731834412, 0.6650000214576721, 0.7229999899864197, 0.7446666955947876, 0.7540000081062317, 0.7599999904632568, 0.778333306312561, 0.7863333225250244, 0.7886666655540466, 0.7860000133514404, 0.7799999713897705, 0.784333348274231, 0.7733333110809326, 0.7703333497047424]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [63, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 3, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 4], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.12428571283817291, "mapping_values": [1, 6, 3, 3, 1, 12, 6, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [67548.515625, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2005019187927246, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1958102144.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1316666603088379, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 1, 1, 0, 0, 1, 1], [7, 3, 0, 5], [0, 1, 1, 2], [37], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 14, 8, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.664699077606201, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20314356684684753, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [59.04845428466797, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 2], [26, 40, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 6, 1, 3, 5, 5, 8], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 0, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [75], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(alpha, alpha)), beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303631067276001, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]