[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 4, 5, 5, 5], [2, 2, 2, 4, 0, 3, 3], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [4, 3, 1, 3, 8, 5, 5], [0, 1, 1, 4, 1], [0], [1], [0], [1], [0]], "fitness": -0.8700000047683716, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.pow(beta, beta), tf.math.square(tf.math.square(grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.sqrt(alpha))), grad), tf.math.square(tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1145331859588623, 1.2972372770309448, 0.9399329423904419, 0.7391880750656128, 0.6527503132820129, 0.5787045955657959, 0.5367027521133423, 0.503624677658081, 0.47247764468193054, 0.45926812291145325, 0.4309747815132141, 0.41568470001220703, 0.401328980922699, 0.39360561966896057, 0.3868442177772522, 0.3687140643596649, 0.3456384241580963, 0.34955787658691406, 0.33704912662506104, 0.318931519985199, 0.31760114431381226, 0.30345436930656433], "accuracy": [0.29058247804641724, 0.579447865486145, 0.6622639298439026, 0.7087571024894714, 0.7450799345970154, 0.7707040309906006, 0.7931581139564514, 0.8034605979919434, 0.8186501264572144, 0.822348415851593, 0.8347642421722412, 0.8384625315666199, 0.8485008478164673, 0.8494254350662231, 0.8515387773513794, 0.8615770936012268, 0.8729361891746521, 0.8667283058166504, 0.870030403137207, 0.8800686597824097, 0.8792761564254761, 0.8795403242111206], "val_loss": [1.1095616817474365, 0.9867745041847229, 0.7253133058547974, 0.6333425045013428, 0.5748538374900818, 0.5144395232200623, 0.49862581491470337, 0.47646212577819824, 0.45817869901657104, 0.44581201672554016, 0.4494010806083679, 0.42938971519470215, 0.42639464139938354, 0.4085584282875061, 0.40362122654914856, 0.39762064814567566, 0.3842509090900421, 0.3873346745967865, 0.39093074202537537, 0.3910558819770813, 0.38661524653434753, 0.3847830295562744], "val_accuracy": [0.6293333172798157, 0.6596666574478149, 0.7133333086967468, 0.7390000224113464, 0.7696666717529297, 0.800000011920929, 0.8016666769981384, 0.8149999976158142, 0.8276666402816772, 0.8309999704360962, 0.8349999785423279, 0.8443333506584167, 0.8443333506584167, 0.8506666421890259, 0.8529999852180481, 0.8553333282470703, 0.8610000014305115, 0.8606666922569275, 0.8550000190734863, 0.8550000190734863, 0.8606666922569275, 0.8576666712760925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7837142944335938, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2061092853546143, 1.5917094945907593, 1.1475565433502197, 0.9971691370010376, 0.8762171268463135, 0.8202397227287292, 0.776581883430481, 0.7240128517150879, 0.726115345954895, 0.7121053338050842, 0.6731308102607727, 0.6789035797119141, 0.6374329328536987, 0.6503802537918091, 0.6357001662254333], "accuracy": [0.26799631118774414, 0.5065380930900574, 0.598599910736084, 0.6411306262016296, 0.6803592443466187, 0.7066437602043152, 0.7153612375259399, 0.7375511527061462, 0.7318716049194336, 0.7411174178123474, 0.743891179561615, 0.7461365461349487, 0.7622507214546204, 0.7609298825263977, 0.7660810947418213], "val_loss": [1.9123615026474, 1.0933549404144287, 0.9487229585647583, 0.8091593980789185, 0.7626186609268188, 0.7402956485748291, 0.6599881052970886, 0.6779621243476868, 0.6509717702865601, 0.6066721081733704, 0.6028252243995667, 0.5869311690330505, 0.5747339725494385, 0.5803371667861938, 0.587867259979248], "val_accuracy": [0.5550000071525574, 0.6513333320617676, 0.6746666431427002, 0.699999988079071, 0.7210000157356262, 0.718666672706604, 0.7536666393280029, 0.7393333315849304, 0.7536666393280029, 0.7749999761581421, 0.7730000019073486, 0.762666642665863, 0.7746666669845581, 0.7639999985694885, 0.7673333287239075]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [26, 39, 55], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 1, 4, 0, 3, 3], [16, 5], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [7, 3, 1, 0, 8, 6, 3], [1, 1, 1, 2, 0, 4], [0], [1], [0], [4], [0]], "fitness": -0.19457143545150757, "mapping_values": [1, 1, 0, 1, 0, 13, 7, 6, 1, 13, 7, 6, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.square(tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(alpha)), alpha), tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.581503391265869, 2.294459342956543, 2.2613472938537598, 2.304927110671997, 2.3028054237365723, 2.4686379432678223, 2.3303565979003906], "accuracy": [0.19231277704238892, 0.12891295552253723, 0.17633073031902313, 0.1006472036242485, 0.10381719470024109, 0.17540615797042847, 0.10460969805717468], "val_loss": [2.3045103549957275, 2.111757516860962, 2.3094801902770996, 2.303217887878418, 2.3005173206329346, 2.4689440727233887, 2.2770016193389893], "val_accuracy": [0.0989999994635582, 0.20133332908153534, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09666666388511658, 0.1393333375453949]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 5, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [16, 83], [0, 0, 1, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(grad))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3039610385894775, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 81], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 8, 0, 6, 3, 8, 2, 3], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 11, 6, 5, 3, 4, 3, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.math.multiply(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095602989196777, 2.3093643188476562, 2.310253143310547, 2.3094120025634766, 2.3094208240509033, 2.310606002807617], "accuracy": [0.0948355570435524, 0.09906221181154251, 0.09496764093637466, 0.09113723784685135, 0.09298639744520187, 0.08757099509239197], "val_loss": [2.3083620071411133, 2.3083620071411133, 2.3083620071411133, 2.3083620071411133, 2.3083620071411133, 2.3083620071411133], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]