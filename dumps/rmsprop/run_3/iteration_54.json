[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115423679351807, 1.5996707677841187, 1.1545711755752563, 0.9999861717224121, 0.8569919466972351, 0.8262193202972412, 0.7797578573226929, 0.7591342926025391, 0.7208828926086426, 0.6941180229187012, 0.6879717111587524, 0.6642850041389465, 0.638590931892395, 0.6373416185379028, 0.6378586888313293, 0.5904883742332458, 0.5832599997520447, 0.6088413596153259, 0.570188581943512, 0.5642798542976379, 0.5631054639816284, 0.5500640273094177, 0.538069486618042, 0.5231986045837402, 0.5284268856048584, 0.5256448984146118, 0.5177806615829468, 0.5102807283401489, 0.5101396441459656, 0.4882068932056427, 0.48505517840385437, 0.4936732053756714, 0.47223567962646484, 0.47391483187675476, 0.47287359833717346, 0.4756031036376953, 0.46141499280929565, 0.4548640847206116, 0.45244017243385315, 0.44658640027046204, 0.4376942217350006, 0.44065409898757935, 0.4201672375202179, 0.4273575246334076, 0.4236942231655121, 0.41663503646850586, 0.41979554295539856, 0.41766035556793213, 0.40715524554252625, 0.4068002700805664], "accuracy": [0.2670717239379883, 0.5122177004814148, 0.5947695374488831, 0.6479989290237427, 0.6869634389877319, 0.6925109028816223, 0.718399167060852, 0.722229540348053, 0.7345132827758789, 0.7413815855979919, 0.7474573850631714, 0.7553823590278625, 0.769911527633667, 0.7647602558135986, 0.763439416885376, 0.7795535326004028, 0.7823272943496704, 0.7777044177055359, 0.7910447716712952, 0.7901201844215393, 0.7936864495277405, 0.7951393723487854, 0.8020076751708984, 0.8090080618858337, 0.8042530417442322, 0.8076872229576111, 0.809140145778656, 0.8121780753135681, 0.8100647330284119, 0.8240655064582825, 0.8238013386726379, 0.8195747137069702, 0.8251221776008606, 0.8252542614936829, 0.8274996876716614, 0.8267071843147278, 0.8313300609588623, 0.8318583965301514, 0.8337075710296631, 0.8323867321014404, 0.8342359066009521, 0.8360850811004639, 0.8450667262077332, 0.8459912538528442, 0.8422929644584656, 0.8490291833877563, 0.8428213000297546, 0.8461233377456665, 0.847840428352356, 0.848368763923645], "val_loss": [1.9305161237716675, 1.1237386465072632, 0.9132971167564392, 0.784338116645813, 0.7816583514213562, 0.6866347789764404, 0.7055807113647461, 0.6642191410064697, 0.6545154452323914, 0.68924480676651, 0.6115748882293701, 0.6099953055381775, 0.6036341190338135, 0.648859441280365, 0.5699293613433838, 0.5776981711387634, 0.5553166270256042, 0.5698263049125671, 0.5362245440483093, 0.5379723310470581, 0.5407525897026062, 0.5139320492744446, 0.5287142992019653, 0.5348435640335083, 0.504981279373169, 0.5038924813270569, 0.5162770748138428, 0.5066689252853394, 0.5006502866744995, 0.4967699348926544, 0.49629536271095276, 0.4809432923793793, 0.4635220170021057, 0.4746634066104889, 0.49762484431266785, 0.46413353085517883, 0.4603075385093689, 0.46989375352859497, 0.46075430512428284, 0.47952044010162354, 0.4778085947036743, 0.45697176456451416, 0.4471765160560608, 0.4425046741962433, 0.43805068731307983, 0.448159396648407, 0.44257852435112, 0.4393584728240967, 0.443320095539093, 0.4422241151332855], "val_accuracy": [0.6143333315849304, 0.5809999704360962, 0.6763333082199097, 0.7160000205039978, 0.7039999961853027, 0.7523333430290222, 0.7369999885559082, 0.75, 0.762333333492279, 0.7413333058357239, 0.7540000081062317, 0.7593333125114441, 0.7723333239555359, 0.7363333106040955, 0.7820000052452087, 0.7863333225250244, 0.7963333129882812, 0.7926666736602783, 0.8073333501815796, 0.8080000281333923, 0.8080000281333923, 0.815666675567627, 0.8136666417121887, 0.8003333210945129, 0.8159999847412109, 0.8190000057220459, 0.8133333325386047, 0.8199999928474426, 0.8203333616256714, 0.8206666707992554, 0.8226666450500488, 0.8240000009536743, 0.8309999704360962, 0.831333339214325, 0.8256666660308838, 0.8366666436195374, 0.8370000123977661, 0.8296666741371155, 0.8373333215713501, 0.8296666741371155, 0.8333333134651184, 0.8366666436195374, 0.8420000076293945, 0.8423333168029785, 0.8486666679382324, 0.8446666598320007, 0.8450000286102295, 0.8453333377838135, 0.8423333168029785, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 4, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0], [0, 7, 9], [0, 6], [0, 96], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [29497.8984375, 519791869952.0, 8.944427036399632e+18, 7.3492031303843664e+25, NaN, NaN], "accuracy": [0.09760929644107819, 0.10170386731624603, 0.1006472036242485, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777], "val_loss": [1933485.375, 34274365407232.0, 5.709590072242649e+20, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0], [0, 7], [0, 6], [16], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303314447402954, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 4, 3, 1, 8, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 2, 3, 1, 5, 5], [0, 0, 1, 3, 0], [0, 8, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 6, 0, 6, 3, 8, 2, 9, 4, 7, 5], [2, 0, 3, 1, 0, 4], [16, 1, 67], [0, 0, 1, 1, 1], [4, 7], [0, 6, 4], [18], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 2, 17, 11, 6, 3, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]