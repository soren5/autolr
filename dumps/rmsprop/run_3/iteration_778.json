[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118237018585205, 1.6073954105377197, 1.147505283355713, 0.9663463234901428, 0.8881468176841736, 0.8380264043807983, 0.7916424870491028, 0.7386599779129028, 0.7287989258766174, 0.731714129447937, 0.675931453704834, 0.6687670350074768, 0.6625456809997559, 0.657869279384613, 0.6134907007217407, 0.6143879890441895, 0.5992606282234192, 0.6143236756324768, 0.5745204091072083, 0.5708618760108948, 0.5596128702163696, 0.5606076121330261, 0.5396736860275269, 0.5324704051017761, 0.5323505997657776, 0.5168869495391846, 0.5143795609474182, 0.5022077560424805, 0.4990880489349365, 0.4929353892803192, 0.4919825792312622, 0.4843185544013977, 0.47404661774635315, 0.4738349914550781, 0.4661191403865814, 0.469363272190094, 0.46216681599617004, 0.4680323600769043, 0.45093196630477905, 0.44170138239860535, 0.4556249976158142, 0.43559712171554565, 0.44804316759109497, 0.4374132752418518], "accuracy": [0.2642979919910431, 0.5052172541618347, 0.5849953889846802, 0.6602826714515686, 0.6844538450241089, 0.6917183995246887, 0.713379979133606, 0.7296261787414551, 0.7281733155250549, 0.728701651096344, 0.7485140562057495, 0.7499669790267944, 0.7556465268135071, 0.759080708026886, 0.7745344042778015, 0.7695152759552002, 0.7766477465629578, 0.7700436115264893, 0.7887993454933167, 0.7895918488502502, 0.7938185334205627, 0.7909126877784729, 0.802800178527832, 0.8030643463134766, 0.8075551390647888, 0.81112140417099, 0.8125742673873901, 0.8193105459213257, 0.817461371421814, 0.8231409192085266, 0.8185180425643921, 0.8253863453865051, 0.826310932636261, 0.8274996876716614, 0.8300092220306396, 0.829216718673706, 0.8285563588142395, 0.8274996876716614, 0.8362171649932861, 0.8426892161369324, 0.8322546482086182, 0.8384625315666199, 0.8378021121025085, 0.8411042094230652], "val_loss": [1.9269475936889648, 1.1110018491744995, 0.8977553844451904, 0.802132785320282, 0.7560268640518188, 0.7171638011932373, 0.6473241448402405, 0.6148120760917664, 0.6489818692207336, 0.5686562061309814, 0.582878053188324, 0.5474207401275635, 0.6097936034202576, 0.5269830822944641, 0.5452800989151001, 0.5313115119934082, 0.5304321646690369, 0.5077453851699829, 0.4763048589229584, 0.5071696639060974, 0.5051697492599487, 0.4713485538959503, 0.4652233123779297, 0.4640854597091675, 0.4599877893924713, 0.44571971893310547, 0.4393290877342224, 0.4359576106071472, 0.42950305342674255, 0.44251805543899536, 0.45117563009262085, 0.43349096179008484, 0.43133464455604553, 0.42798054218292236, 0.4084818661212921, 0.4115613102912903, 0.4107666015625, 0.4213024079799652, 0.40196526050567627, 0.40060678124427795, 0.3963504135608673, 0.40337878465652466, 0.39464104175567627, 0.3947611153125763], "val_accuracy": [0.5026666522026062, 0.6449999809265137, 0.6556666493415833, 0.7179999947547913, 0.7013333439826965, 0.6983333230018616, 0.7493333220481873, 0.7770000100135803, 0.7636666893959045, 0.7946666479110718, 0.7803333401679993, 0.79666668176651, 0.7583333253860474, 0.8073333501815796, 0.7870000004768372, 0.7983333468437195, 0.7926666736602783, 0.8130000233650208, 0.8299999833106995, 0.8136666417121887, 0.8100000023841858, 0.8306666612625122, 0.8379999995231628, 0.8316666483879089, 0.8366666436195374, 0.8423333168029785, 0.8376666903495789, 0.8410000205039978, 0.8433333039283752, 0.8403333425521851, 0.8253333568572998, 0.8356666564941406, 0.8396666646003723, 0.843999981880188, 0.8519999980926514, 0.8543333411216736, 0.8583333492279053, 0.8450000286102295, 0.8610000014305115, 0.8539999723434448, 0.8556666374206543, 0.8526666760444641, 0.859666645526886, 0.8579999804496765]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [6, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [4], [0]], "fitness": -0.49399998784065247, "mapping_values": [1, 1, 0, 1, 1, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2905282974243164, 2.3209214210510254, 2.157801628112793, 2.3818655014038086, 2.238832950592041, 2.0427939891815186, 2.2105767726898193], "accuracy": [0.20221899449825287, 0.1838594675064087, 0.23457930982112885, 0.1558578759431839, 0.17963281273841858, 0.2949412167072296, 0.22480517625808716], "val_loss": [2.1734726428985596, 1.6546188592910767, 2.0069706439971924, 2.2323098182678223, 2.164904832839966, 1.7564189434051514, 2.3087141513824463], "val_accuracy": [0.31166666746139526, 0.4946666657924652, 0.32899999618530273, 0.23666666448116302, 0.3016666769981384, 0.4033333361148834, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 2, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [25, 1, 56], [1, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 1], [0, 1, 5, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 8, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304058074951172, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 48], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 8, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 0, 0], [7, 3, 5, 2], [0, 1, 4, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 2, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303386688232422, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 3, 5], [0, 2, 1, 3, 2], [26, 39, 71], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 0, 7, 0, 5, 5, 4, 7], [1, 2, 5, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [3, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 1, 13, 9, 4, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(alpha))), tf.math.pow(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309356689453125, 2.3092751502990723, 2.3090999126434326, 2.3092663288116455, 2.309295654296875, 2.309668779373169], "accuracy": [0.09285431355237961, 0.09628847241401672, 0.09325055778026581, 0.08585391938686371, 0.1006472036242485, 0.09945846349000931], "val_loss": [2.308441638946533, 2.3084428310394287, 2.308445692062378, 2.3084492683410645, 2.3084540367126465, 2.308459520339966], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]