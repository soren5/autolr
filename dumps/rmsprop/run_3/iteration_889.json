[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2114334106445312, 1.6099737882614136, 1.1326839923858643, 1.0002046823501587, 0.9002195596694946, 0.833377480506897, 0.8195736408233643, 0.7560722231864929, 0.7362170815467834, 0.7071759700775146, 0.6721604466438293, 0.6672280430793762, 0.6507805585861206, 0.6448259353637695, 0.6312056183815002, 0.623322606086731, 0.6007399559020996, 0.6222597360610962, 0.5906171798706055, 0.5747805833816528, 0.5620265007019043, 0.5593487620353699, 0.5350738167762756, 0.5374561548233032, 0.5241990089416504, 0.5349406599998474, 0.5205793976783752, 0.5095250010490417, 0.5102828145027161, 0.5109379291534424, 0.4926309585571289, 0.49962252378463745, 0.48408806324005127, 0.4729077219963074, 0.47514623403549194, 0.4776204228401184, 0.46217381954193115, 0.4603298604488373, 0.46873942017555237, 0.4456797242164612, 0.44539961218833923, 0.4474261999130249, 0.4550734758377075, 0.4413074553012848, 0.42698952555656433, 0.43169334530830383], "accuracy": [0.2657508850097656, 0.5040285587310791, 0.6065248847007751, 0.6416589617729187, 0.6798309087753296, 0.6960771083831787, 0.7005679607391357, 0.7239466309547424, 0.7269845604896545, 0.7413815855979919, 0.7512878179550171, 0.7504953145980835, 0.7580240368843079, 0.7592127919197083, 0.7668735980987549, 0.7711002230644226, 0.7773081660270691, 0.7687227725982666, 0.7844406366348267, 0.7881389260292053, 0.7944789528846741, 0.789459764957428, 0.7961959838867188, 0.7954035401344299, 0.8144234418869019, 0.8017435073852539, 0.8064984679222107, 0.8113855719566345, 0.8131026029586792, 0.8117818236351013, 0.8189142942428589, 0.8161405324935913, 0.8211596608161926, 0.8276317715644836, 0.8301413059234619, 0.8251221776008606, 0.8337075710296631, 0.8269713521003723, 0.8313300609588623, 0.8367455005645752, 0.8383304476737976, 0.8403117060661316, 0.8296129703521729, 0.8389908671379089, 0.8475762605667114, 0.8411042094230652], "val_loss": [1.9258579015731812, 1.1126408576965332, 0.9187198281288147, 0.7980852127075195, 0.7560115456581116, 0.7707316279411316, 0.667113184928894, 0.6454989910125732, 0.63913893699646, 0.5966306924819946, 0.5800445675849915, 0.5852972269058228, 0.5738745927810669, 0.6225399971008301, 0.5358778834342957, 0.5488072633743286, 0.5529918074607849, 0.5139533281326294, 0.5272762179374695, 0.5266679525375366, 0.5030876994132996, 0.4913216829299927, 0.4808077812194824, 0.4858566224575043, 0.4758993685245514, 0.4968399703502655, 0.4736778438091278, 0.4635448455810547, 0.4729102849960327, 0.46389779448509216, 0.47565218806266785, 0.4734521508216858, 0.45434918999671936, 0.43852904438972473, 0.43092668056488037, 0.4404047727584839, 0.4357571601867676, 0.46204036474227905, 0.4361502230167389, 0.41841474175453186, 0.4155621826648712, 0.43429967761039734, 0.4381527602672577, 0.4197051525115967, 0.41111743450164795, 0.42309874296188354], "val_accuracy": [0.5363333225250244, 0.6603333353996277, 0.656333327293396, 0.7026666402816772, 0.7266666889190674, 0.7160000205039978, 0.7473333477973938, 0.7566666603088379, 0.7353333234786987, 0.7793333530426025, 0.7699999809265137, 0.7636666893959045, 0.7696666717529297, 0.7543333172798157, 0.7910000085830688, 0.8040000200271606, 0.7860000133514404, 0.8050000071525574, 0.8026666641235352, 0.796999990940094, 0.8166666626930237, 0.8209999799728394, 0.8146666884422302, 0.8169999718666077, 0.8196666836738586, 0.8109999895095825, 0.82833331823349, 0.8309999704360962, 0.8196666836738586, 0.8270000219345093, 0.8220000267028809, 0.8163333535194397, 0.8326666951179504, 0.8356666564941406, 0.8443333506584167, 0.8389999866485596, 0.8353333473205566, 0.8190000057220459, 0.8396666646003723, 0.8450000286102295, 0.8483333587646484, 0.8383333086967468, 0.8383333086967468, 0.8446666598320007, 0.8446666598320007, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 7, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 2, 0, 5, 5, 8, 2, 7, 4, 1, 5, 2, 4, 7, 0, 5, 2, 7, 0, 7, 7, 1, 3, 7, 1, 6, 4, 9, 9], [1, 2, 0, 4, 0, 3, 1, 3, 2, 1, 1, 2, 0, 0, 1, 4, 0], [16, 30, 11, 63, 23, 93, 19], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 2, 1], [0, 6, 7, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 46, 29, 17, 7, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.pow(beta, tf.math.subtract(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.add(grad, tf.math.add(alpha, grad)))), tf.math.negative(beta)))))), tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, grad)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30468.41015625, 4439574.0, 75273024.0, 531110464.0, 2380925696.0, 7734000128.0], "accuracy": [0.1022322028875351, 0.09906221181154251, 0.10500594228506088, 0.09906221181154251, 0.0952318087220192, 0.1002509593963623], "val_loss": [305324.3125, 16369893.0, 175538096.0, 956672960.0, 3582901248.0, 10567629824.0], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 9], [0, 0, 1, 0, 2], [24, 39, 39], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 0, 1, 1, 0], [0, 7, 3, 6], [0, 6, 1, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.501052379608154, 58.881935119628906, 201.98300170898438, 497.8001708984375, 987.2969360351562, 1789.1563720703125], "accuracy": [0.0948355570435524, 0.09840179979801178, 0.1002509593963623, 0.09655263274908066, 0.10170386731624603, 0.10157178342342377], "val_loss": [20.384737014770508, 95.09814453125, 262.9678649902344, 572.2906494140625, 1071.0731201171875, 1807.77880859375], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 5, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 5, 0, 5, 5, 4], [1, 2, 3, 4, 0, 3, 1], [51, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [7, 3, 0, 0, 2, 5], [7, 1, 1, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 6, 4, 2, 1, 10, 6, 4, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.negative(alpha)), tf.math.add(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3032779693603516, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 9, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [6, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 16], [0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 7, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 9, 6, 3, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304940938949585, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]