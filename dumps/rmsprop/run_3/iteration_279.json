[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8048571348190308, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212815761566162, 1.608527660369873, 1.1437556743621826, 0.998441755771637, 0.88786780834198, 0.8367742300033569, 0.7938756346702576, 0.7645235061645508, 0.7324374318122864, 0.7138773202896118, 0.6897786855697632, 0.6700241565704346, 0.653944730758667, 0.6566857695579529, 0.6299569606781006, 0.6226064562797546, 0.6150690913200378, 0.605034589767456, 0.5943291783332825, 0.5963250994682312, 0.5731866359710693, 0.5645698308944702, 0.5542718172073364, 0.5414587259292603, 0.5326343178749084, 0.5422570109367371, 0.513119637966156, 0.5061757564544678, 0.5131623148918152, 0.5126739740371704, 0.49549171328544617, 0.4894179403781891, 0.49775782227516174, 0.4845449924468994, 0.4844411313533783, 0.47533804178237915, 0.4645492434501648, 0.4769004285335541, 0.4552512764930725, 0.45947176218032837, 0.454008013010025, 0.44720837473869324, 0.4432052671909332, 0.43235406279563904, 0.4372735321521759, 0.4225185513496399, 0.42070406675338745], "accuracy": [0.2631092369556427, 0.5086514353752136, 0.5974111557006836, 0.6408664584159851, 0.6752080321311951, 0.6906617283821106, 0.7127195596694946, 0.7143045663833618, 0.7331924438476562, 0.7329282760620117, 0.7405890822410583, 0.7466648817062378, 0.7534011602401733, 0.7481178045272827, 0.7646281719207764, 0.7683265209197998, 0.7671377658843994, 0.7716285586357117, 0.7771760821342468, 0.7754589915275574, 0.7872143983840942, 0.791441023349762, 0.7886672616004944, 0.7954035401344299, 0.8014793395996094, 0.7988376617431641, 0.8061022162437439, 0.8142913579940796, 0.8082155585289001, 0.8123101592063904, 0.8178576231002808, 0.8165367841720581, 0.8101968169212341, 0.8211596608161926, 0.8202351331710815, 0.8244617581367493, 0.8276317715644836, 0.8193105459213257, 0.8323867321014404, 0.8319904804229736, 0.8278959393501282, 0.8325188159942627, 0.8384625315666199, 0.8444063067436218, 0.8404437899589539, 0.8428213000297546, 0.8475762605667114], "val_loss": [1.9323232173919678, 1.0789235830307007, 0.9864913821220398, 0.8514703512191772, 0.7506301403045654, 0.705385148525238, 0.7218993902206421, 0.6367414593696594, 0.6936935782432556, 0.6618562936782837, 0.5901389718055725, 0.5979999899864197, 0.575260579586029, 0.5688287019729614, 0.5705090165138245, 0.5311457514762878, 0.5347890257835388, 0.5621111392974854, 0.5190802812576294, 0.5077813863754272, 0.5041042566299438, 0.5184900164604187, 0.4953864812850952, 0.4675482213497162, 0.5302706956863403, 0.4820573627948761, 0.4648708999156952, 0.45612832903862, 0.4667033553123474, 0.4475725591182709, 0.45086172223091125, 0.4494505226612091, 0.461005300283432, 0.4480815529823303, 0.4380047917366028, 0.4387146532535553, 0.4390544295310974, 0.4509933292865753, 0.42751652002334595, 0.42439740896224976, 0.4306009113788605, 0.42122164368629456, 0.4139774441719055, 0.40764111280441284, 0.4108261168003082, 0.3967936336994171, 0.41643932461738586], "val_accuracy": [0.5856666564941406, 0.6700000166893005, 0.643666684627533, 0.6813333630561829, 0.7133333086967468, 0.7433333396911621, 0.7149999737739563, 0.7609999775886536, 0.7369999885559082, 0.7329999804496765, 0.7696666717529297, 0.7716666460037231, 0.7676666378974915, 0.7786666750907898, 0.781333327293396, 0.8053333163261414, 0.8006666898727417, 0.7883333563804626, 0.8023333549499512, 0.8153333067893982, 0.812666654586792, 0.8026666641235352, 0.8143333196640015, 0.8299999833106995, 0.7916666865348816, 0.815666675567627, 0.8343333601951599, 0.8289999961853027, 0.8270000219345093, 0.8383333086967468, 0.8326666951179504, 0.8276666402816772, 0.8243333101272583, 0.8389999866485596, 0.8410000205039978, 0.8309999704360962, 0.8363333344459534, 0.8259999752044678, 0.8410000205039978, 0.8460000157356262, 0.8493333458900452, 0.8519999980926514, 0.8506666421890259, 0.8489999771118164, 0.847000002861023, 0.8506666421890259, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 34], [1, 0, 1, 1], [0, 7], [0, 6], [20], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 3, 9, 5, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [824.0933837890625, 119715.8046875, 2025522.375, 14077808.0, 62900756.0, 206855424.0], "accuracy": [0.10474177449941635, 0.1072513535618782, 0.09893012791872025, 0.10157178342342377, 0.09985470771789551, 0.09615638852119446], "val_loss": [8228.955078125, 431797.34375, 4617272.0, 25141272.0, 94120872.0, 277546880.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 6, 2, 4, 1, 4, 4, 7, 5, 9, 6, 4, 0, 4, 4, 3, 4, 8, 2, 3, 4, 7, 7, 3, 4, 1, 3, 4, 3, 4, 8, 1, 9, 6, 1], [3, 0, 1, 0, 2, 0, 2, 3, 3, 0, 1, 2, 1, 2, 3, 0, 0, 2, 0, 3, 1, 2, 0, 2, 0, 0, 0, 3, 0, 1, 0], [83, 39, 39, 49, 18, 16, 84, 31, 30, 1, 46, 52, 98, 95, 81], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 7, 0, 6, 3, 8, 2, 7, 6, 6, 1, 2], [2, 0, 3, 1, 0, 1, 2, 2, 4, 3], [16, 1], [0, 0, 0, 1, 1, 1], [0, 7, 1], [0, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.pow(alpha, tf.math.subtract(tf.math.pow(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(grad, tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.multiply(grad, tf.math.pow(grad, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), alpha)), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.subtract(grad, tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), grad), alpha)))), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, beta)), tf.math.add(beta, grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 70, 39, 31, 15, 22, 12, 10, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 44}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5, 8, 7, 0, 0, 1, 2, 8, 2, 1, 1, 3, 4, 6, 5, 1, 4, 0, 8, 6, 6, 4, 2, 9, 6, 6, 0, 1, 0, 3, 9, 3, 6, 5, 2, 9, 0, 9], [0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 3, 2, 2, 0, 1, 2, 3, 0, 0, 0, 3, 1, 2], [0, 36, 39, 68, 25, 51, 90, 77, 58, 20, 83, 69, 42, 68, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 9, 0, 7, 3, 8, 2], [2, 2, 3, 1, 1], [49, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 5, 8, 0, 1], [2, 5, 4], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 66, 43, 23, 15, 1, 0, 1, 0, 4, 2, 2, 1, 9, 6, 3, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), grad)), grad)), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.multiply(alpha, grad)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(alpha))))), grad))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(beta, tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.subtract(grad, grad))))))", "other_info": {"loss": [2.3109917640686035, 2.309782028198242, 2.3095884323120117, 2.3106672763824463, 2.309576988220215, 2.310350179672241], "accuracy": [0.08611807972192764, 0.09945846349000931, 0.09140139818191528, 0.09179764986038208, 0.09417514503002167, 0.09021265059709549], "val_loss": [2.3092269897460938, 2.3092269897460938, 2.3092269897460938, 2.3092269897460938, 2.3092269897460938, 2.3092269897460938], "val_accuracy": [0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 98], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 2, 2, 9, 4, 7, 9, 8], [0, 6, 2, 4], [0, 47, 9], [1], [0], [2], [0]], "fitness": -0.08799999952316284, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 12, 8, 4, 3, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310228109359741, 2.31087064743042, 2.3098859786987305, 2.310040235519409, 2.3088736534118652, 2.309701681137085], "accuracy": [0.09232597798109055, 0.09245806187391281, 0.08994849026203156, 0.09126931428909302, 0.09034473448991776, 0.0956280529499054], "val_loss": [2.308502197265625, 2.308502197265625, 2.308502197265625, 2.308502197265625, 2.308502197265625, 2.308502197265625], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]