[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131834030151367, 1.6092724800109863, 1.1493232250213623, 0.9858675599098206, 0.8898783326148987, 0.8250526785850525, 0.7984703183174133, 0.7550689578056335, 0.7202860713005066, 0.725099503993988, 0.6854547262191772, 0.6629870533943176, 0.6481431722640991, 0.6212104558944702, 0.6339519619941711, 0.5911363959312439, 0.6060380339622498, 0.5873956084251404, 0.5798474550247192, 0.5649356842041016, 0.5622056722640991, 0.5537750720977783, 0.5395320057868958, 0.5283759236335754, 0.5344323515892029, 0.516002357006073, 0.5201113820075989, 0.5028635859489441, 0.49444442987442017, 0.4956214129924774, 0.4850909113883972, 0.48367083072662354, 0.4888209402561188, 0.4682394862174988, 0.47630852460861206, 0.45069175958633423, 0.465883731842041, 0.44524621963500977, 0.4480528235435486, 0.4409269690513611, 0.4429081082344055, 0.43674328923225403, 0.4369469881057739, 0.4243040978908539], "accuracy": [0.2611279785633087, 0.5134063959121704, 0.6017699241638184, 0.6485272645950317, 0.687491774559021, 0.7033417224884033, 0.7119271159172058, 0.722757875919342, 0.7363624572753906, 0.733060359954834, 0.7450799345970154, 0.754589855670929, 0.7601373791694641, 0.7750627398490906, 0.767930269241333, 0.7828556299209595, 0.7784969210624695, 0.7854973077774048, 0.7833839654922485, 0.7909126877784729, 0.7922335267066956, 0.8009510040283203, 0.8006868362426758, 0.8055738806724548, 0.800818920135498, 0.8088759779930115, 0.8078193068504333, 0.8140271902084351, 0.8215559124946594, 0.8170651197433472, 0.8252542614936829, 0.8232730031013489, 0.8207634687423706, 0.82683926820755, 0.8256505131721497, 0.8366134166717529, 0.83119797706604, 0.8411042094230652, 0.842028796672821, 0.8367455005645752, 0.8405758738517761, 0.8401796221733093, 0.8393871188163757, 0.8451988101005554], "val_loss": [1.9258489608764648, 1.1142746210098267, 0.8452869653701782, 0.8115116953849792, 0.6947200298309326, 0.721560001373291, 0.6696235537528992, 0.6366071105003357, 0.5973586440086365, 0.5990839600563049, 0.574121356010437, 0.57822185754776, 0.5596374273300171, 0.5351223945617676, 0.5223426818847656, 0.5456947684288025, 0.5473843216896057, 0.5127841234207153, 0.5540766716003418, 0.5152357816696167, 0.5044357180595398, 0.4785657823085785, 0.5007866024971008, 0.5057620406150818, 0.4894515872001648, 0.49907898902893066, 0.4729999303817749, 0.46494734287261963, 0.46006715297698975, 0.44981738924980164, 0.45459210872650146, 0.45950472354888916, 0.46031343936920166, 0.45256710052490234, 0.44467148184776306, 0.46504881978034973, 0.4349795877933502, 0.4260803163051605, 0.4345138370990753, 0.42644843459129333, 0.4251407980918884, 0.43457120656967163, 0.4191022515296936, 0.420075923204422], "val_accuracy": [0.5883333086967468, 0.6486666798591614, 0.6996666789054871, 0.6986666917800903, 0.7379999756813049, 0.7143333554267883, 0.7506666779518127, 0.7543333172798157, 0.7770000100135803, 0.777999997138977, 0.7753333449363708, 0.7766666412353516, 0.7906666398048401, 0.7976666688919067, 0.8036666512489319, 0.7886666655540466, 0.8006666898727417, 0.8029999732971191, 0.7726666927337646, 0.8086666464805603, 0.812333345413208, 0.8220000267028809, 0.8069999814033508, 0.8096666932106018, 0.8149999976158142, 0.8106666803359985, 0.828000009059906, 0.8286666870117188, 0.82833331823349, 0.831333339214325, 0.8336666822433472, 0.831333339214325, 0.8240000009536743, 0.8333333134651184, 0.8370000123977661, 0.8339999914169312, 0.840666651725769, 0.8460000157356262, 0.8489999771118164, 0.8413333296775818, 0.8446666598320007, 0.8373333215713501, 0.8450000286102295, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 82], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [9, 6, 4, 4, 0, 5, 5, 4], [1, 2, 0, 2, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30326.25390625, 4497043.0, 77351336.0, 541063296.0, 2404214272.0, 7959627264.0], "accuracy": [0.10328886657953262, 0.09681680053472519, 0.09589222073554993, 0.10196803510189056, 0.09734513610601425, 0.10249637067317963], "val_loss": [303323.0, 16261878.0, 174378720.0, 950352192.0, 3559224832.0, 10497804288.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 6, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 3, 1], [26, 39, 35], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 6, 3, 8, 8, 5, 5, 2, 4, 6, 5, 0, 8], [2, 2, 1, 4, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 7, 1, 4, 6, 8, 6, 2, 8, 8, 8, 9], [0, 6, 3, 1, 7, 3], [0, 24], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 2, 23, 15, 8, 2, 18, 12, 6, 2, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.sqrt(tf.math.square(tf.math.square(alpha)))), tf.math.add(tf.math.pow(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.square(alpha))))), tf.math.negative(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.sqrt(alpha)), grad), tf.math.sqrt(sigma)))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303664207458496, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 17], [0, 0, 1, 1, 0, 1, 1, 1], [7, 5, 9, 2], [0, 6, 2, 4], [56], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 3, 1, 2, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033645153045654, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]