[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8462857007980347, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2121634483337402, 1.6058064699172974, 1.1659818887710571, 0.9941021800041199, 0.9063270092010498, 0.8297048807144165, 0.7962977290153503, 0.7743044495582581, 0.7478806972503662, 0.7071171998977661, 0.7008904218673706, 0.6833369731903076, 0.6650691032409668, 0.6434076428413391, 0.6271822452545166, 0.6288935542106628, 0.6064124703407288, 0.5978152751922607, 0.5809007883071899, 0.5822957754135132, 0.5893721580505371, 0.5597249865531921, 0.5529299378395081, 0.5494160652160645, 0.5340973138809204, 0.5420736074447632, 0.5246900916099548, 0.5276092886924744, 0.5137577056884766, 0.5151656270027161, 0.4928545653820038, 0.5020949840545654, 0.4790555238723755, 0.47978609800338745, 0.46961838006973267, 0.4763341248035431, 0.4706381559371948, 0.4523278772830963, 0.45741865038871765, 0.46356502175331116, 0.4553202688694, 0.4446670413017273], "accuracy": [0.26997753977775574, 0.5111610293388367, 0.5915995240211487, 0.6464139223098755, 0.6796988248825073, 0.7058512568473816, 0.7129837274551392, 0.7177387475967407, 0.7316074371337891, 0.739400327205658, 0.7461365461349487, 0.7514199018478394, 0.7577598690986633, 0.7689869403839111, 0.770439863204956, 0.7689869403839111, 0.7827235460281372, 0.7840443849563599, 0.7906485199928284, 0.7860256433486938, 0.783119797706604, 0.7979130744934082, 0.8000264167785645, 0.7930260300636292, 0.8055738806724548, 0.8030643463134766, 0.8092722296714783, 0.8101968169212341, 0.813498854637146, 0.8140271902084351, 0.8187822103500366, 0.8140271902084351, 0.8220842480659485, 0.822348415851593, 0.8284242749214172, 0.8224804997444153, 0.8337075710296631, 0.8350284099578857, 0.8362171649932861, 0.8309338092803955, 0.832650899887085, 0.8370096683502197], "val_loss": [1.9213560819625854, 1.071881890296936, 0.893805742263794, 0.8041472434997559, 0.7145781517028809, 0.6732219457626343, 0.6473119854927063, 0.6252617239952087, 0.596006453037262, 0.6401125192642212, 0.5861183404922485, 0.5807040333747864, 0.5798402428627014, 0.5561313629150391, 0.5202479362487793, 0.524763286113739, 0.5242302417755127, 0.5103773474693298, 0.4988647997379303, 0.526773989200592, 0.49443063139915466, 0.5013923048973083, 0.4722113311290741, 0.46836715936660767, 0.49291449785232544, 0.4651646316051483, 0.4602363407611847, 0.44861888885498047, 0.44406720995903015, 0.44070687890052795, 0.4460841417312622, 0.45467883348464966, 0.4378846287727356, 0.42528191208839417, 0.4396457374095917, 0.42497533559799194, 0.41655972599983215, 0.430476576089859, 0.40443533658981323, 0.43046656250953674, 0.40864109992980957, 0.413320392370224], "val_accuracy": [0.6100000143051147, 0.67166668176651, 0.6886666417121887, 0.7043333053588867, 0.734333336353302, 0.7516666650772095, 0.7450000047683716, 0.7639999985694885, 0.778333306312561, 0.7620000243186951, 0.7876666784286499, 0.7853333353996277, 0.7749999761581421, 0.7906666398048401, 0.8100000023841858, 0.8023333549499512, 0.8053333163261414, 0.8083333373069763, 0.8133333325386047, 0.7906666398048401, 0.8106666803359985, 0.8109999895095825, 0.8230000138282776, 0.8206666707992554, 0.8199999928474426, 0.8259999752044678, 0.8216666579246521, 0.8323333263397217, 0.8326666951179504, 0.8353333473205566, 0.8353333473205566, 0.8256666660308838, 0.8383333086967468, 0.8399999737739563, 0.8323333263397217, 0.8383333086967468, 0.8510000109672546, 0.8383333086967468, 0.8496666550636292, 0.8353333473205566, 0.8479999899864197, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8062857389450073, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207070827484131, 1.5901645421981812, 1.1578996181488037, 0.9543880224227905, 0.8627315163612366, 0.8157703876495361, 0.7570540904998779, 0.7350404262542725, 0.7365497350692749, 0.7044304013252258, 0.6822443008422852, 0.6864827275276184, 0.6505032777786255, 0.6254745721817017, 0.6115033626556396, 0.6084340214729309, 0.6060616970062256, 0.5914590954780579, 0.5704526901245117, 0.5710743069648743, 0.5548692941665649, 0.5407150983810425, 0.5539571642875671], "accuracy": [0.27037379145622253, 0.5089156031608582, 0.5848633050918579, 0.6597543358802795, 0.6873596906661987, 0.7024171352386475, 0.7189275026321411, 0.7271166443824768, 0.7219653725624084, 0.7388719916343689, 0.7407211661338806, 0.7405890822410583, 0.7516840696334839, 0.7630431652069092, 0.7688548564910889, 0.7716285586357117, 0.7720248103141785, 0.774798572063446, 0.785629391670227, 0.7857614755630493, 0.796328067779541, 0.7971205711364746, 0.7924976944923401], "val_loss": [1.9047034978866577, 1.080228328704834, 0.8661004304885864, 0.7340742945671082, 0.701340913772583, 0.6877071261405945, 0.6294497847557068, 0.7030904293060303, 0.6084801554679871, 0.6196625232696533, 0.6031434535980225, 0.5660237073898315, 0.5786404013633728, 0.5440748929977417, 0.5246375203132629, 0.5732709169387817, 0.5453423857688904, 0.5018665194511414, 0.5148798227310181, 0.5100113749504089, 0.5034396648406982, 0.5194859504699707, 0.5133858919143677], "val_accuracy": [0.5116666555404663, 0.6306666731834412, 0.6983333230018616, 0.7429999709129333, 0.7443333268165588, 0.7426666617393494, 0.765666663646698, 0.7229999899864197, 0.7683333158493042, 0.7549999952316284, 0.7706666588783264, 0.7839999794960022, 0.7703333497047424, 0.7976666688919067, 0.8100000023841858, 0.7716666460037231, 0.8053333163261414, 0.8199999928474426, 0.8063333630561829, 0.8106666803359985, 0.8076666593551636, 0.8016666769981384, 0.8033333420753479]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 7], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [22], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3053793907165527, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 7, 3, 4, 3, 9, 5, 4, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 3, 3, 4, 3, 5, 7, 5, 4, 8, 5], [0, 0, 1, 0, 2, 0, 2], [0, 94, 39, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2, 1, 0, 6, 2, 8, 4, 8, 9, 9], [2, 0, 3, 1, 0, 5, 3], [16, 1, 35, 44], [0, 0, 1, 1], [0, 4], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 4, 23, 16, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 0, 6, 6, 0, 2, 0, 3, 0, 2, 2, 5, 4, 0, 5, 8, 0, 8, 6, 2, 1, 4, 3, 5, 0, 8, 6, 8, 5, 8, 1, 8, 3, 3, 5, 5, 2, 9], [2, 0, 3, 1, 0, 5, 4, 4, 2, 3, 3, 1, 4, 2, 0, 5, 5, 5], [16, 1, 66, 97], [0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 7, 0, 0, 0, 4, 9], [0, 6], [0, 69], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.square(tf.math.pow(tf.math.negative(tf.math.square(tf.math.sqrt(alpha))), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.pow(grad, tf.math.multiply(grad, tf.math.square(beta)))), tf.math.negative(grad))))))), grad)), tf.math.sqrt(alpha))), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(beta), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.square(grad)), grad), tf.math.add(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.pow(grad, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 12, 7, 5, 3, 57, 39, 18, 4, 9, 7, 2, 2, 2, 1, 1, 0], "tree_depth": 41}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2, 3], [0, 0, 1, 0, 2, 0, 2], [0, 39, 39, 65], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 1, 1], [0, 7, 5], [0, 6], [32], [1], [0], [2], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 15, 8, 7, 4, 1, 0, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310122013092041, 2.312049627304077, 2.3096132278442383, 2.3093082904815674, 2.3093271255493164, 2.3097305297851562], "accuracy": [0.0936468094587326, 0.09060890227556229, 0.09800554811954498, 0.09391097724437714, 0.0944393053650856, 0.09325055778026581], "val_loss": [2.308074474334717, 2.308074474334717, 2.308074474334717, 2.308074474334717, 2.308074474334717, 2.308074474334717], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]