[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8237142562866211, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2129013538360596, 1.6182016134262085, 1.164726734161377, 0.9738902449607849, 0.8891514539718628, 0.8300924897193909, 0.7966695427894592, 0.763495147228241, 0.7387307286262512, 0.6957042217254639, 0.6988880038261414, 0.657545268535614, 0.6494860649108887, 0.6301943063735962, 0.6381141543388367, 0.6068295836448669, 0.6051332950592041, 0.6009703278541565, 0.5886508226394653, 0.5720444917678833, 0.5562717318534851, 0.5523036122322083, 0.5427680015563965, 0.5479133725166321, 0.5342053174972534, 0.5183371305465698, 0.5112560391426086, 0.5178050398826599, 0.5061548948287964, 0.4968486726284027, 0.489803671836853, 0.4953518211841583, 0.47994276881217957, 0.47523513436317444, 0.47161319851875305, 0.4574064016342163, 0.4627101719379425, 0.4565788507461548, 0.4613042175769806, 0.44439002871513367, 0.45074978470802307], "accuracy": [0.25861841440200806, 0.5020473003387451, 0.590278685092926, 0.6583014130592346, 0.6736230254173279, 0.6960771083831787, 0.7083608508110046, 0.7156254053115845, 0.7305507659912109, 0.7366266250610352, 0.7409853339195251, 0.7548540234565735, 0.763439416885376, 0.7658169269561768, 0.7625148296356201, 0.7757231593132019, 0.7712323069572449, 0.7750627398490906, 0.7815347909927368, 0.7930260300636292, 0.7927618622779846, 0.7935543656349182, 0.7961959838867188, 0.7968564033508301, 0.8017435073852539, 0.8084797263145447, 0.8105930685997009, 0.8041210174560547, 0.8121780753135681, 0.8168009519577026, 0.8186501264572144, 0.8128384351730347, 0.8211596608161926, 0.8235371708869934, 0.8247259259223938, 0.8274996876716614, 0.8305375576019287, 0.8285563588142395, 0.8259146809577942, 0.837537944316864, 0.8323867321014404], "val_loss": [1.9272361993789673, 1.1285666227340698, 0.9227656126022339, 0.7741349935531616, 0.7560377717018127, 0.7411453723907471, 0.6689702272415161, 0.6699129343032837, 0.6045795679092407, 0.5999201536178589, 0.6009512543678284, 0.5657474398612976, 0.5632708072662354, 0.5876143574714661, 0.5622661709785461, 0.5394400358200073, 0.5312200784683228, 0.5783310532569885, 0.5231114625930786, 0.5074300169944763, 0.52402263879776, 0.5137751698493958, 0.49749577045440674, 0.48833853006362915, 0.4806193709373474, 0.4808675944805145, 0.4766697585582733, 0.4665493667125702, 0.46747714281082153, 0.45962420105934143, 0.44860273599624634, 0.45654940605163574, 0.44400903582572937, 0.440425306558609, 0.4540398418903351, 0.4424459636211395, 0.4389272928237915, 0.4578133821487427, 0.43330368399620056, 0.44385969638824463, 0.43431055545806885], "val_accuracy": [0.5476666688919067, 0.6546666622161865, 0.6746666431427002, 0.7213333249092102, 0.7203333377838135, 0.7246666550636292, 0.7400000095367432, 0.7509999871253967, 0.7666666507720947, 0.7689999938011169, 0.7639999985694885, 0.7806666493415833, 0.7829999923706055, 0.7713333368301392, 0.7856666445732117, 0.7956666946411133, 0.8036666512489319, 0.7786666750907898, 0.8133333325386047, 0.8166666626930237, 0.796999990940094, 0.8029999732971191, 0.8100000023841858, 0.8206666707992554, 0.8206666707992554, 0.8193333148956299, 0.8226666450500488, 0.8293333053588867, 0.8303333520889282, 0.8296666741371155, 0.8376666903495789, 0.8373333215713501, 0.8370000123977661, 0.8396666646003723, 0.8320000171661377, 0.843666672706604, 0.8393333554267883, 0.8259999752044678, 0.8433333039283752, 0.8366666436195374, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [89, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 4, 6, 3, 8, 2, 6, 5, 0, 4, 4, 7, 5, 4, 3, 0, 5, 3, 4, 2, 4, 1, 3, 2, 8, 6, 6, 5, 2], [2, 0, 3, 1, 0, 5, 3, 1, 3, 2, 4, 4, 2, 4, 5, 4, 1, 3, 3, 2, 1, 2], [1, 1], [1, 1, 1, 1], [0, 7], [3, 6], [0], [1], [0], [5], [0]], "fitness": -0.22942857444286346, "mapping_values": [1, 1, 0, 1, 1, 52, 30, 22, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.negative(tf.math.pow(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(grad, tf.math.square(tf.math.pow(tf.math.multiply(grad, tf.math.negative(alpha)), tf.math.square(grad)))), beta)), tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.math.pow(grad, beta)), grad), grad)), tf.math.subtract(tf.math.multiply(grad, alpha), tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(beta, tf.math.square(tf.math.add(alpha, beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.284958600997925, 2.3155949115753174, 2.5665831565856934, 2.30830979347229, 2.303694009780884, 2.300077199935913, 2.227773666381836, 2.306297779083252, 2.3032193183898926, 2.3032610416412354, 2.3031749725341797], "accuracy": [0.20763438940048218, 0.12376172095537186, 0.14436666667461395, 0.09760929644107819, 0.10196803510189056, 0.13142253458499908, 0.23444722592830658, 0.0956280529499054, 0.09866596013307571, 0.09602430462837219, 0.09959053993225098], "val_loss": [2.2889151573181152, 2.2419686317443848, 2.3127083778381348, 2.3047525882720947, 2.302182674407959, 2.2909531593322754, 2.3094260692596436, 2.3035213947296143, 2.302743911743164, 2.3027007579803467, 2.302694082260132], "val_accuracy": [0.12466666847467422, 0.2163333296775818, 0.09799999743700027, 0.10266666859388351, 0.10266666859388351, 0.22633333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8, 2, 9, 6], [1, 0, 1, 0, 2, 1], [0, 53, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 3], [16, 1], [0, 0, 0, 0, 1, 0, 1], [0, 7, 5, 7, 9], [0, 6], [0, 65], [1], [0], [4], [0]], "fitness": -0.14399999380111694, "mapping_values": [1, 16, 10, 6, 3, 4, 2, 2, 1, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5014970302581787, 2.303760290145874, 2.4329802989959717, 2.5299298763275146, 2.305267095565796, 2.303856372833252, 2.303741693496704], "accuracy": [0.1818782240152359, 0.10117553919553757, 0.14555540680885315, 0.10249637067317963, 0.10130762308835983, 0.09826971590518951, 0.09721305221319199], "val_loss": [2.3050806522369385, 2.2986083030700684, 2.7854700088500977, 2.3043580055236816, 2.303679943084717, 2.3030688762664795, 2.302776575088501], "val_accuracy": [0.09833333641290665, 0.1433333307504654, 0.10100000351667404, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 0, 5], [2, 0, 1, 0, 2], [26, 2, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [6, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 4], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 6, 3, 3, 1, 7, 4, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 11}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 3, 5], [0, 0, 1, 1, 3], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [39, 1], [1, 0, 1, 1], [0, 7], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303297758102417, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]