[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8379999995231628, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212419271469116, 1.6122201681137085, 1.1299439668655396, 0.9981356859207153, 0.8644315600395203, 0.8204038739204407, 0.7990536093711853, 0.74407559633255, 0.7393388748168945, 0.6916018128395081, 0.660561203956604, 0.6866227388381958, 0.6399983167648315, 0.6228653192520142, 0.6121041178703308, 0.6117516160011292, 0.5855574607849121, 0.5958530306816101, 0.5787179470062256, 0.562182605266571, 0.5511916279792786, 0.5551191568374634, 0.5357433557510376, 0.5338080525398254, 0.5286750793457031, 0.5184693336486816, 0.5074765086174011, 0.5004425048828125, 0.4971159100532532, 0.5065183639526367, 0.4846881926059723, 0.482780784368515, 0.46793803572654724, 0.47081661224365234, 0.46975380182266235, 0.46494314074516296, 0.45250070095062256, 0.4430907964706421, 0.45082271099090576, 0.42986270785331726, 0.4406311511993408, 0.42795732617378235, 0.4230758845806122, 0.42312535643577576, 0.41978567838668823, 0.4234257638454437, 0.40562930703163147, 0.4118586480617523, 0.3953317105770111, 0.40397047996520996, 0.4041558802127838, 0.39906951785087585, 0.38702836632728577, 0.3916581869125366, 0.38274410367012024, 0.38061752915382385, 0.37632960081100464, 0.3865043818950653, 0.37551581859588623, 0.3786250948905945, 0.3791768550872803, 0.3653056025505066, 0.3641930818557739, 0.3647554814815521, 0.3592912256717682], "accuracy": [0.2615242302417755, 0.5119535326957703, 0.605468213558197, 0.6411306262016296, 0.6881521344184875, 0.7037379741668701, 0.705058753490448, 0.7290979027748108, 0.7236824631690979, 0.7445515990257263, 0.7609298825263977, 0.7415136694908142, 0.7648923397064209, 0.7724210619926453, 0.7720248103141785, 0.7689869403839111, 0.7860256433486938, 0.7796856164932251, 0.7860256433486938, 0.7917051911354065, 0.7946110367774963, 0.791441023349762, 0.7979130744934082, 0.8009510040283203, 0.8078193068504333, 0.8072909712791443, 0.8157442808151245, 0.8186501264572144, 0.8169330358505249, 0.8140271902084351, 0.8245938420295715, 0.8207634687423706, 0.8323867321014404, 0.8278959393501282, 0.8277638554573059, 0.8272355198860168, 0.8366134166717529, 0.8372738361358643, 0.8370096683502197, 0.8473120927810669, 0.8401796221733093, 0.8459912538528442, 0.8499537706375122, 0.8482366800308228, 0.843481719493866, 0.8417646288871765, 0.8531237840652466, 0.8532558679580688, 0.859199583530426, 0.857218325138092, 0.8521991968154907, 0.8602562546730042, 0.8617091774940491, 0.8589354157447815, 0.863029956817627, 0.8594637513160706, 0.8667283058166504, 0.8585391640663147, 0.8613129258155823, 0.863029956817627, 0.8625016212463379, 0.8712190985679626, 0.8661999702453613, 0.8685774803161621, 0.8693699836730957], "val_loss": [1.9249054193496704, 1.1021480560302734, 0.9355595707893372, 0.7864061594009399, 0.7747080326080322, 0.6870489716529846, 0.677969753742218, 0.6531861424446106, 0.644228458404541, 0.5999647974967957, 0.6251053810119629, 0.5951493382453918, 0.5866718888282776, 0.547310471534729, 0.5472453832626343, 0.5531461834907532, 0.5572278499603271, 0.551975429058075, 0.5340609550476074, 0.5055977702140808, 0.5139813423156738, 0.5130995512008667, 0.5287526249885559, 0.4818607568740845, 0.4853193759918213, 0.4961502254009247, 0.5183455944061279, 0.47796955704689026, 0.46785131096839905, 0.4883996248245239, 0.4656238555908203, 0.4649105370044708, 0.4732230603694916, 0.4897918403148651, 0.44826605916023254, 0.4425218105316162, 0.44356876611709595, 0.45403721928596497, 0.4331519901752472, 0.42821940779685974, 0.4303456246852875, 0.42650261521339417, 0.4294613003730774, 0.42838218808174133, 0.42619025707244873, 0.42136329412460327, 0.4173409342765808, 0.4111124575138092, 0.4166068136692047, 0.4072766900062561, 0.4061104655265808, 0.4102312922477722, 0.4081804156303406, 0.4106767177581787, 0.4067414402961731, 0.4010579288005829, 0.41365665197372437, 0.3985394835472107, 0.41246792674064636, 0.40032389760017395, 0.39124608039855957, 0.3937709927558899, 0.4104321002960205, 0.3857882618904114, 0.39820584654808044], "val_accuracy": [0.5366666913032532, 0.6460000276565552, 0.6726666688919067, 0.718999981880188, 0.7020000219345093, 0.7453333139419556, 0.7440000176429749, 0.7436666488647461, 0.7396666407585144, 0.7743333578109741, 0.7570000290870667, 0.762333333492279, 0.7736666798591614, 0.784333348274231, 0.7873333096504211, 0.777999997138977, 0.7820000052452087, 0.7846666574478149, 0.7910000085830688, 0.8116666674613953, 0.7933333516120911, 0.7990000247955322, 0.8026666641235352, 0.8236666917800903, 0.8196666836738586, 0.8149999976158142, 0.8069999814033508, 0.8199999928474426, 0.828000009059906, 0.8166666626930237, 0.828000009059906, 0.82833331823349, 0.8176666498184204, 0.8186666369438171, 0.8299999833106995, 0.8346666693687439, 0.8293333053588867, 0.8273333311080933, 0.8389999866485596, 0.843999981880188, 0.840666651725769, 0.843666672706604, 0.8420000076293945, 0.8396666646003723, 0.8446666598320007, 0.8479999899864197, 0.843666672706604, 0.8453333377838135, 0.8486666679382324, 0.8539999723434448, 0.8533333539962769, 0.8500000238418579, 0.847000002861023, 0.8506666421890259, 0.8560000061988831, 0.8533333539962769, 0.8450000286102295, 0.8546666502952576, 0.847000002861023, 0.8583333492279053, 0.8576666712760925, 0.8550000190734863, 0.8500000238418579, 0.8560000061988831, 0.8543333411216736]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 1, 3, 4, 9], [0, 3, 3, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 8, 2, 8, 4, 7, 7], [2, 0, 3, 1, 1, 5, 4, 2, 3], [16, 1], [1, 0, 1, 1], [0, 7], [1, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 20, 11, 9, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), alpha)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(grad, beta))), grad)), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 1, 5, 7, 3, 1, 3, 3, 1, 6, 1, 1, 1, 6, 6, 0, 0, 5, 5, 0, 3, 5, 7], [0, 0, 1, 0, 0, 1, 1, 3, 2, 0, 1, 3, 0, 2, 1, 3, 3, 2, 0], [0, 39, 53, 39, 33, 8, 59], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [4, 2, 0, 6, 3, 8, 9], [0, 0, 3, 0, 0], [16, 1, 92, 30], [0, 0, 1, 1], [0, 2], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 26, 19, 7, 11, 7, 4, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), alpha)), tf.math.subtract(tf.math.subtract(tf.math.subtract(grad, grad), tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(alpha), grad))), tf.math.negative(tf.math.square(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), grad), alpha), tf.math.negative(tf.math.multiply(tf.math.square(grad), tf.math.add(grad, grad))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [3, 2, 3, 1, 3, 5], [0, 0, 3, 3, 2], [0, 69, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 6], [2, 0, 1, 3, 4], [16, 1], [0, 0, 1, 1], [0, 7], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 7, 3, 4, 2, 12, 7, 5, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.divide_no_nan(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310232639312744, 2.3097944259643555, 2.310145378112793, 2.3090665340423584, 2.310920476913452, 2.310361623764038], "accuracy": [0.0944393053650856, 0.09100515395402908, 0.09800554811954498, 0.09747721254825592, 0.09126931428909302, 0.08717474341392517], "val_loss": [2.3088269233703613, 2.308854103088379, 2.308897018432617, 2.308955192565918, 2.309030294418335, 2.3091177940368652], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09566666930913925, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 9, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 70, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [0], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 7, 4, 3, 3, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.310480833053589, 2.309525966644287, 2.30993390083313, 2.309950113296509, 2.3095364570617676, 2.310164213180542], "accuracy": [0.09245806187391281, 0.09457138925790787, 0.09377889335155487, 0.09549596905708313, 0.09100515395402908, 0.09219389408826828], "val_loss": [2.3093340396881104, 2.3093340396881104, 2.3093340396881104, 2.3093340396881104, 2.3093340396881104, 2.3093340396881104], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]