[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7988571524620056, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213083505630493, 1.6206467151641846, 1.1382123231887817, 0.988852322101593, 0.9078126549720764, 0.8144475221633911, 0.8008708357810974, 0.7684407234191895, 0.7190276980400085, 0.7181956171989441, 0.685381293296814, 0.6674467921257019, 0.673154890537262, 0.6345937848091125, 0.621738612651825, 0.6058259010314941, 0.5945313572883606, 0.5892034769058228, 0.5760691165924072, 0.5821840167045593, 0.5723738074302673], "accuracy": [0.26337340474128723, 0.5040285587310791, 0.6092986464500427, 0.6535464525222778, 0.6738871932029724, 0.7028133869171143, 0.7061154246330261, 0.7186633348464966, 0.7383436560630798, 0.7333245277404785, 0.7506273984909058, 0.7483819723129272, 0.7520803213119507, 0.7648923397064209, 0.7676661014556885, 0.7763835787773132, 0.7771760821342468, 0.7816668748855591, 0.7816668748855591, 0.7829877138137817, 0.7882710099220276], "val_loss": [1.9296238422393799, 1.1127361059188843, 0.8485198020935059, 0.8318889737129211, 0.7168358564376831, 0.6995473504066467, 0.7057203054428101, 0.6775529980659485, 0.6489570140838623, 0.6295586228370667, 0.6046116948127747, 0.5948127508163452, 0.565721333026886, 0.561892569065094, 0.5672974586486816, 0.5323920249938965, 0.5586151480674744, 0.5324841141700745, 0.5635344386100769, 0.5435514450073242, 0.5473669171333313], "val_accuracy": [0.5289999842643738, 0.640333354473114, 0.7139999866485596, 0.6773333549499512, 0.7433333396911621, 0.7306666374206543, 0.7286666631698608, 0.7523333430290222, 0.7649999856948853, 0.7723333239555359, 0.7739999890327454, 0.7873333096504211, 0.7923333048820496, 0.8033333420753479, 0.7829999923706055, 0.8063333630561829, 0.7910000085830688, 0.8040000200271606, 0.7756666541099548, 0.7950000166893005, 0.7990000247955322]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 1], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 3, 4], [1, 2, 0, 4, 0, 3, 1], [7, 12], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 0, 2, 2, 8, 9], [0, 1, 1, 4], [0, 29], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), alpha))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29105.931640625, 4442917.5, 74439520.0, 535979456.0, 2391371776.0, 7860767232.0], "accuracy": [0.09721305221319199, 0.09285431355237961, 0.10553427785634995, 0.09694888442754745, 0.09840179979801178, 0.09681680053472519], "val_loss": [304409.0625, 16320083.0, 175002336.0, 953750272.0, 3571948544.0, 10535332864.0], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 80, 39], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [2, 7, 4, 7, 3, 5, 6, 4, 1, 6, 2, 6, 5], [1, 2, 0, 4, 0, 3, 1, 2, 4, 1, 5, 5], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [80], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 25, 13, 12, 2, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, alpha)), beta), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1439501.375, 26949558.0, 126968336.0, 348436960.0, 755669888.0, 1365566464.0], "accuracy": [0.09840179979801178, 0.1010434553027153, 0.10672302544116974, 0.09377889335155487, 0.10038304328918457, 0.10328886657953262], "val_loss": [6546108.5, 52409860.0, 176931968.0, 419452960.0, 819317120.0, 1415862400.0], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 2], [0, 0, 1, 2, 2], [26, 89, 39], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 5], [2, 0, 3, 1, 0], [16, 86], [0, 0, 0, 1, 1, 1, 1, 1], [0, 7, 5, 7], [0, 6, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29179.109375, 4448278.5, 76331752.0, 543876096.0, 2390735104.0, 7804168192.0], "accuracy": [0.09945846349000931, 0.10077928751707077, 0.09959053993225098, 0.09959053993225098, 0.1006472036242485, 0.10170386731624603], "val_loss": [307164.25, 16469497.0, 176607696.0, 962505216.0, 3604749056.0, 10632096768.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 8, 4, 7, 0, 5, 5, 4], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2, 3, 2], [0, 1, 2, 7, 2, 2], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 12, 6, 6, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(beta, grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309577703475952, 2.3086800575256348, 2.3095128536224365, 2.3097198009490967, 2.3100905418395996, 2.3091819286346436], "accuracy": [0.08875974267721176, 0.09140139818191528, 0.09021265059709549, 0.08796724677085876, 0.08981640636920929, 0.0940430611371994], "val_loss": [2.3090217113494873, 2.3090217113494873, 2.3090217113494873, 2.3090217113494873, 2.3090217113494873, 2.3090217113494873], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]