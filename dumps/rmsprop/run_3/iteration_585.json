[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8242856860160828, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212425708770752, 1.6139988899230957, 1.157884955406189, 0.9607598781585693, 0.8867461681365967, 0.8123201727867126, 0.7903955578804016, 0.743244469165802, 0.7248156666755676, 0.7040806412696838, 0.6928795576095581, 0.6754387617111206, 0.6563816666603088, 0.6265518665313721, 0.6230122447013855, 0.6194244623184204, 0.6016440391540527, 0.5935367345809937, 0.5802419781684875, 0.5775530338287354, 0.5646525025367737, 0.5527948141098022, 0.5574896335601807, 0.5349621772766113, 0.5391364097595215, 0.5462369918823242], "accuracy": [0.2716946303844452, 0.5019152164459229, 0.5890899300575256, 0.6520935297012329, 0.6767930388450623, 0.7038700580596924, 0.7078325152397156, 0.7228899598121643, 0.7290979027748108, 0.7329282760620117, 0.7363624572753906, 0.7481178045272827, 0.7471932172775269, 0.7644960880279541, 0.7617223858833313, 0.7655527591705322, 0.7774402499198914, 0.7751948237419128, 0.7825914621353149, 0.7841764688491821, 0.7907806038856506, 0.7852331399917603, 0.7930260300636292, 0.8024039268493652, 0.7975168228149414, 0.7950072884559631], "val_loss": [1.931660532951355, 1.1263203620910645, 0.9407700300216675, 0.8164739608764648, 0.7835394144058228, 0.7006054520606995, 0.6908841729164124, 0.6963478326797485, 0.6730822920799255, 0.6396637558937073, 0.6416293382644653, 0.6165474653244019, 0.5996151566505432, 0.5942298769950867, 0.5803380012512207, 0.5703526735305786, 0.5603206157684326, 0.5874233245849609, 0.5429939031600952, 0.5509749054908752, 0.5352460741996765, 0.5289331078529358, 0.5236941576004028, 0.5163341760635376, 0.5190823674201965, 0.5152822136878967], "val_accuracy": [0.5563333630561829, 0.6326666474342346, 0.6370000243186951, 0.6886666417121887, 0.7036666870117188, 0.7276666760444641, 0.737333357334137, 0.7243333458900452, 0.7296666502952576, 0.7450000047683716, 0.7546666860580444, 0.765333354473114, 0.7716666460037231, 0.7693333625793457, 0.7713333368301392, 0.7833333611488342, 0.7900000214576721, 0.7796666622161865, 0.7916666865348816, 0.7923333048820496, 0.8086666464805603, 0.8056666851043701, 0.8076666593551636, 0.8050000071525574, 0.8059999942779541, 0.8036666512489319]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 6, 4], [2, 2, 1, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [7, 3, 0, 3, 4, 7, 4, 0, 9], [0, 1, 1, 1, 1, 0], [0, 22, 99], [1], [0], [4], [0]], "fitness": -0.1979999989271164, "mapping_values": [1, 10, 5, 5, 3, 12, 6, 6, 1, 15, 9, 6, 3, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), tf.math.pow(tf.math.add(tf.math.pow(alpha, tf.math.negative(alpha)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3484444618225098, 2.262892484664917, 2.2912137508392334, 2.258496046066284, 2.305842161178589, 2.268653154373169, 2.2972285747528076], "accuracy": [0.18161405622959137, 0.1810857206583023, 0.11081759631633759, 0.18359529972076416, 0.09813763201236725, 0.15678246319293976, 0.14449875056743622], "val_loss": [2.2929110527038574, 2.0334794521331787, 2.2827208042144775, 2.3099989891052246, 2.301206588745117, 2.2123329639434814, 2.2588512897491455], "val_accuracy": [0.10766666382551193, 0.1966666728258133, 0.15133333206176758, 0.10499999672174454, 0.10499999672174454, 0.19233334064483643, 0.17000000178813934]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 2], [26, 57, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 1, 5, 5, 4], [2, 2, 2, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 4, 4], [0, 3, 1, 2], [10], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.square(beta), tf.math.square(tf.math.pow(beta, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035497665405273, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 3, 3, 6, 5, 4], [2, 3, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 4, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 14, 7, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.530634880065918, 2.307487726211548, 2.306870698928833, 2.304696559906006, 2.304295063018799, 2.3055660724639893, 2.3048722743988037], "accuracy": [0.19270901381969452, 0.09919429570436478, 0.09628847241401672, 0.09457138925790787, 0.10091137140989304, 0.09470347315073013, 0.09721305221319199], "val_loss": [2.3130125999450684, 2.304633378982544, 2.3036179542541504, 2.3036434650421143, 2.3032383918762207, 2.303487539291382, 2.3028922080993652], "val_accuracy": [0.10233332961797714, 0.10366666316986084, 0.09833333641290665, 0.09666666388511658, 0.09866666793823242, 0.09666666388511658, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0, 0], [26, 39, 29, 89, 38], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 5, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [88180848.0, 30744311808.0, 1282982150144.0, 25431935811584.0, 364149641052160.0, 4259630452572160.0], "accuracy": [0.09747721254825592, 0.09311848133802414, 0.10368511080741882, 0.10091137140989304, 0.1002509593963623, 0.09747721254825592], "val_loss": [1091607936.0, 145930371072.0, 4326419333120.0, 72648516173824.0, 932088433868800.0, 1.0406892589285376e+16], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]