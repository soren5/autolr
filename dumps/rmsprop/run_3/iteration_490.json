[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7879999876022339, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2084920406341553, 1.5940874814987183, 1.12824547290802, 0.9764008522033691, 0.8825994729995728, 0.8107106685638428, 0.7890769243240356, 0.7488890886306763, 0.7294039726257324, 0.6809005737304688, 0.6843742728233337, 0.6528241634368896, 0.6632882356643677, 0.6473378539085388, 0.6292467713356018, 0.6112900376319885], "accuracy": [0.2623167335987091, 0.5097081065177917, 0.6028265953063965, 0.6530181169509888, 0.6778497099876404, 0.7053229212760925, 0.709549605846405, 0.7226257920265198, 0.7284374833106995, 0.7483819723129272, 0.7397965788841248, 0.7532690763473511, 0.7499669790267944, 0.7572315335273743, 0.7650244235992432, 0.7716285586357117], "val_loss": [1.921600580215454, 1.117545247077942, 0.9911897778511047, 0.8353496193885803, 0.7263941764831543, 0.7189434170722961, 0.6533381342887878, 0.6829152703285217, 0.6220108866691589, 0.5793858766555786, 0.5798584222793579, 0.5702427625656128, 0.618242621421814, 0.5885530710220337, 0.5704671740531921, 0.5641278624534607], "val_accuracy": [0.57833331823349, 0.6383333206176758, 0.6673333048820496, 0.6723333597183228, 0.7173333168029785, 0.7193333506584167, 0.7559999823570251, 0.7446666955947876, 0.765999972820282, 0.781000018119812, 0.7866666913032532, 0.7829999923706055, 0.7613333463668823, 0.7749999761581421, 0.7829999923706055, 0.7773333191871643]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 1, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 2, 0, 6, 6, 8, 2], [2, 0, 3, 1, 2], [16, 0], [0, 1, 1, 1], [0, 7], [0, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.17428570985794067, "mapping_values": [1, 1, 0, 1, 0, 7, 4, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1900851888128.0, 2193350590464.0, 2136422481920.0, 2119848427520.0, 2144205799424.0, 2097652957184.0], "accuracy": [0.13115836679935455, 0.137630432844162, 0.1422533392906189, 0.14159291982650757, 0.137630432844162, 0.13895125687122345], "val_loss": [1488263053312.0, 1488263315456.0, 1488263315456.0, 1488263315456.0, 1488263315456.0, 1488263315456.0], "val_accuracy": [0.18033333122730255, 0.18033333122730255, 0.18033333122730255, 0.18033333122730255, 0.18033333122730255, 0.18033333122730255]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0, 6, 5, 8, 7, 5, 4, 1, 5, 3, 7, 6, 7, 9, 7, 5, 4, 5], [0, 1, 3, 2, 2, 0, 3, 2, 1, 3, 0, 0, 2, 0], [0, 39, 39, 23, 3, 60], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [7, 2, 4, 6, 3, 8, 0], [2, 4, 3, 4, 0, 4], [90, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 24, 14, 6, 13, 7, 6, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.math.square(tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(grad)), tf.math.add(tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(grad, tf.math.square(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.negative(grad)))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 5, 6, 7, 5, 0], [0, 0, 1, 0, 1, 3, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 6, 0, 6, 3, 2, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 1, 0, 1], [0, 7, 8], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 18, 11, 7, 3, 2, 1, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310054063796997, 2.309556722640991, 2.3101015090942383, 2.310792922973633, 2.3100900650024414, 2.3094675540924072], "accuracy": [0.09100515395402908, 0.08730682730674744, 0.0882314071059227, 0.09034473448991776, 0.0956280529499054, 0.08902391046285629], "val_loss": [2.308661699295044, 2.308661699295044, 2.308661699295044, 2.308661699295044, 2.308661699295044, 2.308661699295044], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 1, 1, 3, 8, 2, 0, 3], [0, 0, 1, 0, 1, 1, 1], [44, 39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 0, 2, 2, 6, 9, 0], [2, 0, 3, 2, 0, 2], [61, 1, 70], [0, 0, 0, 1, 0, 1, 1], [0, 7, 4, 5], [0, 7, 5], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 16, 9, 7, 3, 17, 11, 6, 3, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(grad, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102469444274902, 2.309638500213623, 2.309631586074829, 2.3098015785217285, 2.309405565261841, 2.3096230030059814], "accuracy": [0.09087307006120682, 0.0936468094587326, 0.0952318087220192, 0.09021265059709549, 0.09087307006120682, 0.0940430611371994], "val_loss": [2.3080742359161377, 2.3080742359161377, 2.3080742359161377, 2.3080742359161377, 2.3080742359161377, 2.3080742359161377], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]