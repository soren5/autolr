[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8077142834663391, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211334466934204, 1.614149570465088, 1.170268177986145, 0.9839443564414978, 0.8812918066978455, 0.8513824343681335, 0.7962601184844971, 0.7477721571922302, 0.7450902462005615, 0.7369061708450317, 0.6773247122764587, 0.6679778695106506, 0.6569827198982239, 0.6544871926307678, 0.6160014867782593, 0.6206725239753723, 0.6021010875701904, 0.58565753698349, 0.5851566195487976, 0.5744321346282959, 0.549056351184845, 0.5597403049468994, 0.548242449760437, 0.5339083671569824, 0.519718587398529, 0.5192520618438721, 0.5155379176139832, 0.5081436634063721, 0.5123772025108337, 0.48757633566856384, 0.49936383962631226, 0.48220381140708923, 0.4707251191139221, 0.4808740019798279, 0.472720205783844, 0.4578997790813446, 0.4573031961917877, 0.4572896659374237, 0.44688647985458374, 0.4471343755722046, 0.4488998353481293, 0.4282991886138916, 0.4403141438961029], "accuracy": [0.26839256286621094, 0.5097081065177917, 0.5933166146278381, 0.651168942451477, 0.6803592443466187, 0.6900013089179993, 0.707040011882782, 0.7300224304199219, 0.7238145470619202, 0.7251353859901428, 0.7477215528488159, 0.7485140562057495, 0.7569673657417297, 0.7553823590278625, 0.77677983045578, 0.7714964747428894, 0.7765156626701355, 0.7819310426712036, 0.7795535326004028, 0.7853652238845825, 0.7911768555641174, 0.7910447716712952, 0.7968564033508301, 0.8030643463134766, 0.8105930685997009, 0.8021397590637207, 0.8038568496704102, 0.8098005652427673, 0.81112140417099, 0.822348415851593, 0.8124422430992126, 0.8228767514228821, 0.8308017253875732, 0.8238013386726379, 0.8245938420295715, 0.8338396549224854, 0.8296129703521729, 0.8304054737091064, 0.8348963260650635, 0.834632158279419, 0.8341038227081299, 0.8401796221733093, 0.8400475382804871], "val_loss": [1.9273695945739746, 1.1066392660140991, 0.9395418167114258, 0.7817667722702026, 0.7317905426025391, 0.7044903039932251, 0.654794454574585, 0.7021157145500183, 0.6095622777938843, 0.5921028852462769, 0.5894259214401245, 0.5802003741264343, 0.5629470348358154, 0.5715650916099548, 0.5384414792060852, 0.5832483768463135, 0.5597074031829834, 0.5316206216812134, 0.5135133862495422, 0.5311894416809082, 0.4968103766441345, 0.5199679136276245, 0.4860004186630249, 0.479604572057724, 0.4748486280441284, 0.4754258692264557, 0.4985271096229553, 0.49462467432022095, 0.46095868945121765, 0.4617810547351837, 0.47095659375190735, 0.4568665325641632, 0.44580334424972534, 0.4499073922634125, 0.4504081606864929, 0.4418964087963104, 0.4397493004798889, 0.42489883303642273, 0.44776150584220886, 0.4297977685928345, 0.42919474840164185, 0.4258192479610443, 0.4227713346481323], "val_accuracy": [0.5856666564941406, 0.6493333578109741, 0.6396666765213013, 0.722000002861023, 0.7269999980926514, 0.7400000095367432, 0.7593333125114441, 0.7133333086967468, 0.7766666412353516, 0.784333348274231, 0.7760000228881836, 0.7786666750907898, 0.7990000247955322, 0.7906666398048401, 0.800000011920929, 0.7846666574478149, 0.7799999713897705, 0.7883333563804626, 0.8063333630561829, 0.7873333096504211, 0.815666675567627, 0.7993333339691162, 0.8259999752044678, 0.82833331823349, 0.8259999752044678, 0.8236666917800903, 0.8059999942779541, 0.8076666593551636, 0.8333333134651184, 0.828000009059906, 0.8289999961853027, 0.8309999704360962, 0.8413333296775818, 0.8396666646003723, 0.8420000076293945, 0.8389999866485596, 0.8399999737739563, 0.8479999899864197, 0.8309999704360962, 0.8420000076293945, 0.8463333249092102, 0.8460000157356262, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 4, 4, 7, 0, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1, 1], [7, 3, 0, 2], [1, 6, 0], [0, 77], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, beta), tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.math.square(grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [5, 9, 4, 5, 0, 5, 5, 4], [0, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [7, 3, 0, 2, 3, 0, 6, 7, 9, 2, 5, 2, 3, 6, 6, 7, 0, 3, 6, 2, 6, 6, 4, 0, 8, 9, 9, 8, 1, 2, 0, 3, 3, 1, 6, 1, 2, 0, 3, 6, 0, 9, 1, 2, 4, 5, 6, 9], [0, 5, 1, 4, 7, 3, 5, 4, 1, 2, 0, 6, 3, 3, 5, 4, 0, 7, 2, 0, 6, 4, 6, 3, 5, 0, 3, 7], [0, 9, 65, 89, 10, 24, 22, 96, 35, 9], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 2, 2, 0, 1, 76, 48, 28, 10, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.math.square(sigma)))), tf.math.add(tf.math.multiply(grad, grad), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), grad), sigma), tf.math.sqrt(sigma))))), tf.math.subtract(grad, tf.math.add(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(tf.math.negative(beta), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.square(grad), grad), sigma), tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad)))))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), sigma), grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303861618041992, 2.3025901317596436, 2.302607774734497, 2.3026506900787354, 2.302684783935547, 2.3028078079223633, 2.302868366241455, 2.303114891052246, 2.3032243251800537, 2.302976131439209, 2.303924560546875, 2.303359031677246, 2.3041346073150635], "accuracy": [0.09192973375320435, 0.09496764093637466, 0.09800554811954498, 0.09906221181154251, 0.09628847241401672, 0.09496764093637466, 0.09826971590518951, 0.09906221181154251, 0.09285431355237961, 0.09906221181154251, 0.09866596013307571, 0.10394927859306335, 0.09694888442754745], "val_loss": [2.3025856018066406, 2.302586793899536, 2.30259108543396, 2.3025665283203125, 2.302579402923584, 2.3026299476623535, 2.302854299545288, 2.302675247192383, 2.302747964859009, 2.302654504776001, 2.303206443786621, 2.3036906719207764, 2.3031628131866455], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.09600000083446503, 0.10166666656732559, 0.10066666454076767, 0.0989999994635582, 0.1003333330154419, 0.10066666454076767, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [26, 39, 39, 30], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [73, 1], [1, 0, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [8.06873893737793, 185997.3125, 138.39212036132812, 2.3319313526153564, 342569.8125, 1.4210097656123248e+24], "accuracy": [0.09932637959718704, 0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.09919429570436478], "val_loss": [27.97127914428711, 2.3084378242492676, 2.3251702785491943, 2.3449041843414307, 6460967424.0, NaN], "val_accuracy": [0.1003333330154419, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09666666388511658, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 1, 3, 4, 0, 3, 1], [16, 4], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [7, 3, 0, 2, 7, 7], [0, 1, 1, 4, 7, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 8, 4, 1, 12, 6, 6, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(alpha)), tf.math.square(tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(grad, grad), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3030104637145996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]