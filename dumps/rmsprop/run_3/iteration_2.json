[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211758852005005, 1.616866946220398, 1.1697981357574463, 0.9852147698402405, 0.8969141244888306, 0.8345927000045776, 0.8017656803131104, 0.7711785435676575, 0.7204592227935791, 0.7015408277511597, 0.7023685574531555, 0.6951078176498413, 0.6604515314102173, 0.6540271043777466, 0.6340469121932983, 0.6074149012565613, 0.6132510304450989, 0.583380401134491, 0.5910806059837341, 0.5944617390632629, 0.5560501217842102, 0.5477344393730164, 0.5634240508079529, 0.5520210266113281, 0.5346639156341553, 0.5372521281242371, 0.5198961496353149, 0.5126238465309143, 0.5139648914337158, 0.5090232491493225, 0.5005930066108704, 0.4876319468021393, 0.49578747153282166, 0.47824758291244507, 0.4750245213508606, 0.46880558133125305, 0.470009982585907, 0.45435160398483276, 0.45721787214279175, 0.44982898235321045, 0.4502345323562622, 0.4658060073852539, 0.4307207763195038, 0.43906158208847046, 0.4283768832683563, 0.41837772727012634, 0.4267278015613556, 0.423268586397171, 0.4115487337112427, 0.4015878736972809, 0.4009411633014679, 0.4115683436393738, 0.4054955244064331, 0.4097333252429962, 0.39450526237487793], "accuracy": [0.2615242302417755, 0.4951789677143097, 0.5929203629493713, 0.651168942451477, 0.6778497099876404, 0.6934354901313782, 0.7049266695976257, 0.7140403985977173, 0.7304186820983887, 0.7401928305625916, 0.739928662776947, 0.7360982894897461, 0.7564390301704407, 0.7565711140632629, 0.7617223858833313, 0.7713643908500671, 0.7668735980987549, 0.7800818681716919, 0.7759873270988464, 0.7790252566337585, 0.7951393723487854, 0.7988376617431641, 0.7874785661697388, 0.7954035401344299, 0.7988376617431641, 0.8006868362426758, 0.8070268034934998, 0.8057059645652771, 0.8124422430992126, 0.8103289008140564, 0.8150838613510132, 0.8226125836372375, 0.8136309385299683, 0.8236692547798157, 0.8269713521003723, 0.829216718673706, 0.8277638554573059, 0.8334434032440186, 0.8318583965301514, 0.8325188159942627, 0.8370096683502197, 0.8301413059234619, 0.8412362933158875, 0.8374059200286865, 0.8457271456718445, 0.8441421389579773, 0.8455950617790222, 0.8409721255302429, 0.8475762605667114, 0.8524633646011353, 0.8529917001724243, 0.8532558679580688, 0.8506141901016235, 0.8494254350662231, 0.854708731174469], "val_loss": [1.917349934577942, 1.088020920753479, 0.8921898007392883, 0.792959451675415, 0.7086063623428345, 0.6913191676139832, 0.6454869508743286, 0.6292138695716858, 0.6003586649894714, 0.601391077041626, 0.6029912233352661, 0.5539969205856323, 0.568280041217804, 0.5473398566246033, 0.5058554410934448, 0.5317373275756836, 0.49967968463897705, 0.4920486509799957, 0.571401059627533, 0.48677539825439453, 0.4776957929134369, 0.4876878261566162, 0.48351189494132996, 0.4541318714618683, 0.45446956157684326, 0.4572935402393341, 0.4555127024650574, 0.44672346115112305, 0.4404105544090271, 0.44021931290626526, 0.4269258677959442, 0.4378030300140381, 0.42906758189201355, 0.4438880681991577, 0.42149829864501953, 0.4147157669067383, 0.4127027094364166, 0.43876081705093384, 0.4088342785835266, 0.4112480878829956, 0.40682414174079895, 0.40282031893730164, 0.4080990254878998, 0.39871686697006226, 0.3909355401992798, 0.39388060569763184, 0.4139043390750885, 0.3828422725200653, 0.38385021686553955, 0.37755224108695984, 0.41896194219589233, 0.4013403356075287, 0.37909460067749023, 0.38202163577079773, 0.3741842806339264], "val_accuracy": [0.5776666402816772, 0.6486666798591614, 0.6880000233650208, 0.7143333554267883, 0.746999979019165, 0.7519999742507935, 0.7480000257492065, 0.7580000162124634, 0.7756666541099548, 0.7710000276565552, 0.7696666717529297, 0.800000011920929, 0.768666684627533, 0.781000018119812, 0.8083333373069763, 0.7963333129882812, 0.8050000071525574, 0.8109999895095825, 0.7636666893959045, 0.815666675567627, 0.8176666498184204, 0.8149999976158142, 0.8243333101272583, 0.8306666612625122, 0.8253333568572998, 0.8233333230018616, 0.8230000138282776, 0.8306666612625122, 0.8383333086967468, 0.8266666531562805, 0.8460000157356262, 0.8356666564941406, 0.8360000252723694, 0.8386666774749756, 0.8453333377838135, 0.8486666679382324, 0.8496666550636292, 0.82833331823349, 0.8376666903495789, 0.8516666889190674, 0.8423333168029785, 0.8496666550636292, 0.8453333377838135, 0.8560000061988831, 0.8536666631698608, 0.8519999980926514, 0.843999981880188, 0.8550000190734863, 0.856333315372467, 0.8613333106040955, 0.8363333344459534, 0.8453333377838135, 0.859333336353302, 0.8573333621025085, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8102856874465942, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2091710567474365, 1.6061218976974487, 1.1650950908660889, 1.0151820182800293, 0.8798146843910217, 0.8355238437652588, 0.8002598881721497, 0.7760441303253174, 0.7436948418617249, 0.7192864418029785, 0.7031691074371338, 0.6664761900901794, 0.6579978466033936, 0.6613401770591736, 0.622783362865448, 0.624731719493866, 0.6055681705474854, 0.6072463393211365, 0.5834051370620728, 0.5694662928581238, 0.5689065456390381, 0.5635138154029846, 0.5574751496315002, 0.5457911491394043, 0.5296601057052612, 0.5253603458404541, 0.5246341824531555, 0.5002120733261108, 0.5121907591819763, 0.5014357566833496, 0.49280813336372375, 0.4839172065258026, 0.48626741766929626, 0.4797366261482239, 0.47582510113716125, 0.4614311456680298, 0.4592706263065338, 0.4707222580909729, 0.44853419065475464, 0.44923070073127747, 0.438819020986557], "accuracy": [0.2639017403125763, 0.5066701769828796, 0.5937128663063049, 0.6347906589508057, 0.6831330060958862, 0.6964733600616455, 0.6914542317390442, 0.7120591998100281, 0.720380425453186, 0.7337207794189453, 0.741909921169281, 0.7479857206344604, 0.7537974119186401, 0.7494386434555054, 0.7622507214546204, 0.7646281719207764, 0.7774402499198914, 0.7744023203849792, 0.7837802171707153, 0.789459764957428, 0.7918372750282288, 0.7890635132789612, 0.7932901978492737, 0.7922335267066956, 0.8030643463134766, 0.8041210174560547, 0.8016114234924316, 0.8140271902084351, 0.8057059645652771, 0.8119139075279236, 0.8195747137069702, 0.8240655064582825, 0.8211596608161926, 0.8293488025665283, 0.8259146809577942, 0.832650899887085, 0.8315942287445068, 0.8228767514228821, 0.8302733898162842, 0.8339717388153076, 0.8404437899589539], "val_loss": [1.9073981046676636, 1.1190491914749146, 0.9017895460128784, 0.747333824634552, 0.7310117483139038, 0.6511977910995483, 0.624315083026886, 0.7207892537117004, 0.5889154076576233, 0.5872900485992432, 0.5652704834938049, 0.5858649015426636, 0.5463693737983704, 0.5309901833534241, 0.5134283900260925, 0.5214651823043823, 0.512769877910614, 0.5208609104156494, 0.48578935861587524, 0.5003403425216675, 0.4905427098274231, 0.46966663002967834, 0.4722777009010315, 0.464376300573349, 0.46962523460388184, 0.45412731170654297, 0.4570189118385315, 0.4552210569381714, 0.4600086808204651, 0.4294258654117584, 0.4277847111225128, 0.4343399107456207, 0.42555469274520874, 0.4153137505054474, 0.4161863625049591, 0.41300293803215027, 0.4130534529685974, 0.41888412833213806, 0.4100053012371063, 0.42153143882751465, 0.40046077966690063], "val_accuracy": [0.5706666707992554, 0.6303333044052124, 0.6673333048820496, 0.7266666889190674, 0.718666672706604, 0.7583333253860474, 0.7706666588783264, 0.703000009059906, 0.781333327293396, 0.7856666445732117, 0.7960000038146973, 0.7703333497047424, 0.7893333435058594, 0.7916666865348816, 0.8090000152587891, 0.7976666688919067, 0.8080000281333923, 0.8036666512489319, 0.8320000171661377, 0.8096666932106018, 0.8296666741371155, 0.8306666612625122, 0.8360000252723694, 0.8383333086967468, 0.8326666951179504, 0.8399999737739563, 0.828000009059906, 0.8389999866485596, 0.8353333473205566, 0.8523333072662354, 0.8523333072662354, 0.8453333377838135, 0.8553333282470703, 0.8543333411216736, 0.8566666841506958, 0.8606666922569275, 0.8566666841506958, 0.8479999899864197, 0.8566666841506958, 0.8483333587646484, 0.8583333492279053]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 3, 5, 3, 9], [0, 0, 1, 0, 2], [0, 39, 67], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 5, 7, 7, 6], [0, 2, 1, 4, 1], [0], [0, 0, 0, 1, 1], [0, 8, 7], [2, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 5, 3, 2, 1, 10, 5, 5, 1, 5, 3, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), tf.math.add(alpha, tf.math.divide_no_nan(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(beta, sigma)))", "other_info": {"loss": [44748.9375, 840551.9375, 3903613.5, 10734833.0, 23108298.0, 42880044.0], "accuracy": [0.10117553919553757, 0.10011887550354004, 0.09972262382507324, 0.0952318087220192, 0.09959053993225098, 0.09959053993225098], "val_loss": [202717.390625, 1614264.0, 5440555.5, 12887484.0, 25160968.0, 43466928.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 0, 6, 6, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104159832000732, 2.3095836639404297, 2.3110098838806152, 2.3096089363098145, 2.310872793197632, 2.3096225261688232], "accuracy": [0.09351472556591034, 0.0936468094587326, 0.09034473448991776, 0.09589222073554993, 0.08928807079792023, 0.09496764093637466], "val_loss": [2.3083267211914062, 2.3083267211914062, 2.3083267211914062, 2.3083267211914062, 2.3083267211914062, 2.3083267211914062], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 1, 3, 5, 1, 2, 1, 7, 4, 9], [0, 0, 3, 0, 2, 0, 0, 0], [0, 39, 39, 1, 7, 92, 54], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 0, 2, 2, 6, 5, 7, 2, 6, 5, 3, 9, 6, 4, 0, 1, 8, 7], [2, 0, 3, 1, 4, 1, 1, 2, 0, 2, 1, 4, 5, 3], [16, 61, 40], [0, 0, 1, 1], [0, 7], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 20, 12, 8, 7, 36, 22, 14, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(grad, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.square(alpha), grad), alpha), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.negative(beta)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(beta, tf.math.sqrt(alpha))), tf.math.add(grad, grad)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.311471700668335, 2.309919834136963, 2.310300827026367, 2.310091495513916, 2.310563087463379, 2.3087010383605957], "accuracy": [0.08625016361474991, 0.09470347315073013, 0.08809932321310043, 0.09259014576673508, 0.08492933213710785, 0.09391097724437714], "val_loss": [2.310131549835205, 2.310131549835205, 2.310131549835205, 2.310131549835205, 2.310131549835205, 2.310131549835205], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 2, 5, 5, 7, 4, 1, 5, 9], [1, 2, 1, 2, 2, 1], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 6, 6, 3, 8, 1], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 17, 11, 6, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.square(alpha))), tf.math.add(tf.math.pow(tf.math.subtract(grad, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3086798191070557, 2.3089914321899414, 2.3091413974761963, 2.3090343475341797, 2.309995174407959, 2.3095767498016357], "accuracy": [0.09509972482919693, 0.09377889335155487, 0.09589222073554993, 0.09377889335155487, 0.09272222965955734, 0.08942015469074249], "val_loss": [2.3092167377471924, 2.3092167377471924, 2.3092167377471924, 2.3092167377471924, 2.3092167377471924, 2.3092167377471924], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]