[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8014285564422607, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2073869705200195, 1.6016125679016113, 1.1549791097640991, 1.018481731414795, 0.8747678995132446, 0.8230611681938171, 0.7817899584770203, 0.7616914510726929, 0.7352034449577332, 0.7067760229110718, 0.6978141069412231, 0.6584223508834839, 0.6601353287696838, 0.645560622215271, 0.6421666145324707, 0.6094985008239746, 0.6076512932777405, 0.6050326824188232, 0.6028155088424683, 0.571358859539032, 0.55287766456604, 0.5646583437919617, 0.5550138354301453, 0.5466939210891724, 0.5300893783569336, 0.5289527177810669, 0.5181308388710022, 0.520361602306366, 0.5128501057624817, 0.5177216529846191, 0.49989819526672363], "accuracy": [0.2801479399204254, 0.499009370803833, 0.6017699241638184, 0.6353189945220947, 0.6902654767036438, 0.7022850513458252, 0.7124554514884949, 0.7136441469192505, 0.7321357727050781, 0.739928662776947, 0.7368907928466797, 0.7556465268135071, 0.7504953145980835, 0.7627789974212646, 0.7577598690986633, 0.7729493975639343, 0.7778365015983582, 0.7717606425285339, 0.7765156626701355, 0.7821952104568481, 0.7940827012062073, 0.7901201844215393, 0.793950617313385, 0.7968564033508301, 0.8076872229576111, 0.7993659973144531, 0.8063663840293884, 0.8079513907432556, 0.8113855719566345, 0.8057059645652771, 0.8146876096725464], "val_loss": [1.9055598974227905, 1.066648244857788, 0.941397488117218, 0.7539923787117004, 0.7104962468147278, 0.673984706401825, 0.6304360628128052, 0.6201793551445007, 0.6206598877906799, 0.5766124129295349, 0.5705982446670532, 0.5693758130073547, 0.5351698994636536, 0.5696272850036621, 0.5090464949607849, 0.5072222948074341, 0.4901350140571594, 0.5335562229156494, 0.482695996761322, 0.4719122648239136, 0.47116920351982117, 0.47688984870910645, 0.48224374651908875, 0.450148344039917, 0.4554694890975952, 0.443118155002594, 0.4550400376319885, 0.4377368986606598, 0.4340888261795044, 0.4422591030597687, 0.4366397261619568], "val_accuracy": [0.5730000138282776, 0.6683333516120911, 0.6499999761581421, 0.7243333458900452, 0.7286666631698608, 0.7396666407585144, 0.7716666460037231, 0.7576666474342346, 0.7553333044052124, 0.7839999794960022, 0.7713333368301392, 0.7736666798591614, 0.7879999876022339, 0.7770000100135803, 0.8069999814033508, 0.8059999942779541, 0.812333345413208, 0.7923333048820496, 0.8116666674613953, 0.8206666707992554, 0.8186666369438171, 0.8196666836738586, 0.812333345413208, 0.8293333053588867, 0.8263333439826965, 0.8386666774749756, 0.8223333358764648, 0.831333339214325, 0.8370000123977661, 0.8316666483879089, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [6, 7, 3, 1, 3, 5, 9, 5], [0, 0, 3, 0, 2], [26, 39, 39, 28], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 9, 5, 5, 4], [2, 2, 1, 4, 1, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [7, 3, 0, 2, 1, 8, 9], [0, 7, 1, 4], [0, 53], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 11, 7, 4, 1, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), tf.math.sqrt(grad))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 0, 3], [26, 39, 91], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [7, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 9, 8, 4, 7, 3], [0, 5, 1, 4, 0, 2], [78, 68, 64], [0, 0, 1], [0, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 15, 9, 6, 3, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, beta), tf.math.pow(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.pow(alpha, tf.math.add(grad, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [6.904635906219482, 2394.409912109375, 139935.25, 2520735.25, 22320366.0, 131738080.0], "accuracy": [0.09576013684272766, 0.10328886657953262, 0.10355303436517715, 0.09932637959718704, 0.09681680053472519, 0.09655263274908066], "val_loss": [60.008968353271484, 14061.6884765625, 484534.5, 6143460.0, 44477316.0, 225191376.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 0, 5], [0, 1, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 6, 7, 6, 3, 2, 6, 0], [1, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1], [0, 7, 8, 3, 8], [0, 1, 6, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 0, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [874413568.0, 313095159808.0, 7201877917696.0, 58827017814016.0, 280152881758208.0, 991121215848448.0], "accuracy": [0.10117553919553757, 0.09338264167308807, 0.10157178342342377, 0.09959053993225098, 0.09615638852119446, 0.09972262382507324], "val_loss": [12426835968.0, 1322066247680.0, 18029872152576.0, 110973490823168.0, 447273364357120.0, 1385529874579456.0], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 2, 3, 8, 3, 5], [1, 0, 1, 0, 1], [26, 52, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 8, 4, 6, 5, 4], [4, 2, 3, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1, 0, 1, 1, 1], [7, 3, 5, 2], [6, 4, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 11, 6, 5, 2, 13, 7, 6, 1, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.sqrt(alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.sqrt(beta)), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.31014084815979, 2.3101985454559326, 2.310110092163086, 2.3098154067993164, 2.310230255126953, 2.3107190132141113], "accuracy": [0.09430722147226334, 0.08981640636920929, 0.09034473448991776, 0.09206181764602661, 0.09206181764602661, 0.09298639744520187], "val_loss": [2.3087878227233887, 2.3087878227233887, 2.3087878227233887, 2.3087878227233887, 2.3087878227233887, 2.3087878227233887], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]