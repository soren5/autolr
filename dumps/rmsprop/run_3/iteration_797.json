[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103874683380127, 1.6052706241607666, 1.1415289640426636, 0.9598802924156189, 0.8854352235794067, 0.8208942413330078, 0.8017231225967407, 0.7687605023384094, 0.7181879878044128, 0.7272425889968872, 0.6901074051856995, 0.6603080630302429, 0.638665497303009, 0.6400943994522095, 0.6403873562812805, 0.6107082366943359, 0.6041060090065002, 0.5939403176307678, 0.5880073308944702, 0.5664381980895996, 0.5725283026695251, 0.5412093997001648, 0.5470941662788391, 0.5430942177772522, 0.5303307175636292, 0.5264658331871033, 0.5190399289131165, 0.5087639093399048, 0.5055052042007446, 0.4957256317138672, 0.4983055889606476, 0.4937029182910919, 0.4907761812210083, 0.4808330535888672, 0.46576324105262756, 0.47136056423187256, 0.4676874279975891, 0.460705429315567, 0.4628030061721802, 0.4533974528312683, 0.45442748069763184, 0.44756826758384705], "accuracy": [0.26059964299201965, 0.5069343447685242, 0.6036190986633301, 0.6539427042007446, 0.674679696559906, 0.7063795924186707, 0.7058512568473816, 0.7140403985977173, 0.7360982894897461, 0.7339849472045898, 0.7397965788841248, 0.7556465268135071, 0.7651565074920654, 0.7622507214546204, 0.7593448758125305, 0.7733456492424011, 0.7720248103141785, 0.7750627398490906, 0.7754589915275574, 0.7881389260292053, 0.7898560166358948, 0.8000264167785645, 0.7936864495277405, 0.7952714562416077, 0.807158887386322, 0.8043851256370544, 0.8045172095298767, 0.8105930685997009, 0.8120459914207458, 0.816008448600769, 0.8152159452438354, 0.8153480291366577, 0.8175934553146362, 0.8208954930305481, 0.829216718673706, 0.8273676037788391, 0.82683926820755, 0.8309338092803955, 0.8256505131721497, 0.8333113193511963, 0.8317263126373291, 0.83119797706604], "val_loss": [1.9201704263687134, 1.0884921550750732, 0.900061845779419, 0.7566448450088501, 0.7434498071670532, 0.7080190181732178, 0.6726377010345459, 0.646880030632019, 0.619493842124939, 0.621138334274292, 0.629115641117096, 0.5796075463294983, 0.57785964012146, 0.5473142266273499, 0.5787090063095093, 0.5364763736724854, 0.5585042834281921, 0.5429538488388062, 0.5596132278442383, 0.5329238176345825, 0.514651358127594, 0.5171529054641724, 0.5259997844696045, 0.49538445472717285, 0.4877895414829254, 0.5099957585334778, 0.4846779704093933, 0.49656546115875244, 0.4668348431587219, 0.4815174639225006, 0.46949368715286255, 0.45799875259399414, 0.4652484655380249, 0.4577101767063141, 0.45542392134666443, 0.45312967896461487, 0.44332873821258545, 0.44353368878364563, 0.445588082075119, 0.4442980885505676, 0.456556111574173, 0.444792777299881], "val_accuracy": [0.5433333516120911, 0.6516666412353516, 0.6736666560173035, 0.7213333249092102, 0.7256666421890259, 0.722000002861023, 0.7433333396911621, 0.753000020980835, 0.7676666378974915, 0.7570000290870667, 0.7456666827201843, 0.7900000214576721, 0.7826666831970215, 0.7870000004768372, 0.7770000100135803, 0.79666668176651, 0.7836666703224182, 0.7923333048820496, 0.7766666412353516, 0.7983333468437195, 0.8036666512489319, 0.8109999895095825, 0.796999990940094, 0.8196666836738586, 0.8186666369438171, 0.7979999780654907, 0.8186666369438171, 0.8086666464805603, 0.8306666612625122, 0.8199999928474426, 0.8270000219345093, 0.8353333473205566, 0.8299999833106995, 0.8353333473205566, 0.8363333344459534, 0.8333333134651184, 0.8429999947547913, 0.8423333168029785, 0.8389999866485596, 0.8399999737739563, 0.8303333520889282, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 2, 7, 0, 5, 5, 5], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.7514285445213318, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2927258014678955, 2.174713611602783, 1.6840778589248657, 1.380364179611206, 1.0251199007034302, 0.9372749328613281, 0.8993192315101624, 0.8411898612976074, 0.822748064994812, 0.7873345017433167, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12653546035289764, 0.33324527740478516, 0.4519878625869751, 0.5630695819854736, 0.6357152462005615, 0.6561880707740784, 0.6859067678451538, 0.6866992712020874, 0.6865671873092651, 0.7037379741668701, 0.26218464970588684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.241218090057373, 1.9618605375289917, 1.0088856220245361, 0.8744809627532959, 0.8341962695121765, 0.7011473178863525, 0.6770623326301575, 0.677652895450592, 0.6309329271316528, 0.6104773283004761, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.437666654586792, 0.4833333194255829, 0.6600000262260437, 0.6909999847412109, 0.7106666564941406, 0.7423333525657654, 0.7473333477973938, 0.7540000081062317, 0.7570000290870667, 0.7593333125114441, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 0, 5], [2, 2, 1, 0, 2], [26, 83, 39], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [9, 9, 4, 7, 0, 5, 7, 4], [1, 2, 3, 5, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [7, 3, 0, 2, 2, 6, 6, 5, 0, 1, 1, 8], [3, 1, 1, 4, 4, 1, 1, 1, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 1, 0, 1, 21, 12, 9, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), alpha), tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(sigma), tf.math.add(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.negative(tf.math.subtract(tf.math.subtract(grad, grad), alpha))))), alpha), tf.math.sqrt(alpha))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3038909435272217, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 7, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 7, 0, 4], [74, 9], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.add(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30361.1484375, 4461969.5, 76514112.0, 539121536.0, 2387664640.0, 7851516416.0], "accuracy": [0.09985470771789551, 0.1002509593963623, 0.1014397069811821, 0.09734513610601425, 0.09813763201236725, 0.10157178342342377], "val_loss": [306190.71875, 16417124.0, 176045904.0, 959443200.0, 3593279744.0, 10598275072.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 5, 7, 0, 5, 5, 1], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2], [2, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 10, 5, 5, 2, 4, 3, 1, 1, 5, 2, 3, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.multiply(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3079798221588135, 2.3037736415863037, 2.3017466068267822, 2.3016676902770996, 2.301652193069458, 2.302044153213501], "accuracy": [0.0936468094587326, 0.09893012791872025, 0.09272222965955734, 0.08598599582910538, 0.08757099509239197, 0.09100515395402908], "val_loss": [2.3043603897094727, 2.3021719455718994, 2.3017473220825195, 2.302037000656128, 2.3024494647979736, 2.3026649951934814], "val_accuracy": [0.08933333307504654, 0.08766666799783707, 0.05133333429694176, 0.061000000685453415, 0.05233333259820938, 0.05066666752099991]}}]