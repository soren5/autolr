[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8100000023841858, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110795974731445, 1.5872316360473633, 1.128291368484497, 0.9563603401184082, 0.8946384787559509, 0.8170045018196106, 0.7887037992477417, 0.7293815016746521, 0.7133759260177612, 0.6933399438858032, 0.6814595460891724, 0.6585854887962341, 0.6340956687927246, 0.6376382112503052, 0.6278409361839294, 0.5970926880836487, 0.6033780574798584, 0.5793077945709229, 0.5719372630119324, 0.5615779161453247, 0.5537460446357727, 0.5406164526939392, 0.5256359577178955, 0.5216752290725708, 0.537787914276123, 0.5061147212982178, 0.49430376291275024, 0.5061609745025635, 0.49105334281921387, 0.4896681606769562, 0.4780093729496002, 0.4803784191608429], "accuracy": [0.266939640045166, 0.5082551836967468, 0.6050719618797302, 0.6568484902381897, 0.6730946898460388, 0.7036058902740479, 0.7080966830253601, 0.7294940948486328, 0.7292299270629883, 0.7449478507041931, 0.7469290494918823, 0.7524765729904175, 0.767401933670044, 0.7650244235992432, 0.7703077793121338, 0.778761088848114, 0.7796856164932251, 0.7869502305984497, 0.7909126877784729, 0.7942147850990295, 0.7989697456359863, 0.804649293422699, 0.8082155585289001, 0.809140145778656, 0.8017435073852539, 0.8125742673873901, 0.8156121969223022, 0.8152159452438354, 0.8175934553146362, 0.8238013386726379, 0.8269713521003723, 0.8255184292793274], "val_loss": [1.9194624423980713, 1.0777274370193481, 0.8540778160095215, 0.7773733735084534, 0.8055018186569214, 0.6824038624763489, 0.6877261400222778, 0.6379417181015015, 0.6558338403701782, 0.6270152926445007, 0.5896190404891968, 0.5895289778709412, 0.550707221031189, 0.6073648929595947, 0.5460652709007263, 0.5449420213699341, 0.5506308674812317, 0.5393344163894653, 0.5373167395591736, 0.5124114751815796, 0.5103740096092224, 0.5162067413330078, 0.48680418729782104, 0.5126029253005981, 0.49674463272094727, 0.4877285063266754, 0.4633241295814514, 0.4845861494541168, 0.47677212953567505, 0.47337841987609863, 0.4601914882659912, 0.4700292944908142], "val_accuracy": [0.5066666603088379, 0.6826666593551636, 0.7006666660308838, 0.7229999899864197, 0.6926666498184204, 0.7403333187103271, 0.7306666374206543, 0.7566666603088379, 0.7586666941642761, 0.7706666588783264, 0.7793333530426025, 0.7789999842643738, 0.793666660785675, 0.7643333077430725, 0.7866666913032532, 0.7870000004768372, 0.7976666688919067, 0.7929999828338623, 0.7816666960716248, 0.8069999814033508, 0.8166666626930237, 0.7990000247955322, 0.8199999928474426, 0.8113333582878113, 0.8036666512489319, 0.8173333406448364, 0.82833331823349, 0.8153333067893982, 0.8233333230018616, 0.8180000185966492, 0.8259999752044678, 0.8223333358764648]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 1, 3, 5, 2, 9, 4, 8, 6, 3, 6, 5, 7, 6, 7, 5, 3, 9, 2, 2, 8, 8], [0, 0, 1, 0, 2, 3, 3, 2, 0, 3, 2, 2, 0, 1], [18, 6, 39, 70, 61, 64, 24], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 0, 6, 8, 8, 0, 4], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1], [6, 7, 8], [0, 6, 5], [6], [1], [0], [6], [0]], "fitness": -0.40371429920196533, "mapping_values": [1, 38, 24, 14, 7, 12, 8, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(grad, tf.math.square(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(tf.math.sqrt(grad), grad), tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.421239137649536, 2.2294225692749023, 2.248002529144287, 2.3283238410949707, 2.511763095855713, 2.3053016662597656, 2.303128242492676], "accuracy": [0.17936864495277405, 0.17553824186325073, 0.1328754425048828, 0.16800950467586517, 0.11240258812904358, 0.09813763201236725, 0.09879804402589798], "val_loss": [2.2990562915802, 1.606195330619812, 2.2947235107421875, 3.435624599456787, 2.305440664291382, 2.3031768798828125, 2.3018229007720947], "val_accuracy": [0.09666666388511658, 0.40299999713897705, 0.10533333569765091, 0.2173333317041397, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 3, 9, 7], [0, 0, 1, 0, 2], [0, 27, 39, 77], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 0, 3, 8, 4], [1, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [6, 1], [60], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.pow(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303731918334961, 2.303102970123291, 2.3051328659057617, 2.318617105484009, 2.3716325759887695, 2.7212257385253906, 2.949028253555298], "accuracy": [0.09589222073554993, 0.09906221181154251, 0.09972262382507324, 0.09259014576673508, 0.09906221181154251, 0.09919429570436478, 0.10394927859306335], "val_loss": [2.302639961242676, 2.302626609802246, 2.315185546875, 2.312182664871216, 2.5586812496185303, 2.8091797828674316, 4.486795902252197], "val_accuracy": [0.09966666996479034, 0.10266666859388351, 0.10000000149011612, 0.1003333330154419, 0.10133333504199982, 0.10266666859388351, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 6, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 84, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 0, 9, 3, 0, 2], [2, 0, 2, 1, 0], [16, 1], [0, 0, 1, 1], [0, 6], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033089637756348, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 3, 1, 3, 5], [0, 0, 1, 0, 1], [41, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 6, 3, 8, 2, 6, 0, 4, 7, 6, 4, 7, 4, 3, 7, 1, 9, 0, 9, 9, 3, 4, 0, 5, 6, 7, 7, 9, 3, 2, 7, 0], [2, 0, 3, 1, 0, 3, 1, 5, 1, 3, 3, 0, 1, 5, 1, 0, 0, 5, 2], [16, 1, 16, 35, 22, 36, 48, 4, 59], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 53, 34, 19, 9, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(alpha, tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.multiply(alpha, tf.math.add(tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.square(grad)), grad), tf.math.divide_no_nan(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.math.add(grad, alpha), tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]