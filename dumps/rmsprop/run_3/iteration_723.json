[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.205338716506958, 1.579601526260376, 1.1148290634155273, 0.9559218883514404, 0.8757863640785217, 0.8257889747619629, 0.7759053707122803, 0.7366434931755066, 0.7230603694915771, 0.6844495534896851, 0.670354962348938, 0.6800024509429932, 0.6307516694068909, 0.6237122416496277, 0.6042373180389404, 0.6166173815727234, 0.5946760177612305, 0.5847365856170654, 0.560611367225647, 0.570787250995636, 0.5636099576950073, 0.5438331961631775, 0.5273171067237854, 0.5320233702659607, 0.5184881687164307, 0.521097719669342, 0.512394368648529, 0.5081337690353394, 0.48617690801620483, 0.5026143789291382, 0.4919946491718292, 0.48005276918411255, 0.48812806606292725, 0.47765588760375977, 0.4695563018321991, 0.46396228671073914, 0.4738611876964569, 0.4591815173625946, 0.4519830048084259, 0.4497491121292114, 0.4437490999698639, 0.45007413625717163, 0.43384823203086853, 0.4248468279838562, 0.4309544861316681, 0.422951340675354, 0.42795953154563904, 0.4259845018386841, 0.4114818871021271, 0.4055619537830353, 0.41548213362693787, 0.40122148394584656, 0.4048294425010681, 0.3987068235874176, 0.3887932300567627], "accuracy": [0.27327960729599, 0.5111610293388367, 0.613789439201355, 0.6601505875587463, 0.6789063811302185, 0.6985867023468018, 0.7170783281326294, 0.726192057132721, 0.7323999404907227, 0.7454761862754822, 0.7547219395637512, 0.746268630027771, 0.7664773464202881, 0.7738739848136902, 0.7759873270988464, 0.7703077793121338, 0.783119797706604, 0.7877426743507385, 0.7955356240272522, 0.7932901978492737, 0.7895918488502502, 0.8021397590637207, 0.8067626357078552, 0.8058380484580994, 0.8082155585289001, 0.8059701323509216, 0.8145555257797241, 0.8181217908859253, 0.8222163319587708, 0.8098005652427673, 0.8161405324935913, 0.8241975903511047, 0.8206313848495483, 0.8210275769233704, 0.829216718673706, 0.8272355198860168, 0.8236692547798157, 0.830669641494751, 0.8327829837799072, 0.8387266993522644, 0.8378021121025085, 0.8330471515655518, 0.8437458872795105, 0.8467837572097778, 0.8396512866020203, 0.8450667262077332, 0.8437458872795105, 0.841500461101532, 0.8494254350662231, 0.8519350290298462, 0.8471800088882446, 0.8524633646011353, 0.8486329317092896, 0.8540483713150024, 0.856689989566803], "val_loss": [1.9032686948776245, 1.0752195119857788, 0.9295971393585205, 0.7839763164520264, 0.7126207947731018, 0.688944399356842, 0.6512462496757507, 0.660618245601654, 0.6347213387489319, 0.5960241556167603, 0.6160445809364319, 0.5828934907913208, 0.5677844285964966, 0.5801318287849426, 0.5568963289260864, 0.5312622785568237, 0.5640447735786438, 0.5196074843406677, 0.5429534316062927, 0.5307881832122803, 0.5080587863922119, 0.5049112439155579, 0.495085209608078, 0.49793291091918945, 0.4778960645198822, 0.49704593420028687, 0.4730883836746216, 0.4621393084526062, 0.4572881758213043, 0.47088101506233215, 0.452249675989151, 0.4650716185569763, 0.45009198784828186, 0.44933947920799255, 0.44859373569488525, 0.4434818625450134, 0.4456014335155487, 0.43326982855796814, 0.4381772577762604, 0.43714290857315063, 0.43546175956726074, 0.4187704622745514, 0.4245581030845642, 0.4312566816806793, 0.4178081154823303, 0.4327540695667267, 0.4214538633823395, 0.403433233499527, 0.409895658493042, 0.40910226106643677, 0.41773852705955505, 0.4194425344467163, 0.3979642689228058, 0.39644116163253784, 0.3978562355041504], "val_accuracy": [0.5876666903495789, 0.6493333578109741, 0.6516666412353516, 0.7139999866485596, 0.7316666841506958, 0.7526666522026062, 0.7573333382606506, 0.7506666779518127, 0.7486666440963745, 0.7699999809265137, 0.7756666541099548, 0.7756666541099548, 0.7799999713897705, 0.7713333368301392, 0.7866666913032532, 0.7950000166893005, 0.7720000147819519, 0.7990000247955322, 0.7933333516120911, 0.7900000214576721, 0.8059999942779541, 0.8016666769981384, 0.8056666851043701, 0.8016666769981384, 0.8166666626930237, 0.8063333630561829, 0.8180000185966492, 0.824999988079071, 0.8236666917800903, 0.8196666836738586, 0.8240000009536743, 0.8183333277702332, 0.8289999961853027, 0.8276666402816772, 0.824999988079071, 0.828000009059906, 0.828000009059906, 0.8349999785423279, 0.8343333601951599, 0.8309999704360962, 0.8336666822433472, 0.8403333425521851, 0.8433333039283752, 0.8296666741371155, 0.8370000123977661, 0.8353333473205566, 0.8333333134651184, 0.847000002861023, 0.8433333039283752, 0.8506666421890259, 0.8383333086967468, 0.8389999866485596, 0.846666693687439, 0.8460000157356262, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 7, 5], [0, 0, 0, 0, 2], [26, 39, 39, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 8, 4, 1, 0, 2, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3, 4], [0, 1, 7, 7, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 4, 2, 2, 0, 10, 5, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.278883457183838, 54944096256.0, 3.035810947418213, 3.1544506549835205, 2.7591187953948975, 3.007492780685425], "accuracy": [0.09840179979801178, 0.1006472036242485, 0.09893012791872025, 0.09945846349000931, 0.09681680053472519, 0.09800554811954498], "val_loss": [2.471040964126587, 3.0209898948669434, 3.162355422973633, 2.8005623817443848, 3.0729496479034424, 3.2270383834838867], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09966666996479034, 0.1003333330154419, 0.09833333641290665, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2, 3], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 4, 1, 0, 5, 1, 4, 7, 5, 8, 5, 0], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 20, 13, 7, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.square(tf.math.subtract(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(grad))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2, 4], [2, 1, 1, 1, 0, 0], [65, 1, 53], [0, 0, 1, 1, 0, 1], [9, 3, 0, 2], [0, 6, 0], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034610748291016, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 3, 2, 3, 5], [0, 0, 3, 0, 2], [26, 72, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [7, 3, 0, 2, 7, 7, 8, 2, 3, 5, 4, 2, 8, 0, 7, 7], [0, 1, 0, 4, 5, 3, 1, 6, 5, 7, 7, 7], [0, 97], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 11, 6, 5, 2, 28, 16, 12, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), grad)), tf.math.add(sigma, tf.math.multiply(tf.math.square(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.negative(alpha)), grad), grad)), tf.math.add(tf.math.add(grad, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3169431686401367, 2.3826370239257812, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09391097724437714, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.333430767059326, 2.597839832305908, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]