[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.206587553024292, 1.6053237915039062, 1.1480625867843628, 0.9956563711166382, 0.8858560919761658, 0.8457209467887878, 0.7763339281082153, 0.7630673050880432, 0.7464996576309204, 0.706702470779419, 0.6773980855941772, 0.6660116910934448, 0.6557122468948364, 0.6610219478607178, 0.6202203631401062, 0.6106568574905396, 0.6303256154060364, 0.6029105186462402, 0.5671757459640503, 0.5806854963302612, 0.5590515732765198, 0.548120379447937, 0.5497742295265198, 0.556805431842804, 0.5325331687927246, 0.5225327014923096, 0.5165638327598572, 0.5192151069641113, 0.5076993703842163, 0.503548264503479, 0.48893511295318604, 0.48053428530693054, 0.4849787652492523, 0.47886329889297485, 0.4833703637123108, 0.4649311304092407], "accuracy": [0.26760005950927734, 0.49887728691101074, 0.5855237245559692, 0.6429798007011414, 0.6789063811302185, 0.693831741809845, 0.7176066637039185, 0.7205125093460083, 0.7279091477394104, 0.7456082701683044, 0.7475894689559937, 0.7536653280258179, 0.7569673657417297, 0.755118191242218, 0.7746664881706238, 0.774798572063446, 0.7688548564910889, 0.7792893648147583, 0.7910447716712952, 0.791441023349762, 0.7977809906005859, 0.8017435073852539, 0.7981772422790527, 0.7960638999938965, 0.8047813773155212, 0.8103289008140564, 0.811649739742279, 0.8144234418869019, 0.8120459914207458, 0.8142913579940796, 0.8190463781356812, 0.824329674243927, 0.8228767514228821, 0.8247259259223938, 0.8204993009567261, 0.8301413059234619], "val_loss": [1.9112963676452637, 1.160806655883789, 0.9006261229515076, 0.7864663004875183, 0.7555125951766968, 0.7118189334869385, 0.6784171462059021, 0.6959471702575684, 0.6486603021621704, 0.599065899848938, 0.6262483596801758, 0.5724988579750061, 0.6457914710044861, 0.5571677088737488, 0.5452854037284851, 0.5742138624191284, 0.538719117641449, 0.5254245400428772, 0.5318028330802917, 0.5156065821647644, 0.515659511089325, 0.5038240551948547, 0.5068798065185547, 0.4951624870300293, 0.4951425790786743, 0.48817208409309387, 0.4728769063949585, 0.48600488901138306, 0.48944091796875, 0.485025554895401, 0.4616149365901947, 0.4592542052268982, 0.4536576271057129, 0.4551156759262085, 0.45307591557502747, 0.45631399750709534], "val_accuracy": [0.47866666316986084, 0.593666672706604, 0.656333327293396, 0.7113333344459534, 0.699999988079071, 0.7076666951179504, 0.737666666507721, 0.7049999833106995, 0.7333333492279053, 0.7666666507720947, 0.7509999871253967, 0.7773333191871643, 0.7296666502952576, 0.7876666784286499, 0.781000018119812, 0.7639999985694885, 0.7846666574478149, 0.800000011920929, 0.7856666445732117, 0.7946666479110718, 0.8023333549499512, 0.8136666417121887, 0.8009999990463257, 0.8069999814033508, 0.8080000281333923, 0.8059999942779541, 0.8206666707992554, 0.809333324432373, 0.8059999942779541, 0.8133333325386047, 0.8289999961853027, 0.8286666870117188, 0.8273333311080933, 0.8233333230018616, 0.8263333439826965, 0.8266666531562805]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 3, 1, 0, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 4, 4, 0, 3, 5, 4], [2, 2, 0, 4, 3, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 0, 1], [0, 0], [1], [0]], "fitness": -0.13085713982582092, "mapping_values": [1, 10, 5, 5, 3, 10, 5, 5, 1, 6, 3, 3, 1, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [4.3884758108281815e+28, 1.9503125744458614e+30, 1.493626036745145e+31, 6.134661188852142e+31, 1.9758256119611683e+32, 5.930269357812749e+32, 1.7594215071218222e+33, 5.1263047509206026e+33, 1.320486747662957e+34, 3.1922618667887623e+34], "accuracy": [0.11081759631633759, 0.1088363528251648, 0.11108175665140152, 0.11068551242351532, 0.10791176557540894, 0.10276053100824356, 0.11081759631633759, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.7864276208507513e+29, 4.458237649717147e+30, 2.2587376585548593e+31, 7.631809430972734e+31, 2.370818235146053e+32, 9.269215312403704e+32, 3.206646915736264e+33, 8.815614274968913e+33, 2.175071542896759e+34, 5.151792450801441e+34], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.11599999666213989, 0.12066666781902313, 0.12433333694934845, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [94, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 1, 4, 0, 3, 1], [16, 1], [1, 1, 0, 1, 0, 0, 1, 1], [1, 3, 0, 2], [0, 4, 1, 4], [0], [0, 0, 0, 0, 1, 1], [0, 7, 9, 7], [1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 1, 1, 0, 1, 1, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), alpha)), tf.math.square(tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.3035054206848145, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 74, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2, 8], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 5, 4, 0, 5, 5, 4, 0], [2, 2, 0, 4, 0, 3, 1], [89, 1], [0, 0, 0, 1, 0, 1, 1, 0], [9, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 14, 9, 5, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(beta))), tf.math.pow(tf.math.negative(beta), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036131858825684, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]