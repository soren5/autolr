[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2071945667266846, 1.5826530456542969, 1.1420754194259644, 0.9602375626564026, 0.9024509191513062, 0.7964468002319336, 0.7708581686019897, 0.7309776544570923, 0.7190178632736206, 0.7079097628593445, 0.6645691990852356, 0.6718683838844299, 0.6264382600784302, 0.6278120875358582, 0.6372507214546204, 0.5972231030464172, 0.6008566617965698, 0.5669425129890442, 0.5704490542411804, 0.5715922117233276, 0.5426824688911438, 0.5361405611038208, 0.5307276248931885, 0.5281819701194763, 0.5176852941513062, 0.515248715877533, 0.50690758228302, 0.4947645664215088, 0.4920397400856018, 0.481381893157959, 0.4822407364845276, 0.4789578318595886, 0.47417116165161133, 0.4669131934642792, 0.4531499147415161, 0.454037606716156], "accuracy": [0.2779025137424469, 0.5168405771255493, 0.5976753234863281, 0.6583014130592346, 0.6773213744163513, 0.7091533541679382, 0.7211728692054749, 0.7305507659912109, 0.7296261787414551, 0.7357020378112793, 0.7524765729904175, 0.7490423917770386, 0.7709681391716003, 0.7720248103141785, 0.7646281719207764, 0.7732135653495789, 0.7766477465629578, 0.789459764957428, 0.789988100528717, 0.7882710099220276, 0.7994980812072754, 0.8005547523498535, 0.806630551815033, 0.8043851256370544, 0.8083476424217224, 0.8140271902084351, 0.8150838613510132, 0.8202351331710815, 0.8187822103500366, 0.8264430165290833, 0.8216879963874817, 0.8231409192085266, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.8333113193511963], "val_loss": [1.9148222208023071, 1.0891375541687012, 0.9056211113929749, 0.8016678094863892, 0.760240912437439, 0.7038585543632507, 0.6770634055137634, 0.6463528871536255, 0.6302468180656433, 0.6203481554985046, 0.6302914023399353, 0.590358316898346, 0.618607759475708, 0.5765666365623474, 0.5648512244224548, 0.5980960130691528, 0.570862352848053, 0.5760148167610168, 0.5375343561172485, 0.559295654296875, 0.5193827152252197, 0.5377711653709412, 0.5133692026138306, 0.5084794163703918, 0.5028876662254333, 0.5047078728675842, 0.5013857483863831, 0.4947488605976105, 0.4889155328273773, 0.4944532513618469, 0.47344210743904114, 0.4975704252719879, 0.47418901324272156, 0.4700135588645935, 0.47032633423805237, 0.4672855734825134], "val_accuracy": [0.550000011920929, 0.6420000195503235, 0.6753333210945129, 0.6966666579246521, 0.7206666469573975, 0.7390000224113464, 0.7423333525657654, 0.7590000033378601, 0.7583333253860474, 0.7606666684150696, 0.7576666474342346, 0.7786666750907898, 0.768666684627533, 0.7796666622161865, 0.7956666946411133, 0.7693333625793457, 0.7820000052452087, 0.7749999761581421, 0.8009999990463257, 0.7850000262260437, 0.8076666593551636, 0.7979999780654907, 0.812333345413208, 0.8190000057220459, 0.8153333067893982, 0.8230000138282776, 0.812666654586792, 0.8236666917800903, 0.8263333439826965, 0.8223333358764648, 0.8383333086967468, 0.8216666579246521, 0.8303333520889282, 0.8303333520889282, 0.8253333568572998, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8105714321136475, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214200258255005, 1.6132111549377441, 1.195473074913025, 1.0018421411514282, 0.9396111369132996, 0.8532897233963013, 0.7926469445228577, 0.7792636156082153, 0.7605688571929932, 0.7289676666259766, 0.7224377393722534, 0.6756600141525269, 0.6814699172973633, 0.649431049823761, 0.6549400687217712, 0.6320198774337769, 0.6378597021102905, 0.6012832522392273, 0.6039099097251892, 0.578018069267273, 0.5986352562904358, 0.5881596207618713, 0.569132387638092, 0.563957929611206, 0.553722083568573, 0.5365737676620483, 0.5444466471672058, 0.5369176864624023, 0.5234917998313904, 0.5132866501808167, 0.5077896118164062, 0.5011925101280212, 0.5092748999595642, 0.49095746874809265, 0.4925166368484497, 0.4850170910358429, 0.4859156608581543, 0.46506190299987793, 0.46832358837127686, 0.47545525431632996, 0.45472678542137146, 0.4522124230861664], "accuracy": [0.2584863305091858, 0.49848103523254395, 0.5827499628067017, 0.64231938123703, 0.6520935297012329, 0.6884163022041321, 0.7049266695976257, 0.7128516435623169, 0.717870831489563, 0.733060359954834, 0.7284374833106995, 0.7442874312400818, 0.7429665923118591, 0.754589855670929, 0.7539294958114624, 0.7668735980987549, 0.7617223858833313, 0.7794214487075806, 0.7703077793121338, 0.7841764688491821, 0.780610203742981, 0.77677983045578, 0.7878747582435608, 0.7881389260292053, 0.793950617313385, 0.7997622489929199, 0.798309326171875, 0.7976489067077637, 0.8062343001365662, 0.8095363974571228, 0.8079513907432556, 0.8171972036361694, 0.8107251524925232, 0.8177255392074585, 0.8204993009567261, 0.8215559124946594, 0.8195747137069702, 0.8297450542449951, 0.828292191028595, 0.821820080280304, 0.830669641494751, 0.8319904804229736], "val_loss": [1.9375578165054321, 1.085737943649292, 0.9000869393348694, 0.8483279347419739, 0.718473494052887, 0.6509793996810913, 0.6322733163833618, 0.6020030379295349, 0.5859230756759644, 0.5869753360748291, 0.5937199592590332, 0.5621195435523987, 0.5504713654518127, 0.540788471698761, 0.509608805179596, 0.5703545212745667, 0.49347978830337524, 0.48549264669418335, 0.47595250606536865, 0.470957487821579, 0.4800998270511627, 0.46842625737190247, 0.47790586948394775, 0.44923603534698486, 0.4547387361526489, 0.4436483085155487, 0.44913843274116516, 0.42627012729644775, 0.4347366392612457, 0.43937045335769653, 0.43779295682907104, 0.4349047541618347, 0.4154835343360901, 0.4142412841320038, 0.43583154678344727, 0.40644609928131104, 0.40241894125938416, 0.4026781916618347, 0.39476248621940613, 0.3959813714027405, 0.4018912613391876, 0.40755656361579895], "val_accuracy": [0.4723333418369293, 0.6493333578109741, 0.6633333563804626, 0.6790000200271606, 0.734000027179718, 0.7559999823570251, 0.7689999938011169, 0.7703333497047424, 0.7786666750907898, 0.7836666703224182, 0.7563333511352539, 0.765333354473114, 0.7870000004768372, 0.7946666479110718, 0.8069999814033508, 0.7590000033378601, 0.8146666884422302, 0.8106666803359985, 0.812333345413208, 0.8240000009536743, 0.8113333582878113, 0.8263333439826965, 0.8163333535194397, 0.831333339214325, 0.8286666870117188, 0.8266666531562805, 0.8360000252723694, 0.8476666808128357, 0.8486666679382324, 0.8323333263397217, 0.8356666564941406, 0.8263333439826965, 0.8556666374206543, 0.8503333330154419, 0.8343333601951599, 0.8486666679382324, 0.856333315372467, 0.843666672706604, 0.8526666760444641, 0.8519999980926514, 0.8510000109672546, 0.8473333120346069]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 6, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 56, 39], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 0, 6, 0, 8, 2], [2, 0, 3, 1, 3], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [87], [1], [0], [1], [0]], "fitness": -0.09514285624027252, "mapping_values": [1, 6, 3, 3, 1, 3, 2, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310596227645874, 2.3099606037139893, 2.309783697128296, 2.309602975845337, 2.309159755706787, 2.308204412460327], "accuracy": [0.08519349992275238, 0.09615638852119446, 0.09008057415485382, 0.0940430611371994, 0.09338264167308807, 0.09853387624025345], "val_loss": [2.3090081214904785, 2.3090081214904785, 2.3090081214904785, 2.3090081214904785, 2.3090081214904785, 2.3090081214904785], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [9, 2, 9, 1, 3, 5], [0, 1, 1, 1, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 2, 3], [2, 0, 3, 1, 2], [16, 1], [0, 0, 0, 1], [0, 7, 9], [0, 6], [0, 83], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108389377593994, 2.308182954788208, 2.309208393096924, 2.3097596168518066, 2.308563470840454, 2.309516668319702], "accuracy": [0.09338264167308807, 0.09628847241401672, 0.0944393053650856, 0.08915598690509796, 0.09219389408826828, 0.08915598690509796], "val_loss": [2.308903694152832, 2.308903694152832, 2.308903694152832, 2.308903694152832, 2.308903694152832, 2.308903694152832], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 4, 3, 1, 3, 5], [0, 1, 1, 0, 0], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 0, 2], [2, 0, 4, 0, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 7, 2, 1, 0, 8, 4, 4, 3, 5, 8, 4, 4, 0, 8, 7], [0, 6, 3, 6, 7, 7, 2, 2, 4, 7], [22], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 26, 16, 10, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, sigma)), tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.square(grad), tf.math.sqrt(tf.math.pow(grad, tf.math.pow(grad, tf.math.negative(beta))))), beta), tf.math.sqrt(tf.math.add(grad, grad))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103253841400146, 2.3097498416900635, 2.3102784156799316, 2.310192584991455, 2.310297727584839, 2.3099961280822754], "accuracy": [0.09219389408826828, 0.08928807079792023, 0.09259014576673508, 0.09457138925790787, 0.09391097724437714, 0.09113723784685135], "val_loss": [2.309630870819092, 2.309630870819092, 2.309630870819092, 2.309630870819092, 2.309630870819092, 2.309630870819092], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 3, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 1], [6, 7], [0, 6, 1], [67], [1], [0], [2], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3107333183288574, 2.3097984790802, 2.3114559650421143, 2.3101131916046143, 2.310121774673462, 2.3093760013580322], "accuracy": [0.09285431355237961, 0.09694888442754745, 0.09153348207473755, 0.09377889335155487, 0.09325055778026581, 0.09153348207473755], "val_loss": [2.3093042373657227, 2.3093042373657227, 2.3093042373657227, 2.3093042373657227, 2.3093042373657227, 2.3093042373657227], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]