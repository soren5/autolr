[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8094285726547241, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212171792984009, 1.601457118988037, 1.158746361732483, 0.9740407466888428, 0.9010443687438965, 0.8296706080436707, 0.7789298892021179, 0.7607648968696594, 0.7523374557495117, 0.7268738746643066, 0.6911104917526245, 0.6572015285491943, 0.6665488481521606, 0.6592519283294678, 0.6334752440452576, 0.6183319687843323, 0.5927707552909851, 0.5889638662338257, 0.5891047120094299, 0.5712262392044067, 0.5859195590019226, 0.5594785809516907, 0.5441256165504456, 0.5536870360374451, 0.545393705368042, 0.5341492891311646, 0.5224363207817078, 0.5153941512107849, 0.5073754191398621, 0.49873122572898865, 0.5055275559425354, 0.4909195899963379, 0.486335813999176, 0.48678067326545715, 0.47582411766052246, 0.46049964427948, 0.470476895570755, 0.46506983041763306], "accuracy": [0.2627129852771759, 0.5061418414115906, 0.5955620408058167, 0.6563201546669006, 0.6712455153465271, 0.6976621150970459, 0.7136441469192505, 0.7177387475967407, 0.7166820764541626, 0.7265883088111877, 0.7429665923118591, 0.7621186375617981, 0.7493065595626831, 0.7560427784919739, 0.7663452625274658, 0.7709681391716003, 0.7825914621353149, 0.7858935594558716, 0.7798177003860474, 0.7825914621353149, 0.7798177003860474, 0.7928939461708069, 0.7961959838867188, 0.7902522683143616, 0.8021397590637207, 0.8009510040283203, 0.8094043135643005, 0.8079513907432556, 0.8099326491355896, 0.8149517774581909, 0.8144234418869019, 0.819442629814148, 0.8164047002792358, 0.819442629814148, 0.8252542614936829, 0.8296129703521729, 0.8277638554573059, 0.82683926820755], "val_loss": [1.9233936071395874, 1.0765504837036133, 0.8388497829437256, 0.7619063854217529, 0.7015239000320435, 0.6713415384292603, 0.668720543384552, 0.66449373960495, 0.6595914959907532, 0.6028852462768555, 0.5835093855857849, 0.5846933722496033, 0.6261922717094421, 0.5394917130470276, 0.5611973404884338, 0.528443455696106, 0.5198241472244263, 0.5357635021209717, 0.5200580358505249, 0.5266581177711487, 0.5130450129508972, 0.5034675598144531, 0.49909457564353943, 0.47523027658462524, 0.4861260652542114, 0.4775477647781372, 0.47559231519699097, 0.4648345410823822, 0.4559064209461212, 0.4523484706878662, 0.4546991288661957, 0.44715583324432373, 0.4359208643436432, 0.45652467012405396, 0.4269367754459381, 0.4246617555618286, 0.43189123272895813, 0.4318592846393585], "val_accuracy": [0.581333339214325, 0.6676666736602783, 0.7193333506584167, 0.715666651725769, 0.750333309173584, 0.7580000162124634, 0.7419999837875366, 0.7403333187103271, 0.7540000081062317, 0.7730000019073486, 0.7906666398048401, 0.7816666960716248, 0.7639999985694885, 0.7889999747276306, 0.7853333353996277, 0.7996666431427002, 0.8113333582878113, 0.7836666703224182, 0.8116666674613953, 0.7943333387374878, 0.8096666932106018, 0.809333324432373, 0.8066666722297668, 0.8223333358764648, 0.8196666836738586, 0.8206666707992554, 0.8223333358764648, 0.8216666579246521, 0.8360000252723694, 0.8339999914169312, 0.8333333134651184, 0.8323333263397217, 0.8463333249092102, 0.8309999704360962, 0.8460000157356262, 0.8446666598320007, 0.8336666822433472, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 8, 1, 3, 5], [1, 0, 0, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 8, 4], [2, 2, 0, 4, 0, 3, 1], [16, 43], [0, 0, 0, 1, 0, 1, 1, 1], [7, 9, 0, 2], [0, 1, 1, 4], [0, 42], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 12, 7, 5, 2, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 8, 5, 1, 3, 5], [0, 1, 1, 0, 2], [65, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 9, 4, 0, 5, 5, 4, 9], [2, 2, 0, 4, 0, 3, 1], [27, 1, 72], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [7, 1, 2, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 12, 9, 3, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(beta))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034427165985107, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2, 1], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 52], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 9], [0, 1, 1, 4], [0], [0, 0, 1], [0, 0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 12, 7, 5, 2, 6, 3, 3, 1, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(grad))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 6, 3, 5, 6, 5], [0, 0, 1, 0, 2, 1], [26, 39, 39], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 3, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 0, 0, 0, 0, 1, 0], [7, 7, 0, 2], [0, 6, 1, 4], [0], [1], [0], [3], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 14, 8, 6, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.310802459716797, 2.309019088745117, 2.308833360671997, 2.310340404510498, 2.3106343746185303, 2.3095343112945557], "accuracy": [0.08981640636920929, 0.09192973375320435, 0.09060890227556229, 0.09192973375320435, 0.09074098616838455, 0.09708096832036972], "val_loss": [2.3086721897125244, 2.3086721897125244, 2.3086721897125244, 2.3086721897125244, 2.3086721897125244, 2.3086721897125244], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]