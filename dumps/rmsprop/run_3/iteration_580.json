[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2112796306610107, 1.6042646169662476, 1.1335694789886475, 0.9926072955131531, 0.8682663440704346, 0.8320531249046326, 0.7934278249740601, 0.7329300045967102, 0.7271624803543091, 0.7043461799621582, 0.6791538596153259, 0.6700212955474854, 0.6379129886627197, 0.625148355960846, 0.6215087175369263, 0.6136279106140137, 0.5931107401847839, 0.5853028893470764, 0.5764579772949219, 0.5634836554527283, 0.5526837706565857, 0.5359333157539368, 0.5266643166542053, 0.5198912024497986, 0.5266826748847961, 0.5116738677024841, 0.524291455745697, 0.5021104216575623, 0.4897215962409973, 0.48938629031181335, 0.47194159030914307, 0.4674915075302124, 0.47126564383506775, 0.4574633538722992, 0.4664193391799927, 0.4491211175918579, 0.44532859325408936, 0.4415283799171448, 0.43801867961883545, 0.42977145314216614, 0.4373108744621277, 0.43123659491539, 0.4194336533546448, 0.4186345934867859, 0.4207558333873749, 0.4080120325088501, 0.40335458517074585, 0.40237370133399963, 0.39697974920272827, 0.399533748626709, 0.39265957474708557, 0.3827280104160309, 0.3836768865585327, 0.3796045482158661, 0.38043174147605896, 0.38648757338523865, 0.3704712390899658, 0.3696576654911041, 0.36300620436668396, 0.3634229004383087, 0.3555636703968048, 0.3567308783531189, 0.3569605052471161], "accuracy": [0.26443007588386536, 0.49531105160713196, 0.6082419753074646, 0.6429798007011414, 0.6832650899887085, 0.6946242451667786, 0.7082287669181824, 0.7235503792762756, 0.7320036888122559, 0.7404569983482361, 0.7520803213119507, 0.7493065595626831, 0.7631752490997314, 0.7746664881706238, 0.7648923397064209, 0.7681944370269775, 0.7796856164932251, 0.7798177003860474, 0.7840443849563599, 0.7882710099220276, 0.793422281742096, 0.8010830879211426, 0.800818920135498, 0.8079513907432556, 0.802800178527832, 0.8108572363853455, 0.8047813773155212, 0.8170651197433472, 0.8207634687423706, 0.8190463781356812, 0.8256505131721497, 0.8339717388153076, 0.8277638554573059, 0.8323867321014404, 0.8273676037788391, 0.8308017253875732, 0.8358209133148193, 0.8341038227081299, 0.839519202709198, 0.8405758738517761, 0.8374059200286865, 0.839519202709198, 0.8430854678153992, 0.846387505531311, 0.8453308939933777, 0.8529917001724243, 0.8496896028518677, 0.852331280708313, 0.8548408150672913, 0.8532558679580688, 0.857218325138092, 0.8607845902442932, 0.8590674996376038, 0.863029956817627, 0.8565579056739807, 0.8569541573524475, 0.8636903762817383, 0.8651432991027832, 0.8661999702453613, 0.8671245574951172, 0.8658037185668945, 0.869502067565918, 0.8691058158874512], "val_loss": [1.9279963970184326, 1.1021254062652588, 0.9191269278526306, 0.8090386390686035, 0.7973877191543579, 0.7304302453994751, 0.6814062595367432, 0.7169886827468872, 0.6638737320899963, 0.6587601900100708, 0.6442345976829529, 0.6130566596984863, 0.6135509610176086, 0.5766715407371521, 0.6072607636451721, 0.5670002698898315, 0.5563069581985474, 0.5557814240455627, 0.5511501431465149, 0.5438559055328369, 0.5637812614440918, 0.5424619317054749, 0.5161072611808777, 0.5185366272926331, 0.508742094039917, 0.5381049513816833, 0.5217026472091675, 0.49710172414779663, 0.49424368143081665, 0.5049631595611572, 0.5023458003997803, 0.4903935194015503, 0.47904834151268005, 0.502421498298645, 0.4927661120891571, 0.4872018098831177, 0.48255395889282227, 0.46935510635375977, 0.466678261756897, 0.4591892957687378, 0.4641454815864563, 0.4650660753250122, 0.4768911898136139, 0.4489789307117462, 0.4462094306945801, 0.44522809982299805, 0.4483650326728821, 0.44034913182258606, 0.45177340507507324, 0.4458655118942261, 0.4331521689891815, 0.4535696506500244, 0.43924325704574585, 0.4324305057525635, 0.4355091154575348, 0.4342556893825531, 0.4428906738758087, 0.4249930679798126, 0.45058387517929077, 0.4308261573314667, 0.43135273456573486, 0.43091848492622375, 0.43084651231765747], "val_accuracy": [0.515999972820282, 0.6656666398048401, 0.6850000023841858, 0.6976666450500488, 0.7129999995231628, 0.7296666502952576, 0.746999979019165, 0.7210000157356262, 0.7563333511352539, 0.7596666812896729, 0.7493333220481873, 0.7716666460037231, 0.7820000052452087, 0.7870000004768372, 0.7770000100135803, 0.7829999923706055, 0.7893333435058594, 0.7940000295639038, 0.7900000214576721, 0.7940000295639038, 0.7896666526794434, 0.7960000038146973, 0.8076666593551636, 0.8136666417121887, 0.8146666884422302, 0.7943333387374878, 0.8116666674613953, 0.8183333277702332, 0.8193333148956299, 0.8173333406448364, 0.815666675567627, 0.8243333101272583, 0.8243333101272583, 0.8159999847412109, 0.8203333616256714, 0.8256666660308838, 0.8259999752044678, 0.8360000252723694, 0.8299999833106995, 0.8356666564941406, 0.8293333053588867, 0.8363333344459534, 0.8286666870117188, 0.8386666774749756, 0.8413333296775818, 0.8420000076293945, 0.840666651725769, 0.843999981880188, 0.8376666903495789, 0.8426666855812073, 0.8483333587646484, 0.8360000252723694, 0.8393333554267883, 0.8489999771118164, 0.8489999771118164, 0.8486666679382324, 0.8416666388511658, 0.8506666421890259, 0.8320000171661377, 0.8476666808128357, 0.8463333249092102, 0.8489999771118164, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 1, 4, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [2, 2, 4, 6, 3, 9, 8, 4, 0, 6], [2, 2, 3, 4, 0, 2, 2, 0], [91, 19], [0, 0, 1, 1, 0, 1, 1, 1], [1, 3, 9, 3], [0, 1, 1, 2], [0, 11], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036892414093018, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 9, 1, 3, 5], [2, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 2, 5, 5], [2, 2, 0, 4, 0, 3, 1], [57, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 2, 0, 3, 0, 8, 0, 5, 4, 1, 2, 3, 1, 4, 6, 0, 4, 7, 1, 0, 5, 3, 3, 0], [0, 1, 1, 2, 4, 3, 2, 2, 2, 6, 3, 0, 1, 0, 3, 2], [89, 80, 43], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 15, 8, 7, 2, 40, 24, 16, 3, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.square(beta), tf.math.square(beta)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.pow(beta, tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(grad, sigma), tf.math.pow(beta, tf.math.divide_no_nan(tf.math.negative(beta), beta))), grad), tf.math.pow(sigma, tf.math.add(tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(alpha))), tf.math.multiply(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), beta)))))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4312.78173828125, 2.6959495544433594, 2.480078935623169, 2.5510919094085693, 2.602174997329712, 2.466303586959839, 2.578465223312378, 2.562162160873413], "accuracy": [0.09813763201236725, 0.09800554811954498, 0.09760929644107819, 0.09985470771789551, 0.10738343745470047, 0.10157178342342377, 0.09866596013307571, 0.10368511080741882], "val_loss": [2.7250633239746094, 2.642155885696411, 2.6813583374023438, 2.564850330352783, 2.6788318157196045, 2.632551908493042, 2.5276803970336914, 2.6643192768096924], "val_accuracy": [0.10066666454076767, 0.09566666930913925, 0.10166666656732559, 0.0989999994635582, 0.09566666930913925, 0.10166666656732559, 0.0989999994635582, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 4, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [78.35404205322266, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0672302171587944, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [160824912.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 9, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 6, 3, 5, 2, 2, 1, 3, 6, 4, 3, 5, 2, 8, 9], [2, 2, 0, 1, 0, 3, 3, 5, 2, 4, 2, 1, 5], [16, 1, 47], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 0], [46, 65], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 30, 17, 13, 3, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.add(tf.math.add(tf.math.subtract(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), grad)), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.square(beta)), tf.math.add(tf.math.sqrt(grad), beta)), alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303926706314087, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]