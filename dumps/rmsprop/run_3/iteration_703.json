[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7765714526176453, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2094740867614746, 1.6014679670333862, 1.1635468006134033, 0.9595268368721008, 0.9008102416992188, 0.8309618830680847, 0.7807459831237793, 0.7846579551696777, 0.7262490391731262, 0.704984724521637, 0.7042248845100403, 0.6826571822166443, 0.6518892645835876, 0.6473321318626404, 0.6489840745925903, 0.6030468344688416, 0.6187481880187988], "accuracy": [0.2693171203136444, 0.5140668153762817, 0.5952978730201721, 0.6586976647377014, 0.6763967871665955, 0.6984546184539795, 0.7170783281326294, 0.7083608508110046, 0.7322678565979004, 0.7392682433128357, 0.7404569983482361, 0.7469290494918823, 0.7623828053474426, 0.7597411274909973, 0.7574957013130188, 0.7815347909927368, 0.7664773464202881], "val_loss": [1.9218847751617432, 1.1209022998809814, 0.9550264477729797, 0.8021944165229797, 0.7481473684310913, 0.712171733379364, 0.7008695602416992, 0.6339621543884277, 0.6414000988006592, 0.6279838681221008, 0.636822521686554, 0.5845504999160767, 0.5896234512329102, 0.5827550888061523, 0.5682607889175415, 0.5614956617355347, 0.5525497794151306], "val_accuracy": [0.5580000281333923, 0.637333333492279, 0.6883333325386047, 0.7106666564941406, 0.7210000157356262, 0.722000002861023, 0.7419999837875366, 0.7593333125114441, 0.750333309173584, 0.7603333592414856, 0.7409999966621399, 0.7879999876022339, 0.7723333239555359, 0.7776666879653931, 0.7829999923706055, 0.7863333225250244, 0.781333327293396]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 6, 5], [2, 0, 1, 0, 2], [26, 39, 99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 4, 4, 0, 5, 7, 4, 8], [2, 0, 0, 1, 0, 1, 0], [16, 1, 70, 13], [0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 7, 1], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.263142853975296, "mapping_values": [1, 6, 3, 3, 1, 16, 9, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2661776542663574, 3049.543701171875, NaN, NaN, NaN, NaN], "accuracy": [0.18253862857818604, 0.2316734939813614, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.091825246810913, 1978709.0, NaN, NaN, NaN, NaN], "val_accuracy": [0.26766666769981384, 0.10100000351667404, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 2], [0, 76, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [4, 2, 0, 6, 3, 8, 2, 9], [2, 0, 3, 1, 0], [16, 1, 50], [0, 0, 1, 1, 0, 0, 0, 1, 1], [7, 3, 0, 4, 5], [6, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 13, 8, 5, 3, 9, 5, 4, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, alpha), tf.math.negative(tf.math.pow(tf.math.square(alpha), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 3], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [1, 2, 0, 1, 0, 3, 1], [16, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [7, 1, 0, 2, 4, 2, 6, 0], [4, 1, 2, 4, 4, 2, 5], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 15, 8, 7, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, tf.math.pow(beta, grad)))), tf.math.add(tf.math.divide_no_nan(grad, beta), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038759231567383, 2.303013324737549, 2.3029282093048096, 2.3029944896698, 2.302809238433838, 2.302927017211914, 2.3029768466949463, 2.302973747253418, 2.3029675483703613, 2.3030102252960205, 2.302976608276367, 2.3028724193573, 2.3030595779418945, 2.303020477294922], "accuracy": [0.09126931428909302, 0.09259014576673508, 0.09642054885625839, 0.09628847241401672, 0.09721305221319199, 0.09509972482919693, 0.09470347315073013, 0.09655263274908066, 0.09919429570436478, 0.09787346422672272, 0.09298639744520187, 0.09536388516426086, 0.09932637959718704, 0.09576013684272766], "val_loss": [2.3026020526885986, 2.302584648132324, 2.302628993988037, 2.3026201725006104, 2.3026626110076904, 2.3025946617126465, 2.3026113510131836, 2.302574634552002, 2.3026010990142822, 2.3026387691497803, 2.3026459217071533, 2.3026463985443115, 2.3025999069213867, 2.302604913711548], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.10100000351667404, 0.09866666793823242, 0.1003333330154419, 0.10266666859388351, 0.09833333641290665, 0.09866666793823242, 0.09966666996479034, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 7, 7, 5], [0, 1, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 2, 4, 4, 0, 5, 4, 4], [2, 2, 0, 4, 0, 4, 1], [16, 1], [0, 1, 0, 0, 1, 1, 1, 1], [7, 3, 0, 2], [0, 3, 3, 0], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 7, 3, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303938627243042, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]