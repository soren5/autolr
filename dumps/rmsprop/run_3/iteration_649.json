[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2075722217559814, 1.597198724746704, 1.1249213218688965, 0.9696691632270813, 0.899731457233429, 0.8135892748832703, 0.7710378170013428, 0.7602469325065613, 0.730872631072998, 0.7078532576560974, 0.6860584020614624, 0.6673352122306824, 0.6545701622962952, 0.6376456022262573, 0.6374201774597168, 0.6285395622253418, 0.6047741770744324, 0.5991369485855103, 0.5790655612945557, 0.5655327439308167, 0.5785258412361145, 0.5602384209632874, 0.5496606230735779, 0.535622775554657, 0.5306077599525452, 0.5243400931358337, 0.517999529838562, 0.5066503882408142, 0.5048205852508545, 0.507605254650116, 0.4907461702823639], "accuracy": [0.27024170756340027, 0.505877673625946, 0.6033549308776855, 0.6548672318458557, 0.670320987701416, 0.7041342258453369, 0.7181349992752075, 0.7193237543106079, 0.7269845604896545, 0.7412495017051697, 0.7499669790267944, 0.7578919529914856, 0.7563069462776184, 0.761590301990509, 0.7644960880279541, 0.7730814814567566, 0.7784969210624695, 0.7759873270988464, 0.7876105904579163, 0.7968564033508301, 0.7881389260292053, 0.7952714562416077, 0.7981772422790527, 0.8064984679222107, 0.8053097128868103, 0.8099326491355896, 0.8108572363853455, 0.8189142942428589, 0.8145555257797241, 0.8148196935653687, 0.8234050869941711], "val_loss": [1.913825511932373, 1.1160502433776855, 0.9289838671684265, 0.8201894760131836, 0.802734375, 0.698743462562561, 0.6610327363014221, 0.6478238105773926, 0.6674944162368774, 0.6459067463874817, 0.6442559361457825, 0.5946948528289795, 0.5839267373085022, 0.5629241466522217, 0.5416819453239441, 0.5440085530281067, 0.5568179488182068, 0.5198594331741333, 0.5150889754295349, 0.5084768533706665, 0.5156563520431519, 0.5486828684806824, 0.504629909992218, 0.4852626919746399, 0.4889379143714905, 0.46186575293540955, 0.4620017409324646, 0.4753473699092865, 0.46111157536506653, 0.46447500586509705, 0.4489019513130188], "val_accuracy": [0.562666654586792, 0.6073333621025085, 0.6710000038146973, 0.6983333230018616, 0.6949999928474426, 0.7329999804496765, 0.7406666874885559, 0.7549999952316284, 0.7549999952316284, 0.753333330154419, 0.7573333382606506, 0.7583333253860474, 0.7796666622161865, 0.7903333306312561, 0.7870000004768372, 0.7873333096504211, 0.7889999747276306, 0.8090000152587891, 0.796999990940094, 0.8019999861717224, 0.8136666417121887, 0.7883333563804626, 0.8113333582878113, 0.8273333311080933, 0.8146666884422302, 0.840666651725769, 0.8403333425521851, 0.82833331823349, 0.8353333473205566, 0.8333333134651184, 0.8349999785423279]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 2, 2], [26, 99, 81], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 1, 1], [16, 1], [1, 1, 0, 1, 0, 1, 0, 0], [7, 3, 0, 2], [0, 1, 2, 5], [69], [1], [0], [1], [0]], "fitness": -0.10028571635484695, "mapping_values": [1, 8, 4, 4, 1, 12, 7, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, beta), tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [333.8575744628906, 15.112537384033203, 2.924422264099121, 4.087109088897705, 3.449260711669922, 3.773446559906006, 3.209411859512329, 3.142770767211914], "accuracy": [0.19191652536392212, 0.09893012791872025, 0.10421344637870789, 0.09985470771789551, 0.09879804402589798, 0.09972262382507324, 0.09509972482919693, 0.10196803510189056], "val_loss": [6.79135799407959, 3.158323287963867, 3.0895562171936035, 3.303837776184082, 3.491910219192505, 3.5832126140594482, 2.743260383605957, 3.465477228164673], "val_accuracy": [0.09866666793823242, 0.10000000149011612, 0.10300000011920929, 0.10066666454076767, 0.10199999809265137, 0.1003333330154419, 0.09866666793823242, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [12, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 0, 4, 1, 0, 5, 5, 2], [2, 2, 0, 4, 0, 3, 1], [97, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 3, 0, 2, 6, 7, 5], [0, 6, 7, 1, 2, 0], [0, 3], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 2, 10, 6, 4, 1, 13, 7, 6, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.pow(beta, beta)), tf.math.subtract(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(beta)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303518533706665, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [7, 2, 4, 4, 0, 0, 5, 4], [2, 2, 0, 5, 2, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2, 2], [0, 1, 1, 4, 2], [53], [0, 0], [0, 9], [1], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 14, 8, 6, 1, 10, 5, 5, 1, 2, 2, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.negative(tf.math.square(beta))), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309377431869507, 2.3107235431671143, 2.3104727268218994, 2.310238838195801, 2.310868978500366, 2.309921979904175], "accuracy": [0.09417514503002167, 0.09060890227556229, 0.08942015469074249, 0.09153348207473755, 0.09034473448991776, 0.09787346422672272], "val_loss": [2.309265613555908, 2.309265613555908, 2.309265613555908, 2.309265613555908, 2.309265613555908, 2.309265613555908], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 0, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 1, 1, 1, 1], [0, 7, 0, 2], [0, 5, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3099141120910645, 2.309751033782959, 2.309715509414673, 2.3100340366363525, 2.309873104095459, 2.311169147491455], "accuracy": [0.08889182657003403, 0.08360850811004639, 0.09377889335155487, 0.09192973375320435, 0.09060890227556229, 0.08717474341392517], "val_loss": [2.3081467151641846, 2.3081467151641846, 2.3081467151641846, 2.3081467151641846, 2.3081467151641846, 2.3081467151641846], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]