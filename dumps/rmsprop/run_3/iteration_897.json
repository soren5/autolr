[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.808571457862854, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2102978229522705, 1.5963537693023682, 1.1526678800582886, 0.9371247291564941, 0.8572130799293518, 0.8252886533737183, 0.7592806816101074, 0.7575256824493408, 0.7039679884910583, 0.7058400511741638, 0.6740213632583618, 0.6708204746246338, 0.6348553895950317, 0.6267848014831543, 0.6158870458602905, 0.5951731204986572, 0.5913891196250916, 0.5748690366744995, 0.5639967918395996, 0.5647941827774048, 0.5559418201446533, 0.527845561504364, 0.5459050536155701, 0.5162448287010193, 0.5108113288879395, 0.5137490034103394, 0.5059805512428284, 0.49592071771621704, 0.4968186616897583, 0.4718034863471985, 0.475742906332016, 0.468782901763916, 0.4586288630962372, 0.46807458996772766, 0.45704448223114014, 0.4622122347354889, 0.44732430577278137], "accuracy": [0.2645621597766876, 0.5046889185905457, 0.5930524468421936, 0.667811393737793, 0.687887966632843, 0.7025492191314697, 0.7224937081336975, 0.7219653725624084, 0.744419515132904, 0.7411174178123474, 0.752212405204773, 0.7497028112411499, 0.7680623531341553, 0.7708360552787781, 0.7712323069572449, 0.7744023203849792, 0.785629391670227, 0.791441023349762, 0.7876105904579163, 0.7907806038856506, 0.7969884872436523, 0.8062343001365662, 0.7996301651000977, 0.816008448600769, 0.8092722296714783, 0.8086118102073669, 0.816008448600769, 0.8198388814926147, 0.8156121969223022, 0.8290846943855286, 0.8252542614936829, 0.8285563588142395, 0.8333113193511963, 0.8274996876716614, 0.8343679904937744, 0.8325188159942627, 0.8341038227081299], "val_loss": [1.9206464290618896, 1.0944068431854248, 0.9205679297447205, 0.8071950078010559, 0.7601316571235657, 0.7461157441139221, 0.6773844957351685, 0.6725637912750244, 0.6428303122520447, 0.6051694750785828, 0.5932562351226807, 0.5893012881278992, 0.5882389545440674, 0.5660525560379028, 0.5799186825752258, 0.5652433037757874, 0.5343015789985657, 0.5287024974822998, 0.5375529527664185, 0.5201195478439331, 0.5276853442192078, 0.5163700580596924, 0.5097087621688843, 0.5097513794898987, 0.5242433547973633, 0.4962088167667389, 0.4841010272502899, 0.49943193793296814, 0.49225300550460815, 0.47223666310310364, 0.5000485181808472, 0.4651714563369751, 0.47942817211151123, 0.47817036509513855, 0.45890137553215027, 0.4831411838531494, 0.45817455649375916], "val_accuracy": [0.4933333396911621, 0.6463333368301392, 0.6806666851043701, 0.7083333134651184, 0.7066666483879089, 0.7083333134651184, 0.7473333477973938, 0.7570000290870667, 0.7546666860580444, 0.765999972820282, 0.781333327293396, 0.7826666831970215, 0.7793333530426025, 0.7860000133514404, 0.7776666879653931, 0.7853333353996277, 0.8006666898727417, 0.7979999780654907, 0.8059999942779541, 0.8069999814033508, 0.8046666383743286, 0.8136666417121887, 0.8166666626930237, 0.8116666674613953, 0.7983333468437195, 0.8183333277702332, 0.8243333101272583, 0.8176666498184204, 0.8149999976158142, 0.8276666402816772, 0.812666654586792, 0.8349999785423279, 0.82833331823349, 0.8226666450500488, 0.8349999785423279, 0.8236666917800903, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 5, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 3, 7, 0, 5, 0, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1, 1, 1, 1, 0], [7, 3, 0, 2], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 3, 2, 1, 1, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3032538890838623, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 1, 3, 5, 2, 2], [0, 0, 1, 0, 2, 1, 0], [26, 39, 39, 40], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 9, 3, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 21], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [17], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 10, 7, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 7, 5], [0, 3, 1, 0, 2], [67, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4, 4, 6], [1, 2, 0, 4, 0, 3, 1], [16, 1, 88], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 4], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 16, 10, 6, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(alpha))), beta), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3213882446289062, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.363750457763672, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [9, 2, 3, 4, 3, 5], [0, 0, 1, 0, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 5, 3, 8, 9], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3103713989257812, 2.3100435733795166, 2.309845209121704, 2.3090505599975586, 2.308687925338745, 2.309022903442383], "accuracy": [0.08994849026203156, 0.08942015469074249, 0.09008057415485382, 0.09285431355237961, 0.09470347315073013, 0.09338264167308807], "val_loss": [2.3082053661346436, 2.3082032203674316, 2.308201551437378, 2.308199167251587, 2.308197498321533, 2.3081955909729004], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}, "mapping_values": [1, 1, 1, 0, 1, 9, 6, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14}]