[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8208571672439575, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2075729370117188, 1.5877143144607544, 1.145185947418213, 0.9892520904541016, 0.881088137626648, 0.8148022890090942, 0.7781350016593933, 0.7557291984558105, 0.7296333909034729, 0.704201340675354, 0.6833580732345581, 0.6670446395874023, 0.6456674337387085, 0.6289981007575989, 0.6141619086265564, 0.62079256772995, 0.5952884554862976, 0.5746748447418213, 0.5947661995887756, 0.5873627662658691, 0.5474981665611267, 0.5440629124641418, 0.5375288128852844, 0.5372936129570007, 0.5395848155021667, 0.5265451073646545, 0.5073387026786804, 0.5130210518836975, 0.5088505148887634, 0.491597056388855, 0.49654650688171387, 0.47838762402534485, 0.4679211378097534, 0.4637877345085144, 0.4661732614040375, 0.4554901719093323, 0.44582822918891907, 0.45346924662590027, 0.4415452480316162, 0.43845897912979126, 0.4300040006637573, 0.4314100742340088, 0.4222522974014282, 0.4322306513786316, 0.41680634021759033, 0.40990298986434937], "accuracy": [0.27644962072372437, 0.5194822549819946, 0.6057323813438416, 0.646149754524231, 0.6803592443466187, 0.7078325152397156, 0.7170783281326294, 0.7234182953834534, 0.7293620109558105, 0.7378153204917908, 0.746268630027771, 0.7503632307052612, 0.7585523724555969, 0.7625148296356201, 0.7746664881706238, 0.7662131786346436, 0.780610203742981, 0.7853652238845825, 0.7795535326004028, 0.7791573405265808, 0.7950072884559631, 0.8038568496704102, 0.8033285140991211, 0.8013472557067871, 0.8020076751708984, 0.8020076751708984, 0.8133667707443237, 0.8074230551719666, 0.813498854637146, 0.8197067975997925, 0.8210275769233704, 0.819442629814148, 0.8267071843147278, 0.8315942287445068, 0.8284242749214172, 0.832650899887085, 0.8389908671379089, 0.8319904804229736, 0.8385946154594421, 0.8445383906364441, 0.8441421389579773, 0.8409721255302429, 0.8461233377456665, 0.8380662798881531, 0.8487650156021118, 0.852331280708313], "val_loss": [1.910724401473999, 1.104185700416565, 0.9303208589553833, 0.828446626663208, 0.7570410370826721, 0.6907778978347778, 0.6672763228416443, 0.70369952917099, 0.6124202609062195, 0.6081716418266296, 0.6149348020553589, 0.6040810346603394, 0.6336446404457092, 0.5550786256790161, 0.545654296875, 0.5561536550521851, 0.5207011103630066, 0.531941831111908, 0.5715951323509216, 0.5164431929588318, 0.5222650170326233, 0.5230677723884583, 0.5040172934532166, 0.49179574847221375, 0.49372974038124084, 0.4818548858165741, 0.4886590838432312, 0.46546670794487, 0.45250654220581055, 0.44726306200027466, 0.44546255469322205, 0.4388008713722229, 0.44217541813850403, 0.43080002069473267, 0.431833952665329, 0.42813658714294434, 0.4314843714237213, 0.4176638722419739, 0.4270024299621582, 0.41157862544059753, 0.40883687138557434, 0.4101026952266693, 0.4106433093547821, 0.4066171944141388, 0.39941784739494324, 0.4238567650318146], "val_accuracy": [0.5723333358764648, 0.6330000162124634, 0.6656666398048401, 0.6826666593551636, 0.7133333086967468, 0.734000027179718, 0.7390000224113464, 0.7023333311080933, 0.7666666507720947, 0.7616666555404663, 0.7593333125114441, 0.7703333497047424, 0.7506666779518127, 0.7950000166893005, 0.8009999990463257, 0.7870000004768372, 0.7990000247955322, 0.7979999780654907, 0.7820000052452087, 0.8033333420753479, 0.7979999780654907, 0.7950000166893005, 0.8130000233650208, 0.8143333196640015, 0.8076666593551636, 0.8133333325386047, 0.809333324432373, 0.8240000009536743, 0.8299999833106995, 0.8330000042915344, 0.8293333053588867, 0.8316666483879089, 0.8309999704360962, 0.8420000076293945, 0.8366666436195374, 0.8426666855812073, 0.8339999914169312, 0.8473333120346069, 0.8460000157356262, 0.8426666855812073, 0.8510000109672546, 0.8443333506584167, 0.8463333249092102, 0.8456666469573975, 0.8503333330154419, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [28, 99, 39], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 0, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1], [7, 3, 0, 6, 9], [0, 1, 1, 4], [0, 60], [1], [0], [1], [0]], "fitness": -0.8100000023841858, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 1, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2446796894073486, 1.738068699836731, 1.1988412141799927, 0.9979345798492432, 0.8833324313163757, 0.8342924118041992, 0.8210148811340332, 0.7582480907440186, 0.7511208057403564, 0.7128389477729797, 0.7004429697990417, 0.6695383191108704, 0.6564841866493225, 0.6540579199790955, 0.6396825909614563, 0.6205323338508606, 0.6126894950866699, 0.601315438747406, 0.5911692976951599, 0.609488844871521, 0.5834716558456421, 0.5930373668670654, 0.5735254883766174, 0.5705402493476868, 0.5517274737358093, 0.53650963306427, 0.5634104013442993, 0.532513439655304, 0.5358390808105469, 0.530672550201416, 0.5251340270042419, 0.519635796546936, 0.5105907320976257, 0.5090575218200684, 0.49216407537460327, 0.5033654570579529, 0.5037241578102112], "accuracy": [0.22916391491889954, 0.46387532353401184, 0.5785233378410339, 0.6412627100944519, 0.6750759482383728, 0.689869225025177, 0.6964733600616455, 0.7190595865249634, 0.7195879220962524, 0.7349095344543457, 0.7368907928466797, 0.748778223991394, 0.7556465268135071, 0.7589486241340637, 0.7660810947418213, 0.7758552432060242, 0.770439863204956, 0.7781006693840027, 0.7820631265640259, 0.7681944370269775, 0.7799497842788696, 0.7775723338127136, 0.7906485199928284, 0.791969358921051, 0.8005547523498535, 0.7985734939575195, 0.7890635132789612, 0.8049134612083435, 0.8020076751708984, 0.806630551815033, 0.8053097128868103, 0.8087438941001892, 0.8098005652427673, 0.811649739742279, 0.8224804997444153, 0.816008448600769, 0.8144234418869019], "val_loss": [2.066258192062378, 1.1251558065414429, 0.9064254760742188, 0.7677920460700989, 0.701688826084137, 0.7088710069656372, 0.7072374820709229, 0.630220353603363, 0.6539158821105957, 0.6174699664115906, 0.6053466200828552, 0.608051061630249, 0.5811803340911865, 0.548894464969635, 0.5580226182937622, 0.5313727855682373, 0.5291035175323486, 0.5263750553131104, 0.533275306224823, 0.5125447511672974, 0.5186120271682739, 0.5079092979431152, 0.5095886588096619, 0.5236965417861938, 0.4941052198410034, 0.5096961259841919, 0.4795120358467102, 0.47296038269996643, 0.4855932891368866, 0.512457013130188, 0.4711316227912903, 0.4565049111843109, 0.45457926392555237, 0.47038567066192627, 0.49884793162345886, 0.4879571199417114, 0.4470128118991852], "val_accuracy": [0.492333322763443, 0.6396666765213013, 0.6683333516120911, 0.7076666951179504, 0.7386666536331177, 0.7223333120346069, 0.6996666789054871, 0.7446666955947876, 0.7273333072662354, 0.7476666569709778, 0.7509999871253967, 0.753000020980835, 0.7693333625793457, 0.784333348274231, 0.7820000052452087, 0.7950000166893005, 0.7883333563804626, 0.7916666865348816, 0.7929999828338623, 0.7993333339691162, 0.7986666560173035, 0.7983333468437195, 0.7973333597183228, 0.7929999828338623, 0.8086666464805603, 0.7929999828338623, 0.8163333535194397, 0.8109999895095825, 0.809333324432373, 0.8009999990463257, 0.812666654586792, 0.8273333311080933, 0.8236666917800903, 0.8183333277702332, 0.8106666803359985, 0.8083333373069763, 0.8266666531562805]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [5, 2, 3, 1, 3, 5], [0, 0, 1, 2, 1], [26, 39, 39], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 0, 7, 0, 5, 5, 4], [1, 2, 2, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 3], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 1, 2, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(alpha, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [31561.630859375, 4442983.0, 75956016.0, 537377792.0, 2351286528.0, 7810969600.0], "accuracy": [0.09932637959718704, 0.10434553027153015, 0.10368511080741882, 0.09377889335155487, 0.10011887550354004, 0.10130762308835983], "val_loss": [307890.65625, 16508396.0, 177024832.0, 964778240.0, 3613264384.0, 10657201152.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 2], [26, 20, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 3, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 5, 0, 2, 2, 2, 3, 4, 6, 1, 3, 3, 5, 2], [0, 1, 1, 4, 0, 2, 4, 7, 3, 1, 3, 4], [79, 21], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 7, 3, 2, 26, 14, 12, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.negative(tf.math.add(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.multiply(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.divide_no_nan(beta, tf.math.subtract(grad, tf.math.multiply(tf.math.multiply(tf.math.square(grad), sigma), tf.math.add(alpha, sigma)))), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [0, 2, 0, 3, 0, 3, 1], [16, 66], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [7, 3, 0, 2, 0, 7, 3, 9, 5], [0, 1, 1, 7, 6], [0, 48], [0, 0, 1, 1], [0, 2], [1, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 1, 0, 1, 1, 14, 9, 5, 2, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(alpha), alpha)), tf.math.add(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]