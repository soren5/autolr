[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8059999942779541, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211544990539551, 1.6048450469970703, 1.138393759727478, 0.980453372001648, 0.897395670413971, 0.820185661315918, 0.7763689160346985, 0.7493643760681152, 0.7321127653121948, 0.7028360962867737, 0.6866074204444885, 0.6644604206085205, 0.6465446949005127, 0.6405612826347351, 0.6353585720062256, 0.6109774112701416, 0.6004939079284668, 0.5810164213180542, 0.5751747488975525, 0.5881134867668152, 0.5649600028991699, 0.5541207194328308, 0.5534158945083618, 0.545902669429779, 0.5328420400619507, 0.5259209275245667, 0.5129262208938599, 0.5247520804405212, 0.5089775323867798, 0.5057408809661865, 0.5009531378746033, 0.4918750524520874, 0.487125962972641, 0.47321489453315735, 0.4832274317741394, 0.4729650020599365, 0.46219807863235474, 0.461119145154953, 0.45509856939315796, 0.45329391956329346, 0.4543793499469757], "accuracy": [0.2724871337413788, 0.5003302097320557, 0.5964865684509277, 0.640338122844696, 0.6752080321311951, 0.7037379741668701, 0.7152291536331177, 0.7236824631690979, 0.7255316376686096, 0.7349095344543457, 0.7403249144554138, 0.7574957013130188, 0.7541936039924622, 0.7647602558135986, 0.7606657147407532, 0.7750627398490906, 0.7771760821342468, 0.7854973077774048, 0.7817989587783813, 0.7759873270988464, 0.7880068421363831, 0.7956677079200745, 0.7917051911354065, 0.793950617313385, 0.7968564033508301, 0.8006868362426758, 0.8103289008140564, 0.8001585006713867, 0.8080834746360779, 0.8125742673873901, 0.8101968169212341, 0.8171972036361694, 0.819970965385437, 0.8259146809577942, 0.819442629814148, 0.8245938420295715, 0.8280280232429504, 0.828820526599884, 0.828820526599884, 0.828292191028595, 0.8300092220306396], "val_loss": [1.9299635887145996, 1.1345723867416382, 0.8973885774612427, 0.8620954751968384, 0.7867913246154785, 0.6967635154724121, 0.6702852249145508, 0.6683922410011292, 0.6494420766830444, 0.6212586760520935, 0.6131637692451477, 0.5768532752990723, 0.5730670690536499, 0.5884693264961243, 0.5601004958152771, 0.5478421449661255, 0.5336402654647827, 0.5208889245986938, 0.5556877255439758, 0.5551886558532715, 0.5153003931045532, 0.49658361077308655, 0.5549588799476624, 0.4857509732246399, 0.48031672835350037, 0.5007448792457581, 0.5079389810562134, 0.485111802816391, 0.472665011882782, 0.4656667411327362, 0.46805158257484436, 0.4549970328807831, 0.45258358120918274, 0.46569177508354187, 0.4630205035209656, 0.44369715452194214, 0.4509177505970001, 0.44760990142822266, 0.45890292525291443, 0.442321240901947, 0.43575984239578247], "val_accuracy": [0.5706666707992554, 0.6309999823570251, 0.6930000185966492, 0.6836666464805603, 0.7166666388511658, 0.746666669845581, 0.7476666569709778, 0.7473333477973938, 0.7570000290870667, 0.7689999938011169, 0.7733333110809326, 0.7876666784286499, 0.7893333435058594, 0.7726666927337646, 0.7883333563804626, 0.7889999747276306, 0.8013333082199097, 0.8086666464805603, 0.7803333401679993, 0.7900000214576721, 0.812333345413208, 0.8190000057220459, 0.7829999923706055, 0.8266666531562805, 0.8240000009536743, 0.8029999732971191, 0.8059999942779541, 0.8140000104904175, 0.82833331823349, 0.828000009059906, 0.828000009059906, 0.8363333344459534, 0.8353333473205566, 0.8309999704360962, 0.8296666741371155, 0.840666651725769, 0.8370000123977661, 0.8393333554267883, 0.8256666660308838, 0.8356666564941406, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 87, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 7, 0, 1], [1, 2, 4, 4, 0, 1, 1, 3], [16, 48], [0, 1, 0, 1, 1, 0, 1, 1], [7, 1, 0, 5], [0, 1, 1, 4], [0], [1], [0], [4], [0]], "fitness": -0.4145714342594147, "mapping_values": [1, 10, 5, 5, 3, 19, 11, 8, 1, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.math.negative(tf.math.square(alpha)), tf.math.square(tf.math.pow(tf.math.add(beta, grad), grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.491367816925049, 2.302779197692871, 2.2202811241149902, 2.240976572036743, 2.3176863193511963, 2.312368631362915, 2.3042287826538086, 2.303652048110962], "accuracy": [0.16219785809516907, 0.13221503794193268, 0.19310526549816132, 0.21555937826633453, 0.15638621151447296, 0.09787346422672272, 0.09932637959718704, 0.09945846349000931], "val_loss": [2.302248477935791, 2.303654193878174, 2.1175084114074707, 2.307237148284912, 2.3312644958496094, 2.3040668964385986, 2.303870439529419, 2.3026084899902344], "val_accuracy": [0.1003333330154419, 0.19066666066646576, 0.4183333218097687, 0.10000000149011612, 0.09733333438634872, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0, 3, 3, 1, 3, 0, 8, 1, 9, 1, 1, 2, 2, 5, 9, 7, 8, 1, 3, 8], [0, 0, 1, 3, 2, 2, 1, 0, 2, 0, 0, 1, 1, 3, 3], [26, 39, 39, 24, 66, 25, 92], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 4, 3, 3], [0, 1, 5, 4], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 26, 15, 7, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.sqrt(grad)), grad), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(alpha, tf.math.subtract(tf.math.add(tf.math.add(tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(tf.math.subtract(tf.math.multiply(alpha, tf.math.sqrt(grad)), grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 5, 1, 4, 5], [0, 0, 1, 0, 0], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 6, 4, 0, 5, 5, 4], [0, 2, 0, 4, 3, 3, 1], [16, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [7, 3, 0, 2, 2, 1, 0, 1, 9], [6, 1, 1, 4, 2, 5], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 12, 7, 5, 2, 15, 9, 6, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(grad, alpha), tf.math.negative(alpha)), grad)), beta), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [42580.421875, 6388254.5, 108773120.0, 771857600.0, 3384845056.0, 11238343680.0], "accuracy": [0.10249637067317963, 0.10170386731624603, 0.09959053993225098, 0.09734513610601425, 0.10289261490106583, 0.09919429570436478], "val_loss": [435842.90625, 23384966.0, 250791616.0, 1366851456.0, 5119184384.0, 15099022336.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 83, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 0, 4, 1], [2, 2, 0, 4, 0, 5, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 8], [0, 1, 1, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29708.28125, 4470775.5, 76881624.0, 542920064.0, 2382628864.0, 7720639488.0], "accuracy": [0.09655263274908066, 0.09853387624025345, 0.10302469879388809, 0.09708096832036972, 0.09377889335155487, 0.10170386731624603], "val_loss": [308657.71875, 16549394.0, 177464272.0, 967173312.0, 3622232832.0, 10683654144.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]