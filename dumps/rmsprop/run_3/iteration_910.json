[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212792158126831, 1.6195247173309326, 1.1651636362075806, 0.9756152033805847, 0.9544405341148376, 0.8289113640785217, 0.8034329414367676, 0.7575151324272156, 0.7420120239257812, 0.6987791061401367, 0.696380078792572, 0.6656978726387024, 0.6618253588676453, 0.6383228898048401, 0.6526541709899902, 0.6148655414581299, 0.6143409013748169, 0.590164303779602, 0.5769564509391785, 0.5701671242713928, 0.5730798840522766, 0.583906352519989, 0.5405829548835754, 0.5424984097480774, 0.5316272974014282, 0.5325865745544434, 0.5233904123306274, 0.5190697312355042, 0.5059250593185425, 0.4983784258365631, 0.5029428005218506, 0.47904232144355774, 0.49716654419898987, 0.48301127552986145, 0.47620704770088196, 0.47764140367507935, 0.4654962420463562, 0.464579701423645, 0.46008753776550293, 0.44789475202560425, 0.4536588191986084, 0.44118934869766235, 0.4460459351539612, 0.4404633939266205, 0.43110114336013794, 0.4333801865577698, 0.41977638006210327, 0.4227917194366455, 0.41455715894699097], "accuracy": [0.26720380783081055, 0.49768856167793274, 0.5888257622718811, 0.6446968913078308, 0.6516972780227661, 0.700171709060669, 0.7033417224884033, 0.7144366502761841, 0.7253995537757874, 0.7392682433128357, 0.7429665923118591, 0.7511557340621948, 0.7523444890975952, 0.7627789974212646, 0.757099449634552, 0.7651565074920654, 0.7734777331352234, 0.7791573405265808, 0.7853652238845825, 0.7864218950271606, 0.7869502305984497, 0.7795535326004028, 0.8010830879211426, 0.8016114234924316, 0.7998943328857422, 0.802800178527832, 0.8041210174560547, 0.8034605979919434, 0.8115176558494568, 0.8164047002792358, 0.8185180425643921, 0.8259146809577942, 0.8181217908859253, 0.8219521641731262, 0.8219521641731262, 0.8203672170639038, 0.830669641494751, 0.8297450542449951, 0.8304054737091064, 0.8323867321014404, 0.8313300609588623, 0.8342359066009521, 0.8376700282096863, 0.8366134166717529, 0.8403117060661316, 0.8392550349235535, 0.8490291833877563, 0.8455950617790222, 0.844010055065155], "val_loss": [1.9322595596313477, 1.0980064868927002, 0.9185685515403748, 0.8078634142875671, 0.7260298728942871, 0.7201970219612122, 0.6457931995391846, 0.6702656745910645, 0.6023324131965637, 0.6092607378959656, 0.6068261861801147, 0.5656192898750305, 0.5758312940597534, 0.555189311504364, 0.5350942611694336, 0.5377468466758728, 0.5331273674964905, 0.5124794244766235, 0.5188906192779541, 0.4889530539512634, 0.57987380027771, 0.48520931601524353, 0.48833537101745605, 0.5053176879882812, 0.4823046922683716, 0.4845319390296936, 0.4592602550983429, 0.4643283784389496, 0.492762953042984, 0.4742283821105957, 0.4455743134021759, 0.45454075932502747, 0.44737792015075684, 0.4332370162010193, 0.4544299244880676, 0.4259800612926483, 0.4330981969833374, 0.4296950697898865, 0.4196989834308624, 0.4299440085887909, 0.41322436928749084, 0.4103454649448395, 0.41503292322158813, 0.40385618805885315, 0.4137013852596283, 0.40504637360572815, 0.4051240086555481, 0.4027272164821625, 0.4105701446533203], "val_accuracy": [0.6003333330154419, 0.6633333563804626, 0.6653333306312561, 0.6949999928474426, 0.7319999933242798, 0.7149999737739563, 0.7609999775886536, 0.7540000081062317, 0.7706666588783264, 0.762333333492279, 0.7673333287239075, 0.7763333320617676, 0.7803333401679993, 0.7876666784286499, 0.8026666641235352, 0.7889999747276306, 0.7993333339691162, 0.8023333549499512, 0.8059999942779541, 0.812333345413208, 0.7636666893959045, 0.8109999895095825, 0.8046666383743286, 0.7873333096504211, 0.8153333067893982, 0.8166666626930237, 0.8330000042915344, 0.8246666789054871, 0.8109999895095825, 0.8233333230018616, 0.8366666436195374, 0.8220000267028809, 0.8323333263397217, 0.8399999737739563, 0.8240000009536743, 0.8353333473205566, 0.8306666612625122, 0.8320000171661377, 0.8416666388511658, 0.8386666774749756, 0.8429999947547913, 0.8420000076293945, 0.8453333377838135, 0.8486666679382324, 0.8423333168029785, 0.8476666808128357, 0.8476666808128357, 0.8446666598320007, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 5, 3, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [69, 20], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 2], [52], [1], [0], [1], [0]], "fitness": -0.7857142686843872, "mapping_values": [1, 10, 5, 5, 2, 4, 2, 2, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0852973461151123, 1.3957912921905518, 0.9556172490119934, 0.802337110042572, 0.7320756316184998, 0.7292272448539734, 0.6997374892234802, 0.6788676977157593, 0.6319045424461365, 0.6328151822090149, 0.6322712302207947, 0.638496458530426, 0.693956196308136, 0.6831135153770447, 0.7366664409637451, 0.7958030700683594, 0.8055227994918823, 0.9319912195205688], "accuracy": [0.27460044622421265, 0.5646545886993408, 0.64667809009552, 0.693831741809845, 0.7252674698829651, 0.7288337349891663, 0.7327961921691895, 0.7404569983482361, 0.7611940503120422, 0.7552502751350403, 0.7635715007781982, 0.7625148296356201, 0.7457403540611267, 0.746268630027771, 0.7362303733825684, 0.7238145470619202, 0.7244749665260315, 0.7132478952407837], "val_loss": [1.0722490549087524, 0.9425712823867798, 0.7518385648727417, 0.6262060403823853, 0.6536224484443665, 0.5957027077674866, 0.6350507140159607, 0.5363121628761292, 0.5856102705001831, 0.5316256284713745, 0.5168379545211792, 0.5796666145324707, 0.5470240712165833, 0.567489504814148, 0.5990868210792542, 0.5753093957901001, 0.695734441280365, 0.8336061835289001], "val_accuracy": [0.6323333382606506, 0.6753333210945129, 0.7323333621025085, 0.7583333253860474, 0.7713333368301392, 0.7756666541099548, 0.7556666731834412, 0.7853333353996277, 0.7823333144187927, 0.7973333597183228, 0.7883333563804626, 0.7833333611488342, 0.8053333163261414, 0.7960000038146973, 0.7886666655540466, 0.7850000262260437, 0.7786666750907898, 0.7316666841506958]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [9, 39, 4], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 4, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 3, 0, 2, 5], [7, 6, 7, 2], [90], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 3, 2, 1, 1, 9, 5, 4, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.add(tf.math.square(grad), grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 9, 1, 3, 5], [0, 0, 1, 0, 2], [26, 11, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 6, 7, 5, 5, 2, 8], [1, 2, 0, 4, 0, 3, 1, 0, 3, 4], [16, 1, 24], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 1, 3, 2, 8, 6], [0, 6, 1, 7, 5, 5, 3, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 19, 11, 8, 3, 17, 9, 8, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(alpha), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.sqrt(alpha), grad)), tf.math.divide_no_nan(grad, grad))), sigma), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 5, 51], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 5, 8, 1], [2, 0, 3, 1, 0], [16, 66], [1, 0, 1, 1], [2, 2], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3036599159240723, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 8, 4, 4, 2, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12}]