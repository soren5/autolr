[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7837142944335938, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207965850830078, 1.5891071557998657, 1.1365302801132202, 0.9663697481155396, 0.8689478635787964, 0.8477716445922852, 0.7804141640663147, 0.7437575459480286, 0.7166820168495178, 0.7016485333442688, 0.6751751899719238, 0.6783010363578796, 0.656757116317749, 0.6417933106422424, 0.6334622502326965, 0.6228801012039185], "accuracy": [0.26997753977775574, 0.5168405771255493, 0.607449471950531, 0.6618676781654358, 0.6839255094528198, 0.6893408894538879, 0.7157574892044067, 0.7268524765968323, 0.7368907928466797, 0.7374191284179688, 0.7514199018478394, 0.744419515132904, 0.7602694630622864, 0.7593448758125305, 0.7640998363494873, 0.7651565074920654], "val_loss": [1.9209736585617065, 1.1404638290405273, 0.9289600253105164, 0.8289483785629272, 0.8372823596000671, 0.731235682964325, 0.7282605767250061, 0.6744440793991089, 0.6926225423812866, 0.6163665652275085, 0.6032082438468933, 0.6250913143157959, 0.6139252185821533, 0.6109026670455933, 0.6566095352172852, 0.5738078355789185], "val_accuracy": [0.5419999957084656, 0.6193333268165588, 0.6726666688919067, 0.7020000219345093, 0.6779999732971191, 0.7289999723434448, 0.7066666483879089, 0.750333309173584, 0.7239999771118164, 0.765999972820282, 0.7760000228881836, 0.7616666555404663, 0.7606666684150696, 0.765333354473114, 0.7390000224113464, 0.7749999761581421]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [26, 39, 75], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 2, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 0, 0, 1, 1, 1], [7, 3, 5, 2], [0, 1, 1, 4], [2], [1], [0], [5], [0]], "fitness": -0.19285714626312256, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(alpha, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3626108169555664, 2.3972883224487305, 2.2627501487731934, 2.429241180419922, 2.224803924560547, 2.309617042541504, 2.3041656017303467, 2.3032686710357666], "accuracy": [0.17857614159584045, 0.13829085230827332, 0.16021661460399628, 0.18491612374782562, 0.18993528187274933, 0.09893012791872025, 0.0956280529499054, 0.10117553919553757], "val_loss": [2.256194591522217, 2.3017871379852295, 2.280830144882202, 2.2943191528320312, 2.316218376159668, 2.304575204849243, 2.302971839904785, 2.302668571472168], "val_accuracy": [0.10633333027362823, 0.13300000131130219, 0.19200000166893005, 0.0976666659116745, 0.0989999994635582, 0.0989999994635582, 0.0976666659116745, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 5, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [7, 9, 4, 7, 0, 5, 5, 4], [1, 5, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 3, 0, 2, 0], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 8, 4, 2, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(grad)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3043859004974365, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 3, 4], [1, 2, 1, 4, 0, 3, 1], [16, 52], [0, 0, 0, 0, 0, 1, 1, 1], [9, 7, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [16.309206008911133, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20235107839107513, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.4909870624542236, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 9, 3, 5], [0, 0, 1, 0, 1], [26, 39, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 3, 7, 0, 1, 5, 4], [1, 3, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2, 9], [0, 1, 3, 4], [0, 59], [0, 0, 1, 0], [0, 6, 9], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 6, 4, 2, 3, 3, 2, 1, 1, 8, 5, 3, 2, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310499906539917, 2.309779405593872, 2.3082869052886963, 2.30928635597229, 2.3091907501220703, 2.309084177017212], "accuracy": [0.09192973375320435, 0.08770307898521423, 0.09959053993225098, 0.0882314071059227, 0.09245806187391281, 0.09126931428909302], "val_loss": [2.307922601699829, 2.307922601699829, 2.307922601699829, 2.307922601699829, 2.307922601699829, 2.307922601699829], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]