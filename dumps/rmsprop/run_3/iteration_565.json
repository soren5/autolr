[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8168571591377258, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209892511367798, 1.5779062509536743, 1.132125973701477, 0.9758715033531189, 0.8541616797447205, 0.8253886699676514, 0.79290771484375, 0.7236806154251099, 0.7245217561721802, 0.6776975393295288, 0.6630125641822815, 0.6637018918991089, 0.6425044536590576, 0.6123329401016235, 0.6270486116409302, 0.5958594083786011, 0.5803587436676025, 0.5742299556732178, 0.5693293213844299, 0.5627611875534058, 0.5523126721382141, 0.5349574685096741, 0.5341001749038696, 0.5376145243644714, 0.5102092623710632, 0.5152958631515503, 0.4928160607814789, 0.4978152811527252, 0.4998946189880371, 0.4872099757194519, 0.48142677545547485, 0.46941080689430237, 0.4644619822502136, 0.46831461787223816, 0.4652206003665924, 0.45608922839164734, 0.4489200711250305, 0.44377401471138, 0.43879541754722595, 0.438250869512558, 0.4313621520996094, 0.4357912838459015, 0.42969340085983276, 0.42735999822616577, 0.40995967388153076, 0.4106121361255646, 0.4084412157535553, 0.40113967657089233, 0.4085058867931366], "accuracy": [0.26720380783081055, 0.522520124912262, 0.601109504699707, 0.6470743417739868, 0.6889446377754211, 0.6955488324165344, 0.7111346125602722, 0.7243428826332092, 0.7347774505615234, 0.7423061728477478, 0.7508915662765503, 0.7518161535263062, 0.7609298825263977, 0.7741381525993347, 0.7680623531341553, 0.7794214487075806, 0.7824593782424927, 0.7823272943496704, 0.7893276810646057, 0.7928939461708069, 0.7961959838867188, 0.8055738806724548, 0.7992339134216309, 0.8025360107421875, 0.8100647330284119, 0.8072909712791443, 0.816008448600769, 0.8168009519577026, 0.8149517774581909, 0.8206313848495483, 0.822348415851593, 0.8276317715644836, 0.828292191028595, 0.8265751004219055, 0.8247259259223938, 0.8293488025665283, 0.8348963260650635, 0.8339717388153076, 0.8413683772087097, 0.8378021121025085, 0.8409721255302429, 0.8341038227081299, 0.8425571322441101, 0.839519202709198, 0.848368763923645, 0.8475762605667114, 0.8510104417800903, 0.8539162874221802, 0.8507462739944458], "val_loss": [1.9203393459320068, 1.138117790222168, 0.9529688954353333, 0.847459614276886, 0.7895211577415466, 0.7047037482261658, 0.6837449669837952, 0.6425699591636658, 0.633532702922821, 0.6228785514831543, 0.6071287989616394, 0.5922897458076477, 0.5802850723266602, 0.5769596099853516, 0.5702155232429504, 0.5534654259681702, 0.5571543574333191, 0.5316019058227539, 0.5439803600311279, 0.5404676198959351, 0.5211005210876465, 0.5373976826667786, 0.5063858032226562, 0.4951062798500061, 0.518393337726593, 0.49667423963546753, 0.49340710043907166, 0.4783982038497925, 0.47783201932907104, 0.47294992208480835, 0.4766334295272827, 0.476350873708725, 0.5002229809761047, 0.47696617245674133, 0.4651724100112915, 0.4587685465812683, 0.461879163980484, 0.46113210916519165, 0.44804686307907104, 0.44537100195884705, 0.45633265376091003, 0.448161244392395, 0.447531133890152, 0.4366104006767273, 0.4445665776729584, 0.44437992572784424, 0.4414268732070923, 0.4417334496974945, 0.4316258430480957], "val_accuracy": [0.5693333148956299, 0.6579999923706055, 0.6736666560173035, 0.7160000205039978, 0.7073333263397217, 0.7369999885559082, 0.7513333559036255, 0.7540000081062317, 0.7609999775886536, 0.7666666507720947, 0.7676666378974915, 0.7736666798591614, 0.7823333144187927, 0.7793333530426025, 0.7876666784286499, 0.7979999780654907, 0.7863333225250244, 0.8029999732971191, 0.8023333549499512, 0.7990000247955322, 0.8109999895095825, 0.7906666398048401, 0.8176666498184204, 0.8193333148956299, 0.8040000200271606, 0.8153333067893982, 0.8180000185966492, 0.8276666402816772, 0.8236666917800903, 0.82833331823349, 0.8236666917800903, 0.8230000138282776, 0.8106666803359985, 0.8256666660308838, 0.8339999914169312, 0.82833331823349, 0.8339999914169312, 0.82833331823349, 0.8403333425521851, 0.8416666388511658, 0.8330000042915344, 0.8333333134651184, 0.8353333473205566, 0.8476666808128357, 0.840666651725769, 0.8399999737739563, 0.8373333215713501, 0.8399999737739563, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [96, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 2, 1, 3, 5, 5, 4], [3, 2, 0, 4, 0, 1, 1], [75, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 5, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10400000214576721, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, beta), tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.693030834197998, 2.351053476333618, 2.3694045543670654, 2.3955631256103516, 2.4773800373077393, 2.705382823944092, 3.119096517562866], "accuracy": [0.2028794139623642, 0.10513802617788315, 0.09668471664190292, 0.10487385839223862, 0.09774138033390045, 0.10368511080741882, 0.09694888442754745], "val_loss": [2.348968029022217, 2.3461551666259766, 2.3312454223632812, 2.4907777309417725, 2.552889347076416, 2.6977522373199463, 3.964322566986084], "val_accuracy": [0.10066666454076767, 0.10233332961797714, 0.1003333330154419, 0.09733333438634872, 0.09933333098888397, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 0, 5, 8], [3, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3, 3, 0, 4], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.math.sqrt(grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303356409072876, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [38, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 3, 0, 3, 4, 9], [0, 1, 1, 4, 1, 5], [0, 0], [1], [0], [1], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 2, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3103909492492676, 2.3088066577911377, 2.3097081184387207, 2.3093514442443848, 2.3084287643432617, 2.310086727142334], "accuracy": [0.09100515395402908, 0.0956280529499054, 0.09245806187391281, 0.09153348207473755, 0.09509972482919693, 0.0952318087220192], "val_loss": [2.308837413787842, 2.308837413787842, 2.308837413787842, 2.308837413787842, 2.308837413787842, 2.308837413787842], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [4, 2, 4, 6, 3, 5, 8, 4], [3, 2, 0, 3, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 0, 3, 1, 6], [0, 2, 1, 2, 7, 4], [0], [1], [0], [0], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 2, 12, 6, 6, 1, 1, 0, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), alpha)), beta), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3106040954589844, 2.309619665145874, 2.3099782466888428, 2.309837818145752, 2.3087422847747803, 2.3100595474243164], "accuracy": [0.09219389408826828, 0.09708096832036972, 0.08638224750757217, 0.09047681838274002, 0.08717474341392517, 0.09113723784685135], "val_loss": [2.3084447383880615, 2.3084447383880615, 2.3084447383880615, 2.3084447383880615, 2.3084447383880615, 2.3084447383880615], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]