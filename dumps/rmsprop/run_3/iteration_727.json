[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 3, 1, 1], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 9, 5, 5, 4, 5], [2, 2, 0, 5, 0, 3, 1], [16, 1, 9], [1, 0, 1, 1, 0, 1, 1, 1], [7, 0, 2, 2], [5, 1, 4, 4], [0], [1], [0], [1], [0]], "fitness": -0.7739999890327454, "mapping_values": [1, 10, 5, 5, 2, 14, 9, 5, 3, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(beta))), tf.math.pow(tf.math.square(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3075592517852783, 2.297229290008545, 2.2814929485321045, 2.2530128955841064, 2.2203118801116943, 2.1719722747802734, 2.087066888809204, 1.9616289138793945, 1.758582592010498, 1.5240243673324585, 1.3894468545913696, 1.3709497451782227, 1.3587040901184082, 1.2927438020706177, 1.1236056089401245, 0.996983528137207, 0.9048112630844116, 0.9094449281692505, 0.9186428785324097, 0.8898782730102539, 0.8484361171722412, 0.8213764429092407, 0.8407642245292664, 0.8204227685928345, 0.7970024347305298, 0.7821195721626282, 0.7682979106903076, 0.751533031463623, 0.746931791305542, 0.7549995183944702, 0.751304566860199, 0.7314652800559998, 0.7192659378051758, 0.7031784653663635, 0.6920034885406494, 0.6791865825653076, 0.6764950156211853, 0.6671692132949829, 0.668208122253418, 0.6630979180335999], "accuracy": [0.0944393053650856, 0.11279883980751038, 0.15453705191612244, 0.23761722445487976, 0.3086778521537781, 0.3559635579586029, 0.3936071991920471, 0.40483424067497253, 0.4367983043193817, 0.4776119291782379, 0.500990629196167, 0.5287280678749084, 0.5638620853424072, 0.5960903167724609, 0.628582775592804, 0.6485272645950317, 0.6666226387023926, 0.6670188903808594, 0.6700568199157715, 0.6717738509178162, 0.6880200505256653, 0.6922467350959778, 0.6923788189888, 0.6970016956329346, 0.7074362635612488, 0.7132478952407837, 0.7129837274551392, 0.7172104120254517, 0.7129837274551392, 0.7055870890617371, 0.698718786239624, 0.7156254053115845, 0.7161537408828735, 0.7281733155250549, 0.7382115721702576, 0.7417778372764587, 0.739400327205658, 0.7441553473472595, 0.7440232634544373, 0.7437590956687927], "val_loss": [2.3015003204345703, 2.284752368927002, 2.260713577270508, 2.229689121246338, 2.186642646789551, 2.1190731525421143, 2.004403829574585, 1.811322569847107, 1.5268808603286743, 1.216993808746338, 1.0108715295791626, 0.9411399960517883, 0.8983753323554993, 0.8446477651596069, 0.7976000308990479, 0.7515349388122559, 0.7565702199935913, 0.7911789417266846, 0.7838789820671082, 0.7334890961647034, 0.6862735748291016, 0.6693546772003174, 0.6639546751976013, 0.6624331474304199, 0.6639517545700073, 0.6661863923072815, 0.6608753800392151, 0.654454231262207, 0.6502977013587952, 0.6472887396812439, 0.6419377326965332, 0.6332120895385742, 0.621099054813385, 0.6080967783927917, 0.5985780954360962, 0.5917069911956787, 0.5871749520301819, 0.5830514430999756, 0.5736743211746216, 0.5649172067642212], "val_accuracy": [0.09466666728258133, 0.16066665947437286, 0.3503333330154419, 0.44866666197776794, 0.44466665387153625, 0.4476666748523712, 0.4566666781902313, 0.5026666522026062, 0.5849999785423279, 0.6389999985694885, 0.6666666865348816, 0.6790000200271606, 0.6853333115577698, 0.706333339214325, 0.7196666598320007, 0.7296666502952576, 0.7286666631698608, 0.7333333492279053, 0.7273333072662354, 0.7276666760444641, 0.7400000095367432, 0.7490000128746033, 0.7563333511352539, 0.7493333220481873, 0.7486666440963745, 0.7596666812896729, 0.7646666765213013, 0.7676666378974915, 0.7716666460037231, 0.7673333287239075, 0.7666666507720947, 0.7676666378974915, 0.7699999809265137, 0.7730000019073486, 0.7773333191871643, 0.7720000147819519, 0.7689999938011169, 0.7689999938011169, 0.7746666669845581, 0.7773333191871643]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7665714025497437, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099335193634033, 1.5990533828735352, 1.14348566532135, 0.9660778641700745, 0.8615322709083557, 0.8168822526931763, 0.7754111886024475, 0.7344061136245728, 0.7103131413459778, 0.6948628425598145, 0.654110848903656, 0.6347187757492065, 0.652719259262085, 0.6364248991012573], "accuracy": [0.26641130447387695, 0.5155197381973267, 0.6028265953063965, 0.6514331102371216, 0.6848500967025757, 0.7045304179191589, 0.7144366502761841, 0.7347774505615234, 0.7416457533836365, 0.7412495017051697, 0.7605336308479309, 0.7651565074920654, 0.7602694630622864, 0.7626469135284424], "val_loss": [1.9242831468582153, 1.0900228023529053, 0.8814957141876221, 0.7852228283882141, 0.7154725790023804, 0.6968762874603271, 0.7025976777076721, 0.672295093536377, 0.6086030006408691, 0.5942556858062744, 0.5926069617271423, 0.5898149013519287, 0.6081549525260925, 0.6172419190406799], "val_accuracy": [0.5803333520889282, 0.6506666541099548, 0.6660000085830688, 0.7160000205039978, 0.734000027179718, 0.7196666598320007, 0.737333357334137, 0.7429999709129333, 0.7713333368301392, 0.7689999938011169, 0.7580000162124634, 0.7620000243186951, 0.7450000047683716, 0.7369999885559082]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 9, 3, 5, 3, 5, 7], [1, 0, 1, 0, 2], [26, 39, 4], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 6, 4, 7, 0, 5, 5, 4], [2, 2, 4, 4, 1, 3, 1], [16, 1], [1, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 12, 7, 5, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(beta, tf.math.add(beta, tf.math.negative(grad))), tf.math.square(tf.math.square(grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [28498016256.0, 1101327368192.0, 6727351664640.0, 21160815230976.0, 48595252281344.0, 94877152968704.0], "accuracy": [0.09602430462837219, 0.09708096832036972, 0.09813763201236725, 0.09919429570436478, 0.09681680053472519, 0.09787346422672272], "val_loss": [192280690688.0, 2521087082496.0, 10211518578688.0, 26759974092800.0, 55799334305792.0, 101065512976384.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [3, 1, 1, 0, 0], [0, 39, 24], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 4, 6, 3, 8, 2], [2, 0, 3, 1, 0, 3], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 13, 7, 6, 2, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 1, 3, 5], [0, 0, 1, 0, 2], [87, 39, 39], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 9, 7, 4, 7, 3, 1, 8, 3, 5], [1, 2, 0, 4, 0, 3, 1, 2, 3, 1, 1], [16, 4, 57], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 8], [7, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 2, 28, 17, 11, 3, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.pow(tf.math.negative(beta), tf.math.square(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), grad), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(grad, alpha), tf.math.sqrt(tf.math.multiply(beta, tf.math.square(grad)))), alpha), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.sqrt(alpha)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310244083404541, 2.3097081184387207, 2.3099236488342285, 2.309269428253174, 2.309553623199463, 2.310300588607788], "accuracy": [0.0882314071059227, 0.09087307006120682, 0.09298639744520187, 0.0886276587843895, 0.09377889335155487, 0.09179764986038208], "val_loss": [2.309063196182251, 2.309063196182251, 2.309063196182251, 2.309063196182251, 2.309063196182251, 2.309063196182251], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]