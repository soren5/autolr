[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118754386901855, 1.6071419715881348, 1.1558648347854614, 0.9733476042747498, 0.8894321918487549, 0.8414283394813538, 0.7928867340087891, 0.7347760796546936, 0.7471956610679626, 0.7166412472724915, 0.6733088493347168, 0.6568692326545715, 0.6344980597496033, 0.6410673260688782, 0.6296960115432739, 0.6053908467292786, 0.6114583611488342, 0.5829095244407654, 0.5711014270782471, 0.578050971031189, 0.5526482462882996, 0.5585881471633911, 0.5435537099838257, 0.5185753703117371, 0.519923746585846, 0.5207235813140869, 0.5153235793113708, 0.5021286010742188, 0.5016794204711914, 0.5146914720535278, 0.49308347702026367, 0.48410654067993164, 0.4760378301143646, 0.46870070695877075, 0.4601779878139496, 0.4543977379798889, 0.46415454149246216, 0.44680652022361755, 0.44691213965415955, 0.4359310567378998, 0.4351297616958618, 0.4360228478908539, 0.4287436306476593, 0.42071613669395447, 0.4207441508769989, 0.42236772179603577, 0.41935479640960693, 0.41098037362098694, 0.4076388478279114, 0.40546032786369324], "accuracy": [0.2657508850097656, 0.505349338054657, 0.5995244979858398, 0.6523576974868774, 0.6793025732040405, 0.6952846646308899, 0.7061154246330261, 0.7345132827758789, 0.7243428826332092, 0.7357020378112793, 0.7581561207771301, 0.7569673657417297, 0.7655527591705322, 0.7586844563484192, 0.7671377658843994, 0.7716285586357117, 0.7714964747428894, 0.7825914621353149, 0.7844406366348267, 0.7862898111343384, 0.7922335267066956, 0.7901201844215393, 0.7975168228149414, 0.8103289008140564, 0.8123101592063904, 0.8088759779930115, 0.8105930685997009, 0.8183859586715698, 0.8137630224227905, 0.8039889335632324, 0.8198388814926147, 0.8177255392074585, 0.8240655064582825, 0.8284242749214172, 0.8338396549224854, 0.835160493850708, 0.8286884427070618, 0.8385946154594421, 0.834632158279419, 0.8400475382804871, 0.8425571322441101, 0.8397833704948425, 0.845859169960022, 0.846387505531311, 0.8471800088882446, 0.8430854678153992, 0.8448025584220886, 0.8470479249954224, 0.8479725122451782, 0.852331280708313], "val_loss": [1.9235215187072754, 1.1127821207046509, 0.8627973794937134, 0.806105375289917, 0.7026095390319824, 0.6940615177154541, 0.6306342482566833, 0.6705837249755859, 0.6092948317527771, 0.5914000272750854, 0.5912285447120667, 0.5596316456794739, 0.5511761903762817, 0.553443968296051, 0.5525461435317993, 0.545013964176178, 0.5547837018966675, 0.5235398411750793, 0.5164010524749756, 0.4918757677078247, 0.5249542593955994, 0.4797271192073822, 0.4889472723007202, 0.46910208463668823, 0.48058536648750305, 0.479030966758728, 0.4853295087814331, 0.479747474193573, 0.45436400175094604, 0.45551618933677673, 0.4534432888031006, 0.4521908760070801, 0.45042479038238525, 0.43663400411605835, 0.43200740218162537, 0.4457651674747467, 0.42988505959510803, 0.4306498169898987, 0.42279037833213806, 0.41055062413215637, 0.4086835980415344, 0.4192321002483368, 0.41102099418640137, 0.4004899561405182, 0.39590662717819214, 0.4475054442882538, 0.3960646986961365, 0.3963715732097626, 0.39983460307121277, 0.40161776542663574], "val_accuracy": [0.5633333325386047, 0.6456666588783264, 0.7176666855812073, 0.7003333568572998, 0.7476666569709778, 0.7329999804496765, 0.7666666507720947, 0.7323333621025085, 0.7699999809265137, 0.7739999890327454, 0.7739999890327454, 0.7860000133514404, 0.7889999747276306, 0.7823333144187927, 0.7853333353996277, 0.7943333387374878, 0.7903333306312561, 0.7943333387374878, 0.7926666736602783, 0.8176666498184204, 0.7986666560173035, 0.8176666498184204, 0.8173333406448364, 0.8253333568572998, 0.8173333406448364, 0.8106666803359985, 0.8103333115577698, 0.8216666579246521, 0.8326666951179504, 0.8263333439826965, 0.8263333439826965, 0.8323333263397217, 0.8299999833106995, 0.8343333601951599, 0.8453333377838135, 0.8339999914169312, 0.8399999737739563, 0.8420000076293945, 0.8429999947547913, 0.8486666679382324, 0.8489999771118164, 0.8410000205039978, 0.8503333330154419, 0.8550000190734863, 0.8579999804496765, 0.8253333568572998, 0.8550000190734863, 0.8543333411216736, 0.8539999723434448, 0.8569999933242798]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303495407104492, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 5], [0, 0, 1, 0, 2], [0, 39, 53], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 2, 6, 3, 5, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 1, 1], [0, 3], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 3, 8, 4, 2, 5, 3, 1, 3, 2, 4, 8], [0, 0, 1, 1, 2, 3, 3, 0, 0, 3, 2, 2, 3], [0, 39, 39, 26], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 1], [1, 0, 3, 1, 0, 1], [16, 1], [0, 0, 1, 0, 1, 1], [0, 7, 3], [0, 6, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 17, 13, 4, 14, 8, 6, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.multiply(tf.math.sqrt(alpha), tf.math.pow(tf.math.add(tf.math.square(tf.math.multiply(grad, tf.math.subtract(grad, grad))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(grad), grad)))), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 2, 3, 1, 1, 5, 1, 6, 6, 6, 8, 9, 7, 3, 8, 0, 9, 9], [0, 0, 3, 0, 2, 1, 3, 3], [0, 39, 39, 65, 43, 79], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 4, 0, 6, 3, 8, 2], [2, 0, 4, 1, 1], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 26, 18, 8, 6, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.sqrt(grad), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309882640838623, 2.3094677925109863, 2.3107709884643555, 2.3100600242614746, 2.3097236156463623, 2.3104965686798096], "accuracy": [0.09060890227556229, 0.08757099509239197, 0.08955223858356476, 0.0882314071059227, 0.09219389408826828, 0.09192973375320435], "val_loss": [2.3094983100891113, 2.3094983100891113, 2.3094983100891113, 2.3094983100891113, 2.3094983100891113, 2.3094983100891113], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]