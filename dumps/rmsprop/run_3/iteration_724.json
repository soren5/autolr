[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214113712310791, 1.618801474571228, 1.1506109237670898, 0.9640241265296936, 0.8946036100387573, 0.8074196577072144, 0.7901036739349365, 0.7589228749275208, 0.7205660343170166, 0.7219509482383728, 0.6870344281196594, 0.6827730536460876, 0.6575058102607727, 0.6349842548370361, 0.6304709911346436, 0.6346908807754517, 0.610134482383728, 0.6034906506538391, 0.5758875608444214, 0.5663163661956787, 0.5577095150947571, 0.5719156265258789, 0.5393307209014893, 0.5365275144577026, 0.5190540552139282, 0.5386150479316711, 0.5253658890724182, 0.5032653212547302], "accuracy": [0.26244881749153137, 0.5054814219474792, 0.604939877986908, 0.6586976647377014, 0.6711134314537048, 0.7055870890617371, 0.7084929347038269, 0.7199841737747192, 0.7337207794189453, 0.7316074371337891, 0.7411174178123474, 0.7474573850631714, 0.7584202885627747, 0.7619865536689758, 0.7640998363494873, 0.7607977986335754, 0.7740060687065125, 0.7718927264213562, 0.787082314491272, 0.7901201844215393, 0.7976489067077637, 0.7902522683143616, 0.8055738806724548, 0.7955356240272522, 0.8067626357078552, 0.8001585006713867, 0.8037247657775879, 0.8158763647079468], "val_loss": [1.9312876462936401, 1.0978187322616577, 0.88137286901474, 0.7815400958061218, 0.696401059627533, 0.6581973433494568, 0.6621665954589844, 0.6396868228912354, 0.6726137399673462, 0.5757697224617004, 0.5772600769996643, 0.6126589775085449, 0.5554623007774353, 0.5340323448181152, 0.551850438117981, 0.5250101685523987, 0.567349910736084, 0.500049889087677, 0.5052711367607117, 0.5069034695625305, 0.4853381812572479, 0.49170905351638794, 0.4711497128009796, 0.47983336448669434, 0.4800052344799042, 0.5094277858734131, 0.4801740050315857, 0.46595028042793274], "val_accuracy": [0.6036666631698608, 0.6656666398048401, 0.6923333406448364, 0.7229999899864197, 0.7416666746139526, 0.750333309173584, 0.7396666407585144, 0.7680000066757202, 0.749666690826416, 0.7910000085830688, 0.7883333563804626, 0.7476666569709778, 0.7903333306312561, 0.8026666641235352, 0.7940000295639038, 0.79666668176651, 0.765999972820282, 0.8116666674613953, 0.8113333582878113, 0.812333345413208, 0.8193333148956299, 0.8226666450500488, 0.8273333311080933, 0.8199999928474426, 0.8190000057220459, 0.8109999895095825, 0.8143333196640015, 0.8226666450500488]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 85, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 2, 4, 6, 3, 8, 2, 4, 6, 4, 8, 7, 9], [2, 0, 3, 1, 2, 1, 0, 3, 1], [16, 32, 55], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 7, 8, 3, 8, 3, 8, 5, 4, 7, 8, 8, 2], [0, 6, 1, 2, 6, 7, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 22, 13, 9, 3, 20, 13, 7, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(grad, alpha), tf.math.divide_no_nan(beta, tf.math.pow(alpha, tf.math.sqrt(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)))))), alpha), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(grad), tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.pow(alpha, beta))), tf.math.add(grad, tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, grad)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5, 6, 9], [0, 0, 1, 0, 2], [26, 39, 39, 17], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [2, 2, 4, 4, 0, 5, 5, 4], [0, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [7, 7, 0, 2], [6, 1, 7, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 1, 0, 1, 1, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2, 5, 6], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 0, 1], [0, 7, 0], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 16, 9, 7, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29714.48828125, 4387852.0, 76357000.0, 530703104.0, 2362708224.0, 7701225472.0], "accuracy": [0.09826971590518951, 0.10249637067317963, 0.09972262382507324, 0.10579843819141388, 0.09906221181154251, 0.09972262382507324], "val_loss": [301055.78125, 16139928.0, 173070176.0, 943218304.0, 3532507136.0, 10419017728.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 4, 4, 6, 5, 5, 4, 3, 6, 9, 4, 5, 2, 8], [2, 0, 3, 1, 0, 1, 3, 3, 3, 4], [16, 1, 90], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 2, 2, 8, 2, 3, 2], [3, 6, 2, 0, 1, 7, 5, 2], [0, 4], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 25, 15, 10, 3, 16, 8, 8, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(grad), tf.math.square(tf.math.pow(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), alpha)))))), tf.math.pow(tf.math.square(grad), grad)), tf.math.add(grad, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.sqrt(grad), beta)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, tf.math.add(grad, grad)), beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29457.626953125, 4498327.5, 75857112.0, 531287072.0, 2367430144.0, 7739247616.0], "accuracy": [0.09642054885625839, 0.0940430611371994, 0.10157178342342377, 0.10276053100824356, 0.10210011899471283, 0.09945846349000931], "val_loss": [308744.28125, 16554809.0, 177523792.0, 967499520.0, 3623458304.0, 10687281152.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]