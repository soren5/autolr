[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2106118202209473, 1.6077678203582764, 1.1333366632461548, 0.99567049741745, 0.895083487033844, 0.8267433643341064, 0.798448920249939, 0.7638353109359741, 0.7476974725723267, 0.7000280618667603, 0.6981069445610046, 0.669635534286499, 0.6534043550491333, 0.630952000617981, 0.6395431160926819, 0.6179713606834412, 0.6028816103935242, 0.5945650935173035, 0.5685586333274841, 0.5813813209533691, 0.5750420093536377, 0.5536922216415405, 0.5446200370788574, 0.5481849908828735, 0.5301941633224487, 0.5330236554145813, 0.5229710936546326, 0.5059728622436523, 0.5172501802444458, 0.5096269249916077, 0.49299076199531555, 0.498546838760376, 0.4883681833744049, 0.4867076575756073, 0.4739953577518463, 0.4823426902294159], "accuracy": [0.2716946303844452, 0.49808478355407715, 0.5970149040222168, 0.6485272645950317, 0.6742834448814392, 0.6971337795257568, 0.7059833407402039, 0.7150970697402954, 0.7209087014198303, 0.7382115721702576, 0.7401928305625916, 0.7460044622421265, 0.7565711140632629, 0.7588165402412415, 0.7552502751350403, 0.7655527591705322, 0.7711002230644226, 0.7763835787773132, 0.7861577272415161, 0.7817989587783813, 0.7840443849563599, 0.7884030938148499, 0.7955356240272522, 0.7926297783851624, 0.8009510040283203, 0.7997622489929199, 0.8047813773155212, 0.8099326491355896, 0.8062343001365662, 0.8131026029586792, 0.8152159452438354, 0.8103289008140564, 0.8190463781356812, 0.8169330358505249, 0.8231409192085266, 0.8212917447090149], "val_loss": [1.9225072860717773, 1.1155222654342651, 0.8886353969573975, 0.7954460382461548, 0.7217351794242859, 0.710647702217102, 0.660416841506958, 0.6406591534614563, 0.6013005375862122, 0.6092602610588074, 0.622545063495636, 0.5748891234397888, 0.565435528755188, 0.5544057488441467, 0.5427468419075012, 0.524919331073761, 0.546739399433136, 0.5057090520858765, 0.5388386845588684, 0.5239031314849854, 0.5113947987556458, 0.5085681676864624, 0.4746675193309784, 0.466138631105423, 0.49959123134613037, 0.488166868686676, 0.449599027633667, 0.47179025411605835, 0.4769255816936493, 0.44767293334007263, 0.44353368878364563, 0.44514787197113037, 0.44641879200935364, 0.4453302323818207, 0.4427156448364258, 0.4362504780292511], "val_accuracy": [0.565666675567627, 0.6423333287239075, 0.6773333549499512, 0.7139999866485596, 0.7223333120346069, 0.75, 0.7549999952316284, 0.7590000033378601, 0.7760000228881836, 0.7663333415985107, 0.7603333592414856, 0.7739999890327454, 0.7850000262260437, 0.7979999780654907, 0.8080000281333923, 0.7996666431427002, 0.7979999780654907, 0.8073333501815796, 0.7906666398048401, 0.8119999766349792, 0.8166666626930237, 0.8083333373069763, 0.82833331823349, 0.8316666483879089, 0.8019999861717224, 0.8159999847412109, 0.8410000205039978, 0.8203333616256714, 0.8180000185966492, 0.8399999737739563, 0.8456666469573975, 0.8386666774749756, 0.8333333134651184, 0.8370000123977661, 0.8333333134651184, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 6, 4, 7, 0, 5, 5, 4, 9], [4, 0, 3, 1, 0], [16, 43, 56], [0, 0, 1, 1, 1], [7, 3, 0, 2], [0, 6, 6], [60], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 9, 5, 3, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(grad, alpha)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303251028060913, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 1, 3, 5, 4], [0, 0, 1, 0, 2, 0, 0], [26, 39, 39, 41, 75], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 5, 3, 1, 2, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 2, 3, 1, 3, 5, 9], [0, 0, 3, 2, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 9, 3, 3, 8], [4, 2, 0, 4, 0, 3, 1], [16, 66, 88], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 1], [0, 1, 1, 4], [0], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 15, 11, 4, 3, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.multiply(grad, beta), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08730682730674744, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 2, 1, 3, 3, 0], [0, 0, 1, 0, 2, 2], [26, 16, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 5, 1, 0], [16, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [7, 6, 0, 2, 2, 4, 0, 5, 3, 8], [0, 1, 1, 4, 2, 2, 7], [0], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 13, 7, 6, 3, 12, 7, 5, 1, 17, 10, 7, 1, 3, 2, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(alpha), grad), beta), tf.math.square(tf.math.multiply(beta, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [2.311199188232422, 2.3096656799316406, 2.3099656105041504, 2.3092169761657715, 2.308398723602295, 2.30818510055542], "accuracy": [0.0948355570435524, 0.09126931428909302, 0.09272222965955734, 0.09008057415485382, 0.09589222073554993, 0.09391097724437714], "val_loss": [2.308382749557495, 2.308382749557495, 2.308382749557495, 2.308382749557495, 2.308382749557495, 2.308382749557495], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]