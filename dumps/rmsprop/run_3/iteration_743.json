[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [26, 39, 30], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [2, 2, 4, 0, 0, 5, 5, 3, 7], [3, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2, 4, 1, 3, 3, 7, 6, 7, 3, 7, 3, 4, 9, 7], [0, 1, 4, 1, 2, 4, 4, 4, 4, 4, 7, 3, 5, 6, 7], [43, 50], [1], [0], [1], [0]], "fitness": -0.8254285454750061, "mapping_values": [1, 10, 5, 5, 3, 13, 8, 5, 2, 32, 17, 15, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, beta), tf.math.negative(tf.math.negative(tf.math.square(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.subtract(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(grad, alpha), beta), grad)), grad), tf.math.divide_no_nan(tf.math.add(grad, tf.math.multiply(tf.math.add(grad, tf.math.multiply(grad, grad)), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))), grad))), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2813620567321777, 2.020406484603882, 1.3943984508514404, 1.045110821723938, 0.9216879606246948, 0.860238254070282, 0.7739960551261902, 0.7536327242851257, 0.7285322546958923, 0.6633893847465515, 0.6454194784164429, 0.6174810528755188, 0.6016073822975159, 0.5877442955970764, 0.5822175145149231, 0.579838216304779, 0.5472974181175232, 0.5424201488494873, 0.5432395339012146, 0.5318960547447205, 0.5294429063796997, 0.5072352290153503, 0.5056982636451721, 0.5031661987304688, 0.4845690429210663, 0.47020137310028076, 0.4745732247829437, 0.487479567527771, 0.47368931770324707, 0.4538796842098236], "accuracy": [0.1604807823896408, 0.3901730179786682, 0.5255580544471741, 0.6312243938446045, 0.672170102596283, 0.6865671873092651, 0.7003037929534912, 0.7058512568473816, 0.7285695672035217, 0.7397965788841248, 0.7531369924545288, 0.7601373791694641, 0.7721568942070007, 0.7800818681716919, 0.7788931727409363, 0.7820631265640259, 0.7815347909927368, 0.7887993454933167, 0.7907806038856506, 0.7984414100646973, 0.7992339134216309, 0.8020076751708984, 0.807158887386322, 0.805177628993988, 0.8124422430992126, 0.8197067975997925, 0.819970965385437, 0.8121780753135681, 0.8206313848495483, 0.8298771381378174], "val_loss": [2.1978988647460938, 1.404179334640503, 0.84246826171875, 0.8378264904022217, 0.6831692457199097, 0.645906925201416, 0.658150851726532, 0.5859177112579346, 0.5649144649505615, 0.5477691292762756, 0.5328671336174011, 0.525083065032959, 0.5133221745491028, 0.5262587070465088, 0.5176801085472107, 0.5103338360786438, 0.505790650844574, 0.4844939112663269, 0.49391618371009827, 0.47809335589408875, 0.4719575047492981, 0.45343008637428284, 0.452898770570755, 0.45269641280174255, 0.45359912514686584, 0.44193243980407715, 0.4456283748149872, 0.4472305178642273, 0.45095813274383545, 0.44258952140808105], "val_accuracy": [0.42533332109451294, 0.6153333187103271, 0.706333339214325, 0.7113333344459534, 0.7390000224113464, 0.7609999775886536, 0.7599999904632568, 0.7706666588783264, 0.781333327293396, 0.7803333401679993, 0.7916666865348816, 0.7960000038146973, 0.8059999942779541, 0.8053333163261414, 0.8013333082199097, 0.8059999942779541, 0.8146666884422302, 0.8176666498184204, 0.8116666674613953, 0.8243333101272583, 0.8233333230018616, 0.8339999914169312, 0.8353333473205566, 0.8336666822433472, 0.847000002861023, 0.8373333215713501, 0.8336666822433472, 0.8383333086967468, 0.8443333506584167, 0.8460000157356262]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8242856860160828, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210226535797119, 1.589571475982666, 1.1635520458221436, 0.9558595418930054, 0.8796325325965881, 0.8274549841880798, 0.7672178745269775, 0.7464765906333923, 0.7287678122520447, 0.6925045251846313, 0.6781063079833984, 0.6746736168861389, 0.6546118259429932, 0.6380264163017273, 0.6216959357261658, 0.6296170949935913, 0.581062376499176, 0.5817275047302246, 0.5792925357818604, 0.566070556640625, 0.5551507472991943, 0.5702800750732422, 0.5563444495201111, 0.5359476804733276, 0.5312151312828064, 0.5253639221191406, 0.516523540019989, 0.5137416124343872, 0.5154772400856018, 0.49463483691215515, 0.4996505081653595, 0.4847794771194458, 0.4836116135120392, 0.47334781289100647, 0.4756368100643158, 0.47431620955467224, 0.46037986874580383, 0.46463871002197266], "accuracy": [0.27182671427726746, 0.5205389261245728, 0.5856558084487915, 0.6560559868812561, 0.6837934255599976, 0.6960771083831787, 0.7197200059890747, 0.7256637215614319, 0.7300224304199219, 0.7453441023826599, 0.7436270117759705, 0.7473253011703491, 0.7568352818489075, 0.7646281719207764, 0.7683265209197998, 0.7577598690986633, 0.7820631265640259, 0.7814027070999146, 0.7873464822769165, 0.7924976944923401, 0.7940827012062073, 0.7858935594558716, 0.7932901978492737, 0.7993659973144531, 0.8059701323509216, 0.8025360107421875, 0.8062343001365662, 0.8103289008140564, 0.8105930685997009, 0.819442629814148, 0.8165367841720581, 0.8214238286018372, 0.8231409192085266, 0.8256505131721497, 0.8230088353157043, 0.8245938420295715, 0.829216718673706, 0.8300092220306396], "val_loss": [1.9159091711044312, 1.0962146520614624, 0.878902018070221, 0.7609517574310303, 0.7387198805809021, 0.688474178314209, 0.6445603966712952, 0.6088753342628479, 0.5958611369132996, 0.583132803440094, 0.5764951109886169, 0.6195196509361267, 0.5656548738479614, 0.549153745174408, 0.5704877376556396, 0.5242878198623657, 0.50687175989151, 0.4983084797859192, 0.49995318055152893, 0.4857204556465149, 0.4970253109931946, 0.5870811343193054, 0.47356367111206055, 0.4764763116836548, 0.47502779960632324, 0.48414066433906555, 0.448067843914032, 0.46787190437316895, 0.44863399863243103, 0.44884076714515686, 0.44178205728530884, 0.4381456673145294, 0.4242565631866455, 0.43329596519470215, 0.44106557965278625, 0.4398466944694519, 0.43014106154441833, 0.43949630856513977], "val_accuracy": [0.6043333411216736, 0.6579999923706055, 0.6856666803359985, 0.7129999995231628, 0.7149999737739563, 0.7250000238418579, 0.7486666440963745, 0.7693333625793457, 0.7673333287239075, 0.7756666541099548, 0.7710000276565552, 0.7680000066757202, 0.7876666784286499, 0.7929999828338623, 0.7590000033378601, 0.8086666464805603, 0.8149999976158142, 0.8046666383743286, 0.815666675567627, 0.8213333487510681, 0.8053333163261414, 0.7480000257492065, 0.82833331823349, 0.8299999833106995, 0.8173333406448364, 0.8109999895095825, 0.8376666903495789, 0.8243333101272583, 0.8346666693687439, 0.8353333473205566, 0.8386666774749756, 0.8443333506584167, 0.8479999899864197, 0.8363333344459534, 0.8309999704360962, 0.8270000219345093, 0.8366666436195374, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 2, 1, 3, 5], [0, 2, 1, 1, 2], [26, 77, 39], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 4, 2, 0, 6, 5, 4, 8], [2, 0, 5, 5, 0, 3, 1], [16, 1], [1, 0, 0, 1, 1, 1, 0, 1], [2, 3, 0, 2], [6, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 16, 9, 7, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, grad)))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3031198978424072, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 2, 1, 3, 5, 8], [0, 0, 1, 0, 2], [24, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 1, 3, 8, 2, 8, 0], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 0, 1, 1], [3, 7, 8, 1], [0, 1, 1, 4, 2, 7, 7, 7, 4, 3, 3, 5, 5, 2, 7, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 14, 9, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.negative(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304339647293091, 2.3029487133026123, 2.3029375076293945, 2.3029353618621826, 2.3029794692993164, 2.302893877029419, 2.302938222885132, 2.302989959716797, 2.302978992462158], "accuracy": [0.08902391046285629, 0.09470347315073013, 0.0948355570435524, 0.09734513610601425, 0.1002509593963623, 0.09391097724437714, 0.09747721254825592, 0.09192973375320435, 0.09417514503002167], "val_loss": [2.3026740550994873, 2.3026654720306396, 2.302604913711548, 2.302600860595703, 2.30271315574646, 2.3026437759399414, 2.302625894546509, 2.302623748779297, 2.302628517150879], "val_accuracy": [0.09666666388511658, 0.0989999994635582, 0.10066666454076767, 0.10300000011920929, 0.10066666454076767, 0.10166666656732559, 0.09799999743700027, 0.09799999743700027, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [6, 2, 8, 4, 0, 5, 5, 5, 7, 6, 4, 1, 9], [2, 2, 0, 4, 0, 3, 1], [8, 1, 11], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 2, 3, 9, 8, 3, 5], [0, 1, 1, 4], [72, 53, 82], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 20, 13, 7, 3, 13, 9, 4, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(beta), tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)))))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.multiply(tf.math.square(alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30305814743042, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]