[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8002856969833374, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2114412784576416, 1.6179347038269043, 1.1487621068954468, 0.9781821370124817, 0.894602358341217, 0.8396008610725403, 0.7825801372528076, 0.799086332321167, 0.7163240313529968, 0.7085848450660706, 0.7102610468864441, 0.6624268889427185, 0.6480748057365417, 0.6511546969413757, 0.5997509956359863, 0.6332273483276367, 0.5936560034751892, 0.5836140513420105, 0.5763651132583618, 0.5719473361968994, 0.5680127143859863, 0.5632590651512146, 0.5352060198783875, 0.5404166579246521, 0.5310084819793701, 0.5171966552734375, 0.5138688087463379, 0.5097087025642395, 0.496918261051178, 0.49377161264419556, 0.473650723695755, 0.48318466544151306, 0.4828346371650696, 0.47546812891960144, 0.46385759115219116, 0.4734809696674347, 0.4679998457431793, 0.44404417276382446, 0.45353439450263977, 0.4396422505378723, 0.44422033429145813, 0.4320165812969208], "accuracy": [0.2666754722595215, 0.4934619069099426, 0.5983357429504395, 0.6505085229873657, 0.6700568199157715, 0.696209192276001, 0.7092854380607605, 0.7021529674530029, 0.739928662776947, 0.7360982894897461, 0.7289658188819885, 0.7516840696334839, 0.7601373791694641, 0.7581561207771301, 0.7755910754203796, 0.7613261342048645, 0.7810064554214478, 0.7829877138137817, 0.7886672616004944, 0.7880068421363831, 0.7905164361000061, 0.7882710099220276, 0.8010830879211426, 0.8018755912780762, 0.8021397590637207, 0.806630551815033, 0.8109893202781677, 0.8117818236351013, 0.81548011302948, 0.8161405324935913, 0.828820526599884, 0.8252542614936829, 0.8181217908859253, 0.8232730031013489, 0.8301413059234619, 0.8211596608161926, 0.830669641494751, 0.8412362933158875, 0.8334434032440186, 0.8393871188163757, 0.8325188159942627, 0.8392550349235535], "val_loss": [1.9241862297058105, 1.1032836437225342, 0.9014713764190674, 0.8124740123748779, 0.7219723463058472, 0.6661709547042847, 0.6575246453285217, 0.625808835029602, 0.6136461496353149, 0.6037319302558899, 0.6159923672676086, 0.5612465143203735, 0.5662566423416138, 0.5483147501945496, 0.5259824395179749, 0.5330447554588318, 0.5196018815040588, 0.5145890712738037, 0.5146288275718689, 0.5143964290618896, 0.5073413848876953, 0.4973067343235016, 0.4962315261363983, 0.5325368046760559, 0.48024845123291016, 0.4667590260505676, 0.470534086227417, 0.4747310280799866, 0.4605232775211334, 0.4553855061531067, 0.4678197503089905, 0.44656631350517273, 0.4696291983127594, 0.45552438497543335, 0.4494825303554535, 0.442282110452652, 0.42986661195755005, 0.4435592591762543, 0.4468497037887573, 0.4244609475135803, 0.42406758666038513, 0.4292347729206085], "val_accuracy": [0.4973333477973938, 0.6643333435058594, 0.6633333563804626, 0.6880000233650208, 0.7319999933242798, 0.7546666860580444, 0.7556666731834412, 0.762333333492279, 0.7716666460037231, 0.7693333625793457, 0.7593333125114441, 0.7856666445732117, 0.777999997138977, 0.7826666831970215, 0.79666668176651, 0.793666660785675, 0.8033333420753479, 0.8009999990463257, 0.8013333082199097, 0.8013333082199097, 0.8036666512489319, 0.8149999976158142, 0.8080000281333923, 0.7893333435058594, 0.824999988079071, 0.8166666626930237, 0.8216666579246521, 0.8166666626930237, 0.8299999833106995, 0.8236666917800903, 0.8230000138282776, 0.8333333134651184, 0.8186666369438171, 0.8240000009536743, 0.8356666564941406, 0.8333333134651184, 0.847000002861023, 0.8396666646003723, 0.8276666402816772, 0.8416666388511658, 0.8383333086967468, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 3, 5, 4], [0, 0, 1, 0, 3], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [9, 2, 0, 6, 3, 8, 2], [3, 5, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [5], [0]], "fitness": -0.36485713720321655, "mapping_values": [1, 12, 7, 5, 3, 1, 1, 0, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.3729450702667236, 2.6974101066589355, 2.3077406883239746, 2.3024322986602783, 2.2770678997039795, 2.22922682762146, 2.354341745376587, 2.304638385772705, 2.303365468978882, 2.302823066711426], "accuracy": [0.20604939758777618, 0.14793290197849274, 0.10540219396352768, 0.10130762308835983, 0.1438383311033249, 0.1826707124710083, 0.1438383311033249, 0.09721305221319199, 0.0940430611371994, 0.0936468094587326], "val_loss": [2.2330238819122314, 2.3136532306671143, 2.3050615787506104, 2.2993099689483643, 2.048830986022949, 2.039032459259033, 2.3032591342926025, 2.302412509918213, 2.3021981716156006, 2.3020684719085693], "val_accuracy": [0.23466666042804718, 0.10300000011920929, 0.0976666659116745, 0.1340000033378601, 0.3569999933242798, 0.3566666543483734, 0.10366666316986084, 0.10333333164453506, 0.10366666316986084, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 4, 0, 6, 3, 8, 2, 0, 5], [2, 0, 3, 1, 0, 3], [16, 80], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 7, 5, 4, 8, 0, 9], [0, 6, 1], [0, 14], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 15, 9, 6, 2, 10, 7, 3, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(grad), tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 1], [31, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 19], [0, 0, 1, 1], [0, 4], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 4, 3, 9], [0, 0, 3, 0, 2], [0, 39, 39, 44], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 9, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [0, 1, 1, 1], [0, 7], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 12, 7, 5, 4, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3096554279327393, 2.310181140899658, 2.3099071979522705, 2.311164140701294, 2.309706449508667, 2.3096365928649902], "accuracy": [0.08809932321310043, 0.0936468094587326, 0.09338264167308807, 0.08968432247638702, 0.08915598690509796, 0.09140139818191528], "val_loss": [2.3092734813690186, 2.3092734813690186, 2.3092734813690186, 2.3092734813690186, 2.3092734813690186, 2.3092734813690186], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]