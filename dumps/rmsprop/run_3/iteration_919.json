[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7845714092254639, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210784673690796, 1.6207853555679321, 1.1427106857299805, 0.960483968257904, 0.8867403268814087, 0.8354876637458801, 0.7824240326881409, 0.741347074508667, 0.7390894889831543, 0.7039977312088013, 0.6778128743171692, 0.6548541188240051, 0.6498622894287109, 0.6301194429397583, 0.6235566139221191, 0.6069573163986206, 0.6142992973327637], "accuracy": [0.2689208686351776, 0.5062739253044128, 0.6063928008079529, 0.6576409935951233, 0.6870955228805542, 0.696209192276001, 0.7129837274551392, 0.7236824631690979, 0.72672039270401, 0.739928662776947, 0.7535332441329956, 0.7582882046699524, 0.7564390301704407, 0.7700436115264893, 0.7724210619926453, 0.7730814814567566, 0.7711002230644226], "val_loss": [1.9237220287322998, 1.1649930477142334, 0.9254487156867981, 0.8517006635665894, 0.7223608493804932, 0.6768038868904114, 0.6943004727363586, 0.6711111068725586, 0.6504189372062683, 0.6181530356407166, 0.5981178283691406, 0.5759902000427246, 0.5802598595619202, 0.547641932964325, 0.5925450325012207, 0.5685099959373474, 0.552022397518158], "val_accuracy": [0.5606666803359985, 0.5816666483879089, 0.6386666893959045, 0.7013333439826965, 0.737666666507721, 0.7476666569709778, 0.7400000095367432, 0.7310000061988831, 0.7456666827201843, 0.7639999985694885, 0.7730000019073486, 0.7963333129882812, 0.7876666784286499, 0.793666660785675, 0.7739999890327454, 0.784333348274231, 0.7963333129882812]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 0, 1, 0, 1], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 0, 8, 6], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0], [7, 3, 9, 2], [0, 1, 1, 7], [66, 3], [0, 0, 1], [0, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 13, 9, 4, 2, 7, 4, 3, 2, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [2, 9, 4, 7, 6, 5, 5, 4], [5, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 0, 2], [0, 1, 1, 2], [0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 4, 3, 0, 4, 8, 5, 5, 5, 9], [6, 1, 3, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 3, 2, 1, 1, 6, 3, 3, 1, 15, 11, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(grad, tf.math.multiply(tf.math.negative(tf.math.pow(alpha, sigma)), grad)), tf.math.sqrt(tf.math.square(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 8, 5, 5, 5, 4], [1, 1, 0, 4, 0, 3, 1], [16, 51], [1, 0, 0, 0, 0, 1, 1, 1], [7, 3, 0, 2], [6, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29947.740234375, 4469719.5, 77062400.0, 532791616.0, 2340699136.0, 7710399488.0], "accuracy": [0.09179764986038208, 0.09576013684272766, 0.09906221181154251, 0.1006472036242485, 0.10460969805717468, 0.1018359512090683], "val_loss": [303909.0625, 16294161.0, 174726256.0, 952249088.0, 3566338816.0, 10518777856.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 1, 6, 3, 8, 2, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 6, 5, 1], [0], [1], [0], [2], [0]], "fitness": -0.08742856979370117, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309551954269409, 2.3098857402801514, 2.310180187225342, 2.309877872467041, 2.309420347213745, 2.3100228309631348], "accuracy": [0.08994849026203156, 0.08875974267721176, 0.09377889335155487, 0.08691058307886124, 0.09140139818191528, 0.08598599582910538], "val_loss": [2.3088884353637695, 2.3088884353637695, 2.3088884353637695, 2.3088884353637695, 2.3088884353637695, 2.3088884353637695], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]