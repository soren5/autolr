[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 0, 3, 5, 5], [2, 0, 3, 4, 0], [16, 1], [0, 0, 1, 1], [0, 3], [0, 1], [0], [1], [0], [1], [0]], "fitness": -0.8640000224113464, "mapping_values": [1, 10, 5, 5, 3, 11, 7, 4, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.094151735305786, 1.3882733583450317, 0.9449622631072998, 0.7542887330055237, 0.6653364300727844, 0.6123809814453125, 0.571014404296875, 0.5415046811103821, 0.5136042237281799, 0.48325100541114807, 0.45103219151496887, 0.43477341532707214, 0.42370668053627014, 0.4172060489654541, 0.39630377292633057, 0.38267725706100464, 0.37752974033355713, 0.36027809977531433, 0.3463052809238434, 0.3435782790184021, 0.3393411934375763, 0.3196658492088318, 0.31609436869621277, 0.3181915283203125, 0.3138122856616974, 0.2917603552341461, 0.2874463200569153, 0.27969828248023987, 0.2698565721511841, 0.2599274516105652, 0.25458863377571106, 0.268848717212677, 0.2537553608417511, 0.2403108775615692, 0.24829329550266266, 0.2326507717370987, 0.2241906225681305, 0.2228294163942337, 0.22097860276699066, 0.20976707339286804, 0.2046913504600525, 0.21091116964817047, 0.2057671695947647, 0.19242450594902039, 0.18294739723205566, 0.1845606416463852], "accuracy": [0.2851670980453491, 0.5489367246627808, 0.64667809009552, 0.7067758440971375, 0.7434949278831482, 0.7548540234565735, 0.7779685854911804, 0.789459764957428, 0.8068947196006775, 0.8158763647079468, 0.8226125836372375, 0.8379341959953308, 0.8403117060661316, 0.8413683772087097, 0.8490291833877563, 0.8512746095657349, 0.8558974862098694, 0.8642187118530273, 0.8654074668884277, 0.8679170608520508, 0.8671245574951172, 0.8775591254234314, 0.8751816153526306, 0.8787478804588318, 0.8836349248886108, 0.8857482671737671, 0.8899748921394348, 0.8905032277107239, 0.8924844861030579, 0.9027869701385498, 0.901862382888794, 0.8956544995307922, 0.9006736278533936, 0.9056927561759949, 0.901862382888794, 0.9097873568534851, 0.9124290347099304, 0.9115044474601746, 0.9108440279960632, 0.9166556596755981, 0.9190331697463989, 0.9158631563186646, 0.9196935892105103, 0.9228635430335999, 0.9249768853187561, 0.9260335564613342], "val_loss": [1.0477627515792847, 0.9874409437179565, 0.6845077276229858, 0.6230834126472473, 0.5759083032608032, 0.5278292894363403, 0.5029460191726685, 0.478335440158844, 0.44320377707481384, 0.4312228262424469, 0.40777865052223206, 0.3948100507259369, 0.39689648151397705, 0.3989790081977844, 0.3827349841594696, 0.3775750398635864, 0.3734096586704254, 0.3735611140727997, 0.3611333966255188, 0.36832085251808167, 0.3563389480113983, 0.3623865842819214, 0.3597482442855835, 0.3594178855419159, 0.3642641305923462, 0.35348454117774963, 0.36682093143463135, 0.3597624599933624, 0.34932851791381836, 0.36092066764831543, 0.37269604206085205, 0.3598594665527344, 0.36875495314598083, 0.35989511013031006, 0.3553566038608551, 0.36101233959198, 0.36627131700515747, 0.3812447786331177, 0.3623507618904114, 0.365321546792984, 0.36226433515548706, 0.3815944790840149, 0.3795269727706909, 0.37946492433547974, 0.3673567771911621, 0.3782532513141632], "val_accuracy": [0.6520000100135803, 0.6643333435058594, 0.7296666502952576, 0.7516666650772095, 0.7676666378974915, 0.7940000295639038, 0.796999990940094, 0.8100000023841858, 0.8306666612625122, 0.8379999995231628, 0.8503333330154419, 0.8610000014305115, 0.8569999933242798, 0.8566666841506958, 0.8606666922569275, 0.8666666746139526, 0.8633333444595337, 0.8659999966621399, 0.8730000257492065, 0.8713333606719971, 0.8706666827201843, 0.8723333477973938, 0.8769999742507935, 0.8736666440963745, 0.8766666650772095, 0.8803333044052124, 0.8830000162124634, 0.8759999871253967, 0.8813333511352539, 0.8786666393280029, 0.8799999952316284, 0.8836666941642761, 0.8816666603088379, 0.8799999952316284, 0.8826666474342346, 0.8843333125114441, 0.8823333382606506, 0.8840000033378601, 0.8880000114440918, 0.8826666474342346, 0.890666663646698, 0.8793333172798157, 0.8830000162124634, 0.8846666812896729, 0.8849999904632568, 0.8899999856948853]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8417142629623413, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211933135986328, 1.609838604927063, 1.1546887159347534, 0.9541423320770264, 0.9034683704376221, 0.8273043632507324, 0.8012076616287231, 0.7469980716705322, 0.7323513627052307, 0.7193518280982971, 0.6771962642669678, 0.6738908290863037, 0.6566457748413086, 0.6445369124412537, 0.631956934928894, 0.6039596796035767, 0.6033676266670227, 0.5951314568519592, 0.5746507048606873, 0.5568599700927734, 0.5502411127090454, 0.549721360206604, 0.5604291558265686, 0.5202360153198242, 0.512782096862793, 0.5176944136619568, 0.5122325420379639, 0.5009309649467468, 0.4936583340167999, 0.4920479357242584, 0.489470511674881, 0.4904033839702606, 0.46635153889656067, 0.4732145369052887, 0.4640175402164459, 0.45637357234954834, 0.45309966802597046, 0.44335275888442993, 0.43636050820350647, 0.44628655910491943, 0.4396246671676636, 0.4240340292453766], "accuracy": [0.26984545588493347, 0.4943864643573761, 0.5995244979858398, 0.6672830581665039, 0.6719059348106384, 0.69673752784729, 0.7062475085258484, 0.7269845604896545, 0.7289658188819885, 0.7346453666687012, 0.7493065595626831, 0.7481178045272827, 0.7560427784919739, 0.763439416885376, 0.763967752456665, 0.7775723338127136, 0.7783648371696472, 0.7802139520645142, 0.7865539789199829, 0.7972526550292969, 0.7987055778503418, 0.7980451583862305, 0.7964601516723633, 0.8088759779930115, 0.8117818236351013, 0.8072909712791443, 0.8129705190658569, 0.8206313848495483, 0.8240655064582825, 0.8222163319587708, 0.8202351331710815, 0.8187822103500366, 0.8300092220306396, 0.8300092220306396, 0.82683926820755, 0.8317263126373291, 0.8337075710296631, 0.841500461101532, 0.8391229510307312, 0.8322546482086182, 0.844010055065155, 0.8487650156021118], "val_loss": [1.9177188873291016, 1.112840175628662, 0.9604501128196716, 0.7723568677902222, 0.7462753057479858, 0.7187865972518921, 0.7275107502937317, 0.6776302456855774, 0.6497159004211426, 0.6157828569412231, 0.6376532912254333, 0.5948217511177063, 0.6185411810874939, 0.6410008072853088, 0.583170473575592, 0.5793009400367737, 0.5557509064674377, 0.5631601214408875, 0.5512290000915527, 0.5430211424827576, 0.5702184438705444, 0.5253048539161682, 0.5165157318115234, 0.5094729065895081, 0.5082677602767944, 0.5234144926071167, 0.4987281858921051, 0.5066872835159302, 0.4950307607650757, 0.5035204887390137, 0.49154236912727356, 0.4870338439941406, 0.4765965938568115, 0.47165340185165405, 0.4687381982803345, 0.4702887237071991, 0.4689885973930359, 0.46406811475753784, 0.4590582251548767, 0.46442538499832153, 0.465401828289032, 0.4641736149787903], "val_accuracy": [0.5043333172798157, 0.6423333287239075, 0.640666663646698, 0.7179999947547913, 0.7266666889190674, 0.7303333282470703, 0.7286666631698608, 0.7573333382606506, 0.7720000147819519, 0.7773333191871643, 0.7549999952316284, 0.7820000052452087, 0.765999972820282, 0.7563333511352539, 0.7766666412353516, 0.7716666460037231, 0.7983333468437195, 0.7910000085830688, 0.7979999780654907, 0.800000011920929, 0.7826666831970215, 0.8146666884422302, 0.8090000152587891, 0.8203333616256714, 0.8199999928474426, 0.8106666803359985, 0.8253333568572998, 0.815666675567627, 0.8213333487510681, 0.815666675567627, 0.8256666660308838, 0.8276666402816772, 0.8299999833106995, 0.8356666564941406, 0.8386666774749756, 0.8363333344459534, 0.8399999737739563, 0.8333333134651184, 0.8366666436195374, 0.8356666564941406, 0.8346666693687439, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 6, 3, 5, 1, 2, 1, 6, 2, 6], [0, 1, 1, 0, 0, 2, 1, 1, 0, 1, 1], [0, 39, 39, 89], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0], [0, 8], [0, 6], [27], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)), alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha)))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3039605617523193, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 23, 12, 11, 4, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 1, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3, 5, 5], [2, 1, 3, 4, 0], [16, 1], [0, 0, 1, 1], [0, 3], [0, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 4, 2, 2, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.sqrt(alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12310130894184113, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 2, 8, 2, 0, 4, 6, 0, 1, 1, 1], [2, 0, 4, 4, 0, 4, 2, 0, 3, 0], [16, 1, 74, 44], [0, 0, 1, 1], [0, 3], [1, 1], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 24, 14, 10, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(grad)))), tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 7, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 4, 0, 3, 5, 5], [2, 0, 1, 5, 0], [16, 1], [0, 0, 1, 1], [0, 3], [5, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 7, 4, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.pow(beta, tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29400.564453125, 4479690.0, 76285096.0, 543321920.0, 2340043264.0, 7809232384.0], "accuracy": [0.10421344637870789, 0.09879804402589798, 0.09760929644107819, 0.09642054885625839, 0.09879804402589798, 0.09496764093637466], "val_loss": [304523.1875, 16326806.0, 175075792.0, 954153024.0, 3573468672.0, 10539803648.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]