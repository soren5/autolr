[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8102856874465942, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208968162536621, 1.5945156812667847, 1.1547234058380127, 0.9936556816101074, 0.8698253631591797, 0.833007276058197, 0.7697204351425171, 0.7473965883255005, 0.7343160510063171, 0.7000632286071777, 0.683170735836029, 0.6544443368911743, 0.6303257942199707, 0.6215859055519104, 0.6211292743682861, 0.6079921126365662, 0.5883374810218811, 0.5681639313697815, 0.5568856000900269, 0.553451418876648, 0.5470103025436401, 0.5490102171897888, 0.5300428867340088, 0.5307478308677673, 0.5135940313339233, 0.511260449886322, 0.5119364261627197, 0.4992032051086426, 0.4854336082935333, 0.49841392040252686, 0.4906313121318817, 0.47596296668052673, 0.48182225227355957, 0.46933791041374207, 0.46853798627853394, 0.44196000695228577, 0.44648438692092896, 0.4492635130882263, 0.44819754362106323, 0.4348832964897156, 0.434537798166275, 0.42142200469970703, 0.4309866726398468, 0.420972615480423, 0.41136136651039124, 0.41245266795158386, 0.40463563799858093, 0.4054960608482361, 0.4004514515399933, 0.39469802379608154, 0.41044163703918457, 0.40488898754119873, 0.3872808814048767, 0.39121875166893005, 0.38729164004325867, 0.3789833188056946, 0.3825722336769104, 0.3752615451812744], "accuracy": [0.26482629776000977, 0.5085193514823914, 0.5971469879150391, 0.6452252268791199, 0.6790384650230408, 0.7005679607391357, 0.7180029153823853, 0.7252674698829651, 0.733060359954834, 0.739400327205658, 0.7458723783493042, 0.7548540234565735, 0.7667415142059326, 0.769911527633667, 0.7738739848136902, 0.7708360552787781, 0.7799497842788696, 0.7898560166358948, 0.7956677079200745, 0.7979130744934082, 0.7981772422790527, 0.7979130744934082, 0.8014793395996094, 0.8031964302062988, 0.8140271902084351, 0.8142913579940796, 0.8101968169212341, 0.8183859586715698, 0.8224804997444153, 0.817461371421814, 0.8178576231002808, 0.8260467648506165, 0.8216879963874817, 0.8249900937080383, 0.8319904804229736, 0.839519202709198, 0.835160493850708, 0.8399154543876648, 0.8359529972076416, 0.844010055065155, 0.843481719493866, 0.8453308939933777, 0.8409721255302429, 0.8446704745292664, 0.8465195894241333, 0.8507462739944458, 0.8553691506385803, 0.8524633646011353, 0.8549728989601135, 0.8521991968154907, 0.8507462739944458, 0.8543124794960022, 0.8595958352088928, 0.8564258217811584, 0.8599920868873596, 0.8627657890319824, 0.8625016212463379, 0.8646149635314941], "val_loss": [1.915975570678711, 1.119748592376709, 0.8855218291282654, 0.7834490537643433, 0.7359481453895569, 0.7191946506500244, 0.6770609021186829, 0.7218189239501953, 0.6615244746208191, 0.7095024585723877, 0.6283853054046631, 0.6042935252189636, 0.5858976244926453, 0.5940549969673157, 0.5813485383987427, 0.5797855854034424, 0.5747091174125671, 0.5548791289329529, 0.5499077439308167, 0.5357538461685181, 0.5431050062179565, 0.5162438154220581, 0.5125061273574829, 0.5082780718803406, 0.513009250164032, 0.5051835775375366, 0.49505797028541565, 0.4947482645511627, 0.48138776421546936, 0.484479159116745, 0.4719683825969696, 0.4756401777267456, 0.4678611159324646, 0.47146642208099365, 0.4576876163482666, 0.47085171937942505, 0.4687484800815582, 0.4571923315525055, 0.4524837136268616, 0.45441967248916626, 0.4509407579898834, 0.44401785731315613, 0.4395504593849182, 0.44972893595695496, 0.4306570589542389, 0.433066189289093, 0.43554720282554626, 0.4257860481739044, 0.42574915289878845, 0.42943525314331055, 0.4428294003009796, 0.429067462682724, 0.41730526089668274, 0.42138761281967163, 0.4324738681316376, 0.41874459385871887, 0.4117463231086731, 0.41018542647361755], "val_accuracy": [0.4880000054836273, 0.6240000128746033, 0.687666654586792, 0.721666693687439, 0.7303333282470703, 0.7170000076293945, 0.7516666650772095, 0.7266666889190674, 0.7563333511352539, 0.7173333168029785, 0.7586666941642761, 0.7789999842643738, 0.781333327293396, 0.7796666622161865, 0.7786666750907898, 0.7796666622161865, 0.7803333401679993, 0.7863333225250244, 0.7860000133514404, 0.7960000038146973, 0.7940000295639038, 0.8066666722297668, 0.8083333373069763, 0.8106666803359985, 0.8109999895095825, 0.8076666593551636, 0.8136666417121887, 0.8143333196640015, 0.8263333439826965, 0.8256666660308838, 0.8286666870117188, 0.8273333311080933, 0.8270000219345093, 0.8263333439826965, 0.8326666951179504, 0.824999988079071, 0.8263333439826965, 0.8336666822433472, 0.8376666903495789, 0.8343333601951599, 0.8333333134651184, 0.8333333134651184, 0.843666672706604, 0.8356666564941406, 0.843666672706604, 0.8433333039283752, 0.843666672706604, 0.846666693687439, 0.8393333554267883, 0.8483333587646484, 0.8336666822433472, 0.8379999995231628, 0.8510000109672546, 0.8450000286102295, 0.8416666388511658, 0.8460000157356262, 0.8450000286102295, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 2, 2], [22, 39, 88], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 9, 4, 4, 7, 5, 5, 3, 7, 7, 9, 7], [1, 2, 0, 4, 0, 3, 1], [16, 1, 93, 91], [0, 0, 0, 1, 1, 1, 1, 1], [0, 7, 2, 4], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 19, 12, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.pow(tf.math.add(tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [2, 9, 4, 7, 0, 5, 4, 4], [5, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 2, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.negative(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 1], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3102798461914062, 2.310323715209961, 2.3107945919036865, 2.3106086254119873, 2.30951189994812, 2.310561180114746], "accuracy": [0.08611807972192764, 0.09047681838274002, 0.09166556596755981, 0.09153348207473755, 0.09496764093637466, 0.08994849026203156], "val_loss": [2.308992862701416, 2.308992862701416, 2.308992862701416, 2.308992862701416, 2.308992862701416, 2.308992862701416], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 7, 6, 5], [0, 0, 1, 0, 2], [26, 39, 7], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [2, 9, 4, 7, 1, 5, 5, 4, 0, 6, 4, 7], [1, 2, 0, 4, 0, 3, 1, 4], [16, 1, 43], [0, 0, 0, 1, 1, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.06828571110963821, "mapping_values": [1, 10, 5, 5, 3, 20, 12, 8, 3, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.subtract(tf.math.square(tf.math.square(tf.math.pow(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad), tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [480073351168.0, 2672468951040.0, 4880777871360.0, 7554275999744.0, 9866451091456.0, 12560541679616.0, 15256134877184.0], "accuracy": [0.08175934851169586, 0.07621186226606369, 0.07792893797159195, 0.08730682730674744, 0.08175934851169586, 0.08030643314123154, 0.07858935743570328], "val_loss": [1545016180736.0, 3633643257856.0, 5626761052160.0, 7701223440384.0, 9801964716032.0, 11955758694400.0, 14151381417984.0], "val_accuracy": [0.06233333423733711, 0.06599999964237213, 0.06400000303983688, 0.05833333358168602, 0.035999998450279236, 0.023666666820645332, 0.020999999716877937]}}]