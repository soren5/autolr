[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2086312770843506, 1.596814513206482, 1.153610110282898, 0.9608080387115479, 0.9027572274208069, 0.8173395991325378, 0.8175265789031982, 0.7599911093711853, 0.724058985710144, 0.7107993364334106, 0.681983470916748, 0.6781424880027771, 0.6590402126312256, 0.6519852876663208, 0.6478736400604248, 0.6147704720497131, 0.6117925643920898, 0.602332592010498, 0.5751672983169556, 0.5859891176223755, 0.562325119972229, 0.5615997314453125, 0.5624008178710938, 0.539854884147644, 0.5404026508331299, 0.5363519787788391, 0.5360828042030334, 0.5327202081680298, 0.5152711868286133, 0.5036372542381287, 0.5088522434234619, 0.49391862750053406, 0.4945160746574402, 0.4822651147842407, 0.47283992171287537, 0.46451422572135925, 0.46888354420661926, 0.4621568024158478, 0.46479740738868713, 0.4486097991466522, 0.4710257649421692, 0.444214791059494, 0.4358130097389221, 0.43622204661369324, 0.436557799577713, 0.4295603632926941, 0.42782798409461975, 0.43210673332214355, 0.4294082820415497, 0.4151512682437897, 0.4132344424724579, 0.41012677550315857, 0.4041045606136322, 0.40781185030937195, 0.39383965730667114, 0.40619343519210815, 0.39711853861808777, 0.38468268513679504, 0.38673990964889526, 0.3825629651546478, 0.3758987784385681, 0.3697805106639862, 0.38279005885124207, 0.3700924217700958, 0.37447217106819153], "accuracy": [0.26878878474235535, 0.5135384798049927, 0.5951657891273499, 0.6564522385597229, 0.6705851554870605, 0.6979262828826904, 0.6966054439544678, 0.7186633348464966, 0.7301545143127441, 0.7347774505615234, 0.7446836829185486, 0.7473253011703491, 0.7540615797042847, 0.7585523724555969, 0.752212405204773, 0.7648923397064209, 0.7697794437408447, 0.7763835787773132, 0.7858935594558716, 0.7844406366348267, 0.7857614755630493, 0.7885351777076721, 0.7878747582435608, 0.7981772422790527, 0.7944789528846741, 0.8012151718139648, 0.7979130744934082, 0.7973847389221191, 0.8055738806724548, 0.8145555257797241, 0.8092722296714783, 0.8129705190658569, 0.8113855719566345, 0.8206313848495483, 0.83119797706604, 0.8261788487434387, 0.8261788487434387, 0.8330471515655518, 0.8230088353157043, 0.8329150676727295, 0.822348415851593, 0.8372738361358643, 0.834632158279419, 0.8387266993522644, 0.8400475382804871, 0.8446704745292664, 0.8417646288871765, 0.8378021121025085, 0.8441421389579773, 0.846387505531311, 0.8506141901016235, 0.8485008478164673, 0.8556333184242249, 0.8479725122451782, 0.8588033318519592, 0.8510104417800903, 0.8508783578872681, 0.8553691506385803, 0.8556333184242249, 0.8568220734596252, 0.8607845902442932, 0.8617091774940491, 0.8564258217811584, 0.8625016212463379, 0.8590674996376038], "val_loss": [1.9174834489822388, 1.1311815977096558, 0.9083633422851562, 0.8068183660507202, 0.7654072046279907, 0.7580575942993164, 0.7237774133682251, 0.7059491276741028, 0.6476299166679382, 0.6215335130691528, 0.6531967520713806, 0.6008200645446777, 0.6171409487724304, 0.6084171533584595, 0.5856441259384155, 0.5666465163230896, 0.5931325554847717, 0.5460846424102783, 0.5476755499839783, 0.5556861162185669, 0.5561589598655701, 0.5193524360656738, 0.5400900840759277, 0.5126451253890991, 0.5043199062347412, 0.5242024064064026, 0.538195788860321, 0.4929584264755249, 0.5266504883766174, 0.49838346242904663, 0.5029336810112, 0.48259708285331726, 0.4768604338169098, 0.4774201512336731, 0.4685066342353821, 0.45967888832092285, 0.5041179060935974, 0.45745474100112915, 0.45522457361221313, 0.4666871428489685, 0.44943132996559143, 0.4420394003391266, 0.46908751130104065, 0.44105884432792664, 0.43522006273269653, 0.4335459768772125, 0.44079625606536865, 0.44752782583236694, 0.4298087954521179, 0.4386024475097656, 0.4406527578830719, 0.44070911407470703, 0.4367387592792511, 0.41796088218688965, 0.4232120215892792, 0.43700334429740906, 0.4265918731689453, 0.41784578561782837, 0.4120778441429138, 0.4115777313709259, 0.41979068517684937, 0.4263480305671692, 0.41492486000061035, 0.42001545429229736, 0.4133990406990051], "val_accuracy": [0.5260000228881836, 0.6196666955947876, 0.671999990940094, 0.7016666531562805, 0.7070000171661377, 0.7203333377838135, 0.7183333039283752, 0.7233333587646484, 0.7633333206176758, 0.7673333287239075, 0.7673333287239075, 0.7803333401679993, 0.7723333239555359, 0.7703333497047424, 0.7680000066757202, 0.8009999990463257, 0.7609999775886536, 0.8019999861717224, 0.7983333468437195, 0.7983333468437195, 0.7796666622161865, 0.812666654586792, 0.8019999861717224, 0.8103333115577698, 0.8233333230018616, 0.8019999861717224, 0.7803333401679993, 0.8253333568572998, 0.8053333163261414, 0.8196666836738586, 0.8130000233650208, 0.8293333053588867, 0.8383333086967468, 0.8346666693687439, 0.8353333473205566, 0.8403333425521851, 0.8116666674613953, 0.8356666564941406, 0.8363333344459534, 0.8276666402816772, 0.8416666388511658, 0.8420000076293945, 0.8309999704360962, 0.8403333425521851, 0.843999981880188, 0.8456666469573975, 0.8383333086967468, 0.8346666693687439, 0.8463333249092102, 0.8489999771118164, 0.847000002861023, 0.8489999771118164, 0.8476666808128357, 0.8526666760444641, 0.8523333072662354, 0.8399999737739563, 0.8496666550636292, 0.8533333539962769, 0.8533333539962769, 0.8566666841506958, 0.8510000109672546, 0.840666651725769, 0.8500000238418579, 0.8533333539962769, 0.8483333587646484]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [1, 0, 1, 0, 1], [0, 39, 52], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 5, 1, 9, 6, 7, 8, 5, 8, 8, 6, 7, 5, 0, 7, 8], [2, 0, 3, 1, 0, 3, 1, 0, 3, 5, 4], [16, 1, 28, 79], [0, 0, 0, 0], [0, 9], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 34, 23, 11, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.sqrt(grad), grad)), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 8, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 4, 8, 2, 0, 0, 1, 8, 2], [2, 0, 3, 1, 0, 5, 3], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 19, 12, 7, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.pow(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), tf.math.negative(alpha))), tf.math.subtract(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 1, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [7, 2, 0, 6, 3, 8, 3], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [2, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 11, 6, 5, 2, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(alpha, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [239.50531005859375, 324.9123229980469, 324.90997314453125, 324.9053955078125, 324.901123046875, 324.9020690917969], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [324.689697265625, 324.65289306640625, 324.6480407714844, 324.6400146484375, 324.63629150390625, 324.633056640625], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2, 4], [0, 0, 1, 0, 1, 3, 1], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0], [0, 7, 5, 5, 9], [0, 6], [0, 53], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 6, 8, 3], [2, 2, 1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 4, 2, 2, 1, 6, 5, 1, 2, 9, 5, 4, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.pow(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(beta, tf.math.sqrt(beta)), tf.math.multiply(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]