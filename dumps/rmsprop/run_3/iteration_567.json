[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [2, 2, 4, 6, 3, 5, 5, 4, 4, 6, 9], [2, 2, 1, 2, 0, 3, 1, 4], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1], [7, 3, 0, 3, 9], [0, 1, 1, 2], [0, 23], [1], [0], [1], [0]], "fitness": -0.8751428723335266, "mapping_values": [1, 10, 5, 5, 3, 19, 11, 8, 2, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.square(beta)), tf.math.pow(tf.math.pow(beta, alpha), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1101133823394775, 1.1728055477142334, 0.8278010487556458, 0.7000156044960022, 0.6319002509117126, 0.5665208101272583, 0.5353154540061951, 0.505588173866272, 0.48149368166923523, 0.4592247009277344, 0.43782487511634827, 0.4120015501976013, 0.4017978310585022, 0.38786911964416504, 0.37558797001838684, 0.36507555842399597, 0.3543311357498169, 0.34268513321876526, 0.32822251319885254, 0.3134804666042328, 0.3068898916244507, 0.30184054374694824, 0.29607412219047546, 0.2823399603366852, 0.2901594638824463, 0.27357152104377747], "accuracy": [0.29824328422546387, 0.6037511825561523, 0.6845859289169312, 0.7302865982055664, 0.7563069462776184, 0.7796856164932251, 0.7944789528846741, 0.802271842956543, 0.8153480291366577, 0.8318583965301514, 0.837537944316864, 0.847840428352356, 0.8543124794960022, 0.8565579056739807, 0.8619733452796936, 0.8619733452796936, 0.8648791313171387, 0.8708229064941406, 0.8795403242111206, 0.8858803510665894, 0.884691596031189, 0.8848236799240112, 0.8869370222091675, 0.8944657444953918, 0.8885219693183899, 0.8971073627471924], "val_loss": [1.0721890926361084, 0.7693263292312622, 0.6581770181655884, 0.5993555188179016, 0.5501671433448792, 0.5276157259941101, 0.498625248670578, 0.46973544359207153, 0.45000988245010376, 0.4326566159725189, 0.41885754466056824, 0.408236563205719, 0.4012612998485565, 0.39158138632774353, 0.38760632276535034, 0.3905433714389801, 0.37751489877700806, 0.38538703322410583, 0.38071826100349426, 0.3811711072921753, 0.3688890337944031, 0.3783136010169983, 0.37787285447120667, 0.38517507910728455, 0.38077306747436523, 0.3782237470149994], "val_accuracy": [0.6386666893959045, 0.6956666707992554, 0.7473333477973938, 0.7596666812896729, 0.7879999876022339, 0.793666660785675, 0.8059999942779541, 0.8223333358764648, 0.8379999995231628, 0.8456666469573975, 0.8533333539962769, 0.859000027179718, 0.8610000014305115, 0.8653333187103271, 0.8633333444595337, 0.859000027179718, 0.8703333139419556, 0.8679999709129333, 0.8709999918937683, 0.871999979019165, 0.8799999952316284, 0.8703333139419556, 0.875, 0.875, 0.8743333220481873, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8019999861717224, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210304021835327, 1.6054034233093262, 1.1665112972259521, 0.9739465117454529, 0.9067234992980957, 0.8334504961967468, 0.807845950126648, 0.7899553775787354, 0.7259541153907776, 0.7186124324798584, 0.6851401925086975, 0.6968411803245544, 0.6670922636985779, 0.6494777798652649, 0.6337612271308899, 0.6406962275505066, 0.5955169796943665, 0.6154369115829468, 0.5891323089599609, 0.5791229009628296, 0.5616554617881775, 0.5653053522109985, 0.5480966567993164, 0.5639305710792542, 0.5258127450942993, 0.5320367217063904, 0.52146977186203, 0.5138095617294312, 0.5199187397956848, 0.5096161961555481, 0.49804356694221497, 0.49294471740722656, 0.48525315523147583, 0.48269039392471313, 0.48326873779296875, 0.4699080288410187, 0.4756833612918854, 0.46033230423927307, 0.45643460750579834, 0.4628000557422638, 0.4630333185195923, 0.44562065601348877, 0.4395579397678375, 0.4386352598667145, 0.42935246229171753, 0.42694708704948425, 0.42607739567756653, 0.4184507131576538, 0.41481050848960876, 0.4204801321029663, 0.4101454019546509, 0.40746691823005676, 0.4138054847717285, 0.39608508348464966, 0.4048343300819397, 0.39246639609336853, 0.39694878458976746, 0.38460877537727356, 0.3955378234386444, 0.3802253007888794, 0.3827432692050934], "accuracy": [0.2639017403125763, 0.5003302097320557, 0.5918636918067932, 0.6514331102371216, 0.6712455153465271, 0.6952846646308899, 0.7055870890617371, 0.7030775547027588, 0.7251353859901428, 0.7314753532409668, 0.744419515132904, 0.7407211661338806, 0.750231146812439, 0.7582882046699524, 0.7635715007781982, 0.7567031979560852, 0.7781006693840027, 0.7712323069572449, 0.7827235460281372, 0.7825914621353149, 0.7923656105995178, 0.7910447716712952, 0.7952714562416077, 0.7923656105995178, 0.807158887386322, 0.8018755912780762, 0.8084797263145447, 0.8107251524925232, 0.8050455451011658, 0.8107251524925232, 0.8224804997444153, 0.8232730031013489, 0.8236692547798157, 0.8208954930305481, 0.8252542614936829, 0.8236692547798157, 0.8271034359931946, 0.8313300609588623, 0.8341038227081299, 0.8294808864593506, 0.8334434032440186, 0.8374059200286865, 0.8405758738517761, 0.8401796221733093, 0.843481719493866, 0.8453308939933777, 0.847840428352356, 0.850350022315979, 0.8486329317092896, 0.8445383906364441, 0.8500858545303345, 0.8500858545303345, 0.8494254350662231, 0.856689989566803, 0.8479725122451782, 0.856689989566803, 0.8557654023170471, 0.8625016212463379, 0.8545766472816467, 0.8564258217811584, 0.8609166741371155], "val_loss": [1.9176549911499023, 1.1111119985580444, 0.9280443787574768, 0.7777333855628967, 0.7101081013679504, 0.6769680976867676, 0.6986564993858337, 0.6787835359573364, 0.6184043884277344, 0.5992476940155029, 0.5899347066879272, 0.5614150166511536, 0.589373767375946, 0.5299862623214722, 0.537659764289856, 0.5170719027519226, 0.5285542011260986, 0.5371323227882385, 0.5208988189697266, 0.49076440930366516, 0.4799446761608124, 0.47459664940834045, 0.5119917988777161, 0.46545812487602234, 0.456278532743454, 0.4577201008796692, 0.46565502882003784, 0.44143441319465637, 0.4489174485206604, 0.44841012358665466, 0.4384903013706207, 0.4422420263290405, 0.4327501952648163, 0.44216403365135193, 0.42935076355934143, 0.4258173108100891, 0.4390399158000946, 0.4152527153491974, 0.4217190444469452, 0.45209333300590515, 0.40888988971710205, 0.4147593677043915, 0.40384411811828613, 0.40190088748931885, 0.4051024615764618, 0.39552241563796997, 0.40062153339385986, 0.3988884389400482, 0.3974880874156952, 0.385896772146225, 0.38021692633628845, 0.40962955355644226, 0.3911512792110443, 0.3835766911506653, 0.38362300395965576, 0.3831489384174347, 0.3815835416316986, 0.38591450452804565, 0.3778715133666992, 0.378516286611557, 0.3703618049621582], "val_accuracy": [0.5463333129882812, 0.6573333144187927, 0.6690000295639038, 0.7166666388511658, 0.7516666650772095, 0.7493333220481873, 0.7369999885559082, 0.7173333168029785, 0.7613333463668823, 0.7673333287239075, 0.765666663646698, 0.7940000295639038, 0.7816666960716248, 0.8106666803359985, 0.7963333129882812, 0.8113333582878113, 0.8083333373069763, 0.7793333530426025, 0.8033333420753479, 0.8106666803359985, 0.8143333196640015, 0.8256666660308838, 0.8136666417121887, 0.8339999914169312, 0.8366666436195374, 0.82833331823349, 0.815666675567627, 0.8379999995231628, 0.8346666693687439, 0.8393333554267883, 0.8339999914169312, 0.8370000123977661, 0.8443333506584167, 0.8330000042915344, 0.8423333168029785, 0.843666672706604, 0.8373333215713501, 0.8456666469573975, 0.8423333168029785, 0.8299999833106995, 0.8519999980926514, 0.8460000157356262, 0.8479999899864197, 0.8539999723434448, 0.856333315372467, 0.8510000109672546, 0.847000002861023, 0.8550000190734863, 0.8560000061988831, 0.8579999804496765, 0.8583333492279053, 0.8533333539962769, 0.8536666631698608, 0.859333336353302, 0.856333315372467, 0.8616666793823242, 0.8553333282470703, 0.8583333492279053, 0.8546666502952576, 0.859333336353302, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 1, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 1, 5, 5, 2, 6], [2, 3, 0, 4, 0, 3, 3, 5], [21, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 5, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 17, 9, 8, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.square(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 4, 6, 0, 5, 6, 4, 4], [2, 0, 0, 4, 0, 2, 1, 0], [16, 46, 83, 10], [1, 0, 0, 1, 0, 0, 1, 1], [6, 3, 0, 3], [0, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 17, 9, 8, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), beta))), alpha), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2165.385498046875, 55.15534210205078, 13692.3232421875, 3392386.5, 884313280.0, 233917939712.0], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.4996745586395264, 506.35516357421875, 129451.03125, 33139032.0, 8483592192.0, 2171799601152.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 3, 3, 4, 5, 4], [3, 2, 1, 3, 0, 3, 1, 5], [14, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 2, 2], [2], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 16, 8, 8, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.multiply(tf.math.multiply(tf.math.pow(beta, tf.math.square(tf.math.pow(alpha, grad))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad)), alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, beta)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035922050476074, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]