[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 1, 4, 6, 3, 5, 5, 4], [1, 2, 0, 4, 0, 3, 2], [16, 46], [0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 0, 3], [0, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.8662857413291931, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.110243797302246, 1.2344967126846313, 0.8672298192977905, 0.7058166265487671, 0.6359633803367615, 0.5818575024604797, 0.5390434861183167, 0.515935480594635, 0.4911460876464844, 0.4619750380516052, 0.438242644071579, 0.4208284020423889, 0.41344499588012695, 0.3945985436439514, 0.38155707716941833, 0.3666480779647827, 0.35154175758361816, 0.3453070819377899, 0.3360791802406311, 0.32487356662750244, 0.3209976255893707, 0.30495259165763855, 0.3114982843399048, 0.2942396104335785, 0.27894824743270874, 0.2675776481628418, 0.2768421173095703, 0.2791343331336975, 0.25904911756515503, 0.2506011724472046, 0.24064499139785767, 0.23280656337738037, 0.2382935732603073], "accuracy": [0.2876766622066498, 0.5816932916641235, 0.6660943031311035, 0.7271166443824768, 0.748249888420105, 0.7740060687065125, 0.7923656105995178, 0.8061022162437439, 0.8136309385299683, 0.8256505131721497, 0.8322546482086182, 0.8400475382804871, 0.8400475382804871, 0.8499537706375122, 0.8569541573524475, 0.8585391640663147, 0.8664641380310059, 0.871879518032074, 0.8741249442100525, 0.8792761564254761, 0.8771628737449646, 0.8860124349594116, 0.878351628780365, 0.8898428082466125, 0.8951261639595032, 0.9013340473175049, 0.8931449055671692, 0.8907673954963684, 0.9013340473175049, 0.9033153057098389, 0.910711944103241, 0.9101836085319519, 0.9064852595329285], "val_loss": [1.0720341205596924, 0.8301886916160583, 0.682187020778656, 0.6039994359016418, 0.5370867252349854, 0.5067490339279175, 0.4808586835861206, 0.46478062868118286, 0.43472805619239807, 0.42522144317626953, 0.4201105535030365, 0.40387433767318726, 0.40389561653137207, 0.3850131034851074, 0.37913233041763306, 0.3774474561214447, 0.37644869089126587, 0.37197041511535645, 0.3715777099132538, 0.3641604781150818, 0.3628109395503998, 0.37392231822013855, 0.3644995093345642, 0.35493725538253784, 0.35569286346435547, 0.3508906364440918, 0.3562793433666229, 0.34793633222579956, 0.3555328845977783, 0.36076509952545166, 0.3497678339481354, 0.3568178713321686, 0.35436588525772095], "val_accuracy": [0.6273333430290222, 0.6863333582878113, 0.7379999756813049, 0.7606666684150696, 0.7860000133514404, 0.7993333339691162, 0.8046666383743286, 0.8149999976158142, 0.8410000205039978, 0.8450000286102295, 0.843999981880188, 0.8496666550636292, 0.8463333249092102, 0.8603333234786987, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559, 0.8673333525657654, 0.8656666874885559, 0.8700000047683716, 0.8726666569709778, 0.8656666874885559, 0.8713333606719971, 0.8736666440963745, 0.8730000257492065, 0.875333309173584, 0.8799999952316284, 0.8846666812896729, 0.8759999871253967, 0.878333330154419, 0.8796666860580444, 0.8799999952316284, 0.8773333430290222]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.798285722732544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209778070449829, 1.610397219657898, 1.1624563932418823, 0.9546331763267517, 0.8742329478263855, 0.8224678039550781, 0.8070629835128784, 0.735346794128418, 0.7044317722320557, 0.7074308395385742, 0.6992307305335999, 0.6671242713928223, 0.6344127655029297, 0.6338023543357849, 0.633483350276947, 0.5927974581718445, 0.5986957550048828, 0.5941774845123291, 0.5630353093147278, 0.5495663285255432], "accuracy": [0.26495838165283203, 0.5050851702690125, 0.5956941246986389, 0.6590939164161682, 0.6807554960250854, 0.6964733600616455, 0.7041342258453369, 0.7313432693481445, 0.7388719916343689, 0.7333245277404785, 0.7383436560630798, 0.7561748623847961, 0.7614582180976868, 0.7631752490997314, 0.7602694630622864, 0.7779685854911804, 0.7711002230644226, 0.7769119143486023, 0.7886672616004944, 0.7948752045631409], "val_loss": [1.9247040748596191, 1.131635069847107, 0.8799601197242737, 0.8441023826599121, 0.7487291097640991, 0.7203799486160278, 0.6604447960853577, 0.6446588039398193, 0.6261248588562012, 0.5987030267715454, 0.6317268013954163, 0.5795074701309204, 0.6205095052719116, 0.5969714522361755, 0.5498607754707336, 0.5516037940979004, 0.5500709414482117, 0.5444837212562561, 0.5253649353981018, 0.5643310546875], "val_accuracy": [0.5450000166893005, 0.6359999775886536, 0.6896666884422302, 0.6779999732971191, 0.7173333168029785, 0.7229999899864197, 0.7509999871253967, 0.7526666522026062, 0.7706666588783264, 0.7706666588783264, 0.7713333368301392, 0.781000018119812, 0.7513333559036255, 0.7743333578109741, 0.8009999990463257, 0.7940000295639038, 0.7883333563804626, 0.7956666946411133, 0.8003333210945129, 0.7839999794960022]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [11, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 6, 5, 5, 4], [2, 2, 0, 3, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 9, 3], [0, 1, 1, 2], [0, 80], [1], [0], [1], [0]], "fitness": -0.2134285718202591, "mapping_values": [1, 11, 6, 5, 3, 13, 7, 6, 2, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.557396411895752, 2.3786332607269287, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1838594675064087, 0.13498876988887787, 0.1356491893529892, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.341080665588379, 2.119631290435791, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.2133333384990692, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 9, 4, 6, 3, 2, 5, 8], [2, 3, 3, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [5, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303617477416992, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [39, 62, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 2, 4, 6, 3, 2, 5, 4, 3, 7, 5, 1], [1, 2, 0, 4, 0, 3, 1, 5, 1, 2, 5], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 3, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 23, 12, 11, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), alpha), tf.math.multiply(tf.math.add(grad, tf.math.square(alpha)), tf.math.subtract(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3043975830078125, 2.3046178817749023, 2.304154872894287, 2.3065237998962402, 2.306438684463501, 2.3067705631256104, 2.3056654930114746], "accuracy": [0.09734513610601425, 0.0940430611371994, 0.09998679161071777, 0.09298639744520187, 0.09906221181154251, 0.09615638852119446, 0.09985470771789551], "val_loss": [2.3024842739105225, 2.3025765419006348, 2.3025407791137695, 2.304262161254883, 2.3038909435272217, 2.306692600250244, 2.30700945854187], "val_accuracy": [0.1003333330154419, 0.10599999874830246, 0.10266666859388351, 0.09966666996479034, 0.10599999874830246, 0.0976666659116745, 0.10266666859388351]}}]