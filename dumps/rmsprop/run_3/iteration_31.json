[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8462857007980347, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2121634483337402, 1.6058064699172974, 1.1659818887710571, 0.9941021800041199, 0.9063270092010498, 0.8297048807144165, 0.7962977290153503, 0.7743044495582581, 0.7478806972503662, 0.7071171998977661, 0.7008904218673706, 0.6833369731903076, 0.6650691032409668, 0.6434076428413391, 0.6271822452545166, 0.6288935542106628, 0.6064124703407288, 0.5978152751922607, 0.5809007883071899, 0.5822957754135132, 0.5893721580505371, 0.5597249865531921, 0.5529299378395081, 0.5494160652160645, 0.5340973138809204, 0.5420736074447632, 0.5246900916099548, 0.5276092886924744, 0.5137577056884766, 0.5151656270027161, 0.4928545653820038, 0.5020949840545654, 0.4790555238723755, 0.47978609800338745, 0.46961838006973267, 0.4763341248035431, 0.4706381559371948, 0.4523278772830963, 0.45741865038871765, 0.46356502175331116, 0.4553202688694, 0.4446670413017273], "accuracy": [0.26997753977775574, 0.5111610293388367, 0.5915995240211487, 0.6464139223098755, 0.6796988248825073, 0.7058512568473816, 0.7129837274551392, 0.7177387475967407, 0.7316074371337891, 0.739400327205658, 0.7461365461349487, 0.7514199018478394, 0.7577598690986633, 0.7689869403839111, 0.770439863204956, 0.7689869403839111, 0.7827235460281372, 0.7840443849563599, 0.7906485199928284, 0.7860256433486938, 0.783119797706604, 0.7979130744934082, 0.8000264167785645, 0.7930260300636292, 0.8055738806724548, 0.8030643463134766, 0.8092722296714783, 0.8101968169212341, 0.813498854637146, 0.8140271902084351, 0.8187822103500366, 0.8140271902084351, 0.8220842480659485, 0.822348415851593, 0.8284242749214172, 0.8224804997444153, 0.8337075710296631, 0.8350284099578857, 0.8362171649932861, 0.8309338092803955, 0.832650899887085, 0.8370096683502197], "val_loss": [1.9213560819625854, 1.071881890296936, 0.893805742263794, 0.8041472434997559, 0.7145781517028809, 0.6732219457626343, 0.6473119854927063, 0.6252617239952087, 0.596006453037262, 0.6401125192642212, 0.5861183404922485, 0.5807040333747864, 0.5798402428627014, 0.5561313629150391, 0.5202479362487793, 0.524763286113739, 0.5242302417755127, 0.5103773474693298, 0.4988647997379303, 0.526773989200592, 0.49443063139915466, 0.5013923048973083, 0.4722113311290741, 0.46836715936660767, 0.49291449785232544, 0.4651646316051483, 0.4602363407611847, 0.44861888885498047, 0.44406720995903015, 0.44070687890052795, 0.4460841417312622, 0.45467883348464966, 0.4378846287727356, 0.42528191208839417, 0.4396457374095917, 0.42497533559799194, 0.41655972599983215, 0.430476576089859, 0.40443533658981323, 0.43046656250953674, 0.40864109992980957, 0.413320392370224], "val_accuracy": [0.6100000143051147, 0.67166668176651, 0.6886666417121887, 0.7043333053588867, 0.734333336353302, 0.7516666650772095, 0.7450000047683716, 0.7639999985694885, 0.778333306312561, 0.7620000243186951, 0.7876666784286499, 0.7853333353996277, 0.7749999761581421, 0.7906666398048401, 0.8100000023841858, 0.8023333549499512, 0.8053333163261414, 0.8083333373069763, 0.8133333325386047, 0.7906666398048401, 0.8106666803359985, 0.8109999895095825, 0.8230000138282776, 0.8206666707992554, 0.8199999928474426, 0.8259999752044678, 0.8216666579246521, 0.8323333263397217, 0.8326666951179504, 0.8353333473205566, 0.8353333473205566, 0.8256666660308838, 0.8383333086967468, 0.8399999737739563, 0.8323333263397217, 0.8383333086967468, 0.8510000109672546, 0.8383333086967468, 0.8496666550636292, 0.8353333473205566, 0.8479999899864197, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2146658897399902, 1.6221282482147217, 1.189357042312622, 0.9838120341300964, 0.9241561889648438, 0.8493072986602783, 0.8136578798294067, 0.7738608717918396, 0.7455411553382874, 0.7079375982284546, 0.6995970606803894, 0.6783125996589661, 0.6881297826766968, 0.6536058783531189, 0.6361908316612244, 0.6092965602874756, 0.6171767711639404, 0.6009511351585388, 0.585198700428009, 0.5683159828186035, 0.570275068283081, 0.5672922730445862, 0.5644106268882751, 0.5475188493728638, 0.5448779463768005, 0.5495853424072266, 0.5272701382637024, 0.5151057839393616, 0.5173220038414001, 0.5253574252128601, 0.494533896446228, 0.49802371859550476, 0.4900696277618408, 0.49199047684669495, 0.48134955763816833, 0.4679471254348755, 0.47888240218162537, 0.46963024139404297, 0.46204710006713867, 0.45625627040863037, 0.45487159490585327, 0.4466683268547058, 0.4626563787460327, 0.45209139585494995, 0.4425404667854309, 0.43763166666030884, 0.42952921986579895, 0.4277651011943817, 0.42905184626579285, 0.4269784986972809, 0.4177793562412262, 0.4153512418270111, 0.41475149989128113, 0.4034138023853302, 0.40295809507369995, 0.40133386850357056, 0.4019157290458679, 0.39619675278663635], "accuracy": [0.2599392533302307, 0.5027077198028564, 0.5919957756996155, 0.6483951807022095, 0.6639809608459473, 0.6893408894538879, 0.7043983340263367, 0.7112666964530945, 0.7193237543106079, 0.7294940948486328, 0.7442874312400818, 0.746268630027771, 0.7420420050621033, 0.7541936039924622, 0.7602694630622864, 0.7740060687065125, 0.7692511081695557, 0.7783648371696472, 0.7786290049552917, 0.7906485199928284, 0.7817989587783813, 0.7893276810646057, 0.7868181467056274, 0.7944789528846741, 0.7968564033508301, 0.8004226684570312, 0.8061022162437439, 0.8062343001365662, 0.8047813773155212, 0.8050455451011658, 0.8171972036361694, 0.8146876096725464, 0.8191784620285034, 0.8161405324935913, 0.8230088353157043, 0.8313300609588623, 0.8251221776008606, 0.8248580098152161, 0.8338396549224854, 0.8294808864593506, 0.8286884427070618, 0.8358209133148193, 0.8269713521003723, 0.8342359066009521, 0.8364813327789307, 0.8399154543876648, 0.846387505531311, 0.8388587832450867, 0.8405758738517761, 0.8433496356010437, 0.8479725122451782, 0.8418967127799988, 0.848368763923645, 0.852331280708313, 0.8533879518508911, 0.8499537706375122, 0.8499537706375122, 0.8504821062088013], "val_loss": [1.9317843914031982, 1.1792532205581665, 0.9194148778915405, 0.804036557674408, 0.7498696446418762, 0.7710039019584656, 0.6817874312400818, 0.6614425182342529, 0.6410570740699768, 0.6670241951942444, 0.627358078956604, 0.6061761975288391, 0.5755869150161743, 0.5685683488845825, 0.5559601187705994, 0.5830439329147339, 0.555219292640686, 0.5393055081367493, 0.5421721935272217, 0.520788311958313, 0.5183071494102478, 0.5546994209289551, 0.5094862580299377, 0.5066987872123718, 0.5279355049133301, 0.4932045638561249, 0.4853156805038452, 0.4894324541091919, 0.49188223481178284, 0.47927531599998474, 0.4746198356151581, 0.4793282747268677, 0.47556519508361816, 0.4667423367500305, 0.45195823907852173, 0.4550902545452118, 0.4540832042694092, 0.45151767134666443, 0.44483545422554016, 0.4504549205303192, 0.4448900520801544, 0.44454076886177063, 0.4362415075302124, 0.435044527053833, 0.42715713381767273, 0.4282720983028412, 0.42716526985168457, 0.436636745929718, 0.4257247745990753, 0.4167470633983612, 0.4135548174381256, 0.4173441231250763, 0.41137251257896423, 0.411090612411499, 0.4093262553215027, 0.4367355406284332, 0.4151392877101898, 0.4110890328884125], "val_accuracy": [0.5659999847412109, 0.5863333344459534, 0.6566666960716248, 0.7113333344459534, 0.7296666502952576, 0.6993333101272583, 0.7333333492279053, 0.7400000095367432, 0.7573333382606506, 0.7516666650772095, 0.7670000195503235, 0.7693333625793457, 0.7826666831970215, 0.7789999842643738, 0.7906666398048401, 0.7739999890327454, 0.7853333353996277, 0.7900000214576721, 0.7983333468437195, 0.8053333163261414, 0.8056666851043701, 0.7923333048820496, 0.8169999718666077, 0.8180000185966492, 0.809333324432373, 0.8309999704360962, 0.8289999961853027, 0.8216666579246521, 0.8256666660308838, 0.8266666531562805, 0.8346666693687439, 0.8263333439826965, 0.8353333473205566, 0.8306666612625122, 0.8379999995231628, 0.8389999866485596, 0.8270000219345093, 0.8399999737739563, 0.8410000205039978, 0.8273333311080933, 0.8429999947547913, 0.8349999785423279, 0.8446666598320007, 0.8433333039283752, 0.8456666469573975, 0.8453333377838135, 0.8506666421890259, 0.8413333296775818, 0.8460000157356262, 0.8496666550636292, 0.8523333072662354, 0.8513333201408386, 0.8556666374206543, 0.8529999852180481, 0.8543333411216736, 0.8420000076293945, 0.8513333201408386, 0.8503333330154419]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 7, 4, 7, 9, 6, 2, 9, 8, 2, 6, 2, 2, 5, 3, 5, 7, 4, 9, 4], [0, 1, 1, 2, 1, 0, 2, 1, 2, 3, 2, 1, 1, 3], [0, 39, 39, 77, 68], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 2, 3, 8, 2], [2, 0, 3, 1, 0], [16, 19], [0, 0, 1, 1], [0, 7], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 23, 14, 5, 4, 2, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.square(tf.math.multiply(tf.math.square(grad), grad))), tf.math.add(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(alpha, alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303666591644287, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 7, 1, 1, 3, 5, 0, 4, 8, 2, 6, 6, 6, 4, 2, 4, 4, 2, 0, 1, 2, 2, 2, 2, 2, 3, 4, 1, 7, 2, 3, 5, 4, 3, 2], [0, 0, 3, 0, 2, 3, 1, 2, 2, 1, 0, 2, 3, 1, 1, 2, 3, 0, 1, 1, 0, 3, 0, 1, 2, 3, 1, 1, 0, 2], [0, 39, 39, 57, 75, 24, 95, 20], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 1, 4, 1, 1], [16, 1], [0, 0, 1, 1], [0, 7], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, alpha), grad), tf.math.pow(tf.math.add(grad, alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.pow(tf.math.add(grad, grad), alpha), tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.add(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.multiply(grad, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), alpha)), grad)))), grad)), alpha), alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 65, 35, 30, 8, 4, 2, 2, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 38}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 4, 3, 5], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, grad), grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310124635696411, 2.3096954822540283, 2.310628890991211, 2.3103904724121094, 2.30902361869812, 2.310007095336914], "accuracy": [0.0882314071059227, 0.09074098616838455, 0.09232597798109055, 0.09100515395402908, 0.0956280529499054, 0.09192973375320435], "val_loss": [2.308972120285034, 2.308972120285034, 2.308972120285034, 2.308972120285034, 2.308972120285034, 2.308972120285034], "val_accuracy": [0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122, 0.08566666394472122]}}]