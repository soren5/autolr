[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8208571672439575, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20833158493042, 1.5945768356323242, 1.1702985763549805, 0.9840824604034424, 0.8663341403007507, 0.8519954085350037, 0.7888984084129333, 0.758335530757904, 0.7303025126457214, 0.7205095291137695, 0.6991659998893738, 0.662566065788269, 0.6819969415664673, 0.6500887274742126, 0.6225621700286865, 0.6126049160957336, 0.6037591695785522, 0.6041767597198486, 0.576261579990387, 0.5799806714057922, 0.5631155371665955, 0.5565783381462097, 0.5521033406257629, 0.5533548593521118, 0.5300915837287903, 0.5290820598602295, 0.5244026184082031, 0.5080686211585999, 0.5067664384841919, 0.5070479512214661, 0.4885867238044739, 0.48159274458885193, 0.48374953866004944, 0.4930720031261444, 0.4772443473339081, 0.47081130743026733, 0.47312989830970764, 0.46213772892951965, 0.44380849599838257], "accuracy": [0.2678642272949219, 0.5081230998039246, 0.5900145173072815, 0.6482630968093872, 0.6856426000595093, 0.6852463483810425, 0.7058512568473816, 0.7191916704177856, 0.7250033020973206, 0.72672039270401, 0.7388719916343689, 0.748249888420105, 0.7409853339195251, 0.7544577717781067, 0.7687227725982666, 0.7700436115264893, 0.7738739848136902, 0.7705719470977783, 0.7840443849563599, 0.787082314491272, 0.7936864495277405, 0.7910447716712952, 0.7881389260292053, 0.7903843522071838, 0.8024039268493652, 0.804649293422699, 0.8074230551719666, 0.8152159452438354, 0.8131026029586792, 0.807158887386322, 0.8153480291366577, 0.819442629814148, 0.8210275769233704, 0.8161405324935913, 0.8211596608161926, 0.8239334225654602, 0.8247259259223938, 0.8236692547798157, 0.8338396549224854], "val_loss": [1.9118374586105347, 1.1020396947860718, 0.920351505279541, 0.7997310161590576, 0.738589346408844, 0.7144513130187988, 0.6892847418785095, 0.6546797752380371, 0.6371557712554932, 0.6061250567436218, 0.600538969039917, 0.5908822417259216, 0.5882179141044617, 0.5573210716247559, 0.5708204507827759, 0.5504003763198853, 0.5893069505691528, 0.5302810072898865, 0.5326917171478271, 0.5017181038856506, 0.5036664009094238, 0.4961613416671753, 0.49983784556388855, 0.5218346118927002, 0.49172016978263855, 0.5171472430229187, 0.47496119141578674, 0.47847679257392883, 0.46615344285964966, 0.4714393615722656, 0.4655664563179016, 0.45134371519088745, 0.4695700407028198, 0.4492241144180298, 0.45092442631721497, 0.4417054057121277, 0.44131216406822205, 0.43823444843292236, 0.47157177329063416], "val_accuracy": [0.5793333053588867, 0.6506666541099548, 0.6703333258628845, 0.7049999833106995, 0.722000002861023, 0.7250000238418579, 0.7203333377838135, 0.7586666941642761, 0.7513333559036255, 0.7576666474342346, 0.7786666750907898, 0.7706666588783264, 0.7773333191871643, 0.7883333563804626, 0.7799999713897705, 0.7883333563804626, 0.7739999890327454, 0.796999990940094, 0.7919999957084656, 0.8163333535194397, 0.8086666464805603, 0.8166666626930237, 0.8086666464805603, 0.8013333082199097, 0.8106666803359985, 0.8056666851043701, 0.8226666450500488, 0.8240000009536743, 0.824999988079071, 0.8226666450500488, 0.8233333230018616, 0.8336666822433472, 0.815666675567627, 0.8349999785423279, 0.8326666951179504, 0.831333339214325, 0.8299999833106995, 0.8336666822433472, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 2, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 5, 0, 8], [0, 1, 1, 4], [0], [1], [0], [7], [0]], "fitness": -0.2765714228153229, "mapping_values": [1, 10, 5, 5, 3, 9, 6, 3, 2, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.39333176612854, 2.3070483207702637, 2.3042917251586914, 2.276249647140503, 2.2752134799957275, 2.3042523860931396, 2.3031539916992188, 2.303504705429077, 2.30324125289917], "accuracy": [0.19799233973026276, 0.1810857206583023, 0.09681680053472519, 0.15810328722000122, 0.14978206157684326, 0.10157178342342377, 0.10051512718200684, 0.09893012791872025, 0.09813763201236725], "val_loss": [2.2987513542175293, 2.3060693740844727, 2.3011631965637207, 2.005608081817627, 2.304377317428589, 2.3027663230895996, 2.302682399749756, 2.3027679920196533, 2.3026986122131348], "val_accuracy": [0.10400000214576721, 0.09933333098888397, 0.12933333218097687, 0.2840000092983246, 0.10266666859388351, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [4, 2, 3, 3, 1, 5, 5], [0, 0, 1, 0, 2, 1], [17, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [3, 9, 4, 7, 0, 5, 5, 6], [1, 2, 0, 4, 0, 3, 1], [16, 6], [0, 1, 0, 1, 0, 1, 1, 0], [7, 3, 0, 2], [0, 0, 1, 4], [0, 76], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 12, 8, 4, 2, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [3, 9, 4, 7, 0, 5, 5, 4, 9], [1, 2, 0, 4, 0, 3, 1], [16, 1, 19], [0, 0, 0, 1, 0, 1, 1, 1], [7, 4, 0, 2], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 9, 3, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 8, 7, 3, 5], [0, 0, 1, 0, 2], [47, 88, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [5, 9, 4, 7, 5, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [17, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 2, 0, 2], [0, 1, 1, 4], [0, 19], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 6, 7, 9, 3, 1, 2], [1, 5, 4, 2, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 1, 2, 2, 0, 1, 8, 4, 4, 1, 13, 8, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.subtract(tf.math.add(grad, grad), beta), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]