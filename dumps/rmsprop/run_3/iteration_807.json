[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8100000023841858, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213165044784546, 1.6337382793426514, 1.1625910997390747, 0.9982771277427673, 0.9225903153419495, 0.8557647466659546, 0.7878032326698303, 0.7701674103736877, 0.7409226894378662, 0.7314286828041077, 0.6840681433677673, 0.6685453653335571, 0.6657545566558838, 0.6345365047454834, 0.6371408104896545, 0.6272810697555542, 0.6072207093238831, 0.5989769101142883, 0.583354651927948, 0.566349446773529, 0.5540180802345276, 0.5743482112884521, 0.5602368712425232, 0.5456095337867737, 0.5215551853179932, 0.5265029072761536, 0.5160679221153259, 0.5141217112541199, 0.5054041147232056, 0.4883439838886261, 0.49674803018569946, 0.49188002943992615, 0.4832844138145447, 0.47612622380256653, 0.47919797897338867, 0.4682271182537079, 0.46377238631248474, 0.45495325326919556, 0.45516252517700195, 0.44748732447624207, 0.44052642583847046, 0.4525643289089203, 0.4357959032058716, 0.4317286014556885, 0.4314125180244446, 0.4191272556781769, 0.4346763491630554, 0.42243143916130066, 0.40829721093177795, 0.41331619024276733, 0.40542906522750854, 0.41508814692497253], "accuracy": [0.26561880111694336, 0.4913485646247864, 0.589750349521637, 0.6522256135940552, 0.665830135345459, 0.6929071545600891, 0.7123233675956726, 0.7202483415603638, 0.7255316376686096, 0.7255316376686096, 0.7446836829185486, 0.7473253011703491, 0.7511557340621948, 0.7684586048126221, 0.7658169269561768, 0.7681944370269775, 0.778232753276825, 0.778232753276825, 0.7857614755630493, 0.789459764957428, 0.7936864495277405, 0.7779685854911804, 0.7944789528846741, 0.8006868362426758, 0.8033285140991211, 0.8063663840293884, 0.8090080618858337, 0.8078193068504333, 0.8121780753135681, 0.8206313848495483, 0.8170651197433472, 0.8206313848495483, 0.8198388814926147, 0.8236692547798157, 0.819970965385437, 0.828292191028595, 0.8338396549224854, 0.8319904804229736, 0.8329150676727295, 0.8383304476737976, 0.8391229510307312, 0.834632158279419, 0.8416325449943542, 0.8396512866020203, 0.841500461101532, 0.8471800088882446, 0.8378021121025085, 0.8474441766738892, 0.8488970994949341, 0.8536521196365356, 0.8527275323867798, 0.8450667262077332], "val_loss": [1.9317728281021118, 1.0986143350601196, 0.8918347954750061, 0.8396700620651245, 0.7188819050788879, 0.6892517805099487, 0.6822028756141663, 0.7061384916305542, 0.6045527458190918, 0.6034759283065796, 0.594671905040741, 0.6117825508117676, 0.5650088787078857, 0.5877339839935303, 0.5770370364189148, 0.5727567672729492, 0.5216342806816101, 0.5420947670936584, 0.5352169871330261, 0.4934127628803253, 0.5009413957595825, 0.515755832195282, 0.4815540909767151, 0.4796699285507202, 0.5168667435646057, 0.46822595596313477, 0.46609678864479065, 0.4575660824775696, 0.4603903889656067, 0.45414313673973083, 0.4486759901046753, 0.44693294167518616, 0.43977096676826477, 0.44908854365348816, 0.43521130084991455, 0.4330088198184967, 0.4256717264652252, 0.43293002247810364, 0.42178285121917725, 0.418241411447525, 0.41793936491012573, 0.41482609510421753, 0.42116039991378784, 0.4122392535209656, 0.4020364284515381, 0.4437371492385864, 0.401737779378891, 0.4006095230579376, 0.4022214412689209, 0.40014225244522095, 0.41008666157722473, 0.4020138382911682], "val_accuracy": [0.6183333396911621, 0.6833333373069763, 0.7006666660308838, 0.6903333067893982, 0.749666690826416, 0.7519999742507935, 0.7603333592414856, 0.731333315372467, 0.7803333401679993, 0.7736666798591614, 0.768666684627533, 0.7553333044052124, 0.7883333563804626, 0.7839999794960022, 0.7723333239555359, 0.7716666460037231, 0.8090000152587891, 0.7919999957084656, 0.7893333435058594, 0.8153333067893982, 0.8159999847412109, 0.8056666851043701, 0.8213333487510681, 0.8143333196640015, 0.7910000085830688, 0.8243333101272583, 0.8303333520889282, 0.8363333344459534, 0.8303333520889282, 0.8336666822433472, 0.8389999866485596, 0.831333339214325, 0.8426666855812073, 0.8320000171661377, 0.8413333296775818, 0.8393333554267883, 0.846666693687439, 0.8353333473205566, 0.8483333587646484, 0.846666693687439, 0.847000002861023, 0.8523333072662354, 0.8446666598320007, 0.8473333120346069, 0.8569999933242798, 0.8373333215713501, 0.8576666712760925, 0.8553333282470703, 0.8533333539962769, 0.8550000190734863, 0.8476666808128357, 0.8536666631698608]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 3, 7, 0, 5, 5, 9], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2, 1, 5, 0, 6, 0, 8, 1, 6, 6, 5, 7, 7, 4, 1], [0, 1, 1, 0, 1, 5, 1, 2, 4, 0, 7, 6, 1], [0, 38, 96], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 8, 5, 3, 2, 31, 18, 13, 3, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.math.square(alpha), alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.negative(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.subtract(tf.math.square(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.pow(beta, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))))), alpha))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 7, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 68], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 9, 4, 7, 5, 5, 3, 4, 8, 4], [1, 2, 0, 4, 0, 3, 1], [40, 43, 29], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [7, 3, 8, 2, 5, 1], [0, 1, 1, 2, 5], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 16, 10, 6, 3, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.square(tf.math.square(beta)), tf.math.multiply(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(alpha), alpha)), tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3032538890838623, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 1], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 3, 5, 4, 4], [1, 3, 0, 4, 0, 3, 1], [16, 1, 87], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 2, 2, 4, 4, 4, 5, 4, 4, 9, 2, 4, 4, 7, 1], [0, 1, 1, 4, 3, 1, 4, 3, 4, 3, 1, 5, 4, 0], [0, 59, 42], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 3, 31, 17, 14, 3, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.pow(grad, tf.math.square(sigma)), tf.math.pow(alpha, tf.math.pow(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), sigma)))), tf.math.add(grad, tf.math.pow(tf.math.pow(tf.math.add(sigma, tf.math.subtract(alpha, grad)), grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 2], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 7, 0, 2, 1], [0, 5, 1, 4, 2], [0], [0, 0, 1], [0, 5], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 2, 1, 1, 10, 5, 5, 1, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.math.subtract(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [6.909669399261475, 2384.725830078125, 138624.671875, 2426554.75, 21780288.0, 129225904.0], "accuracy": [0.09509972482919693, 0.10474177449941635, 0.10091137140989304, 0.10579843819141388, 0.09774138033390045, 0.09840179979801178], "val_loss": [60.30598068237305, 14169.482421875, 488294.0625, 6191272.5, 44823824.0, 226946704.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]