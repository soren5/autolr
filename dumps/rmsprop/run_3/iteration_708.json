[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210174322128296, 1.6019330024719238, 1.1543859243392944, 0.9674816131591797, 0.8618493676185608, 0.8201063275337219, 0.8032852411270142, 0.7409960031509399, 0.7332118153572083, 0.691037654876709, 0.6922115683555603, 0.6669499278068542, 0.6376618146896362, 0.628782331943512, 0.6306270956993103, 0.6030780076980591, 0.6055269837379456, 0.5733641982078552, 0.5734908580780029, 0.5751527547836304, 0.5365778207778931, 0.5610015988349915, 0.532463550567627, 0.5340376496315002, 0.5330692529678345, 0.5146518349647522, 0.521746039390564, 0.497825562953949, 0.49608784914016724, 0.48513007164001465, 0.4907108247280121, 0.4811743199825287, 0.46775418519973755, 0.4753037989139557, 0.4661216735839844, 0.46031883358955383], "accuracy": [0.2685246467590332, 0.5144630670547485, 0.5943732857704163, 0.6505085229873657, 0.6925109028816223, 0.7112666964530945, 0.7034738063812256, 0.7256637215614319, 0.7302865982055664, 0.7474573850631714, 0.7446836829185486, 0.7520803213119507, 0.7687227725982666, 0.7692511081695557, 0.7650244235992432, 0.7709681391716003, 0.7819310426712036, 0.7886672616004944, 0.7882710099220276, 0.7844406366348267, 0.7997622489929199, 0.7911768555641174, 0.8035926818847656, 0.8045172095298767, 0.8033285140991211, 0.8043851256370544, 0.8049134612083435, 0.8119139075279236, 0.8132346868515015, 0.8198388814926147, 0.8191784620285034, 0.8169330358505249, 0.8277638554573059, 0.8215559124946594, 0.826310932636261, 0.8285563588142395], "val_loss": [1.925067663192749, 1.1452823877334595, 0.8793646097183228, 0.8498221039772034, 0.7678772807121277, 0.7031530737876892, 0.6513382792472839, 0.6495906710624695, 0.6102687120437622, 0.6417931914329529, 0.5992763638496399, 0.594084620475769, 0.572360098361969, 0.5609307289123535, 0.5592780113220215, 0.5497684478759766, 0.5320475101470947, 0.5396839380264282, 0.5454010367393494, 0.5113419890403748, 0.4994518756866455, 0.4981226921081543, 0.5071220993995667, 0.5081101655960083, 0.4912092983722687, 0.49626824259757996, 0.4909352660179138, 0.4671981930732727, 0.4682128131389618, 0.46025487780570984, 0.45199570059776306, 0.4522404074668884, 0.4610327482223511, 0.4552539885044098, 0.4602275490760803, 0.45487523078918457], "val_accuracy": [0.5910000205039978, 0.6209999918937683, 0.6836666464805603, 0.6880000233650208, 0.7129999995231628, 0.7356666922569275, 0.7423333525657654, 0.7586666941642761, 0.7713333368301392, 0.7486666440963745, 0.7696666717529297, 0.7716666460037231, 0.7816666960716248, 0.7886666655540466, 0.7853333353996277, 0.7910000085830688, 0.8056666851043701, 0.7856666445732117, 0.7886666655540466, 0.8019999861717224, 0.8066666722297668, 0.8136666417121887, 0.8113333582878113, 0.812333345413208, 0.8216666579246521, 0.8103333115577698, 0.8193333148956299, 0.8243333101272583, 0.8240000009536743, 0.8276666402816772, 0.8356666564941406, 0.831333339214325, 0.8273333311080933, 0.8243333101272583, 0.8246666789054871, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [7, 2, 3, 1, 1, 5, 4, 2, 5, 5, 7, 5, 1, 4, 1], [0, 0, 1, 0, 2, 0, 1, 0, 0, 2, 2, 1], [26, 39, 39, 30, 49, 64], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 6, 0, 5, 5, 4, 9], [2, 2, 0, 4, 0, 3, 1], [16, 1, 12], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [7, 3, 0, 2, 1, 6, 5, 8], [0, 4, 1, 4, 3, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 15, 12, 6, 14, 9, 5, 3, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.square(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.pow(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), tf.math.subtract(tf.math.divide_no_nan(grad, sigma), tf.math.square(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 68, 39], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [3, 2, 6, 4, 0, 5, 5, 4], [2, 0, 0, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303370952606201, 2.3024544715881348, 2.3025310039520264, 2.303065299987793, 2.310307502746582, 2.4241015911102295, 3.5881919860839844, 8.515941619873047, 21.31306266784668], "accuracy": [0.10157178342342377, 0.10447761416435242, 0.09906221181154251, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09655263274908066], "val_loss": [2.3025875091552734, 2.302605390548706, 2.3026857376098633, 2.3041582107543945, 2.3301682472229004, 2.737098217010498, 5.5898118019104, 14.23432445526123, 34.7814826965332], "val_accuracy": [0.09666666388511658, 0.09600000083446503, 0.09966666996479034, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 2, 5, 1, 3, 5], [0, 1, 1, 0, 2], [6, 39, 39], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [8, 2, 7, 4, 0, 5, 5, 4], [3, 2, 0, 4, 0, 0, 1], [66, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 0, 1, 4], [0, 46], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.0799407958984375, 46.3111572265625, 505.00970458984375, 3134.783935546875, 13745.58203125, 44359.89453125], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.1022322028875351, 0.09694888442754745, 0.09813763201236725, 0.09945846349000931], "val_loss": [7.652912616729736, 128.53468322753906, 1067.606201171875, 5514.1796875, 20288.1484375, 59363.85546875], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [2, 2, 2, 4, 0, 5, 5, 4, 8, 7, 6, 9], [2, 2, 0, 4, 0, 3, 1], [16, 15, 3], [0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 3, 0, 2, 0], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 19, 12, 7, 3, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(alpha), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303846597671509, 2.3026115894317627, 2.3029210567474365, 2.302950143814087, 2.302942991256714, 2.303342819213867], "accuracy": [0.09615638852119446, 0.09747721254825592, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09615638852119446], "val_loss": [2.3025808334350586, 2.3025553226470947, 2.302548408508301, 2.3028342723846436, 2.303109645843506, 2.3028476238250732], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.09799999743700027, 0.0989999994635582, 0.09933333098888397]}}]