[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7997142672538757, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2137563228607178, 1.6170029640197754, 1.1685948371887207, 0.9546943306922913, 0.871367871761322, 0.8004118800163269, 0.7754690647125244, 0.7291461229324341, 0.7100812792778015, 0.6958050727844238, 0.6700244545936584, 0.665936291217804, 0.6256826519966125, 0.6285678744316101, 0.5928162336349487, 0.5970284938812256, 0.5984064936637878, 0.5738992691040039, 0.5684661269187927, 0.5553216934204102, 0.5534459948539734, 0.5433679819107056, 0.5227503776550293, 0.5447809100151062, 0.5141777396202087, 0.5128725171089172], "accuracy": [0.2588825821876526, 0.5019152164459229, 0.5927882790565491, 0.6571126580238342, 0.6890767216682434, 0.7053229212760925, 0.7176066637039185, 0.7322678565979004, 0.7400607466697693, 0.7464007139205933, 0.7475894689559937, 0.7574957013130188, 0.7684586048126221, 0.7644960880279541, 0.7799497842788696, 0.7754589915275574, 0.7864218950271606, 0.7860256433486938, 0.7922335267066956, 0.7969884872436523, 0.7940827012062073, 0.8039889335632324, 0.8045172095298767, 0.7951393723487854, 0.8153480291366577, 0.8133667707443237], "val_loss": [1.9313157796859741, 1.124028205871582, 0.9258841872215271, 0.8166140913963318, 0.7448772192001343, 0.7357599139213562, 0.7200157642364502, 0.6622775197029114, 0.6436745524406433, 0.6068525314331055, 0.6487979292869568, 0.5929796695709229, 0.5834305286407471, 0.5586989521980286, 0.592225193977356, 0.5609697103500366, 0.5351105332374573, 0.5728261470794678, 0.518320620059967, 0.5200204253196716, 0.5105975866317749, 0.49440625309944153, 0.5016204714775085, 0.5236924886703491, 0.5071801543235779, 0.49763908982276917], "val_accuracy": [0.5879999995231628, 0.6306666731834412, 0.668666660785675, 0.6973333358764648, 0.7263333201408386, 0.7203333377838135, 0.7323333621025085, 0.7543333172798157, 0.7636666893959045, 0.7763333320617676, 0.7456666827201843, 0.778333306312561, 0.7746666669845581, 0.7870000004768372, 0.7730000019073486, 0.7850000262260437, 0.7986666560173035, 0.7720000147819519, 0.8103333115577698, 0.8040000200271606, 0.8166666626930237, 0.8136666417121887, 0.8090000152587891, 0.7873333096504211, 0.8096666932106018, 0.8143333196640015]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [8, 2, 1, 4, 3, 3, 2, 1, 1, 4], [2, 0, 3, 1, 0, 0, 4, 4, 2, 0], [16, 1, 48, 70], [0, 0, 1, 1], [0, 7], [4, 6], [0], [1], [0], [4], [0]], "fitness": -0.3188571333885193, "mapping_values": [1, 1, 0, 1, 1, 20, 10, 10, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.subtract(beta, tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), grad)), grad)), tf.math.pow(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7636396884918213, 7.242513179779053, 2.21858286857605, 2.243767261505127, 2.3071658611297607, 2.303826332092285, 2.3038370609283447, 2.303711414337158], "accuracy": [0.189274862408638, 0.11451591551303864, 0.20063400268554688, 0.2526746690273285, 0.09734513610601425, 0.09496764093637466, 0.1018359512090683, 0.09734513610601425], "val_loss": [2.416497230529785, 2.1906349658966064, 2.0550971031188965, 2.307290554046631, 2.3036322593688965, 2.3030622005462646, 2.3028361797332764, 2.3029351234436035], "val_accuracy": [0.0989999994635582, 0.2016666680574417, 0.31566667556762695, 0.1003333330154419, 0.1003333330154419, 0.09866666793823242, 0.1003333330154419, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 8, 3, 9, 1, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [2, 2, 4, 6, 3, 5, 5, 4, 1, 9], [2, 3, 0, 4, 0, 3, 2], [16, 1, 44], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 3], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 17, 10, 7, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303612470626831, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 2, 1], [26, 45, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 5, 4, 4, 9], [2, 2, 0, 4, 0, 3, 1], [16, 1, 37], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 16, 9, 7, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29868.30859375, 4514294.5, 76841832.0, 534956032.0, 2373719552.0, 7815921664.0], "accuracy": [0.09893012791872025, 0.10236428678035736, 0.10157178342342377, 0.09549596905708313, 0.10408136248588562, 0.09998679161071777], "val_loss": [302461.1875, 16215958.0, 173886608.0, 947670336.0, 3549185536.0, 10468208640.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [2, 7, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 0, 0, 6, 0, 8, 2], [2, 2, 1, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1], [0, 7], [0, 1, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 9, 4, 5, 3, 4, 3, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310246229171753, 2.3110477924346924, 2.3087825775146484, 2.3114519119262695, 2.3100836277008057, 2.30951189994812], "accuracy": [0.09153348207473755, 0.08849557489156723, 0.09232597798109055, 0.08875974267721176, 0.09034473448991776, 0.09708096832036972], "val_loss": [2.3089988231658936, 2.3089988231658936, 2.3089988231658936, 2.3089988231658936, 2.3089988231658936, 2.3089988231658936], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]