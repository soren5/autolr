[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2047228813171387, 1.5822679996490479, 1.153978943824768, 0.9883179664611816, 0.8947126269340515, 0.8374040126800537, 0.7973796129226685, 0.7518073916435242, 0.7391481995582581, 0.7162829041481018, 0.687699019908905, 0.6727309823036194, 0.6760056614875793, 0.6529929637908936, 0.6388809680938721, 0.6079346537590027, 0.609437108039856, 0.5899390578269958, 0.578037679195404, 0.5725140571594238, 0.5721027255058289, 0.5595299005508423, 0.5346976518630981, 0.5416181087493896, 0.5369206070899963, 0.535187840461731, 0.52403724193573, 0.5118227601051331, 0.5028366446495056, 0.50588458776474, 0.48461678624153137, 0.49130499362945557, 0.4771660268306732, 0.47827577590942383, 0.4693833589553833, 0.4686804711818695, 0.45799368619918823, 0.4581747353076935, 0.4557567834854126, 0.4408649504184723, 0.4353010356426239, 0.44022300839424133, 0.4507293701171875, 0.43330663442611694, 0.4268103241920471, 0.42585211992263794, 0.4241025149822235, 0.41783860325813293, 0.4113347828388214, 0.4053541421890259, 0.4115654230117798, 0.40484678745269775, 0.40293100476264954], "accuracy": [0.2728833854198456, 0.5194822549819946, 0.5970149040222168, 0.646149754524231, 0.6758684515953064, 0.6972658634185791, 0.6993792057037354, 0.7185312509536743, 0.7239466309547424, 0.7310791015625, 0.7434949278831482, 0.7552502751350403, 0.7453441023826599, 0.759080708026886, 0.7611940503120422, 0.7714964747428894, 0.7700436115264893, 0.7817989587783813, 0.7828556299209595, 0.7868181467056274, 0.787082314491272, 0.7940827012062073, 0.7991018295288086, 0.8016114234924316, 0.7992339134216309, 0.8031964302062988, 0.8029322624206543, 0.8105930685997009, 0.8148196935653687, 0.8136309385299683, 0.8259146809577942, 0.817461371421814, 0.8276317715644836, 0.8227446675300598, 0.8286884427070618, 0.8265751004219055, 0.8259146809577942, 0.8298771381378174, 0.8342359066009521, 0.8405758738517761, 0.8380662798881531, 0.8411042094230652, 0.8300092220306396, 0.8411042094230652, 0.8459912538528442, 0.8413683772087097, 0.8442742228507996, 0.8474441766738892, 0.8527275323867798, 0.8519350290298462, 0.8485008478164673, 0.8533879518508911, 0.8516708612442017], "val_loss": [1.9051746129989624, 1.075266718864441, 0.8593372106552124, 0.7651077508926392, 0.7225602269172668, 0.6923460364341736, 0.6703498363494873, 0.633735716342926, 0.6067451238632202, 0.5971278548240662, 0.6105042695999146, 0.602042019367218, 0.5789183974266052, 0.5506578087806702, 0.5499786734580994, 0.5540575981140137, 0.5359058380126953, 0.507290780544281, 0.5021610260009766, 0.5235549211502075, 0.5018821954727173, 0.48283717036247253, 0.482150137424469, 0.4840052127838135, 0.4847872257232666, 0.4658760726451874, 0.4569099545478821, 0.46021535992622375, 0.46508845686912537, 0.4580444395542145, 0.4410717785358429, 0.4303005635738373, 0.4405299127101898, 0.42772766947746277, 0.42859408259391785, 0.4687533378601074, 0.42245247960090637, 0.4304749667644501, 0.40727677941322327, 0.4167095422744751, 0.4018937051296234, 0.42112788558006287, 0.40532660484313965, 0.40454477071762085, 0.40456587076187134, 0.39607250690460205, 0.39254066348075867, 0.3842352628707886, 0.3802203834056854, 0.3872591555118561, 0.3844851553440094, 0.40581417083740234, 0.3913137912750244], "val_accuracy": [0.609666645526886, 0.6576666831970215, 0.6819999814033508, 0.7289999723434448, 0.7363333106040955, 0.7486666440963745, 0.75, 0.7440000176429749, 0.7723333239555359, 0.7649999856948853, 0.7689999938011169, 0.7570000290870667, 0.7713333368301392, 0.7846666574478149, 0.7883333563804626, 0.7889999747276306, 0.8040000200271606, 0.8183333277702332, 0.8169999718666077, 0.7983333468437195, 0.8080000281333923, 0.8259999752044678, 0.8196666836738586, 0.8136666417121887, 0.8193333148956299, 0.8270000219345093, 0.8383333086967468, 0.8339999914169312, 0.8233333230018616, 0.8379999995231628, 0.8376666903495789, 0.8456666469573975, 0.8426666855812073, 0.8479999899864197, 0.8476666808128357, 0.8199999928474426, 0.8529999852180481, 0.8410000205039978, 0.8513333201408386, 0.8446666598320007, 0.8556666374206543, 0.8443333506584167, 0.8556666374206543, 0.8566666841506958, 0.8539999723434448, 0.8553333282470703, 0.8573333621025085, 0.8616666793823242, 0.8610000014305115, 0.8583333492279053, 0.859000027179718, 0.8510000109672546, 0.8579999804496765]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 3, 1, 3, 5, 6], [0, 0, 3, 0, 2, 1, 2], [26, 39, 39], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 7, 4, 7, 0, 5, 5, 4, 8, 0], [1, 2, 0, 4, 0, 3, 1], [16, 67], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [7, 3, 6, 2, 0, 6, 3, 7, 2, 9], [0, 2, 1, 4, 6, 0, 5, 2], [1, 69, 20], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 3, 16, 10, 6, 2, 18, 10, 8, 3, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad), tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.negative(grad)), tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 6, 4, 7, 0, 6, 5, 4, 4], [1, 2, 0, 3, 0, 3, 1, 4], [16, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [7, 0, 0, 2, 0, 3, 6, 0], [0, 1, 1, 4, 2, 2], [0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 6, 4, 1, 8, 4, 5, 0, 5, 5], [1, 7, 6, 1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 17, 9, 8, 2, 4, 2, 2, 1, 15, 10, 5, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.pow(grad, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.subtract(grad, grad)), tf.math.sqrt(tf.math.pow(tf.math.square(alpha), tf.math.negative(tf.math.square(tf.math.square(grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 5, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 5], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 1, 2, 0, 2], [26, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [8, 9, 4, 7, 0, 5, 0, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [7, 7, 1, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 2, 0, 1, 7, 3, 4, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303400754928589, 2.3027939796447754, 2.302716016769409, 2.3028745651245117, 2.3029401302337646, 2.3032243251800537], "accuracy": [0.09285431355237961, 0.09760929644107819, 0.09681680053472519, 0.0944393053650856, 0.09549596905708313, 0.09945846349000931], "val_loss": [2.3025803565979004, 2.3025965690612793, 2.302610158920288, 2.3025240898132324, 2.302645206451416, 2.3029978275299072], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.1003333330154419, 0.10133333504199982, 0.10333333164453506, 0.10100000351667404]}}]