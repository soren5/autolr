[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8094285726547241, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2094974517822266, 1.6099976301193237, 1.125368356704712, 1.0106604099273682, 0.9059088230133057, 0.8506478071212769, 0.8229158520698547, 0.7650408148765564, 0.7684493064880371, 0.7111173868179321, 0.6966488361358643, 0.6954613327980042, 0.6472165584564209, 0.6587469577789307, 0.6391876935958862, 0.6196803450584412, 0.6068280339241028, 0.5998271703720093, 0.5958706140518188, 0.5678573846817017, 0.5645253658294678, 0.5684111714363098, 0.5504278540611267, 0.5614527463912964, 0.5322312116622925, 0.5212612152099609, 0.5276698470115662, 0.5072661638259888, 0.5102044939994812, 0.511911928653717, 0.5009150505065918, 0.4979951083660126, 0.49040356278419495, 0.4840613007545471, 0.4702148139476776, 0.4760544002056122, 0.465691477060318, 0.4554705023765564, 0.4611457288265228, 0.4513241946697235, 0.4566556513309479], "accuracy": [0.27063795924186707, 0.5052172541618347, 0.6083740592002869, 0.6458855867385864, 0.6775855422019958, 0.6863030195236206, 0.7009642124176025, 0.7255316376686096, 0.7137762308120728, 0.7405890822410583, 0.7429665923118591, 0.7449478507041931, 0.7598732113838196, 0.7617223858833313, 0.7652885913848877, 0.7724210619926453, 0.7749306559562683, 0.7741381525993347, 0.7774402499198914, 0.7906485199928284, 0.798309326171875, 0.7880068421363831, 0.7961959838867188, 0.7964601516723633, 0.8018755912780762, 0.8058380484580994, 0.8018755912780762, 0.8101968169212341, 0.8137630224227905, 0.8140271902084351, 0.8123101592063904, 0.819442629814148, 0.8190463781356812, 0.8219521641731262, 0.8249900937080383, 0.8214238286018372, 0.8284242749214172, 0.8272355198860168, 0.8322546482086182, 0.8334434032440186, 0.8348963260650635], "val_loss": [1.9158395528793335, 1.0859957933425903, 0.8522413969039917, 0.778597354888916, 0.7375786304473877, 0.6870864033699036, 0.6530906558036804, 0.6127263307571411, 0.6510822176933289, 0.6106656193733215, 0.5731570720672607, 0.563906729221344, 0.5907489061355591, 0.5450515151023865, 0.5497077107429504, 0.5130080580711365, 0.5084949731826782, 0.510192334651947, 0.5005081295967102, 0.4912148416042328, 0.509626030921936, 0.5127392411231995, 0.47334232926368713, 0.4767141044139862, 0.46026289463043213, 0.4591502249240875, 0.4561857581138611, 0.4456401765346527, 0.45032909512519836, 0.4637247323989868, 0.44631487131118774, 0.42850247025489807, 0.41994771361351013, 0.4318849742412567, 0.42160746455192566, 0.4045970141887665, 0.41491788625717163, 0.45127424597740173, 0.4130418300628662, 0.4252053201198578, 0.42095983028411865], "val_accuracy": [0.6046666502952576, 0.6790000200271606, 0.7016666531562805, 0.7279999852180481, 0.7243333458900452, 0.7386666536331177, 0.7590000033378601, 0.7699999809265137, 0.7663333415985107, 0.7613333463668823, 0.7846666574478149, 0.7870000004768372, 0.7683333158493042, 0.7926666736602783, 0.7850000262260437, 0.8083333373069763, 0.8046666383743286, 0.8080000281333923, 0.8050000071525574, 0.8090000152587891, 0.7919999957084656, 0.7983333468437195, 0.8230000138282776, 0.8233333230018616, 0.8256666660308838, 0.8256666660308838, 0.8216666579246521, 0.8360000252723694, 0.8366666436195374, 0.828000009059906, 0.8323333263397217, 0.8373333215713501, 0.8429999947547913, 0.8346666693687439, 0.8386666774749756, 0.8523333072662354, 0.8403333425521851, 0.8220000267028809, 0.8496666550636292, 0.8360000252723694, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 4, 3, 5], [0, 0, 1, 0, 2], [26, 67, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 7, 4, 6, 5, 5, 4], [4, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [4, 3, 0, 2], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10257142782211304, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.divide_no_nan(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [17180214.0, 349415017545728.0, 5.737041552665053e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09536388516426086, 0.09853387624025345, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1226862080.0, 2.1819761008574464e+16, 5.2915692340135984e+23, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.10533333569765091, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 55], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 4, 0, 5, 5, 4], [2, 0, 3, 3, 0, 0], [16, 1, 63], [1, 0, 1, 0, 0, 1, 0, 1], [7, 3, 7, 2], [0, 6, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [11859252224.0, 934020382720.0, 8759093493760.0, 35899505115136.0, 97736946876416.0, 207446282862592.0], "accuracy": [0.09417514503002167, 0.10130762308835983, 0.10434553027153015, 0.09945846349000931, 0.09708096832036972, 0.09972262382507324], "val_loss": [100330594304.0, 2647044128768.0, 15354258522112.0, 49101949370368.0, 115368525824000.0, 225481437741056.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [3, 2, 4, 0, 0, 5, 5, 4], [2, 2, 0, 0, 0, 3, 1], [36, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [7, 8, 4, 2, 7, 0], [0, 1, 1, 4, 5], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 8, 4, 4, 2, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.pow(beta, tf.math.negative(beta)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.negative(grad))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4107885360717773, 2.337606430053711, 2.3422718048095703, 2.332003116607666, 2.326643943786621, 2.3399641513824463, 2.344170331954956], "accuracy": [0.17276449501514435, 0.09840179979801178, 0.09681680053472519, 0.1010434553027153, 0.09747721254825592, 0.10051512718200684, 0.09840179979801178], "val_loss": [2.336798906326294, 2.31421160697937, 2.315892219543457, 2.34468936920166, 2.3582663536071777, 2.334986925125122, 2.3207826614379883], "val_accuracy": [0.0989999994635582, 0.10100000351667404, 0.09533333033323288, 0.0989999994635582, 0.09533333033323288, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 2, 3, 1, 3, 4, 4, 8, 3, 3, 9], [0, 0, 1, 0, 1, 0, 0, 1], [0, 39, 39, 29, 94, 87], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 0, 1, 1], [83, 1], [0, 0, 1, 1], [0, 7], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310943841934204, 2.3094940185546875, 2.3105010986328125, 2.309873342514038, 2.3102684020996094, 2.310868978500366], "accuracy": [0.09021265059709549, 0.09615638852119446, 0.09377889335155487, 0.09192973375320435, 0.09166556596755981, 0.08915598690509796], "val_loss": [2.3077666759490967, 2.3077666759490967, 2.3077666759490967, 2.3077666759490967, 2.3077666759490967, 2.3077666759490967], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}, "mapping_values": [1, 19, 11, 8, 6, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}]