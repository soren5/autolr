[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2071945667266846, 1.5826530456542969, 1.1420754194259644, 0.9602375626564026, 0.9024509191513062, 0.7964468002319336, 0.7708581686019897, 0.7309776544570923, 0.7190178632736206, 0.7079097628593445, 0.6645691990852356, 0.6718683838844299, 0.6264382600784302, 0.6278120875358582, 0.6372507214546204, 0.5972231030464172, 0.6008566617965698, 0.5669425129890442, 0.5704490542411804, 0.5715922117233276, 0.5426824688911438, 0.5361405611038208, 0.5307276248931885, 0.5281819701194763, 0.5176852941513062, 0.515248715877533, 0.50690758228302, 0.4947645664215088, 0.4920397400856018, 0.481381893157959, 0.4822407364845276, 0.4789578318595886, 0.47417116165161133, 0.4669131934642792, 0.4531499147415161, 0.454037606716156], "accuracy": [0.2779025137424469, 0.5168405771255493, 0.5976753234863281, 0.6583014130592346, 0.6773213744163513, 0.7091533541679382, 0.7211728692054749, 0.7305507659912109, 0.7296261787414551, 0.7357020378112793, 0.7524765729904175, 0.7490423917770386, 0.7709681391716003, 0.7720248103141785, 0.7646281719207764, 0.7732135653495789, 0.7766477465629578, 0.789459764957428, 0.789988100528717, 0.7882710099220276, 0.7994980812072754, 0.8005547523498535, 0.806630551815033, 0.8043851256370544, 0.8083476424217224, 0.8140271902084351, 0.8150838613510132, 0.8202351331710815, 0.8187822103500366, 0.8264430165290833, 0.8216879963874817, 0.8231409192085266, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.8333113193511963], "val_loss": [1.9148222208023071, 1.0891375541687012, 0.9056211113929749, 0.8016678094863892, 0.760240912437439, 0.7038585543632507, 0.6770634055137634, 0.6463528871536255, 0.6302468180656433, 0.6203481554985046, 0.6302914023399353, 0.590358316898346, 0.618607759475708, 0.5765666365623474, 0.5648512244224548, 0.5980960130691528, 0.570862352848053, 0.5760148167610168, 0.5375343561172485, 0.559295654296875, 0.5193827152252197, 0.5377711653709412, 0.5133692026138306, 0.5084794163703918, 0.5028876662254333, 0.5047078728675842, 0.5013857483863831, 0.4947488605976105, 0.4889155328273773, 0.4944532513618469, 0.47344210743904114, 0.4975704252719879, 0.47418901324272156, 0.4700135588645935, 0.47032633423805237, 0.4672855734825134], "val_accuracy": [0.550000011920929, 0.6420000195503235, 0.6753333210945129, 0.6966666579246521, 0.7206666469573975, 0.7390000224113464, 0.7423333525657654, 0.7590000033378601, 0.7583333253860474, 0.7606666684150696, 0.7576666474342346, 0.7786666750907898, 0.768666684627533, 0.7796666622161865, 0.7956666946411133, 0.7693333625793457, 0.7820000052452087, 0.7749999761581421, 0.8009999990463257, 0.7850000262260437, 0.8076666593551636, 0.7979999780654907, 0.812333345413208, 0.8190000057220459, 0.8153333067893982, 0.8230000138282776, 0.812666654586792, 0.8236666917800903, 0.8263333439826965, 0.8223333358764648, 0.8383333086967468, 0.8216666579246521, 0.8303333520889282, 0.8303333520889282, 0.8253333568572998, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8154285550117493, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2134053707122803, 1.624954342842102, 1.1338337659835815, 1.0008518695831299, 0.8978868722915649, 0.8319671154022217, 0.7867643237113953, 0.7797313928604126, 0.7221076488494873, 0.7321807742118835, 0.6802094578742981, 0.6805272102355957, 0.6567468643188477, 0.6507680416107178, 0.6093053221702576, 0.6281948089599609, 0.6042395830154419, 0.6104198098182678, 0.5879146456718445, 0.5701357126235962, 0.5622652173042297, 0.5622567534446716, 0.5320968627929688, 0.5376232266426086, 0.5594648122787476, 0.5297479629516602, 0.5274612307548523, 0.5251073837280273, 0.5007231831550598, 0.5039457678794861, 0.4947454333305359, 0.5038963556289673, 0.48573580384254456, 0.4741670787334442, 0.48140066862106323, 0.4651036858558655, 0.46852678060531616, 0.4626114070415497, 0.45719826221466064, 0.44580239057540894, 0.4539525508880615, 0.44670939445495605, 0.44247275590896606, 0.4344276487827301, 0.4283239543437958, 0.4348413050174713, 0.434854120016098, 0.41599372029304504, 0.41734179854393005, 0.4231880009174347, 0.4076319932937622], "accuracy": [0.2678642272949219, 0.49649980664253235, 0.607449471950531, 0.6436402201652527, 0.6754721999168396, 0.6979262828826904, 0.7092854380607605, 0.7176066637039185, 0.7353057861328125, 0.7259278893470764, 0.750231146812439, 0.743891179561615, 0.7573636174201965, 0.763439416885376, 0.7781006693840027, 0.7708360552787781, 0.7773081660270691, 0.7769119143486023, 0.7817989587783813, 0.7926297783851624, 0.791969358921051, 0.793422281742096, 0.8104609847068787, 0.8031964302062988, 0.7943468689918518, 0.8064984679222107, 0.8082155585289001, 0.8054417967796326, 0.8158763647079468, 0.8212917447090149, 0.8189142942428589, 0.8158763647079468, 0.8300092220306396, 0.8271034359931946, 0.8220842480659485, 0.8305375576019287, 0.834632158279419, 0.8330471515655518, 0.833179235458374, 0.8405758738517761, 0.8359529972076416, 0.8405758738517761, 0.8417646288871765, 0.8424250483512878, 0.8451988101005554, 0.8421608805656433, 0.8445383906364441, 0.8511425256729126, 0.8531237840652466, 0.8455950617790222, 0.8521991968154907], "val_loss": [1.932054877281189, 1.0940368175506592, 0.8761460781097412, 0.8248839378356934, 0.8133132457733154, 0.6923036575317383, 0.7386012077331543, 0.6604268550872803, 0.6784683465957642, 0.6068857312202454, 0.6574811339378357, 0.5998278260231018, 0.609864354133606, 0.5922912359237671, 0.5790932774543762, 0.5654243230819702, 0.5624028444290161, 0.5423611998558044, 0.5256056189537048, 0.5230129361152649, 0.5357580184936523, 0.514208972454071, 0.5033515095710754, 0.5396102666854858, 0.5182506442070007, 0.48826858401298523, 0.49874040484428406, 0.48065316677093506, 0.48539412021636963, 0.4805194139480591, 0.4695245325565338, 0.47034692764282227, 0.4832542836666107, 0.46771934628486633, 0.4610516428947449, 0.46003457903862, 0.46409469842910767, 0.4673738479614258, 0.44152653217315674, 0.44621700048446655, 0.4342651069164276, 0.4457050859928131, 0.4387550950050354, 0.4321230351924896, 0.42913001775741577, 0.43483325839042664, 0.4303511679172516, 0.4359002411365509, 0.43485769629478455, 0.43366560339927673, 0.42070162296295166], "val_accuracy": [0.5836666822433472, 0.6650000214576721, 0.6890000104904175, 0.6823333501815796, 0.6893333196640015, 0.7383333444595337, 0.7153333425521851, 0.7436666488647461, 0.7396666407585144, 0.7706666588783264, 0.7363333106040955, 0.7726666927337646, 0.7710000276565552, 0.7836666703224182, 0.7793333530426025, 0.7916666865348816, 0.7940000295639038, 0.7946666479110718, 0.8116666674613953, 0.8009999990463257, 0.8023333549499512, 0.8153333067893982, 0.8133333325386047, 0.7886666655540466, 0.8006666898727417, 0.8220000267028809, 0.812666654586792, 0.82833331823349, 0.8236666917800903, 0.82833331823349, 0.8346666693687439, 0.8289999961853027, 0.8193333148956299, 0.8343333601951599, 0.8349999785423279, 0.8396666646003723, 0.8296666741371155, 0.8289999961853027, 0.8473333120346069, 0.847000002861023, 0.8489999771118164, 0.8446666598320007, 0.8423333168029785, 0.8456666469573975, 0.8500000238418579, 0.8510000109672546, 0.8450000286102295, 0.8450000286102295, 0.8443333506584167, 0.8413333296775818, 0.8463333249092102]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 5, 3, 8, 2], [4, 4, 3, 1, 0], [50, 1], [0, 0, 1, 1], [0, 7], [0, 6], [52], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 8, 5, 3, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.square(tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [97893916672.0, 15.313158988952637, 47.366668701171875, 102.1307373046875, 176.53343200683594, 270.99224853515625], "accuracy": [0.09192973375320435, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.739448547363281, 29.55257797241211, 76.05282592773438, 142.12310791015625, 227.940673828125, 333.1701965332031], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 9, 1, 3, 5], [0, 0, 3, 1, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 1, 9, 6, 6, 7, 0, 7, 1, 6, 7, 9, 6, 4, 0, 5, 8, 1, 2, 5], [2, 0, 3, 1, 0, 1, 4, 3, 3, 0, 3, 1, 2, 0, 3], [16, 1, 3, 38, 98, 90], [0, 0, 1, 0, 1, 1, 1], [3, 7, 6], [0, 6, 3, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 41, 26, 15, 6, 7, 3, 4, 1, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.pow(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(grad))))), alpha), tf.math.sqrt(tf.math.subtract(beta, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, sigma)), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 13], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 2, 0], [16, 1], [0, 0, 1, 1, 1], [6, 7], [0, 6, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 4, 2, 2, 1, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30377459526062, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 3, 1, 4, 5], [0, 0, 1, 0, 2], [26, 39, 30], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 3, 3, 1, 5], [76, 1], [0, 0, 1, 1], [0, 7], [0, 6], [98], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(grad, alpha))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]