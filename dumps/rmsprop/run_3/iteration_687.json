[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208099603652954, 1.598238468170166, 1.1279534101486206, 0.9723144173622131, 0.8915514349937439, 0.8429227471351624, 0.7776452302932739, 0.7418172955513, 0.7240157723426819, 0.7053462862968445, 0.681755542755127, 0.6809199452400208, 0.6476761698722839, 0.6264593601226807, 0.6171139478683472, 0.6097692251205444, 0.5861322283744812, 0.6065598726272583, 0.5611882209777832, 0.5685299038887024, 0.5579935908317566, 0.5261290073394775, 0.5523312091827393, 0.5519372224807739, 0.5239464640617371, 0.5143512487411499], "accuracy": [0.2793554365634918, 0.5120856165885925, 0.6065248847007751, 0.6532822847366333, 0.6837934255599976, 0.6890767216682434, 0.7190595865249634, 0.7290979027748108, 0.7298903465270996, 0.737022876739502, 0.7499669790267944, 0.7442874312400818, 0.7600052952766418, 0.7646281719207764, 0.772288978099823, 0.7746664881706238, 0.7878747582435608, 0.7697794437408447, 0.7877426743507385, 0.7880068421363831, 0.7954035401344299, 0.8082155585289001, 0.7936864495277405, 0.7976489067077637, 0.8103289008140564, 0.8112534880638123], "val_loss": [1.9180649518966675, 1.0887781381607056, 0.9127524495124817, 0.8351206183433533, 0.7687999606132507, 0.7014429569244385, 0.6638697385787964, 0.6508179903030396, 0.6391254663467407, 0.6686316132545471, 0.5965551733970642, 0.6216031312942505, 0.5939562320709229, 0.5996135473251343, 0.583556056022644, 0.5605173110961914, 0.5861844420433044, 0.5383995771408081, 0.5335668921470642, 0.532421886920929, 0.5153852701187134, 0.5135582089424133, 0.5391495227813721, 0.5058286786079407, 0.5019883513450623, 0.49402880668640137], "val_accuracy": [0.5636666417121887, 0.6666666865348816, 0.668666660785675, 0.6970000267028809, 0.7170000076293945, 0.7419999837875366, 0.7473333477973938, 0.7523333430290222, 0.7570000290870667, 0.737333357334137, 0.765666663646698, 0.7543333172798157, 0.7823333144187927, 0.765666663646698, 0.7756666541099548, 0.7853333353996277, 0.7710000276565552, 0.7883333563804626, 0.7883333563804626, 0.7976666688919067, 0.8143333196640015, 0.8100000023841858, 0.79666668176651, 0.809333324432373, 0.8090000152587891, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 0, 3, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [4, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 0, 0, 3, 1], [16, 7, 65], [0, 1, 0, 0, 0, 1, 1, 1], [7, 3, 0, 4], [0, 1, 1, 1], [49], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.pow(beta, beta), tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.pow(alpha, alpha)), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303745985031128, 2.302750825881958, 2.3027074337005615, 2.302725076675415, 2.302733898162842, 2.3026957511901855, 2.3028056621551514, 2.302889347076416, 2.3028404712677], "accuracy": [0.0940430611371994, 0.09338264167308807, 0.09998679161071777, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.10130762308835983, 0.09840179979801178, 0.09853387624025345], "val_loss": [2.3026254177093506, 2.302619218826294, 2.3026678562164307, 2.3026201725006104, 2.3026480674743652, 2.302593469619751, 2.302656650543213, 2.3026843070983887, 2.302567481994629], "val_accuracy": [0.0976666659116745, 0.09866666793823242, 0.09866666793823242, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.0976666659116745, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5], [0, 0, 3, 1, 5], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 3, 5, 4], [74], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), sigma), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303297996520996, 2.3025643825531006, 2.320925712585449, 2.3505966663360596, 26.026485443115234, 150.04727172851562], "accuracy": [0.10011887550354004, 0.10289261490106583, 0.0956280529499054, 0.09721305221319199, 0.09615638852119446, 0.10091137140989304], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.520719051361084, 592.0236206054688, 36.31331253051758], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.060333333909511566, 0.09833333641290665, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 1, 5, 5, 3, 0, 9], [0, 0, 1, 0, 2], [26, 11, 39, 92], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [7, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 1, 1, 1], [93, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 4, 12, 7, 5, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(beta, tf.math.negative(tf.math.square(beta))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 46], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 2, 9, 4, 0, 5, 5, 4, 7, 4], [2, 0, 3, 1, 0, 1], [16, 1, 12], [0, 0, 1, 1], [0, 5], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 16, 10, 6, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.pow(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]