[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8080000281333923, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2065773010253906, 1.5923173427581787, 1.1371569633483887, 0.9717169404029846, 0.8651021718978882, 0.8354156613349915, 0.7811309695243835, 0.761172354221344, 0.7273186445236206, 0.6923865079879761, 0.6991180181503296, 0.6595330834388733, 0.647369921207428, 0.6406850814819336, 0.6389156579971313, 0.6034073233604431, 0.6251405477523804, 0.5942195653915405, 0.5801897644996643, 0.5810473561286926, 0.5632912516593933, 0.5620177984237671, 0.5485293865203857, 0.5439121723175049, 0.5416132807731628, 0.536684513092041, 0.5301136374473572, 0.5197612047195435, 0.5153432488441467, 0.5198319554328918, 0.5082159638404846, 0.5031610727310181, 0.4890711307525635, 0.48585012555122375, 0.4836924970149994, 0.4838179051876068, 0.4791467785835266, 0.46838074922561646, 0.47096699476242065, 0.465672105550766, 0.4536359906196594, 0.44914156198501587, 0.4495403468608856, 0.46179839968681335, 0.4501287043094635, 0.4350884258747101, 0.42351800203323364, 0.4284273386001587, 0.4306248724460602, 0.42005041241645813, 0.4189465641975403, 0.4226480722427368, 0.4205531179904938, 0.40810057520866394, 0.4132724106311798, 0.406898558139801, 0.40530380606651306], "accuracy": [0.278959184885025, 0.516180157661438, 0.604939877986908, 0.6535464525222778, 0.6876237988471985, 0.6909258961677551, 0.7131158113479614, 0.7218332886695862, 0.7284374833106995, 0.7413815855979919, 0.7380794882774353, 0.7498348951339722, 0.757099449634552, 0.7621186375617981, 0.7602694630622864, 0.7744023203849792, 0.7618544697761536, 0.7802139520645142, 0.7835160493850708, 0.7832518815994263, 0.7877426743507385, 0.7864218950271606, 0.7972526550292969, 0.7975168228149414, 0.8014793395996094, 0.8001585006713867, 0.798309326171875, 0.8082155585289001, 0.8087438941001892, 0.8059701323509216, 0.81112140417099, 0.8186501264572144, 0.8117818236351013, 0.8257825970649719, 0.819442629814148, 0.8178576231002808, 0.8182538747787476, 0.828292191028595, 0.8285563588142395, 0.8319904804229736, 0.8308017253875732, 0.8350284099578857, 0.8300092220306396, 0.8273676037788391, 0.8360850811004639, 0.8389908671379089, 0.8418967127799988, 0.8403117060661316, 0.8391229510307312, 0.8446704745292664, 0.8457271456718445, 0.8467837572097778, 0.8411042094230652, 0.8466516733169556, 0.8433496356010437, 0.8565579056739807, 0.8507462739944458], "val_loss": [1.9073915481567383, 1.09278404712677, 0.8800209164619446, 0.8119562268257141, 0.7264869809150696, 0.6843061447143555, 0.7607719898223877, 0.6350895762443542, 0.6361820101737976, 0.6127209067344666, 0.605384111404419, 0.5745604038238525, 0.6361439228057861, 0.573334813117981, 0.5603919625282288, 0.5441997051239014, 0.545603334903717, 0.5480657815933228, 0.533227801322937, 0.5184606313705444, 0.5383447408676147, 0.5093176960945129, 0.4914691150188446, 0.4880159795284271, 0.4850136637687683, 0.48784953355789185, 0.4835926592350006, 0.4870007336139679, 0.4598335921764374, 0.4954855144023895, 0.46506041288375854, 0.4567643105983734, 0.4480789303779602, 0.4422844350337982, 0.46860161423683167, 0.4412790536880493, 0.4357709288597107, 0.4508015513420105, 0.4285910725593567, 0.4391386806964874, 0.4211924374103546, 0.41681230068206787, 0.4271053969860077, 0.4262741208076477, 0.41987064480781555, 0.41062912344932556, 0.40599358081817627, 0.4209382236003876, 0.4176320731639862, 0.4144788086414337, 0.399559885263443, 0.4012378752231598, 0.39009717106819153, 0.40114524960517883, 0.40294650197029114, 0.39605459570884705, 0.4152105450630188], "val_accuracy": [0.5903333425521851, 0.6380000114440918, 0.6916666626930237, 0.7163333296775818, 0.7266666889190674, 0.7426666617393494, 0.7036666870117188, 0.7549999952316284, 0.7566666603088379, 0.7546666860580444, 0.7739999890327454, 0.784333348274231, 0.7540000081062317, 0.7743333578109741, 0.7873333096504211, 0.7950000166893005, 0.7946666479110718, 0.7903333306312561, 0.7956666946411133, 0.8096666932106018, 0.7906666398048401, 0.8146666884422302, 0.8193333148956299, 0.815666675567627, 0.824999988079071, 0.812333345413208, 0.8236666917800903, 0.8213333487510681, 0.8293333053588867, 0.7983333468437195, 0.8376666903495789, 0.8259999752044678, 0.8366666436195374, 0.8429999947547913, 0.8193333148956299, 0.840666651725769, 0.8476666808128357, 0.831333339214325, 0.8413333296775818, 0.8399999737739563, 0.8473333120346069, 0.8510000109672546, 0.8413333296775818, 0.8426666855812073, 0.8503333330154419, 0.8516666889190674, 0.8533333539962769, 0.8463333249092102, 0.8413333296775818, 0.8410000205039978, 0.8486666679382324, 0.859333336353302, 0.8550000190734863, 0.8569999933242798, 0.8533333539962769, 0.8579999804496765, 0.8450000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 6, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4, 4, 3], [0, 2, 0, 4, 0, 3, 1], [16, 1, 39, 56], [0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 1, 0, 2, 5], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 16, 10, 6, 4, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.pow(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(alpha))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 4, 4, 1, 3, 6], [0, 0, 1, 0, 1, 1], [0, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 7, 6, 6, 6, 5, 0, 0], [2, 0, 3, 1, 4, 4, 3, 2], [16, 1], [0, 0, 0, 1], [0, 7, 9], [0, 6], [0, 21], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.square(alpha), grad)))), grad), tf.math.negative(tf.math.negative(grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}, "mapping_values": [1, 12, 6, 6, 3, 21, 13, 8, 1, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 0, 0, 3, 1], [77, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 0, 6, 3, 5, 2], [0, 2, 3, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 0, 4], [0, 6, 1], [0, 39], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 12, 7, 5, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.square(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [8.421071948049883e+20, 68.76921081542969, 12178.8896484375, 2078069.375, 353251936.0, 60053024768.0], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.458362579345703, 612.75, 105193.1484375, 17874060.0, 3040261120.0, 516721967104.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 8], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 8, 8], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310157060623169, 2.311124324798584, 2.3100059032440186, 2.3106179237365723, 2.3101141452789307, 2.310070753097534], "accuracy": [0.0882314071059227, 0.08651433140039444, 0.09549596905708313, 0.08981640636920929, 0.09219389408826828, 0.09536388516426086], "val_loss": [2.307978630065918, 2.307978630065918, 2.307978630065918, 2.307978630065918, 2.307978630065918, 2.307978630065918], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]