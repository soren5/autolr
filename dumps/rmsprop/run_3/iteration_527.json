[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8119999766349792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105872631073, 1.6063114404678345, 1.1424469947814941, 0.9828439950942993, 0.9181641936302185, 0.8132240176200867, 0.7869683504104614, 0.7881402969360352, 0.7180181741714478, 0.7259666323661804, 0.6827506422996521, 0.6790175437927246, 0.6774142384529114, 0.6281991600990295, 0.6094380617141724, 0.6272262930870056, 0.6156802177429199, 0.5915116667747498, 0.5833530426025391, 0.5882272720336914, 0.5653893947601318, 0.5674931406974792, 0.5447039604187012, 0.5389900803565979, 0.5320863127708435, 0.5215263366699219, 0.5064724087715149, 0.5214349031448364, 0.5107371211051941, 0.4968346655368805, 0.49087247252464294, 0.4788481891155243, 0.4788209795951843, 0.4784052073955536, 0.4756043255329132, 0.47341132164001465, 0.4551512897014618], "accuracy": [0.2654867172241211, 0.5042926669120789, 0.6032228469848633, 0.6514331102371216, 0.6725663542747498, 0.7051908373832703, 0.7137762308120728, 0.7082287669181824, 0.7339849472045898, 0.7346453666687012, 0.7442874312400818, 0.7430986762046814, 0.7453441023826599, 0.7582882046699524, 0.7741381525993347, 0.7627789974212646, 0.7675340175628662, 0.7784969210624695, 0.7824593782424927, 0.7812706232070923, 0.7884030938148499, 0.7849689722061157, 0.7998943328857422, 0.8005547523498535, 0.8038568496704102, 0.8080834746360779, 0.8098005652427673, 0.8014793395996094, 0.8082155585289001, 0.8146876096725464, 0.8195747137069702, 0.8240655064582825, 0.8214238286018372, 0.8208954930305481, 0.8227446675300598, 0.8231409192085266, 0.8327829837799072], "val_loss": [1.9277654886245728, 1.1364651918411255, 1.0160640478134155, 0.7962585687637329, 0.738178551197052, 0.6999819278717041, 0.6960615515708923, 0.6398095488548279, 0.6562802195549011, 0.6107873320579529, 0.6176456809043884, 0.6344479918479919, 0.5675619840621948, 0.5582522749900818, 0.5642922520637512, 0.564815878868103, 0.5398390293121338, 0.5496349930763245, 0.5223889350891113, 0.5216636061668396, 0.5244272351264954, 0.5274385809898376, 0.516309916973114, 0.49964258074760437, 0.49349528551101685, 0.48597079515457153, 0.5048789978027344, 0.4866495728492737, 0.4810999035835266, 0.47388172149658203, 0.4706134498119354, 0.46060067415237427, 0.46525660157203674, 0.46299535036087036, 0.4638647735118866, 0.47030019760131836, 0.4565606415271759], "val_accuracy": [0.518666684627533, 0.6033333539962769, 0.6179999709129333, 0.7026666402816772, 0.7279999852180481, 0.7250000238418579, 0.7440000176429749, 0.7580000162124634, 0.7593333125114441, 0.7766666412353516, 0.7699999809265137, 0.7606666684150696, 0.7889999747276306, 0.7946666479110718, 0.7873333096504211, 0.7756666541099548, 0.8006666898727417, 0.7853333353996277, 0.8113333582878113, 0.8133333325386047, 0.8066666722297668, 0.8096666932106018, 0.8053333163261414, 0.8209999799728394, 0.8243333101272583, 0.8253333568572998, 0.8083333373069763, 0.8223333358764648, 0.828000009059906, 0.8266666531562805, 0.8296666741371155, 0.8403333425521851, 0.8330000042915344, 0.8296666741371155, 0.8360000252723694, 0.8253333568572998, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [5, 2, 3, 1, 3, 7, 5, 5, 7, 9, 3, 4, 0, 8, 7, 4], [0, 0, 1, 2, 2, 0, 0, 0, 0, 1], [0, 39, 39, 47, 56, 38, 16], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 4, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [57], [1], [0], [2], [0]], "fitness": -0.19171428680419922, "mapping_values": [1, 26, 16, 10, 7, 4, 2, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.add(tf.math.square(tf.math.square(tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.29358172416687, 2.227874279022217, 2.2594943046569824, 2.3374218940734863, 2.3327577114105225, 2.341722011566162, 2.336475133895874], "accuracy": [0.11821424216032028, 0.1270637959241867, 0.1410645842552185, 0.09893012791872025, 0.09893012791872025, 0.10421344637870789, 0.10170386731624603], "val_loss": [2.1060781478881836, 2.06139874458313, 2.3256161212921143, 2.3316848278045654, 2.357203722000122, 2.3452038764953613, 2.332193613052368], "val_accuracy": [0.11299999803304672, 0.19233334064483643, 0.09966666996479034, 0.10166666656732559, 0.10233332961797714, 0.0989999994635582, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 6], [0, 0, 1, 2, 0], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 7, 6, 3, 8, 2, 9, 2, 9], [2, 0, 3, 1, 0], [16, 1, 11, 48], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 15, 10, 5, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), alpha), tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.953779697418213, 19.627614974975586, 36.56084060668945, 53.05012512207031, 66.90769958496094, 77.7424087524414], "accuracy": [0.1018359512090683, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [13.629484176635742, 29.81595802307129, 47.278011322021484, 62.363555908203125, 74.71733093261719, 84.02215576171875], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 1, 8, 6, 6], [0, 2, 1, 0, 2, 0, 1, 0], [0, 39, 50, 54], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [4, 2, 0, 6, 3, 8, 9], [2, 0, 2, 1, 0], [16, 19], [0, 1, 1, 1], [0, 9], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), alpha)), tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 18, 10, 8, 4, 11, 7, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 2, 3, 1, 3, 5, 3, 9, 7], [0, 0, 1, 0, 2, 0, 3], [37, 39, 46, 22, 86], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0], [0, 7], [4, 6], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 16, 9, 7, 5, 2, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098745346069336, 2.310009002685547, 2.3110742568969727, 2.3101675510406494, 2.3114137649536133, 2.3088181018829346], "accuracy": [0.09060890227556229, 0.09179764986038208, 0.09232597798109055, 0.0944393053650856, 0.0870426595211029, 0.09113723784685135], "val_loss": [2.3079733848571777, 2.3079733848571777, 2.3079733848571777, 2.3079733848571777, 2.3079733848571777, 2.3079733848571777], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]